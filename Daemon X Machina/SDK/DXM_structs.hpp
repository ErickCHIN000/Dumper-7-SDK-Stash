#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// ENUMS
//---------------------------------------------------------------------------------------------------------------------

enum class ETTLEAbnormalStatusType : uint8
{
	Abnormal_None                  = 0,
	Abnormal_Burning               = 1,
	Abnormal_Stuning               = 2,
	Abnormal_Acid                  = 3,
	Abnormal_Flash                 = 4,
	Abnormal_Jamming               = 5,
	Abnormal_Max                   = 6,
};

enum class ETTLEnemyDamageReactionType : uint8
{
	ReactionType_All               = 0,
	ReactionType_NoKnockOut        = 1,
	ReactionType_NoKnockBack       = 2,
	ReactionType_None              = 3,
	ReactionType_Max               = 4,
};

enum class ETTLDestroyablePartsType : uint8
{
	DestroyablePartsType_Head      = 0,
	DestroyablePartsType_Chest     = 1,
	DestroyablePartsType_Back      = 2,
	DestroyablePartsType_LeftArm   = 3,
	DestroyablePartsType_RightArm  = 4,
	DestroyablePartsType_Legs      = 5,
	DestroyablePartsType_Max       = 6,
};

enum class ETTLEPartMenuIndex : uint8
{
	Part_Head                      = 0,
	Part_Body                      = 1,
	Part_Inside                    = 2,
	Part_LeftArm                   = 3,
	Part_RightArm                  = 4,
	Part_Legs                      = 5,
	Part_ShoulderWeapon            = 6,
	Part_RightWeapon               = 7,
	Part_LeftWeapon                = 8,
	Part_Option                    = 9,
	Part_RightWeaponRack           = 10,
	Part_LeftWeaponRack            = 11,
	Part_Max                       = 12,
};

enum class ETTLDamageState : uint8
{
	Damage_Land                    = 0,
	Damage_LandSlide               = 1,
	Damage_LandSlideED             = 2,
	Damage_LandED                  = 3,
	Damage_Flying                  = 4,
	Damage_Guard                   = 5,
	Damage_GuardEnd                = 6,
	Damage_GuardLandSlide          = 7,
	Damage_GuardLandSlideED        = 8,
	Damage_Tsubazeriai             = 9,
	Damage_TsubazeriaiED           = 10,
	Damage_HitOnAir                = 11,
	Damage_FlyingED                = 12,
	Damage_OnFalling               = 13,
	Damage_NoKnockBack             = 14,
	Damage_SmallKnockBackStart     = 15,
	Damage_SmallKnockBackLandST    = 16,
	Damage_SmallKnockBackFlyingST  = 17,
	Damage_SmallKnockBackLandLP    = 18,
	Damage_SmallKnockBackFlyingLP  = 19,
	Damage_SmallKnockBackLandED    = 20,
	Damage_SmallKnockBackFlyingED  = 21,
	Damage_SmallKnockBackFlyToLand = 22,
	Damage_FallDown                = 23,
	Damage_Captured                = 24,
	Damage_TractorBeam             = 25,
	Damage_OuterKnockOutStart      = 26,
	Damage_OuterFallDamageST       = 27,
	Damage_OuterFallDamageLP       = 28,
	Damage_OuterFlyToFall          = 29,
	Damage_OuterJumpFall           = 30,
	Damage_OuterSmallKnockBackOnLand = 31,
	Damage_Max                     = 32,
};

enum class ETTLEActionType : uint8
{
	EAction_MenuOk                 = 0,
	EAction_MenuCancel             = 1,
	EAction_MenuPause              = 2,
	EAction_MenuEscape             = 3,
	EAction_MenuDirectChat         = 4,
	EAction_MenuUp                 = 5,
	EAction_MenuDown               = 6,
	EAction_MenuLeft               = 7,
	EAction_MenuRight              = 8,
	EAction_MenuA                  = 9,
	EAction_MenuB                  = 10,
	EAction_MenuX                  = 11,
	EAction_MenuY                  = 12,
	EAction_MenuL1                 = 13,
	EAction_MenuR1                 = 14,
	EAction_MenuL2                 = 15,
	EAction_MenuR2                 = 16,
	EAction_MenuL3                 = 17,
	EAction_MenuR3                 = 18,
	EAction_MenuStart              = 19,
	EAction_MenuSelect             = 20,
	EAction_MenuAnalogLX           = 21,
	EAction_MenuAnalogLY           = 22,
	EAction_MenuAnalogRX           = 23,
	EAction_MenuAnalogRY           = 24,
	EAction_MenuAnalogLUp          = 25,
	EAction_MenuAnalogLDown        = 26,
	EAction_MenuAnalogLLeft        = 27,
	EAction_MenuAnalogLRight       = 28,
	EAction_MenuAnalogRUp          = 29,
	EAction_MenuAnalogRDown        = 30,
	EAction_MenuAnalogRLeft        = 31,
	EAction_MenuAnalogRRight       = 32,
	EAction_MenuMax                = 33,
	EAction_LoadingMenuA           = 34,
	EAction_LoadingMenuB           = 35,
	EAction_LoadingMenuMax         = 36,
	EAction_EventPadUp             = 37,
	EAction_EventPadDown           = 38,
	EAction_EventPadLeft           = 39,
	EAction_EventPadRight          = 40,
	EAction_EventA                 = 41,
	EAction_EventB                 = 42,
	EAction_EventX                 = 43,
	EAction_EventY                 = 44,
	EAction_EventL1                = 45,
	EAction_EventR1                = 46,
	EAction_EventL2                = 47,
	EAction_EventR2                = 48,
	EAction_EventL3                = 49,
	EAction_EventR3                = 50,
	EAction_EventStart             = 51,
	EAction_EventSelect            = 52,
	EAction_EventAnalogLUp         = 53,
	EAction_EventAnalogLDown       = 54,
	EAction_EventAnalogLLeft       = 55,
	EAction_EventAnalogLRight      = 56,
	EAction_EventMax               = 57,
	EAction_ArsenalAttackRight     = 58,
	EAction_ArsenalAttackLeft      = 59,
	EAction_ArsenalAttackShoulder  = 60,
	EAction_ArsenalAttackSpecial   = 61,
	EAction_ArsenalReload          = 62,
	EAction_ArsenalReloadRight     = 63,
	EAction_ArsenalReloadLeft      = 64,
	EAction_ArsenalPurgeRight      = 65,
	EAction_ArsenalPurgeLeft       = 66,
	EAction_ArsenalPurge           = 67,
	EAction_ArsenalJump            = 68,
	EAction_ArsenalQuickBoost      = 69,
	EAction_ArsenalBoostOff        = 70,
	EAction_ArsenalGuard           = 71,
	EAction_ArsenalMirage          = 72,
	EAction_ArsenalThrowCatch      = 73,
	EAction_ArsenalThrowExecRight  = 74,
	EAction_ArsenalThrowExecLeft   = 75,
	EAction_ArsenalThrowRelease    = 76,
	EAction_ArsenalThrowAimCancel  = 77,
	EAction_ArsenalCameraLock      = 78,
	EAction_ArsenalGetOff          = 79,
	EAction_ArsenalEject           = 80,
	EAction_ArsenalEquipmentSwitch = 81,
	EAction_ArsenalEquipmentPrev   = 82,
	EAction_ArsenalEquipmentNext   = 83,
	EAction_ArsenalEquipmentUp     = 84,
	EAction_ArsenalEquipmentDown   = 85,
	EAction_ArsenalEquipmentLeft   = 86,
	EAction_ArsenalEquipmentRight  = 87,
	EAction_ArsenalWeaponRackLeft  = 88,
	EAction_ArsenalWeaponRackRight = 89,
	EAction_ArsenalEquipmentCancel = 90,
	EAction_ArsenalFemtoShiftAssult = 91,
	EAction_ArsenalFemtoShiftWing  = 92,
	EAction_ArsenalFemtoShiftShield = 93,
	EAction_ArsenalFemtoShiftPrev  = 94,
	EAction_ArsenalFemtoShiftNext  = 95,
	EAction_ArsenalFemtoShiftCancel = 96,
	EAction_ArsenalLightningMove   = 97,
	EAction_ArsenalMax             = 98,
	EAction_HumanAttackRight       = 99,
	EAction_HumanAttackLeft        = 100,
	EAction_HumanAttackShoulder    = 101,
	EAction_HumanAttackBlade       = 102,
	EAction_HumanAttackSpecial     = 103,
	EAction_HumanJump              = 104,
	EAction_HumanDodge             = 105,
	EAction_HumanCameraLock        = 106,
	EAction_HumanGetOn             = 107,
	EAction_HumanSuicide           = 108,
	EAction_HumanDash              = 109,
	EAction_HumanTouch             = 110,
	EAction_HumanCatch             = 111,
	EAction_HumanRepair            = 112,
	EAction_HumanBoostOff          = 113,
	EAction_HumanMax               = 114,
	EAction_PlayerMoveForward      = 115,
	EAction_PlayerMoveRight        = 116,
	EAction_PlayerCameraLookUp     = 117,
	EAction_PlayerCameraTurn       = 118,
	EAction_PlayerMoveTwice        = 119,
	EAction_PlayerCameraTwice      = 120,
	EAction_PlayerAimCameraLookUp  = 121,
	EAction_PlayerAimCameraTurn    = 122,
	EAction_PlayerEquipmentForward = 123,
	EAction_PlayerEquipmentRight   = 124,
	EAction_SpectatorChangeL       = 125,
	EAction_SpectatorChangeR       = 126,
	EAction_2vs2TeamChange         = 127,
	EAction_MultiplayReady         = 128,
	EAction_TYPE_MAX               = 129,
	EAction_MAX                    = 130,
};

enum class ETTLEPauseMenuRifleRangeOnOff : uint8
{
	OFF                            = 0,
	ON                             = 1,
	Max                            = 2,
};

enum class ETTLEPauseMenuRifleRangeConfig : uint8
{
	FullBullet                     = 0,
	GuideVisible                   = 1,
	Max                            = 2,
};

enum class ETTLEInteractType : uint8
{
	TTLEInteract_Default           = 0,
	TTLEInteract_Mission           = 1,
	TTLEInteract_CharaEdit         = 2,
	TTLEInteract_IceCream          = 3,
	TTLEInteract_Network           = 4,
	TTLEInteract_Corpse            = 5,
	TTLEInteract_ScanObject        = 6,
	TTLEInteract_Debug             = 7,
	TTLEInteract_NetConsole        = 8,
	TTLEInteract_OnlineNetConsole  = 9,
	TTLEInteract_OnlineSurvivalConsole = 10,
	TTLEInteract_PlayLogSelf       = 11,
	TTLEInteract_PlayLogOtherIdx0  = 12,
	TTLEInteract_PlayLogOtherIdx1  = 13,
	TTLEInteract_PlayLogOtherIdx2  = 14,
	TTLEInteract_PlayLogOtherIdx3  = 15,
	TTLEInteract_Max               = 16,
};

enum class ETTLEmoteType : uint8
{
	None                           = 0,
	Sit                            = 1,
	DeadLie                        = 2,
	LandDumper                     = 3,
	Dance01                        = 4,
	Max                            = 5,
};

enum class ETTLAIActionType : uint8
{
	AIAction_None                  = 0,
	AIAction_Chase                 = 1,
	AIAction_Patrol                = 2,
	AIAction_Wait                  = 3,
	AIAction_KeepDistance          = 4,
	AIAction_GoAroundSide          = 5,
	AIAction_StraightMove          = 6,
	AIAction_Guard                 = 7,
	AIAction_ChangeMoveType        = 8,
	AIAction_PatrolTargetPoint     = 9,
	AIAction_PatrolActionArea      = 10,
	AIAction_PatrolDirectLocation  = 11,
	AIAction_BlockAttack           = 12,
	AIAction_Special               = 13,
	AIAction_Escape                = 14,
	AIAction_ExChangeWeapon        = 15,
	AIAction_GetOnAndOff           = 16,
	AIAction_AttackWeaponRight     = 17,
	AIAction_AttackWeaponLeft      = 18,
	AIAction_AttackWeaponShoulder  = 19,
	AIAction_AttackWeaponSpecial   = 20,
	AIAction_AttackWeaponLeftRight = 21,
	AIAction_AttackWeaponRightShoulder = 22,
	AIAction_AttackWeaponLeftShoulder = 23,
	AIAction_AttackWeaponAll       = 24,
	AIAction_GuardWithMove         = 25,
	AIAction_MAX                   = 26,
};

enum class ETTLAIReaction : uint8
{
	OverHeat                       = 0,
	FoundFirstTarget               = 1,
	DefeatedTarget                 = 2,
	NearbyMissle                   = 3,
	KnockbackStart                 = 4,
	KnockbackFinish                = 5,
	NearbyBullet                   = 6,
	SupportByDamage                = 7,
	SupportByAttack                = 8,
	GoAroundFinish                 = 9,
	TakeDown                       = 10,
	GotDown                        = 11,
	GotFlash                       = 12,
	CloseAttackCounter             = 13,
	FriendlyFire                   = 14,
	TTLAIReaction_MAX              = 15,
};

enum class ETTLEMissionResult : uint8
{
	MissionResult_Success          = 0,
	MissionResult_Failure          = 1,
	MissionResult_FailureButClear  = 2,
	MissionResult_Retire           = 3,
	MissionResult_PvP_Win1P        = 4,
	MissionResult_PvP_Win2P        = 5,
	MissionResult_PvP_Draw         = 6,
	MissionResult_PvP_DoubleKO     = 7,
	MissionResult_PvP_TimeUp_Win1P = 8,
	MissionResult_PvP_TimeUp_Win2P = 9,
	MissionResult_PvP_TimeUp_Draw  = 10,
	MissionResult_PvP_Retire_Win1P = 11,
	MissionResult_PvP_Retire_Win2P = 12,
	MissionResult_2on2_WinTeam1    = 13,
	MissionResult_2on2_WinTeam2    = 14,
	MissionResult_2on2_Draw        = 15,
	MissionResult_2on2_DoubleKO    = 16,
	MissionResult_2on2_TimeUp_WinTeam1 = 17,
	MissionResult_2on2_TimeUp_WinTeam2 = 18,
	MissionResult_2on2_TimeUp_Draw = 19,
	MissionResult_2on2_Retire_WinTeam1 = 20,
	MissionResult_2on2_Retire_WinTeam2 = 21,
	MissionResult_Max              = 22,
};

enum class ETTLEventFinishedType : uint8
{
	EventFinished_Normal           = 0,
	EventFinished_Skip             = 1,
	EventFinished_Back             = 2,
	EventFinished_Delete           = 3,
	EventFinished_MAX              = 4,
};

enum class ETTLWholeBarrrierColliPhase : uint8
{
	Ready                          = 0,
	Opening                        = 1,
	Opened                         = 2,
	Closed                         = 3,
	ETTLWholeBarrrierColliPhase_MAX = 4,
};

enum class ETTLEPartsNewState : uint8
{
	NewState_NewObtain             = 0,
	NewState_AlreadyRead           = 1,
	NewState_MAX                   = 2,
};

enum class ETTLPartsType : uint8
{
	PartsType_Head                 = 0,
	PartsType_Body                 = 1,
	PartsType_LeftArm              = 2,
	PartsType_RightArm             = 3,
	PartsType_Legs                 = 4,
	PartsType_Inside               = 5,
	PartsType_GunWeapon            = 6,
	PartsType_CloseWeapon          = 7,
	PartsType_ShoulderWeapon       = 8,
	PartsType_SupportWeapon        = 9,
	PartsType_Max                  = 10,
};

enum class ETTLEArsenalParamMenuState : uint8
{
	State_None                     = 0,
	State_TotalParam               = 1,
	State_EquipmentList            = 2,
	State_TotalSimpleParam         = 3,
	State_PartsFeatureParam        = 4,
	State_PartsFeatureParamCompact = 5,
	State_PartsParam               = 6,
	State_PartsDetailParam         = 7,
	State_PartsMetadataParam       = 8,
	State_AttachmentListEquippedToParts = 9,
	State_AttachmentParam          = 10,
	State_MAX                      = 11,
};

enum class EFTTLOptionSystemAutoSaveType : uint8
{
	Type_ON                        = 0,
	Type_OFF                       = 1,
	Type_MAX                       = 2,
};

enum class EFTTLOptionSystemVibrationType : uint8
{
	Type_Soft                      = 0,
	Type_Normal                    = 1,
	Type_Hard                      = 2,
	Type_None                      = 3,
	Type_MAX                       = 4,
};

enum class EFTTLOptionSystemTextSpeedType : uint8
{
	Type_Default                   = 0,
	Type_Speedy                    = 1,
	Type_NoWeight                  = 2,
	Type_MAX                       = 3,
};

enum class EFTTLOptionSystemMessageDisplayType : uint8
{
	Type_Visible                   = 0,
	Type_Hidden                    = 1,
	Type_MAX                       = 2,
};

enum class EFTTLOptionSoundOperatorType : uint8
{
	Type_Man                       = 0,
	Type_Woman                     = 1,
	Type_DLC                       = 2,
	Type_MAX                       = 3,
};

enum class EFTTLOptionSoundOutputType : uint8
{
	Type_Stereo                    = 0,
	Type_Surround                  = 1,
	Type_Max                       = 2,
};

enum class EFTTLOptionGameVisilibityType : uint8
{
	Type_OFF                       = 0,
	Type_ON                        = 1,
	Type_MAX                       = 2,
};

enum class EFTTLOptionGamePlayerNameDisplayType : uint8
{
	Type_PlayerName                = 0,
	Type_ID                        = 1,
	Type_OFF                       = 2,
	Type_MAX                       = 3,
};

enum class EFTTLOptionGameMiniMapType : uint8
{
	Type_HeadUp                    = 0,
	Type_NorthUp                   = 1,
	Type_MAX                       = 2,
};

enum class EFTTLOptionGameCameraType : uint8
{
	Type_Normal                    = 0,
	Type_Reverse                   = 1,
	Type_MAX                       = 2,
};

enum class ETTLOptionActiveKeyboardConfigType : uint8
{
	Type_Preset_1                  = 0,
	Type_Custom_1                  = 1,
	Type_Custom_2                  = 2,
	Type_Custom_3                  = 3,
	Type_Max                       = 4,
};

enum class ETTLEKeyboardActionKind : uint8
{
	Button                         = 0,
	Analog                         = 1,
	TwiceX                         = 2,
	TwiceY                         = 3,
	MAX                            = 4,
};

enum class ETTLOptionActiveKeyConfigType : uint8
{
	Type_Preset_1                  = 0,
	Type_Preset_2                  = 1,
	Type_Preset_3                  = 2,
	Type_Custom_1                  = 3,
	Type_Custom_2                  = 4,
	Type_Custom_3                  = 5,
	Type_Max                       = 6,
};

enum class ETTLEInputType : uint8
{
	EInput_PadUp                   = 0,
	EInput_PadDown                 = 1,
	EInput_PadLeft                 = 2,
	EInput_PadRight                = 3,
	EInput_PadA                    = 4,
	EInput_PadB                    = 5,
	EInput_PadX                    = 6,
	EInput_PadY                    = 7,
	EInput_PadL1                   = 8,
	EInput_PadR1                   = 9,
	EInput_PadL2                   = 10,
	EInput_PadR2                   = 11,
	EInput_PadL3                   = 12,
	EInput_PadR3                   = 13,
	EInput_PadStart                = 14,
	EInput_PadSelect               = 15,
	EInput_PadAnalogLX             = 16,
	EInput_PadAnalogLY             = 17,
	EInput_PadAnalogRX             = 18,
	EInput_PadAnalogRY             = 19,
	EInput_PadAnalogLUp            = 20,
	EInput_PadAnalogLDown          = 21,
	EInput_PadAnalogLLeft          = 22,
	EInput_PadAnalogLRight         = 23,
	EInput_PadAnalogRUp            = 24,
	EInput_PadAnalogRDown          = 25,
	EInput_PadAnalogRLeft          = 26,
	EInput_PadAnalogRRight         = 27,
	EInput_PadAnalogTwiceL         = 28,
	EInput_PadAnalogTwiceL_Step    = 29,
	EInput_PadAnalogTwiceR         = 30,
	EInput_PadAnalogTwiceR_Step    = 31,
	EInput_TYPE_MAX                = 32,
	EInput_Keyboard                = 33,
	EInput_Keyboard_MAX            = 34,
	EInput_MAX                     = 35,
};

enum class ETTLNetwarkFailureType : uint8
{
	NetDriverAlreadyExists         = 0,
	NetDriverCreateFailure         = 1,
	NetDriverListenFailure         = 2,
	ConnectionLost                 = 3,
	ConnectionTimeout              = 4,
	FailureReceived                = 5,
	OutdatedClient                 = 6,
	OutdatedServer                 = 7,
	PendingConnectionFailure       = 8,
	NetGuidMismatch                = 9,
	NetChecksumMismatch            = 10,
	ForceLogoutFromNex             = 11,
	DisconnectFromOnlineSystem     = 12,
	DisconnectClientOnBattle       = 13,
	DisconnectOn2vs2               = 14,
	FailedStartDuelRound           = 15,
	FaildEndRound                  = 16,
	FaildEndDuelRound              = 17,
	FaildRankingData               = 18,
	ForceLogoutOnOnlineMenuOfflineSession = 19,
	MAX                            = 20,
};

enum class ETTLEInputDeviceType : uint8
{
	GamePad                        = 0,
	Keyboard                       = 1,
	Max                            = 2,
};

enum class ETTLMessageLogItemType : uint8
{
	Chat                           = 0,
	DefeatEnemy                    = 1,
	DeadArsenal                    = 2,
	SelfDeadArsenal                = 3,
	SelfDeadEnemyArsenal           = 4,
	DeadOuter                      = 5,
	SelfDeadOuter                  = 6,
	SelfDeadEnemyOuter             = 7,
	AimedOnWatching                = 8,
	PickUpParts                    = 9,
	EquipPickUpParts               = 10,
	Encount                        = 11,
	ToOuter                        = 12,
	ToArsenal                      = 13,
	Respawn                        = 14,
	EnemyRespawn                   = 15,
	Eject                          = 16,
	EscapeNpc                      = 17,
	EscapeEnemy                    = 18,
	RequestDuel                    = 19,
	StartDuel                      = 20,
	EndDuel                        = 21,
	DecreaseReward                 = 22,
	IncreaseReward                 = 23,
	Join                           = 24,
	ChatHudCustom                  = 25,
	LeavePlayerMission             = 26,
	LeaveEnemyPlayerMission        = 27,
	InteractDecal                  = 28,
	AllyStealArsenal               = 29,
	EnemyStealArsenal              = 30,
	Max                            = 31,
};

enum class ETTLEReadyToMissionErrorType : uint8
{
	None                           = 0,
	Error2on2_NotEnoughPlayer      = 1,
	Error2on2_BiasOfStatus         = 2,
	Error1on1_NotEnoughPlayer      = 3,
	TTLEReadyToMissionErrorType_MAX = 4,
};

enum class ETTLFeryParamDeathType : uint8
{
	OnSky                          = 0,
	OnGround                       = 1,
	Max                            = 2,
};

enum class ETTLFeryParamBaseFeryTurnEasingFunc : uint8
{
	Linear                         = 0,
	Step                           = 1,
	SinIn                          = 2,
	SinOut                         = 3,
	SinInOut                       = 4,
	EaseIn                         = 5,
	EaseOut                        = 6,
	EaseInOut                      = 7,
	ExpoIn                         = 8,
	ExpoOut                        = 9,
	ExpoInOut                      = 10,
	CircularIn                     = 11,
	CircularOut                    = 12,
	CircularInOut                  = 13,
	ETTLFeryParamBaseFeryTurnEasingFunc_MAX = 14,
};

enum class ETTLHelicopterParamHeliType : uint8
{
	Alert                          = 0,
	Patrol                         = 1,
	Max                            = 2,
};

enum class ETTLTankParamArmorTankType : uint8
{
	Patrol                         = 0,
	Idle                           = 1,
	MAX                            = 2,
};

enum class ETTLDroneParamTurretType : uint8
{
	Patrol                         = 0,
	Fixed                          = 1,
	MAX                            = 2,
};

enum class ETTLDroneParamDroneType : uint8
{
	Assault                        = 0,
	Patrol                         = 1,
	Security                       = 2,
	MAX                            = 3,
};

enum class ETTLWreckPose : uint8
{
	Normal                         = 0,
	Solomon                        = 1,
	Max                            = 2,
};

enum class ETTLTsubazeriaiScoreType : uint8
{
	TsubazeriaiScore_Weak          = 0,
	TsubazeriaiScore_Normal        = 1,
	TsubazeriaiScore_Strong        = 2,
	TsubazeriaiScore_Max           = 3,
};

enum class ETTLEPauseMenuItem : uint8
{
	TTLEPauseMenuItem_Continue     = 0,
	TTLEPauseMenuItem_Option       = 1,
	TTLEPauseMenuItem_Manual       = 2,
	TTLEPauseMenuItem_Exit         = 3,
	TTLEPauseMenuItem_ReadyToStart = 4,
	TTLEPauseMenuItem_QuitGame     = 5,
	TTLEPauseMenuItem_Max          = 6,
};

enum class ETTLActionVoiceGenderType : uint8
{
	VoiceGender_Male               = 0,
	VoiceGender_Female             = 1,
	VoiceGender_Common             = 2,
	VoiceGender_MAX                = 3,
};

enum class ETTLActionVoice : uint8
{
	StartShoot                     = 0,
	StartThrow                     = 1,
	StartThrowHeavy                = 2,
	CloseAttack                    = 3,
	CloseAttackCombo               = 4,
	MissShoot                      = 5,
	Catch                          = 6,
	CatchHeavy                     = 7,
	GetOff                         = 8,
	GetOn                          = 9,
	Jump                           = 10,
	AbnormalStatus                 = 11,
	Damage                         = 12,
	Recover                        = 13,
	Dead                           = 14,
	DrainStamina                   = 15,
	Landing                        = 16,
	MAX                            = 17,
};

enum class ETTLAdjustMaterialParamType : uint8
{
	Scalar                         = 0,
	Color_R                        = 1,
	Max                            = 2,
};

enum class ETTLActiveEmissiveCharacterType : uint8
{
	Auto                           = 0,
	Arsenal                        = 1,
	Others                         = 2,
	Max                            = 3,
};

enum class ETTLBaseBossOgreSwordAIActNo : uint8
{
	Equipped                       = 0,
	Lost                           = 1,
	Wait                           = 2,
	Captured                       = 3,
	Useless                        = 4,
	MAX                            = 5,
};

enum class ETTLBaseHeliFormState : uint8
{
	Free                           = 0,
	Formation                      = 1,
	ForceFormation                 = 2,
	Max                            = 3,
};

enum class ETTLBaseHeliDamageReact : uint8
{
	None                           = 0,
	Knockback_L                    = 1,
	Knockback_M                    = 2,
	Knockback_H                    = 3,
	Down                           = 4,
	Death                          = 5,
	Max                            = 6,
};

enum class ETTLBaseHeliAIState : uint8
{
	OnGround                       = 0,
	CanAttack                      = 1,
	MAX                            = 2,
};

enum class ETTLBaseHeliAIMoveBit : uint8
{
	Initialize                     = 0,
	EnableTarget                   = 1,
	Finish                         = 2,
	CollideHit                     = 3,
	TargetLeft                     = 4,
	TargetRight                    = 5,
	CollideLeft                    = 6,
	CollideRight                   = 7,
	AroundLeft                     = 8,
	AroundRight                    = 9,
	TargetOnGround                 = 10,
	BaseLocation                   = 11,
	Cover                          = 12,
	MAX                            = 13,
};

enum class ETTLENBossTrtsLaser01AIActNo : uint8
{
	Idle                           = 0,
	DropOut                        = 1,
	PlayerUse                      = 2,
	MAX                            = 3,
};

enum class ETTLENBossTrtsMissile01AIActNo : uint8
{
	Idle                           = 0,
	ShootMissile                   = 1,
	Dead                           = 2,
	MAX                            = 3,
};

enum class ETTLArmorTankType : uint8
{
	Patrol                         = 0,
	Idle                           = 1,
	Max                            = 2,
};

enum class ETTLAIHeightThreshold : uint8
{
	AIHeightThreshold_None         = 0,
	AIHeightThreshold_Upper        = 1,
	AIHeightThreshold_Lower        = 2,
	AIHeightThreshold_MAX          = 3,
};

enum class ETTLArsenalBurstShootPart : uint8
{
	Right                          = 0,
	Left                           = 1,
	Shoulder                       = 2,
	MAX                            = 3,
};

enum class ETTLArsenalBurstShootState : uint8
{
	None                           = 0,
	Wait                           = 1,
	Shoot                          = 2,
	MAX                            = 3,
};

enum class ETTLBaseBossLastAIActSet : uint8
{
	None                           = 0,
	Wait                           = 1,
	Move                           = 2,
	Rush                           = 3,
	DawnHammer                     = 4,
	TractorBeam                    = 5,
	SmallDamage                    = 6,
	BigDamageToAnger               = 7,
	BigDamage                      = 8,
	Death                          = 9,
	EmergencyMove                  = 10,
	Stun                           = 11,
	MAX                            = 12,
};

enum class ETTLBaseBossLastAIDamage : uint8
{
	Small                          = 0,
	Big                            = 1,
	Death                          = 2,
	DeathLoop                      = 3,
	Stun                           = 4,
	MAX                            = 5,
};

enum class ETTLBaseBossLastAIActNo : uint8
{
	None                           = 0,
	Wait                           = 1,
	Move                           = 2,
	Damage                         = 3,
	Anger                          = 4,
	TractorBeam                    = 5,
	Rush                           = 6,
	DawnHammer                     = 7,
	MAX                            = 8,
};

enum class ETTLBaseBossLastFnelAIAct : uint8
{
	None                           = 0,
	AttachWait                     = 1,
	FollowOwnerShoot               = 2,
	FollowTargetShoot              = 3,
	FollowAttachShoot              = 4,
	Damage                         = 5,
	DawnHammer                     = 6,
	MAX                            = 7,
};

enum class ETTLBaseBossOgreAIActNo : uint8
{
	Wait                           = 0,
	Turn                           = 1,
	Walk                           = 2,
	Jump                           = 3,
	Grasping                       = 4,
	Kick                           = 5,
	Tackle                         = 6,
	Damage                         = 7,
	Missile                        = 8,
	Anger                          = 9,
	Guard                          = 10,
	SwordSlash                     = 11,
	SwordStamp                     = 12,
	BackHandBlow                   = 13,
	MAX                            = 14,
};

enum class ETTLBaseBossTrinAIActNo : uint8
{
	None                           = 0,
	Wait                           = 1,
	PathMove                       = 2,
	ActorMove                      = 3,
	LocationMove                   = 4,
	PointMove                      = 5,
	Damage                         = 6,
	Anger                          = 7,
	Rush                           = 8,
	Death                          = 9,
	MAX                            = 10,
};

enum class ETTLBaseBossTrinContAIActNo : uint8
{
	None                           = 0,
	PathWait                       = 1,
	FreeWait                       = 2,
	PathMove                       = 3,
	FreeMove                       = 4,
	MAX                            = 5,
};

enum class ETTLBaseDroneSecuState : uint8
{
	None                           = 0,
	Patrol                         = 1,
	Caution                        = 2,
	Warning                        = 3,
	AfterWarning                   = 4,
	Max                            = 5,
};

enum class ETTLKeepOutAreaType : uint8
{
	KeepOutArea_Sphere             = 0,
	KeepOutArea_Capsule            = 1,
	KeepOutArea_MAX                = 2,
};

enum class ETTLENBossSnakGenStopType : uint8
{
	None                           = 0,
	Turn                           = 1,
	Missile                        = 2,
	Tail                           = 3,
	Transformation                 = 4,
	DamageReaction                 = 5,
	CircleInner                    = 6,
	CircleOuter                    = 7,
	ETTLENBossSnakGenStopType_MAX  = 8,
};

enum class ETTLENBossSnakActions : uint8
{
	None                           = 0,
	Turn                           = 1,
	Missile                        = 2,
	Tail                           = 3,
	Transformation                 = 4,
	DamageReaction                 = 5,
	Circle                         = 6,
	Chace                          = 7,
	ArkGunMode                     = 8,
	RightAngle                     = 9,
	MissionShootToTarget           = 10,
	ETTLENBossSnakActions_MAX      = 11,
};

enum class ETTLENBossTrts01AIActNo : uint8
{
	Idle                           = 0,
	Move                           = 1,
	Stamp                          = 2,
	WholeBodyBarrier               = 3,
	SliceLaser                     = 4,
	DamageReaction                 = 5,
	Death                          = 6,
	CannonAttack                   = 7,
	SummonEnemy                    = 8,
	LargeLaser                     = 9,
	Turn                           = 10,
	LongJump                       = 11,
	ShortJump                      = 12,
	StampJump                      = 13,
	Anger                          = 14,
	ShootMissile                   = 15,
	Tackle                         = 16,
	MAX                            = 17,
};

enum class ETTLENFeryBossActions : uint8
{
	None                           = 0,
	Wait                           = 1,
	Turn                           = 2,
	Chace                          = 3,
	Patrol                         = 4,
	Discharge                      = 5,
	TransAngry                     = 6,
	BreakAway                      = 7,
	FrontReturn                    = 8,
	Reinforce                      = 9,
	DamageReaction                 = 10,
	MissileFire                    = 11,
	MultiLaser                     = 12,
	MachieGun                      = 13,
	ETTLENFeryBossActions_MAX      = 14,
};

enum class ETTLENFeryWaitFlags : uint8
{
	Time                           = 1,
	Rotation                       = 2,
	ETTLENFeryWaitFlags_MAX        = 3,
};

enum class ETTLOuterMove : uint8
{
	None                           = 0,
	Actor                          = 1,
	Location                       = 2,
	Path                           = 3,
	Direct                         = 4,
	MAX                            = 5,
};

enum class ETTLAIFriendParamType : uint8
{
	AIFriend_FollowStart_Dist      = 0,
	AIFriend_FollowEnd_Dist        = 1,
	AIFriend_MAX                   = 2,
};

enum class ETTLAITrueFalseEnum : uint8
{
	AI_True                        = 0,
	AI_False                       = 1,
	AI_TF_Max                      = 2,
	AI_MAX                         = 3,
};

enum class ETTLAILongCloseEnum : uint8
{
	AIRange_Long                   = 0,
	AIRange_Close                  = 1,
	AIRange_Invalid                = 2,
	AIRange_Max                    = 3,
};

enum class ETTLAIYesNoEnum : uint8
{
	AI_No                          = 0,
	AI_Yes                         = 1,
	AI_Max                         = 2,
};

enum class ETTLAIWeaponEnum : uint8
{
	AIWeapon_None                  = 0,
	AIWeapon_Right                 = 1,
	AIWeapon_Left                  = 2,
	AIWeapon_Shoulder              = 3,
	AIWeapon_Special               = 4,
	AIWeapon_CloseRight            = 5,
	AIWeapon_CloseLeft             = 6,
	AIWeapon_LeftRight             = 7,
	AIWeapon_RightShoulder         = 8,
	AIWeapon_LeftShoulder          = 9,
	AIWeapon_All                   = 10,
	AIWeapon_Max                   = 11,
};

enum class ETTLAIMoveMode : uint8
{
	AIMove_Ground                  = 0,
	AIMove_Air                     = 1,
	AIMove_MAX                     = 2,
};

enum class ETTLAIAvoidMissileAction : uint8
{
	AvoidMissile_None              = 0,
	AvoidMissile_Boost             = 1,
	AvoidMissile_DescentBoost      = 2,
	AvoidMissile_WeaponShield      = 3,
	AvoidMissile_FemtoShield       = 4,
	AvoidMissile_MAX               = 5,
};

enum class ETTLAIWeaponPart : uint8
{
	AIPart_RightWeapon             = 0,
	AIPart_LeftWeapon              = 1,
	AIPart_ShoulderWeapon          = 2,
	AIPart_SupportWeapon           = 3,
	AIPart_RightRack               = 4,
	AIPart_LeftRack                = 5,
	AIPart_MAX                     = 6,
};

enum class ETTLAISlot : uint8
{
	Slot_0                         = 0,
	Slot_1                         = 1,
	Slot_2                         = 2,
	Slot_3                         = 3,
	Slot_4                         = 4,
	Slot_5                         = 5,
	Slot_6                         = 6,
	Slot_7                         = 7,
	Slot_Random                    = 8,
	Slot_MAX                       = 9,
};

enum class ETTLAIControllerSwitch : uint8
{
	Switch0                        = 0,
	Switch1                        = 1,
	Switch2                        = 2,
	Switch3                        = 3,
	SwitchMAX                      = 4,
	ETTLAIControllerSwitch_MAX     = 5,
};

enum class ETTLAIFemtoShiftType : uint8
{
	AIFemto_ASSULT                 = 0,
	AIFemto_WING                   = 1,
	AIFemto_SHIELD                 = 2,
	AIFemto_MAX                    = 3,
};

enum class ETTLAIFlag : uint8
{
	Flag_0                         = 0,
	Flag_1                         = 1,
	Flag_2                         = 2,
	Flag_3                         = 3,
	Flag_4                         = 4,
	Flag_5                         = 5,
	Flag_6                         = 6,
	Flag_7                         = 7,
	Flag_8                         = 8,
	Flag_9                         = 9,
	Flag_10                        = 10,
	Flag_11                        = 11,
	Flag_12                        = 12,
	Flag_13                        = 13,
	Flag_14                        = 14,
	Flag_15                        = 15,
	Flag_Max                       = 16,
};

enum class ETTLAIState : uint8
{
	AIState_0                      = 0,
	AIState_1                      = 1,
	AIState_2                      = 2,
	AIState_3                      = 3,
	AIState_Support                = 4,
	AIState_Max                    = 5,
};

enum class ETTLAlongSplinePath_State : uint8
{
	Idle                           = 0,
	Move                           = 1,
	Max                            = 2,
};

enum class ETTLMontageType : uint8
{
	None                           = 0,
	Craw                           = 1,
	StandToAttack                  = 2,
	SitToAttack                    = 3,
	Max                            = 4,
};

enum class ETTLInitTransitionType : uint8
{
	Normal                         = 0,
	Random                         = 1,
	ETTLInitTransitionType_MAX     = 2,
};

enum class ETTLAnimalAnimType : uint8
{
	Idle                           = 0,
	Walk                           = 1,
	Run                            = 2,
	SitDownBegin                   = 3,
	Sit                            = 4,
	SitDownEnd                     = 5,
	Collision                      = 6,
	Dead                           = 7,
	Max                            = 8,
};

enum class ETTLArkGunnerBothSidePoint : uint8
{
	None                           = 0,
	Charge                         = 1,
	Muzzle                         = 2,
	TTLArkGunnerBothSidePoint_MAX  = 3,
};

enum class ETTLArsenalIKType : uint8
{
	AllTimes                       = 0,
	StopBySpeed                    = 1,
	StopBySpeedInterp              = 2,
	ETTLArsenalIKType_MAX          = 3,
};

enum class ETTLArsenalTurnMotionType : uint8
{
	FtoB                           = 0,
	BtoF                           = 1,
	LtoR                           = 2,
	RtoL                           = 3,
	LFtoRB                         = 4,
	RFtoLB                         = 5,
	LBtoRF                         = 6,
	RBtoLF                         = 7,
	ETTLArsenalTurnMotionType_MAX  = 8,
};

enum class ETTLArsenalCatchMontageType : uint8
{
	ThrowLoop                      = 0,
	ThrowEnd                       = 1,
	Pick                           = 2,
	Stance                         = 3,
	Reload                         = 4,
	PutDown                        = 5,
	ThrowEndPurge                  = 6,
	FailCatch                      = 7,
	CatchMontage_Max               = 8,
	ETTLArsenalCatchMontageType_MAX = 9,
};

enum class ETTLArsenalAnimState_Transport : uint8
{
	None                           = 0,
	Start                          = 1,
	Transporting                   = 2,
	Transport_End                  = 3,
	MAX                            = 4,
};

enum class ETTLArsenalCloseRangeAttackComboType : uint8
{
	None                           = 0,
	First                          = 1,
	RightSlice                     = 2,
	LeftSlice                      = 3,
	RightSliceB                    = 4,
	LeftSliceB                     = 5,
	MAX                            = 6,
};

enum class ETTLArsenalCloseRangeAttackComboInputState : uint8
{
	ContinuingOld                  = 0,
	Released                       = 1,
	NewlyPressed                   = 2,
	OverTime                       = 3,
	MAX                            = 4,
};

enum class ETTLArsenalCloseRangeAttackComboInputPhase : uint8
{
	None                           = 0,
	Preceding                      = 1,
	Official                       = 2,
	CheckDerivation                = 3,
	End                            = 4,
	MAX                            = 5,
};

enum class ETTLArsenalCloseRangeAttackPhase : uint8
{
	None                           = 0,
	Stance                         = 1,
	Assault                        = 2,
	Attack                         = 3,
	Follow                         = 4,
	End                            = 5,
	Tsubazeriai                    = 6,
	TsubazeriaiAttack              = 7,
	TsubazeriaiKnockback           = 8,
	TsubazeriaiStepback            = 9,
	ShieldRepelled                 = 10,
	MAX                            = 11,
};

enum class ETTLArsenalCloseRangeAttackType : uint8
{
	None                           = 0,
	RightWeapon                    = 1,
	LeftWeapon                     = 2,
	Double                         = 3,
	CaughtWeapon                   = 4,
	MAX                            = 5,
};

enum class ETTLCatchTargetType : uint8
{
	CatchTargetType_None           = 0,
	CatchTargetType_Normal         = 1,
	CatchTargetType_Pick           = 2,
	CatchTargetType_Grenade        = 3,
	CatchTargetType_Transport      = 4,
	CatchTargetType_Weapon         = 5,
	CatchTargetType_Max            = 6,
};

enum class ETTLCatchableState : uint8
{
	CatchableState_None            = 0,
	CatchableState_Catching_Checking = 1,
	CatchableState_Catching_NoCaught = 2,
	CatchableState_Catching_Caught = 3,
	CatchableState_Picking_NoCaught = 4,
	CatchableState_Picking_Caught  = 5,
	CatchableState_CatchIdle       = 6,
	CatchableState_Aiming          = 7,
	CatchableState_Throwing_Caught = 8,
	CatchableState_Throwing_NoCaught = 9,
	CatchableState_Purging_Caught  = 10,
	CatchableState_Purging_NoCaught = 11,
	CatchableState_Putting_Caught  = 12,
	CatchableState_Putting_NoCaught = 13,
	CatchableState_Max             = 14,
};

enum class ETTLThrowType : uint8
{
	ThrowType_Normal               = 0,
	ThrowType_OuterPunchThrow      = 1,
	ThrowType_Grenade              = 2,
	MAX                            = 3,
};

enum class ETTLArsenalState_Transport : uint8
{
	None                           = 0,
	Picking                        = 1,
	Transporting                   = 2,
	PutDown                        = 3,
	MAX                            = 4,
};

enum class ETTLWeaponRackSlotIndex : uint8
{
	Left                           = 0,
	Right                          = 1,
	ETTLWeaponRackSlotIndex_MAX    = 2,
};

enum class ETTLChangeEquipPartsState : uint8
{
	EquipState_None                = 0,
	EquipState_MaterialFade        = 1,
	EquipState_Cutoff              = 2,
	EquipState_ImmediateChange     = 3,
	MAX                            = 4,
};

enum class ETTLChangeEquipMode : uint8
{
	Equip_None                     = 0,
	Equip_Parts                    = 1,
	Equip_RightWeapon              = 2,
	Equip_LeftWeapon               = 3,
	MAX                            = 4,
};

enum class ETTLPanelPosition : uint8
{
	None                           = 0,
	Top                            = 1,
	Bottom                         = 2,
	Left                           = 3,
	Right                          = 4,
	MAX                            = 5,
};

enum class ETTLEquipHUDPanelValueState : uint8
{
	Normal                         = 0,
	Yellow                         = 1,
	Red                            = 2,
	Empty                          = 3,
	Infinity                       = 4,
	MAX                            = 5,
};

enum class ETTLWarningTypeForArsenalHUD : uint8
{
	None                           = 0,
	HP30Percent                    = 1,
	HP10Percent                    = 2,
	TMPWarning                     = 3,
	TMPOverHeat                    = 4,
	HeatSource                     = 5,
	NoAmmo                         = 6,
	CantThrow                      = 7,
	FemtoShortage                  = 8,
	FemtoZone                      = 9,
	StatusBurn                     = 10,
	StatusStun                     = 11,
	StatusAcid                     = 12,
	StatusFlash                    = 13,
	StatusRaderJamming             = 14,
	Ground                         = 15,
	SelfDestruct                   = 16,
	FriendlyFire                   = 17,
	WeaponWarning                  = 18,
	StaminaOver                    = 19,
	Max                            = 20,
};

enum class ETTLAnimationCommand : uint8
{
	None                           = 0,
	InArsenal                      = 1,
	OutArsenal                     = 2,
	InOuter                        = 3,
	OutOuter                       = 4,
	Max                            = 5,
};

enum class ETTLWeaponPart : uint8
{
	Left                           = 0,
	Right                          = 1,
	Shoulder                       = 2,
	Support                        = 3,
	Max                            = 4,
};

enum class ETTLArsenalHUDWeaponKind : uint8
{
	None                           = 0,
	Right                          = 1,
	Left                           = 2,
	Shoulder                       = 3,
	Support                        = 4,
	Max                            = 5,
};

enum class ETTLArsenalHUDAnimationCommandKind : uint8
{
	Command_None                   = 0,
	Command_PlayInArsenalHUD       = 1,
	Command_PlayOutArsenalHUD      = 2,
	Command_PlayInOuterHUD         = 3,
	Command_PlayOutOuterHUD        = 4,
	Command_WaitOnly               = 5,
	Command_ShowOuterHUD           = 6,
	Command_HideOuterHUD           = 7,
	Command_PlayInMissionProgressHUD = 8,
	Command_PlayOutMissionProgressHUD = 9,
	Command_ShowMissionProgressHUD = 10,
	Command_HideMissionProgressHUD = 11,
	Max                            = 12,
};

enum class ETTLArsenalHUDCommandKind : uint8
{
	Command_None                   = 0,
	Command_HideHUD                = 1,
	Command_ShowHUD                = 2,
	Command_PlayInArsenalHUD       = 3,
	Command_PlayOutArsenalHUD      = 4,
	Command_PlayInOuterHUD         = 5,
	Command_PlayOutOuterHUD        = 6,
	Command_WaitOnly               = 7,
	Command_ShowOuterHUD           = 8,
	Command_HideOuterHUD           = 9,
	Command_ShowArsenalHUD         = 10,
	Command_HideArsenalHUD         = 11,
	Command_SetUpMissionProgressHUD = 12,
	Command_PlayInMissionProgressHUD = 13,
	Command_PlayOutMissionProgressHUD = 14,
	Command_ShowMissionProgressHUD = 15,
	Command_HideMissionProgressHUD = 16,
	Command_PlaySubGoalMissionProgressHUD = 17,
	Command_SetArsenalHUDCustom    = 18,
	Max                            = 19,
};

enum class ETTLArsenalItemMarkerHUD_DisplayType : uint8
{
	Item_EnemyBroken               = 0,
	Item_Interact                  = 1,
	Item_Console                   = 2,
	Item_Catchable                 = 3,
	Item_WreckedArsenal            = 4,
	Item_Collected                 = 5,
	Item_InstalledArea             = 6,
	Item_TransportGoalArea         = 7,
	Item_BossWeapon                = 8,
	Item_TractorWeapon             = 9,
	Item_Respawn                   = 10,
	Item_FieldAccess               = 11,
	Max                            = 12,
};

enum class ETTLArsenalSniperModeAttackType : uint8
{
	None                           = 0,
	RightWeapon                    = 1,
	LeftWeapon                     = 2,
	Double                         = 3,
	MAX                            = 4,
};

enum class ETTLOuterFlyState : uint8
{
	FlyState_Start                 = 0,
	FlyState_Wait                  = 1,
	FlyState_MoveStart             = 2,
	FlyState_Move                  = 3,
	FlyState_MoveEnd               = 4,
	FlyState_BoostStart            = 5,
	FlyState_Boost                 = 6,
	FlyState_Turn                  = 7,
	FlyState_Blade                 = 8,
	FlyState_Max                   = 9,
};

enum class ETTLFemtoShiftMeshType : uint8
{
	FemtoShift_Left1               = 0,
	FemtoShift_Left2               = 1,
	FemtoShift_Left3               = 2,
	FemtoShift_Right1              = 3,
	FemtoShift_Right2              = 4,
	FemtoShift_Right3              = 5,
	FemtoShift_Max                 = 6,
};

enum class ETTLMultiplayFemtoShiftState : uint8
{
	None                           = 0,
	ExecAsault                     = 1,
	ExecWing                       = 2,
	ExecShield                     = 3,
	Finish                         = 4,
	TTLMultiplayFemtoShiftState_MAX = 5,
};

enum class ETTLEOuterExplosionPhase : uint8
{
	OuterExplosion_Preparing       = 0,
	OuterExplosion_BeforeExplosion = 1,
	OuterExplosion_Explode         = 2,
	OuterExplosion_CancelImmediately = 3,
	OuterExplosion_None            = 4,
	OuterExplosion_MAX             = 5,
};

enum class ETTLEOuterThrowPhase : uint8
{
	OuterThrow_Prepare             = 0,
	OuterThrow_Throwing            = 1,
	OuterThrow_UnFire              = 2,
	OuterThrow_Nothing             = 3,
	OuterThrow_MAX                 = 4,
};

enum class ETTLGuardType : uint8
{
	Guard_None                     = 0,
	Guard_Left                     = 1,
	Guard_Right                    = 2,
	Guard_Both                     = 3,
	Guard_Max                      = 4,
};

enum class ETTLLegsPartsState : uint8
{
	LegsParts_Land                 = 0,
	LegsParts_Open                 = 1,
	LegsParts_Close                = 2,
	LegsParts_Max                  = 3,
};

enum class ETTLEArsenalPaintMaterialType : uint8
{
	Material_Head                  = 0,
	Material_Body                  = 1,
	Material_ArmL                  = 2,
	Material_ArmL_Break            = 3,
	Material_ArmR                  = 4,
	Material_ArmR_Break            = 5,
	Material_Legs                  = 6,
	Material_Legs2                 = 7,
	Material_Hips                  = 8,
	Material_WeaponRackLeft        = 9,
	Material_WeaponRackRight       = 10,
	Material_Max                   = 11,
};

enum class ETTLEArsenalPartMeshType : uint8
{
	PartsMesh_Head                 = 0,
	PartsMesh_Body                 = 1,
	PartsMesh_ArmL                 = 2,
	PartsMesh_ArmR                 = 3,
	PartsMesh_Legs                 = 4,
	PartsMesh_WeaponRackLeft       = 5,
	PartsMesh_WeaponRackRight      = 6,
	PartsMesh_Max                  = 7,
};

enum class ETTLPickUpHUD2Mode : uint8
{
	None                           = 0,
	Invisible                      = 1,
	PickUpMarker                   = 2,
	PickUpDialog                   = 3,
	ItemMarker                     = 4,
	DetailDialog                   = 5,
	MAX                            = 6,
};

enum class ETTLRaderHUDCommandKind : uint8
{
	ERaderHUDCommandKind_None      = 0,
	ERaderHUDCommandKind_AddHighlight = 1,
	ERaderHUDCommandKind_RemoveHighlight = 2,
	EStatus_TYPE_MAX               = 3,
	TTLRaderHUDCommandKind_MAX     = 4,
};

enum class ETTLRaderObjectUVIndex : uint8
{
	Arsenal                        = 0,
	Boss                           = 1,
	OtherCharacter                 = 2,
	Missile                        = 3,
	Pouch                          = 4,
	RectArea                       = 5,
	RectObject                     = 6,
	Outer                          = 7,
	Direction                      = 8,
	CircleArea                     = 9,
	CircleObject                   = 10,
	RectJammer                     = 11,
	Dead                           = 12,
	GroundCharacter                = 13,
	Hidden                         = 14,
	MAX                            = 15,
};

enum class ETTLRaderObjectIconType : uint8
{
	MyArsenal                      = 0,
	AllyArsenal                    = 1,
	EnemyArsenal                   = 2,
	TargetArsenal                  = 3,
	MyBoss                         = 4,
	AllyBoss                       = 5,
	EnemyBoss                      = 6,
	TargetBoss                     = 7,
	MyOtherCharacter               = 8,
	AllyOtherCharacter             = 9,
	EnemyOtherCharacter            = 10,
	TargetOtherCharacter           = 11,
	AllyGroundCharacter            = 12,
	EnemyGroundCharacter           = 13,
	TargetGroundCharacter          = 14,
	MyMissile                      = 15,
	AllyMissile                    = 16,
	EnemyMissile                   = 17,
	TargetMissile                  = 18,
	MyPouch                        = 19,
	AllyPouch                      = 20,
	EnemyPouch                     = 21,
	TargetPouch                    = 22,
	MySunk                         = 23,
	AllySunk                       = 24,
	EnemySunk                      = 25,
	TargetSunk                     = 26,
	RectangleFemtoZone             = 27,
	RectangleHeatSource            = 28,
	MyOuterCharacter               = 29,
	AllyOuterCharacter             = 30,
	EnemyOuterCharacter            = 31,
	TargetOuterCharacter           = 32,
	BulletItem                     = 33,
	FemtoItem                      = 34,
	HealObject                     = 35,
	ContainerObject                = 36,
	TargetContainerObject          = 37,
	MyDirection                    = 38,
	AllyDirection                  = 39,
	AllyTargetDirection            = 40,
	EnemyDirection                 = 41,
	EnemyTargetDirection           = 42,
	CircleFemtoZone                = 43,
	CircleHeatSource               = 44,
	TargetArea                     = 45,
	Wreck                          = 46,
	Corpse                         = 47,
	MAX                            = 48,
};

enum class ETTLERaderObjectType : uint8
{
	ERaderObjectType_None          = 0,
	ERaderObjectType_MyCharacter   = 1,
	ERaderObjectType_MyOuter       = 2,
	ERaderObjectType_MyBoss        = 3,
	ERaderObjectType_AllyCharacter = 4,
	ERaderObjectType_AllyOuter     = 5,
	ERaderObjectType_AllyNormalCharacter = 6,
	ERaderObjectType_AllyGroundCharacter = 7,
	ERaderObjectType_AllyBoss      = 8,
	ERaderObjectType_EnemyArsenal  = 9,
	ERaderObjectType_EnemyOuter    = 10,
	ERaderObjectType_EnemyNormalCharacter = 11,
	ERaderObjectType_EnemyGroundCharacter = 12,
	ERaderObjectType_EnemyBoss     = 13,
	ERaderObjectType_EnemyMissile  = 14,
	ERaderObjectType_MyWreckedCharacter = 15,
	ERaderObjectType_AllyWreckedCharacter = 16,
	ERaderObjectType_EnemyWreckedCharacter = 17,
	ERaderObjectType_MySunkCharacter = 18,
	ERaderObjectType_AllySunkCharacter = 19,
	ERaderObjectType_EnemySunkCharacter = 20,
	ERaderObjectType_Direction     = 21,
	ERaderObjectType_FieldItem     = 22,
	ERaderObjectType_FieldFemtoItem = 23,
	ERaderObjectType_FieldBulletItem = 24,
	ERaderObjectType_HealObject    = 25,
	ERaderObjectType_HeatSource    = 26,
	ERaderObjectType_FemtoZoneCircle = 27,
	ERaderObjectType_FemtoZoneRectangle = 28,
	ERaderObjectType_StageObject   = 29,
	ERaderObjectType_Container     = 30,
	ERaderObjectType_AllyTargetDirection = 31,
	ERaderObjectType_EnemyTargetDirection = 32,
	ERaderObjectType_AllyDirection = 33,
	ERaderObjectType_EnemyDirection = 34,
	EStatus_TYPE_MAX               = 35,
	TTLERaderObjectType_MAX        = 36,
};

enum class ETTLEAssembleCategoryInputAction : uint8
{
	DecideMenu                     = 0,
	CancelMenu                     = 1,
	OpendSub                       = 2,
	ClosedSub                      = 3,
	Error                          = 4,
	MAX                            = 5,
};

enum class ETTLEAssembleCategoryMenuState : uint8
{
	None                           = 0,
	OpenMain                       = 1,
	OpenSub                        = 2,
	TTLEAssembleCategoryMenuState_MAX = 3,
};

enum class ETTLEAssembleMenuInputAction : uint8
{
	Action_None                    = 0,
	Action_Decide                  = 1,
	Action_Decide_StartPartsChange = 2,
	Action_Decide_PartsDecide      = 3,
	Action_Decide_CheckParts       = 4,
	Action_Decide_AttachSlot       = 5,
	Action_Decide_Attach           = 6,
	Action_Decide_StartBattleData  = 7,
	Action_Decide_StartFlagItem    = 8,
	Action_DecideError             = 9,
	Action_DecideError_GunArm      = 10,
	Action_Decide_Max              = 11,
	Action_Cancel                  = 12,
	Action_Cancel_EndPartsChange   = 13,
	Action_Cancel_EndAssemble      = 14,
	Action_Cancel_EndRequiedSelect = 15,
	Action_Cancel_AttachSlot       = 16,
	Action_Cancel_Attach           = 17,
	Action_Cancel_EndBattleData    = 18,
	Action_Cancel_EndFlagItem      = 19,
	Action_Cancel_Max              = 20,
	Action_Class_Save              = 21,
	Action_Class_Load              = 22,
	Action_Class_Parts             = 23,
	Action_Class_Paint             = 24,
	Action_Class_Name              = 25,
	Action_Class_Delete            = 26,
	Action_Class_Max               = 27,
	Action_MAX                     = 28,
};

enum class ETTLEAssembleSubCategory : uint8
{
	SubCategory_All                = 0,
	SubCategory_Arm_Gun            = 1,
	SubCategory_Arm_Laser          = 2,
	SubCategory_Arm_Close          = 3,
	SubCategory_Arm_Special        = 4,
	SubCategory_Arm_Shield         = 5,
	SubCategory_Arm_Max            = 6,
	SubCategory_Shoulder_Missile   = 7,
	SubCategory_Shoulder_ShoulderCannon = 8,
	SubCategory_Shoulder_RailGun   = 9,
	SubCategory_Shoulder_Blitz     = 10,
	SubCategory_Shoulder_HealCannon = 11,
	SubCategory_Shoulder_Max       = 12,
	SubCategory_Support_Grenades   = 13,
	SubCategory_Support_Mine       = 14,
	SubCategory_Support_Assist     = 15,
	SubCategory_Support_Max        = 16,
	SubCategory_Class_Save         = 17,
	SubCategory_Class_Load         = 18,
	SubCategory_Class_Parts        = 19,
	SubCategory_Class_Paint        = 20,
	SubCategory_Class_Name         = 21,
	SubCategory_Class_Delete       = 22,
	SubCategory_Class_Max          = 23,
	SubCategory_Max                = 24,
};

enum class ETTLEAssembleMainCategory : uint8
{
	MainCategory_Parts_Head        = 0,
	MainCategory_Parts_Body        = 1,
	MainCategory_Parts_Inside      = 2,
	MainCategory_Parts_RightArm    = 3,
	MainCategory_Parts_LeftArm     = 4,
	MainCategory_Parts_Legs        = 5,
	MainCategory_Parts_Max         = 6,
	MainCategory_Weapon_Right      = 7,
	MainCategory_Weapon_Left       = 8,
	MainCategory_Weapon_Shoulder   = 9,
	MainCategory_Weapon_Support    = 10,
	MainCategory_Weapon_RRack      = 11,
	MainCategory_Weapon_LRack      = 12,
	MainCategory_Weapon_Max        = 13,
	MainCategory_Shop_Weapon_Hand  = 14,
	MainCategory_Shop_Weapon_Shoulder = 15,
	MainCategory_Shop_Weapon_Support = 16,
	MainCategory_Shop_Weapon_Max   = 17,
	MainCategory_SelectClass       = 18,
	MainCategory_BattleData        = 19,
	MainCategory_FlagItem          = 20,
	MainCategory_BattleDataMax     = 21,
	MainCategory_Max               = 22,
};

enum class ETTLEAssembleTopCategory : uint8
{
	TopCategory_Parts              = 0,
	TopCategory_Weapon             = 1,
	TopCategory_Class              = 2,
	TopCategory_BattleData         = 3,
	TopCategory_Max                = 4,
};

enum class ETTLEAssembleMenuComponentState : uint8
{
	State_None                     = 0,
	State_SelectCategory           = 1,
	State_SelectSubCategory        = 2,
	State_SelectParts              = 3,
	State_ClassSelect              = 4,
	State_ClassOperate             = 5,
	State_SelectAttachmentSlot     = 6,
	State_SelectAttachment         = 7,
	State_SelectDevelopParts       = 8,
	State_SelectRequiredParts      = 9,
	State_SelectBattleData         = 10,
	State_SelectFlagItem           = 11,
	State_MAX                      = 12,
};

enum class ETTLEAssembleMenuComponentMode : uint8
{
	Mode_Dock                      = 0,
	Mode_ShopPurchase              = 1,
	Mode_ShopSale                  = 2,
	Mode_Develop                   = 3,
	Mode_SecretDevelop             = 4,
	Mode_Attach                    = 5,
	Mode_Scrap                     = 6,
	Mode_AttachmentList            = 7,
	Mode_AttachmentSale            = 8,
	Mode_BattleData                = 9,
	Mode_MAX                       = 10,
};

enum class ETTLEAssistKeyPopUpMode : uint8
{
	Mode_ListControl               = 0,
	Mode_ToKeyInput                = 1,
	Mode_KeyControl                = 2,
	Mode_ToListInput               = 3,
	Mode_MAX                       = 4,
};

enum class ETTLEAttachmentLevel : uint8
{
	Level_1                        = 0,
	Level_2                        = 1,
	Level_3                        = 2,
	Level_4                        = 3,
	Level_5                        = 4,
	Level_MAX                      = 5,
};

enum class ETTLEAttachmentParameterCategory : uint8
{
	Parameter_None                 = 0,
	Parameter_Cost                 = 1,
	Parameter_Stealth              = 2,
	Parameter_Weight               = 3,
	Parameter_Damage               = 4,
	Parameter_BulletDamage         = 5,
	Parameter_FemtoDamage          = 6,
	Parameter_AbnormalValue        = 7,
	Parameter_KnockBack            = 8,
	Parameter_KnockOut             = 9,
	Parameter_LifeSeconds          = 10,
	Parameter_MagazineSize         = 11,
	Parameter_Bullet               = 12,
	Parameter_IgnoreDistance       = 13,
	Parameter_BulletSpeed          = 14,
	Parameter_MinSpreadAngele      = 15,
	Parameter_MaxSpreadAngele      = 16,
	Parameter_GroupingRate         = 17,
	Parameter_ShootRate            = 18,
	Parameter_CoolTime             = 19,
	Parameter_ShotNum              = 20,
	Parameter_ShotSpreadAngle      = 21,
	Parameter_CousumeFemto         = 22,
	Parameter_EnergizationRange    = 23,
	Parameter_GravityFirstSpeed    = 24,
	Parameter_FunnelBattleRange    = 25,
	Parameter_ExplodeDamage        = 26,
	Parameter_ExplodeRadius        = 27,
	Parameter_ExplodeKnockBack     = 28,
	Parameter_ExplodeAbnormalValue = 29,
	Parameter_HealVPValue          = 30,
	Parameter_HealAbnormalStatusRate = 31,
	Parameter_FirstAttackMaxMoveLength = 32,
	Parameter_MaxMoveSpeed         = 33,
	Parameter_KnockBackControlValue = 34,
	Parameter_ShockabsorptionRate  = 35,
	Parameter_MissileMaxSpeed      = 36,
	Parameter_InitialSpeed         = 37,
	Parameter_TurningDegree        = 38,
	Parameter_MissileLockonRange   = 39,
	Parameter_ActiveHomingDistance = 40,
	Parameter_HPExt                = 41,
	Parameter_BurningResist        = 42,
	Parameter_StunResist           = 43,
	Parameter_AcidResist           = 44,
	Parameter_PhysicsResist        = 45,
	Parameter_FemtoResist          = 46,
	Parameter_DefPhysical          = 47,
	Parameter_LockonRange          = 48,
	Parameter_LockonSightHeight    = 49,
	Parameter_LockonSightWidth     = 50,
	Parameter_ShootingControlCorrection = 51,
	Parameter_VP                   = 52,
	Parameter_CostCapacity         = 53,
	Parameter_FlyingSpeed          = 54,
	Parameter_FlyingBoostSpeed     = 55,
	Parameter_CoolSpeedFlying      = 56,
	Parameter_CoolSpeedSpecial     = 57,
	Parameter_KnockbackResist      = 58,
	Parameter_CoolCorrection       = 59,
	Parameter_BurstCorrection      = 60,
	Parameter_AccuracyCorrection   = 61,
	Parameter_ThrowSpec            = 62,
	Parameter_RecoilSpec           = 63,
	Parameter_MaxPower             = 64,
	Parameter_ShootingSpec         = 65,
	Parameter_FlyingProcessSpec    = 66,
	Parameter_BoostProcessSpec     = 67,
	Parameter_HeatControlSpec      = 68,
	Parameter_CoolingPerformance   = 69,
	Parameter_ShootCorrectSpec     = 70,
	Parameter_GroundBoostSpeed     = 71,
	Parameter_GroundSpeed          = 72,
	Parameter_JumpSpeed            = 73,
	Parameter_LandingTime          = 74,
	Parameter_KnockBackRecoveryTime = 75,
	Parameter_BulletDropUp         = 76,
	Parameter_FemtoDropUp          = 77,
	Parameter_ArmorDropUp          = 78,
	Parameter_WeaponDropUp         = 79,
	Parameter_MirageConsumeDown    = 80,
	Parameter_EncounterRateUpCommon = 81,
	Parameter_FemtoShiftUp         = 82,
	Parameter_FemtoShiftConsumeDown = 83,
	Parameter_RebootTime           = 84,
	Parameter_RebootFemtoConsumeDown = 85,
	Parameter_RebootEffect         = 86,
	Parameter_RebootFemtoGet       = 87,
	Parameter_ItemCatchUp          = 88,
	Parameter_DamageAbsorbRate     = 89,
	Parameter_FemtoRecoveryUp      = 90,
	Parameter_FemtoGetOnMissionStart = 91,
	Parameter_CriticalDamageUp     = 92,
	Parameter_ThrowKnockOut        = 93,
	Parameter_AttachmentSlotExpand = 94,
	Parameter_MAX                  = 95,
};

enum class ETTLEAttachmentCategory : uint8
{
	Category_All                   = 0,
	Parts_Common                   = 1,
	Parts_Head                     = 2,
	Parts_Body                     = 3,
	Parts_Inside                   = 4,
	Parts_Arm                      = 5,
	Parts_Legs                     = 6,
	Weapon_Common                  = 7,
	Weapon_Arm_Gun                 = 8,
	Weapon_Arm_Bazooka             = 9,
	Weapon_Arm_Laser               = 10,
	Weapon_Arm_Close               = 11,
	Weapon_Arm_Special             = 12,
	Weapon_Arm_Shield              = 13,
	Weapon_Shoulder_Missile        = 14,
	Weapon_Shoulder_ShoulderCannon = 15,
	Weapon_Shoulder_RailGun        = 16,
	Weapon_Shoulder_Blitz          = 17,
	Weapon_Shoulder_HealCannon     = 18,
	Weapon_Support_Grenades        = 19,
	Weapon_Support_Mine            = 20,
	Weapon_Support_Assist          = 21,
	Category_MAX                   = 22,
	TTLEAttachmentCategory_MAX     = 23,
};

enum class ETTLEAttachmentType : uint8
{
	AttachmentType_Endurance       = 0,
	AttachmentType_Capacity        = 1,
	AttachmentType_Mobility        = 2,
	AttachmentType_Stability       = 3,
	AttachmentType_UniqueFunc      = 4,
	AttachmentType_AllType         = 5,
	AttachmentType_MAX             = 6,
};

enum class ETTLCommandInputType : uint8
{
	Input                          = 0,
	Repeat                         = 1,
	AnalogInput                    = 2,
	InputRelease                   = 3,
	ETTLCommandInputType_MAX       = 4,
};

enum class ETTLGameAutoMode : uint8
{
	MissionOneByOne                = 0,
	TTLGameAutoMode_MAX            = 1,
};

enum class ETTLEAutoTextAnimation : uint8
{
	None                           = 0,
	AnimationRoulette              = 1,
	MAX                            = 2,
};

enum class ETTLEAutoTextDisplayRule : uint8
{
	DisplayByCharacter             = 0,
	DisplayByWord                  = 1,
	DisplayByLine                  = 2,
	MAX                            = 3,
};

enum class ETTLHealSpaceVFXStatus : uint8
{
	HealSpaceVFXStatus_None        = 0,
	HealSpaceVFXStatus_Weak_VP     = 1,
	HealSpaceVFXStatus_Weak_Burning = 2,
	HealSpaceVFXStatus_Weak_Stun   = 3,
	HealSpaceVFXStatus_Weak_Acid   = 4,
	HealSpaceVFXStatus_Normal_VP   = 5,
	HealSpaceVFXStatus_Normal_Burning = 6,
	HealSpaceVFXStatus_Normal_Stun = 7,
	HealSpaceVFXStatus_Normal_Acid = 8,
	HealSpaceVFXStatus_Max         = 9,
};

enum class ETTLHealSpaceStatus : uint8
{
	HealSpaceStatus_None           = 0,
	HealSpaceStatus_Weak           = 1,
	HealSpaceStatus_Normal         = 2,
	HealSpaceStatus_Max            = 3,
};

enum class ETTLBadStatusVFXSize : uint8
{
	BadStatusVFXSize_S             = 0,
	BadStatusVFXSize_A             = 1,
	BadStatusVFXSize_M             = 2,
	BadStatusVFXSize_L             = 3,
	BadStatusVFXSize_XL            = 4,
	BadStatusVFXSize_Fish          = 5,
	BadStatusVFXSize_Ogre          = 6,
	BadStatusVFXSize_Trts          = 7,
	BadStatusVFXSize_Sped          = 8,
	BadStatusVFXSize_Fery          = 9,
	BadStatusVFXSize_SnakBody      = 10,
	BadStatusVFXSize_SnakHead      = 11,
	BadStatusVFXSize_SnakTail      = 12,
	BadStatusVFXSize_SnakBrdg      = 13,
	BadStatusVFXSize_Last          = 14,
	BadStatusVFXSize_LastAsnl      = 15,
	BadStatusVFXSize_LastFnel      = 16,
	BadStatusVFXSize_Trin          = 17,
	BadStatusVFXSize_TrinCont      = 18,
	BadStatusVFXSize_Ball          = 19,
	BadStatusVFXSize_TrtsLaser     = 20,
	BadStatusVFXSize_TrtsMissile   = 21,
	BadStatusVFXSize_Wyve          = 22,
	BadStatusVFXSize_Max           = 23,
};

enum class ETTLBarrierState_Creating : uint8
{
	Occurrence_None                = 0,
	Occurrence_Creating            = 1,
	Occurrence_Created             = 2,
	MAX                            = 3,
};

enum class ETTLBarrierActionNo : uint8
{
	Absence                        = 0,
	Occurrence                     = 1,
	Existence                      = 2,
	Destroy                        = 3,
	MAX                            = 4,
};

enum class ETTLBaseBossBallMovieSlashMoveDir : uint8
{
	Down                           = 0,
	Up                             = 1,
	Horizon                        = 2,
	ETTLBaseBossBallMovieSlashMoveDir_MAX = 3,
};

enum class ETTLBossBallTurretShape : uint8
{
	None                           = 0,
	Pentagon                       = 1,
	Hexagon                        = 2,
	ETTLBossBallTurretShape_MAX    = 3,
};

enum class ETTLBaseBossBallDamageParameterNo : uint8
{
	None                           = 0,
	WholeBarrier                   = 1,
	MovieSlash                     = 2,
	ETTLBaseBossBallDamageParameterNo_MAX = 3,
};

enum class ETTLBaseBossBallAnimState : uint8
{
	Idle                           = 0,
	Reserve                        = 1,
	DamageL                        = 2,
	Angry                          = 3,
	MAX                            = 4,
};

enum class ETTLBaseBossBallMoveCategory : uint8
{
	None                           = 0,
	StayAway                       = 1,
	AdjustHeight                   = 2,
	Random                         = 3,
	Tracking                       = 4,
	TrackingQik                    = 5,
	MAX                            = 6,
};

enum class ETTLBaseBossBallAIActNo : uint8
{
	None                           = 0,
	Idle                           = 1,
	Shotgun                        = 2,
	Bazooka                        = 3,
	NormalLaser                    = 4,
	Missile                        = 5,
	BigLaser                       = 6,
	NormalBarrier                  = 7,
	TrctBeam                       = 8,
	DamageReactionL                = 9,
	RangeCannon                    = 10,
	RangeAdjustHeight              = 11,
	RangeArkGun                    = 12,
	RangeGrenade                   = 13,
	WholeBarrier                   = 14,
	CreateAvatar                   = 15,
	Angry                          = 16,
	MovieSlash                     = 17,
	AllDirLaser                    = 18,
	MovieSlashMove                 = 19,
	FarTargetNrmlLaser             = 20,
	FarTargetArkGun                = 21,
	FarTargetGrenade               = 22,
	MAX                            = 23,
};

enum class ETTLBaseBossBallAICtrl : uint8
{
	Idle                           = 0,
	NormalWeaponS                  = 1,
	NormalWeaponL                  = 2,
	RangeWeapon                    = 3,
	NormalBarrier                  = 4,
	TrctBeam                       = 5,
	DamageReactionL                = 6,
	CreateAvatar                   = 7,
	Angry                          = 8,
	MovieSlash                     = 9,
	AllDirLaser                    = 10,
	FarTargetNrmlLaser             = 11,
	FarTargetArkGun                = 12,
	FarTargetGrenade               = 13,
	MAX                            = 14,
};

enum class ETTLBaseBossBallProgEmissionColorTypes : uint8
{
	None                           = 0,
	Trigger                        = 1,
	SmallAttack                    = 2,
	LargeAttack                    = 3,
	Range                          = 4,
	Tracter                        = 5,
	AllDirLaser                    = 6,
	ETTLBaseBossBallProgEmissionColorTypes_MAX = 7,
};

enum class ETTLBaseBossBallMoveTypes : uint8
{
	None                           = 0,
	StayAway                       = 1,
	AdjustHeight                   = 2,
	Tracking                       = 3,
	Random                         = 4,
	CenterWorld                    = 5,
	TrackingOnly                   = 6,
	TrackingQik                    = 7,
	Random2                        = 8,
	MAX                            = 9,
};

enum class ETTLBaseBossFeryAngryState : uint8
{
	None                           = 0,
	AngryStart                     = 1,
	AngryEnd                       = 2,
	ETTLBaseBossFeryAngryState_MAX = 3,
};

enum class ETTLBaseBossFishThrusterSocketID : uint8
{
	Thuruster00                    = 0,
	Thuruster01                    = 1,
	Thuruster02                    = 2,
	Thuruster03                    = 3,
	Thuruster04                    = 4,
	Thuruster05                    = 5,
	Thuruster06                    = 6,
	Thuruster07                    = 7,
	Thuruster08                    = 8,
	Thuruster09                    = 9,
	MAX                            = 10,
};

enum class ETTLBaseBossFishTriggerActionType : uint8
{
	Angry                          = 1,
	Damage                         = 2,
	EvacucateOver                  = 3,
	ETTLBaseBossFishTriggerActionType_MAX = 4,
};

enum class ETTLBaseBossFishMissileSocketID : uint8
{
	Missile00                      = 0,
	Missile01                      = 1,
	Missile02                      = 2,
	Missile03                      = 3,
	MAX                            = 4,
};

enum class ETTLBaseBossFishStunAnimState : uint8
{
	Start                          = 0,
	Loop                           = 1,
	End                            = 2,
	MAX                            = 3,
};

enum class ETTLBaseBossFishDeadAnimState : uint8
{
	Posture                        = 0,
	Loop                           = 1,
	MAX                            = 2,
};

enum class ETTLBaseBossFishRushState : uint8
{
	Start                          = 0,
	Loop                           = 1,
	End                            = 2,
	Rotation                       = 3,
	InGround                       = 4,
	MAX                            = 5,
};

enum class ETTLBaseBossFishDamageAnimState : uint8
{
	Start                          = 0,
	Loop                           = 1,
	End                            = 2,
	MAX                            = 3,
};

enum class ETTLBaseBossFishRotationAnimState : uint8
{
	Posture                        = 0,
	Attack                         = 1,
	MAX                            = 2,
};

enum class ETTLBaseBossFishBigLaserAnimState : uint8
{
	Start                          = 0,
	Loop                           = 1,
	End                            = 2,
	MAX                            = 3,
};

enum class ETTLBaseBossFishTurnAnimState : uint8
{
	TurnL                          = 0,
	TurnR                          = 1,
	MAX                            = 2,
};

enum class ETTLBaseBossFishMissileAnimState : uint8
{
	Start                          = 0,
	Loop                           = 1,
	End                            = 2,
	MAX                            = 3,
};

enum class ETTLBaseBossFishSpringAnimState : uint8
{
	Jump                           = 0,
	Fall                           = 1,
	Slide                          = 2,
	InGround                       = 3,
	MAX                            = 4,
};

enum class ETTLBaseBossFishGroundAnimState : uint8
{
	InGround                       = 0,
	OutGround                      = 1,
	MAX                            = 2,
};

enum class ETTLBaseBossFishMoveAnimState : uint8
{
	Start                          = 0,
	Loop                           = 1,
	End                            = 2,
	MAX                            = 3,
};

enum class ETTLBaseBossFishAnimState : uint8
{
	Wait                           = 0,
	Move                           = 1,
	InGround                       = 2,
	Spring                         = 3,
	Missile                        = 4,
	Turn                           = 5,
	BigLaser                       = 6,
	Rotation                       = 7,
	Damage                         = 8,
	Rush                           = 9,
	Dead                           = 10,
	Stun                           = 11,
	Acid                           = 12,
	Angry                          = 13,
	MAX                            = 14,
};

enum class ETTLBaseBossFishAIActNo : uint8
{
	Wait                           = 0,
	Move                           = 1,
	Chase                          = 2,
	Patrol                         = 3,
	ToPoint                        = 4,
	InGround                       = 5,
	OutGround                      = 6,
	Spring                         = 7,
	Missile                        = 8,
	Turn                           = 9,
	GroundSign                     = 10,
	BigLaser                       = 11,
	Rotation                       = 12,
	Damage                         = 13,
	Cannon                         = 14,
	MultiLaser                     = 15,
	Rush                           = 16,
	Angry                          = 17,
	EvacucateUnder                 = 18,
	Acid                           = 19,
	MAX                            = 20,
};

enum class ETTLBaseBossFishMoveFlag : uint8
{
	IsInfinite                     = 0,
	IsFinish                       = 1,
	GoAroundPlus                   = 2,
	GoAroundMinus                  = 3,
	MotionWait                     = 4,
	MotionStop                     = 5,
	MAX                            = 6,
};

enum class ETTLBaseBossFishMoveMode : uint8
{
	None                           = 0,
	Actor                          = 1,
	Location                       = 2,
	Path                           = 3,
	Spring                         = 4,
	Turn                           = 5,
	Rotation                       = 6,
	Damage                         = 7,
	Rush                           = 8,
	Stun                           = 9,
	LaserRotation                  = 10,
	JumpOut                        = 11,
	Acid                           = 12,
	Angry                          = 13,
	MAX                            = 14,
};

enum class ETTLBaseBossFishAICtrl : uint8
{
	Idle                           = 0,
	Chase                          = 1,
	Patrol                         = 2,
	InGround                       = 3,
	OutGround                      = 4,
	GroundSign                     = 5,
	Spring                         = 6,
	Missile                        = 7,
	BigLaser                       = 8,
	Turn                           = 9,
	Rotation                       = 10,
	MultiLaser                     = 11,
	SpawnDrone                     = 12,
	Angry                          = 13,
	Rush                           = 14,
	EvacucateOver                  = 15,
	EvacucateUnder                 = 16,
	Acid                           = 17,
	MAX                            = 18,
};

enum class ETTLBaseBossLastAnmDamage : uint8
{
	None                           = 0,
	Small                          = 1,
	Big                            = 2,
	Death                          = 3,
	DeathLoop                      = 4,
	Stun                           = 5,
	MAX                            = 6,
};

enum class ETTLBaseBossLastAnmActNo : uint8
{
	None                           = 0,
	Wait                           = 1,
	Move                           = 2,
	Damage                         = 3,
	Anger                          = 4,
	TractorBeam                    = 5,
	Rush                           = 6,
	MAX                            = 7,
};

enum class ETTLBaseBossLastAnmType : uint8
{
	Body                           = 0,
	Ring                           = 1,
	Blade                          = 2,
	Tail                           = 3,
	Arsenal                        = 4,
	MAX                            = 5,
};

enum class ETTLBaseBossLastAsnlActActNo : uint8
{
	None                           = 0,
	Wait                           = 1,
	Move                           = 2,
	Damage                         = 3,
	Anger                          = 4,
	TractorBeam                    = 5,
	Rush                           = 6,
	DawnHammer                     = 7,
	MAX                            = 8,
};

enum class ETTLBaseBossLastFnelAnmActNo : uint8
{
	None                           = 0,
	Normal                         = 1,
	ChargeLaser                    = 2,
	Damage                         = 3,
	MAX                            = 4,
};

enum class ETTLBaseBossLastFnelAssultShiftState : uint8
{
	None                           = 0,
	Appear                         = 1,
	Wait                           = 2,
	Disappear                      = 3,
	MAX                            = 4,
};

enum class ETTLBaseBossLastFnelExtraThickLaserEffect : uint8
{
	None                           = 0,
	Charge                         = 1,
	Notice                         = 2,
	Shoot                          = 3,
	Muzzle                         = 4,
	Laser                          = 5,
	Top                            = 6,
	Hit                            = 7,
	MAX                            = 8,
};

enum class ETTLBaseBossLastFnelPwnCoilColor : uint8
{
	None                           = 0,
	Cannon                         = 1,
	ChargeLaser                    = 2,
	Malfunction                    = 3,
	MAX                            = 4,
};

enum class ETTLBaseBossLastFnelPwnMoveFlag : uint8
{
	IsHit                          = 0,
	AroundPlus                     = 1,
	AroundMinus                    = 2,
	MAX                            = 3,
};

enum class ETTLBaseBossLastFnelPwnActNo : uint8
{
	None                           = 0,
	AttachWait                     = 1,
	WarpAttach                     = 2,
	Detach                         = 3,
	FollowOwner                    = 4,
	FollowTarget                   = 5,
	FollowAttach                   = 6,
	Damage                         = 7,
	DawnHammer                     = 8,
	MAX                            = 9,
};

enum class ETTLBaseBossLastPwnThruster : uint8
{
	None                           = 0,
	Normal                         = 1,
	Boost                          = 2,
	MAX                            = 3,
};

enum class ETTLBaseBossLastPwnEye : uint8
{
	Normal                         = 0,
	Anger                          = 1,
	Death                          = 2,
	MAX                            = 3,
};

enum class ETTLBaseBossLastPwnCoilColor : uint8
{
	None                           = 0,
	Cannon                         = 1,
	ChargeLaser                    = 2,
	MAX                            = 3,
};

enum class ETTLBaseBossLastPwnDamage : uint8
{
	None                           = 0,
	Small                          = 1,
	Big                            = 2,
	Death                          = 3,
	DeathLoop                      = 4,
	Stun                           = 5,
	MAX                            = 6,
};

enum class ETTLBaseBossLastPwnMoveFlag : uint8
{
	IsHit                          = 0,
	AroundPlus                     = 1,
	AroundMinus                    = 2,
	Stop                           = 3,
	MAX                            = 4,
};

enum class ETTLBaseBossLastPwnMoveType : uint8
{
	Normal                         = 0,
	Boost                          = 1,
	MAX                            = 2,
};

enum class ETTLBaseBossLastPwnActNo : uint8
{
	None                           = 0,
	Wait                           = 1,
	Move                           = 2,
	Damage                         = 3,
	Anger                          = 4,
	TractorBeam                    = 5,
	Rush                           = 6,
	DawnHammer                     = 7,
	MAX                            = 8,
};

enum class ETTLBaseBossLastRingActColor : uint8
{
	Normal                         = 0,
	TractorBeam                    = 1,
	Rush                           = 2,
	MAX                            = 3,
};

enum class ETTLBaseBossLastRingActActNo : uint8
{
	None                           = 0,
	Wait                           = 1,
	Move                           = 2,
	Damage                         = 3,
	Anger                          = 4,
	TractorBeam                    = 5,
	Rush                           = 6,
	DawnHammer                     = 7,
	MAX                            = 8,
};

enum class ETTLBaseBossLastTailActColor : uint8
{
	Normal                         = 0,
	Anger                          = 1,
	MAX                            = 2,
};

enum class ETTLBaseBossLastTailActActNo : uint8
{
	None                           = 0,
	Wait                           = 1,
	Move                           = 2,
	Damage                         = 3,
	Anger                          = 4,
	TractorBeam                    = 5,
	Rush                           = 6,
	DawnHammer                     = 7,
	MAX                            = 8,
};

enum class ETTLBaseBossLastTrctWpnEqp : uint8
{
	None                           = 0,
	LeftHand                       = 1,
	RightHand                      = 2,
	LeftRack                       = 3,
	RightRack                      = 4,
	LeftCaught                     = 5,
	RightCaught                    = 6,
	MAX                            = 7,
};

enum class ETTLBaseBossLastWeakActLockon : uint8
{
	Disable                        = 0,
	Base                           = 1,
	Core                           = 2,
	MAX                            = 3,
};

enum class ETTLBaseBossLastWeakActState : uint8
{
	Closed                         = 0,
	ToOpen                         = 1,
	Opened                         = 2,
	ToClose                        = 3,
	MAX                            = 4,
};

enum class ETTLBaseBossLastWeakAnmState : uint8
{
	Closed                         = 0,
	ToOpen                         = 1,
	Opened                         = 2,
	ToClose                        = 3,
	MAX                            = 4,
};

enum class ETTLBaseBossOgreAIDamage : uint8
{
	None                           = 0,
	Damage                         = 1,
	Death                          = 2,
	Other                          = 3,
	MAX                            = 4,
};

enum class ETTLBaseBossOgreAICtrl : uint8
{
	Idle                           = 0,
	Walk                           = 1,
	Turn                           = 2,
	Jump                           = 3,
	DamageReaction                 = 4,
	Grasping                       = 5,
	Kick                           = 6,
	Tackle                         = 7,
	Missile                        = 8,
	Anger                          = 9,
	Guard                          = 10,
	SwordSlash                     = 11,
	SwordStamp                     = 12,
	BackHandBlow                   = 13,
	MAX                            = 14,
};

enum class ETTLBaseBossOgreMissileHatchState : uint8
{
	Close                          = 0,
	ToOpen1                        = 1,
	Open1                          = 2,
	ToOpenAll                      = 3,
	OpenAll                        = 4,
	ToClose                        = 5,
	MAX                            = 6,
};

enum class ETTLBaseBossOgreIKMode : uint8
{
	ToMotion                       = 0,
	Fix                            = 1,
	ToMotionG                      = 2,
	ToMotionGF                     = 3,
	ToTurnGF                       = 4,
	MAX                            = 5,
};

enum class ETTLBaseBossOgreTransformMode : uint8
{
	Air                            = 0,
	Grounded                       = 1,
	MAX                            = 2,
};

enum class ETTLBaseBossOgreAnmActNo : uint8
{
	Wait                           = 0,
	Turn                           = 1,
	Walk                           = 2,
	Jump                           = 3,
	Landing                        = 4,
	Grasping                       = 5,
	Kick                           = 6,
	Tackle                         = 7,
	Damage                         = 8,
	Missile                        = 9,
	Guard                          = 10,
	SwordSlash                     = 11,
	SwordStamp                     = 12,
	BackHandBlow                   = 13,
	Anger                          = 14,
	MAX                            = 15,
};

enum class ETTLBaseBossOgreChrMissile : uint8
{
	FrontOnly                      = 0,
	AllRange                       = 1,
	Incendiary                     = 2,
	Parallel                       = 3,
	CounterAir                     = 4,
	MAX                            = 5,
};

enum class ETTLBaseBossOgreChrKick : uint8
{
	Right                          = 0,
	Left                           = 1,
	Both                           = 2,
	MAX                            = 3,
};

enum class ETTLBaseBossOgreChrCamera : uint8
{
	None                           = 0,
	StartGrasping                  = 1,
	Grasping                       = 2,
	EndGrasping                    = 3,
	MAX                            = 4,
};

enum class ETTLBaseBossOgreChrDmgReact : uint8
{
	ChestC                         = 0,
	RightArmC                      = 1,
	LeftArmC                       = 2,
	RightLegC                      = 3,
	LeftLegC                       = 4,
	Death                          = 5,
	DeathLoop                      = 6,
	Gauntlet                       = 7,
	Stun                           = 8,
	Front                          = 9,
	Back                           = 10,
	RightArmW                      = 11,
	LeftArmW                       = 12,
	RightLegW                      = 13,
	LeftLegW                       = 14,
	MAX                            = 15,
};

enum class ETTLBaseBossOgreChrActNo : uint8
{
	Wait                           = 0,
	Turn                           = 1,
	Walk                           = 2,
	Jump                           = 3,
	Grasping                       = 4,
	Kick                           = 5,
	Tackle                         = 6,
	Damage                         = 7,
	Missile                        = 8,
	Anger                          = 9,
	Guard                          = 10,
	SwordSlash                     = 11,
	SwordStamp                     = 12,
	BackHandBlow                   = 13,
	MAX                            = 14,
};

enum class ETTLBaseBossOgreCldState : uint8
{
	None                           = 0,
	Step                           = 1,
	Landing                        = 2,
	RightKick                      = 3,
	LeftKick                       = 4,
	Tackle                         = 5,
	SwordSlash                     = 6,
	SwordStamp                     = 7,
	CapturedSwordSlash             = 8,
	BackHandBlow                   = 9,
	MAX                            = 10,
};

enum class ETTLBaseBossOgreCldParts : uint8
{
	RightLeg                       = 0,
	LeftLeg                        = 1,
	Sword                          = 2,
	Other                          = 3,
	MAX                            = 4,
};

enum class ETTLBaseBossOgreCoverActNo : uint8
{
	Normal                         = 0,
	Destroy                        = 1,
	MAX                            = 2,
};

enum class ETTLBaseBossOgreCover : uint8
{
	Chest                          = 0,
	BreakChest                     = 1,
	LeftArm                        = 2,
	RightArm                       = 3,
	LeftLeg                        = 4,
	RightLeg                       = 5,
	MAX                            = 6,
};

enum class ETTLBaseBossOgreGauntletActNo : uint8
{
	Normal                         = 0,
	Break                          = 1,
	MAX                            = 2,
};

enum class ETTLBaseBossOgreGauntletAnmActNo : uint8
{
	Wait                           = 0,
	Break                          = 1,
	MAX                            = 2,
};

enum class ETTLBaseBossOgreSwordAnmActNo : uint8
{
	EquippedIdle                   = 0,
	Dropped                        = 1,
	Grounded                       = 2,
	Attack                         = 3,
	Useless                        = 4,
	MAX                            = 5,
};

enum class ETTLBaseBossOgreSwordPwnActNo : uint8
{
	Equipped                       = 0,
	Lost                           = 1,
	Wait                           = 2,
	Captured                       = 3,
	Useless                        = 4,
	MAX                            = 5,
};

enum class ETTLBaseBossOgreWeakLockon : uint8
{
	Always                         = 0,
	OpenedOnly                     = 1,
	Disable                        = 2,
	MAX                            = 3,
};

enum class ETTLBaseBossOgreWeakDamage : uint8
{
	Always                         = 0,
	OpenedOnly                     = 1,
	Disable                        = 2,
	MAX                            = 3,
};

enum class ETTLBaseBossOgreWeakState : uint8
{
	Closed                         = 0,
	ToOpen                         = 1,
	Opened                         = 2,
	ToClose                        = 3,
	MAX                            = 4,
};

enum class ETTLBaseBossOgreWeak : uint8
{
	Chest                          = 0,
	LeftArm                        = 1,
	RightArm                       = 2,
	LeftLeg                        = 3,
	RightLeg                       = 4,
	MAX                            = 5,
};

enum class ETTLBaseBossSpedAIApproach : uint8
{
	Passing                        = 0,
	Rush                           = 1,
	Bombing                        = 2,
	ETTLBaseBossSpedAIApproach_MAX = 3,
};

enum class ETTLBaseBossSpedAnmHatch : uint8
{
	Closed                         = 0,
	ToOpen                         = 1,
	Opened                         = 2,
	ToClose                        = 3,
	MAX                            = 4,
};

enum class ETTLBaseBossSpedAnmDamage : uint8
{
	None                           = 0,
	Small                          = 1,
	Big                            = 2,
	MAX                            = 3,
};

enum class ETTLBaseBossSpedAnmActNo : uint8
{
	Idle                           = 0,
	Roll                           = 1,
	Damage                         = 2,
	MAX                            = 3,
};

enum class ETTLBaseBossSpedPwnDamage : uint8
{
	None                           = 0,
	Small                          = 1,
	Big                            = 2,
	Death                          = 3,
	DeathLoop                      = 4,
	MAX                            = 5,
};

enum class ETTLBaseBossSpedPwnWrnAreaState : uint8
{
	Inside                         = 0,
	MAX                            = 1,
};

enum class ETTLBaseBossSpedPwnMoveFlag : uint8
{
	IsHit                          = 0,
	GoAroundYawPlus                = 1,
	GoAroundYawMinus               = 2,
	PassedThrough                  = 3,
	SecondHalfTurn                 = 4,
	MAX                            = 5,
};

enum class ETTLBaseBossSpedPwnTurnType : uint8
{
	None                           = 0,
	YawPlus                        = 1,
	YawMinus                       = 2,
	PitchPlus                      = 3,
	PitchMinus                     = 4,
	MAX                            = 5,
};

enum class ETTLBaseBossSpedPwnMoveMode : uint8
{
	Normal                         = 0,
	SteepTurnS                     = 1,
	SteepTurnL                     = 2,
	BarrelrollWraparound           = 3,
	Passing                        = 4,
	OutrangeWraparoundS            = 5,
	OutrangeWraparoundL            = 6,
	Rush                           = 7,
	Bombing                        = 8,
	MAX                            = 9,
	Mirage                         = 10,
};

enum class ETTLBaseBossSpedPwnMoveAct : uint8
{
	Free                           = 0,
	Path                           = 1,
	Actor                          = 2,
	MAX                            = 3,
};

enum class ETTLBaseBossTrinAICtrlAction : uint8
{
	None                           = 0,
	Container                      = 1,
	Rush                           = 2,
	MAX                            = 3,
};

enum class ETTLBaseBossTrinAICtrlPhaseTransitionAction : uint8
{
	None                           = 0,
	Damage                         = 1,
	Anger                          = 2,
	MAX                            = 3,
};

enum class ETTLBaseBossTrinAnmDamageType : uint8
{
	Normal                         = 0,
	Anger                          = 1,
	Death                          = 2,
	MAX                            = 3,
};

enum class ETTLBaseBossTrinAnmWaitType : uint8
{
	NormalLoop                     = 0,
	AngerStart                     = 1,
	AngerLoop                      = 2,
	MAX                            = 3,
};

enum class ETTLBaseBossTrinAnmActNo : uint8
{
	None                           = 0,
	Wait                           = 1,
	Damage                         = 2,
	Rush                           = 3,
	MAX                            = 4,
};

enum class ETTLBaseBossTrinChrThrusterEffect : uint8
{
	None                           = 0,
	Normal                         = 1,
	Rush                           = 2,
	MAX                            = 3,
};

enum class ETTLBaseBossTrinChrRushEffect : uint8
{
	None                           = 0,
	RushStart                      = 1,
	Rush                           = 2,
	RushEnd                        = 3,
	Hover                          = 4,
	HoverEnd                       = 5,
	Trail                          = 6,
	Impact                         = 7,
	Hit                            = 8,
	MAX                            = 9,
};

enum class ETTLBaseBossTrinChrHoverEffect : uint8
{
	None                           = 0,
	PathMove                       = 1,
	FreeMove                       = 2,
	MAX                            = 3,
};

enum class ETTLBaseBossTrinChrEyeColor : uint8
{
	Normal                         = 0,
	Anger                          = 1,
	Death                          = 2,
	MAX                            = 3,
};

enum class ETTLBaseBossTrinChrFreeMoveFlag : uint8
{
	IsHit                          = 0,
	AroundPlus                     = 1,
	AroundMinus                    = 2,
	Stop                           = 3,
	MAX                            = 4,
};

enum class ETTLBaseBossTrinChrFreeMoveType : uint8
{
	None                           = 0,
	Actor                          = 1,
	Location                       = 2,
	MAX                            = 3,
};

enum class ETTLBaseBossTrinChrActNo : uint8
{
	None                           = 0,
	Wait                           = 1,
	PathMove                       = 2,
	FreeMove                       = 3,
	Damage                         = 4,
	Anger                          = 5,
	Rush                           = 6,
	Death                          = 7,
	MAX                            = 8,
};

enum class ETTLBaseBossTrinChrActMode : uint8
{
	Normal                         = 0,
	Order5_3                       = 1,
	MAX                            = 2,
};

enum class ETTLBaseBossTrinContAICtrlOpenType : uint8
{
	None                           = 0,
	BossVPRate                     = 1,
	Length                         = 2,
	Time                           = 3,
	AI                             = 4,
	MAX                            = 5,
};

enum class ETTLBaseBossTrinContChrFreightType : uint8
{
	None                           = 0,
	Container                      = 1,
	Cannon                         = 2,
	MAX                            = 3,
};

enum class ETTLBaseBossTrinContChrActNo : uint8
{
	None                           = 0,
	Path                           = 1,
	Free                           = 2,
	MAX                            = 3,
};

enum class ETTLBaseBossTrinWeakActParts : uint8
{
	UpperDeck                      = 0,
	FrontLeft                      = 1,
	FrontRight                     = 2,
	MAX                            = 3,
};

enum class ETTLBaseBossTrinWeakActState : uint8
{
	Closed                         = 0,
	ToOpen                         = 1,
	Opened                         = 2,
	ToClose                        = 3,
	MAX                            = 4,
};

enum class ETTLBaseBossTrinWeakAnmState : uint8
{
	Closed                         = 0,
	ToOpen                         = 1,
	Opened                         = 2,
	ToClose                        = 3,
	MAX                            = 4,
};

enum class ETTLWyveTargetType : uint8
{
	None                           = 0,
	HateTop                        = 1,
	NowTarget                      = 2,
	Random                         = 3,
	MAX                            = 4,
};

enum class ETTLBaseBossWyveAnimState : uint8
{
	None                           = 0,
	Land                           = 1,
	Air                            = 2,
	MAX                            = 3,
};

enum class ETTLBaseBossWyveActionState : uint8
{
	None                           = 0,
	Move                           = 1,
	Jump                           = 2,
	QuickDash                      = 3,
	StepMove                       = 4,
	TargetMove                     = 5,
	Dead                           = 6,
	Rush                           = 50,
	SpinLaser                      = 51,
	Missile                        = 52,
	FemtoDrain                     = 53,
	BigLaser                       = 54,
	Meteor                         = 55,
	Howling                        = 56,
	Damage                         = 100,
	Angry                          = 101,
	Change                         = 102,
	Fall                           = 103,
	ETTLBaseBossWyveActionState_MAX = 104,
};

enum class ETTLEBasecampNotifyInput : uint8
{
	Busy                           = 0,
	Idle                           = 1,
	Next                           = 2,
	Error                          = 3,
	MAX                            = 4,
};

enum class ETTLEBasecampNotifyState : uint8
{
	Closed                         = 0,
	Initialize                     = 1,
	WaitPlayable                   = 2,
	DisconnectPenalty              = 3,
	SendRankingError               = 4,
	RankupNotify                   = 5,
	ElementReleasedNotify          = 6,
	Tutorial                       = 7,
	GetVoiceNotify                 = 8,
	DLCNotify                      = 9,
	Finalize                       = 10,
	MAX                            = 11,
};

enum class ETTLBaseCanCoverState : uint8
{
	None                           = 0,
	Closed                         = 1,
	ToOpen                         = 2,
	Opened                         = 3,
	ToClose                        = 4,
	MAX                            = 5,
};

enum class ETTLBaseCarDamageReact : uint8
{
	None                           = 0,
	Knockback_L                    = 1,
	Knockback_M                    = 2,
	Knockback_H                    = 3,
	Down                           = 4,
	Death                          = 5,
	Max                            = 6,
};

enum class ETTLBaseCarMoveResult : uint8
{
	HitWall                        = 0,
	HitForward                     = 1,
	MAX                            = 2,
};

enum class ETTLBaseCarMoveFlag : uint8
{
	IsInfinite                     = 0,
	IsFinish                       = 1,
	GoAroundPlus                   = 2,
	GoAroundMinus                  = 3,
	WaitActor                      = 4,
	Back                           = 5,
	MAX                            = 6,
};

enum class ETTLBaseCarMoveMode : uint8
{
	None                           = 0,
	Actor                          = 1,
	Location                       = 2,
	Path                           = 3,
	Rush                           = 4,
	MAX                            = 5,
};

enum class ETTLBaseDroneSecuAnim : uint8
{
	None                           = 0,
	WaitS                          = 1,
	WaitL                          = 2,
	WaitE                          = 3,
	CautionS                       = 4,
	CautionL                       = 5,
	CautionE                       = 6,
	WarningS                       = 7,
	WarningL                       = 8,
	WarningE                       = 9,
	MAX                            = 10,
};

enum class ETTLBaseDroneSecuMode : uint8
{
	None                           = 0,
	Patrol                         = 1,
	Caution                        = 2,
	Warning                        = 3,
	Max                            = 4,
};

enum class ETTLBaseDroneDamageReact : uint8
{
	None                           = 0,
	Knockback_L                    = 1,
	Knockback_M                    = 2,
	Knockback_H                    = 3,
	Down                           = 4,
	Max                            = 5,
};

enum class ETTLBaseDroneMoveFlag : uint8
{
	IsInfinite                     = 0,
	IsFinish                       = 1,
	IsHit                          = 2,
	GoAroundPitchMinus             = 3,
	GoAroundYawPlus                = 4,
	GoAroundYawMinus               = 5,
	MAX                            = 6,
};

enum class ETTLBaseDroneMoveMode : uint8
{
	None                           = 0,
	Actor                          = 1,
	Location                       = 2,
	Path                           = 3,
	Stop                           = 4,
	MAX                            = 5,
};

enum class ETTLBaseDroneType : uint8
{
	Assault                        = 0,
	Patrol                         = 1,
	Security                       = 2,
	MAX                            = 3,
};

enum class ETTLENBossSnakFinType : uint8
{
	MainFin                        = 0,
	SubFinFront                    = 1,
	SubFinBack                     = 2,
	ETTLENBossSnakFinType_MAX      = 3,
};

enum class ETTLBaseHeliAnimState : uint8
{
	Ground                         = 0,
	Takeoff                        = 1,
	Air                            = 2,
	Landing                        = 3,
	Falling                        = 4,
	MAX                            = 5,
};

enum class ETTLBaseHeliFollowerMode : uint8
{
	Free                           = 0,
	Wait                           = 1,
	Formation                      = 2,
	Cover                          = 3,
	Max                            = 4,
};

enum class ETTLBaseHeliType : uint8
{
	Alert                          = 0,
	Patrol                         = 1,
	Max                            = 2,
};

enum class ETTLBaseRushCarAnimState : uint8
{
	None                           = 0,
	Idle                           = 1,
	StartRush                      = 2,
	LoopRush                       = 3,
	EndRush                        = 4,
	CancelRush                     = 5,
	StartBreak                     = 6,
	LoopBreak                      = 7,
	Max                            = 8,
};

enum class ETTLBaseRushCarHoverEffState : uint8
{
	None                           = 0,
	Ready                          = 1,
	Rush                           = 2,
	Stop                           = 3,
	Max                            = 4,
};

enum class ETTLBaseRushCarJetEffState : uint8
{
	None                           = 0,
	Start                          = 1,
	Loop                           = 2,
	End                            = 3,
	Back                           = 4,
	Max                            = 5,
};

enum class ETTLBaseTankDamageReact : uint8
{
	None                           = 0,
	Knockback_L                    = 1,
	Knockback_M                    = 2,
	Knockback_H                    = 3,
	Down                           = 4,
	Max                            = 5,
};

enum class ETTLBaseTankCoverState : uint8
{
	None                           = 0,
	Closed                         = 1,
	ToOpen                         = 2,
	Opened                         = 3,
	ToClose                        = 4,
	MAX                            = 5,
};

enum class ETTLBaseTankMoveFlag : uint8
{
	IsInfinite                     = 0,
	IsFinish                       = 1,
	GoAroundPlus                   = 2,
	GoAroundMinus                  = 3,
	WaitActor                      = 4,
	MAX                            = 5,
};

enum class ETTLBaseTankMoveMode : uint8
{
	None                           = 0,
	Actor                          = 1,
	Location                       = 2,
	Path                           = 3,
	MAX                            = 4,
};

enum class ETTLBaseTurretAnimState : uint8
{
	Wait                           = 0,
	AttackStart                    = 1,
	AttackLoop                     = 2,
	AttackEnd                      = 3,
	MAX                            = 4,
};

enum class ETTLBaseTurretType : uint8
{
	Patrol                         = 0,
	Fixed                          = 1,
	MAX                            = 2,
};

enum class ETTLBaseTurretMoveFlag : uint8
{
	IsInfinite                     = 0,
	IsFinish                       = 1,
	IsHit                          = 2,
	GoAroundPitchPlus              = 3,
	GoAroundPitchMinus             = 4,
	GoAroundYawPlus                = 5,
	GoAroundYawMinus               = 6,
	MAX                            = 7,
};

enum class ETTLBaseTurretMoveMode : uint8
{
	None                           = 0,
	Actor                          = 1,
	Location                       = 2,
	Path                           = 3,
	MAX                            = 4,
};

enum class ETTLBaseWeakState : uint8
{
	Closed                         = 0,
	Opening                        = 1,
	Opened                         = 2,
	Closing                        = 3,
	Breaked                        = 4,
	MAX                            = 5,
};

enum class ETTLBaseWeakMode : uint8
{
	Anytime                        = 0,
	OnlyOpened                     = 1,
	Disable                        = 2,
	MAX                            = 3,
};

enum class ETTLBossAICtrlCheckDistance : uint8
{
	Nearly                         = 0,
	Middle                         = 1,
	Far                            = 2,
	ETTLBossAICtrlCheckDistance_MAX = 3,
};

enum class ETTLEStatusType : uint8
{
	EStatus_None                   = 0,
	EStatus_Player                 = 1,
	EStatus_Enemy                  = 2,
	EStatus_Player2                = 3,
	EStatus_Player3                = 4,
	EStatus_Player4                = 5,
	EStatus_Enemy2                 = 6,
	EStatus_TYPE_MAX               = 7,
	EStatus_MAX                    = 8,
};

enum class ETTLWarningType : uint8
{
	WarningType_None               = 0,
	WarningType_TMPAlert           = 1,
	WarningType_OverHeat           = 2,
	WarningType_HeatSource         = 3,
	WarningType_FemtoZone          = 4,
	WarningType_VP                 = 5,
	WarningType_AreaAlert          = 6,
	WarningType_AreaOver           = 7,
	WarningType_StartAttack        = 8,
	WarningType_LockOnToLocal      = 9,
	WarningType_ActiveMissile      = 10,
	WarningType_ExistMissile       = 11,
	WarningType_AimedMissile       = 12,
	WarningType_SelfDestruct       = 13,
	WarningType_NoAmmo             = 14,
	WarningType_FemtoShortage      = 15,
	WarningType_CantThrow          = 16,
	WarningType_Ground             = 17,
	WarningType_FriendlyFire       = 18,
	WarningType_StaminaOver        = 19,
	WarningType_MAX                = 20,
};

enum class ETTLFlashDegree : uint8
{
	Flash_None                     = 0,
	Flash_Small                    = 1,
	Flash_Midium                   = 2,
	Flash_Large                    = 3,
	Flash_Max                      = 4,
};

enum class ETTLEAbnormalResist : uint8
{
	Resist_None                    = 0,
	Resist_Half                    = 1,
	Resist_Immunity                = 2,
	Resist_Double                  = 3,
	Resist_Max                     = 4,
};

enum class ETTLHeatZoneStatus : uint8
{
	Normal                         = 0,
	Preparing                      = 1,
	Heating                        = 2,
	HeatZoneStatus_Max             = 3,
	TTLHeatZoneStatus_MAX          = 4,
};

enum class ETTLEHUDMode : uint8
{
	Normal                         = 0,
	Tsubazeriai                    = 1,
	ActiveMissile                  = 2,
	TTLEHUDMode_MAX                = 3,
};

enum class ETTLEInvincibleType : uint8
{
	Normal                         = 0,
	Invincible                     = 1,
	Immortality                    = 2,
	TTLEInvincibleType_MAX         = 3,
};

enum class ETTLEPartsDamagedPhase : uint8
{
	EPartsDamagedPhase_Normal      = 0,
	EPartsDamagedPhase_HalfDestroyed = 1,
	EPartsDamagedPhase_NearDestroyed = 2,
	EPartsDamagedPhase_Destroyed   = 3,
	EPartsDamagedPhase_MAX         = 4,
};

enum class ETTLPartsCorruptLogType : uint8
{
	Corrupt_NoDestroy              = 0,
	Corrupt_HalfDestroy            = 1,
	Corrupt_Destroy                = 2,
	Corrupt_Max                    = 3,
};

enum class ETTLTMPRiseLogType : uint8
{
	TMPRiseLog_Damaged             = 0,
	TMPRiseLog_Attack              = 1,
	TMPRiseLog_Boost               = 2,
	TMPRiseLog_Other               = 3,
	TMPRiseLog_Max                 = 4,
};

enum class ETTLBehaviorValueType : uint8
{
	FLoat                          = 0,
	Color                          = 1,
	Max                            = 2,
};

enum class ETTLBirdRandomType : uint8
{
	Uniform                        = 0,
	Normal                         = 1,
	Max                            = 2,
};

enum class ETTLBossAICtrlResult : uint8
{
	Success                        = 0,
	Failed                         = 1,
	Unnecessary                    = 2,
	Impossibility                  = 3,
	MAX                            = 4,
};

enum class ETTLENBossFery01AICtrl : uint8
{
	Idle                           = 0,
	Turn                           = 1,
	Chace                          = 2,
	Patrol                         = 3,
	Discharge                      = 4,
	TransAngry                     = 5,
	BreakAway_Reinforce            = 6,
	BreakAway_Missile              = 7,
	BreakAway_Laser                = 8,
	FrontReturn                    = 9,
	Reinforce                      = 10,
	DamageReaction                 = 11,
	MissileFire                    = 12,
	MultiLaser                     = 13,
	MachieGun                      = 14,
	BreakAWay_TimeOut              = 15,
	MAX                            = 16,
};

enum class ETTLBossWeakenedVFXState : uint8
{
	None                           = 0,
	First                          = 1,
	Second                         = 2,
	MAX                            = 3,
};

enum class ETTLBossDropType : uint8
{
	Default                        = 0,
	WeakPoint                      = 1,
	UniqueCondition                = 2,
	BadStatus                      = 3,
	Max                            = 4,
};

enum class ETTLHideCheckHudType : uint8
{
	NoCheckOk                      = 0,
	MiniMap                        = 1,
	FriendInfo                     = 2,
	Log                            = 3,
	SpectatorModeInfo              = 4,
	RestTime                       = 5,
	ETTLHideCheckHudType_MAX       = 6,
};

enum class ETTLUIPriority : uint8
{
	Default                        = 0,
	MissionPlayerHUD               = 1,
	MissionMainHUD                 = 2,
	RaderIcon                      = 3,
	RaderDirection                 = 4,
	CommunicationTalk              = 5,
	MissionPickUpHUD               = 6,
	DuelTopHUD                     = 7,
	MissionScreenCover             = 8,
	FadeOutHUDMission              = 9,
	MissionResultHUD               = 10,
	HomeUILog                      = 11,
	HomeUI                         = 12,
	HomeUIConsoleMessage           = 13,
	HomeUISort                     = 14,
	HomeUIFade                     = 15,
	HomeUITitle                    = 16,
	MissionBriefing                = 17,
	MissionBriefingEndAnim         = 18,
	PuppetShowDemo                 = 19,
	TalkDemo                       = 20,
	PauseMenu                      = 21,
	OptionMenu                     = 22,
	LoadingScreen                  = 23,
	PopUp                          = 24,
	DebugHUD                       = 25,
	MAX                            = 26,
	OnlineBasecampNotify           = 50,
};

enum class ETTLWarningIcon : uint8
{
	StartAttack                    = 0,
	ExistMissile                   = 1,
	Exclamation                    = 2,
	StatusBurn                     = 3,
	StatusStun                     = 4,
	StatusAcid                     = 5,
	StatusFlash                    = 6,
	StatusRaderJamming             = 7,
	UnableToFight                  = 8,
	Died                           = 9,
	Outer                          = 10,
	Duelable                       = 11,
	DuelDest                       = 12,
	DuelSrc                        = 13,
	InDuel                         = 14,
	None                           = 15,
	MAX                            = 16,
};

enum class ETTLKeyAssignIcon : uint8
{
	BButton                        = 0,
	AButton                        = 1,
	YButton                        = 2,
	XButton                        = 3,
	LButton                        = 4,
	RButton                        = 5,
	ZLButton                       = 6,
	ZRButton                       = 7,
	SLButton                       = 8,
	SRButton                       = 9,
	ArrowUpButton                  = 10,
	ArrowDownButton                = 11,
	ArrowRightButton               = 12,
	ArrowLeftButton                = 13,
	ArrowLeftRightButton           = 14,
	ArrowUpDownButton              = 15,
	ArrowNoButton                  = 16,
	BArrowAllButton                = 17,
	BArrowNoButton                 = 18,
	BArrowUpButton                 = 19,
	BArrowDownButton               = 20,
	BArrowLeftButton               = 21,
	BArrowRightButton              = 22,
	DirectionUpButton              = 23,
	DirectionDownButton            = 24,
	DirectionLeftButton            = 25,
	DirectionRightButton           = 26,
	JoiConPlusButton               = 27,
	JoiConMinusButton              = 28,
	PlusButton                     = 29,
	MinusButton                    = 30,
	Stick                          = 31,
	LStick                         = 32,
	RStick                         = 33,
	InputStick                     = 34,
	InputLStick                    = 35,
	InputRStick                    = 36,
	RRotateStick                   = 37,
	RRotateLStick                  = 38,
	RRotateRStick                  = 39,
	LRotateStick                   = 40,
	LRotateLStick                  = 41,
	LRotateRStick                  = 42,
	HomeButton                     = 43,
	CaptureButton                  = 44,
	MAX                            = 45,
	Escape                         = 46,
	F1                             = 47,
	F2                             = 48,
	F3                             = 49,
	F4                             = 50,
	F5                             = 51,
	F6                             = 52,
	F7                             = 53,
	F8                             = 54,
	F9                             = 55,
	F10                            = 56,
	F11                            = 57,
	F12                            = 58,
	One                            = 59,
	Two                            = 60,
	Three                          = 61,
	Four                           = 62,
	Five                           = 63,
	Six                            = 64,
	Seven                          = 65,
	Eight                          = 66,
	Nine                           = 67,
	Zero                           = 68,
	Hyphen                         = 69,
	Caret                          = 70,
	Dollar                         = 71,
	BackSpace                      = 72,
	Tab                            = 73,
	Q                              = 74,
	W                              = 75,
	E                              = 76,
	R                              = 77,
	T                              = 78,
	Y                              = 79,
	U                              = 80,
	I                              = 81,
	O                              = 82,
	P                              = 83,
	ATMark                         = 84,
	LeftBracket                    = 85,
	Shift                          = 86,
	A                              = 87,
	S                              = 88,
	D                              = 89,
	F                              = 90,
	G                              = 91,
	H                              = 92,
	J                              = 93,
	K                              = 94,
	L                              = 95,
	Semicolon                      = 96,
	Colon                          = 97,
	RightBracket                   = 98,
	Z                              = 99,
	X                              = 100,
	C                              = 101,
	V                              = 102,
	B                              = 103,
	N                              = 104,
	M                              = 105,
	Comma                          = 106,
	Period                         = 107,
	Slash                          = 108,
	Backslash                      = 109,
	LeftShift                      = 110,
	RightShift                     = 111,
	LeftControl                    = 112,
	RightControl                   = 113,
	LeftAlt                        = 114,
	RightAlt                       = 115,
	SpaceBar                       = 116,
	Insert                         = 117,
	Delete                         = 118,
	Home                           = 119,
	PageUp                         = 120,
	PageDown                       = 121,
	End                            = 122,
	ScrollLock                     = 123,
	Pause                          = 124,
	Apps                           = 125,
	Up                             = 126,
	Right                          = 127,
	Down                           = 128,
	Left                           = 129,
	Divide                         = 130,
	Multiply                       = 131,
	Subtract                       = 132,
	Add                            = 133,
	Decimal                        = 134,
	NumPadZero                     = 135,
	NumPadOne                      = 136,
	NumPadTwo                      = 137,
	NumPadThree                    = 138,
	NumPadFour                     = 139,
	NumPadFive                     = 140,
	NumPadSix                      = 141,
	NumPadSeven                    = 142,
	NumPadEight                    = 143,
	NumPadNine                     = 144,
	LeftMouseButton                = 145,
	RightMouseButton               = 146,
	MiddleMouseButton              = 147,
	ThumbMouseButton4              = 148,
	ThumbMouseButton5              = 149,
	ThumbMouseButton6              = 150,
	ThumbMouseButton7              = 151,
	ThumbMouseButton8              = 152,
	WASD                           = 153,
	AS                             = 154,
	WS                             = 155,
	ZQSD                           = 156,
	ZS                             = 157,
	QD                             = 158,
	MouseMove                      = 159,
	MouseScrollUp                  = 160,
	MouseScrollDown                = 161,
	UpDownLeftRight                = 162,
	UpDown                         = 163,
	LeftRight                      = 164,
	Enter                          = 165,
	Keyboard_MAX                   = 166,
};

enum class ETTLCameraShakePostProcessType : uint8
{
	Type_None                      = 0,
	Type_ChromaticAberation        = 1,
	Type_MotionBlur                = 2,
	Type_MomentWhiteOut            = 3,
	MAX                            = 4,
};

enum class ETTLCameraShakeInitialOffset : uint8
{
	Random                         = 0,
	Zero                           = 1,
	MAX                            = 2,
};

enum class ETTLCaptureWeaponType : uint8
{
	None                           = 0,
	LargeLaserCannon               = 1,
	CatchableFin                   = 2,
	AntishipSword                  = 3,
	MAX                            = 4,
};

enum class ETTCatchableActorBrokenReasonType : uint8
{
	PointDamage                    = 0,
	InAir                          = 1,
	Transport                      = 2,
	Transport_DetectEnemy          = 3,
	OnBreakableBroken              = 4,
	Max                            = 5,
};

enum class ETTCatchableActorType : uint8
{
	Throw                          = 0,
	Transport                      = 1,
	Transport_Explosion            = 2,
	Max                            = 3,
};

enum class ETTLCatchableActorCatchMotionType : uint8
{
	Normal                         = 0,
	Heavy                          = 1,
	Max                            = 2,
};

enum class ETTLCatchableActorAnimationState : uint8
{
	CatchableActorAnimation_Default = 0,
	CatchableActorAnimation_Front  = 1,
	CatchableActorAnimation_Back   = 2,
	CatchableActorAnimation_Right  = 3,
	CatchableActorAnimation_Left   = 4,
	CatchableActorAnimation_Max    = 5,
};

enum class ETTLWeaponSlot : uint8
{
	EWeaponSlot_Left               = 0,
	EWeaponSlot_Right              = 1,
	EWeaponSlot_Shoulder           = 2,
	EWeaponSlot_Support            = 3,
	EWeaponSlot_MAX                = 4,
};

enum class ETTLCharaCmnNormalActionType : uint8
{
	NormalAction_None              = 0,
	NormalAction_Max               = 1,
};

enum class ETTLCharaCmnStiffActionType : uint8
{
	StiffAction_None               = 0,
	StiffAction_KnockOut           = 1,
	StiffAction_KnockBack          = 2,
	StiffAction_Dying              = 3,
	StiffAction_Dead               = 4,
	StiffAction_OgreArrest         = 5,
	StiffAction_TracterBeam        = 6,
	StiffAction_Stun               = 7,
	StiffAction_AreaOver           = 8,
	StiffAction_GetOff             = 9,
	StiffAction_Eject              = 10,
	StiffAction_GetOn              = 11,
	StiffAction_BossCaughtWeapon   = 12,
	StiffAction_LongRange          = 13,
	StiffAction_SniperMode         = 14,
	StiffAction_CloseRange         = 15,
	StiffAction_KeenCompetition    = 16,
	StiffAction_ShoulderCannon     = 17,
	StiffAction_Throwing           = 18,
	StiffAction_Picking            = 19,
	StiffAction_Respawning         = 20,
	StiffAction_Scan               = 21,
	StiffAction_Turn               = 22,
	StiffAction_Rolling            = 23,
	StiffAction_OuterBlade         = 24,
	StiffAction_OuterGrenade       = 25,
	StiffAction_PunchThrow         = 26,
	StiffAction_OuterTrap          = 27,
	StiffAction_SelfExplode        = 28,
	StiffAction_Repair             = 29,
	StiffAction_Max                = 30,
};

enum class ETTLArsenalArmActionType : uint8
{
	Normal                         = 0,
	Break                          = 1,
	Attacking                      = 2,
	CaughtThrow                    = 3,
	Reloading                      = 4,
	Taking                         = 5,
	MAX                            = 6,
};

enum class ETTLEMultiplayWeaponIndex : uint8
{
	Left                           = 0,
	Right                          = 1,
	Shoulder                       = 2,
	Support                        = 3,
	RackL                          = 4,
	RackR                          = 5,
	CaughtLeft                     = 6,
	CaughtRight                    = 7,
	MAX                            = 8,
};

enum class ETTLECharacterCommonSpawnType : uint8
{
	SpawnMission                   = 0,
	SpawnGetOff                    = 1,
	SpawnEject                     = 2,
	SpawnUI                        = 3,
	SpawnBaseCamp                  = 4,
	SpawnSurvival_Outer            = 5,
	SpawnSurvival_Arsenal          = 6,
	SpawnSurvival_RandomNPC        = 7,
	TTLECharacterCommonSpawnType_MAX = 8,
};

enum class ETTLEArmWeaponCategory : uint8
{
	Invalid                        = 0,
	LongRange                      = 1,
	CloseRange                     = 2,
	Shield                         = 3,
	TTLEArmWeaponCategory_MAX      = 4,
};

enum class ETTLECharacterEditSubGroupID : uint8
{
	EditSubGrp_None                = 0,
	EditSubGrp_HairType            = 1,
	EditSubGrp_HairCol             = 2,
	EditSubGrp_FaceContours        = 3,
	EditSubGrp_FaceSkin            = 4,
	EditSubGrp_BrowType            = 5,
	EditSubGrp_BrowPosition        = 6,
	EditSubGrp_BrowCol             = 7,
	EditSubGrp_BeardType           = 8,
	EditSubGrp_BeardCol            = 9,
	EditSubGrp_EyesType            = 10,
	EditSubGrp_EyesCol             = 11,
	EditSubGrp_OddEyeType          = 12,
	EditSubGrp_OddEyeCol           = 13,
	EditSubGrp_SealType            = 14,
	EditSubGrp_SealCol             = 15,
	EditSubGrp_EyeLine             = 16,
	EditSubGrp_Lip                 = 17,
	EditSubGrp_OuterSuitType       = 18,
	EditSubGrp_OuterSuitCol00      = 19,
	EditSubGrp_OuterSuitCol01      = 20,
	EditSubGrp_OuterSuitCol02      = 21,
	EditSubGrp_RemodelCol00        = 22,
	EditSubGrp_RemodelCol01        = 23,
	EditSubGrp_RemodelCol02        = 24,
	EditSubGrp_Max                 = 25,
};

enum class ETTLECharacterEditGroupID : uint8
{
	EditGrp_None                   = 0,
	EditGrp_Gender                 = 1,
	EditGrp_SkinColor              = 2,
	EditGrp_Face                   = 3,
	EditGrp_Hair                   = 4,
	EditGrp_Beard                  = 5,
	EditGrp_Eyes                   = 6,
	EditGrp_Brow                   = 7,
	EditGrp_Makeup                 = 8,
	EditGrp_Voice                  = 9,
	EditGrp_Seal                   = 10,
	EditGrp_OuterSuit              = 11,
	EditGrp_Remodel                = 12,
	EditGrp_Max                    = 13,
};

enum class ETTLECharacterEditSubOrder : uint8
{
	SubItem_None                   = 0,
	SubItem_HairType               = 1,
	SubItem_HairCol                = 2,
	SubItem_FaceContours           = 3,
	SubItem_FaceSkin               = 4,
	SubItem_BrowType               = 5,
	SubItem_BrowPosition           = 6,
	SubItem_BrowCol                = 7,
	SubItem_BeardType              = 8,
	SubItem_BeardCol               = 9,
	SubItem_EyesType               = 10,
	SubItem_EyesCol                = 11,
	SubItem_OddEyeType             = 12,
	SubItem_OddEyeCol              = 13,
	SubItem_SealType               = 14,
	SubItem_SealCol                = 15,
	SubItem_EyeLine                = 16,
	SubItem_Lip                    = 17,
	SubItem_OuterSuitType          = 18,
	SubItem_OuterSuitCol00         = 19,
	SubItem_OuterSuitCol01         = 20,
	SubItem_OuterSuitCol02         = 21,
	SubItem_RemodelCol00           = 22,
	SubItem_RemodelCol01           = 23,
	SubItem_RemodelCol02           = 24,
	SubItem_Max                    = 25,
};

enum class ETTLECharacterEditTopOrder : uint8
{
	MainItem_Gender                = 0,
	MainItem_SkinColor             = 1,
	MainItem_Hair                  = 2,
	MainItem_Face                  = 3,
	MainItem_Brow                  = 4,
	MainItem_Beard                 = 5,
	MainItem_Eyes                  = 6,
	MainItem_Seal                  = 7,
	MainItem_Makeup                = 8,
	MainItem_Voice                 = 9,
	MainItem_OutetrSuit            = 10,
	MainItem_Remodel               = 11,
	MainItem_End                   = 12,
	MainItem_Max                   = 13,
};

enum class ETTLECharacterEditSection : uint8
{
	Section_None                   = 0,
	Section_Gender                 = 1,
	Section_SkinCol                = 2,
	Section_FaceList               = 3,
	Section_FaceTex                = 4,
	Section_BeardType              = 5,
	Section_BeardCol               = 6,
	Section_HairType               = 7,
	Section_HairRev                = 8,
	Section_HairCol                = 9,
	Section_IsOddEye               = 10,
	Section_EyeTypeBoth            = 11,
	Section_EyeTypeR               = 12,
	Section_EyeTypeL               = 13,
	Section_EyeColBoth             = 14,
	Section_EyeColR                = 15,
	Section_EyeColL                = 16,
	Section_BrowType               = 17,
	Section_BrowWidth              = 18,
	Section_BrowHeight             = 19,
	Section_BrowAngle              = 20,
	Section_BrowCol                = 21,
	Section_EyeLineCol             = 22,
	Section_LipsCol                = 23,
	Section_SealType               = 24,
	Section_SealRev                = 25,
	Section_SealCol                = 26,
	Section_VoiceType              = 27,
	Section_WearType               = 28,
	Section_WearCol00              = 29,
	Section_WearCol01              = 30,
	Section_WearCol02              = 31,
	Section_RemodelCol00           = 32,
	Section_RemodelCol01           = 33,
	Section_RemodelCol02           = 34,
	Section_Max                    = 35,
};

enum class ETTLECharacterEditSceneState : uint8
{
	SceneState_TopMenu             = 0,
	SceneState_SubMenu             = 1,
	SceneState_EditSelect          = 2,
	SceneState_EyeSelect           = 3,
	SceneState_Edit                = 4,
	SceneState_Max                 = 5,
};

enum class ETTLCharacterInfoHUDMode : uint8
{
	OtherCharacter                 = 0,
	Arsenal                        = 1,
	Outer                          = 2,
	NoUse                          = 3,
	Armor                          = 4,
	WeakPoint                      = 5,
	Max                            = 6,
};

enum class ETTLMarkerHUD3Status : uint8
{
	None                           = 0,
	WarningOverheat                = 1,
	WarningRaderSpike              = 2,
	WarningMissile                 = 3,
	StatusBurn                     = 4,
	StatusStun                     = 5,
	StatusFlash                    = 6,
	StatusAcid                     = 7,
	StatusRaderJamming             = 8,
	Duelable                       = 9,
	DuelDest                       = 10,
	DuelSrc                        = 11,
	InDuel                         = 12,
	WithinVision                   = 13,
	MAX                            = 14,
};

enum class ETTLMarkerHUD3ShowMode : uint8
{
	None                           = 0,
	Invisible                      = 1,
	Normal                         = 2,
	Left                           = 3,
	Right                          = 4,
	Up                             = 5,
	Down                           = 6,
	MAX                            = 7,
};

enum class ETTLECharaEditMenuTopState : uint8
{
	TopState_None                  = 0,
	TopState_OpenMain              = 1,
	TopState_OpenSub               = 2,
	TopState_MAX                   = 3,
};

enum class ETTLChatSettingChatLogVisibilityPhase : uint8
{
	None                           = 0,
	Phase1                         = 1,
	Phase2                         = 2,
	ETTLChatSettingChatLogVisibilityPhase_MAX = 3,
};

enum class ETTLChatSettingItem : uint8
{
	ChatLogVisibility              = 0,
	EditChatMessageForMission      = 1,
	EditChatMessageForBaseCamp     = 2,
	EditEmote                      = 3,
	ETTLChatSettingItem_MAX        = 4,
};

enum class ETTLChatSettingState : uint8
{
	Input_None                     = 0,
	Input_SelectItem               = 1,
	Input_SelectChatLogVisibility1 = 2,
	Input_SelectChatLogVisibility2 = 3,
	Input_SelectMessageSource      = 4,
	Input_SelectSwapDestination    = 5,
	Input_SelectMessageChangeMethod = 6,
	Input_SelectPresetMessageCategory = 7,
	Input_SelectPresetMessageItem  = 8,
	Input_SelectResetPresetMessage = 9,
	Input_SelectEmote              = 10,
	Input_SelectResetPresetEmote   = 11,
	Input_MAX                      = 12,
};

enum class ETTLChatTalkerPopUpMode : uint8
{
	PresetInput                    = 0,
	FreeInput                      = 1,
	Max                            = 2,
};

enum class ETTLCloseRangeWeaponPhase : uint8
{
	DropIdle                       = 0,
	DrawnIdle                      = 1,
	SheathedIdle                   = 2,
	StanceIdle                     = 3,
	Assault                        = 4,
	Attack                         = 5,
	Tsubazeriai                    = 6,
	TsubazeriaiAttack              = 7,
	TsubazeriaiKnockback           = 8,
	TsubazeriaiStepback            = 9,
	ShieldRepelled                 = 10,
	MAX                            = 11,
};

enum class ETTLCloseRangeAttackComboHitCondition : uint8
{
	None                           = 0,
	AttackHit                      = 1,
	MAX                            = 2,
};

enum class ETTLCloseRangeAttackComboAfterRotation : uint8
{
	Actor                          = 0,
	Camera                         = 1,
	MAX                            = 2,
};

enum class ETTLCloseRangeAttackComboCamera : uint8
{
	SyncActor                      = 0,
	Independent                    = 1,
	MAX                            = 2,
};

enum class ETTLCloseRangeAttackComboRotationCondition : uint8
{
	None                           = 0,
	Actor                          = 1,
	Camera                         = 2,
	MAX                            = 3,
};

enum class ETTLCloseRangeAttackComboInputCondition : uint8
{
	Unconditional                  = 0,
	ProhibitedMultipleInput        = 1,
	ProhibitedPrecedingInput       = 2,
	ProhibitedPrecedingAndMultipleInput = 3,
	MAX                            = 4,
};

enum class ETTLCloseRangeAttackInputState : uint8
{
	ContinuingOld                  = 0,
	Released                       = 1,
	NewlyPressed                   = 2,
	MAX                            = 3,
};

enum class ETTLCloseRangeAttackState : uint8
{
	None                           = 0,
	Stance                         = 1,
	Move                           = 2,
	Attack                         = 3,
	Follow                         = 4,
	End                            = 5,
	MAX                            = 6,
};

enum class ETTLCloseRangeAttackComboType : uint8
{
	None                           = 0,
	First                          = 1,
	RightSlice                     = 2,
	LeftSlice                      = 3,
	MAX                            = 4,
};

enum class ETTLCloseRangeAttackPhase : uint8
{
	None                           = 0,
	Stance_Assult                  = 1,
	Attack_Finish                  = 2,
	MAX                            = 3,
};

enum class ETTLCloseRangeAttackType : uint8
{
	None                           = 0,
	NormalRight                    = 1,
	NormalLeft                     = 2,
	NormalDoubleR                  = 3,
	NormalDoubleL                  = 4,
	NormalCaught                   = 5,
	ComboRight                     = 6,
	ComboLeft                      = 7,
	MAX                            = 8,
};

enum class ETTLCloseRangeAttackInput : uint8
{
	Right                          = 0,
	Left                           = 1,
	DoubleR                        = 2,
	DoubleL                        = 3,
	Caught                         = 4,
	MAX                            = 5,
};

enum class ETTLECommonPopupButtonDirection : uint8
{
	NoButton                       = 0,
	Horizontal                     = 1,
	Vertical                       = 2,
	NumberInput                    = 3,
	MAX                            = 4,
};

enum class ETTLECommonPopupRewardType : uint8
{
	IceToken                       = 0,
	Money                          = 1,
	Parts                          = 2,
	Mission                        = 3,
	Attachment                     = 4,
	Decoration                     = 5,
	ArsenalPreviewPose             = 6,
	ArsenalPreviewBG               = 7,
	OuterParts                     = 8,
	Emote                          = 9,
	BattleRule                     = 10,
	DLCMission                     = 11,
	MissionRanking                 = 12,
	TTLECommonPopupRewardType_MAX  = 13,
};

enum class ETTLCommunicationTalkEnableTerm : uint8
{
	CTalkEnableTerm_All            = 0,
	CTalkEnableTerm_OnlyOverHeat   = 1,
	CTalkEnableTerm_MAX            = 2,
};

enum class ETTLCommunicationTalkTerm : uint8
{
	CTalkTerm_VPDown_Medium        = 0,
	CTalkTerm_VPDown_Large         = 1,
	CTalkTerm_Destroyed            = 2,
	CTalkTerm_OverHeat             = 3,
	CTalkTerm_BadStatus            = 4,
	CTalkTerm_GuardFriend          = 5,
	CTalkTerm_ImportantFriend1Destroyed = 6,
	CTalkTerm_ImportantFriend2Destroyed = 7,
	CTalkTerm_ImportantFriend3Destroyed = 8,
	CTalkTerm_FriendDestroyed      = 9,
	CTalkTerm_PlayerVPDown_Medium  = 10,
	CTalkTerm_PlayerVPDown_Large   = 11,
	CTalkTerm_PlayerDestroyed      = 12,
	CTalkTerm_TargetDestroyed      = 13,
	CTalkTerm_Friendship           = 14,
	CTalkTerm_MissionStart         = 15,
	CTalkTerm_MissionCompleted     = 16,
	CTalkTerm_MissionFailed        = 17,
	CTalkTerm_FoundPlayerFirst     = 18,
	CTalkTerm_ReinforceEnemy       = 19,
	CTalkTerm_ReinforceEnemyHard   = 20,
	CTalkTerm_IdleTalk             = 21,
	CTalkTerm_Special1             = 22,
	CTalkTerm_Special2             = 23,
	CTalkTerm_Special3             = 24,
	CTalkTerm_FriendlyFire         = 25,
	CTalkTerm_MAX                  = 26,
};

enum class ETTLCommunicationTalkDataTableType : uint8
{
	DataTable_MessageSet           = 0,
	DataTable_TalkInfo             = 1,
	DataTable_TalkSetting          = 2,
	DataTable_MAX                  = 3,
};

enum class ETTLCommunicationTalkPriority : uint8
{
	CTalkPriority_Highest          = 0,
	CTalkPriority_AboveNormal      = 1,
	CTalkPriority_Normal           = 2,
	CTalkPriority_BelowNornal      = 3,
	CTalkPriority_Lowest           = 4,
	CTalkPriority_MAX              = 5,
};

enum class ETTLConsoleMsgType : uint8
{
	ConsoleIn                      = 0,
	ConsoleOut                     = 1,
	ConsoleRankUp                  = 2,
	MissionSelect                  = 3,
	MissionNPCDecide               = 4,
	ReleasedFacility               = 5,
	ETTLConsoleMsgType_MAX         = 6,
};

enum class ETTLSurvivalSpawnType : uint8
{
	Outer                          = 0,
	Inherit_Arsenal                = 1,
	Inherit_Outer                  = 2,
	Outer_Client                   = 3,
	Inherit_Arsenal_Client         = 4,
	MissionArsenal                 = 5,
	Max                            = 6,
};

enum class ETTLDmgDirType : uint8
{
	None                           = 0,
	Hit                            = 1,
	Hit2D                          = 2,
	Velocity                       = 3,
	Velocity2D                     = 4,
	ParentVelocity                 = 5,
	ParentVelocity2D               = 6,
	Forward                        = 7,
	Forward2D                      = 8,
	ParentForward                  = 9,
	ParentForward2D                = 10,
	Radial                         = 11,
	Radial2D                       = 12,
	ParentRadial                   = 13,
	ParentRadial2D                 = 14,
	Hit2D_Avoided                  = 15,
	Velocity2D_Avoided             = 16,
	ParentVelocity2D_Avoided       = 17,
	Forward2D_Avoided              = 18,
	ParentForward2D_Avoided        = 19,
	Radial2D_Avoided               = 20,
	ParentRadial2D_Avoided         = 21,
	Radial_FrontAvoided            = 22,
	HitUnder45                     = 23,
	HitUnder60                     = 24,
	VelocityUnder45                = 25,
	VelocityUnder60                = 26,
	ParentVelocityUnder45          = 27,
	ParentVelocityUnder60          = 28,
	ForwardUnder45                 = 29,
	ForwardUnder60                 = 30,
	ParentForwardUnder45           = 31,
	ParentForwardUnder60           = 32,
	RadialUnder45                  = 33,
	RadialUnder60                  = 34,
	ParentRadialUnder45            = 35,
	ParentRadialUnder60            = 36,
	LeftRight                      = 37,
	Max                            = 38,
};

enum class ETTLDebugHUDWidgets : uint8
{
	WIDGET_AI_DEBUG                = 0,
	WIDGET_TALK_DEBUG              = 1,
	WIDGET_CHARAFLAG_DEBUG         = 2,
	DEBUG_HUD_WIDGET_MAX           = 3,
	ETTLDebugHUDWidgets_MAX        = 4,
};

enum class ETTLEDebugMenuControllerKey : uint8
{
	Key_Up                         = 0,
	Key_Down                       = 1,
	Key_Max                        = 2,
};

enum class ETTLEDecorationConditionsType : uint8
{
	Type_beginning                 = 0,
	Type_WinCount                  = 1,
	Type_LoosCount                 = 2,
	Type_MultiCount                = 3,
	Type_Class                     = 4,
	Type_Tutorial                  = 5,
	Type_MissionHorizonCount       = 6,
	Type_MissionSkyUnionCount      = 7,
	Type_MissionZENCount           = 8,
	Type_EnemyDestroyCountAsArsenal = 9,
	Type_EnemyDestroyCountAsHuman  = 10,
	Type_CountCoopPlay             = 11,
	Type_CountDuelRequest          = 12,
	Type_CountDuelApproval         = 13,
	Type_Bounty                    = 14,
	Type_PercentMissionClear       = 15,
	Type_PercentMissionSubObjectsClear = 16,
	Type_CountMissionClear         = 17,
	Type_CountMissionClearMulti    = 18,
	Type_CountMissionClearArea01   = 19,
	Type_CountMissionClearArea02   = 20,
	Type_CountMissionClearArea03   = 21,
	Type_CountMissionClearArea04   = 22,
	Type_CountMissionClearArea05   = 23,
	Type_CountMissionClearArea06   = 24,
	Type_CountMissionClearArea07   = 25,
	Type_CountMissionClearArea08   = 26,
	Type_CountMissionClearArea09   = 27,
	Type_CountMissionClearArea10   = 28,
	Type_CountMissionClearArea11   = 29,
	Type_CountMissionClearArea12   = 30,
	Type_CountMissionClearArea13   = 31,
	Type_CountMissionClearArea14   = 32,
	Type_CountMissionClearArea15   = 33,
	Type_CountMissionClearArea16   = 34,
	Type_CountMissionClearArea17   = 35,
	Type_CountMissionClearArea18   = 36,
	Type_CountMissionClearArea19   = 37,
	Type_CountMissionClearArea20   = 38,
	Type_CountMissionClearArea21   = 39,
	Type_CountMissionClearArea22   = 40,
	Type_CountMissionClearArea23   = 41,
	Type_CountMissionClearArea24   = 42,
	Type_CountMissionClearArea25   = 43,
	Type_CountMissionClearArea26   = 44,
	Type_CountMissionClearArea27   = 45,
	Type_CountMissionClearArea28   = 46,
	Type_CountMissionClearArea29   = 47,
	Type_CountMissionClearArea30   = 48,
	Type_CountMissionClearArea31   = 49,
	Type_CountMissionClearArea32   = 50,
	Type_CountMissionPlayedAreaMulti01 = 51,
	Type_CountMissionPlayedAreaMulti02 = 52,
	Type_CountMissionPlayedAreaMulti03 = 53,
	Type_CountMissionPlayedAreaMulti04 = 54,
	Type_CountMissionPlayedAreaMulti05 = 55,
	Type_CountMissionPlayedAreaMulti06 = 56,
	Type_CountMissionPlayedAreaMulti07 = 57,
	Type_CountMissionPlayedAreaMulti08 = 58,
	Type_CountMissionPlayedAreaMulti09 = 59,
	Type_CountMissionPlayedAreaMulti10 = 60,
	Type_CountMissionPlayedAreaMulti11 = 61,
	Type_CountMissionPlayedAreaMulti12 = 62,
	Type_CountMissionPlayedAreaMulti13 = 63,
	Type_CountMissionPlayedAreaMulti14 = 64,
	Type_CountMissionPlayedAreaMulti15 = 65,
	Type_CountMissionPlayedAreaMulti16 = 66,
	Type_CountMissionPlayedAreaMulti17 = 67,
	Type_CountMissionPlayedAreaMulti18 = 68,
	Type_CountMissionPlayedAreaMulti19 = 69,
	Type_CountMissionPlayedAreaMulti20 = 70,
	Type_CountMissionPlayedAreaMulti21 = 71,
	Type_CountMissionPlayedAreaMulti22 = 72,
	Type_CountMissionPlayedAreaMulti23 = 73,
	Type_CountMissionPlayedAreaMulti24 = 74,
	Type_CountMissionPlayedAreaMulti25 = 75,
	Type_CountMissionPlayedAreaMulti26 = 76,
	Type_CountMissionPlayedAreaMulti27 = 77,
	Type_CountMissionPlayedAreaMulti28 = 78,
	Type_CountMissionPlayedAreaMulti29 = 79,
	Type_CountMissionPlayedAreaMulti30 = 80,
	Type_CountMissionPlayedAreaMulti31 = 81,
	Type_CountMissionPlayedAreaMulti32 = 82,
	Type_CountMercenaryBarrett     = 83,
	Type_CountMercenaryTellers     = 84,
	Type_CountMercenaryWest        = 85,
	Type_CountMercenaryPanzer      = 86,
	Type_CountMercenaryHell        = 87,
	Type_CountMercenarySteelknight = 88,
	Type_CountMercenaryInnocence   = 89,
	Type_CountMercenarySolomon     = 90,
	Type_CountAllyBarrett          = 91,
	Type_CountAllyTerrars          = 92,
	Type_CountAllyWest             = 93,
	Type_CountAllyPanzer           = 94,
	Type_CountAllyHell             = 95,
	Type_CountAllySteelknight      = 96,
	Type_CountAllyInnocence        = 97,
	Type_CountAllySolomon          = 98,
	Type_CountIceCream             = 99,
	Type_CountLabGetSkill          = 100,
	Type_LabAnyMachineBody         = 101,
	Type_LabLevelHead              = 102,
	Type_LabLevelBody              = 103,
	Type_LabLevelLegs              = 104,
	Type_LabLevelAll               = 105,
	Type_CountLabResetSkill        = 106,
	Type_CountWeaponPunch          = 107,
	Type_CountWeaponSupport        = 108,
	Type_CountWeaponMine           = 109,
	Type_CountWeaponJamming        = 110,
	Type_CountWeaponArkGun         = 111,
	Type_CountWeaponFlameThrower   = 112,
	Type_CountWeaponAcidGun        = 113,
	Type_CountWeaponGrenade        = 114,
	Type_CountWeaponSword          = 115,
	Type_CountWeaponFunnel         = 116,
	Type_CountWeaponMissile        = 117,
	Type_CountWeaponBazooka        = 118,
	Type_CountWeaponSniperRifle    = 119,
	Type_CountWeaponRailGun        = 120,
	Type_CountWeaponShotGun        = 121,
	Type_CountWeaponGravityGun     = 122,
	Type_CountWeaponLaser          = 123,
	Type_CountWeaponNormalGun      = 124,
	Type_CountWeaponShield         = 125,
	Type_CountCredit               = 126,
	Type_PercentHaveParts          = 127,
	Type_PercentHavePartsTrts      = 128,
	Type_PercentHavePartsFery      = 129,
	Type_PercentHavePartsSnak      = 130,
	Type_PercentHavePartsFish      = 131,
	Type_PercentHavePartsOgre      = 132,
	Type_PercentHavePartsSpid      = 133,
	Type_PercentHavePartsTrin      = 134,
	Type_PercentHavePartsLast      = 135,
	Type_PercentHavePartsBall      = 136,
	Type_PercentHaveWeapons        = 137,
	Type_PercentHaveWeaponsTrts    = 138,
	Type_PercentHaveWeaponsFery    = 139,
	Type_PercentHaveWeaponsSnak    = 140,
	Type_PercentHaveWeaponsFish    = 141,
	Type_PercentHaveWeaponsOgre    = 142,
	Type_PercentHaveWeaponsSpid    = 143,
	Type_PercentHaveWeaponsTrin    = 144,
	Type_PercentHaveWeaponsLast    = 145,
	Type_PercentHaveWeaponsBall    = 146,
	Type_CountKill                 = 147,
	Type_CountKillTrts             = 148,
	Type_CountKillFery             = 149,
	Type_CountKillSnak             = 150,
	Type_CountKillFish             = 151,
	Type_CountKillOgre             = 152,
	Type_CountKillSpid             = 153,
	Type_CountKillTrin             = 154,
	Type_CountKillLast             = 155,
	Type_CountKillBall             = 156,
	Type_CountDevelopTotal         = 157,
	Type_CountDevelopParts         = 158,
	Type_CountDevelopWeapons       = 159,
	Type_PercentHavePartsWeapon    = 160,
	Type_FieldScan                 = 161,
	Type_Max                       = 162,
};

enum class ETTLEDecorationInfoType : uint8
{
	Type_None                      = 0,
	Type_Color                     = 1,
	Type_Decal                     = 2,
	Type_Surface                   = 3,
	Type_Title                     = 4,
	Type_Emblem                    = 5,
	Type_ArsenalSkin               = 6,
	Type_MAX                       = 7,
};

enum class ETTLLockonReviseControlType : uint8
{
	ClickRightStick                = 0,
	RightStick                     = 1,
	MAX                            = 2,
};

enum class ETTLLockonReviseTimingType : uint8
{
	Disable                        = 0,
	OnlyOperating                  = 1,
	OnlyNonOperating               = 2,
	Always                         = 3,
	MAX                            = 4,
};

enum class ETTLLockonReviseProcessType : uint8
{
	Auto                           = 0,
	SemiAuto                       = 1,
	Manual                         = 2,
	MAX                            = 3,
};

enum class ETTLLockonReviseSortType : uint8
{
	Center                         = 0,
	Nearest                        = 1,
	MAX                            = 2,
};

enum class ETTLEReasonForFailureToReceiveDlc : uint8
{
	PartsOverLimit                 = 0,
	WeaponOverLimit                = 1,
	AttachmentOverLimit            = 2,
	MoneyOverLimit                 = 3,
	IceTokenOverLimit              = 4,
	Error                          = 5,
	Max                            = 6,
};

enum class ETTLEDlcState : uint8
{
	Closed                         = 0,
	Visible                        = 1,
	Available                      = 2,
	TTLEDlcState_MAX               = 3,
};

enum class ETTLEDlcType : uint8
{
	None                           = 0,
	ArsenalParts                   = 1,
	ArsenalWeapon                  = 2,
	ArsenalAttachment              = 3,
	PaintSurface                   = 4,
	PaintDecal                     = 5,
	PaintColor                     = 6,
	IceCream                       = 7,
	Credit                         = 8,
	Emblem                         = 9,
	PaintArsenalSkin               = 10,
	ArsenalPreviewPose             = 11,
	ArsenalPreviewBackground       = 12,
	OuterParts                     = 13,
	Emote                          = 14,
	BattleRule                     = 15,
	Mission                        = 16,
	MissionRanking                 = 17,
	TTLEDlcType_Max                = 18,
};

enum class ETTLEPaintTextureType : uint8
{
	Type_Surface                   = 0,
	Type_Decal                     = 1,
	Type_ArsenalSkin               = 2,
	Type_MAX                       = 3,
};

enum class ETTLEDockScene2RegPopupType : uint8
{
	RegPopup_NgPartsClass          = 0,
	RegPopup_NgAttach              = 1,
	RegPopup_NgAttachClass         = 2,
	RegPopup_MAX                   = 3,
};

enum class ETTLEDockScene2PopupState : uint8
{
	Popup_None                     = 0,
	Popup_CheckRemoveParts         = 1,
	Popup_CheckEquipGunArm         = 2,
	Popup_CheckExchangeWeapon      = 3,
	Popup_CheckScrapParts          = 4,
	Popup_ClassSave                = 5,
	Popup_ClassLoad                = 6,
	Popup_ClassUpdate              = 7,
	Popup_ClassDelete              = 8,
	Popup_PaintSave                = 9,
	Popup_PaintSave_ArsenalSkin    = 10,
	Popup_MAX                      = 11,
};

enum class ETTLEDockScene2TopMenu : uint8
{
	TopMenuButton_Assemble         = 0,
	TopMenuButton_Paint            = 1,
	TopMenuButton_Class            = 2,
	TopMenuButton_Trial            = 3,
	TopMenuButton_Assemble_Parts   = 4,
	TopMenuButton_Assemble_Weapon  = 5,
	TopMenuButton_Paint_Surface    = 6,
	TopMenuButton_Paint_Color      = 7,
	TopMenuButton_Paint_Decal      = 8,
	TopMenuButton_Paint_SkinSet    = 9,
	TopMenuButton_Max              = 10,
};

enum class ETTLEDockScene2State : uint8
{
	SceneState_Opening             = 0,
	SceneState_TopMenu             = 1,
	SceneState_AssembleMenu        = 2,
	SceneState_PaintMenu           = 3,
	SceneState_ClassSelectMenu     = 4,
	SceneState_PreviewMode         = 5,
	SceneState_WaitAnim            = 6,
	SceneState_Closing             = 7,
	SceneState_MAX                 = 8,
};

enum class ETTLEDockScrollButtonType : uint8
{
	ButtonType_Parts               = 0,
	ButtonType_DevelopParts        = 1,
	ButtonType_SecretDevelop       = 2,
	ButtonType_DevelopRequiredParts = 3,
	ButtonType_ShopPurchase        = 4,
	ButtonType_ShopSale            = 5,
	ButtonType_ScrapParts          = 6,
	ButtonType_Attachment          = 7,
	ButtonType_AttachmentSale      = 8,
	ButtonType_AttachmentEquip     = 9,
	ButtonType_BattleData          = 10,
	ButtonType_FlagItem            = 11,
	ButtonType_MAX                 = 12,
};

enum class ETTLEElementReleaseNoticeState : uint8
{
	None                           = 0,
	New                            = 1,
	Noticed                        = 2,
	MAX                            = 3,
};

enum class ETTLEElementReleaseNoticeTextType : uint8
{
	None                           = 0,
	Type1                          = 1,
	MAX                            = 2,
};

enum class ETTLEElementReleaseType : uint8
{
	None                           = 0,
	Facility_Mission               = 1,
	Facility_Dock                  = 2,
	Facility_Shop                  = 3,
	Facility_Factory               = 4,
	Facility_Ice                   = 5,
	Facility_Lab                   = 6,
	Facility_Online                = 7,
	Facility_System                = 8,
	Facility_SecretDevelop         = 9,
	Facility_LineChat              = 10,
	Facility_Online_Survival       = 11,
	Facility_MAX                   = 12,
	FacilityFunc_Mission_Compe     = 13,
	FacilityFunc_Mission_Npc       = 14,
	FacilityFunc_Dock_Equip        = 15,
	FacilityFunc_Dock_Paint        = 16,
	FacilityFunc_Dock_Class        = 17,
	FacilityFunc_Dock_RifleRange   = 18,
	FacilityFunc_Shop_Purchase     = 19,
	FacilityFunc_Shop_Sale         = 20,
	FacilityFunc_Shop_Attachment   = 21,
	FacilityFunc_Factory_Develop   = 22,
	FacilityFunc_Factory_Attach    = 23,
	FacilityFunc_Factory_Scrap     = 24,
	FacilityFunc_Factory_AttachList = 25,
	FacilityFunc_Factory_ExpandSlot = 26,
	FacilityFunc_Lab_Lab           = 27,
	FacilityFunc_Lab_CharaCustom   = 28,
	FacilityFunc_System_SaveLoad   = 29,
	FacilityFunc_System_Playlog    = 30,
	FacilityFunc_System_PlayerProfile = 31,
	FacilityFunc_Online_Coop       = 32,
	FacilityFunc_Online_Battle     = 33,
	FacilityFunc_Online_Ranking    = 34,
	FacilityFunc_Online_FriendList = 35,
	FacilityFunc_Online_MyNpcSetting = 36,
	FacilityFunc_Online_ChatSetting = 37,
	FacilityFunc_Online_Duel       = 38,
	FacilityFunc_Online_Survival   = 39,
	FacilityGame_Mirage            = 40,
	FacilityGame_OuterFlying       = 41,
	FacilityFunc_MAX               = 42,
	GameClear                      = 43,
	MAX                            = 44,
};

enum class ETTLENFeryBossDamages : uint8
{
	None                           = 0,
	Small                          = 1,
	Large                          = 2,
	ETTLENFeryBossDamages_MAX      = 3,
};

enum class ETTLENBossFeryWeak01State : uint8
{
	Closed                         = 0,
	Opening                        = 1,
	Opened                         = 2,
	Closing                        = 3,
	Breaked                        = 4,
	MAX                            = 5,
};

enum class ETTLENBossFeryWeak01Mode : uint8
{
	Anytime                        = 0,
	OnlyOpened                     = 1,
	Disable                        = 2,
	MAX                            = 3,
};

enum class ETTLENBossSnak01AICtrl : uint8
{
	Move                           = 0,
	Roll                           = 1,
	Acceleration                   = 2,
	Reduce                         = 3,
	EnemySpawn                     = 4,
	Tail                           = 5,
	Transformation                 = 6,
	DamageReaction                 = 7,
	Missile                        = 8,
	Circle                         = 9,
	Chase                          = 10,
	ArkGunMode                     = 11,
	RightAngle                     = 12,
	MissionShootToTarget           = 13,
	MissionSpawnEnemy              = 14,
	ETTLENBossSnak01AICtrl_MAX     = 15,
};

enum class ETTLENBossSnakCannonType : uint8
{
	Tarret                         = 0,
	Cannon                         = 1,
	Laser                          = 2,
	ETTLENBossSnakCannonType_MAX   = 3,
};

enum class ETTLENBossSnakDamageType : uint8
{
	None                           = 0,
	First                          = 1,
	Front                          = 2,
	Center                         = 3,
	Back                           = 4,
	ETTLENBossSnakDamageType_MAX   = 5,
};

enum class ETTLENBossSnakForm : uint8
{
	First                          = 0,
	Second                         = 1,
	ETTLENBossSnakForm_MAX         = 2,
};

enum class EMissionSnakFlag : uint8
{
	NONE                           = 0,
	MODE_WAIT                      = 1,
	MODE_WAIT_END                  = 2,
	MODE_SH_START                  = 3,
	MODE_SH_END                    = 4,
	MODE_ZK_START                  = 5,
	MODE_ZK_END                    = 6,
	MODE_CHANGE_ALLY               = 7,
	MODE_CHANGE_ENEMY              = 8,
	MissionSnakFlag_MAX            = 9,
};

enum class ETTLENBossTrts01AICtrl : uint8
{
	Idle                           = 0,
	Move                           = 1,
	Stamp                          = 2,
	WholeBodyBarrier               = 3,
	SliceLaser                     = 4,
	DamageReaction                 = 5,
	Death                          = 6,
	CannonAttack                   = 7,
	SummonEnemy                    = 8,
	ExtraThickLaser                = 9,
	Turn                           = 10,
	LongJump                       = 11,
	ShortJump                      = 12,
	StampJump                      = 13,
	Anger                          = 14,
	ShootMissile                   = 15,
	Tackle                         = 16,
	MAX                            = 17,
};

enum class ETTLENBossTrts01AnimAct : uint8
{
	Walk                           = 0,
	Stamp                          = 1,
	DamageReaction                 = 2,
	Death                          = 3,
	Turn                           = 4,
	Jump                           = 5,
	Tackle                         = 6,
	Anger                          = 7,
	MAX                            = 8,
};

enum class ETTLENBossTrts01TurnMode : uint8
{
	Normal                         = 0,
	Precise                        = 1,
	MAX                            = 2,
};

enum class ETTLENBossTrts01Eye : uint8
{
	Normal                         = 0,
	ToAnger                        = 1,
	Anger                          = 2,
	ToDeath                        = 3,
	Death                          = 4,
	MAX                            = 5,
};

enum class ETTLENBossTrts01Armor : uint8
{
	LegFR                          = 0,
	LegFL                          = 1,
	LegBR                          = 2,
	LegBL                          = 3,
	MAX                            = 4,
};

enum class ETTLENBossTrts01Jump : uint8
{
	Long                           = 0,
	Short                          = 1,
	Stamp                          = 2,
	MAX                            = 3,
};

enum class ETTLENBossTrts01Walk : uint8
{
	Start                          = 0,
	FR                             = 1,
	FL                             = 2,
	BR                             = 3,
	BL                             = 4,
	MAX                            = 5,
};

enum class ETTLENBossTrts01IdleState : uint8
{
	Base                           = 0,
	BRtoFR                         = 1,
	FRtoBL                         = 2,
	BLtoFL                         = 3,
	FLtoBR                         = 4,
	MAX                            = 5,
};

enum class ETTLENBossTrts01ReviseFoot : uint8
{
	None                           = 0,
	All                            = 1,
	OtherFR                        = 2,
	OtherFL                        = 3,
	OtherBR                        = 4,
	OtherBL                        = 5,
	OtherFR_BL                     = 6,
	OnlyFR                         = 7,
	OnlyFL                         = 8,
	OnlyBR                         = 9,
	OnlyBL                         = 10,
	MAX                            = 11,
};

enum class ETTLENBossTrts01AtkCldState : uint8
{
	None                           = 0,
	Walk                           = 1,
	StampSwing                     = 2,
	StampImpact                    = 3,
	WholeBodyBarrier               = 4,
	SliceLaser                     = 5,
	LargeLaser                     = 6,
	LongJumpStamp                  = 7,
	ShortJumpStamp                 = 8,
	StampJumpStamp                 = 9,
	StampJumpAttack                = 10,
	Tackle                         = 11,
	TackleStamp                    = 12,
	MAX                            = 13,
};

enum class ETTLENBossTrts01AtkCld : uint8
{
	Body                           = 0,
	LegFR                          = 1,
	LegFL                          = 2,
	LegBR                          = 3,
	LegBL                          = 4,
	All                            = 5,
	MAX                            = 6,
};

enum class ETTLENBossTrts01AtkCollide : uint8
{
	None                           = 0,
	Walk                           = 1,
	StampSwing                     = 2,
	StampImpact                    = 3,
	WholeBodyBarrier               = 4,
	SliceLaser                     = 5,
	LargeLaser                     = 6,
	LongJumpStamp                  = 7,
	ShortJumpStamp                 = 8,
	StampJumpStamp                 = 9,
	StampJumpAttack                = 10,
	Tackle                         = 11,
	TackleStamp                    = 12,
	MAX                            = 13,
};

enum class ETTLENBossTrts01DmgReact : uint8
{
	None                           = 0,
	Body                           = 1,
	LegFR                          = 2,
	LegFL                          = 3,
	LegBR                          = 4,
	LegBL                          = 5,
	LargeCannon                    = 6,
	Laser                          = 7,
	Stun                           = 8,
	MAX                            = 9,
};

enum class ETTLENBossTrts01Cannon : uint8
{
	BodyFUpR                       = 0,
	BodyMUpR                       = 1,
	BodyBUpR                       = 2,
	BodyFUpL                       = 3,
	BodyMUpL                       = 4,
	BodyBUpL                       = 5,
	BodyFUdR                       = 6,
	BodyMUdR                       = 7,
	BodyBUdR                       = 8,
	BodyFUdL                       = 9,
	BodyMUdL                       = 10,
	BodyBUdL                       = 11,
	LegFROUpR                      = 12,
	LegFROUpL                      = 13,
	LegFRIUdR                      = 14,
	LegFRIUdL                      = 15,
	LegFLOUpR                      = 16,
	LegFLOUpL                      = 17,
	LegFLIUdR                      = 18,
	LegFLIUdL                      = 19,
	LegBROUpR                      = 20,
	LegBROUpL                      = 21,
	LegBRIUdR                      = 22,
	LegBRIUdL                      = 23,
	LegBLOUpR                      = 24,
	LegBLOUpL                      = 25,
	LegBLIUdR                      = 26,
	LegBLIUdL                      = 27,
	MAX                            = 28,
};

enum class ETTLENBossTrts01WeakParts : uint8
{
	Body                           = 0,
	LegFR                          = 1,
	LegFL                          = 2,
	LegBR                          = 3,
	LegBL                          = 4,
	Cannon                         = 5,
	MAX                            = 6,
};

enum class ETTLENBossTrts01Weak : uint8
{
	BodyFR1                        = 0,
	BodyFR2                        = 1,
	BodyFL1                        = 2,
	BodyFL2                        = 3,
	BodyBR1                        = 4,
	BodyBR2                        = 5,
	BodyBL1                        = 6,
	BodyBL2                        = 7,
	LegFR                          = 8,
	LegFL                          = 9,
	LegBR                          = 10,
	LegBL                          = 11,
	CannonFR                       = 12,
	CannonFL                       = 13,
	CannonMR                       = 14,
	CannonML                       = 15,
	CannonBR                       = 16,
	CannonBL                       = 17,
	MAX                            = 18,
};

enum class ETTLBossTrtsLaserExtraThickLaserEffect : uint8
{
	None                           = 0,
	Charge                         = 1,
	Notice                         = 2,
	Shoot                          = 3,
	Muzzle                         = 4,
	Laser                          = 5,
	Hit                            = 6,
	PlayerHit                      = 7,
	MAX                            = 8,
};

enum class ETTLENBossTrtsMissileState : uint8
{
	None                           = 0,
	Idle                           = 1,
	ToShoot                        = 2,
	Shoot                          = 3,
	ToIdle                         = 4,
	Dead                           = 5,
	MAX                            = 6,
};

enum class ETTLENBossTrtsWeak01State : uint8
{
	Closed                         = 0,
	Opening                        = 1,
	Opened                         = 2,
	Closing                        = 3,
	Breaked                        = 4,
	MAX                            = 5,
};

enum class ETTLENBossTrtsWeak01Mode : uint8
{
	Anytime                        = 0,
	OnlyOpened                     = 1,
	Disable                        = 2,
	MAX                            = 3,
};

enum class ETTLEnemyLongRangeWeaponShootDirectionType : uint8
{
	TargetActor                    = 0,
	Muzzle                         = 1,
	ReactionType_Max               = 2,
	TTLEnemyLongRangeWeaponShootDirectionType_MAX = 3,
};

enum class ETTLPushCollideType : uint8
{
	None                           = 0,
	Sphere                         = 1,
	Capsule                        = 2,
	Box                            = 3,
	ETTLPushCollideType_MAX        = 4,
};

enum class ETTLENFeryBase_DeadAnim : uint8
{
	OnSky                          = 0,
	OnGround                       = 1,
	Max                            = 2,
};

enum class ETTLENFeryBase_SetType : uint8
{
	Velocity                       = 0,
	Damage                         = 1,
	Max                            = 2,
};

enum class ETTLENBossFeryTurnEasingFunc : uint8
{
	Linear                         = 0,
	Step                           = 1,
	SinIn                          = 2,
	SinOut                         = 3,
	SinInOut                       = 4,
	EaseIn                         = 5,
	EaseOut                        = 6,
	EaseInOut                      = 7,
	ExpoIn                         = 8,
	ExpoOut                        = 9,
	ExpoInOut                      = 10,
	CircularIn                     = 11,
	CircularOut                    = 12,
	CircularInOut                  = 13,
	ETTLENBossFeryTurnEasingFunc_MAX = 14,
};

enum class ETTLEvManEventFlag : uint8
{
	Flag_None                      = 0,
	Flag_LoadingLevel              = 1,
	Flag_LoadingLevelSequence      = 2,
	Flag_LoadedLevelSequence       = 16,
	Flag_EnableSkip                = 32,
	Flag_IsSkipping                = 64,
	Flag_IsMessageWaiting          = 128,
	Flag_IsStartedNowLoading       = 256,
	Flag_IsForceGetOnArsenal       = 512,
	Flag_IsStopedSequencer         = 1024,
	Flag_IsStoppingFromSequencer   = 2048,
	Flag_IsJumpPlaybackPosition    = 4096,
	Flag_IsJumpResetWaitMessage    = 8192,
	Flag_IsDisablePhysicsOnCameraCut = 16384,
	Flag_IsStopedThunderScreenEffect = 65536,
	Flag_IsStopedBaseCampScanAnim  = 131072,
	Flag_IsWarningAreaForceControlled = 262144,
	Flag_IsTalkDemoLightingVisible = 524288,
	Flag_MAX                       = 524289,
};

enum class ETTLEvManBindingActorFlag : uint8
{
	Flag_None                      = 0,
	Flag_IsPlayerCharacter         = 1,
	Flag_IsAttachedToComponent     = 2,
	Flag_MAX                       = 3,
};

enum class ETTLEvManState : uint8
{
	State_Idle                     = 0,
	State_StartLoading             = 1,
	State_LoadLevel                = 2,
	State_WaitLoadLevel            = 3,
	State_WaitLoadLevelNetSync     = 4,
	State_WaitVisibleLevel         = 5,
	State_WaitSpawnActor           = 6,
	State_WaitVisibleNetSync       = 7,
	State_WaitCompletedVisibleLevel = 8,
	State_StartEvent               = 9,
	State_WaitEvent                = 10,
	State_FinishEvent              = 11,
	State_FinishEventLoading       = 12,
	State_FinishNetSync            = 13,
	State_CleanupEvent             = 14,
	State_Max                      = 15,
};

enum class ETTLEventType : uint8
{
	Type_None                      = 0,
	Type_CommunicationTalk         = 1,
	Type_MissionBriefing           = 2,
	Type_TalkDemo                  = 3,
	Type_PuppetShowDemo            = 4,
	Type_Max                       = 5,
};

enum class ETTLEvSeqDestroyablePartsState : uint8
{
	EvSeqDestroyablePartsState_Normal = 0,
	EvSeqDestroyablePartsState_HalfDestroy = 1,
	EvSeqDestroyablePartsState_CompletelyDestroy = 2,
	EvSeqDestroyablePartsState_Max = 3,
};

enum class ETTLMissileExplosionVFXType : uint8
{
	MissileExplosionVFX_None       = 0,
	MissileExplosionVFX_S          = 1,
	MissileExplosionVFX_L          = 2,
	MissileExplosionVFX_XL         = 3,
	MissileExplosionVFX_XXL        = 4,
	MissileExplosionVFX_Max        = 5,
};

enum class ETTLExplosionSize : uint8
{
	ExplosionSize_MinimumMissile   = 0,
	ExplosionSize_Small            = 1,
	ExplosionSize_Middle           = 2,
	ExplosionSize_Large            = 3,
	ExplosionSize_70Common         = 4,
	ExplosionSize_100Common        = 5,
	ExplosionSize_Max              = 6,
};

enum class ETTLEFactoryScenePopupState : uint8
{
	Popup_None                     = 0,
	Popup_DecideAttachmentSlot     = 1,
	Popup_CheckEquipAttachment     = 2,
	Popup_EndEquipAttachment       = 3,
	Popup_NoAttachment             = 4,
	Popup_LackCash                 = 5,
	Popup_CannotGetParts           = 6,
	Popup_FinishDevelop            = 7,
	Popup_CheckStartDevelop        = 8,
	Popup_DevelopableBossParts     = 9,
	Popup_CheckDeleteClass         = 10,
	Popup_CheckScrap               = 11,
	Popup_ScrapResult              = 12,
	Popup_TransitionToAttach       = 13,
	Popup_NgAttach                 = 14,
	Popup_ExpandSlot               = 15,
	Popup_EndExpandSlot            = 16,
	Popup_MAX                      = 17,
};

enum class ETTLEFactorySceneTopMenu : uint8
{
	TopMenuButton_Develop_Parts    = 0,
	TopMenuButton_Develop_Weapon   = 1,
	TopMenuButton_BattleData       = 2,
	TopMenuButton_Attach_Parts     = 3,
	TopMenuButton_Attach_Weapon    = 4,
	TopMenuButton_Scrap_Parts      = 5,
	TopMenuButton_Scrap_Weapon     = 6,
	TopMenuButton_AttachmentList_Parts = 7,
	TopMenuButton_AttachmentList_Weapon = 8,
	TopMenuButton_Max              = 9,
};

enum class ETTLEFactorySceneState : uint8
{
	SceneState_Opening             = 0,
	SceneState_TopMenu             = 1,
	SceneState_Develop             = 2,
	SceneState_Attach              = 3,
	SceneState_Scrap               = 4,
	SceneState_AttachmentList      = 5,
	SceneState_BattleData          = 6,
	SceneState_WaitAnim            = 7,
	SceneState_Closing             = 8,
	SceneState_MAX                 = 9,
};

enum class ETTLEForceSaveSceneSate : uint8
{
	Opening                        = 0,
	PlayingOpenAnim                = 1,
	WaitingInput                   = 2,
	Idle                           = 3,
	Saving                         = 4,
	Closing                        = 5,
	Closed                         = 6,
	MAX                            = 7,
};

enum class ETTLFriendListSceneState : uint8
{
	ReadFriendsList                = 0,
	FindFriendRoom                 = 1,
	GetFriendRanking_1             = 2,
	GetFriendRanking_2             = 3,
	GetFriendRanking_3             = 4,
	GetFriendRankingEnd            = 5,
	Input_FriendListOperation      = 6,
	ETTLFriendListSceneState_MAX   = 7,
};

enum class EFTTLFriendListOnlineState : uint8
{
	Online                         = 0,
	InCoopRoom                     = 1,
	InBattleRoom                   = 2,
	InTeamRoom                     = 3,
	InCustom2on2Room               = 4,
	In2on2Room                     = 5,
	PlayingRankMatch               = 6,
	InSurvivalRoom                 = 7,
	FTTLFriendListOnlineState_MAX  = 8,
};

enum class ETTLAutomationManagerType : uint8
{
	None                           = 0,
	AllCheck                       = 1,
	SelectTargetMission            = 2,
	AllCheck_AutoBattle            = 3,
	Online_Coop_Gust               = 4,
	Online_Coop_InRoom             = 5,
	Online_Coop_Host               = 6,
	OnlineCoop_Host                = 7,
	OnlineCoop_HostRoomEnterExit   = 8,
	OnlineCoop_GuestRoomEnterExit  = 9,
	Online_Battle1vs1_Host         = 10,
	Online_Battle1vs1_Guest        = 11,
	Online_Battle1vs1_Host_InRoom  = 12,
	Online_Battle1vs1_Guest_InRoom = 13,
	OnlineBattle_1VS1RankMatch     = 14,
	OnlineBattle_1VS1RankMatch_Continue = 15,
	Online_Battle2vs2_Tag_Host     = 16,
	Online_Battle2vs2_Tag_Guest    = 17,
	Offline_Coop_Host              = 18,
	Offline_Coop_Guest             = 19,
	Offline_Coop_Host_InRoom       = 20,
	Offline_Coop_Client_InRoom     = 21,
	Offline_Battle1vs1_Host        = 22,
	Offline_Battle1vs1_Client      = 23,
	Offline_Battle1vs1_Host_InRoom = 24,
	Offline_Battle1vs1_Client_InRoom = 25,
	Online_Battle2vs2_Tag_TeamHost_Guest = 26,
	Online_Survival_Host           = 27,
	Online_Survival_Guest          = 28,
	Local_Survival_Host            = 29,
	Local_Survival_Guest           = 30,
	ETTLAutomationManagerType_MAX  = 31,
};

enum class ETTLHideHUDMode : uint8
{
	None                           = 0,
	All                            = 1,
	WithoutRadar                   = 2,
	Max                            = 3,
};

enum class ETTLChatMessageFor : uint8
{
	ForBaseCamp                    = 0,
	ForMissionCoop                 = 1,
	ForMissionPVP                  = 2,
	Emote                          = 3,
	Max                            = 4,
};

enum class ETTLRaderAlphaCalcType : uint8
{
	Relative1                      = 0,
	Relative2                      = 1,
	Absolute                       = 2,
	KeepMax                        = 3,
	Max                            = 4,
};

enum class ETTLDebugSaveEditorUI_ControllMode : uint8
{
	Scroll                         = 0,
	Content                        = 1,
	Max                            = 2,
};

enum class ETTLDebugSaveEditorContent_Mode : uint8
{
	Edit_None                      = 0,
	Edit_FString                   = 1,
	Max                            = 2,
};

enum class ETTLDebugSaveEditor_ValueType : uint8
{
	BOOL_TYPE                      = 0,
	INT32_TYPE                     = 1,
	INT64_TYPE                     = 2,
	UINT64_TYPE                    = 3,
	FLOAT_TYPE                     = 4,
	STRING_TYPE                    = 5,
	NAME_TYPE                      = 6,
	DATE_TYPE                      = 7,
	Max                            = 8,
};

enum class ETTLMatchmakeErrorType : uint8
{
	Unknown                        = 0,
	DuplicateEntry                 = 1,
	InvalidPassword                = 2,
	InvalidUniqueId                = 3,
	RoundNotFound                  = 4,
	StatsNotFound                  = 5,
	InvalidArgument                = 6,
	NotParticipatedGathering       = 7,
	AlreadyExists                  = 8,
	RoundArbitrated                = 9,
	NotParticipatedRound           = 10,
	ETTLMatchmakeErrorType_MAX     = 11,
};

enum class ETTLSessionErrorType : uint8
{
	Disconnect                     = 0,
	SessionVoid                    = 1,
	SessionFull                    = 2,
	ETTLSessionErrorType_MAX       = 3,
};

enum class ETTLSessionType : uint8
{
	Type_Host                      = 0,
	Type_Client                    = 1,
	Type_None                      = 2,
	Type_MAX                       = 3,
};

enum class ETTLSessionSettingSearchResult : uint8
{
	Found                          = 0,
	NotFound                       = 1,
	WrongType                      = 2,
	ETTLSessionSettingSearchResult_MAX = 3,
};

enum class ETTLRetireStateForPVPResult : uint8
{
	Everyone_Not_Retired           = 0,
	Retired_1P                     = 1,
	Retired_2P                     = 2,
	ETTLRetireStateForPVPResult_MAX = 3,
};

enum class ETTLMultiplayMenuState : uint8
{
	Multiplay_None                 = 0,
	Multiplay_Init                 = 1,
	Multiplay_Local                = 2,
	Multiplay_Internet             = 3,
	Multiplay_MAX                  = 4,
};

enum class ETTLDevelopmentState : uint8
{
	Dev_StandaloneDebug            = 0,
	Dev_GameDebug                  = 1,
	Dev_GameRelease                = 2,
	Dev_GameShip                   = 3,
	Dev_MAX                        = 4,
};

enum class ETTLEBootMode : uint8
{
	Boot_Default                   = 0,
	Boot_Main                      = 1,
	Boot_Trial                     = 2,
	Boot_Event                     = 3,
	Boot_MAX                       = 4,
};

enum class ETTLResolutionPreset : uint8
{
	Res800x600                     = 0,
	Res1280x720                    = 1,
	Res1366x768                    = 2,
	Res1600x900                    = 3,
	Res1680x1050                   = 4,
	Res1920x1080                   = 5,
	Res2048x1152                   = 6,
	Res2560x1080                   = 7,
	Res2560x1440                   = 8,
	Res3840x2160                   = 9,
	Max                            = 10,
};

enum class ETTLAntiAliasMethod : uint8
{
	None                           = 0,
	FXAA                           = 1,
	TempAA                         = 2,
	Max                            = 3,
};

enum class ETTLEHUDArsenalRackWeaponAnimation : uint8
{
	UseLeft                        = 0,
	UseRight                       = 1,
	Change1Left                    = 2,
	Change1Right                   = 3,
	Change2Left                    = 4,
	Change2Right                   = 5,
	Max                            = 6,
};

enum class ETTLFailedChangeWeaponReason : uint8
{
	EquippedGunArm                 = 0,
	CompletelyDestroyedArm         = 1,
	TractorWeapon                  = 2,
	Max                            = 3,
};

enum class ETTLEHUDArsenalWeaponAnimation : uint8
{
	In                             = 0,
	Out                            = 1,
	Change1Left                    = 2,
	Change1Right                   = 3,
	Change2Left                    = 4,
	Change2Right                   = 5,
	Max                            = 6,
};

enum class ETTLHUDCharacterInfoOutlineColor : uint8
{
	Black                          = 0,
	Red                            = 1,
	Max                            = 2,
};

enum class ETTLHUDCharacterInfoAnimation : uint8
{
	None                           = 0,
	AllyArsenal                    = 1,
	EnemyArsenal                   = 2,
	Other                          = 3,
	AllyArsenalAppendText          = 4,
	EnemyArsenalAppendText         = 5,
	OtherAppendText                = 6,
	OtherAppendTextFast            = 7,
	EnemyArsenalAppendGauge        = 8,
	EnemyArsenalAppendPrize        = 9,
	EnemyArsenalAppendPrizeAndGauge = 10,
	Max                            = 11,
};

enum class ETTLEHudCustomInit : uint8
{
	Hudcustom_vp_now               = 0,
	Hudcustom_vp_max               = 1,
	Hudcustom_tmp_now              = 2,
	Hudcustom_tmp_max              = 3,
	Hudcustom_femto_now            = 4,
	Hudcustom_femto_max            = 5,
	Hudcustom_arm_s_now            = 6,
	Hudcustom_arm_s_max            = 7,
	Hudcustom_arm_l_now            = 8,
	Hudcustom_arm_l_max            = 9,
	Hudcustom_arm_r_now            = 10,
	Hudcustom_arm_r_max            = 11,
	Hudcustom_arm_o_now            = 12,
	Hudcustom_arm_o_max            = 13,
	Hudcustom_time_min             = 14,
	Hudcustom_time_sec             = 15,
	Hudcustom_outer_hp_now         = 16,
	Hudcustom_outer_hp_max         = 17,
	Hudcustom_outer_s_now          = 18,
	Hudcustom_outer_s_max          = 19,
	Hudcustom_outer_f_now          = 20,
	Hudcustom_outer_f_max          = 21,
	Hudcustom_outer_shot_now       = 22,
	Hudcustom_outer_shot_max       = 23,
	Hudcustom_outer_trap_now       = 24,
	Hudcustom_outer_trap_max       = 25,
	Hudcustom_outer_grenade_now    = 26,
	Hudcustom_outer_grenade_max    = 27,
	Hudcustom_outer_time_min       = 28,
	Hudcustom_outer_time_sec       = 29,
	Hudcustom_MAX                  = 30,
};

enum class ETTLHUDDuelMemberAnimation : uint8
{
	On                             = 0,
	Off0                           = 1,
	Off1                           = 2,
	Max                            = 3,
};

enum class ETTLHUDFemtoShiftGaugeIcon : uint8
{
	Asault                         = 0,
	Wing                           = 1,
	Shield                         = 2,
	Max                            = 3,
};

enum class ETTLHUDGaugeEffectMode : uint8
{
	None                           = 0,
	Increase                       = 1,
	Decrease                       = 2,
	Max                            = 3,
};

enum class ETTLHUDGaugeMode : uint8
{
	Normal                         = 0,
	Blind                          = 1,
	Max                            = 2,
};

enum class ETTLHUDGoalItemAnimation : uint8
{
	None                           = 0,
	In                             = 1,
	Max                            = 2,
};

enum class ETTLGoalItemBackgroundType : uint8
{
	None                           = 0,
	MainGoal                       = 1,
	SubGoal                        = 2,
	Max                            = 3,
};

enum class ETTLHUDJostleAnimation : uint8
{
	None                           = 0,
	In                             = 1,
	Out                            = 2,
	Push                           = 3,
	Max                            = 4,
};

enum class ETTLHUDLogAnimation : uint8
{
	None                           = 0,
	TalkerIn                       = 1,
	TalkerOut                      = 2,
	Max                            = 3,
};

enum class ETTLHUDLogItemAnimation : uint8
{
	None                           = 0,
	NearDeathLoop                  = 1,
	GettingRespawnedLoop           = 2,
	CommonLogIn                    = 3,
	ChatLogIn                      = 4,
	Max                            = 5,
};

enum class ETTLHUDLogItemMode : uint8
{
	None                           = 0,
	CommonLog                      = 1,
	ChatLog                        = 2,
	Member                         = 3,
	MemberWithoutChat              = 4,
	Max                            = 5,
};

enum class EUTTLHUDMarker3Animation : uint8
{
	None                           = 0,
	In                             = 1,
	DirectionDown                  = 2,
	DirectionLeft                  = 3,
	DirectionUp                    = 4,
	DirectionRight                 = 5,
	Show                           = 6,
	Max                            = 7,
};

enum class ETTLHUDMissionMainCommandKind : uint8
{
	Command_None                   = 0,
	Command_ShowHUD                = 1,
	Command_HideHUD                = 2,
	Command_PlayInArsenalHUD       = 3,
	Command_PlayOutArsenalHUD      = 4,
	Command_PlayInOuterHUD         = 5,
	Command_PlayOutOuterHUD        = 6,
	Command_ShowOuterHUD           = 7,
	Command_HideOuterHUD           = 8,
	Command_SetUpMissionProgressHUD = 9,
	Command_PlayInMissionProgressHUD = 10,
	Command_PlayOutMissionProgressHUD = 11,
	Command_ShowMissionProgressHUD = 12,
	Command_HideMissionProgressHUD = 13,
	Command_PlaySubGoalMissionProgressHUD = 14,
	Command_OpenWeaponEquipHUD     = 15,
	Command_CloseWeaponEquipHUD    = 16,
	Command_Change1WeaponEquipHUD  = 17,
	Command_Change2WeaponEquipHUD  = 18,
	Command_ApplyArsenalHUDCustom  = 19,
	Command_ApplyHUDCustom         = 20,
	Command_WaitOnly               = 21,
	Max                            = 22,
};

enum class ETTLHUDMissionProgressAnimation : uint8
{
	None                           = 0,
	In                             = 1,
	Out                            = 2,
	Max                            = 3,
};

enum class ETTLHUDNoticeAnimation : uint8
{
	None                           = 0,
	In                             = 1,
	Out                            = 2,
	Red                            = 3,
	Max                            = 4,
};

enum class ETTLHUDPVPResultKind : uint8
{
	None                           = 0,
	Win                            = 1,
	Lose                           = 2,
	Draw                           = 3,
	Max                            = 4,
};

enum class ETTLHUDPVPResultCommandKind : uint8
{
	None                           = 0,
	Show                           = 1,
	Hide                           = 2,
	SetStatusText                  = 3,
	SetMoneyText                   = 4,
	SetCurrentMoney                = 5,
	SetVariationMoney              = 6,
	PlayResultAnimation            = 7,
	SetMoneyWithAnimation          = 8,
	HiddenMoney                    = 9,
	SetWinCount                    = 10,
	AddPvPItem                     = 11,
	AddDuelItem                    = 12,
	Max                            = 13,
};

enum class ETTLEPVPResultType : uint8
{
	None                           = 0,
	PvP                            = 1,
	Duel                           = 2,
	Max                            = 3,
};

enum class ETTLHUDPVPResultGaugeEaseType : uint8
{
	None                           = 0,
	Linear                         = 1,
	EaseIn                         = 2,
	EaseOut                        = 3,
	EaseInOut                      = 4,
	Max                            = 5,
};

enum class ETTLHUDPVPResultItemAnimation : uint8
{
	In                             = 0,
	Add                            = 1,
	Sub                            = 2,
	Defeated                       = 3,
	Max                            = 4,
};

enum class ETTLTTLHUDRestTargetAnimation : uint8
{
	None                           = 0,
	In                             = 1,
	Out                            = 2,
	Max                            = 3,
};

enum class ETTLResultIconType : uint8
{
	Icon_None                      = 0,
	Icon_NoCheck                   = 1,
	Icon_Check                     = 2,
	Icon_MainGoal                  = 3,
	Icon_SubGoal                   = 4,
	Icon_Failure                   = 5,
	Icon_Positive                  = 6,
	Icon_Negative                  = 7,
	Icon_MainGoal_Comp             = 8,
	Icon_SubGoal_Comp              = 9,
	Max                            = 10,
};

enum class ETTLHUDStartDuelAnimation : uint8
{
	None                           = 0,
	InTitle                        = 1,
	InMain1                        = 2,
	InMain2                        = 3,
	Out1                           = 4,
	Out2                           = 5,
	DuelIn1a                       = 6,
	DuelIn1b                       = 7,
	DuelIn2a                       = 8,
	DuelIn2b                       = 9,
	DuelIn3a                       = 10,
	DuelIn3b                       = 11,
	DuelOut                        = 12,
	Max                            = 13,
};

enum class ETTLHUDStartDuelCommandKind : uint8
{
	Command_None                   = 0,
	Command_SetUp                  = 1,
	Command_PlayInTitle            = 2,
	Command_PlayInMain1            = 3,
	Command_PlayInMain2            = 4,
	Command_PlayOut1               = 5,
	Command_PlayOut2               = 6,
	Command_PlayDuelIn1            = 7,
	Command_PlayDuelIn2            = 8,
	Command_PlayDuelIn3            = 9,
	Command_PlayDuelIn1b           = 10,
	Command_PlayDuelIn2b           = 11,
	Command_PlayDuelIn3b           = 12,
	Command_PlayDuelOut            = 13,
	Max                            = 14,
};

enum class ETTLHUDTargetObjectInfoOutlineColor : uint8
{
	Black                          = 0,
	Red                            = 1,
	Max                            = 2,
};

enum class ETTLHUDTargetObjectInfoAnimation : uint8
{
	None                           = 0,
	In                             = 1,
	InNameOnly                     = 2,
	InNameWithVPGauge              = 3,
	Max                            = 4,
};

enum class ETTLHUDWarningScreenMode : uint8
{
	None                           = 0,
	On                             = 1,
	Off                            = 2,
	Max                            = 3,
};

enum class EFTTLIceFlavorInAnime : uint8
{
	AIn01                          = 0,
	AIn02                          = 1,
	AIn03                          = 2,
	MAX                            = 3,
};

enum class ETTLEIceCreamBuyDialogItem : uint8
{
	PurchaseCash                   = 0,
	PurchaseTokens                 = 1,
	Cancel                         = 2,
	ETTLEIceCreamBuyDialogItem_MAX = 3,
};

enum class ETTLEIceCreamShopArrowIndex : uint8
{
	Index_Ice                      = 0,
	Index_SecretDevelop_Parts      = 1,
	Index_SecretDevelop_Weapon     = 2,
	Index_SecretDevelop_BattleDataList = 3,
	Index_MAX                      = 4,
};

enum class ETTLEIceCreamShopState : uint8
{
	Anime_BGIN_Wait                = 0,
	Input_TopMenuIn_Wait           = 1,
	Input_TopMenuOut_Wait          = 2,
	Input_TomMenu_Wait             = 3,
	Anime_CharaIn_Wait             = 4,
	Anime_CharaOut_Wait            = 5,
	Anime_CharaOut_Wait_For_To_BaseCamp = 6,
	Anime_IN_IceSkill_Dialog_ICECREAM_IN = 7,
	Input_IceSkill_Dialog_Wait_ICECREAM_IN = 8,
	Input_IceSkill_Dialog_OK_ICECREAM_IN = 9,
	Anime_OUT_IceSkill_Dialog_ICECREAM_IN = 10,
	Anime_BuyType_In_Wait          = 11,
	Input_BuySize_Wait             = 12,
	Anime_BuyType_Out_Wait         = 13,
	Anime_CornListIn_Wait          = 14,
	Anime_CornListOut_Wait         = 15,
	Input_CornList_Operation       = 16,
	Anime_CornInAnime_Wait         = 17,
	Anime_CornOutAnime_Wait        = 18,
	Input_FlavorList_Operation     = 19,
	Anime_FlavorInAnime_Wait       = 20,
	Anime_FlavorOutAnime_Wait      = 21,
	Anime_FLavorInAnime_Double_Wait = 22,
	Input_FlavorList_Double_Operation = 23,
	Anime_FlavorOutAnime_Double_Wait = 24,
	Input_BuyDialog_Operation      = 25,
	Input_RerultDialog_Operation   = 26,
	Anime_IN_IceSkill_Dialog_Purchase = 27,
	Input_IceSkill_Dialog_Wait_Purchase = 28,
	Input_IceSkill_Dialog_OK_Purchase = 29,
	Anime_OUT_IceSkill_Dialog_Purchase = 30,
	Anime_StampCardIn_Wait         = 31,
	Anime_PressStampAnime_Wait     = 32,
	Input_StampCardClose_Operation = 33,
	Anime_CornAndFravorOutAnime_Wait = 34,
	Input_GetToken_Operation       = 35,
	Anime_NewStampCardIn_Wait      = 36,
	Input_NewStampClose_Operation  = 37,
	Input_NotCash_Operation        = 38,
	Anime_TopMenu_FadeOut_GoBaseCamp = 39,
	Anime_BGOut_Wait               = 40,
	Max                            = 41,
};

enum class EUTTLIceScrollListMode : uint8
{
	Size                           = 0,
	Corn                           = 1,
	Fraver                         = 2,
	Fraver02                       = 3,
	UTTLIceScrollListMode_MAX      = 4,
};

enum class ETTLEStatusCategory : uint8
{
	BadCondition                   = 0,
	StatusUp                       = 1,
	StatusDown                     = 2,
	DoT                            = 3,
	HoT                            = 4,
	FemtoShift                     = 5,
	TrapStun                       = 6,
	NPC_Reaper                     = 7,
	NPC_Abyss                      = 8,
	SeriousBoost                   = 9,
	VP                             = 10,
	Femto                          = 11,
	Attack                         = 12,
	Defence                        = 13,
	Speed                          = 14,
	Heat                           = 15,
	CategoryMax                    = 16,
	TTLEStatusCategory_MAX         = 17,
};

enum class ETTLEKetboardState : uint8
{
	None                           = 0,
	Active                         = 1,
	TTLEKetboardState_MAX          = 2,
};

enum class ETTLInsuranceType : uint8
{
	Broken                         = 0,
	WithHPRatio                    = 1,
	ETTLInsuranceType_MAX          = 2,
};

enum class ETTLReasonForObtaining : uint8
{
	None                           = 0,
	MainGoal                       = 1,
	SubGoal                        = 2,
	PickUp                         = 3,
	DecalScan                      = 4,
	FlagItem                       = 5,
	BossDrop                       = 6,
	NPCSkill                       = 7,
	Achievement                    = 8,
	MAX                            = 9,
};

enum class ETTLInventoryCategory : uint8
{
	None                           = 0,
	ShoulderWeapon                 = 1,
	LeftHandWeapon                 = 2,
	RightHandWeapon                = 3,
	Option                         = 4,
	Head                           = 5,
	RightHand                      = 6,
	LeftHand                       = 7,
	Leg                            = 8,
	Other                          = 9,
	MAX                            = 10,
};

enum class ETTLEDropType : uint8
{
	TTLDrop_Bullet                 = 0,
	TTLDrop_SmallFemto             = 1,
	TTLDrop_LargeFemto             = 2,
	TTLDrop_MAX                    = 3,
};

enum class ETTLSkillTargetType : uint8
{
	SkillTarget_Self               = 0,
	SkillTarget_Ally               = 1,
	SkillTarget_SelfAlly           = 2,
	SkillTarget_Enemy              = 3,
	SkillTarget_Mercenary          = 4,
	SkillTarget_Leader             = 5,
	SkillTarget_MAX                = 6,
};

enum class ETTLESkillEffectType : uint8
{
	SkillType_None                 = 0,
	SkillType_VPUp_Percent         = 1,
	SkillType_SpeedUp_Percent      = 2,
	SkillType_AirSpeedUp_Percent   = 3,
	SkillType_GroundSpeedUp_Percent = 4,
	SkillType_WalkSpeedUp_Percent  = 5,
	SkillType_JumpSpeedUp_Percent  = 6,
	SkillType_LightningMove_Enable = 7,
	SkillType_AttackUp_Percent     = 8,
	SkillType_DodgeBoostRadiusUp_Percent = 9,
	SkillType_DodgeBoostDurationUp_Percent = 10,
	SkillType_OuterFunnelAttackUp_Percent = 11,
	SkillType_OuterFunnelFemtoUp_Percent = 12,
	SkillType_OuterLockOn_Enable   = 13,
	SkillType_OuterSelfDestruct_Enable = 14,
	SkillType_OuterPunchThrow_Enable = 15,
	SkillType_OuterRepair_Enable   = 16,
	SkillType_OuterHpUp_Value      = 17,
	SkillType_OuterThrowSpeedUp_Percent = 18,
	SkillType_OuterGranadeNumberUp_Value = 19,
	SkillType_OuterTrapNumberUp_Value = 20,
	SkillType_CloseWeaponAttackUp_Percent = 21,
	SkillType_CloseWeaponRangeUp_Percent = 22,
	SkillType_CloseWeaponComboUp_Value = 23,
	SkillType_CloseWeaponComboRangeUp_Percent = 24,
	SkillType_OuterCloseWeaponRange_Enable = 25,
	SkillType_WeaponReloadShorten_Percent = 26,
	SkillType_QuickBoostTMPDown_Percent = 27,
	SkillType_QuickBoostSpeedUp_Percent = 28,
	SkillType_LandingDelayShorten_Percent = 29,
	SkillType_DoubleJump_Enable    = 30,
	SkillType_OuterMoveSpeedUp_Percent = 31,
	SkillType_CloseWeaponDownResistUp_Percent = 32,
	SkillType_OuterDodgeCostDown_Percent = 33,
	SkillType_OuterDashCostDown_Percent = 34,
	SkillType_DownResistUp_Percent = 35,
	SkillType_OuterDodgeDistanceUp_Percent = 36,
	SkillType_OuterAirDodge_Enable = 37,
	SkillType_SuperArmor           = 38,
	SkillType_Debuff_Reaper        = 39,
	SkillType_Abyss_Heaven         = 40,
	SkillType_HateImportanceUp_Value = 41,
	SkillType_Disable_Jamming      = 42,
	SkillType_Disable_AllBadStatus = 43,
	SkillType_MissionRewardCreditsUp = 44,
	SkillType_LaserBladeExRangeUp_Percent = 45,
	SkillType_PunchAttackUp_Percent = 46,
	SkillType_AssultRecoverUp_Value = 47,
	SkillType_WingRecoverUp_Value  = 48,
	SkillType_ShieldRecoverUp_Value = 49,
	SkillType_OuterFly_Enable      = 50,
	SkillType_OuterLockOn_Upgrade  = 51,
	SkillType_OuterFunnel_RangeUp  = 52,
	SkillType_OuterFunnel_GravityDistanceUp = 53,
	SkillType_OuterFunnel_BulletSpeedUp = 54,
	SkillType_OuterFly_FlySpeedUp  = 55,
	SkillType_OuterFly_BoostSpeedUp = 56,
	SkillType_MAX                  = 57,
};

enum class ETTLKarteChangeParts : uint8
{
	Karte_None                     = 0,
	Karte_LeftEye                  = 1,
	Karte_RightEye                 = 2,
	Karte_Hair                     = 3,
	Karte_MAX                      = 4,
};

enum class ETTLKartePart : uint8
{
	Karte_Face                     = 0,
	Karte_LeftEye                  = 1,
	Karte_RightEye                 = 2,
	Karte_Mouth                    = 3,
	Karte_Head                     = 4,
	Karte_Chest                    = 5,
	Karte_Back                     = 6,
	Karte_Abdomen                  = 7,
	Karte_LeftHand                 = 8,
	Karte_RightHand                = 9,
	Karte_LeftLeg                  = 10,
	Karte_RightLeg                 = 11,
	Karte_MAX                      = 12,
};

enum class ETTLELaboratoryScene2ArrowIndex : uint8
{
	Index_Laboratory               = 0,
	Index_CharaCreate              = 1,
	Index_MAX                      = 2,
};

enum class ETTLELaboratoryScene2State : uint8
{
	State_AnimPlaying              = 0,
	State_TopMenu                  = 1,
	State_MAX                      = 2,
};

enum class ETTLELevelState : uint8
{
	State_MissionLoadStart         = 0,
	State_MissionLoading           = 1,
	State_MissionLoadFinished      = 2,
	State_MissionVisibleStart      = 3,
	State_MissionWaitVisible       = 4,
	State_MissionVisibleFinished   = 5,
	State_MissionStarted           = 6,
	State_MissionInPlaying         = 7,
	State_MissionReleasing         = 8,
	State_MissionReleaseStart      = 9,
	State_MissionReleaseFinished   = 10,
	State_ResultLoadStart          = 11,
	State_ResultLoading            = 12,
	State_ResultLoadFinished       = 13,
	State_ResultVisibleStart       = 14,
	State_ResultWaitVisible        = 15,
	State_ResultVisibleFinished    = 16,
	State_ResultStarted            = 17,
	State_ResultInPlaying          = 18,
	State_ResultFinished           = 19,
	State_ResultReleaseStart       = 20,
	State_ResultReleasing          = 21,
	State_MenuLoadStart            = 22,
	State_MenuLoading              = 23,
	State_MenuLoadFinished         = 24,
	State_MenuVisibleStart         = 25,
	State_MenuWaitVisible          = 26,
	State_MenuWaitPlayer           = 27,
	State_MenuInPlaying            = 28,
	State_MenuReleasing            = 29,
	State_BaseCampStart            = 30,
	State_BaseCampLoading          = 31,
	State_BaseCampWaitVisible      = 32,
	State_BaseCampInPlaying        = 33,
	State_BaseCampReleaseStart     = 34,
	State_BaseCampReleasing        = 35,
	State_EventMapLoadStart        = 36,
	State_EventMapLoading          = 37,
	State_EventMapLoadFinished     = 38,
	State_EventMapVisibleStart     = 39,
	State_EventMapWaitVisible      = 40,
	State_EventMapInPlaying        = 41,
	State_EventMapReleasing        = 42,
	State_Preloading               = 43,
	State_MultiErrorOnMissionPlay  = 44,
	State_Max                      = 45,
};

enum class ETTLEMissionProgressValueUnitType : uint8
{
	None                           = 0,
	Piece                          = 1,
	Body                           = 2,
	Percent                        = 3,
	Max                            = 4,
};

enum class ETTLEMissionProgressValueCountType : uint8
{
	CountDown                      = 0,
	CountUp                        = 1,
	Max                            = 2,
};

enum class ETTLEMissionProgressValueShowType : uint8
{
	None                           = 0,
	Literal                        = 1,
	Fraction                       = 2,
	Percentage                     = 3,
	Max                            = 4,
};

enum class ETTLEMissionProgressType : uint8
{
	MainGoal                       = 0,
	MissionFailure                 = 1,
	Max                            = 2,
};

enum class ETTLEFunctionResult : uint8
{
	Success                        = 0,
	Failure                        = 1,
	Max                            = 2,
};

enum class ETTLEAITypeForIntrusion : uint8
{
	AIIntrusion_Battle             = 0,
	AIIntrusion_Incoming           = 1,
	AIIntrusion_Surrender          = 2,
	AIIntrusion_Escape             = 3,
	AIIntrusion_Max                = 4,
};

enum class ETTLEGoalControl : uint8
{
	GoalCtrl_Success               = 0,
	GoalCtrl_Failure               = 1,
	GoalCtrl_Update                = 2,
	GoalCtrl_Max                   = 3,
};

enum class ETTLMissionProgressState : uint8
{
	MissionPlaying                 = 0,
	MissionPreFinished             = 1,
	MissionFinished                = 2,
	MissionFailed                  = 3,
	MissionRetired                 = 4,
	MissionExtensionTimeStarted    = 5,
	MissionExtensionTimeFinished   = 6,
	MissionBeginningScreenFinished = 7,
	MissionEndingScreenFinished    = 8,
	MissionStartPvPVictoryEvent    = 9,
	MissionVictoryScreenStarted    = 10,
	MissionVictoryScreenFinished   = 11,
	MissionEvaluationScreenStarted = 12,
	MissionEvaluationScreenFinished = 13,
	MissionDuelEvaluationScreenStarted = 14,
	MissionDuelEvaluationScreenFinished = 15,
	MissionFadeOutScreenStarted    = 16,
	MissionFadeOutScreenFinished   = 17,
	MissionEndingEventStarted      = 18,
	MissionEndingEventFinished     = 19,
	MissionWaitEndRoundComplete    = 20,
	ETTLMissionProgressState_MAX   = 21,
};

enum class ETTLLineChatState : uint8
{
	State_LeftSelect               = 0,
	State_Init                     = 1,
	State_Init2                    = 2,
	State_Wait                     = 3,
	State_Writing                  = 4,
	State_Talk                     = 5,
	State_None                     = 6,
	State_SlideOut                 = 7,
	State_End                      = 8,
	State_MAX                      = 9,
};

enum class ETTLETipsCategory : uint8
{
	Tips_None                      = 0,
	Tips_System                    = 1,
	Tips_Operation                 = 2,
	Tips_Technique                 = 3,
	Tips_Mission                   = 4,
	Tips_Facility                  = 5,
	Tips_Parts                     = 6,
	Tips_Online                    = 7,
	Tips_MAX                       = 8,
};

enum class ETTLELoadingType : uint8
{
	Type_ArsenalStandby            = 0,
	Type_FinishMission             = 1,
	Type_Tips                      = 2,
	Type_NoTips                    = 3,
	Type_BlackBack                 = 4,
	Type_FadeOnly                  = 5,
	Type_IconOnly                  = 6,
	Type_IconOnlyNoTrans           = 7,
	Type_NotVisible                = 8,
	Type_Saving                    = 9,
	Type_PVPVersus                 = 10,
	Type_WhiteIn                   = 11,
	Type_WhiteLoop                 = 12,
	Type_WhiteOut                  = 13,
	Type_WhiteFadeOnly             = 14,
	Type_MAX                       = 15,
};

enum class ETTLELoadingScreenState : uint8
{
	State_Closed                   = 0,
	State_Opening                  = 1,
	State_Running                  = 2,
	State_WaitLoopAnim             = 3,
	State_Closing                  = 4,
	State_Max                      = 5,
};

enum class ETTLLockonSightType : uint8
{
	Circle                         = 0,
	Square                         = 1,
	MAX                            = 2,
};

enum class ETTLLockonPartsCollide : uint8
{
	None                           = 0,
	Sphere                         = 1,
	Capsule                        = 2,
	Box                            = 3,
	MAX                            = 4,
};

enum class ETTLAILRangeLaser_State : uint8
{
	NONE                           = 0,
	Idle                           = 1,
	Attack_Start                   = 2,
	Attack_Start_Interval          = 3,
	Attack_Now                     = 4,
	Attack_End                     = 5,
	Attack_End_Interval            = 6,
	Dead_Start                     = 7,
	Dead                           = 8,
	Max                            = 9,
};

enum class ETTLLongRageLaserCannon_AnimType : uint8
{
	NONE                           = 0,
	Idle                           = 1,
	Start                          = 2,
	End                            = 3,
	Max                            = 4,
};

enum class ETTLEOuterFunnelState : uint8
{
	OuterFunnel_Closed             = 0,
	OuterFunnel_PrepareOpening     = 1,
	OuterFunnel_Opening            = 2,
	OuterFunnel_Opened             = 3,
	OuterFunnel_Closing            = 4,
	OuterFunnel_ClosingEnd         = 5,
	OuterFunnel_MAX                = 6,
};

enum class ETTLEMainMenuFacilityState : uint8
{
	FacilityState_Opened           = 0,
	FacilityState_Closed           = 1,
	FacilityState_Unopened         = 2,
	FacilityState_MAX              = 3,
};

enum class ETTLEMainMenuSceneState : uint8
{
	MainMenuState_Opening          = 0,
	MainMenuState_SelectMenu       = 1,
	MainMenuState_ViewNotifications = 2,
	MainMenuState_MAX              = 3,
};

enum class ETTLManualPopUp_VisibleMode : uint8
{
	Manual                         = 0,
	Tutorial                       = 1,
	Max                            = 2,
};

enum class ETTLManualPopUp_PhotoPosition : uint8
{
	Up                             = 0,
	Down                           = 1,
	Max                            = 2,
};

enum class ETTLManualPageIndex_Name : uint8
{
	PAGE_NUM_NOW_text_m01          = 0,
	PAGE_NUM_ALL_text_m03          = 1,
	PAGE_LEFT_ARROW                = 2,
	PAGE_RIGHT_ARROW               = 3,
	Max                            = 4,
};

enum class ETTLManualPage_Name : uint8
{
	SUB_TITLE_HELP_M00             = 0,
	TEXT_HELP_M01                  = 1,
	PAGE_NUM_hp_u_00               = 2,
	PHOTO_UP_hp_t00                = 3,
	PHOTO_DOWN_hp_t01              = 4,
	Max                            = 5,
};

enum class ETTLManualPopUp_WidgetName : uint8
{
	Title                          = 0,
	Page                           = 1,
	Max                            = 2,
};

enum class ETTLManualScroll_StateType : uint8
{
	NONE                           = 0,
	OPENING                        = 1,
	IDLE_BIG_ITEM                  = 2,
	OPENING_BIG_ITEM               = 3,
	IDLE_SMALL_ITEM                = 4,
	CLOSING                        = 5,
	Max                            = 6,
};

enum class ETTLManualScroll_FocusAnimation : uint8
{
	ON                             = 0,
	OFF                            = 1,
	Max                            = 2,
};

enum class ETTLManualScroll_OpenCLoseAnimation : uint8
{
	OPEN                           = 0,
	CLOSE                          = 1,
	Max                            = 2,
};

enum class ETTLManualScrollItemType : uint8
{
	Big                            = 0,
	Small                          = 1,
	Max                            = 2,
};

enum class ETTLManualWidgetName : uint8
{
	Top                            = 0,
	Scroll                         = 1,
	ScrollUnigormGrid              = 2,
	ScrollItem                     = 3,
	ScrollBigItem                  = 4,
	ScrollSmallItemInBigItem       = 5,
	ScrollVerticalBoxForSmallItems = 6,
	BigItemText                    = 7,
	SmallItemTExt                  = 8,
	Max                            = 9,
};

enum class ETTLEMemberMenuItem : uint8
{
	Item_PlayLog                   = 0,
	Item_Kick                      = 1,
	Item_Duel                      = 2,
	Item_Max                       = 3,
};

enum class ETTLEMenuErrorStatus : uint8
{
	NoError                        = 0,
	LogoutOccured                  = 1,
	State_Max                      = 2,
	TTLEMenuErrorStatus_MAX        = 3,
};

enum class ETTLEMenuSeType : uint8
{
	Ok                             = 0,
	Cancel                         = 1,
	Select                         = 2,
	Page                           = 3,
	Equip                          = 4,
	MissionStart                   = 5,
	SortOpen                       = 6,
	SpecOpen                       = 7,
	Error                          = 8,
	ChangeCategory                 = 9,
	ChangeFilter                   = 10,
	Payment                        = 11,
	GetMoney                       = 12,
	SystemOpen                     = 13,
	SystemClose                    = 14,
	NewGame                        = 15,
	WindowOpen                     = 16,
	WindowClose                    = 17,
	ChangePose                     = 18,
	Access                         = 19,
	Demo2DOpen                     = 20,
	Demo2DClose                    = 21,
	TutorialOpen                   = 22,
	TutorialClose                  = 23,
	ChatTalkOpen                   = 24,
	ChatTalkClose                  = 25,
	ChatTalkPage                   = 26,
	Scrap                          = 27,
	MenuNext                       = 28,
	NotificationOpen               = 29,
	CountDown                      = 30,
	SaveFinished                   = 31,
	ModelCutoffIn                  = 32,
	ModelCutoffOut                 = 33,
	HUDMainGoal                    = 34,
	HUDSubGoal                     = 35,
	RebootNoFemto                  = 36,
	RebootProgress                 = 37,
	EquipRealtime                  = 38,
	Zoom                           = 39,
	EquipDecal                     = 40,
	ResultNewItem                  = 41,
	ResultAddBattleData            = 42,
	DecideIce                      = 43,
	CancelIce                      = 44,
	SelectIce                      = 45,
	FadeInIce                      = 46,
	GetOnIce                       = 47,
	FadeOutIce                     = 48,
	DialogOpenIce                  = 49,
	StampPush                      = 50,
	RankUpWindowOpen               = 51,
	RankUpNotice                   = 52,
	RankUpWindowClose              = 53,
	MultiChatNotice                = 54,
	MultiStartDuel                 = 55,
	MultiStartRush                 = 56,
	MultiShowEngagement            = 57,
	MultiDuelShowBounty            = 58,
	MultiPVPShowBounty1            = 59,
	MultiPVPShowBounty2            = 60,
	Max                            = 61,
};

enum class ETTLEManagedPopUpType : uint8
{
	YesNo                          = 0,
	OK                             = 1,
	Common                         = 2,
	Other                          = 3,
	Other2                         = 4,
	Other3                         = 5,
	Dynamic                        = 6,
	Manual                         = 7,
	LineChat                       = 8,
	Regulation                     = 9,
	MultiplayError                 = 10,
	MAX                            = 11,
};

enum class ETTLEMenuSceneState : uint8
{
	Idle                           = 0,
	Next                           = 1,
	Prev                           = 2,
	State_Max                      = 3,
	TTLEMenuSceneState_MAX         = 4,
};

enum class ETTLMenuSceneType : uint8
{
	None                           = 0,
	BaseConsole                    = 1,
	Operation                      = 2,
	Title                          = 3,
	BaseCamp                       = 4,
	Battle                         = 5,
	OnlineConsole                  = 6,
	OnlineConsole_Internet         = 7,
	OnlineConsole_Internet_CoopSearch = 8,
	OnlineConsole_Internet_CoopCreate = 9,
	OnlineConsole_Internet_CoopSearchMission = 10,
	OnlineConsole_Internet_CoopBaseCamp = 11,
	OnlineConsole_Internet_Battle1VS1 = 12,
	OnlineConsole_Internet_Battle1VS1_Create = 13,
	OnlineConsole_Internet_Battle1VS1_Search = 14,
	OnlineConsole_Internet_Battle1VS1_Search_Mission = 15,
	OnlineConsole_Internet_Battle1VS1_RankMatch = 16,
	OnlineConsole_Internet_Battle2VS2 = 17,
	OnlineConsole_Internet_Battle2VS2_Create = 18,
	OnlineConsole_Internet_Battle2VS2_Search = 19,
	OnlineConsole_Internet_Battle2VS2_TagMatch = 20,
	OnlineConsole_Local            = 21,
	OnlineConsole_Local_CoopSearch = 22,
	OnlineConsole_Local_CoopCreate = 23,
	OnlineConsole_Local_CoopSearchMission = 24,
	OnlineConsole_Local_CoopBaseCamp = 25,
	OnlineConsole_Local_Battle1VS1 = 26,
	OnlineConsole_Local_Battle1VS1_Create = 27,
	OnlineConsole_Local_Battle1VS1_Search = 28,
	OnlineConsole_Local_Battle2VS2 = 29,
	OnlineConsole_Local_Battle2VS2_Create = 30,
	OnlineConsole_Local_Battle2VS2_Search = 31,
	Online_BaseCamp                = 32,
	Online_Battle                  = 33,
	Online_OnlineConsole           = 34,
	Multi_TagMatch_TeamRoom_BaseCampe = 35,
	Multi_TagMatch_Battle_BaseCampe = 36,
	Multi_TagMatch_TeamRoom_OnlineConsole = 37,
	Multi_TagMatch_BattleRoom_OnlineConsole = 38,
	ETTLMenuSceneType_MAX          = 39,
};

enum class ETTLEMessageTalkerMode : uint8
{
	Chat1                          = 0,
	Chat2                          = 1,
	Emote                          = 2,
	FreeInput                      = 3,
	Max                            = 4,
};

enum class ETTLEMessageTalkerTabIcon : uint8
{
	Chat1                          = 0,
	Chat2                          = 1,
	Emote                          = 2,
	FreeInput                      = 3,
	Max                            = 4,
};

enum class ETTLEMessageTkrScrollListComponentMode : uint8
{
	BaseCamp1                      = 0,
	BaseCamp2                      = 1,
	MissionCoop1                   = 2,
	MissionCoop2                   = 3,
	MissionPVP1                    = 4,
	MissionPVP2                    = 5,
	Emote                          = 6,
	FreeInput                      = 7,
	Max                            = 8,
};

enum class ETTLMeteoriteStateType : uint8
{
	Idle                           = 0,
	Move                           = 1,
	Broken                         = 2,
	EventStart                     = 3,
	Max                            = 4,
};

enum class ETTLMeteoriteMoveType : uint8
{
	Straight                       = 0,
	Max                            = 1,
};

enum class ETTLMeteoriteController_MeteoriteMoveType : uint8
{
	Straight                       = 0,
	Max                            = 1,
};

enum class ETTLMineState : uint8
{
	MineState_None                 = 0,
	MineState_Wait                 = 1,
	MineState_Detect               = 2,
	MineState_Detonate             = 3,
	MineState_Max                  = 4,
};

enum class ETTLESubGoalOpenCondition : uint8
{
	SubGoal_Unrelated              = 0,
	SubGoal_Finish                 = 1,
	SubGoal_UnFinish               = 2,
	SubGoal_Max                    = 3,
};

enum class ETTLEMissionUniqueStatus : uint8
{
	MissionUniqueStatus_None       = 0,
	MissionUniqueStatus_Chase      = 1,
	MissionUniqueStatus_Max        = 2,
};

enum class ETTLEMissionPlayerStartType : uint8
{
	MissionPlayerStart_Arsenal     = 0,
	MissionPlayerStart_ArsenalNoWeapon = 1,
	MissionPlayerStart_Outer       = 2,
	MissionPlayerStart_ArsenalContinuous = 3,
	MissionPlayerStart_Survaival   = 4,
	MissionPlayerStart_MAX         = 5,
};

enum class ETTLEPremiseMissionType : uint8
{
	PremiseMission_Clear           = 0,
	PremiseMission_Sub1            = 1,
	PremiseMission_Sub2            = 2,
	PremiseMission_Sub3            = 3,
	PremiseMission_Sub4            = 4,
	PremiseMission_Sub1_NotClear   = 5,
	PremiseMission_Sub2_NotClear   = 6,
	PremiseMission_Sub3_NotClear   = 7,
	PremiseMission_Sub4_NotClear   = 8,
	PremiseMission_MAX             = 9,
};

enum class ETTLESubGoalType : uint8
{
	SubGoal_None                   = 0,
	SubGoal_EnemyAnnihilate        = 1,
	SubGoal_EnemyAnnihilateByPlayer = 2,
	SubGoal_EnemyAllKill           = 3,
	SubGoal_EnemyAllKillByPlayer   = 4,
	SubGoal_EnemyKill              = 5,
	SubGoal_EnemyKillByPlayer      = 6,
	SubGoal_EnemyNotKill           = 7,
	SubGoal_ObjectBroken           = 8,
	SubGoal_ObjectUnBroken         = 9,
	SubGoal_ObjectVP               = 10,
	SubGoal_PlayerVP               = 11,
	SubGoal_PlayerDamage           = 12,
	SubGoal_PlayerAccuracyRate     = 13,
	SubGoal_MissionTimeLimit       = 14,
	SubGoal_TimeLimit              = 15,
	SubGoal_NoBuddy                = 16,
	SubGoal_UseWeapon              = 17,
	SubGoal_Other                  = 18,
	SubGoal_MAX                    = 19,
};

enum class ETTLEGoalType : uint8
{
	Goal_Main                      = 0,
	Goal_Sub1                      = 1,
	Goal_Sub2                      = 2,
	Goal_Sub3                      = 3,
	Goal_Max                       = 4,
};

enum class ETTLEEnemyMainStrength : uint8
{
	MainStrength_None              = 0,
	MainStrength_Arsenal           = 1,
	MainStrength_BOSS              = 2,
	MissionType_Max                = 3,
	TTLEEnemyMainStrength_MAX      = 4,
};

enum class ETTLEMissionDifficulty : uint8
{
	MissionDifficulty_None         = 0,
	MissionDifficulty_1            = 1,
	MissionDifficulty_2            = 2,
	MissionDifficulty_3            = 3,
	MissionDifficulty_4            = 4,
	MissionDifficulty_5            = 5,
	MissionDifficulty_6            = 6,
	MissionDifficulty_7            = 7,
	MissionDifficulty_8            = 8,
	MissionDifficulty_Max          = 9,
};

enum class ETTLEMissionMultiType : uint8
{
	MissionMultiType_None          = 0,
	MissionMultiType_Defense       = 1,
	MissionMultiType_Arsenal       = 2,
	MissionMultiType_Boss          = 3,
	MissionMultiType_PvP           = 4,
	MissionMultiType_Survival      = 5,
	MissionType_Max                = 6,
	TTLEMissionMultiType_MAX       = 7,
};

enum class ETTLEMissionType : uint8
{
	MissionType_None               = 0,
	MissionType_Offer              = 1,
	MissionType_Competition        = 2,
	MissionType_Free               = 3,
	MissionType_Multi              = 4,
	MissionType_Max                = 5,
};

enum class ETTLEMissionNPCVisibility : uint8
{
	Vacancy                        = 0,
	Hidden                         = 1,
	Visible                        = 2,
	MAX                            = 3,
};

enum class ETTLENPCListMode : uint8
{
	Colleague                      = 0,
	Member                         = 1,
	MyNPC                          = 2,
	TTLENPCListMode_MAX            = 3,
};

enum class ETTLEMissionRankingRewardType : uint8
{
	IceToken                       = 0,
	Money                          = 1,
	Parts                          = 2,
	Mission                        = 3,
	Attachment                     = 4,
	Decoration                     = 5,
	Reward_Max                     = 6,
	Failer_PartsLimitOver          = 7,
	Failer_WeaponLimitOver         = 8,
	FailerReward_Max               = 9,
	TTLEMissionRankingRewardType_MAX = 10,
};

enum class ETTLEMissionRankingReceiveType : uint8
{
	Type_MissionClearCount         = 0,
	Type_MissionClearTime          = 1,
	Type_HavePartsOrWeapon         = 2,
	Type_MAX                       = 3,
};

enum class ETTLEMissionRankingLoopCalculate : uint8
{
	Calculate_Addition             = 0,
	Calculate_Calculation          = 1,
	Calculate_MAX                  = 2,
};

enum class ETTLEMissionRankingFinishType : uint8
{
	Type_PlayCount                 = 0,
	Type_OpenTime                  = 1,
	Type_ResetTimeing              = 2,
	Type_ForeverOpen               = 3,
	Type_MAX                       = 4,
};

enum class ETTLEMissionRankingEventType : uint8
{
	Type_Reward                    = 0,
	Type_OpenMission               = 1,
	Type_LoopBossPowerUp           = 2,
	Type_LoopEnemyPowerUp          = 3,
	Type_LoopTimeLimit             = 4,
	Type_MAX                       = 5,
};

enum class ETTLEMissionRankingConditions : uint8
{
	Conditions_Over                = 0,
	Conditions_Under               = 1,
	Conditions_Between             = 2,
	Conditions_MAX                 = 3,
};

enum class ETTLEMissionRankingCategory : uint8
{
	Category_AllMissionClear       = 0,
	Category_BossMissionClear      = 1,
	Category_MissionClearTime      = 2,
	Category_Reserve_1             = 3,
	Category_Reserve_2             = 4,
	Category_MAX                   = 5,
};

enum class ETTLEMissionSelectCharaSpawnState : uint8
{
	Idle                           = 0,
	StartLoadArsenal               = 1,
	LoadArsenal                    = 2,
	SpawnArsenal                   = 3,
	StartLoadOuter                 = 4,
	LoadOuter                      = 5,
	SpawnOuter                     = 6,
	WaitMotionSet                  = 7,
	WaitPositionSet                = 8,
	Complete                       = 9,
	TTLEMissionSelectCharaSpawnState_MAX = 10,
};

enum class ETTLEMissionSelectMapAnimationState : uint8
{
	Idle                           = 0,
	DissolveIn                     = 1,
	Loading                        = 2,
	TTLEMissionSelectMapAnimationState_MAX = 3,
};

enum class ETTLEAreaHighlightMode : uint8
{
	NoOpen                         = 0,
	Opened                         = 1,
	Focused                        = 2,
	TTLEAreaHighlightMode_MAX      = 3,
};

enum class ETTLEMissionSelectSceneArrowIndex : uint8
{
	StartMission                   = 0,
	GoToDock                       = 1,
	GoToShop                       = 2,
	MAX                            = 3,
};

enum class ETTLEMissionDetailCategory : uint8
{
	StartMission                   = 0,
	SelectNPC                      = 1,
	ShowAttendNPCInfo              = 2,
	StartDock                      = 3,
	ReconfirmBriefing              = 4,
	OpenLineChat                   = 5,
	MAX                            = 6,
};

enum class ETTLEMissionSelectCategory : uint8
{
	Difficulty                     = 0,
	Compe                          = 1,
	MAX                            = 2,
};

enum class ETTLEMissionInfoMenuVisibility : uint8
{
	Hidden                         = 0,
	MisisonInfo                    = 1,
	MAX                            = 2,
};

enum class ETTLEMissionSelectScene2State : uint8
{
	SceneState_Opening             = 0,
	SceneState_LoadingMission      = 1,
	SceneState_LoadingCompeMission = 2,
	SceneState_WaitingMapEffect    = 3,
	SceneState_SelectCategory      = 4,
	SceneState_SelectSubCategory   = 5,
	SceneState_SelectMission       = 6,
	SceneState_MissionDetail       = 7,
	SceneState_SelectNPC           = 8,
	SceneState_LineChat            = 9,
	SceneState_WaitAnim            = 10,
	SceneState_Closing             = 11,
	SceneState_MAX                 = 12,
};

enum class ETTLMultiplay2vs2Flag : uint8
{
	Flag_None                      = 0,
	Flag_CreateSessionCompleted    = 1,
	Flag_DestroySessionCompleted   = 2,
	Flag_JoinSessionCompleted      = 4,
	Flag_OpenedErrorPopUp          = 8,
	Flag_CreateTeamTo2on2          = 16,
	Flag_JoinTeamTo2on2            = 32,
	Flag_Join2on2To2on2            = 64,
	Flag_Leave2on2ToTeam           = 128,
	Flag_Error2on2ToTeam           = 256,
	Flag_SetTeamRoomSetting        = 512,
	Flag_TravelMultiBaseCamp       = 1024,
	Flag_PostLoadMap               = 2048,
	Flag_DoneLeaveRoom             = 4096,
	Flag_LeaveHostTeam             = 8192,
	Flag_LeaveWithPartner          = 16384,
	Flag_Logout2on2                = 32768,
	Flag_LoginUserCompleted        = 65536,
	Flag_MsgPartnerLoginCompleted  = 131072,
	Flag_FindSessionCompleted      = 1048576,
	Flag_MAX                       = 1048577,
};

enum class ETTLMultiplay2vs2SessionType : uint8
{
	Type_Single                    = 0,
	Type_TeamRoom                  = 1,
	Type_Team2on2Room              = 2,
	Type_MAX                       = 3,
};

enum class ETTLMultiplay2vs2State : uint8
{
	State_Single_Initialize        = 0,
	State_Single_Idle              = 1,
	State_TeamRoom_Initialize      = 2,
	State_TeamRoom_Idel            = 3,
	State_2on2Room_Initialize      = 4,
	State_2on2Room_Idel            = 5,
	State_CreateTeamTo2on2_Initialize = 6,
	State_CreateTeamTo2on2_InitializeWaiting = 7,
	State_CreateTeamTo2on2_PartnerPrincialId = 8,
	State_CreateTeamTo2on2_PartnerPrincialIdWaiting = 9,
	State_CreateTeamTo2on2_StartWaiting = 10,
	State_CreateTeamTo2on2_DestroySession = 11,
	State_CreateTeamTo2on2_DestroySessionWaiting = 12,
	State_CreateTeamTo2on2_CreateSessionHost = 13,
	State_CreateTeamTo2on2_CreateSessionHostWaiting = 14,
	State_CreateTeamTo2on2_FindSessionClient = 15,
	State_CreateTeamTo2on2_FindSessionClientWaiting = 16,
	State_CreateTeamTo2on2_FindSessionClientRetry = 17,
	State_CreateTeamTo2on2_JoinSessionClient = 18,
	State_CreateTeamTo2on2_JoinSessionClientWaiting = 19,
	State_CreateTeamTo2on2_JoinSessionClientRetry = 20,
	State_CreateTeamTo2on2_PostLoadMapWaiting = 21,
	State_CreateTeamTo2on2_Finalize = 22,
	State_JoinTeamTo2on2_Initialize = 23,
	State_JoinTeamTo2on2_InitializeWaiting = 24,
	State_JoinTeamTo2on2_PartnerPrincialId = 25,
	State_JoinTeamTo2on2_PartnerPrincialIdWaiting = 26,
	State_JoinTeamTo2on2_StartWaiting = 27,
	State_JoinTeamTo2on2_DestroySession = 28,
	State_JoinTeamTo2on2_DestroySessionWaiting = 29,
	State_JoinTeamTo2on2_JoinSessionHost = 30,
	State_JoinTeamTo2on2_JoinSessionHostWaiting = 31,
	State_JoinTeamTo2on2_JoinSessionClient = 32,
	State_JoinTeamTo2on2_JoinSessionClientWaiting = 33,
	State_JoinTeamTo2on2_JoinSessionClientRetry = 34,
	State_JoinTeamTo2on2_PostLoadMapWaiting = 35,
	State_JoinTeamTo2on2_Finalize  = 36,
	State_Join2on2To2on2_Initialize = 37,
	State_Join2on2To2on2_InitializeWaiting = 38,
	State_Join2on2To2on2_SessionId = 39,
	State_Join2on2To2on2_SessionIdWaiting = 40,
	State_Join2on2To2on2_StartWaiting = 41,
	State_Join2on2To2on2_DestroySession = 42,
	State_Join2on2To2on2_DestroySessionWaiting = 43,
	State_Join2on2To2on2_JoinSessionHost = 44,
	State_Join2on2To2on2_JoinSessionHostWaiting = 45,
	State_Join2on2To2on2_JoinSessionClient = 46,
	State_Join2on2To2on2_JoinSessionClientWaiting = 47,
	State_Join2on2To2on2_JoinSessionClientRetry = 48,
	State_Join2on2To2on2_PostLoadMapWaiting = 49,
	State_Join2on2To2on2_Finalize  = 50,
	State_Leave2on2ToTeam_Initialize = 51,
	State_Leave2on2ToTeam_InitializeWaiting = 52,
	State_Leave2on2ToTeam_LeavePrincialId = 53,
	State_Leave2on2ToTeam_LeavePrincialIdWaiting = 54,
	State_Leave2on2ToTeam_StartWaiting = 55,
	State_Leave2on2ToTeam_LeaveHostTeamStart = 56,
	State_Leave2on2ToTeam_LeaveClientTeamStart = 57,
	State_Leave2on2ToTeam_TravelMultiCampStart = 58,
	State_Leave2on2ToTeam_TravelMultiCampStartWaiting = 59,
	State_Leave2on2ToTeam_DestroySession = 60,
	State_Leave2on2ToTeam_DestroySessionWaiting = 61,
	State_Leave2on2ToTeam_CreateSessionHost = 62,
	State_Leave2on2ToTeam_CreateSessionHostWaiting = 63,
	State_Leave2on2ToTeam_FindSessionClient = 64,
	State_Leave2on2ToTeam_FindSessionClientWaiting = 65,
	State_Leave2on2ToTeam_FindSessionClientRetry = 66,
	State_Leave2on2ToTeam_JoinSessionClient = 67,
	State_Leave2on2ToTeam_JoinSessionClientWaiting = 68,
	State_Leave2on2ToTeam_JoinSessionClientRetry = 69,
	State_Leave2on2ToTeam_PostLoadMapWaiting = 70,
	State_Leave2on2ToTeam_Finalize = 71,
	State_Error2on2ToTeam_Initialize = 72,
	State_Error2on2ToTeam_InitializeWaiting = 73,
	State_Error2on2ToTeam_StartWaiting = 74,
	State_Error2on2ToTeam_DestroySession = 75,
	State_Error2on2ToTeam_DestroySessionWaiting = 76,
	State_Error2on2ToTeam_LoginCheck = 77,
	State_Error2on2ToTeam_LoginWaiting = 78,
	State_Error2on2ToTeam_CreateSessionHost = 79,
	State_Error2on2ToTeam_CreateSessionHostWaiting = 80,
	State_Error2on2ToTeam_FindSessionClient = 81,
	State_Error2on2ToTeam_FindSessionClientWaiting = 82,
	State_Error2on2ToTeam_FindSessionClientRetry = 83,
	State_Error2on2ToTeam_JoinSessionClient = 84,
	State_Error2on2ToTeam_JoinSessionClientWaiting = 85,
	State_Error2on2ToTeam_JoinSessionClientRetry = 86,
	State_Error2on2ToTeam_PostLoadMapWaiting = 87,
	State_Error2on2ToTeam_Finalize = 88,
	State_ErrorToSingle_Initialize = 89,
	State_ErrorToSingle_NetworkFailure = 90,
	State_ErrorToSingle_ErrorPopupWaiting = 91,
	State_ErrorToSingle_Finalize   = 92,
	State_Logout2on2_Initialize    = 93,
	State_Logout2on2_InitializeWaiting = 94,
	State_Logout2on2_StartWaiting  = 95,
	State_Logout2on2_LoginWaiting  = 96,
	State_Logout2on2_Finalize      = 97,
	State_None                     = 98,
	State_MAX                      = 99,
};

enum class ETTLOnlineNoticeHUD_Type : uint8
{
	ENTER                          = 0,
	LEAVING                        = 1,
	READY_OTHERS                   = 2,
	READY_CANCEL                   = 3,
	CHANGE_ORDER                   = 4,
	CHANGE_MAP                     = 5,
	CHANGE_TIMELIMIT               = 6,
	CHANGE_REGULATION              = 7,
	CHANGE_COMMENT                 = 8,
	CHANGE_TARGET                  = 9,
	DUEL_FROM_MYSELF               = 10,
	DUEL_FROM_OTHER                = 11,
	DUEL_OTHER                     = 12,
	DUEL_DENIAL                    = 13,
	DUEL_OK                        = 14,
	DUEL_CANCEL                    = 15,
	CHAT                           = 16,
	HOST_ROOM_CREATE               = 17,
	HOST_ROOM_SEARCH               = 18,
	TEAM_ROOM_PLAYER_WAIT          = 19,
	TEAM_ROOM_CLIENT_READY         = 20,
	TEAM_ROOM_CLIENT_LOST          = 21,
	TEAM_2ON2_TEAM_WAIT            = 22,
	MAX                            = 23,
};

enum class ETTLDuelResult : uint8
{
	Win                            = 0,
	Lose                           = 1,
	TimeUp                         = 2,
	Max                            = 3,
};

enum class ETTLENameEntryPopupState : uint8
{
	Popup_None                     = 0,
	Popup_YesSelect                = 1,
	Popup_NoSelect                 = 2,
	Popup_CloseWait                = 3,
	Popup_MAX                      = 4,
};

enum class ETTLNoticeGeneral_WidgetType : uint8
{
	CONTENT_TEXT                   = 0,
	TIMER_TEXT                     = 1,
	TIMER_IMAGE                    = 2,
	TIMER_OVERRAY                  = 3,
	ICON                           = 4,
	KEY_ASSIGN                     = 5,
	MAX                            = 6,
};

enum class ETTLNoticeGeneral_PopupType : uint8
{
	START_GAME                     = 0,
	START_MISSION_FINISH_SINGLE    = 1,
	START_MISSION_FINISH_MULTI     = 2,
	READY_MULTI_2VS2               = 3,
	OTHERWISE                      = 4,
	RESULT                         = 5,
	AREAOVER_COUNT                 = 6,
	START_INVALID_BATTLE           = 7,
	MAX                            = 8,
};

enum class ETTLNoticeHUD_State : uint8
{
	STATE_NONE                     = 0,
	STATE_UPDATE                   = 1,
	STATE_OUT_WAIT                 = 2,
	MAX                            = 3,
};

enum class ETTLNoticeHUD_StateType : uint8
{
	NONE                           = 0,
	STATE_00                       = 1,
	STATE_01                       = 2,
	STATE_02                       = 3,
	STATE_03                       = 4,
	MAX                            = 5,
};

enum class ETTLNoticeHUD_SlideAnimationType : uint8
{
	SLIDE_IN                       = 0,
	UP_01_TO_02                    = 1,
	UP_02_TO_03                    = 2,
	SLIDE_OUT                      = 3,
	MAX                            = 4,
};

enum class ETTLENPCArsenalWeightType : uint8
{
	Lightweight                    = 0,
	Middleweight                   = 1,
	Heavyweight                    = 2,
	MAX                            = 3,
};

enum class ETTLEGender : uint8
{
	Gender_Male                    = 0,
	Gender_Female                  = 1,
	Gender_Max                     = 2,
};

enum class ETTLENPCSurrenderFailedActionType : uint8
{
	NPCSurrenderFailedAction_Battle = 0,
	NPCSurrenderFailedAction_Escape = 1,
	NPCSurrenderFailureAction_Max  = 2,
	TTLENPCSurrenderFailedActionType_MAX = 3,
};

enum class ETTLNPCBelongingType : uint8
{
	BelongingType_Enemy            = 0,
	BelongingType_Ally             = 1,
	BelongingType_Friend           = 2,
	BelongingType_MAX              = 3,
};

enum class ETTLEMissionWeatherCheckType : uint8
{
	WeatherCheck_Any               = 0,
	WeatherCheck_NormalOnly        = 1,
	WeatherCheck_RainOnly          = 2,
	WeatherCheck_SnowOnly          = 3,
	WeatherCheck_MistOnly          = 4,
	WeatherCheck_Max               = 5,
};

enum class ETTLEMissionConsortCheckType : uint8
{
	ConsortCheck_Any               = 0,
	ConsortCheck_HasConsort        = 1,
	ConsortCheck_NoConsort         = 2,
	ConsortCheck_Max               = 3,
};

enum class ETTLEMissionTimeCheckType : uint8
{
	TimeCheck_Any                  = 0,
	TimeCheck_NoonOnly             = 1,
	TimeCheck_EveningOnly          = 2,
	TimeCheck_NightOnly            = 3,
	TimeCheck_Max                  = 4,
};

enum class ETTLESubGoalCheckParamType : uint8
{
	NPC_SubGoal1                   = 0,
	NPC_SubGoal2                   = 1,
	NPC_SubGoal3                   = 2,
	NPC_SubGoal4                   = 3,
	NPC_MAX                        = 4,
};

enum class ETTLNPCGender : uint8
{
	NPC_Gender_Male                = 0,
	NPC_Gender_Female              = 1,
	NPC_Gender_Other               = 2,
	NPC_Gender_MAX                 = 3,
};

enum class ETTLENPCMercenary : uint8
{
	NPC_NoMercenary                = 0,
	NPC_Unknown                    = 1,
	NPC_Mercenary_00000            = 2,
	NPC_Mercenary_00001            = 3,
	NPC_Mercenary_00002            = 4,
	NPC_Mercenary_00003            = 5,
	NPC_Mercenary_00004            = 6,
	NPC_Mercenary_00005            = 7,
	NPC_Mercenary_00006            = 8,
	NPC_Mercenary_00007            = 9,
	NPC_Oculus                     = 10,
	NPC_MercenaryMax               = 11,
	NPC_MAX                        = 12,
};

enum class ETTLNPCFlagState : uint8
{
	TTLNPC_NotAppeared             = 0,
	TTLNPC_UnTouchable             = 1,
	TTLNPC_Scouting                = 2,
	TTLNPC_Joined                  = 3,
	TTLNPC_UnUsable                = 4,
	TTLNPC_Max                     = 5,
};

enum class ETTLEOnlineBattleRoomSearchState : uint8
{
	Input_SearchWindowItem         = 0,
	Wait_RoomSearching             = 1,
	Amine_SearchWindowListInWait   = 2,
	Input_RoomList                 = 3,
	ETTLEOnlineBattleRoomSearchState_MAX = 4,
};

enum class ETTLMissionInfoViewMode : uint8
{
	ViewMode_Mission               = 0,
	ViewMode_MissionRanking        = 1,
	ViewMode_MAX                   = 2,
};

enum class ETTLEOnlineCoopRoomCreateState : uint8
{
	Input_CreateWindowItem         = 0,
	Input_MissionList              = 1,
	Input_WaitAnimation            = 2,
	Input_Closed                   = 3,
	Input_MAX                      = 4,
};

enum class ETTLEOnlineCoopRoomSearchState : uint8
{
	Closed                         = 0,
	Wait_RoomSearching             = 1,
	Wait_Animation                 = 2,
	Input_SearchWindowItem         = 3,
	Input_RoomList                 = 4,
	Input_MissionList              = 5,
	ETTLEOnlineCoopRoomSearchState_MAX = 6,
};

enum class ETTLMissionInfoSettingViewMode : uint8
{
	ViewMode_Mission               = 0,
	ViewMode_MissionRanking        = 1,
	ViewMode_MAX                   = 2,
};

enum class ETTLEOnlineCoopRoomSettingState : uint8
{
	Input_CreateWindowItem         = 0,
	Input_MissionList              = 1,
	Input_WaitAnimation            = 2,
	Input_Closed                   = 3,
	Input_MAX                      = 4,
};

enum class ETTLEMatchRoomArrowIndex : uint8
{
	BootCamp                       = 0,
	Dock                           = 1,
	Factory                        = 2,
	Max                            = 3,
};

enum class ETTLEPopupCloseWait : uint8
{
	None                           = 0,
	RoomCreate                     = 1,
	AttachCheck                    = 2,
	SkillCheck                     = 3,
	NormalWait                     = 4,
	MoveDock                       = 5,
	MoveFactory                    = 6,
	TTLEPopupCloseWait_MAX         = 7,
};

enum class ETTLEMatchRoomCreateCursor : uint8
{
	Cursor_Map                     = 0,
	Cursor_Time                    = 1,
	Cursor_Parts                   = 2,
	Cursor_Attach                  = 3,
	Cursor_Skill                   = 4,
	Cursor_Player                  = 5,
	Cursor_Create                  = 6,
	Cursor_MAX                     = 7,
};

enum class ETTLOnlineMissionSelectState : uint8
{
	Input_LeftMenu                 = 0,
	Input_MissionList              = 1,
	ExitScene                      = 2,
	ETTLOnlineMissionSelectState_MAX = 3,
};

enum class ETTLOnlineMissionInfoViewMode : uint8
{
	ViewMode_Mission               = 0,
	ViewMode_MissionRanking        = 1,
	ViewMode_MAX                   = 2,
};

enum class ETTLOnlineNoticeHUD_ReadyType : uint8
{
	NONE                           = 0,
	IS_MISSION_READY_OTHERS        = 1,
	IS_MISSION_READY_ALL           = 2,
	MAX                            = 3,
};

enum class ETTLOnlineRoomNotifyInfoType : uint8
{
	HostRoomCreate                 = 0,
	HostRoomSearch                 = 1,
	ETTLOnlineRoomNotifyInfoType_MAX = 2,
};

enum class ETTLOnlineBattleRoomType : uint8
{
	Battle1vs1                     = 0,
	Battle2vs2Custom               = 1,
	Battle2vs2Tag                  = 2,
	Battle2vs2Team                 = 3,
	ETTLOnlineBattleRoomType_MAX   = 4,
};

enum class ETTLOnlineRoomItemType : uint8
{
	Type_MissionSelect             = 0,
	Type_Target                    = 1,
	Type_PeopleNum                 = 2,
	Type_TimeLimit                 = 3,
	Type_Regulation                = 4,
	Type_RoomComment               = 5,
	Type_Max                       = 6,
};

enum class ETTLSessionSettingRegulation : uint8
{
	SessionSettingRegulation_All   = 0,
	SessionSettingRegulation_Enable = 1,
	SessionSettingRegulation_Desable = 2,
	SessionSettingRegulation_Max   = 3,
};

enum class ETTLSessionSettingTimeLimit : uint8
{
	SessionSettingTimeLimit_All    = 0,
	SessionSettingTimeLimit_Unlimited = 1,
	SessionSettingTimeLimit_1_Minute = 2,
	SessionSettingTimeLimit_3_Minute = 3,
	SessionSettingTimeLimit_5_Minute = 4,
	SessionSettingTimeLimit_10_Minute = 5,
	SessionSettingTimeLimit_Max    = 6,
};

enum class ETTLSessionSettingComment : uint8
{
	SessionSettingComment_All      = 0,
	SessionSettingComment_Anyone   = 1,
	SessionSettingComment_Suitable = 2,
	SessionSettingComment_Gachi    = 3,
	SessionSettingComment_Circling = 4,
	SessionSettingComment_Beginner = 5,
	SessionSettingComment_Silence  = 6,
	SessionSettingComment_GroupOnly = 7,
	SessionSettingComment_Welcome  = 8,
	SessionSettingComment_Training = 9,
	SessionSettingComment_Max      = 10,
};

enum class ETTLSessionSettingTarget : uint8
{
	SessionSettingTarget_Public    = 0,
	SessionSettingTarget_Friend    = 1,
	SessionSettingTarget_Max       = 2,
};

enum class ETTLSessionSettingMission : uint8
{
	SessionSettingMission_All      = 0,
	SessionSettingMission_Defense  = 1,
	SessionSettingMission_Arsenal  = 2,
	SessionSettingMission_Boss     = 3,
	SessionSettingMission_Select   = 4,
	SessionSettingMission_Survival = 5,
	SessionSettingMission_Max      = 6,
};

enum class ETTLSessionSettingRoomType : uint8
{
	SessionSettingRoomType_None    = 0,
	SessionSettingRoomType_Coop    = 1,
	SessionSettingRoomType_Battle  = 2,
	SessionSettingRoomType_RankMatch = 3,
	SessionSettingRoomType_2on2    = 4,
	SessionSettingRoomType_TeamRoom = 5,
	SessionSettingRoomType_Team2on2 = 6,
	SessionSettingRoomType_MAX     = 7,
};

enum class ETTLEOnlineTerminalTopSceneArrowIndex : uint8
{
	StartInternet                  = 0,
	StartLocal                     = 1,
	StartInternet_Battle_1vs1      = 2,
	StartInternet_Battle_2vs2      = 3,
	StartLocal_Battle_1vs1         = 4,
	StartLocal_Battle_2vs2         = 5,
	Internet_Coop_Quick_match      = 6,
	Internet_Coop_Room_creation    = 7,
	Internet_Coop_Room_search      = 8,
	Internet_Battle_Quick_match    = 9,
	Internet_Battle_Room_creation  = 10,
	Internet_Battle_Room_search    = 11,
	Internet_Battle_2on2_Room_creation = 12,
	Internet_Battle_2on2_Room_search = 13,
	Internet_Battle_Team_Room_creation = 14,
	Internet_Battle_Team_Room_search = 15,
	Internet_Battle_Team2on2_Room_creation = 16,
	Internet_Battle_Team2on2_Room_search = 17,
	Local_Coop_Room_creation       = 18,
	Local_Coop_Room_search         = 19,
	Local_Battle_Room_creation     = 20,
	Local_Battle_Room_search       = 21,
	Local_Battle_2on2_Room_creation = 22,
	Local_Battle_2on2_Room_search  = 23,
	Dock                           = 24,
	Shop                           = 25,
	Factory                        = 26,
	Ranking                        = 27,
	FrinedList                     = 28,
	MyNpcSetting                   = 29,
	Chat                           = 30,
	SessionReady                   = 31,
	Coop_Room_Setting              = 32,
	Battle_Room_Setting            = 33,
	Battle_2on2_Room_Setting       = 34,
	Battle_Team_Room_Setting       = 35,
	Battle_Team2on2_Room_Setting   = 36,
	LeaveRoom                      = 37,
	Internet_Survival_Room_creation = 38,
	Internet_Survival_Room_search  = 39,
	Local_Survival_Room_creation   = 40,
	Local_Survival_Room_search     = 41,
	Ranking_Survival               = 42,
	MAX                            = 43,
};

enum class ETTLTerminalTopMenuState : uint8
{
	State_None                     = 0,
	State_Online                   = 1,
	State_Local                    = 2,
	State_SessionOnline            = 3,
	State_SessionOffline           = 4,
	State_OnlineBattle1vs1         = 5,
	State_OnlineBattle2vs2         = 6,
	State_LocalBattle1vs1          = 7,
	State_LocalBattle2vs2          = 8,
	State_MAX                      = 9,
};

enum class ETTLEOnlTerminalTopSceneState : uint8
{
	Input_Animation                = 0,
	Input_MainItem                 = 1,
	Input_SubItem                  = 2,
	Input_NotificationArea         = 3,
	Input_DlcNotice                = 4,
	Input_MAX                      = 5,
};

enum class ETTLTerminalLoadingState : uint8
{
	State_Idle                     = 0,
	State_MissionRanking_Loading   = 1,
	State_MissionRanking_EndLoad   = 2,
	State_CoopRoomSearch_Loading   = 3,
	State_BattleRoomSearch_Loading = 4,
	State_In_Online                = 5,
	State_In_Online_FinishedLogin  = 6,
	State_ReadyToMission_Waiting   = 7,
	State_MAX                      = 8,
};

enum class EUTTLOptionSelectPresetWindowType : uint8
{
	Type_SelectPreset              = 0,
	Type_NotSetting                = 1,
	Type_MAX                       = 2,
};

enum class EUTTLOptionPadType : uint8
{
	Type_LStick                    = 0,
	Type_Up                        = 1,
	Type_Right                     = 2,
	Type_Down                      = 3,
	Type_Left                      = 4,
	Type_L                         = 5,
	Type_R                         = 6,
	Type_X                         = 7,
	Type_A                         = 8,
	Type_Y                         = 9,
	Type_B                         = 10,
	Type_RStick                    = 11,
	Type_ZL                        = 12,
	Type_ZR                        = 13,
	Type_MAX                       = 14,
};

enum class EUTTLOptionList01Color : uint8
{
	Color_Red                      = 0,
	Color_Blue                     = 1,
	Color_White                    = 2,
	Color_Max                      = 3,
};

enum class ETTLOptionWidgetAlpha : uint8
{
	TextAlpha_Light                = 0,
	TextAlpha_Dark                 = 1,
	TextAlpha_Max                  = 2,
};

enum class ETTLOptionWidgetType : uint8
{
	WidgetType_Select              = 0,
	WidgetType_Slider              = 1,
	WidgetType_NoSelect            = 2,
	WidgetType_MAX                 = 3,
};

enum class ETTLOptionItemChoice : uint8
{
	ItemChoice_Select              = 0,
	ItemChoice_Decision            = 1,
	ItemChoice_Cancel              = 2,
	ItemChoice_MAX                 = 3,
};

enum class ETTLOptionKeyCategory : uint8
{
	Category_Common                = 0,
	Category_Arsenal               = 1,
	Category_Outer                 = 2,
	Category_MAX                   = 3,
};

enum class ETTLOptionItem : uint8
{
	Item_ButtonCustom              = 0,
	Item_HUDCustom                 = 1,
	Item_GameSetting               = 2,
	Item_ScreenSetting             = 3,
	Item_SoundSetting              = 4,
	Item_SystemSetting             = 5,
	Item_Max                       = 6,
};

enum class EFTTLOptionScreenColorPerceptionType : uint8
{
	Type_ON                        = 0,
	Type_OFF                       = 1,
	Type_MAX                       = 2,
};

enum class ETTLOptionKeyConfigKeyType : uint8
{
	Type_CommonMove                = 0,
	Type_CommonCamera              = 1,
	Type_ArsenalAttackRight        = 2,
	Type_ArsenalAttackLeft         = 3,
	Type_ArsenalshoulderLeft       = 4,
	Type_ArsenalThrowCatch         = 5,
	Type_ArsenalJump               = 6,
	Type_ArsenalFalling            = 7,
	Type_ArsenaBoost               = 8,
	Type_ArsenaMirage              = 9,
	Type_ArsenaFemtoWeaponOrder    = 10,
	Type_ArsenaFemtoWeaponReverse  = 11,
	Type_ArsenaWeaponChange        = 12,
	Type_ArsenaPartChange          = 13,
	Type_ArsenaAttackOption        = 14,
	Type_ArsenaGetOff              = 15,
	Type_HumanTrap                 = 16,
	Type_HumanGrenade              = 17,
	Type_HumanWeapon               = 18,
	Type_HumanSpecialSkill         = 19,
	Type_HumanAvoidance            = 20,
	Type_HumanSubWeapon            = 21,
	Type_HumanDash                 = 22,
	Type_HumanJump                 = 23,
	Type_HumanBoarding             = 24,
	Type_HumanBlade                = 25,
	Type_HumanCatch                = 26,
	Type_HumanRepair               = 27,
	Type_CommonAssist1             = 28,
	Type_CommonAssist2             = 29,
	Type_ArsenaFemtoWeaponAssult   = 30,
	Type_ArsenaFemtoWeaponShield   = 31,
	Type_ArsenaFemtoWeaponWing     = 32,
	Type_ArsenaWeaponSelectLeft    = 33,
	Type_ArsenaWeaponSelectRight   = 34,
	Type_ArsenaWeaponSelectUp      = 35,
	Type_HumanBoostOff             = 36,
	Type_MAX                       = 37,
	Type_Keyboard_CommonMoveUp     = 38,
	Type_Keyboard_CommonMoveDown   = 39,
	Type_Keyboard_CommonMoveLeft   = 40,
	Type_Keyboard_CommonMoveRight  = 41,
	Type_Keyboard_CommonCameraUp   = 42,
	Type_Keyboard_CommonCameraDown = 43,
	Type_Keyboard_CommonCameraLeft = 44,
	Type_Keyboard_CommonCameraRight = 45,
	Type_Keyboard_Max              = 46,
	Type_ForUi_SniperZoom          = 47,
	Type_ForUi_Max                 = 48,
	NUM                            = 49,
	TTLOptionKeyConfigKeyType_MAX  = 50,
};

enum class ETTLEOptionHUDCustomWarning : uint8
{
	VP_30P                         = 0,
	TMP_ALERT                      = 1,
	OVERHEAT                       = 2,
	HEAT_SOURCE                    = 3,
	NO_AMMO                        = 4,
	FEMTO_ZONE                     = 5,
	BAD_STATUS                     = 6,
	CANT_THROW                     = 7,
	GROUND                         = 8,
	FRIENDLY_FIRE                  = 9,
	OuterNoAmmo                    = 10,
	OuterStaminaOver               = 11,
	OuterTMPAlert                  = 12,
	OuterFemtoZone                 = 13,
	OuterFriendlyFire              = 14,
	OuterSelfDestruct              = 15,
	Max                            = 16,
};

enum class ETTLEOptionHUDCustomWidget : uint8
{
	ShoulderWeapon                 = 0,
	LeftWeapon                     = 1,
	RightWeapon                    = 2,
	LegsParts                      = 3,
	LeftParts                      = 4,
	BodyParts                      = 5,
	RightParts                     = 6,
	HeadParts                      = 7,
	OptionWeapon                   = 8,
	Gauge                          = 9,
	TmpGauge                       = 10,
	FemtoGauge                     = 11,
	MiniMap                        = 12,
	Time                           = 13,
	FriendInfo                     = 14,
	CrossHair                      = 15,
	Sight                          = 16,
	HitDisp                        = 17,
	Warning                        = 18,
	AreaAlert                      = 19,
	Chat                           = 20,
	ParticleArmyA                  = 21,
	ParticleArmyB                  = 22,
	ParticleArmyC                  = 23,
	TargetCount                    = 24,
	Talk                           = 25,
	Max                            = 26,
};

enum class ETTLEHUDCustomWindowState : uint8
{
	State_Closed                   = 0,
	State_Opening                  = 1,
	State_Running                  = 2,
	State_Closing                  = 3,
	State_Max                      = 4,
};

enum class ETTLEOptionHUDCustomOuterWidget : uint8
{
	OuterGauge                     = 0,
	OuterWeaponInfo                = 1,
	OuterArsenalInfo               = 2,
	OuterMiniMap                   = 3,
	OuterTime                      = 4,
	Max                            = 5,
};

enum class ETTLEKeyConfigListMode : uint8
{
	Mode_ListControl               = 0,
	Mode_ToKeyInput                = 1,
	Mode_KeyControl                = 2,
	Mode_ToListInput               = 3,
	Mode_MAX                       = 4,
};

enum class ETTLOptionMenuOpenScene : uint8
{
	InGame                         = 0,
	InTitle                        = 1,
	Max                            = 2,
};

enum class ETTLEOuterHandAnimationState : uint8
{
	HandAnimation_Idle             = 0,
	HandAnimation_ThrowHolding     = 1,
	HandAnimation_Throwing         = 2,
	HandAnimation_Max              = 3,
};

enum class ETTLECharaEditInfoType : uint8
{
	None                           = 0,
	HairType                       = 1,
	FaceLine                       = 2,
	SkinType                       = 3,
	BrowType                       = 4,
	BeardType                      = 5,
	EyeType                        = 6,
	DecalType                      = 7,
	VoiceType                      = 8,
	SuitType                       = 9,
	TTLECharaEditInfoType_MAX      = 10,
};

enum class ETTLEHumanCustomDLCSuitsType : uint8
{
	SuitsType_Normal               = 0,
	SuitsType_Collabo1             = 1,
	SuitsType_Collabo2             = 2,
	SuitsType_Collabo3             = 3,
	SuitsType_Max                  = 4,
};

enum class ETTLEHumanCustomApHeadHidePartsType : uint8
{
	HidePartsType_None             = 0,
	HidePartsType_Hair             = 1,
	HidePartsType_HeadAll          = 2,
	Max                            = 3,
};

enum class ETTLEHumanCustomSettingType : uint8
{
	SettingType_Def                = 0,
	SettingType_Remodel            = 1,
	Max                            = 2,
};

enum class ETTLEHumanCustomColorID : uint8
{
	ColorID_000                    = 0,
	ColorID_001                    = 1,
	ColorID_002                    = 2,
	ColorID_003                    = 3,
	ColorID_004                    = 4,
	ColorID_005                    = 5,
	ColorID_006                    = 6,
	ColorID_007                    = 7,
	ColorID_008                    = 8,
	ColorID_009                    = 9,
	ColorID_010                    = 10,
	ColorID_011                    = 11,
	ColorID_012                    = 12,
	ColorID_013                    = 13,
	ColorID_014                    = 14,
	ColorID_015                    = 15,
	ColorID_016                    = 16,
	ColorID_017                    = 17,
	ColorID_018                    = 18,
	ColorID_019                    = 19,
	ColorID_020                    = 20,
	ColorID_021                    = 21,
	ColorID_022                    = 22,
	ColorID_023                    = 23,
	ColorID_024                    = 24,
	ColorID_025                    = 25,
	ColorID_026                    = 26,
	ColorID_027                    = 27,
	ColorID_028                    = 28,
	ColorID_029                    = 29,
	ColorID_030                    = 30,
	ColorID_031                    = 31,
	ColorID_032                    = 32,
	ColorID_033                    = 33,
	ColorID_034                    = 34,
	ColorID_035                    = 35,
	ColorID_036                    = 36,
	ColorID_037                    = 37,
	ColorID_038                    = 38,
	ColorID_039                    = 39,
	ColorID_040                    = 40,
	ColorID_041                    = 41,
	ColorID_042                    = 42,
	ColorID_043                    = 43,
	ColorID_044                    = 44,
	ColorID_045                    = 45,
	ColorID_046                    = 46,
	ColorID_047                    = 47,
	ColorID_048                    = 48,
	ColorID_049                    = 49,
	ColorID_050                    = 50,
	ColorID_051                    = 51,
	ColorID_052                    = 52,
	ColorID_053                    = 53,
	ColorID_054                    = 54,
	ColorID_055                    = 55,
	ColorID_056                    = 56,
	ColorID_057                    = 57,
	ColorID_058                    = 58,
	ColorID_059                    = 59,
	ColorID_060                    = 60,
	ColorID_061                    = 61,
	ColorID_062                    = 62,
	ColorID_063                    = 63,
	ColorID_064                    = 64,
	ColorID_065                    = 65,
	ColorID_066                    = 66,
	ColorID_067                    = 67,
	ColorID_068                    = 68,
	ColorID_069                    = 69,
	ColorID_070                    = 70,
	ColorID_071                    = 71,
	ColorID_072                    = 72,
	ColorID_073                    = 73,
	ColorID_074                    = 74,
	ColorID_075                    = 75,
	ColorID_076                    = 76,
	ColorID_077                    = 77,
	ColorID_078                    = 78,
	ColorID_079                    = 79,
	ColorID_080                    = 80,
	ColorID_081                    = 81,
	ColorID_082                    = 82,
	ColorID_083                    = 83,
	ColorID_084                    = 84,
	ColorID_085                    = 85,
	ColorID_086                    = 86,
	ColorID_087                    = 87,
	ColorID_088                    = 88,
	ColorID_089                    = 89,
	ColorID_090                    = 90,
	ColorID_091                    = 91,
	ColorID_092                    = 92,
	ColorID_093                    = 93,
	ColorID_094                    = 94,
	ColorID_095                    = 95,
	ColorID_096                    = 96,
	ColorID_097                    = 97,
	ColorID_098                    = 98,
	ColorID_099                    = 99,
	ColorID_100                    = 100,
	ColorID_101                    = 101,
	ColorID_102                    = 102,
	ColorID_103                    = 103,
	ColorID_104                    = 104,
	ColorID_105                    = 105,
	ColorID_106                    = 106,
	ColorID_107                    = 107,
	ColorID_108                    = 108,
	ColorID_109                    = 109,
	ColorID_110                    = 110,
	ColorID_111                    = 111,
	ColorID_112                    = 112,
	ColorID_113                    = 113,
	ColorID_114                    = 114,
	ColorID_115                    = 115,
	ColorID_116                    = 116,
	ColorID_117                    = 117,
	ColorID_118                    = 118,
	ColorID_119                    = 119,
	ColorID_120                    = 120,
	ColorID_121                    = 121,
	ColorID_122                    = 122,
	ColorID_123                    = 123,
	ColorID_124                    = 124,
	ColorID_125                    = 125,
	ColorID_126                    = 126,
	ColorID_127                    = 127,
	ColorID_128                    = 128,
	ColorID_129                    = 129,
	ColorID_130                    = 130,
	ColorID_131                    = 131,
	ColorID_132                    = 132,
	ColorID_133                    = 133,
	ColorID_134                    = 134,
	ColorID_135                    = 135,
	ColorID_136                    = 136,
	ColorID_137                    = 137,
	ColorID_138                    = 138,
	ColorID_139                    = 139,
	ColorID_140                    = 140,
	ColorID_141                    = 141,
	ColorID_142                    = 142,
	ColorID_143                    = 143,
	ColorID_144                    = 144,
	ColorID_145                    = 145,
	ColorID_146                    = 146,
	ColorID_147                    = 147,
	ColorID_148                    = 148,
	ColorID_149                    = 149,
	ColorID_150                    = 150,
	ColorID_151                    = 151,
	ColorID_152                    = 152,
	ColorID_153                    = 153,
	ColorID_154                    = 154,
	ColorID_155                    = 155,
	ColorID_156                    = 156,
	ColorID_157                    = 157,
	ColorID_158                    = 158,
	ColorID_159                    = 159,
	ColorID_160                    = 160,
	ColorID_161                    = 161,
	ColorID_162                    = 162,
	ColorID_163                    = 163,
	ColorID_164                    = 164,
	ColorID_165                    = 165,
	ColorID_166                    = 166,
	ColorID_167                    = 167,
	ColorID_168                    = 168,
	ColorID_169                    = 169,
	ColorID_170                    = 170,
	ColorID_171                    = 171,
	ColorID_172                    = 172,
	ColorID_173                    = 173,
	ColorID_174                    = 174,
	ColorID_175                    = 175,
	ColorID_176                    = 176,
	ColorID_177                    = 177,
	ColorID_178                    = 178,
	ColorID_179                    = 179,
	ColorID_180                    = 180,
	ColorID_181                    = 181,
	ColorID_182                    = 182,
	ColorID_183                    = 183,
	ColorID_184                    = 184,
	ColorID_185                    = 185,
	ColorID_186                    = 186,
	ColorID_187                    = 187,
	ColorID_188                    = 188,
	ColorID_189                    = 189,
	ColorID_190                    = 190,
	ColorID_191                    = 191,
	ColorID_192                    = 192,
	ColorID_193                    = 193,
	ColorID_194                    = 194,
	ColorID_195                    = 195,
	ColorID_196                    = 196,
	ColorID_197                    = 197,
	ColorID_198                    = 198,
	ColorID_199                    = 199,
	ColorID_200                    = 200,
	ColorID_201                    = 201,
	ColorID_202                    = 202,
	ColorID_203                    = 203,
	ColorID_204                    = 204,
	ColorID_205                    = 205,
	ColorID_206                    = 206,
	ColorID_207                    = 207,
	ColorID_208                    = 208,
	ColorID_209                    = 209,
	ColorID_210                    = 210,
	ColorID_211                    = 211,
	ColorID_212                    = 212,
	ColorID_213                    = 213,
	ColorID_214                    = 214,
	ColorID_215                    = 215,
	ColorID_216                    = 216,
	ColorID_217                    = 217,
	ColorID_218                    = 218,
	ColorID_219                    = 219,
	ColorID_220                    = 220,
	ColorID_221                    = 221,
	ColorID_222                    = 222,
	ColorID_223                    = 223,
	ColorID_224                    = 224,
	ColorID_225                    = 225,
	ColorID_226                    = 226,
	ColorID_227                    = 227,
	ColorID_228                    = 228,
	ColorID_229                    = 229,
	ColorID_230                    = 230,
	ColorID_231                    = 231,
	ColorID_232                    = 232,
	ColorID_233                    = 233,
	ColorID_234                    = 234,
	ColorID_235                    = 235,
	ColorID_236                    = 236,
	ColorID_237                    = 237,
	ColorID_238                    = 238,
	ColorID_239                    = 239,
	ColorID_240                    = 240,
	ColorID_241                    = 241,
	ColorID_242                    = 242,
	ColorID_243                    = 243,
	ColorID_244                    = 244,
	ColorID_245                    = 245,
	ColorID_246                    = 246,
	ColorID_247                    = 247,
	ColorID_248                    = 248,
	ColorID_249                    = 249,
	ColorID_250                    = 250,
	ColorID_251                    = 251,
	ColorID_252                    = 252,
	ColorID_253                    = 253,
	ColorID_Custom                 = 254,
	ColorID_None                   = 255,
	ColorID_MAX                    = 256,
};

enum class ETTLEHumanCustomPartsID : uint8
{
	PartsID_000                    = 0,
	PartsID_001                    = 1,
	PartsID_002                    = 2,
	PartsID_003                    = 3,
	PartsID_004                    = 4,
	PartsID_005                    = 5,
	PartsID_006                    = 6,
	PartsID_007                    = 7,
	PartsID_008                    = 8,
	PartsID_009                    = 9,
	PartsID_010                    = 10,
	PartsID_011                    = 11,
	PartsID_012                    = 12,
	PartsID_013                    = 13,
	PartsID_014                    = 14,
	PartsID_015                    = 15,
	PartsID_016                    = 16,
	PartsID_017                    = 17,
	PartsID_018                    = 18,
	PartsID_019                    = 19,
	PartsID_020                    = 20,
	PartsID_021                    = 21,
	PartsID_022                    = 22,
	PartsID_023                    = 23,
	PartsID_024                    = 24,
	PartsID_025                    = 25,
	PartsID_026                    = 26,
	PartsID_027                    = 27,
	PartsID_028                    = 28,
	PartsID_029                    = 29,
	PartsID_030                    = 30,
	PartsID_031                    = 31,
	PartsID_032                    = 32,
	PartsID_033                    = 33,
	PartsID_034                    = 34,
	PartsID_035                    = 35,
	PartsID_036                    = 36,
	PartsID_037                    = 37,
	PartsID_038                    = 38,
	PartsID_039                    = 39,
	PartsID_040                    = 40,
	PartsID_041                    = 41,
	PartsID_042                    = 42,
	PartsID_043                    = 43,
	PartsID_044                    = 44,
	PartsID_045                    = 45,
	PartsID_046                    = 46,
	PartsID_047                    = 47,
	PartsID_048                    = 48,
	PartsID_049                    = 49,
	PartsID_050                    = 50,
	PartsID_051                    = 51,
	PartsID_052                    = 52,
	PartsID_053                    = 53,
	PartsID_054                    = 54,
	PartsID_055                    = 55,
	PartsID_056                    = 56,
	PartsID_057                    = 57,
	PartsID_058                    = 58,
	PartsID_059                    = 59,
	PartsID_060                    = 60,
	PartsID_061                    = 61,
	PartsID_062                    = 62,
	PartsID_063                    = 63,
	PartsID_064                    = 64,
	PartsID_065                    = 65,
	PartsID_066                    = 66,
	PartsID_067                    = 67,
	PartsID_068                    = 68,
	PartsID_069                    = 69,
	PartsID_070                    = 70,
	PartsID_071                    = 71,
	PartsID_072                    = 72,
	PartsID_073                    = 73,
	PartsID_074                    = 74,
	PartsID_075                    = 75,
	PartsID_076                    = 76,
	PartsID_077                    = 77,
	PartsID_078                    = 78,
	PartsID_079                    = 79,
	PartsID_080                    = 80,
	PartsID_081                    = 81,
	PartsID_082                    = 82,
	PartsID_083                    = 83,
	PartsID_084                    = 84,
	PartsID_085                    = 85,
	PartsID_086                    = 86,
	PartsID_087                    = 87,
	PartsID_088                    = 88,
	PartsID_089                    = 89,
	PartsID_090                    = 90,
	PartsID_091                    = 91,
	PartsID_092                    = 92,
	PartsID_093                    = 93,
	PartsID_094                    = 94,
	PartsID_095                    = 95,
	PartsID_096                    = 96,
	PartsID_097                    = 97,
	PartsID_098                    = 98,
	PartsID_099                    = 99,
	PartsID_100                    = 100,
	PartsID_101                    = 101,
	PartsID_102                    = 102,
	PartsID_103                    = 103,
	PartsID_104                    = 104,
	PartsID_105                    = 105,
	PartsID_106                    = 106,
	PartsID_107                    = 107,
	PartsID_108                    = 108,
	PartsID_109                    = 109,
	PartsID_110                    = 110,
	PartsID_111                    = 111,
	PartsID_112                    = 112,
	PartsID_113                    = 113,
	PartsID_114                    = 114,
	PartsID_115                    = 115,
	PartsID_116                    = 116,
	PartsID_117                    = 117,
	PartsID_118                    = 118,
	PartsID_119                    = 119,
	PartsID_120                    = 120,
	PartsID_121                    = 121,
	PartsID_122                    = 122,
	PartsID_123                    = 123,
	PartsID_124                    = 124,
	PartsID_125                    = 125,
	PartsID_126                    = 126,
	PartsID_127                    = 127,
	PartsID_128                    = 128,
	PartsID_129                    = 129,
	PartsID_130                    = 130,
	PartsID_131                    = 131,
	PartsID_132                    = 132,
	PartsID_133                    = 133,
	PartsID_134                    = 134,
	PartsID_135                    = 135,
	PartsID_136                    = 136,
	PartsID_137                    = 137,
	PartsID_138                    = 138,
	PartsID_139                    = 139,
	PartsID_140                    = 140,
	PartsID_141                    = 141,
	PartsID_142                    = 142,
	PartsID_143                    = 143,
	PartsID_144                    = 144,
	PartsID_145                    = 145,
	PartsID_146                    = 146,
	PartsID_147                    = 147,
	PartsID_148                    = 148,
	PartsID_149                    = 149,
	PartsID_150                    = 150,
	PartsID_151                    = 151,
	PartsID_152                    = 152,
	PartsID_153                    = 153,
	PartsID_154                    = 154,
	PartsID_155                    = 155,
	PartsID_156                    = 156,
	PartsID_157                    = 157,
	PartsID_158                    = 158,
	PartsID_159                    = 159,
	PartsID_160                    = 160,
	PartsID_161                    = 161,
	PartsID_162                    = 162,
	PartsID_163                    = 163,
	PartsID_164                    = 164,
	PartsID_165                    = 165,
	PartsID_166                    = 166,
	PartsID_167                    = 167,
	PartsID_168                    = 168,
	PartsID_169                    = 169,
	PartsID_170                    = 170,
	PartsID_171                    = 171,
	PartsID_172                    = 172,
	PartsID_173                    = 173,
	PartsID_174                    = 174,
	PartsID_175                    = 175,
	PartsID_176                    = 176,
	PartsID_177                    = 177,
	PartsID_178                    = 178,
	PartsID_179                    = 179,
	PartsID_180                    = 180,
	PartsID_181                    = 181,
	PartsID_182                    = 182,
	PartsID_183                    = 183,
	PartsID_184                    = 184,
	PartsID_185                    = 185,
	PartsID_186                    = 186,
	PartsID_187                    = 187,
	PartsID_188                    = 188,
	PartsID_189                    = 189,
	PartsID_190                    = 190,
	PartsID_191                    = 191,
	PartsID_192                    = 192,
	PartsID_193                    = 193,
	PartsID_194                    = 194,
	PartsID_195                    = 195,
	PartsID_196                    = 196,
	PartsID_197                    = 197,
	PartsID_198                    = 198,
	PartsID_199                    = 199,
	PartsID_200                    = 200,
	PartsID_201                    = 201,
	PartsID_202                    = 202,
	PartsID_203                    = 203,
	PartsID_204                    = 204,
	PartsID_205                    = 205,
	PartsID_206                    = 206,
	PartsID_207                    = 207,
	PartsID_208                    = 208,
	PartsID_209                    = 209,
	PartsID_210                    = 210,
	PartsID_211                    = 211,
	PartsID_212                    = 212,
	PartsID_213                    = 213,
	PartsID_214                    = 214,
	PartsID_215                    = 215,
	PartsID_216                    = 216,
	PartsID_217                    = 217,
	PartsID_218                    = 218,
	PartsID_219                    = 219,
	PartsID_220                    = 220,
	PartsID_221                    = 221,
	PartsID_222                    = 222,
	PartsID_223                    = 223,
	PartsID_224                    = 224,
	PartsID_225                    = 225,
	PartsID_226                    = 226,
	PartsID_227                    = 227,
	PartsID_228                    = 228,
	PartsID_229                    = 229,
	PartsID_230                    = 230,
	PartsID_231                    = 231,
	PartsID_232                    = 232,
	PartsID_233                    = 233,
	PartsID_234                    = 234,
	PartsID_235                    = 235,
	PartsID_236                    = 236,
	PartsID_237                    = 237,
	PartsID_238                    = 238,
	PartsID_239                    = 239,
	PartsID_240                    = 240,
	PartsID_241                    = 241,
	PartsID_242                    = 242,
	PartsID_243                    = 243,
	PartsID_244                    = 244,
	PartsID_245                    = 245,
	PartsID_246                    = 246,
	PartsID_247                    = 247,
	PartsID_248                    = 248,
	PartsID_249                    = 249,
	PartsID_250                    = 250,
	PartsID_None                   = 251,
	PartsID_OFF                    = 252,
	Max                            = 253,
};

enum class ETTLEHumanCustomSelectType : uint8
{
	Type01                         = 0,
	Type02                         = 1,
	Type03                         = 2,
	Type04                         = 3,
	Type05                         = 4,
	Type06                         = 5,
	Type07                         = 6,
	Type08                         = 7,
	Type09                         = 8,
	Type10                         = 9,
	Type11                         = 10,
	Type12                         = 11,
	Type13                         = 12,
	Type14                         = 13,
	Type15                         = 14,
	Type16                         = 15,
	Max                            = 16,
};

enum class ETTLEHumanCustomKind : uint8
{
	Normal                         = 0,
	Remodel                        = 1,
	Disabled                       = 2,
	NPC                            = 3,
	DLC                            = 4,
	TTLEHumanCustomKind_MAX        = 5,
};

enum class ETTLEHumanGenderType : uint8
{
	Male                           = 0,
	Female                         = 1,
	Male2                          = 2,
	Female2                        = 3,
	Male3                          = 4,
	Female3                        = 5,
	Other                          = 6,
	TypeMax                        = 7,
	TTLEHumanGenderType_MAX        = 8,
};

enum class ETTLEHumanSkillEffectType : uint8
{
	SKEffect_None                  = 0,
	SKEffect_Outer                 = 1,
	SKEffect_Arsenal               = 2,
	SKEffect_Max                   = 3,
};

enum class ETTLEHumanSurgeryPoint : uint8
{
	Head                           = 0,
	UpperBody                      = 1,
	LowerBody                      = 2,
	Max                            = 3,
};

enum class ETTLEHumanDecalType : uint8
{
	Seal                           = 0,
	Brow                           = 1,
	Max                            = 2,
};

enum class ETTLEHumanMaterialType : uint8
{
	Skin                           = 0,
	Brow                           = 1,
	EyeL                           = 2,
	EyeR                           = 3,
	Eyeshadow                      = 4,
	Lip                            = 5,
	PartsBody                      = 6,
	PartsArmL                      = 7,
	PartsHandL                     = 8,
	PartsArmR                      = 9,
	PartsHandR                     = 10,
	PartsLegs                      = 11,
	PartsHair                      = 12,
	PartsBeard                     = 13,
	PartsInside                    = 14,
	PartsApHead                    = 15,
	PartsApEye                     = 16,
	PartsApJaw                     = 17,
	PartsApArmL                    = 18,
	PartsApArmR                    = 19,
	PartsApLegL                    = 20,
	PartsApLegR                    = 21,
	PartsApHip                     = 22,
	FaceSeal                       = 23,
	FaceLine                       = 24,
	PartsBody2                     = 25,
	PartsBody3                     = 26,
	PartsArmL2                     = 27,
	PartsArmL3                     = 28,
	PartsHandL2                    = 29,
	PartsHandL3                    = 30,
	PartsArmR2                     = 31,
	PartsArmR3                     = 32,
	PartsHandR2                    = 33,
	PartsHandR3                    = 34,
	PartsLegs2                     = 35,
	PartsLegs3                     = 36,
	PartsApEye2                    = 37,
	PartsApEye3                    = 38,
	PartsApJaw2                    = 39,
	PartsApJaw3                    = 40,
	PartsApArmL2                   = 41,
	PartsApArmL3                   = 42,
	PartsApArmR2                   = 43,
	PartsApArmR3                   = 44,
	PartsApLegL2                   = 45,
	PartsApLegL3                   = 46,
	PartsApLegR2                   = 47,
	PartsApLegR3                   = 48,
	PartsApHip2                    = 49,
	PartsApHip3                    = 50,
	PartsApHead2                   = 51,
	PartsApHead3                   = 52,
	PartsApHair                    = 53,
	PartsApBody                    = 54,
	PartsApBody2                   = 55,
	Max                            = 56,
};

enum class ETTLEHumanPartsType : uint8
{
	Head                           = 0,
	Body                           = 1,
	ArmL                           = 2,
	HandL                          = 3,
	ArmR                           = 4,
	HandR                          = 5,
	Legs                           = 6,
	Hair                           = 7,
	Beard                          = 8,
	Inside                         = 9,
	ApEye                          = 10,
	ApJaw                          = 11,
	ApArmL                         = 12,
	ApArmR                         = 13,
	ApLegL                         = 14,
	ApLegR                         = 15,
	ApHip                          = 16,
	ApHead                         = 17,
	ApArmL2                        = 18,
	ApArmR2                        = 19,
	Max                            = 20,
};

enum class ETTLEFlagItemDropType : uint8
{
	FlagDrop_Enemy                 = 0,
	FlagDrop_Mission               = 1,
	FlagDrop_NPCJoin               = 2,
	FlagDrop_Max                   = 3,
};

enum class ETTLENgType : uint8
{
	BattleNg                       = 1,
	CoopNg                         = 2,
	AllNg                          = 3,
	Max                            = 4,
};

enum class ETTLEFeatureParamRank : uint8
{
	None                           = 0,
	Rank_m2                        = 1,
	Rank_m1                        = 2,
	Rank_p1                        = 3,
	Rank_p2                        = 4,
	MAX                            = 5,
};

enum class ETTLArsenalGrade : uint8
{
	Grade_E                        = 0,
	Grade_D                        = 1,
	Grade_C                        = 2,
	Grade_B                        = 3,
	Grade_A                        = 4,
	Grade_S                        = 5,
	Grade_MAX                      = 6,
};

enum class ETTLExtraAttachmentParameterType : uint8
{
	BulletDropUp                   = 0,
	FemtoDropUp                    = 1,
	ArmorDropUp                    = 2,
	WeaponDropUp                   = 3,
	MirageConsumeDown              = 4,
	EncounterUp                    = 5,
	FemtoShiftUp                   = 6,
	FemtoShiftConsumeDown          = 7,
	RebootTimeDown                 = 8,
	RebootFemtoConsumeDown         = 9,
	RebootEffectUp                 = 10,
	RebootFemtoGet                 = 11,
	ItemCatchRange                 = 12,
	DamageAbsorbRate               = 13,
	FemtoRecoveryUp                = 14,
	FemtoGetOnMissionStart         = 15,
	ThrowKnockOutLeft              = 16,
	ThrowKnockOutRight             = 17,
	MAX                            = 18,
};

enum class ETTLEPartsMovableType : uint8
{
	None                           = 0,
	OnBoost                        = 1,
	OnQuickBoost                   = 2,
	OnDash                         = 3,
	OnJumpCharge                   = 4,
	OnJump                         = 5,
	OnLanded                       = 6,
	OnAttackArm                    = 7,
	OnAttackArmLeft                = 8,
	OnAttackArmRight               = 9,
	OnAtkackShoulder               = 10,
	OnThrow                        = 11,
	OnGetOnOff                     = 12,
	OnEject                        = 13,
	OnKnockbackGround              = 14,
	Type_Max                       = 15,
	TTLEPartsMovableType_MAX       = 16,
};

enum class ETTLGunArmType : uint8
{
	GunArmType_None                = 0,
	GunArmType_AssultRifle         = 1,
	GunArmType_MachineGun          = 2,
	GunArmType_ShotGun             = 3,
	GunArmType_SniperRifle         = 4,
	GunArmType_Bazooka             = 5,
	GunArmType_Max                 = 6,
};

enum class ETTLLockonSightType : uint8
{
	LockonSight_Clrcle             = 0,
	LockonSight_Square             = 1,
	LockonSight_Max                = 2,
};

enum class ETTLEnterpriseType : uint8
{
	EnterPrise_None                = 0,
	EnterPrise_SkyUnion            = 1,
	EnterPrise_Horizon             = 2,
	EnterPrise_Zen                 = 3,
	EnterPrise_BOSS                = 4,
	EnterPrise_Max                 = 5,
	EnterPrise_Secret              = 6,
};

enum class ETTLETradingMode : uint8
{
	TradingMode_None               = 0,
	TradingMode_Buy                = 1,
	TradingMode_Sell               = 2,
	TradingMode_MAX                = 3,
};

enum class ETTLEAssembleSortType : uint8
{
	SortType_Parts_GetDay          = 0,
	SortType_Parts_Category        = 1,
	SortType_Parts_Maker           = 2,
	SortType_Parts_Cost            = 3,
	SortType_Parts_Defense         = 4,
	SortType_Parts_LaserDefense    = 5,
	SortType_Parts_InternalArmor   = 6,
	SortType_Parts_ExternalArmor   = 7,
	SortType_Parts_Stealth         = 8,
	SortType_Parts_Weight          = 9,
	SortType_Parts_Ability         = 10,
	SortType_Parts_Price           = 11,
	SortType_Parts_NotHave         = 12,
	SortType_Parts_Durable         = 13,
	SortType_Parts_PhysicsResist   = 14,
	SortType_Parts_BurningResist   = 15,
	SortType_Parts_StunResist      = 16,
	SortType_Parts_AcidResist      = 17,
	SortType_Parts_LockonSightSize = 18,
	SortType_Parts_LockonTime_Head = 19,
	SortType_Parts_LockonRange_Head = 20,
	SortType_Parts_RadarRadius     = 21,
	SortType_Parts_ShootingControl = 22,
	SortType_Parts_CostCapacity    = 23,
	SortType_Parts_FlyingSpeed     = 24,
	SortType_Parts_FlyingBoostSpeed = 25,
	SortType_Parts_FlyingBoostSTM  = 26,
	SortType_Parts_KnockbackResist = 27,
	SortType_Parts_CoolSpeedFlying = 28,
	SortType_Parts_CoolSpeedSpecial = 29,
	SortType_Parts_ShootCorrectSpec = 30,
	SortType_Parts_ShootingSpec    = 31,
	SortType_Parts_MoveProcessSpec = 32,
	SortType_Parts_BoostProcessSpec = 33,
	SortType_Parts_LimitSTM        = 34,
	SortType_Parts_CoolingPerformance = 35,
	SortType_Parts_CostCapacityCorrection = 36,
	SortType_Parts_BurstCorrection = 37,
	SortType_Parts_CoolCorrection  = 38,
	SortType_Parts_AccuracyCorrection = 39,
	SortType_Parts_ReloadCorrection = 40,
	SortType_Parts_ThrowSpec       = 41,
	SortType_Parts_RecoilSpec      = 42,
	SortType_Parts_JointRange      = 43,
	SortType_Parts_MaxPower        = 44,
	SortType_Parts_GroundSpeed     = 45,
	SortType_Parts_GroundBoostSpeed = 46,
	SortType_Parts_LandingTime     = 47,
	SortType_Parts_KnockBackRecoveryTime = 48,
	SortType_Parts_JumpSpeed       = 49,
	SortType_Parts_PoseControlSpec = 50,
	SortType_Parts_HeatDownSpec    = 51,
	SortType_Weapon_GetDay         = 52,
	SortType_Weapon_Category       = 53,
	SortType_Weapon_Maker          = 54,
	SortType_Weapon_Cost           = 55,
	SortType_Weapon_Damage         = 56,
	SortType_Weapon_Reload         = 57,
	SortType_Weapon_Range          = 58,
	SortType_Weapon_Stealth        = 59,
	SortType_Weapon_Weight         = 60,
	SortType_Weapon_Abnormal       = 61,
	SortType_Weapon_Price          = 62,
	SortType_Weapon_NotHave        = 63,
	SortType_Weapon_MagazineSize   = 64,
	SortType_Weapon_BulletSpeed    = 65,
	SortType_Weapon_ShootRate      = 66,
	SortType_Weapon_GroupingRate   = 67,
	SortType_Weapon_ReloadTime     = 68,
	SortType_Weapon_DistanceIgnoreGravity = 69,
	SortType_Weapon_ShootCoolTime  = 70,
	SortType_Weapon_KnockBack      = 71,
	SortType_Weapon_MaxSpreadAngle = 72,
	SortType_Weapon_ShotSpreadAngle = 73,
	SortType_Weapon_ExplodeRadius  = 74,
	SortType_Weapon_CousumeFemto   = 75,
	SortType_Weapon_FirstAttackMaxMoveLength = 76,
	SortType_Weapon_MaxMoveSpeed   = 77,
	SortType_Weapon_ComboAttackMaxNum = 78,
	SortType_Weapon_KnockOut       = 79,
	SortType_Weapon_StiffTime      = 80,
	SortType_Weapon_ConsumeFemto_Close = 81,
	SortType_Weapon_Duarability    = 82,
	SortType_Weapon_Deffence       = 83,
	SortType_Weapon_PhysicsResist  = 84,
	SortType_Weapon_FemtoResist    = 85,
	SortType_Weapon_ShockAbsorptionRate = 86,
	SortType_Weapon_KnockBackControlDirection = 87,
	SortType_Weapon_ExplodeDamage_Missile = 88,
	SortType_Weapon_MaxSpeed       = 89,
	SortType_Weapon_LockonRange_Missile = 90,
	SortType_Weapon_LockOnTargetNum = 91,
	SortType_Weapon_SameTimeShootNum = 92,
	SortType_Weapon_LockOnMaxNum   = 93,
	SortType_Weapon_ActiveHomingDistance = 94,
	SortType_Weapon_TurningDegree  = 95,
	SortType_Weapon_ExplodeRadius_Missile = 96,
	SortType_Weapon_ShootInterval_Missile = 97,
	SortType_Weapon_HomingStartTime = 98,
	SortType_Weapon_InitialSpeed   = 99,
	SortType_Weapon_FunnelBattleRange = 100,
	SortType_Weapon_LifeSeconds    = 101,
	SortType_Weapon_VP             = 102,
	SortType_Weapon_BulletDeffence = 103,
	SortType_Weapon_FunnelMoveSpeed = 104,
	SortType_Weapon_HealVPValue    = 105,
	SortType_Weapon_HealPartsHPValue = 106,
	SortType_Weapon_HealAbnormalStatusRate = 107,
	SortType_Weapon_MaxLayingNum   = 108,
	SortType_Weapon_DetonateTime   = 109,
	SortType_Weapon_ExplodeDamage  = 110,
	SortType_Weapon_AddValueOnAbnormalSpace = 111,
	SortType_Weapon_SequenceRadius = 112,
	SortType_Attach_Id             = 113,
	SortType_Attach_Price          = 114,
	SortType_Attach_Num            = 115,
	SortType_Paint_Default         = 116,
	SortType_Paint_GetDay          = 117,
	SortType_Paint_Decal_Common    = 118,
	SortType_Paint_Decal_Symbol    = 119,
	SortType_Paint_Decal_Shape     = 120,
	SortType_Paint_Decal_Emblem    = 121,
	SortType_NPC_Add               = 122,
	SortType_NPC_Id                = 123,
	SortType_NPC_Request           = 124,
	SortType_Parts_Id              = 125,
	SortType_Weapon_Id             = 126,
	SortType_Weapon_BulletDamage   = 127,
	SortType_Weapon_LaserDamage    = 128,
	SortType_PlayLog_UseCount_Parts = 129,
	SortType_PlayLog_ID            = 130,
	SortType_PlayLog_Enterprise    = 131,
	SortType_PlayLog_HalfDestroyRatio = 132,
	SortType_PlayLog_DestroyRatio  = 133,
	SortType_PlayLog_UseCount_Weapon = 134,
	SortType_PlayLog_HitRatio      = 135,
	SortType_PlayLog_CriticalRatio = 136,
	SortType_PlayLog_ClearCount    = 137,
	SortType_PlayLog_ClearStatus   = 138,
	SortType_PlayLog_ClearTime     = 139,
	SortType_PlayLog_MinDamage     = 140,
	SortType_Parts_NoFunction      = 141,
	SortType_Weapon_NoFunction     = 142,
	SortType_Attach_Start          = 113,
	SortType_Attach_End            = 115,
	SortType_Attach_Max            = 3,
	SortType_Paint_Start           = 116,
	SortType_Paint_End             = 117,
	SortType_Paint_Max             = 2,
	SortType_NPC_Start             = 122,
	SortType_NPC_End               = 124,
	SortType_NPC_Max               = 3,
	SortType_Max                   = 4,
};

enum class ETTLEPauseMenuViewMode : uint8
{
	Mission                        = 0,
	Battle                         = 1,
	RifleRange                     = 2,
	Survival                       = 3,
	TTLEPauseMenuViewMode_MAX      = 4,
};

enum class ETTLEPauseMenuMissionContentes : uint8
{
	Final                          = 0,
	Current                        = 1,
	Added_1                        = 2,
	Added_2                        = 3,
	Added_3                        = 4,
	Failure                        = 5,
	TTLEPauseMenuMissionContentes_MAX = 6,
};

enum class ETTLEPauseMenuRifleRangeConfig_2 : uint8
{
	FullBullet                     = 0,
	GuideVisible                   = 1,
	Max                            = 2,
};

enum class ETTLEPauseMenuRifleRangeItem : uint8
{
	Continue                       = 0,
	Option                         = 1,
	Manual                         = 2,
	Dock                           = 3,
	Config                         = 4,
	Reset                          = 5,
	Exit                           = 6,
	Max                            = 7,
};

enum class ETTLEMissionCallbackType : uint8
{
	HPPercentage                   = 0,
	Callback_Max                   = 1,
	TTLEMissionCallbackType_MAX    = 2,
};

enum class ETTLEOpenMenuMode : uint8
{
	Terminal                       = 0,
	Survival                       = 1,
	Max                            = 2,
};

enum class ETTLEPauseMenuType : uint8
{
	EPauseMenu_Disabled            = 0,
	EPauseMenu_Mission             = 1,
	EPauseMenu_BaseCamp            = 2,
	EPauseMenu_Max                 = 3,
};

enum class ETTLEDebugActionType : uint8
{
	EDebugAction_MissionCompleted  = 0,
	EDebugAction_MissionFailed     = 1,
	EDebugAction_NoDamage          = 2,
	EDebugAction_RecoverFemto      = 3,
	EDebugAction_GetAllParts       = 4,
	EDebugAction_OpenAllMission    = 5,
	EDebugAction_TYPE_MAX          = 6,
	EDebugAction_MAX               = 7,
};

enum class ETTLEInputOptionHoldType : uint8
{
	EOptionHold_On                 = 0,
	EOptionHold_Off                = 1,
	EOptionHold_TYPE_MAX           = 2,
	EOptionHold_MAX                = 3,
};

enum class ETTLEControlType : uint8
{
	EControl_Arsenal               = 0,
	EControl_Human                 = 1,
	EControl_Menu                  = 2,
	EControl_PauseMenu             = 3,
	EControl_LoadingMenu           = 4,
	EControl_Event                 = 5,
	EControl_Debug                 = 6,
	EControl_TYPE_MAX              = 7,
	EControl_MAX                   = 8,
};

enum class ETTLEPlayLogPanelType : uint8
{
	Type_PlayerInfo                = 0,
	Type_RatioComparison           = 1,
	Type_Ranking                   = 2,
	Type_TextLog                   = 3,
	Type_Lab                       = 4,
	Type_Parts                     = 5,
	Type_Develop                   = 6,
	Type_Mission                   = 7,
	Type_MatchLog                  = 8,
	Type_PartsList                 = 9,
	Type_WeaponList                = 10,
	Type_ItemCollection            = 11,
	Type_PartsTextList             = 12,
	Type_WeaponTextList            = 13,
	Type_MAX                       = 14,
};

enum class ETTLEPlayLogParentCategory : uint8
{
	Category_Total                 = 0,
	Category_Mission               = 1,
	Category_Multi                 = 2,
	Category_AssembleDetail        = 3,
	Category_LOOPMAX               = 4,
	Category_OtherPlayer           = 5,
	Category_MAX                   = 6,
};

enum class ETTLEPlayLogCursorDirection : uint8
{
	Dir_None                       = 0,
	Dir_Up                         = 1,
	Dir_Down                       = 2,
	Dir_Left                       = 3,
	Dir_Right                      = 4,
	Dir_MAX                        = 5,
};

enum class ETTLEPlayLogPopUpState : uint8
{
	State_AnimationWait            = 0,
	State_InputParent              = 1,
	State_InputChild               = 2,
	State_MAX                      = 3,
};

enum class ETTLELogChildButtonStatus : uint8
{
	Status_None                    = 0,
	Status_Win                     = 1,
	Status_Lose                    = 2,
	Status_Draw                    = 3,
	Status_Clear                   = 4,
	Status_Complete                = 5,
	Status_Hidden                  = 6,
	Status_IconCollapsed           = 7,
	Status_IconCollapsed_Hidden    = 8,
	Status_MAX                     = 9,
};

enum class ETTLELogChildButtonType : uint8
{
	Type_Boss                      = 0,
	Type_Match                     = 1,
	Type_Mission                   = 2,
	Type_Develop                   = 3,
	Type_Parts                     = 4,
	Type_Weapon                    = 5,
	Type_Skill                     = 6,
	Type_Item                      = 7,
	Type_MAX                       = 8,
};

enum class ETTLEPopUpSEType : uint8
{
	Type_None                      = 0,
	Type_Select                    = 1,
	Type_OK                        = 2,
	Type_Cancel                    = 3,
	Type_Error                     = 4,
	Type_ChangeCategory            = 5,
	Type_Payment                   = 6,
	Type_GetMoney                  = 7,
	Type_Equip                     = 8,
	Type_Scrap                     = 9,
	Type_Page                      = 10,
	Type_Sort                      = 11,
	Type_MAX                       = 12,
};

enum class ETTLEPopUpState : uint8
{
	State_Closed                   = 0,
	State_Opening                  = 1,
	State_Running                  = 2,
	State_Closing                  = 3,
	State_Max                      = 4,
};

enum class ETTLCollisionSourceType : int32
{
	Box                            = 0,
	Max                            = 1,
};

enum class ETTLERaderTargetType : uint8
{
	ERaderTargetType_None          = 0,
	ERaderTargetType_Arsenal       = 1,
	ERaderTargetType_Outer         = 2,
	ERaderTargetType_NormalCharacter = 3,
	ERaderTargetType_Boss          = 4,
	ERaderTargetType_Missile       = 5,
	ERaderTargetType_FieldFemtoItem = 6,
	ERaderTargetType_FieldBulletItem = 7,
	ERaderTargetType_HealObject    = 8,
	ERaderTargetType_HeatSource    = 9,
	ERaderTargetType_FemtoZone     = 10,
	ERaderTargetType_StageObject   = 11,
	ERaderTargetType_TargetDirection = 12,
	ERaderTargetType_GroundCharacter = 13,
	ERaderTargetType_Container     = 14,
	EStatus_TYPE_MAX               = 15,
	TTLERaderTargetType_MAX        = 16,
};

enum class ETTLERegulationCheckStep : uint8
{
	Step_NgParts                   = 0,
	Step_NgAttach                  = 1,
	Step_NgSkill                   = 2,
	Step_CreateRoom                = 3,
	Step_MAX                       = 4,
};

enum class ETTLERegulationType : uint8
{
	Invalid                        = 0,
	RankMatch                      = 1,
	TagMatch                       = 2,
	SelectedRegulation             = 3,
	Current                        = 4,
	MAX                            = 5,
};

enum class ETTLERifleRangeState : uint8
{
	Opening                        = 0,
	Playable                       = 1,
	OpeningDock                    = 2,
	Dock                           = 3,
	WaitRestart                    = 4,
	TTLERifleRangeState_MAX        = 5,
};

enum class ETTLEDockTrialfieldState : uint8
{
	Trialfield_Opening             = 0,
	Trialfield_Playing             = 1,
	Trialfield_DockOpen            = 2,
	Trialfield_UsingDock           = 3,
	Trialfield_DockClose           = 4,
	Trialfield_MAX                 = 5,
};

enum class EUTTLRoomInfoHUDViewMode : uint8
{
	Mode_Coop_Room_HUD             = 0,
	Mode_Battle_Room_HUD           = 1,
	Mode_Team_Room_HUD             = 2,
	Mode_2on2_Room_HUD             = 3,
	Mode_Custom2on2_Room_HUD       = 4,
	Mode_MAX                       = 5,
};

enum class ETTLECharaEditFlagState : uint8
{
	None                           = 0,
	Old                            = 1,
	New                            = 2,
	TTLECharaEditFlagState_MAX     = 3,
};

enum class ETTLESortMenuType : uint8
{
	None                           = 0,
	FriendAI                       = 1,
	Parts_Head                     = 2,
	Parts_Head_Shop                = 3,
	Parts_Body                     = 4,
	Parts_Body_Shop                = 5,
	Parts_Inside                   = 6,
	Parts_Inside_Shop              = 7,
	Parts_Arms                     = 8,
	Parts_Arms_Shop                = 9,
	Parts_Legs                     = 10,
	Parts_Legs_Shop                = 11,
	Weapon_Arm_All                 = 12,
	Weapon_Arm_All_Shop            = 13,
	Weapon_Arm_Bullet              = 14,
	Weapon_Arm_Bullet_Shop         = 15,
	Weapon_Arm_Laser               = 16,
	Weapon_Arm_Laser_Shop          = 17,
	Weapon_Arm_CloseRange          = 18,
	Weapon_Arm_CloseRange_Shop     = 19,
	Weapon_Arm_Special             = 20,
	Weapon_Arm_Special_Shop        = 21,
	Weapon_Arm_Shield              = 22,
	Weapon_Arm_Shield_Shop         = 23,
	Weapon_Shoulder_All            = 24,
	Weapon_Shoulder_All_Shop       = 25,
	Weapon_Shoulder_Missile        = 26,
	Weapon_Shoulder_Missile_Shop   = 27,
	Weapon_Shoulder_Cannon         = 28,
	Weapon_Shoulder_Cannon_Shop    = 29,
	Weapon_Shoulder_Railgun        = 30,
	Weapon_Shoulder_Railgun_Shop   = 31,
	Weapon_Shoulder_Blitz          = 32,
	Weapon_Shoulder_Blitz_Shop     = 33,
	Weapon_Shoulder_Support        = 34,
	Weapon_Shoulder_Support_Shop   = 35,
	Weapon_Option_All              = 36,
	Weapon_Option_All_Shop         = 37,
	Weapon_Option_Grenade          = 38,
	Weapon_Option_Grenade_Shop     = 39,
	Weapon_Option_Mine             = 40,
	Weapon_Option_Mine_Shop        = 41,
	Weapon_Option_Support          = 42,
	Weapon_Option_Support_Shop     = 43,
	Attachment                     = 44,
	Surface                        = 45,
	Decal                          = 46,
	ArsenalSkin                    = 47,
	Playlog_Mission                = 48,
	Playlog_Parts                  = 49,
	Playlog_Weapon                 = 50,
	Max                            = 51,
};

enum class ETTLEOuterEmoteIndex : uint8
{
	OuterEmote_1                   = 0,
	OuterEmote_2                   = 1,
	OuterEmote_3                   = 2,
	OuterEmote_4                   = 3,
	OuterEmote_Max                 = 4,
};

enum class ETTLELineChatState : uint8
{
	Closed                         = 0,
	ANew                           = 1,
	Reading                        = 2,
	Complete                       = 3,
	TTLELineChatState_MAX          = 4,
};

enum class ETTLEDecorationFlagState : uint8
{
	State_None                     = 0,
	State_New                      = 1,
	State_Have                     = 2,
	State_MAX                      = 3,
};

enum class ETTLENewPartsBitFlags : uint8
{
	BitFlag_ShopNewState           = 0,
	BitFlag_PictureBookNewState    = 1,
	BitFlag_MAX                    = 2,
};

enum class ETTLEFacilityState : uint8
{
	State_Opened                   = 0,
	State_Closed                   = 1,
	State_Unopened                 = 2,
	State_MAX                      = 3,
};

enum class ETTLEMainMenuFacilityType : uint8
{
	Facility_Mission               = 0,
	Facility_Dock                  = 1,
	Facility_Shop                  = 2,
	Facility_Factory               = 3,
	Facility_IceCreamParlor        = 4,
	Facility_Lab                   = 5,
	Facility_Online                = 6,
	Facility_System                = 7,
	Facility_SecretDevelop         = 8,
	Facility_LineChat              = 9,
	Facility_Online_Survival       = 10,
	Facility_MAX                   = 11,
};

enum class ETTLOptionHUDCustomType : uint8
{
	MiniMap                        = 0,
	Gauge                          = 1,
	TmpGauge                       = 2,
	FemtoGauge                     = 3,
	HeadParts                      = 4,
	RightParts                     = 5,
	BodyParts                      = 6,
	LeftParts                      = 7,
	LegsParts                      = 8,
	RightWeapon                    = 9,
	LeftWeapon                     = 10,
	ShoulderWeapon                 = 11,
	OptionWeapon                   = 12,
	Time                           = 13,
	Chat                           = 14,
	FriendInfo                     = 15,
	OuterMiniMap                   = 16,
	OuterGauge                     = 17,
	OuterWeaponInfo                = 18,
	OuterArsenalInfo               = 19,
	OuterTime                      = 20,
	OuterChat                      = 21,
	OuterFriendInfo                = 22,
	CrossHair                      = 23,
	Sight                          = 24,
	HitDisp                        = 25,
	AREA_ALERT                     = 26,
	VP_30P                         = 27,
	TMP_ALERT                      = 28,
	OVERHEAT                       = 29,
	HEAT_SOURCE                    = 30,
	NO_AMMO                        = 31,
	FEMTO_ZONE                     = 32,
	BAD_STATUS                     = 33,
	CANT_THROW                     = 34,
	GROUND                         = 35,
	FRIENDLY_FIRE                  = 36,
	OuterAreaAlert                 = 37,
	OuterNoAmmo                    = 38,
	OuterTMPAlert                  = 39,
	OuterFemtoZone                 = 40,
	OuterFriendlyFire              = 41,
	OuterSelfDestruct              = 42,
	ParticleArmyA                  = 43,
	ParticleArmyB                  = 44,
	ParticleArmyC                  = 45,
	TargetCount                    = 46,
	Talk                           = 47,
	OuterTalk                      = 48,
	OuterTargetCount               = 49,
	OuterStaminaOver               = 50,
	Pad00000                       = 51,
	Pad00001                       = 52,
	Pad00002                       = 53,
	Max                            = 54,
};

enum class ETTLChatMessageMode : uint8
{
	Chat                           = 0,
	Emote                          = 1,
	Max                            = 2,
};

enum class ETTLSaveLoadState : uint8
{
	Init                           = 0,
	None                           = 1,
	ManualSave                     = 2,
	AutoSave                       = 3,
	SaveAnimation                  = 4,
	Out                            = 5,
	End                            = 6,
	ETTLSaveLoadState_MAX          = 7,
};

enum class ETTLFPSMode : uint8
{
	FPS30                          = 0,
	FPS60                          = 1,
	FPS120                         = 2,
	FPS144                         = 3,
	FPS200                         = 4,
	FPS240                         = 5,
	Max                            = 6,
};

enum class ETTLEScrollListInputState : uint8
{
	NoInput                        = 0,
	Idle                           = 1,
	BusyButtonCreating             = 2,
	MAX                            = 3,
};

enum class ETTLESecretDevelopSceneArrowIndex : uint8
{
	Index_StartIce                 = 0,
	Index_SecretDevelop            = 1,
	TopMenuButton_Max              = 2,
	TTLESecretDevelopSceneArrowIndex_MAX = 3,
};

enum class ETTLESecretDevelopPopupChoice_StartDevelop : uint8
{
	Choice_Money                   = 0,
	Choice_Token                   = 1,
	Choice_Cancel                  = 2,
	Choice_Max                     = 3,
};

enum class ETTLSequencerEventWidgetMode : uint8
{
	Mode_None                      = 0,
	Mode_In                        = 1,
	Mode_Loop                      = 2,
	Mode_Out                       = 3,
	Mode_Max                       = 4,
};

enum class ETTLEShopScenePopupState : uint8
{
	Popup_Ok                       = 0,
	Popup_CheckPurchase            = 1,
	Popup_CheckEquip               = 2,
	Popup_SelectEquipArea          = 3,
	Popup_CheckGunArm              = 4,
	Popup_CheckSale                = 5,
	Popup_CheckDeleteClass         = 6,
	Popup_CheckCollectiveSale      = 7,
	Popup_CheckEndCollectiveSale   = 8,
	Popup_InputAttachmentNum       = 9,
	Popup_CheckAttachmentSale      = 10,
	Popup_MAX                      = 11,
};

enum class ETTLEShopScene2TopMenuIndex : uint8
{
	TopMenu_Purchase_Parts         = 0,
	TopMenu_Purchase_Weapon        = 1,
	TopMenu_Sale_Parts             = 2,
	TopMenu_Sale_Weapon            = 3,
	TopMenu_Sale_PartsAttachment   = 4,
	TopMenu_Sale_WeaponAttachment  = 5,
	TopMenu_Max                    = 6,
};

enum class ETTLEShopScene2State : uint8
{
	SceneState_Opening             = 0,
	SceneState_TopMenu             = 1,
	SceneState_Purchase            = 2,
	SceneState_Sale                = 3,
	SceneState_CollectiveSale      = 4,
	SceneState_SaleAttachment      = 5,
	SceneState_WaitAnim            = 6,
	SceneState_Closing             = 7,
	SceneState_MAX                 = 8,
};

enum class ETTLShoulderCannonStatus : uint8
{
	None                           = 0,
	Wait                           = 1,
	Preparation                    = 2,
	StopShot                       = 3,
	Shoot                          = 4,
	Stiff                          = 5,
	End                            = 6,
	UnFire                         = 7,
	Max                            = 8,
};

enum class ETTLFunnelAttachState : uint8
{
	FunnelAttachState_IsAttached   = 0,
	FunnelAttachState_WarpAttached = 1,
	FunnelAttachState_MoveFlying   = 2,
	FunnelAttachState_Max          = 3,
};

enum class ETTLSmokeVFX : uint8
{
	White                          = 0,
	Black                          = 1,
	Other_01                       = 2,
	Other_02                       = 3,
	Other_03                       = 4,
	Other_04                       = 5,
	Other_05                       = 6,
	Other_06                       = 7,
	Other_07                       = 8,
	Other_08                       = 9,
	Other_09                       = 10,
	Other_10                       = 11,
	Max                            = 12,
};

enum class ETTLEStaffRollCommandType : uint8
{
	StringList                     = 0,
	StringPair                     = 1,
	ImageList                      = 2,
	Image                          = 3,
	DecorationImage                = 4,
	ChangeDisplayMode              = 5,
	Wait                           = 6,
	ChangeSpeed                    = 7,
	SlideString                    = 8,
	ChangeStringAppearTime         = 9,
	ClearPage                      = 10,
	State_Max                      = 11,
	TTLEStaffRollCommandType_MAX   = 12,
};

enum class ETTLEStaffRollCommandState : uint8
{
	Default                        = 0,
	SlideFadeInRight               = 1,
	SlideWaitRight                 = 2,
	SlideFadeOutRight              = 3,
	SlideFadeInLeft                = 4,
	SlideWaitLeft                  = 5,
	SlideFadeOutLeft               = 6,
	State_Max                      = 7,
	TTLEStaffRollCommandState_MAX  = 8,
};

enum class ETTLEStaffRollOperateState : uint8
{
	Default                        = 0,
	ShowGuide                      = 1,
	ReleaseOnce                    = 2,
	SpeedUp                        = 3,
	State_Max                      = 4,
	TTLEStaffRollOperateState_MAX  = 5,
};

enum class ETTLEStaffRollSceneState : uint8
{
	InFade                         = 0,
	InAnim                         = 1,
	Normal                         = 2,
	EndAnim                        = 3,
	EndMessage                     = 4,
	EndMessageAutoInput            = 5,
	OutFade                        = 6,
	State_Max                      = 7,
	TTLEStaffRollSceneState_MAX    = 8,
};

enum class ETTLESubMultiCampNoticeType : uint8
{
	Type_GoToMissionCountDown      = 0,
	Type_Ready2vs2CountDown        = 1,
	Type_MAX                       = 2,
};

enum class ETTLSurvivalDungeonMapLevelSpecialRoomType : uint8
{
	None                           = 0,
	ContinuousRoom                 = 1,
	GroupRoom                      = 2,
	ETTLSurvivalDungeonMapLevelSpecialRoomType_MAX = 3,
};

enum class ETTLSurvivalDungeonMapLevelType : uint8
{
	Road                           = 0,
	StartRoom                      = 1,
	GoalRoom                       = 2,
	ETTLSurvivalDungeonMapLevelType_MAX = 3,
};

enum class ETTLSurvivalDungeonDirection : uint8
{
	North                          = 0,
	East                           = 1,
	South                          = 2,
	West                           = 3,
	Max                            = 4,
};

enum class ETTLSurvivalDungeonMapRoomGateType : uint8
{
	In                             = 0,
	Out                            = 1,
	Close                          = 2,
	ETTLSurvivalDungeonMapRoomGateType_MAX = 3,
};

enum class ETTLSurvivalDungeonMapRoomType : uint8
{
	StartRoom                      = 0,
	Road                           = 1,
	SubRoad                        = 2,
	DeadEnd                        = 3,
	GoalRoom                       = 4,
	ETTLSurvivalDungeonMapRoomType_MAX = 5,
};

enum class ETTLCannonSyncFlags : uint8
{
	LookAt                         = 0,
	AllShoot                       = 1,
	ETTLCannonSyncFlags_MAX        = 2,
};

enum class ETTLESaveLoadResult : uint8
{
	SaveLoadResult_None            = 0,
	SaveLoadResult_SaveSuccess     = 1,
	SaveLoadResult_SaveFailed      = 2,
	SaveLoadResult_LoadSuccess     = 3,
	SaveLoadResult_LoadFailed      = 4,
	SaveLoadResult_MAX             = 5,
};

enum class ETTLESaveLoadDialog : uint8
{
	SaveLoadDialog_Save            = 0,
	SaveLoadDialog_Load            = 1,
	SaveLoadDialog_Load_Auto       = 2,
	SaveLoadDialog_NewSave         = 6,
	SaveLoadDialog_MAX             = 7,
};

enum class ETTLESaveLoadState : uint8
{
	SaveLoadState_SaveLoad         = 0,
	SaveLoadState_Load             = 1,
	SaveLoadState_Save             = 2,
	SaveLoadState_MAX              = 3,
};

enum class ETTLESystemSceneTopMenuButtons_Online : uint8
{
	Option                         = 0,
	PlayLog                        = 1,
	PlayerInfo                     = 2,
	ChatSetting                    = 3,
	Max                            = 4,
};

enum class ETTLESystemSceneTopMenuButtons : uint8
{
	TopMenuButton_PlayerProfile    = 0,
	TopMenuButton_Option           = 1,
	TopMenuButton_SaveLoad         = 2,
	TopMenuButton_PlayLog          = 3,
	TopMenuButton_ReturnToTitle    = 4,
	TopMenuButton_NameInput        = 5,
	TopMenuButton_ReturnToBaseCamp = 6,
	TopMenuButton_Max              = 7,
};

enum class ETTLESystemScene_Situation : uint8
{
	OffLine                        = 0,
	ONLine_Coop                    = 1,
	Max                            = 2,
};

enum class ETTLESystemSceneState : uint8
{
	SceneState_Opening             = 0,
	SceneState_TopMenu             = 1,
	SceneState_Closing             = 2,
	SceneState_MAX                 = 3,
};

enum class ETTLTalkParamMode : uint8
{
	Mode_Using                     = 0,
	Mode_Waiting                   = 1,
	Mode_Animating                 = 2,
	Mode_Unused                    = 3,
	Mode_Max                       = 4,
};

enum class ETTLTalkDemoStartMode : uint8
{
	Mode_None                      = 0,
	Mode_Start                     = 1,
	Mode_StartAnimWait             = 2,
	Mode_Wait                      = 3,
	Mode_Max                       = 4,
};

enum class ETTLBriefingStartMode : uint8
{
	Mode_None                      = 0,
	Mode_Start                     = 1,
	Mode_StartAnimWait             = 2,
	Mode_ValuesDisplay             = 3,
	Mode_TitleDisplay              = 4,
	Mode_Wait                      = 5,
	Mode_End                       = 6,
	Mode_Max                       = 7,
};

enum class ETTLTalkMode : uint8
{
	Mode_None                      = 0,
	Mode_Check                     = 1,
	Mode_Wait                      = 2,
	Mode_WaitPreMessage            = 3,
	Mode_PreMessage                = 4,
	Mode_PreMessageWait            = 5,
	Mode_MessageDisplay            = 6,
	Mode_MessageWait               = 7,
	Mode_MessageEnd                = 8,
	Mode_SelectPopUpOpen           = 9,
	Mode_SelectPopUpWait           = 10,
	Mode_EndInitializing           = 11,
	Mode_EndInitializing2          = 12,
	Mode_EndWaiting                = 13,
	Mode_End                       = 14,
	Mode_Max                       = 15,
};

enum class ETTLEDlcNotice_State : uint8
{
	State_None                     = 0,
	State_Dialog                   = 1,
	State_List                     = 2,
	State_End                      = 3,
	State_MAX                      = 4,
};

enum class ETTLETerminalTopSceneState : uint8
{
	Input_Animation                = 0,
	Input_MainItem                 = 1,
	Input_SubItem                  = 2,
	Input_NotificationArea         = 3,
	Input_DlcNotice                = 4,
	Input_MAX                      = 5,
};

enum class ETTLETestColorPickerSceneState : uint8
{
	State_None                     = 0,
	State_Select                   = 1,
	State_End                      = 2,
	State_MAX                      = 3,
};

enum class ETTLEWithBGShootingMode : uint8
{
	None                           = 0,
	Shot1                          = 1,
	Shot2                          = 2,
	Reset                          = 3,
	State_Max                      = 4,
	TTLEWithBGShootingMode_MAX     = 5,
};

enum class ETTLEContinuousPlayMode : uint8
{
	None                           = 0,
	Select                         = 1,
	Play                           = 2,
	State_Max                      = 3,
	TTLEContinuousPlayMode_MAX     = 4,
};

enum class ETTLECameraOperationMode : uint8
{
	Default                        = 0,
	FreeMove                       = 1,
	OuterRollInFreeMove            = 2,
	State_Max                      = 3,
	TTLECameraOperationMode_MAX    = 4,
};

enum class ETTLETestModelShootActorType : uint8
{
	Type_None                      = 0,
	Type_Arsenal                   = 1,
	Type_Outer                     = 2,
	Type_Weapon                    = 3,
	Type_Enemy                     = 4,
	Type_EnemyMesh                 = 5,
	Type_Other                     = 6,
	Type_MAX                       = 7,
};

enum class ETTLTestSerifShowTextType : uint8
{
	TextType_Serif                 = 0,
	TextType_TextID                = 1,
	TextType_VoiceID               = 2,
	TextType_MAX                   = 3,
};

enum class ETTLTestSerifCategory : uint8
{
	SerifCategory_Event            = 0,
	SerifCategory_Demo             = 1,
	SerifCategory_2DTalk           = 2,
	SerifCategory_NPCCom           = 3,
	SerifCategory_Mission          = 4,
	SerifCategory_Console          = 5,
	SerifCategory_MAX              = 6,
};

enum class ETTLTestSerifState : uint8
{
	State_None                     = 0,
	State_LeftSelect               = 1,
	State_RightSelect              = 2,
	State_SerifList                = 3,
	State_SerifCheck               = 4,
	State_MAX                      = 5,
};

enum class ETTLTransportStateType : uint8
{
	State_None                     = 0,
	State_Accel                    = 1,
	State_Move                     = 2,
	State_Dead                     = 3,
	State_Dead_NonVisible          = 4,
	MAX                            = 5,
};

enum class ETTLTransportVFXType : uint8
{
	Ground                         = 0,
	MAX                            = 1,
};

enum class ETTLTransportStartType : uint8
{
	StopToStart                    = 0,
	Moving                         = 1,
	MAX                            = 2,
};

enum class ETTLECutoffPlayingState : uint8
{
	Idle                           = 0,
	WaitToStart                    = 1,
	Cutoff_Out                     = 2,
	Cutoff_In                      = 3,
	TTLECutoffPlayingState_MAX     = 4,
};

enum class ETTLEAssemblePreviewTarget : uint8
{
	Target_Arsenal                 = 0,
	Target_Weapon                  = 1,
	Target_MAX                     = 2,
};

enum class ETTLEUpdateAssembleCheckResult : uint8
{
	Result_Success                 = 0,
	Result_Check_GunArm            = 1,
	Result_Failure_Equipped        = 2,
	Result_Failure_EquippedAnother = 3,
	Result_MAX                     = 4,
};

enum class ETTLEParamCompareDisplayType : uint8
{
	Both                           = 0,
	BeforeOnly                     = 1,
	AfterOnly                      = 2,
	TTLEParamCompareDisplayType_MAX = 3,
};

enum class ETTLEParamCompareMode : uint8
{
	Mode_None                      = 0,
	Mode_Smaller                   = 1,
	Mode_Larger                    = 2,
	Mode_MAX                       = 3,
};

enum class ETTLEColorPickerState : uint8
{
	State_None                     = 0,
	State_Select                   = 1,
	State_HS_Select                = 2,
	State_V_Select                 = 3,
	State_MAX                      = 4,
};

enum class ETTLUIHomPartsBtn01BtnType : uint8
{
	Type_Left                      = 0,
	Type_Right                     = 1,
	Type_Max                       = 2,
};

enum class ETTLUIButtonIconType : uint8
{
	Type_A_Line                    = 0,
	Type_B_Line                    = 1,
	Type_X_Line                    = 2,
	Type_Y_Line                    = 3,
	Type_L_Line                    = 4,
	Type_R_Line                    = 5,
	Type_ZL_Line                   = 6,
	Type_ZR_Line                   = 7,
	Type_SL_Line                   = 8,
	Type_SR_Line                   = 9,
	Type_Up_Key_Line               = 10,
	Type_Down_Key_Line             = 11,
	Type_Right_Key_Line            = 12,
	Type_Left_Key_Line             = 13,
	Type_LeftAndRight_Key_Line     = 14,
	Type_UpAndDown_Key_Line        = 15,
	Type_All_Direction_Key_Line    = 16,
	Type_All_Direction_Button_Paint = 17,
	Type_All_Direction_Button_Line = 18,
	Type_Up_Direction_Button_Line  = 19,
	Type_Down_Direction_Button_Line = 20,
	Type_Left_Direction_Button_Line = 21,
	Type_Right_Direction_Button_Line = 22,
	Type_Up_Button_Line            = 23,
	Type_Down_Button_Line          = 24,
	Type_Left_Button_Line          = 25,
	Type_Right_Button_Line         = 26,
	Type_Joy_Plus_Line             = 27,
	Type_Joy_Minus_Line            = 28,
	Type_Plus_Line                 = 29,
	Type_Minus_Line                = 30,
	Type_Stick_Line                = 31,
	Type_L_Stick_Line              = 32,
	Type_R_Stick_Line              = 33,
	Type_Stick_Push_Line           = 34,
	Type_L_Stick_Push_Line         = 35,
	Type_R_Stick_Push_Line         = 36,
	Type_Stick_RightRotation_Line  = 37,
	Type_L_Stick_RightRotation_Line = 38,
	Type_R_Stick_RightRotation_Line = 39,
	Type_Stick_LeftRotation_Line   = 40,
	Type_L_Stick_LeftRotation_Line = 41,
	Type_R_Stick_LeftRotation_Line = 42,
	Type_Home                      = 43,
	Type_Capture                   = 44,
	Type_Free_Fn1                  = 45,
	Type_Free_Fn2                  = 46,
	Type_Free_002                  = 47,
	Type_Free_003                  = 48,
	Type_Free_004                  = 49,
	Type_Free_005                  = 50,
	Type_Free_006                  = 51,
	Type_Free_007                  = 52,
	Type_Free_008                  = 53,
	Type_Free_009                  = 54,
	Type_Free_010                  = 55,
	Type_Free_011                  = 56,
	Type_Free_012                  = 57,
	Type_Free_013                  = 58,
	Type_Free_014                  = 59,
	Type_Free_015                  = 60,
	Type_Free_016                  = 61,
	Type_Free_017                  = 62,
	Type_INVALID                   = 63,
	Type_MAX                       = 64,
};

enum class ETTLEMissionGoalIconType : uint8
{
	Hidden                         = 0,
	NoMark                         = 1,
	Checkmark                      = 2,
	MainGoal                       = 3,
	MainGoalCleared                = 4,
	SubGoal                        = 5,
	SubGoalCleared                 = 6,
	Failure                        = 7,
	TTLEMissionGoalIconType_MAX    = 8,
};

enum class ETTLEEmptyTextMode : uint8
{
	None                           = 0,
	Empty                          = 1,
	Unknown                        = 2,
	Hyphen                         = 3,
	Zero                           = 4,
	Collapsed                      = 5,
	TTLEEmptyTextMode_MAX          = 6,
};

enum class ETTLEKeyAssignArea : uint8
{
	KA_00                          = 0,
	KA_01                          = 1,
	KA_02                          = 2,
	KA_03                          = 3,
	KA_MAX                         = 4,
};

enum class ETTLELineChatGetScrollOffsetState : uint8
{
	Default                        = 0,
	GetWait                        = 1,
	GetOffset                      = 2,
	State_Max                      = 3,
	TTLELineChatGetScrollOffsetState_MAX = 4,
};

enum class EUTTLUIOuterCharaGazeCameraType : uint8
{
	CamType_Overall                = 0,
	CamType_Overall2               = 1,
	CamType_Face                   = 2,
	CamType_Hair                   = 3,
	CamType_Max                    = 4,
};

enum class EUTTLUIOuterCharaSpawnType : uint8
{
	All                            = 0,
	CharaEdit                      = 1,
	SkillTree                      = 2,
	Ranking                        = 3,
	TypeMax                        = 4,
	UTTLUIOuterCharaSpawnType_MAX  = 5,
};

enum class ETTLUIPageAnimation : uint8
{
	MoveLeft                       = 0,
	MoveRight                      = 1,
	Max                            = 2,
};

enum class ETTLEPaintMenuInputAction : uint8
{
	Action_None                    = 0,
	Action_Decide                  = 1,
	Action_Decide_TopMenu          = 2,
	Action_Decide_Surface          = 3,
	Action_Decide_StartColorSelect = 4,
	Action_Decide_StartColorPickerSelect = 5,
	Action_Decide_Color            = 6,
	Action_Decide_StartDecalSelect = 7,
	Action_Decide_Decal            = 8,
	Action_Decide_StartEditDecal   = 9,
	Action_Decide_StartSelectDecalColor = 10,
	Action_Decide_RemoveDecal      = 11,
	Action_Decide_EditDecal        = 12,
	Action_Decide_ArsenalSkin      = 13,
	Action_Decide_Max              = 14,
	Action_Cancel                  = 15,
	Action_Cancel_EndColor         = 16,
	Action_Cancel_EndColorPicker   = 17,
	Action_Cancel_EndDecal         = 18,
	Action_Cancel_EndEditDecal     = 19,
	Action_Cancel_EndMenu          = 20,
	Action_Cancel_EndArsenalSkinMenu = 21,
	Action_Cancel_Max              = 22,
	Action_Default_Surface         = 23,
	Action_Default_Color           = 24,
	Action_Default_Decal           = 25,
	Action_Default_Max             = 26,
	Action_UpdateDecal             = 27,
	Action_ResetColor              = 28,
	Action_ResetDecal              = 29,
	Action_DecalPaletteChange      = 30,
	Action_ChangeEditParts         = 31,
	Action_Max                     = 32,
};

enum class ETTLEPaintSubCategory : uint8
{
	Category_None                  = 0,
	Category_Color1                = 1,
	Category_Color2                = 2,
	Category_Color3                = 3,
	Category_Color_Max             = 4,
	Category_DecalSelect           = 5,
	Category_DecalEdit             = 6,
	Category_DecalColor            = 7,
	Category_Decal_Max             = 8,
	Category_MAX                   = 9,
};

enum class ETTLEPaintMainCategory : uint8
{
	Category_Camouflage            = 0,
	Category_SurfaceMAX            = 1,
	Category_PartsAll              = 2,
	Category_Head                  = 3,
	Category_Body                  = 4,
	Category_RightArm              = 5,
	Category_LeftArm               = 6,
	Category_Legs                  = 7,
	Category_PartsMAX              = 8,
	Category_MAX                   = 9,
};

enum class ETTLEPaintTopCategory : uint8
{
	TopCategory_Surface            = 0,
	TopCategory_Color              = 1,
	TopCategory_Decal              = 2,
	TopCategory_SkinSet            = 3,
	Category_Max                   = 4,
	TTLEPaintTopCategory_MAX       = 5,
};

enum class ETTLEPaintMenuComponentState : uint8
{
	State_None                     = 0,
	State_SelectMainCategory       = 1,
	State_SelectSubCategory        = 2,
	State_SelectSurface            = 3,
	State_SelectColor              = 4,
	State_SelectColorPicker        = 5,
	State_ControlColorPicker       = 6,
	State_SelectDecal              = 7,
	State_EditDecal                = 8,
	State_SelectDecalColor         = 9,
	State_SelectDecalColorPicker   = 10,
	State_ControlDecalColorPicker  = 11,
	State_SelectDecalAlpha         = 12,
	State_SelectArsenalSkin        = 13,
	State_Max                      = 14,
};

enum class ETTLRankingArrowState : uint8
{
	UP_ON_DOWN_ON                  = 0,
	UP_ON_DOWN_OFF                 = 1,
	UP_OFF_DOWN_ON                 = 2,
	UP_OFF_DOWN_OFF                = 3,
	UP_MAX                         = 4,
};

enum class ETTLRankingFilter : uint8
{
	Filter_Total                   = 0,
	Tab_Max                        = 1,
	ETTLRankingFilter_MAX          = 2,
};

enum class ETTLRankingTab : uint8
{
	Tab_Global                     = 0,
	Tab_Friend                     = 1,
	Tab_Max                        = 2,
};

enum class ETTLRankingViewMode : uint8
{
	Mode_1to5                      = 0,
	Mode_6to10                     = 1,
	Mode_11toOther                 = 2,
	Mode_MAX                       = 3,
};

enum class ETTLRankingListMode : uint8
{
	TopList                        = 0,
	NearList                       = 1,
	ETTLRankingListMode_MAX        = 2,
};

enum class ETTLUIResultItemTextColor : uint8
{
	White                          = 0,
	Red                            = 1,
	Blue                           = 2,
	Yellow                         = 3,
	Max                            = 4,
};

enum class ETTLUIResultPartsItemCategoryKind : uint8
{
	FlagItem                       = 0,
	Parts                          = 1,
	Weapon                         = 2,
	Attachment                     = 3,
	Paint                          = 4,
	Title                          = 5,
	Max                            = 6,
};

enum class ETTLEDockPreviewBGType : uint8
{
	BG_Red                         = 0,
	BG_Blue                        = 1,
	BG_TexOrMat                    = 2,
	BG_MAX                         = 3,
};

enum class ETTLEPaintTextureCategory : uint8
{
	Category_None                  = 0,
	Category_Common                = 1,
	Category_Symbol                = 2,
	Category_Shape                 = 3,
	Category_Emblem                = 4,
	Category_MAX                   = 5,
};

enum class ETTLETopMenuComponentState : uint8
{
	State_None                     = 0,
	State_OpenMain                 = 1,
	State_OpenSub                  = 2,
	State_MAX                      = 3,
};

enum class ETTLWeaponMotionType : uint8
{
	MotionType_None                = 0,
	MotionType_Left                = 1,
	MotionType_Right               = 2,
	MotionType_All                 = 3,
	MotionType_Repelled            = 4,
	MotionType_Max                 = 5,
};

enum class ETTLWeaponStates : uint8
{
	Normal                         = 0,
	AbsorbTractor                  = 1,
	ETTLWeaponStates_MAX           = 2,
};

enum class ETTLEBulletCondition : uint8
{
	Good                           = 0,
	Normal                         = 1,
	Warning                        = 2,
	Bad                            = 3,
	Max                            = 4,
};

enum class ETTLCloseRangeWeaponDamageReactionType : uint8
{
	WeaponDamageReaction_None      = 0,
	WeaponDamageReaction_ForceReactionR = 1,
	WeaponDamageReaction_ForceReactionL = 2,
	WeaponDamageReaction_SkipReaction = 3,
	WeaponDamageReaction_MAX       = 4,
};

enum class ETTLWreckWeaponMotionType : uint8
{
	WreckWaitType_Gun              = 0,
	WreckWaitType_Sword            = 1,
	WreckWaitType_Shield           = 2,
	WreckWaitType_Max              = 3,
};

enum class ETTLBaseCampWaitMotionType : uint8
{
	WaitType_None                  = 0,
	WaitType_Long                  = 1,
	WaitType_Short                 = 2,
	WaitType_Proximity             = 3,
	WaitType_Shield                = 4,
	MAX                            = 5,
};

enum class ETTLWeaponDamageAttribute : uint8
{
	Damge_None                     = 0,
	Damage_Physic                  = 1,
	Damage_Laser                   = 2,
	Damage_Max                     = 3,
	ETTLWeaponDamageAttribute_MAX  = 4,
};

enum class ETTLCloseRangeWeaponType : uint8
{
	Blade                          = 0,
	Tachi                          = 1,
	Mace                           = 2,
	LaserBlade                     = 3,
	Caught                         = 4,
	Punch                          = 5,
	MAX                            = 6,
};

enum class ETTLEWeaponCategory : uint8
{
	WeaponCategory_None            = 0,
	WeaponCategory_000             = 1,
	WeaponCategory_001             = 2,
	WeaponCategory_002             = 3,
	WeaponCategory_003             = 4,
	WeaponCategory_004             = 5,
	WeaponCategory_005             = 6,
	WeaponCategory_006             = 7,
	WeaponCategory_007             = 8,
	WeaponCategory_010             = 9,
	WeaponCategory_011             = 10,
	WeaponCategory_018             = 11,
	WeaponCategory_012             = 12,
	WeaponCategory_008             = 13,
	WeaponCategory_035             = 14,
	WeaponCategory_036             = 15,
	WeaponCategory_009             = 16,
	WeaponCategory_014             = 17,
	WeaponCategory_015             = 18,
	WeaponCategory_016             = 19,
	WeaponCategory_019             = 20,
	WeaponCategory_017             = 21,
	WeaponCategory_021             = 22,
	WeaponCategory_034             = 23,
	WeaponCategory_024             = 24,
	WeaponCategory_030             = 25,
	WeaponCategory_031             = 26,
	WeaponCategory_032             = 27,
	WeaponCategory_033             = 28,
	WeaponCategory_020             = 29,
	WeaponCategory_022             = 30,
	WeaponCategory_023             = 31,
	WeaponCategory_025             = 32,
	WeaponCategory_026             = 33,
	WeaponCategory_027             = 34,
	WeaponCategory_028             = 35,
	WeaponCategory_029             = 36,
	WeaponCategory_037             = 37,
	WeaponCategory_013             = 38,
	WewponCategory_MAX             = 39,
	TTLEWeaponCategory_MAX         = 40,
};

enum class ETTLCloseRangeAttackMotionType : uint8
{
	Normal                         = 0,
	Combo                          = 1,
	MAX                            = 2,
};

enum class ETTLWeaponType : uint8
{
	WPNTYPE_AssultRifle            = 0,
	WPNTYPE_MachineGun             = 1,
	WPNTYPE_SniperRifle            = 2,
	WPNTYPE_ShotGun                = 3,
	WPNTYPE_HandGun                = 4,
	WPNTYPE_Bazooka                = 5,
	WPNTYPE_AcidGun                = 6,
	WPNTYPE_FemtoLaser             = 7,
	WPNTYPE_ChargeLaser            = 8,
	WPNTYPE_LaserGun               = 9,
	WPNTYPE_ChargeLaserGun         = 10,
	WPNTYPE_FlameThrower           = 11,
	WPNTYPE_ArkGun                 = 12,
	WPNTYPE_GravityGun             = 13,
	WPNTYPE_Sword                  = 14,
	WPNTYPE_WeaponShield           = 15,
	WPNTYPE_MisslePot              = 16,
	WPNTYPE_ShoulderCannon         = 17,
	WPNTYPE_LaserCannon            = 18,
	WPNTYPE_ChargeLaserCannon      = 19,
	WPNTYPE_RailGun                = 20,
	WPNTYPE_HealCannon             = 21,
	WPNTYPE_FunnelPot              = 22,
	WPNTYPE_DescentBooster         = 23,
	WPNTYPE_Grenade                = 24,
	WPNTYPE_Flare                  = 25,
	WPNTYPE_AdditionalMagazine     = 26,
	WPNTYPE_Minelayer              = 27,
	WPNTYPE_RadarJamming           = 28,
	WPNTYPE_PropellantTank         = 29,
	WPNTYPE_RapidCoolingDevice     = 30,
	WPNTYPE_FemtoAbsorptionDevice  = 31,
	WPNTYPE_Max                    = 32,
};

enum class ETTLUIResultPartsItemAnimationPhase : uint8
{
	None                           = 0,
	BossDataPhase1                 = 1,
	BossDataPhase2                 = 2,
	BossDataPhase3                 = 3,
	Max                            = 4,
};


//---------------------------------------------------------------------------------------------------------------------
// STRUCTS
//---------------------------------------------------------------------------------------------------------------------

// 0x140 (0x148 - 0x8)
// ScriptStruct DXM.TTLEnemyParam
struct FTTLEnemyParam : public FTableRowBase
{
public:
	float                                        MaxHP;                                             // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WarningTMP;                                        // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OverHeatTMP;                                       // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefencePenality;                                   // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MovementPenality;                                  // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CouldFly;                                          // 0x1C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A3F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TMPDecreaseOnLand;                                 // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMPDecreaseOnAir;                                  // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMPDecreaseOnOverHeat;                             // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEnemyDamageReactionType       ReactionType;                                      // 0x2C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A40[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Stability;                                         // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Mass;                                              // 0x34(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Defence;                                           // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefenceCorrection;                                 // 0x3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PhysicResist;                                      // 0x40(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FemtoResist;                                       // 0x44(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BurningResist;                                     // 0x48(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StunResist;                                        // 0x4C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AcidResist;                                        // 0x50(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlashResist;                                       // 0x54(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JammingResist;                                     // 0x58(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Stealth;                                           // 0x5C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxKnockDownValue;                                 // 0x60(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KnockDownAttenuation;                              // 0x64(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WeakPointDefence;                                  // 0x68(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WeakPointPhysicResist;                             // 0x6C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WeakPointFemtoResist;                              // 0x70(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FemtoUpRate;                                       // 0x74(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxBurnValue;                                      // 0x78(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BurnValueUpLimit;                                  // 0x7C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BurnValueSlowDownSpeed;                            // 0x80(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BurnTime;                                          // 0x84(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BurnDamage;                                        // 0x88(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BurnTMPRise;                                       // 0x8C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BurnSpeedDownRate;                                 // 0x90(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxAcidValue;                                      // 0x94(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AcidValueUpLimit;                                  // 0x98(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AcidValueSlowDownSpeed;                            // 0x9C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AcidTime;                                          // 0xA0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AcidDamage;                                        // 0xA4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AcidDefenceDown;                                   // 0xA8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AcidSpeedDownRate;                                 // 0xAC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxStunValue;                                      // 0xB0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StunValueUpLimit;                                  // 0xB4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StunValueSlowDownSpeed;                            // 0xB8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StunTime;                                          // 0xBC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StunSpeedDownRate;                                 // 0xC0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxFlashValue;                                     // 0xC4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlashValueUpLimit;                                 // 0xC8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlashValueSlowDownSpeed;                           // 0xCC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlashTime;                                         // 0xD0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlashTimeMedium;                                   // 0xD4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlashTimeWeak;                                     // 0xD8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlashStrongDegree;                                 // 0xDC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlashMediumDegree;                                 // 0xE0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlashWeakDegree;                                   // 0xE4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlashMaxPostEffectTime;                            // 0xE8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlashDummySpeed;                                   // 0xEC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlashSwitchMoveTime;                               // 0xF0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxJammingValue;                                   // 0xF4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JammingValueUpLimit;                               // 0xF8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JammingValueSlowDownSpeed;                         // 0xFC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JammingTime;                                       // 0x100(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JammingDecreaseRangeRate;                          // 0x104(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JammingDummySpeed;                                 // 0x108(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JammingSwitchMoveTime;                             // 0x10C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnabledFailCatch;                                // 0x110(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A41[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AI_BattleRange;                                    // 0x114(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AI_ProcessInterval;                                // 0x118(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AI_CombatRadius;                                   // 0x11C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Barrel_LookAtSpeed;                                // 0x120(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             Barrel_PitchRange;                                 // 0x124(0x8)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Barrel_YawRange;                                   // 0x12C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Barrel_DeviationShootingRate;                      // 0x130(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Barrel_DeviationShootingTargetSpeedLimit;          // 0x134(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Barrel_OuterDelayTime;                             // 0x138(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Firearm_DurationTime;                              // 0x13C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Firearm_IntervalTime;                              // 0x140(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Firearm_OutRangeTolerance;                         // 0x144(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct DXM.TTLDebugMenuFolder
struct FTTLDebugMenuFolder
{
public:
	class FString                                Name;                                              // 0x0(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        Children;                                          // 0x10(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                LinkTo;                                            // 0x20(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct DXM.TTLAIReactionParam
struct FTTLAIReactionParam
{
public:
	TWeakObjectPtr<class AActor>                 Actor;                                             // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        Subactor;                                          // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         Enabled;                                           // 0x18(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A42[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVector>                       Vector;                                            // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLMissionSubGoalActorDestroyedParam
struct FTTLMissionSubGoalActorDestroyedParam
{
public:
	class FName                                  GroupTag;                                          // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Num;                                               // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A43[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                DestoryedActor;                                    // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxNum;                                            // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlayerDestoryedNum;                                // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLGeneralNotificationData
struct FTTLGeneralNotificationData
{
public:
	class UClass*                                ClassIs;                                           // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                UniqueID;                                          // 0x8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Data;                                              // 0x18(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct DXM.TTLAssemblePartsInfoRow
struct FTTLAssemblePartsInfoRow : public FTableRowBase
{
public:
	class FName                                  PartsID;                                           // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLPartsType                     PartType;                                          // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A44[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        UniqueID;                                          // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEPartsNewState                PartsNewState;                                     // 0x18(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A45[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct DXM.TTLArsenalPartsInfo
struct FTTLArsenalPartsInfo
{
public:
	struct FTTLAssemblePartsInfoRow              PartsInfo;                                         // 0x0(0x20)(BlueprintVisible, NativeAccessSpecifierPublic)
	class FName                                  AttachmentID1;                                     // 0x20(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AttachmentID2;                                     // 0x28(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AttachmentID3;                                     // 0x30(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x310 (0x310 - 0x0)
// ScriptStruct DXM.TTLArsenalPartsInfoList
struct FTTLArsenalPartsInfoList
{
public:
	struct FTTLArsenalPartsInfo                  Head;                                              // 0x0(0x38)(Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLArsenalPartsInfo                  Body;                                              // 0x38(0x38)(Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLArsenalPartsInfo                  Inside;                                            // 0x70(0x38)(Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLArsenalPartsInfo                  LeftArm;                                           // 0xA8(0x38)(Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLArsenalPartsInfo                  RightArm;                                          // 0xE0(0x38)(Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLArsenalPartsInfo                  Legs;                                              // 0x118(0x38)(Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLArsenalPartsInfo                  LeftWeapon;                                        // 0x150(0x38)(Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLArsenalPartsInfo                  RightWeapon;                                       // 0x188(0x38)(Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLArsenalPartsInfo                  ShoulderWeapon;                                    // 0x1C0(0x38)(Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLArsenalPartsInfo                  SupportWeapon;                                     // 0x1F8(0x38)(Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLArsenalPartsInfo                  LeftWeaponRack1;                                   // 0x230(0x38)(Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLArsenalPartsInfo                  LeftWeaponRack2;                                   // 0x268(0x38)(Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLArsenalPartsInfo                  RightWeaponRack1;                                  // 0x2A0(0x38)(Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLArsenalPartsInfo                  RightWeaponRack2;                                  // 0x2D8(0x38)(Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x4D (0x4D - 0x0)
// ScriptStruct DXM.TTLOptionKeyConfigData
struct FTTLOptionKeyConfigData
{
public:
	bool                                         IsEnable;                                          // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEInputType                    KeyType[0x25];                                     // 0x1(0x25)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEInputType                    AssistKeyType[0x25];                               // 0x26(0x25)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEInputType                    AssistKey[0x2];                                    // 0x4B(0x2)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x135 (0x135 - 0x0)
// ScriptStruct DXM.TTLOptionKeyConfigInfo
struct FTTLOptionKeyConfigInfo
{
public:
	struct FTTLOptionKeyConfigData               ActiveKeyConfig;                                   // 0x0(0x4D)(NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLOptionKeyConfigData               CustomKeyConfig[0x3];                              // 0x4D(0xE7)(NoDestructor, NativeAccessSpecifierPublic)
	enum class ETTLOptionActiveKeyConfigType     ActiveType;                                        // 0x134(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLOptionGameInfo
struct FTTLOptionGameInfo
{
public:
	enum class EFTTLOptionGameCameraType         UpDown;                                            // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFTTLOptionGameCameraType         LeftRight;                                         // 0x1(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFTTLOptionGameMiniMapType        MiniMap;                                           // 0x2(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFTTLOptionGamePlayerNameDisplayType PlayerNameDisplay;                                 // 0x3(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StickSensitivity;                                  // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MotionSensorSensitivity;                           // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFTTLOptionGameVisilibityType     ShowScreenEffectOnDamaged;                         // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFTTLOptionGameVisilibityType     ShowDamagePopup;                                   // 0xD(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFTTLOptionGameVisilibityType     ShowTargetArrow3d;                                 // 0xE(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A46[0x1];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct DXM.TTLKeyboardAction
struct FTTLKeyboardAction
{
public:
	enum class ETTLEActionType                   ActionType;                                        // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A47[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FKey                                  Key;                                               // 0x8(0x18)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEKeyboardActionKind           KeyActionKind;                                     // 0x20(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A48[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AnalogActionDirectionValue;                        // 0x24(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        UiDisplayPriority;                                 // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A49[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLKeyboardActionMap
struct FTTLKeyboardActionMap
{
public:
	TArray<struct FTTLKeyboardAction>            KeyActionList;                                     // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct DXM.TTLOptionKeyboardConfigInfo
struct FTTLOptionKeyboardConfigInfo
{
public:
	struct FTTLKeyboardActionMap                 ActiveKeyboardConfig;                              // 0x0(0x10)(NativeAccessSpecifierPublic)
	struct FTTLKeyboardActionMap                 CustomKeyboardConfig[0x3];                         // 0x10(0x30)(NativeAccessSpecifierPublic)
	enum class ETTLOptionActiveKeyboardConfigType ActiveKeyboardConfigType;                          // 0x40(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A4A[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x1C (0x1C - 0x0)
// ScriptStruct DXM.TTLOptionSoundInfo
struct FTTLOptionSoundInfo
{
public:
	enum class EFTTLOptionSoundOutputType        Output;                                            // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A4B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MainVolume;                                        // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        VoiceVolume;                                       // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BGMVolume;                                         // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SEVolume;                                          // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        WarningVolume;                                     // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFTTLOptionSoundOperatorType      Operator;                                          // 0x18(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A4C[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLOptionHudCustomParam
struct FTTLOptionHudCustomParam
{
public:
	bool                                         Disp;                                              // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A4D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             Pos;                                               // 0x4(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Scale;                                             // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Alpha;                                             // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SortNumber;                                        // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLOptionHudCustomInfo
struct FTTLOptionHudCustomInfo
{
public:
	TArray<struct FTTLOptionHudCustomParam>      ArsenalHudSettings;                                // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x4 (0x4 - 0x0)
// ScriptStruct DXM.TTLOptionSystemInfo
struct FTTLOptionSystemInfo
{
public:
	enum class EFTTLOptionSystemMessageDisplayType MessageDisplay;                                    // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFTTLOptionSystemTextSpeedType    TextSpeed;                                         // 0x1(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFTTLOptionSystemVibrationType    Vibration;                                         // 0x2(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFTTLOptionSystemAutoSaveType     AutoSave;                                          // 0x3(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1D0 (0x1D0 - 0x0)
// ScriptStruct DXM.TTLOptionInfo
struct FTTLOptionInfo
{
public:
	struct FTTLOptionKeyConfigInfo               KeyConfigInfo;                                     // 0x0(0x135)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A4E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLOptionKeyboardConfigInfo          KeyboardConfigInfo;                                // 0x138(0x48)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FTTLOptionGameInfo                    GameInfo;                                          // 0x180(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLOptionSoundInfo                   SoundInfo;                                         // 0x190(0x1C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLOptionSystemInfo                  SystemInfo;                                        // 0x1AC(0x4)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLOptionHudCustomInfo               HudCustomInfo;                                     // 0x1B0(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        LanguageText;                                      // 0x1C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LanguageVoice;                                     // 0x1C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsInitializedLanguageVoice;                        // 0x1C8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A4F[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct DXM.TTLPostedChatMessage
struct FTTLPostedChatMessage
{
public:
	class FText                                  SpeakerName;                                       // 0x0(0x18)(NativeAccessSpecifierPublic)
	bool                                         IsLocalPlayer;                                     // 0x18(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A50[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  ChatMessage;                                       // 0x20(0x18)(NativeAccessSpecifierPublic)
	class FString                                PresetMessageID;                                   // 0x38(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct DXM.TTLMessageLogItem
struct FTTLMessageLogItem
{
public:
	enum class ETTLMessageLogItemType            MessageLogType;                                    // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A51[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  SpeakerName;                                       // 0x8(0x18)(NativeAccessSpecifierPublic)
	bool                                         IsLocalPlayer;                                     // 0x20(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A52[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  Message;                                           // 0x28(0x18)(NativeAccessSpecifierPublic)
	float                                        LifeSeconds;                                       // 0x40(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A53[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x10 - 0x8)
// ScriptStruct DXM.TTLNPCTsubazeriaiScoreParam
struct FTTLNPCTsubazeriaiScoreParam : public FTableRowBase
{
public:
	int32                                        MinTsubazeriaiScore;                               // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxTsubazeriaiScore;                               // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x28 - 0x8)
// ScriptStruct DXM.TTLCannonParam
struct FTTLCannonParam : public FTableRowBase
{
public:
	float                                        CoverSpeed;                                        // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NoticeLineTime;                                    // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeliFlash_AI_DefaultDurationTime;                  // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeliFlash_AI_DefaultIntervalTime;                  // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HeliFlash_AI_DefaultRapidRate;                     // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeliFlash_AI_FollowDurationTime;                   // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeliFlash_AI_FollowIntervalTime;                   // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HeliFlash_AI_FollowRapidRate;                      // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x90 (0x98 - 0x8)
// ScriptStruct DXM.TTLFeryParam
struct FTTLFeryParam : public FTableRowBase
{
public:
	float                                        MoveSpeedMax;                                      // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveAccelerateTime;                                // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnSpeed;                                         // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PitchSpeed;                                        // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PitchMax;                                          // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableRoll;                                        // 0x1C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A54[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RollMax;                                           // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RestoreRollDegree;                                 // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RestoreRollRate;                                   // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLFeryParamBaseFeryTurnEasingFunc MotionTurnFunc;                                    // 0x2C(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A55[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MotionTurnExp;                                     // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLFeryParamBaseFeryTurnEasingFunc MotionTurnRestoreFunc;                             // 0x34(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A56[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MotionTurnRestoreExp;                              // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlareSpeed;                                        // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlareApplyGravityTime;                             // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlareApplyGravityRate;                             // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlareLifeTime;                                     // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlareTargetAreaRadius;                             // 0x4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlareHP;                                           // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlareCooldownTime;                                 // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlareCollisionRadius;                              // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlareAddTmp;                                       // 0x5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlareSensorDistance;                               // 0x60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLFeryParamDeathType            DeadType;                                          // 0x64(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A57[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ExplosionSpan;                                     // 0x68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ExplosionVFXMeshIndex;                             // 0x6C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ExplosionVFXFallingMeshIndex;                      // 0x70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Base_DischargeTime;                                // 0x74(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Base_DischargeWaitTime;                            // 0x78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WreckFallSpeed;                                    // 0x7C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AI_PatrolMax;                                      // 0x80(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AI_HeightMax;                                      // 0x84(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AI_HeightMin;                                      // 0x88(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Container_DischargeLTime;                          // 0x8C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Container_DischargeLWaitTime;                      // 0x90(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Container_DischargeMax;                            // 0x94(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xE0 (0xE8 - 0x8)
// ScriptStruct DXM.TTLFighterParam
struct FTTLFighterParam : public FTableRowBase
{
public:
	bool                                         EnableRollRotation;                                // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A58[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RestoreRollDegree;                                 // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RestoreRollRate;                                   // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RollRate;                                          // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RollMax;                                           // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightWeaponForwardRangeDegree;                     // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         RightWeaponIsReverseForwardRangeDegree;            // 0x20(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A59[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RightWeaponRangeTop;                               // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightWeaponRangeBottom;                            // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftWeaponForwardRangeDegree;                      // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LeftWeaponIsReverseForwardRangeDegree;             // 0x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A5A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LeftWeaponRangeTop;                                // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftWeaponRangeBottom;                             // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CenterWeaponPinpointRadius;                        // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CenterWeaponRandomCmX;                             // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CenterWeaponRandomCmY;                             // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CenterWeaponContinueShootMax;                      // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GravityScaleOnWreck;                               // 0x4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RollMaxSpeedOnWreck;                               // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RollAccelerationOnWreck;                           // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ExplodeFriendlyFireEnable;                         // 0x58(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A5B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TargetDamageOnTouch;                               // 0x5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MyDamageOnTouch;                                   // 0x60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KnockOutOnTouch;                                   // 0x64(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KnockBackOnTouch;                                  // 0x68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMPRiseOnTouch;                                    // 0x6C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AI_MaxMoveSpeed;                                   // 0x70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AI_MoveSpeedChangeRate;                            // 0x74(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AI_RotateSpeed;                                    // 0x78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AI_AlongValue;                                     // 0x7C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AI_ZSpeedOnPatrol;                                 // 0x80(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AI_RotateSpeedOnChase;                             // 0x84(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AI_CheckSkipOnChase;                               // 0x88(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AI_AvoidDistanceMax;                               // 0x8C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AI_RotateSpeedOnAvoid;                             // 0x90(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AI_ZMaxOnChase;                                    // 0x94(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AI_ZMinOnChase;                                    // 0x98(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AI_ZSpeedOnChase;                                  // 0x9C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AI_IsEnableAvoid;                                  // 0xA0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A5C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AI_CheckDistanceInAvoid;                           // 0xA4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AI_RotateSpeedOnInAvoid;                           // 0xA8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AI_HitAfterSecondsInAvoid;                         // 0xAC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AI_MaxMoveSpeedInAvoid;                            // 0xB0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FightStel_MissileShootIntervalSeconds;             // 0xB4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FightStel_MissileShootCountPerSet;                 // 0xB8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FightStel_MissileSetIntervalSeconds;               // 0xBC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         FightStel_DropUseOnChase;                          // 0xC0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A5D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        FightStel_DropShootCountPerSet;                    // 0xC4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FightStel_DropSetSeconds;                          // 0xC8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FightStel_DropWeaponRandomCmX;                     // 0xCC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FightStel_DropWeaponRandomCmY;                     // 0xD0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         FightStel_PinpointUseOnChase;                      // 0xD4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A5E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FightStel_PinpointWeaponPinpointRadius;            // 0xD8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FightStel_PinpointWeaponRandomCmX;                 // 0xDC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FightStel_PinpointWeaponRandomCmY;                 // 0xE0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FightStel_PinpointWeaponContinueShootMax;          // 0xE4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x70 (0x78 - 0x8)
// ScriptStruct DXM.TTLHelicopterParam
struct FTTLHelicopterParam : public FTableRowBase
{
public:
	enum class ETTLHelicopterParamHeliType       DefaultsType;                                      // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A5F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Deactivate_SearchEnemyRange;                       // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Deactivate_WarningRange;                           // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Activate_SearchEnemyRange;                         // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Activate_WarningRange;                             // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Move_MaxSpeed;                                     // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Move_AccelerateTime;                               // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Move_MinHeight;                                    // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Turn_Speed;                                        // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpecialFlight_Distance;                            // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpecialFlight_Range;                               // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpecialFlight_Height;                              // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FormationFlight_Radius;                            // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         FormationFlight_CoverLeaderFlag;                   // 0x3C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A60[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FormationFlight_SpreadRadius;                      // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MicroFreeze_Time;                                  // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MicroFreeze_DecelerationRate;                      // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             Knockback_Low;                                     // 0x4C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             Knockback_Middle;                                  // 0x54(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             Knockback_High;                                    // 0x5C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Down_Time;                                         // 0x64(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Death_ExplodeStartTime;                            // 0x68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Death_FriendlyFireEnable;                          // 0x6C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A61[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HHeliHevy01_MissileDistance;                       // 0x70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A62[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x1C8 (0x1D0 - 0x8)
// ScriptStruct DXM.TTLTankParam
struct FTTLTankParam : public FTableRowBase
{
public:
	float                                        PathResearchInterval;                              // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSpeed;                                          // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AccelerateTime;                                    // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnSpeed;                                         // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MicroFreeze_Time;                                  // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MicroFreeze_DecelerationRate;                      // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector4                              MicroFreeze_BodyInclination;                       // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             Knockback_Low;                                     // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A63[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector4                              Knockback_LowBodyInclination;                      // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             Knockback_Middle;                                  // 0x50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A64[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector4                              Knockback_MiddleBodyInclination;                   // 0x60(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             Knockback_High;                                    // 0x70(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A65[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector4                              Knockback_HighBodyInclination;                     // 0x80(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Down_Time;                                         // 0x90(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Down_TurretPitch;                                  // 0x94(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A66[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector4                              Down_BodyInclination;                              // 0xA0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Death_ExplodeStartTime;                            // 0xB0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Death_ExplodeFrendlyFire;                          // 0xB4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A67[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Suspension_BaseInclinationAngle;                   // 0xB8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Suspension_CentroidInclinationAngle;               // 0xBC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Suspension_BodyInclinationRate;                    // 0xC0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Suspension_AccelerationInclinationAddRate;         // 0xC4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Suspension_AccelerationInclinationDecRate;         // 0xC8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Suspension_TurnInclinationAddRate;                 // 0xCC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Suspension_TurnInclinationDecRate;                 // 0xD0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Suspension_ShootInclinationAddRate;                // 0xD4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Suspension_ShootInclinationDecRate;                // 0xD8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalState_BurnedMoveRate;                      // 0xDC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalState_BurnedTurnRate;                      // 0xE0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalState_StunedMoveRate;                      // 0xE4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalState_StunedTurnRate;                      // 0xE8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalState_AcidedMoveRate;                      // 0xEC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalState_AcidedTurnRate;                      // 0xF0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalState_FlashedMoveRate;                     // 0xF4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalState_FlashedTurnRate;                     // 0xF8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalState_JammedMoveRate;                      // 0xFC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalState_JammedTurnRate;                      // 0x100(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Jammer_JammerTime;                                 // 0x104(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Jammer_JammerCooldownTime;                         // 0x108(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Jammer_JammerAreaRadius;                           // 0x10C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Jammer_JammerMaterialIndex;                        // 0x110(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Jammer_DefaultBlinkRate;                           // 0x114(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Jammer_DefaultEmissionPower;                       // 0x118(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          Jammer_DefaultEmissionColor;                       // 0x11C(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Jammer_JammerBlinkRate;                            // 0x12C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Jammer_JammerEmissionPower;                        // 0x130(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          Jammer_JammerEmissionColor;                        // 0x134(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxMoveSpeedRunAway;                               // 0x144(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArcGunner_ArkgunPitchBase;                         // 0x148(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             ArcGunner_ArkgunPitchRange;                        // 0x14C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArcGunner_WeaponSpeed;                             // 0x154(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MissileRandomDelay;                                // 0x158(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RushCar_Rush_ReadyTime;                            // 0x15C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RushCar_Rush_ReadyTurnSpeed;                       // 0x160(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RushCar_Rush_MaxSpeed;                             // 0x164(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RushCar_Rush_AccelerateTime;                       // 0x168(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RushCar_Rush_TurnSpeed;                            // 0x16C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RushCar_Rush_Time;                                 // 0x170(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RushCar_Rush_AfterPassageTime;                     // 0x174(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RushCar_Rush_DecelerateTime;                       // 0x178(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RushCar_Rush_AfterFixTime;                         // 0x17C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RushCar_Rush_HitStopTime;                          // 0x180(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RushCar_Rush_BackSpeed;                            // 0x184(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RushCar_Rush_BackAccelerateTime;                   // 0x188(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RushCar_Rush_BackTime;                             // 0x18C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RushCar_Rush_AttackIntervalTime;                   // 0x190(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RushCar_AbnormalState_BurnedRushHitStopTimeRate;   // 0x194(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RushCar_AbnormalState_StunedRushHitStopTimeRate;   // 0x198(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RushCar_AbnormalState_AcidedRushHitStopTimeRate;   // 0x19C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RushCar_AbnormalState_FlashedRushHitStopTimeRate;  // 0x1A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RushCar_AbnormalState_JammedRushHitStopTimeRate;   // 0x1A4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             ArmorTank_Knockback_Cannon;                        // 0x1A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector4                              ArmorTank_Knockback_CannonBodyInclination;         // 0x1B0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLTankParamArmorTankType        ArmorTank_ProcessType;                             // 0x1C0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A68[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AutoBomb_SpeedScale;                               // 0x1C4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutoBomb_ExplosionTime;                            // 0x1C8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AutoBomb_FriendlyFire;                             // 0x1CC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A69[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x110 (0x118 - 0x8)
// ScriptStruct DXM.TTLDroneParam
struct FTTLDroneParam : public FTableRowBase
{
public:
	enum class ETTLDroneParamDroneType           Type;                                              // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A6A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxSpeed;                                          // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AccelerateTime;                                    // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnSpeed;                                         // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MicroFreeze_Time;                                  // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MicroFreeze_DecelerationRate;                      // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MicroFreeze_Inclination;                           // 0x20(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             Knockback_Low;                                     // 0x2C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Knockback_LowInclination;                          // 0x34(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             Knockback_Middle;                                  // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Knockback_MiddleInclination;                       // 0x48(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             Knockback_High;                                    // 0x54(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Knockback_HighInclination;                         // 0x5C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Down_Time;                                         // 0x68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Down_BarrelPitch;                                  // 0x6C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Down_Inclination;                                  // 0x70(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SupportDrone_FollowDistance;                       // 0x7C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Jammer_JammerTime;                                 // 0x80(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Jammer_JammerCooldownTime;                         // 0x84(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Jammer_JammerAreaRadius;                           // 0x88(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Jammer_JammerMaterialIndex;                        // 0x8C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Jammer_DefaultBlinkRate;                           // 0x90(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Jammer_DefaultEmissionPower;                       // 0x94(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          Jammer_DefaultEmissionColor;                       // 0x98(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Jammer_JammerBlinkRate;                            // 0xA8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Jammer_JammerEmissionPower;                        // 0xAC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          Jammer_JammerEmissionColor;                        // 0xB0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GuardDrone_CoverInterval;                          // 0xC0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GuardDrone_AproachDistance;                        // 0xC4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GuardDrone_BreakAwayDistance;                      // 0xC8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GuardDrone_BlockDistance;                          // 0xCC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DecoyCarrier_DecoyCountMin;                        // 0xD0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DecoyCarrier_DecoyCountMax;                        // 0xD4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DecoyCarrier_ShootIntervalDefault;                 // 0xD8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DecoyCarrier_ShootIntervalBattle;                  // 0xDC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MineThrower_MineCountMin;                          // 0xE0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MineThrower_MineCountMax;                          // 0xE4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLDroneParamTurretType          Turret_Type;                                       // 0xE8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A6B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Turret_Floating_Range;                             // 0xEC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Turret_Floating_Cycle;                             // 0xF0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutoBomb_SpeedScale;                               // 0xF4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutoBomb_ExplosionTime;                            // 0xF8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AutoBomb_FriendlyFire;                             // 0xFC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A6C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SecurityDrone_SearchRange;                         // 0x100(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SecurityDrone_Caution_TargetRecognitionTime;       // 0x104(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SecurityDrone_Caution_TargetLostTime;              // 0x108(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SecurityDrone_Warning_GenerateTime;                // 0x10C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SecurityDrone_OnGroundDistanceRate;                // 0x110(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SecurityDrone_OuterDistanceRate;                   // 0x114(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x28 - 0x8)
// ScriptStruct DXM.TTLOuterOverrideParamRow
struct FTTLOuterOverrideParamRow : public FTableRowBase
{
public:
	float                                        MaxHP;                                             // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveSpeed;                                         // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DashSpeed;                                         // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DodgeSpeed;                                        // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DodgeCoolDown;                                     // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxStamina;                                        // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StaminaRecoverySpeed;                              // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A6D[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x158 (0x160 - 0x8)
// ScriptStruct DXM.TTLArsenalOverrideParamRow
struct FTTLArsenalOverrideParamRow : public FTableRowBase
{
public:
	float                                        MaxVP;                                             // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Defence;                                           // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeadArmor;                                         // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BodyArmor;                                         // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightArmArmor;                                     // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftArmArmor;                                      // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LegsArmor;                                         // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PhysicResist;                                      // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FemtoResist;                                       // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BurningResist;                                     // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StunResist;                                        // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AcidResist;                                        // 0x34(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlashResist;                                       // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JammingResist;                                     // 0x3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Stealth;                                           // 0x40(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Mass;                                              // 0x44(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxKnockDownValue;                                 // 0x48(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KnockDownAttenuation;                              // 0x4C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightThrowSpeedCorrection;                         // 0x50(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightThrowDamageCorrection;                        // 0x54(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightThrowExplosionDamageCorrection;               // 0x58(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftThrowSpeedCorrection;                          // 0x5C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftThrowDamageCorrection;                         // 0x60(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftThrowExplosionDamageCorrection;                // 0x64(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LockOnRange;                                       // 0x68(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GroundSpeed;                                       // 0x6C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AirSpeed;                                          // 0x70(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GroundBoostSpeed;                                  // 0x74(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AirBoostSpeed;                                     // 0x78(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LandingTime;                                       // 0x7C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpSpeed;                                         // 0x80(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KnockbackRecoveryTime;                             // 0x84(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HitBreakTime;                                      // 0x88(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HitBreakSpeedDownRate;                             // 0x8C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FirstTMPIncreaseOnAirBoost;                        // 0x90(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMPIncreaseOnAirBoost;                             // 0x94(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FirstTMPIncreaseOnGroundBoost;                     // 0x98(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMPIncreaseOnGroundBoost;                          // 0x9C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMPOverHeat;                                       // 0xA0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMPDecreaseInAir;                                  // 0xA4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMPDecreaseOnGround;                               // 0xA8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMPDecreaseOverHeat;                               // 0xAC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MirageFemtoConsume;                                // 0xB0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FemtoUpRate;                                       // 0xB4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StandFemtoUpCorrection;                            // 0xB8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveFemtoUpCorrection;                             // 0xBC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxBurnValue;                                      // 0xC0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BurnValueUpLimit;                                  // 0xC4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BurnValueSlowDownSpeed;                            // 0xC8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BurnTime;                                          // 0xCC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BurnDamage;                                        // 0xD0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BurnTMPRise;                                       // 0xD4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BurnSpeedDownRate;                                 // 0xD8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxAcidValue;                                      // 0xDC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AcidValueUpLimit;                                  // 0xE0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AcidValueSlowDownSpeed;                            // 0xE4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AcidTime;                                          // 0xE8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AcidDamage;                                        // 0xEC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AcidDefenceDown;                                   // 0xF0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AcidSpeedDownRate;                                 // 0xF4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxStunValue;                                      // 0xF8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StunValueUpLimit;                                  // 0xFC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StunValueSlowDownSpeed;                            // 0x100(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StunTime;                                          // 0x104(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StunSpeedDownRate;                                 // 0x108(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxFlashValue;                                     // 0x10C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlashValueUpLimit;                                 // 0x110(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlashValueSlowDownSpeed;                           // 0x114(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlashTime;                                         // 0x118(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlashTimeMedium;                                   // 0x11C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlashTimeWeak;                                     // 0x120(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlashStrongDegree;                                 // 0x124(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlashMediumDegree;                                 // 0x128(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlashWeakDegree;                                   // 0x12C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlashMaxPostEffectTime;                            // 0x130(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlashDummySpeed;                                   // 0x134(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlashSwitchMoveTime;                               // 0x138(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxJammingValue;                                   // 0x13C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JammingValueUpLimit;                               // 0x140(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JammingValueSlowDownSpeed;                         // 0x144(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JammingTime;                                       // 0x148(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JammingDecreaseRangeRate;                          // 0x14C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JammingDummySpeed;                                 // 0x150(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JammingSwitchMoveTime;                             // 0x154(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLTsubazeriaiScoreType          TsubazeriaiScoreType;                              // 0x158(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A6E[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x6 (0x6 - 0x0)
// ScriptStruct DXM.TTLArsenalBrokenPartsSetting
struct FTTLArsenalBrokenPartsSetting
{
public:
	bool                                         IsApplyBrokenSetting;                              // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsBrokenHead;                                      // 0x1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsBrokenChest;                                     // 0x2(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsBrokenLeftArm;                                   // 0x3(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsBrokenRightArm;                                  // 0x4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsBrokenLegs;                                      // 0x5(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xA0 (0xA8 - 0x8)
// ScriptStruct DXM.TTLEnemyArsenalPartsParamRow
struct FTTLEnemyArsenalPartsParamRow : public FTableRowBase
{
public:
	class FName                                  HeadID;                                            // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BodyID;                                            // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  InsideID;                                          // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LeftArmID;                                         // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RightArmID;                                        // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LegsID;                                            // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LeftWeaponID;                                      // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLPartsType                     LeftWeaponType;                                    // 0x40(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A6F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  RightWeaponID;                                     // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLPartsType                     RightWeaponType;                                   // 0x50(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A70[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ShoulderWeaponID;                                  // 0x58(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SupportWeaponID;                                   // 0x60(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LeftWeaponID2;                                     // 0x68(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLPartsType                     LeftWeaponType2;                                   // 0x70(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A71[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  RightWeaponID2;                                    // 0x78(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLPartsType                     RightWeaponType2;                                  // 0x80(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsForceDisabledPickUp;                             // 0x81(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLWreckPose                     WreckPose;                                         // 0x82(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CompletelyDestroyHead;                             // 0x83(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CompletelyDestroyBody;                             // 0x84(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CompletelyDestroyLeftArm;                          // 0x85(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CompletelyDestroyRightArm;                         // 0x86(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CompletelyDestroyLegs;                             // 0x87(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         GenerateHeatSource;                                // 0x88(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A72[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HeatSourceHeatLifeTime;                            // 0x8C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeatSourceHeatTMP;                                 // 0x90(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeatSourceBurningTMP;                              // 0x94(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeatSourceHeatScale;                               // 0x98(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeatSourceBurnScale;                               // 0x9C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLArsenalBrokenPartsSetting         StartBrokenSetting;                                // 0xA0(0x6)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A73[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0xB8 - 0xA8)
// ScriptStruct DXM.TTLDebugArsenalPartsParamRow
struct FTTLDebugArsenalPartsParamRow : public FTTLEnemyArsenalPartsParamRow
{
public:
	class FString                                PartsSetName;                                      // 0xA8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x88 (0x90 - 0x8)
// ScriptStruct DXM.TTLBossDropRewardParamRow
struct FTTLBossDropRewardParamRow : public FTableRowBase
{
public:
	float                                        BattleDataDropNum;                                 // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A74[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  DropIntroduceTextID;                               // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Reward1DropRate;                                   // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Reward2DropRate;                                   // 0x1C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Reward3DropRate;                                   // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Reward4DropRate;                                   // 0x24(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Reward5DropRate;                                   // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Reward6DropRate;                                   // 0x2C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Reward7DropRate;                                   // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Reward8DropRate;                                   // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Reward9DropRate;                                   // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Reward10DropRate;                                  // 0x3C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RewardID1;                                         // 0x40(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RewardID2;                                         // 0x48(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RewardID3;                                         // 0x50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RewardID4;                                         // 0x58(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RewardID5;                                         // 0x60(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RewardID6;                                         // 0x68(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RewardID7;                                         // 0x70(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RewardID8;                                         // 0x78(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RewardID9;                                         // 0x80(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RewardID10;                                        // 0x88(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x108 (0x110 - 0x8)
// ScriptStruct DXM.TTLEnemyBossDropParamRow
struct FTTLEnemyBossDropParamRow : public FTableRowBase
{
public:
	class FName                                  BaseDrop1;                                         // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BaseDrop2;                                         // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BaseDrop3;                                         // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BaseDrop4;                                         // 0x20(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeakPointDrop1;                                    // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeakPointDrop2;                                    // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeakPointDrop3;                                    // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeakPointDrop4;                                    // 0x40(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeakPointDrop5;                                    // 0x48(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeakPointDrop6;                                    // 0x50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeakPointDrop7;                                    // 0x58(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeakPointDrop8;                                    // 0x60(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeakPointDrop9;                                    // 0x68(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeakPointDrop10;                                   // 0x70(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeakPointDrop11;                                   // 0x78(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeakPointDrop12;                                   // 0x80(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeakPointDrop13;                                   // 0x88(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeakPointDrop14;                                   // 0x90(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeakPointDrop15;                                   // 0x98(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeakPointDrop16;                                   // 0xA0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeakPointDrop17;                                   // 0xA8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeakPointDrop18;                                   // 0xB0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  UniqueDrop1;                                       // 0xB8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UniqueCondition1Num;                               // 0xC0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A75[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  UniqueDrop2;                                       // 0xC8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UniqueCondition2Num;                               // 0xD0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A76[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  UniqueDrop3;                                       // 0xD8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UniqueCondition3Num;                               // 0xE0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A77[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  BurningDrop;                                       // 0xE8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  StunDrop;                                          // 0xF0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AcidDrop;                                          // 0xF8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FlashDrop;                                         // 0x100(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  JammingDrop;                                       // 0x108(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x10 - 0x8)
// ScriptStruct DXM.TTLEnemyMetaDataParamRow
struct FTTLEnemyMetaDataParamRow : public FTableRowBase
{
public:
	class FName                                  ImagePath;                                         // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLActionVoicePlayedTime
struct FTTLActionVoicePlayedTime
{
public:
	uint8                                        Pad_2A78[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLActionVoicePathMap
struct FTTLActionVoicePathMap
{
public:
	uint8                                        Pad_2A79[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLActionVoiceParamMap
struct FTTLActionVoiceParamMap
{
public:
	uint8                                        Pad_2A7A[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x20 - 0x8)
// ScriptStruct DXM.TTLActionVoiceSettingsRow
struct FTTLActionVoiceSettingsRow : public FTableRowBase
{
public:
	class FName                                  SetVariation1;                                     // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SetVariation2;                                     // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SetVariation3;                                     // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x98 (0xA0 - 0x8)
// ScriptStruct DXM.TTLActionVoiceParamRow
struct FTTLActionVoiceParamRow : public FTableRowBase
{
public:
	class FName                                  VoiceDisplayName;                                  // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ActVoice_StartShoot;                               // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ActVoice_StartThrow;                               // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ActVoice_StartThrowHeavy;                          // 0x20(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ActVoice_CloseAttack;                              // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ActVoice_CloseAttackCombo;                         // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ActVoice_MissShoot;                                // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ActVoice_Catch;                                    // 0x40(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ActVoice_CatchHeavy;                               // 0x48(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ActVoice_GetOff;                                   // 0x50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ActVoice_GetOn;                                    // 0x58(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ActVoice_Jump;                                     // 0x60(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ActVoice_AbnormalStatus;                           // 0x68(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ActVoice_Damage;                                   // 0x70(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ActVoice_Recover;                                  // 0x78(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ActVoice_Dead;                                     // 0x80(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ActVoice_DrainStamina;                             // 0x88(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ActVoice_Landing;                                  // 0x90(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLActionVoiceGenderType         VoiceGender;                                       // 0x98(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsNPCVoice;                                        // 0x99(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A7B[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        DLCID;                                             // 0x9C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLMissileLockOnTarget
struct FTTLMissileLockOnTarget
{
public:
	class AActor*                                Target;                                            // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LockNum;                                           // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LockOnTime;                                        // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xB0 (0xB0 - 0x0)
// ScriptStruct DXM.TTLGeneratorContainer
struct FTTLGeneratorContainer
{
public:
	uint8                                        Pad_2A7C[0xB0];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLGeneratorActorSurface
struct FTTLGeneratorActorSurface
{
public:
	uint8                                        Pad_2A7D[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLGeneratorActorRemaingSpawnReferenceInfo
struct FTTLGeneratorActorRemaingSpawnReferenceInfo
{
public:
	uint8                                        Pad_2A7E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x14 (0x14 - 0x0)
// ScriptStruct DXM.TTLGeneratorActorSpawnReferenceInfo
struct FTTLGeneratorActorSpawnReferenceInfo
{
public:
	uint8                                        Pad_2A7F[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x78 (0x78 - 0x0)
// ScriptStruct DXM.TTLGeneratorActorContainer
struct FTTLGeneratorActorContainer
{
public:
	int32                                        SpawnIndex;                                        // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A80[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class AActor>                  ActorClass;                                        // 0x8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                PreLoadClass;                                      // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          Tags;                                              // 0x38(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         IsUseCapsuleHeightRadius;                          // 0x48(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A81[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HightOffset;                                       // 0x4C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsGimmick;                                         // 0x50(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A82[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class ATTLSplinePath>         AISPlineRoute;                                     // 0x54(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class ATriggerBase>           AIDefenctArea;                                     // 0x5C(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A83[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TWeakObjectPtr<class ATargetPoint>>   AITargetPoints;                                    // 0x68(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLGeneratorActorContainerList
struct FTTLGeneratorActorContainerList
{
public:
	TArray<struct FTTLGeneratorActorContainer>   SpawnList;                                         // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                  UniqueID;                                          // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLCurveContainer
struct FTTLCurveContainer
{
public:
	uint8                                        Pad_2A84[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           Curve;                                             // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct DXM.TTLAvoidCollisionInfo
struct FTTLAvoidCollisionInfo
{
public:
	uint8                                        Pad_2A85[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x14 (0x14 - 0x0)
// ScriptStruct DXM.TTLArsenalBurstShootInfo
struct FTTLArsenalBurstShootInfo
{
public:
	bool                                         IsBurstShootMode;                                  // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A86[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BurstShootTime;                                    // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BurstShootInterval;                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootTimer;                                        // 0xC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLArsenalBurstShootState        ShootState;                                        // 0x10(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A87[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLCommunicateInfo
struct FTTLCommunicateInfo
{
public:
	uint8                                        Pad_2A88[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLDebugAIActionHistoryInfo
struct FTTLDebugAIActionHistoryInfo
{
public:
	enum class ETTLAIActionType                  Type;                                              // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A89[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Time;                                              // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLDebugAIReactionHistoryInfo
struct FTTLDebugAIReactionHistoryInfo
{
public:
	enum class ETTLAIReaction                    Type;                                              // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A8A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Time;                                              // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLKeepOutArea
struct FTTLKeepOutArea
{
public:
	enum class ETTLKeepOutAreaType               AreaType;                                          // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A8B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               AreaCenterLocation;                                // 0x4(0xC)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KeepOutRange;                                      // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KeepOutTime;                                       // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                CenterActor;                                       // 0x18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USplineComponent*                      CenterSpline;                                      // 0x20(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLAIReactionLimit
struct FTTLAIReactionLimit
{
public:
	enum class ETTLAIReaction                    Type;                                              // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A8C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DeleteTime;                                        // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLAIReactionSetting
struct FTTLAIReactionSetting
{
public:
	enum class ETTLAIReaction                    Type;                                              // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A8D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ParamValue;                                        // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLTargetPointEvaluate
struct FTTLTargetPointEvaluate
{
public:
	uint8                                        Pad_2A8E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RangeEval;                                         // 0x8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceEval;                                      // 0xC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RouteEval;                                         // 0x10(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A8F[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLHateAdditionDistanceParam
struct FTTLHateAdditionDistanceParam
{
public:
	float                                        Distance;                                          // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Scale;                                             // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct DXM.TTLHateTarget
struct FTTLHateTarget
{
public:
	class AActor*                                Actor;                                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A90[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct DXM.TTLActionStateParam
struct FTTLActionStateParam
{
public:
	float                                        QuickBoostRatio;                                   // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveSissorsHorzRatio;                              // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveSissorsVertRatio;                              // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        QuickBoostEnableTMPRatio;                          // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GuardRatio;                                        // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SPMoveRatio;                                       // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightWeaponRatio;                                  // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftWeaponRatio;                                   // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShoulderWeaponRatio;                               // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpecialWeaponRatio;                                // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftRightWeaponRatio;                              // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AllWeaponRatio;                                    // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NoAttackRatio;                                     // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NoAttackRatioOnFriend;                             // 0x34(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLENBossSnakActionGenPoint
struct FTTLENBossSnakActionGenPoint
{
public:
	int32                                        FrontSocketIndex;                                  // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BackSocketIndex;                                   // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLENBossSnakPath
struct FTTLENBossSnakPath
{
public:
	class ATriggerBase*                          SwitchTrigger;                                     // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ATTLSplinePath*>                PathList;                                          // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLENBossGraveYard
struct FTTLENBossGraveYard
{
public:
	uint8                                        Pad_2A91[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLENBossferyContainerCounter
struct FTTLENBossferyContainerCounter
{
public:
	TSubclassOf<class ATTLSpawnContainerBaseCharacter> Container;                                         // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SpawnMax;                                          // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SpawnInGameMax;                                    // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A92[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLENBossFeryContainerPattern
struct FTTLENBossFeryContainerPattern
{
public:
	TArray<TSubclassOf<class ATTLSpawnContainerBaseCharacter>> Containers;                                        // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLENBossferyContainerTable
struct FTTLENBossferyContainerTable
{
public:
	int32                                        SpawnVP;                                           // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A93[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLENBossFeryContainerPattern> Patterns;                                          // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct DXM.TTLJammerControl
struct FTTLJammerControl
{
public:
	uint8                                        Pad_2A94[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        TargetActors;                                      // 0x30(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLAIBranchTimer
struct FTTLAIBranchTimer
{
public:
	uint8                                        Pad_2A95[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         TimerEnable;                                       // 0x4(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A96[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLAIFriendParam
struct FTTLAIFriendParam
{
public:
	enum class ETTLAIFriendParamType             Type;                                              // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A97[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Value;                                             // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct DXM.TTLWelcomContainer
struct FTTLWelcomContainer
{
public:
	uint8                                        Pad_2A98[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WaitTime;                                          // 0x4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A99[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLOuterEmoteInfo
struct FTTLOuterEmoteInfo
{
public:
	enum class ETTLEmoteType                     EmoteType;                                         // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A9A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  TaskTag;                                           // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          RemoveTaskTagAtCurrent;                            // 0x10(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x1 (0x1 - 0x0)
// ScriptStruct DXM.TTLInitSyncAnimalAnimInfo
struct FTTLInitSyncAnimalAnimInfo
{
public:
	uint8                                        Pad_2A9B[0x1];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct DXM.TTLGazeContainer
struct FTTLGazeContainer
{
public:
	uint8                                        Pad_2A9C[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Alpha;                                             // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IKPower;                                           // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxAlpha;                                          // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinAlpha;                                          // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               TargetLocation;                                    // 0x38(0xC)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A9D[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTL_LookAtIKContainer
struct FTTL_LookAtIKContainer
{
public:
	struct FVector                               LookAtLocation;                                    // 0x0(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Alpha;                                             // 0xC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLPathContainer
struct FTTLPathContainer
{
public:
	TArray<TWeakObjectPtr<class ATTLSplinePath>> PathArray;                                         // 0x0(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                        NearbyDistance;                                    // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A9E[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLTargetRouteContainer
struct FTTLTargetRouteContainer
{
public:
	TWeakObjectPtr<class AActor>                 TargetRef;                                         // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLAnimalInfoContainer
struct FTTLAnimalInfoContainer
{
public:
	struct FTTLPathContainer                     PathContainer;                                     // 0x0(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FTTLTargetRouteContainer              TargetRouteContainer;                              // 0x20(0x8)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLAnimationContainer
struct FTTLAnimationContainer
{
public:
	float                                        TransitionTime;                                    // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A9F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AnimBlendRatio;                                    // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETTLAnimalAnimType                CurrentAnimType;                                   // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETTLAnimalAnimType                NextAnimType;                                      // 0xD(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2AA0[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x90 (0x90 - 0x0)
// ScriptStruct DXM.TTLTaskContainer
struct FTTLTaskContainer
{
public:
	uint8                                        Pad_2AA1[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  Tag;                                               // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NextTaskTag;                                       // 0x10(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsOuterEmoteEvent;                                 // 0x18(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsRunRandomly;                                     // 0x19(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AA2[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RunRandomRatio;                                    // 0x1C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AA3[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLBrainThink*                        Think;                                             // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBrainBehavior*                     Behavior;                                          // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UTTLBrainThink>          ThinkObjClass;                                     // 0x38(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UTTLBrainBehavior>       BehaviorObjClass;                                  // 0x60(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AA4[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLArkGunChild
struct FTTLArkGunChild
{
public:
	class ATTLArkGunLaserBase*                   Laser;                                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                Target;                                            // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AA5[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct DXM.TTLRayInfo
struct FTTLRayInfo
{
public:
	uint8                                        Pad_2AA6[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct DXM.TTLArsenalArmMontageSettings
struct FTTLArsenalArmMontageSettings
{
public:
	class UAnimMontage*                          ReloadMontage;                                     // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          PurgeMontage;                                      // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          TakeMontage;                                       // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          UnFireMontage;                                     // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          PurgeCaughtWeaponMontage;                          // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          SniperSingleMontage;                               // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          SniperBothMontage;                                 // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct DXM.TTLArsenalArmOffsetParam
struct FTTLArsenalArmOffsetParam
{
public:
	uint8                                        Pad_2AA7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        OffsetAlphaPerSecond;                              // 0x4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AA8[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct DXM.TTLTransportInfo
struct FTTLTransportInfo
{
public:
	uint8                                        Pad_2AA9[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.FxParamBase
struct FFxParamBase
{
public:
	float                                        Scale;                                             // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Enabled;                                           // 0x4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AAA[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x10 - 0x8)
// ScriptStruct DXM.VfxParam
struct FVfxParam : public FFxParamBase
{
public:
	class UParticleSystem*                       Asset;                                             // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x60 (0x68 - 0x8)
// ScriptStruct DXM.SfxParam
struct FSfxParam : public FFxParamBase
{
public:
	class USoundAtomCue*                         AssetAtom;                                         // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USoundAtomCue>          AssetVFXPair;                                      // 0x10(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USoundAtomCue>          AssetVFXPairPlayer;                                // 0x38(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsLoopVFXPair;                                     // 0x60(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AAB[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLFxPlayback
struct FTTLFxPlayback
{
public:
	class UParticleSystemComponent*              VFX;                                               // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAtomComponent*                        SFX;                                               // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AAC[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x98 (0x98 - 0x0)
// ScriptStruct DXM.TTLFxParam
struct FTTLFxParam
{
public:
	struct FVfxParam                             VFX;                                               // 0x0(0x10)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FSfxParam                             SFX;                                               // 0x10(0x68)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        InternalPlayback;                                  // 0x78(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AAD[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x260 (0x260 - 0x0)
// ScriptStruct DXM.TTLDestroyedFXParam
struct FTTLDestroyedFXParam
{
public:
	struct FTTLFxParam                           FxHalfOneshot;                                     // 0x0(0x98)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxHalfLoop;                                        // 0x98(0x98)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxCompletelyOneshot;                               // 0x130(0x98)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxCompletelyLoop;                                  // 0x1C8(0x98)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLFXPlaybacks
struct FTTLFXPlaybacks
{
public:
	TArray<struct FTTLFxPlayback>                Playbacks;                                         // 0x0(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// 0x200 (0x200 - 0x0)
// ScriptStruct DXM.TTLDestroyablePartsFXParam
struct FTTLDestroyablePartsFXParam
{
public:
	uint8                                        Pad_2AAE[0x200];                                   // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLWeaponRackSlot
struct FTTLWeaponRackSlot
{
public:
	uint8                                        Pad_2AAF[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct DXM.TTLChangeEquipPartsStatus
struct FTTLChangeEquipPartsStatus
{
public:
	uint8                                        Pad_2AB0[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponent*                TargetMesh;                                        // 0x10(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AB1[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UMaterialInstanceDynamic*>      MaterialInstances;                                 // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct DXM.TTLRackParameter
struct FTTLRackParameter
{
public:
	bool                                         IsEquipped;                                        // 0x0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AB2[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  WeaponName;                                        // 0x8(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)
	class UObject*                               IconImage;                                         // 0x20(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentBulletNum;                                  // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalBulletNum;                                    // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxBulletNum;                                      // 0x30(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableBulletNum;                                 // 0x34(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableMagazine;                                  // 0x35(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEBulletCondition              ConditionCurrentValue;                             // 0x36(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEBulletCondition              ConditionMaxValue;                                 // 0x37(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEBulletCondition              ConditionSeparator;                                // 0x38(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsShowGauge;                                       // 0x39(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AB3[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GaugeValue;                                        // 0x3C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLWarningHUD
struct FTTLWarningHUD
{
public:
	bool                                         IsEnabled;                                         // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLWarningTypeForArsenalHUD      WarningType;                                       // 0x1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AB4[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UUserWidget*                           HUD;                                               // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LifeTime;                                          // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AB5[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLDamagedHUD
struct FTTLDamagedHUD
{
public:
	class UWidget*                               DamagedHUD;                                        // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLDamageInfo*                        DamageInfo;                                        // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLArsenalHUDCommandGoalItemParams
struct FTTLArsenalHUDCommandGoalItemParams
{
public:
	class FText                                  Title;                                             // 0x0(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	enum class ETTLResultIconType                Icon1;                                             // 0x18(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLResultIconType                Icon2;                                             // 0x19(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLGoalItemBackgroundType        BackgroundType;                                    // 0x1A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AB6[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct DXM.TTLArsenalHUDCommandParams
struct FTTLArsenalHUDCommandParams
{
public:
	class FText                                  Title;                                             // 0x0(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  Subtitle;                                          // 0x18(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<struct FTTLArsenalHUDCommandGoalItemParams> GoalItems;                                         // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	enum class ETTLResultIconType                AnimationSubGoalIcon;                              // 0x40(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AB7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        AnimationSubGoalIndex;                             // 0x44(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x10 - 0x8)
// ScriptStruct DXM.TTLHUDModeSettingsParamRow
struct FTTLHUDModeSettingsParamRow : public FTableRowBase
{
public:
	bool                                         ShowMainHUD;                                       // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowTsubazeriaiHUD;                                // 0x9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowInstrumentHUD;                                 // 0xA(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowSightHUD;                                      // 0xB(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AB8[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xA0 (0xA0 - 0x0)
// ScriptStruct DXM.TTLItemMarkerHUDPooledItem
struct FTTLItemMarkerHUDPooledItem
{
public:
	class UUserWidget*                           HUD;                                               // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TScriptInterface<class ITTLArsenalHUDMakerInterface> FieldItem;                                         // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AB9[0x68];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsInited;                                          // 0x80(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLArsenalItemMarkerHUD_DisplayType DisplayType;                                       // 0x81(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2ABA[0x1E];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLMakerIndexArray
struct FTTLMakerIndexArray
{
public:
	uint8                                        Pad_2ABB[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x58 (0x58 - 0x0)
// ScriptStruct DXM.TTLKnockOutParameter
struct FTTLKnockOutParameter
{
public:
	float                                        KnockOutSpeedLevel1;                               // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KnockOutSpeedLevel2;                               // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KnockOutSpeedLevel3;                               // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OuterKnockOutSpeedLevel1;                          // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OuterKnockOutSpeedLevel2;                          // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OuterKnockOutSpeedLevel3;                          // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OuterKnockOutLandingSpeedLevel1;                   // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OuterKnockOutLandingSpeedLevel2;                   // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OuterKnockOutLandingSpeedLevel3;                   // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KnockOutSpeedLevelTsubazeriai;                     // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GroundSlideSpeedThreshold;                         // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AirKnockOutFinalSpeed1;                            // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AirKnockOutFinalSpeed2;                            // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AirKnockOutFinalSpeed3;                            // 0x34(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AirKnockOutFinalSpeedTsubazeriai;                  // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AirFrictionOnKnockOut;                             // 0x3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OuterAirFrictionOnKnockOut;                        // 0x40(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GroundFrictionOnKnockOut;                          // 0x44(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OuterGroundFrictionOnKnockOut;                     // 0x48(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AirFrictionOnKnockOutEnd;                          // 0x4C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GroundFrictionOnKnockOutEnd;                       // 0x50(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GroundFrictionOnKnockOutSliding;                   // 0x54(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLMaterialInstanceDynamic
struct FTTLMaterialInstanceDynamic
{
public:
	class UMaterialInstanceDynamic*              Instance;                                          // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2ABC[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLWeaponMaterialInfo
struct FTTLWeaponMaterialInfo
{
public:
	uint8                                        Pad_2ABD[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponent*                WeaponMesh;                                        // 0x8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTTLMaterialInstanceDynamic>   WeaponMaterials;                                   // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct DXM.TTLPartsCutoffParam
struct FTTLPartsCutoffParam
{
public:
	uint8                                        Pad_2ABE[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x60 (0x60 - 0x0)
// ScriptStruct DXM.TTLPickUpItemInfo
struct FTTLPickUpItemInfo
{
public:
	class FText                                  ModelCode;                                         // 0x0(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  Name;                                              // 0x18(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                        MaxValue;                                          // 0x30(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsInfiniteValue;                                   // 0x34(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2ABF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UObject*                               Icon;                                              // 0x38(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  PartsTypeName;                                     // 0x40(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                         CanAddToChangeList;                                // 0x58(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsNew;                                             // 0x59(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AC0[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLRaderHUDCommand
struct FTTLRaderHUDCommand
{
public:
	enum class ETTLRaderHUDCommandKind           CommandKind;                                       // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AC1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DelaySeconds;                                      // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                TargetActor;                                       // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLAddToRaderReserveInfo
struct FTTLAddToRaderReserveInfo
{
public:
	class AActor*                                TargetActor;                                       // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLERaderTargetType              RaderTargetType;                                   // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsHighlight;                                       // 0x9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsCreatedDirection;                                // 0xA(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsAllyOnHighlight;                                 // 0xB(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsStayAfterBroken;                                 // 0xC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsIconView;                                        // 0xD(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AC2[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLRader3DInfo
struct FTTLRader3DInfo
{
public:
	class AActor*                                TargetActor;                                       // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                DirectionActor;                                    // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xB0 (0xB0 - 0x0)
// ScriptStruct DXM.TTLRaderInfo
struct FTTLRaderInfo
{
public:
	bool                                         IsVisible;                                         // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsHide;                                            // 0x1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnabledIntervalUpdate;                           // 0x2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnabledZAlpha;                                   // 0x3(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnabledRotation;                                 // 0x4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnabledRayCheck;                                 // 0x5(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLERaderObjectType              RaderType;                                         // 0x6(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsHighlight;                                       // 0x7(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsCreatedDirection;                                // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsAllyOnHighlight;                                 // 0x9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsStayAfterBroken;                                 // 0xA(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsIconView;                                        // 0xB(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AC3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                TargetActor;                                       // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLHUDRaderIcon*                      UserWidget;                                        // 0x18(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLERaderObjectType              LastRaderType;                                     // 0x20(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LastIsHighlight;                                   // 0x21(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LastIsAllyOnHighlight;                             // 0x22(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LastIsStayAfterBroken;                             // 0x23(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LastIsIconView;                                    // 0x24(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AC4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FWidgetTransform                      LastWidgetTransform;                               // 0x28(0x1C)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         IsLastRayCheckHit;                                 // 0x44(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AC5[0xB];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            LastTransform;                                     // 0x50(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               LastForwardVector;                                 // 0x80(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RayCheckTimerSeconds;                              // 0x8C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AC6[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct DXM.TTLAssembleCategoryMenuInitData
struct FTTLAssembleCategoryMenuInitData
{
public:
	class FText                                  MainBtnText;                                       // 0x0(0x18)(NativeAccessSpecifierPublic)
	TArray<class FText>                          SubBtnTextArray;                                   // 0x18(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<bool>                                 IsNew;                                             // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         IsGrayOut;                                         // 0x38(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AC7[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLAssistKeyPopUpItem
struct FTTLAssistKeyPopUpItem
{
public:
	class UUserWidget*                           Widget_ItemWidget;                                 // 0x0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           Widget_KeyWidget;                                  // 0x8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEInputType                    SelectAssistKey;                                   // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AC8[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x10 - 0x8)
// ScriptStruct DXM.TTLInitialOwnedAttachment
struct FTTLInitialOwnedAttachment : public FTableRowBase
{
public:
	int32                                        InitialOwnedNum;                                   // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AC9[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLOwnedAttachmentParam
struct FTTLOwnedAttachmentParam
{
public:
	class FName                                  AttachmentID;                                      // 0x0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        OwnedNum;                                          // 0x8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EquippedNum;                                       // 0xC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsNew;                                             // 0x10(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HaveOwned;                                         // 0x11(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2ACA[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xB0 (0xB8 - 0x8)
// ScriptStruct DXM.TTLAttachmentParamRow
struct FTTLAttachmentParamRow : public FTableRowBase
{
public:
	enum class ETTLEAttachmentType               Type;                                              // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEAttachmentCategory           AttachmentCategory;                                // 0x9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2ACB[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  DedicatedPartsID;                                  // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DedicatedPartsID2;                                 // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DedicatedPartsID3;                                 // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DedicatedPartsID4;                                 // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DedicatedPartsID5;                                 // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEAttachmentLevel              Level;                                             // 0x38(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2ACC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        EquipMoney;                                        // 0x3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SaleAmount;                                        // 0x40(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2ACD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                IconPath;                                          // 0x48(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          IconColor;                                         // 0x58(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IconUseGradation;                                  // 0x68(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEAttachmentParameterCategory  Parameter1Type;                                    // 0x69(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2ACE[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Parameter1AddValue;                                // 0x6C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Parameter1MultiplyValue;                           // 0x70(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEAttachmentParameterCategory  Parameter2Type;                                    // 0x74(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2ACF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Parameter2AddValue;                                // 0x78(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Parameter2MultiplyValue;                           // 0x7C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEAttachmentParameterCategory  Parameter3Type;                                    // 0x80(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AD0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Parameter3AddValue;                                // 0x84(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Parameter3MultiplyValue;                           // 0x88(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEAttachmentParameterCategory  Parameter4Type;                                    // 0x8C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AD1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Parameter4AddValue;                                // 0x90(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Parameter4MultiplyValue;                           // 0x94(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEAttachmentParameterCategory  Parameter5Type;                                    // 0x98(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AD2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Parameter5AddValue;                                // 0x9C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Parameter5MultiplyValue;                           // 0xA0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEAttachmentParameterCategory  Parameter6Type;                                    // 0xA4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AD3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Parameter6AddValue;                                // 0xA8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Parameter6MultiplyValue;                           // 0xAC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanNotSell;                                        // 0xB0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AD4[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct DXM.TTLAttachmentParameter
struct FTTLAttachmentParameter
{
public:
	uint8                                        Pad_2AD5[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLMissionSelectFirstMissionSelectInfo
struct FTTLMissionSelectFirstMissionSelectInfo
{
public:
	uint8                                        Pad_2AD6[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLFindRoomSetting
struct FTTLFindRoomSetting
{
public:
	enum class ETTLSessionSettingRoomType        SettingRoomType;                                   // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLSessionSettingMission         SettingMission;                                    // 0x1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AD7[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                SettingSelectMissionID;                            // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	enum class ETTLSessionSettingTarget          SettingTarget;                                     // 0x18(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLSessionSettingComment         SettingComment;                                    // 0x19(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLSessionSettingTimeLimit       SettingTimeLimit;                                  // 0x1A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AD8[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Regulation;                                        // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLAutoRoomSetting
struct FTTLAutoRoomSetting
{
public:
	struct FTTLFindRoomSetting                   RoomSetting;                                       // 0x0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        PlayerNum;                                         // 0x20(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AD9[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLOrderContainer
struct FTTLOrderContainer
{
public:
	TSoftClassPtr<class UTTLCommandOrder>        OrderClassPtr;                                     // 0x0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLUpdateContainer
struct FTTLUpdateContainer
{
public:
	uint8                                        Pad_2ADA[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLUpdater*                           Updater;                                           // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct DXM.TTLSceneAutomationContainer
struct FTTLSceneAutomationContainer
{
public:
	enum class ETTLMenuSceneType                 SceneType;                                         // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2ADB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class UTTLAutoBehaviour>       BehaviourClass;                                    // 0x8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLScrollTargetInfo
struct FTTLScrollTargetInfo
{
public:
	class FString                                Namespace;                                         // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Key;                                               // 0x10(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Comment;                                           // 0x20(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLAutomationMissionInfo
struct FTTLAutomationMissionInfo
{
public:
	uint8                                        Pad_2ADC[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLInputPadContainer
struct FTTLInputPadContainer
{
public:
	enum class ETTLEInputType                    InputPadType;                                      // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2ADD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AxisValue;                                         // 0x4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLCommandInputContainer
struct FTTLCommandInputContainer
{
public:
	enum class ETTLCommandInputType              InputType;                                         // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEActionType                   ActionType;                                        // 0x1(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2ADE[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLInputPadContainer                 InputPad;                                          // 0x4(0x8)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         IsContinueInput;                                   // 0xC(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2ADF[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x60 (0x60 - 0x0)
// ScriptStruct DXM.TTLAutoTextInputInfo
struct FTTLAutoTextInputInfo
{
public:
	uint8                                        Pad_2AE0[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLMaterialInstanceIdentifier
struct FTTLMaterialInstanceIdentifier
{
public:
	class USkeletalMeshComponent*                SkeletalMesh;                                      // 0x0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              Material;                                          // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AE1[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLBaseBossBallActionPerParam
struct FTTLBaseBossBallActionPerParam
{
public:
	enum class ETTLBaseBossBallAIActNo           ActionNo;                                          // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AE2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ExecutePercent;                                    // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLBaseBossBallFarTargetActionParam
struct FTTLBaseBossBallFarTargetActionParam
{
public:
	bool                                         bEnable;                                           // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AE3[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLBaseBossBallActionPerParam> ExecuteActions;                                    // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        IntervalTime;                                      // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AE4[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLBaseBossBallCtrlDmgReact
struct FTTLBaseBossBallCtrlDmgReact
{
public:
	float                                        VpRate;                                            // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsCreateAvatar;                                    // 0x4(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        CreateAvatarCount;                                 // 0x5(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AE5[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLENBossBallMultiHitInfo
struct FTTLENBossBallMultiHitInfo
{
public:
	class AActor*                                Actor;                                             // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HitTime;                                           // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AE6[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x2C (0x2C - 0x0)
// ScriptStruct DXM.TTLBaseBossBallRandomMove2Param
struct FTTLBaseBossBallRandomMove2Param
{
public:
	bool                                         bEnable;                                           // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AE7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MoveSpeed;                                         // 0x4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveMinDistance;                                   // 0x8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveMaxDistance;                                   // 0xC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveHeight;                                        // 0x10(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MoveCurveMax;                                      // 0x14(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MoveCurveMin;                                      // 0x18(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EEasingFunc                       EaseFunc;                                          // 0x1C(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AE8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        EaseExp;                                           // 0x20(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AfterMoveWaitTimeMin;                              // 0x24(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AfterMoveWaitTimeMax;                              // 0x28(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct DXM.TTLBaseBossBallTrackingQuickMoveParam
struct FTTLBaseBossBallTrackingQuickMoveParam
{
public:
	float                                        MoveTime;                                          // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveSpeed;                                         // 0x4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinDistance;                                       // 0x8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x648 (0x648 - 0x0)
// ScriptStruct DXM.TTLFirearmInfo
struct FTTLFirearmInfo
{
public:
	enum class ETTLWeaponType                    WeaponType;                                        // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AE9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  WeaponParameterName;                               // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLProjectileBase>        BulletClass;                                       // 0x10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           MuzzleOneshotEffectResource;                       // 0x18(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           MuzzleLoopEffectResource;                          // 0xB0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           ShootLoopEffectResource;                           // 0x148(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           UnexplodedLoopEffectResource;                      // 0x1E0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           MuzzleFinishEffectResource;                        // 0x278(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           CenterChargeLoopEffectResource;                    // 0x310(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           CenterMaxChargeEffectResource;                     // 0x3A8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  CenterEffectAttachSocketName;                      // 0x440(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           MuzzleChargeLoopEffectResource;                    // 0x448(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           MuzzleMaxChargeLoopEffectResource;                 // 0x4E0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class FName>                          MuzzleSocketName;                                  // 0x578(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        DurationTime;                                      // 0x588(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IntervalTime;                                      // 0x58C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OverrideRapidSpeed;                                // 0x590(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OutRangeTolerance;                                 // 0x594(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLLongRangeWeaponParameter*          WeaponParam;                                       // 0x598(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AEA[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           ArkGunChargeEffectResource;                        // 0x5A8(0x98)(ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  ArkGunChargeEffectSocketName;                      // 0x640(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x680 (0x680 - 0x0)
// ScriptStruct DXM.TTLBaseBossBallAllDirLaserParam
struct FTTLBaseBossBallAllDirLaserParam
{
public:
	bool                                         bEnable;                                           // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AEB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFirearmInfo                       FirearmInfo;                                       // 0x8(0x648)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        ShootRangeMin;                                     // 0x650(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootRangeMax;                                     // 0x654(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SignTime;                                          // 0x658(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ActionTime;                                        // 0x65C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LaserHormingSpeed;                                 // 0x660(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RandomLaserRotAngle;                               // 0x664(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RandomLaserRotRange;                               // 0x668(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RandomLaserSameTargetCnt;                          // 0x66C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableRotateBody;                                 // 0x670(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AEC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RotateAngle;                                       // 0x674(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotateAngle2ndRate;                                // 0x678(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotageAngleAccelTime;                              // 0x67C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLBaseBossBallMovieSlashPtrn
struct FTTLBaseBossBallMovieSlashPtrn
{
public:
	TArray<enum class ETTLBaseBossBallMovieSlashMoveDir> DirPatterns;                                       // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct DXM.TTLBaseBossBallMovieSlashParam
struct FTTLBaseBossBallMovieSlashParam
{
public:
	bool                                         bEnable;                                           // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AED[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ATTLBaseBossBallBladeActor> BladeActorClass;                                   // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BladeMaxCount;                                     // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BladeMoveInitialSpeed;                             // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BladeMoveSpeed;                                    // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BladeMoveToMaxTimeSec;                             // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SignTime;                                          // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MoveVertexCount;                                   // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTTLBaseBossBallMovieSlashPtrn> MovePatterns;                                      // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        SlashIntervalTime;                                 // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StartSlashPrevVertexCcount;                        // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeaponParamName;                                   // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HitIntervalTime;                                   // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AttackCollideLength;                               // 0x4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AttackCollideThickSize;                            // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HormingMaxAngle;                                   // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootRangeMax;                                     // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootRangeMin;                                     // 0x5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x4 (0x4 - 0x0)
// ScriptStruct DXM.TTLBaseBossBallActionCommon
struct FTTLBaseBossBallActionCommon
{
public:
	float                                        SingTime;                                          // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xA0 (0xA0 - 0x0)
// ScriptStruct DXM.TTLBaseBossBallDamageS
struct FTTLBaseBossBallDamageS
{
public:
	struct FTTLFxParam                           DamageSResource;                                   // 0x0(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  AttachNodeName;                                    // 0x98(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLBaseBossBallDamageL
struct FTTLBaseBossBallDamageL
{
public:
	float                                        MoveTime;                                          // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveSpeed;                                         // 0x4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpMaxHeight;                                     // 0x8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EEasingFunc                       MoveEaseFunc;                                      // 0xC(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AEE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MoveEaseExp;                                       // 0x10(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EEasingFunc                       JumpEaseFunc;                                      // 0x14(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AEF[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xB8 (0xB8 - 0x0)
// ScriptStruct DXM.TTLBaseBossBallAngry
struct FTTLBaseBossBallAngry
{
public:
	float                                        ChangeVPBoarderPer;                                // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AF0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           ExecResource;                                      // 0x8(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  AttachNodeName;                                    // 0xA0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EyeSpeedRate;                                      // 0xA8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               EyeColor;                                          // 0xAC(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLBossBallRepresentedDamage
struct FTTLBossBallRepresentedDamage
{
public:
	float                                        ChangeVPBoarderPer;                                // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChangeRoughness;                                   // 0x4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLBossBallProgEmissionAction
struct FTTLBossBallProgEmissionAction
{
public:
	enum class ETTLBaseBossBallAIActNo           ActionNo;                                          // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossBallProgEmissionColorTypes EmissionType;                                      // 0x1(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AF1[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint32                                       SpeedTypeId;                                       // 0x4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLBossBallProgEmissionSpeedPattern
struct FTTLBossBallProgEmissionSpeedPattern
{
public:
	uint32                                       SpeedTypeId;                                       // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Speed;                                             // 0x4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct DXM.TTLBossBallProgEmissionColorPattern
struct FTTLBossBallProgEmissionColorPattern
{
public:
	enum class ETTLBaseBossBallProgEmissionColorTypes EmissionType;                                      // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AF2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          EmissionColor;                                     // 0x4(0x10)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x2 (0x2 - 0x0)
// ScriptStruct DXM.TTLBaseBossBallActionMoveTable
struct FTTLBaseBossBallActionMoveTable
{
public:
	enum class ETTLBaseBossBallAIActNo           ActionNo;                                          // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossBallMoveCategory      MoveCategory;                                      // 0x1(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLBaseBossBallActionMoveLevel
struct FTTLBaseBossBallActionMoveLevel
{
public:
	TArray<struct FTTLBaseBossBallActionMoveTable> ActionMoveTable;                                   // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLbaseBossBallRandomMoveBaseParams
struct FTTLbaseBossBallRandomMoveBaseParams
{
public:
	enum class EEasingFunc                       EaseFunc;                                          // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AF3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        EaseExp;                                           // 0x4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLBaseBossBallMoveCenterParams
struct FTTLBaseBossBallMoveCenterParams
{
public:
	struct FVector                               StageCenterWorldPos;                               // 0x0(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveStartMinDistance;                              // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct DXM.TTLBaseBossBallMoveLevel
struct FTTLBaseBossBallMoveLevel
{
public:
	float                                        MoveTime;                                          // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TrackingMoveSpeed;                                 // 0x4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TrackingMoveMinDistance;                           // 0x8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RandomMoveSpeed;                                   // 0xC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RandomMoveMinDistance;                             // 0x10(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RandomMoveMaxDistance;                             // 0x14(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RandomMoveHeight;                                  // 0x18(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RandomMovePer;                                     // 0x1C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RandomMoveCurveMax;                                // 0x20(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RandomMoveCurveMin;                                // 0x24(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveZRotationAngle;                                // 0x28(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StayAwayMoveCenterMinDistance;                     // 0x2C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StayAwayMoveReachTargetMinDistance;                // 0x30(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StayAwayMoveSpeed;                                 // 0x34(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AdjustHeightMoveSpeed;                             // 0x38(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AdjustHeightMoveReachTargetMinDistance;            // 0x3C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLBaseBossBallCreateAvatar
struct FTTLBaseBossBallCreateAvatar
{
public:
	float                                        CreateOffsetDistance;                              // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CreateIntervalTime;                                // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLBaseBossBallPawn>      AvatarClass;                                       // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DispModelTime;                                     // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AF4[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLBaseBossBallTrctLevel
struct FTTLBaseBossBallTrctLevel
{
public:
	TSubclassOf<class ATTLBaseBossLastTrctActor> ActorClass;                                        // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootRangeMax;                                     // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootRangeMin;                                     // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ActionTime;                                        // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimTime;                                           // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimLimitDegree;                                    // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CencelHpDecValue;                                  // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TrctFailSafeCancelTime;                            // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AF5[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x660 (0x660 - 0x0)
// ScriptStruct DXM.TTLBaseBossBallRangeGrenadeLevel
struct FTTLBaseBossBallRangeGrenadeLevel
{
public:
	struct FTTLFirearmInfo                       FirearmInfo;                                       // 0x0(0x648)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        ShootRangeMax;                                     // 0x648(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootRangeMin;                                     // 0x64C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ActionTime;                                        // 0x650(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SignActionTime;                                    // 0x654(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLCatchableActorBase>    GrenadeClass;                                      // 0x658(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x6F8 (0x6F8 - 0x0)
// ScriptStruct DXM.TTLBaseBossBallRangeArkGunLevel
struct FTTLBaseBossBallRangeArkGunLevel
{
public:
	struct FTTLFirearmInfo                       FirearmInfo;                                       // 0x0(0x648)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        ShootRangeMax;                                     // 0x648(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootRangeMin;                                     // 0x64C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ActionTime;                                        // 0x650(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AF6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           ArkGunChargeEffectResource;                        // 0x658(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  ArkGunChargeEffectSocketName;                      // 0x6F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x658 (0x658 - 0x0)
// ScriptStruct DXM.TTLBaseBossBallRangeCannonLevel
struct FTTLBaseBossBallRangeCannonLevel
{
public:
	struct FTTLFirearmInfo                       FirearmInfo;                                       // 0x0(0x648)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        ShootRangeMax;                                     // 0x648(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootRangeMin;                                     // 0x64C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ActionTime;                                        // 0x650(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AF7[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLBaseBossBallWholeBarrierLevel
struct FTTLBaseBossBallWholeBarrierLevel
{
public:
	float                                        ShootRangeMax;                                     // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootRangeMin;                                     // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WaitBreakNormalBarrierTime;                        // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AF8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  WeaponParameterName;                               // 0x10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HitIntervalTime;                                   // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HitEffectScale;                                    // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PushOutSpeed;                                      // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AF9[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLBaseBossBallBigLaserLevel
struct FTTLBaseBossBallBigLaserLevel
{
public:
	TSubclassOf<class ATTLBaseBossBallBigLaserShooter> BigLaserClass;                                     // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootRangeMax;                                     // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootRangeMin;                                     // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ActionTime;                                        // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimTime;                                           // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimLimitDegree;                                    // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AFA[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x658 (0x658 - 0x0)
// ScriptStruct DXM.TTLBaseBossBallMissileLevel
struct FTTLBaseBossBallMissileLevel
{
public:
	struct FTTLFirearmInfo                       FirearmInfo;                                       // 0x0(0x648)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        ShootRangeMax;                                     // 0x648(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootRangeMin;                                     // 0x64C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ActionTime;                                        // 0x650(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SignActionTime;                                    // 0x654(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x650 (0x650 - 0x0)
// ScriptStruct DXM.TTLBaseBossBallNormalLaserLevel
struct FTTLBaseBossBallNormalLaserLevel
{
public:
	struct FTTLFirearmInfo                       FirearmInfo;                                       // 0x0(0x648)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        ShootRangeMax;                                     // 0x648(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootRangeMin;                                     // 0x64C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x650 (0x650 - 0x0)
// ScriptStruct DXM.TTLBaseBossBallBazookaLevel
struct FTTLBaseBossBallBazookaLevel
{
public:
	struct FTTLFirearmInfo                       FirearmInfo;                                       // 0x0(0x648)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        ShootRangeMax;                                     // 0x648(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootRangeMin;                                     // 0x64C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x650 (0x650 - 0x0)
// ScriptStruct DXM.TTLBaseBossBallShotgunLevel
struct FTTLBaseBossBallShotgunLevel
{
public:
	struct FTTLFirearmInfo                       ShotgunInfo;                                       // 0x0(0x648)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        ShootRangeMax;                                     // 0x648(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootRangeMin;                                     // 0x64C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLFxPlaybacksForFishBoss
struct FTTLFxPlaybacksForFishBoss
{
public:
	TArray<struct FTTLFxPlayback>                Playbacks;                                         // 0x0(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct DXM.TTLBaseBossLastAIActSetInfo
struct FTTLBaseBossLastAIActSetInfo
{
public:
	enum class ETTLBaseBossLastAIActSet          ActionSet;                                         // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AFB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ActionLevel;                                       // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Priority;                                          // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ContinuousPriority;                                // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ConfirmedTurn;                                     // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AFC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  Comment;                                           // 0x18(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AFD[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLBaseBossLastAITractorBeamLevel
struct FTTLBaseBossLastAITractorBeamLevel
{
public:
	int32                                        MoveLevel;                                         // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WaitTime;                                          // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TractorBeamLevel;                                  // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AfterWaitTime;                                     // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Comment;                                           // 0x10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLBaseBossLastAIDawnHammerLevel
struct FTTLBaseBossLastAIDawnHammerLevel
{
public:
	int32                                        MoveLevel;                                         // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WaitTime;                                          // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DawnHammerLevel;                                   // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AfterWaitTime;                                     // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Comment;                                           // 0x10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLBaseBossLastAIRushLevel
struct FTTLBaseBossLastAIRushLevel
{
public:
	int32                                        MoveLevel;                                         // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WaitTime;                                          // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RushLevel;                                         // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AfterWaitTime;                                     // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Comment;                                           // 0x10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct DXM.TTLBaseBossLastAIMoveLevel
struct FTTLBaseBossLastAIMoveLevel
{
public:
	int32                                        MoveLevel;                                         // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveWraparoundRate;                                // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveIntervalTime;                                  // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveTotalTime;                                     // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BodyShootLevel;                                    // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossLastFnelAIAct         FunnelAction;                                      // 0x14(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AFE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        FunnelShootLevel;                                  // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FunnelNum;                                         // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AfterWaitTime;                                     // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AFF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  Comment;                                           // 0x28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLBaseBossLastFnelExtraThickLaserHitInfo
struct FTTLBaseBossLastFnelExtraThickLaserHitInfo
{
public:
	class ATTLCharacterCommon*                   Player;                                            // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HitTime;                                           // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B00[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x660 (0x660 - 0x0)
// ScriptStruct DXM.TTLBaseBossLastFnelShootLevel
struct FTTLBaseBossLastFnelShootLevel
{
public:
	struct FTTLFirearmInfo                       ShootInfo;                                         // 0x0(0x648)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        DeviationShootingRate;                             // 0x648(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DeviationShootingTargetSpeedLimit;                 // 0x64C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DelayTime;                                         // 0x650(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CollaborationIntervalTime;                         // 0x654(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NonFiringWaitTime;                                 // 0x658(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B01[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x690 (0x690 - 0x0)
// ScriptStruct DXM.TTLBaseBossLastFnelDawnHammerLevel
struct FTTLBaseBossLastFnelDawnHammerLevel
{
public:
	float                                        UnionDelayTime;                                    // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UnionDistance;                                     // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UnionTime;                                         // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FloweringDelayTime;                                // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FloweringPitch;                                    // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FloweringTime;                                     // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExtraThickLaser_Distance;                          // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExtraThickLaser_Radius;                            // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExtraThickLaser_ChargeTime;                        // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExtraThickLaser_NoticeLaserSpeed;                  // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExtraThickLaser_NoticeLaserTime;                   // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExtraThickLaser_ShootEffectTime;                   // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExtraThickLaser_IrradiationSpeed;                  // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExtraThickLaser_IrradiationTime;                   // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExtraThickLaser_EndTime;                           // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExtraThickLaser_PushOutSpeed;                      // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ExtraThickLaser_ParamName;                         // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFirearmInfo                       ChargeLaser_ShootInfo;                             // 0x48(0x648)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct DXM.TTLBaseBossLastFnelTurnLevel
struct FTTLBaseBossLastFnelTurnLevel
{
public:
	float                                        Move_Speed;                                        // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Shoot_Speed;                                       // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Laser_SpeedRate;                                   // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1C (0x1C - 0x0)
// ScriptStruct DXM.TTLBaseBossLastFnelMoveLevel
struct FTTLBaseBossLastFnelMoveLevel
{
public:
	float                                        MaxSpeed;                                          // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AccelerationTime;                                  // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DecelerationTime;                                  // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootingMaxSpeed;                                  // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootingDistance;                                  // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             ShootingPitchRange;                                // 0x14(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x658 (0x658 - 0x0)
// ScriptStruct DXM.TTLBaseBossLastShootLevel
struct FTTLBaseBossLastShootLevel
{
public:
	struct FTTLFirearmInfo                       ShootInfo;                                         // 0x0(0x648)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        DeviationShootingRate;                             // 0x648(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DeviationShootingTargetSpeedLimit;                 // 0x64C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DelayTime;                                         // 0x650(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B02[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct DXM.TTLBaseBossLastDawnHammerLevel
struct FTTLBaseBossLastDawnHammerLevel
{
public:
	float                                        MaxMoveSpeed;                                      // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveAccelerationTime;                              // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveDecelerationTime;                              // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxTurnSpeed;                                      // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootingMoveSpeedRate;                             // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootingTurnSpeedRate;                             // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FunnelCannonNum;                                   // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FunnelLevel;                                       // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FunnelRollSpeed;                                   // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FirstShootTiming;                                  // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SecondShootTiming;                                 // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootInterval;                                     // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ShootCount;                                        // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AfterFixTime;                                      // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLBaseBossLastRushLevel
struct FTTLBaseBossLastRushLevel
{
public:
	float                                        MaxMoveSpeed;                                      // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveAccelerationTime;                              // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveDecelerationTime;                              // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnSpeed;                                         // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxMoveTime;                                       // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxContinuousNum;                                  // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinContinuousNum;                                  // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IntervalTime;                                      // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ParamName;                                         // 0x20(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLBaseBossLastTractorBeamLevel
struct FTTLBaseBossLastTractorBeamLevel
{
public:
	float                                        TurnSpeed;                                         // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InsideTurnSpeedRate;                               // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BeamLevel;                                         // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RecoveryFunnelVP;                                  // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLBaseBossLastTurnLevel
struct FTTLBaseBossLastTurnLevel
{
public:
	float                                        MaxSpeed;                                          // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Laser_SpeedRate;                                   // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             PitchRange;                                        // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLBaseBossLastMoveLevel
struct FTTLBaseBossLastMoveLevel
{
public:
	float                                        MaxSpeed;                                          // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AccelerationTime;                                  // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DecelerationTime;                                  // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Distance;                                          // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxTime;                                           // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             PitchRange;                                        // 0x14(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossLastPwnMoveType       Type;                                              // 0x1C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B03[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLBaseBossLastFunnelTargetInfo
struct FTTLBaseBossLastFunnelTargetInfo
{
public:
	class AActor*                                TargetActor;                                       // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ATTLBaseBossLastFnelPawn*>      SiegeList;                                         // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	float                                        CollaborationIntervalTimer;                        // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B04[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct DXM.TTLBaseBossLastTrctTarget
struct FTTLBaseBossLastTrctTarget
{
public:
	class ATTLCharacterCommon*                   TargetCharacter;                                   // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLWeaponBase*                        TargetWeaponActor;                                 // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossLastTrctWpnEqp        TargetWeaponEquipType;                             // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B05[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TractionSpeed;                                     // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TractionTime;                                      // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B06[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlayback                        WeaponTractionEffect;                              // 0x20(0x18)(Edit, BlueprintVisible, EditConst, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	int32                                        State;                                             // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Flags;                                             // 0x3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Handle;                                            // 0x40(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B07[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct DXM.TTLBaseBossLastTrctLevel
struct FTTLBaseBossLastTrctLevel
{
public:
	float                                        OccurrenceTime;                                    // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Distance;                                          // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Angle;                                             // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NearTractionPower;                                 // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FarTractionPower;                                  // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PullTractionRate;                                  // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CenterTractionRate;                                // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EdgeTractionRate;                                  // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TractionAccelerationTime;                          // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EstablishmentCaptureWeaponTime;                    // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EstablishmentCaptureWeaponDistance;                // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TractionTime;                                      // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FailedTractionTime;                                // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WeaponTractionSpeed;                               // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLBaseBossOgreBackHandBlowLevel
struct FTTLBaseBossOgreBackHandBlowLevel
{
public:
	class FName                                  ParamName;                                         // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnSpeed;                                         // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HomingSpeed;                                       // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLBaseBossOgreSwordStampLevel
struct FTTLBaseBossOgreSwordStampLevel
{
public:
	class FName                                  SwordParamName;                                    // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WaveParamName;                                     // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StanceTime;                                        // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AfterTime;                                         // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShockWaveLength;                                   // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShockWaveHeight;                                   // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShockWaveTime;                                     // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B08[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct DXM.TTLBaseBossOgreSwordSlashLevel
struct FTTLBaseBossOgreSwordSlashLevel
{
public:
	class FName                                  ParamName;                                         // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StanceTime;                                        // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AfterTime;                                         // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CollideRadius;                                     // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnSpeed;                                         // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HomingSpeed;                                       // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B09[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ATTLOgreSwordSlashWave>    SlashWaveClass;                                    // 0x20(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SlashWaveScale;                                    // 0x28(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B0A[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLBaseBossOgreGuardLevel
struct FTTLBaseBossOgreGuardLevel
{
public:
	float                                        GuardTime;                                         // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TakeDamageTime;                                    // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x670 (0x670 - 0x0)
// ScriptStruct DXM.TTLBaseBossOgreMissileLevel
struct FTTLBaseBossOgreMissileLevel
{
public:
	struct FTTLFirearmInfo                       MissileInfo;                                       // 0x0(0x648)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossOgreChrMissile        Type;                                              // 0x648(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B0B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StanceFixTime;                                     // 0x64C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ShootNum;                                          // 0x650(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootIntervalTime;                                 // 0x654(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AfterFixTime;                                      // 0x658(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LockOnRange;                                       // 0x65C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LockonMinRange;                                    // 0x660(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImpactedRadius;                                    // 0x664(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ActionIntervalTime;                                // 0x668(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B0C[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLBaseBossOgreTackleLevel
struct FTTLBaseBossOgreTackleLevel
{
public:
	class FName                                  ParamName;                                         // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StanceTime;                                        // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSpeed;                                          // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AccelerateTime;                                    // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DecelerateTime;                                    // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Range;                                             // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnSpeed;                                         // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLBaseBossOgreKickLevel
struct FTTLBaseBossOgreKickLevel
{
public:
	enum class ETTLBaseBossOgreChrKick           Type;                                              // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B0D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ParamName;                                         // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StanceTime;                                        // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AfterTime;                                         // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CollideRadius;                                     // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnSpeed;                                         // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLBaseBossOgreGraspingLevel
struct FTTLBaseBossOgreGraspingLevel
{
public:
	class FName                                  ParamName;                                         // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HomingSpeed;                                       // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FailureFixTime;                                    // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLBaseBossOgreJumpLevel
struct FTTLBaseBossOgreJumpLevel
{
public:
	class FName                                  BodyAttackParamName;                               // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LegAttackParamName;                                // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HorizonSpeed;                                      // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GravityScale;                                      // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxLength;                                         // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnSpeed;                                         // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AfterTime;                                         // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B0E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLBaseBossOgreWalkLevel
struct FTTLBaseBossOgreWalkLevel
{
public:
	float                                        TurnSpeed;                                         // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetDistance;                                    // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct DXM.TTLBaseBossSpedAIApproachInfo
struct FTTLBaseBossSpedAIApproachInfo
{
public:
	enum class ETTLBaseBossSpedAIApproach        Action;                                            // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B0F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Level;                                             // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Priority;                                          // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLBaseBossSpedAIMirageInfo
struct FTTLBaseBossSpedAIMirageInfo
{
public:
	int32                                        Level;                                             // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsAngerCheck;                                      // 0x4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B10[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HPRate;                                            // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B11[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x58 (0x58 - 0x0)
// ScriptStruct DXM.TTLBaseBossSpedAIPhaseInfo
struct FTTLBaseBossSpedAIPhaseInfo
{
public:
	float                                        HPRate;                                            // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MoveLevel;                                         // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SteepTurnLevel;                                    // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B12[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLBaseBossSpedAIApproachInfo> ApproachInfoList;                                  // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        OutrangeWraparoundLevel;                           // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OutrangeWraparoundRate;                            // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MachineGunLevel;                                   // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MissileLevel;                                      // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MissileRate;                                       // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BarrelrollWraparoundLevel;                         // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BarrelrollWraparoundRate;                          // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B13[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLBaseBossSpedAIMirageInfo>  MirageInfoList;                                    // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        BombingLevel;                                      // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B14[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x660 (0x660 - 0x0)
// ScriptStruct DXM.TTLBaseBossSpedBombingLevel
struct FTTLBaseBossSpedBombingLevel
{
public:
	struct FTTLFirearmInfo                       ShootInfo;                                         // 0x0(0x648)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        MaxSpeed;                                          // 0x648(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        QuarterRollTime;                                   // 0x64C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HatchSpeedRate;                                    // 0x650(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BombingSpace;                                      // 0x654(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BombingRange;                                      // 0x658(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B15[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLBaseBossSpedMirageLevel
struct FTTLBaseBossSpedMirageLevel
{
public:
	int32                                        Count;                                             // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PassingLevel;                                      // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LifeTime;                                          // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Hp;                                                // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x678 (0x678 - 0x0)
// ScriptStruct DXM.TTLBaseBossSpedFloatingMineLevel
struct FTTLBaseBossSpedFloatingMineLevel
{
public:
	struct FTTLFirearmInfo                       ShootInfo;                                         // 0x0(0x648)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        StartDelayTime;                                    // 0x648(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootIntervalTime;                                 // 0x64C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AfterTime;                                         // 0x650(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ShootNum;                                          // 0x654(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HatchSpeedRate;                                    // 0x658(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootAngleRange;                                   // 0x65C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootSpeed;                                        // 0x660(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             ShootLengthRange;                                  // 0x664(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootDecelerationTime;                             // 0x66C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootSize;                                         // 0x670(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSize;                                           // 0x674(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x670 (0x670 - 0x0)
// ScriptStruct DXM.TTLBaseBossSpedMissileLevel
struct FTTLBaseBossSpedMissileLevel
{
public:
	struct FTTLFirearmInfo                       ShootInfo;                                         // 0x0(0x648)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	int32                                        ShootNum;                                          // 0x648(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReadyTime;                                         // 0x64C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IntervalTime;                                      // 0x650(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AfterTime;                                         // 0x654(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HatchSpeedRate;                                    // 0x658(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveSpeed;                                         // 0x65C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             ShootAngleRange;                                   // 0x660(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             ShootSpeedRange;                                   // 0x668(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x650 (0x650 - 0x0)
// ScriptStruct DXM.TTLBaseBossSpedMachineGunLevel
struct FTTLBaseBossSpedMachineGunLevel
{
public:
	struct FTTLFirearmInfo                       ShootInfo;                                         // 0x0(0x648)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        DeviationShootingRate;                             // 0x648(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DeviationShootingTargetSpeedLimit;                 // 0x64C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct DXM.TTLBaseBossSpedRushLevel
struct FTTLBaseBossSpedRushLevel
{
public:
	float                                        MaxSpeed;                                          // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnSpeed;                                         // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CollideRadius;                                     // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLBaseBossSpedBarrelrollWraparoundLevel
struct FTTLBaseBossSpedBarrelrollWraparoundLevel
{
public:
	float                                        PassingDistance;                                   // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FinishRange;                                       // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Radius;                                            // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Time;                                              // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnHomingSpeed;                                   // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AcceDeceTime;                                      // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLBaseBossSpedOutrangeWraparoundLevel
struct FTTLBaseBossSpedOutrangeWraparoundLevel
{
public:
	float                                        Range;                                             // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Angle;                                             // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct DXM.TTLBaseBossSpedSteepTurnLevel
struct FTTLBaseBossSpedSteepTurnLevel
{
public:
	float                                        Radius;                                            // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Time;                                              // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DecelerationTime;                                  // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct DXM.TTLBaseBossSpedPassingLevel
struct FTTLBaseBossSpedPassingLevel
{
public:
	float                                        Distance;                                          // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FloatingMineLevel;                                 // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FloatingMineRate;                                  // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct DXM.TTLBaseBossSpedMoveLevel
struct FTTLBaseBossSpedMoveLevel
{
public:
	float                                        MaxSpeed;                                          // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxLeavingSpeed;                                   // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AccelerationTime;                                  // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DecelerationTime;                                  // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnSpeed;                                         // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxRollSpeed;                                      // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RollAccelerationTime;                              // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ApproachingActionDistance;                         // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeavingActionDistance;                             // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShortRangeTurnDistance;                            // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LongRangeTurnDistance;                             // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShortRangeTurnRate;                                // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLBaseBossTrinAICtrlActionInfo
struct FTTLBaseBossTrinAICtrlActionInfo
{
public:
	enum class ETTLBaseBossTrinAICtrlAction      Action;                                            // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B16[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CheckLevel;                                        // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ExecuteLevel;                                      // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ContainerGroupNo;                                  // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Priority;                                          // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ContinuousPriority;                                // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AfterNonAttackTime;                                // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B17[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  Comment;                                           // 0x20(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLBaseBossTrinAICtrlMissileInfo
struct FTTLBaseBossTrinAICtrlMissileInfo
{
public:
	int32                                        CheckLevel;                                        // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ExecuteLevel;                                      // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AfterNonsiderationTime;                            // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B18[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  Comment;                                           // 0x10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct DXM.TTLBaseBossTrinAICtrlPhaseInfo
struct FTTLBaseBossTrinAICtrlPhaseInfo
{
public:
	float                                        TransitionVPRate;                                  // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossTrinAICtrlPhaseTransitionAction TransitionAction;                                  // 0x4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B19[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TransitionFixTime;                                 // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B1A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLBaseBossTrinAICtrlActionInfo> ActionInfoList;                                    // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FTTLBaseBossTrinAICtrlMissileInfo     MissileInfo;                                       // 0x20(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	int32                                        ExecuteMoveLevel;                                  // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveDistance;                                      // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxMoveTime;                                       // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AfterMoveWaitTime;                                 // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxExposureContainerActorNum;                      // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B1B[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLBaseBossTrinHitInfo
struct FTTLBaseBossTrinHitInfo
{
public:
	uint8                                        Pad_2B1C[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x660 (0x660 - 0x0)
// ScriptStruct DXM.TTLBaseBossTrinMissileLevel
struct FTTLBaseBossTrinMissileLevel
{
public:
	struct FTTLFirearmInfo                       MissileInfo;                                       // 0x0(0x648)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        ReadyTime;                                         // 0x648(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ShootNum;                                          // 0x64C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootIntervalTime;                                 // 0x650(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AfterTime;                                         // 0x654(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsExposureWeakPoint;                               // 0x658(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B1D[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct DXM.TTLBaseBossTrinRushLevel
struct FTTLBaseBossTrinRushLevel
{
public:
	class FName                                  ParamName;                                         // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReadyTime;                                         // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReadyTurnSpeed;                                    // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSpeed;                                          // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AccelerateTime;                                    // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnSpeed;                                         // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Time;                                              // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AfterPassageTime;                                  // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DecelerateTime;                                    // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AfterFixTime;                                      // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HitStopTime;                                       // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BackSpeed;                                         // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BackAccelerateTime;                                // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BackTime;                                          // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B1E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLBaseBossTrinFreeMoveLevel
struct FTTLBaseBossTrinFreeMoveLevel
{
public:
	float                                        MaxSpeed;                                          // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DetachedSpeedRate;                                 // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AccelerationTime;                                  // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DecelerationTime;                                  // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveTurnSpeed;                                     // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnSpeed;                                         // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ParamName;                                         // 0x18(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLBaseBossTrinPathMoveLevel
struct FTTLBaseBossTrinPathMoveLevel
{
public:
	float                                        MaxSpeed;                                          // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DetachedSpeedRate;                                 // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AccelerationTime;                                  // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DecelerationTime;                                  // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ParamName;                                         // 0x10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLBaseBossTrinFreightTrainInfo
struct FTTLBaseBossTrinFreightTrainInfo
{
public:
	TSubclassOf<class ATTLBaseBossTrinContCharacter> Class;                                             // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ContainerSetNo;                                    // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B1F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLBaseBossTrinContCharacter*         Actor;                                             // 0x10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLBaseBossTrinContAICtrlContainerGroupInfo
struct FTTLBaseBossTrinContAICtrlContainerGroupInfo
{
public:
	int32                                        GroupNo;                                           // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossTrinContAICtrlOpenType OpenType;                                          // 0x4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B20[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        VpRate;                                            // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Length;                                            // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Time;                                              // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B21[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  Comment;                                           // 0x18(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B22[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x80 (0x80 - 0x0)
// ScriptStruct DXM.TTLBaseBossTrinContContainerInfo
struct FTTLBaseBossTrinContContainerInfo
{
public:
	enum class ETTLBaseBossTrinContChrFreightType Type;                                              // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B23[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ATTLSpawnContainerBaseCharacter> ContainerClass;                                    // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLSpawnContainerBaseCharacter*       ContainerActor;                                    // 0x10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLBaseCannonPawn>        CannonClass;                                       // 0x18(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseCannonPawn*                    CannonActor;                                       // 0x20(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B24[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            AttachOffset;                                      // 0x30(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	int32                                        GroupNo;                                           // 0x60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B25[0x1C];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLBaseBossTrinContContainerSetInfo
struct FTTLBaseBossTrinContContainerSetInfo
{
public:
	TArray<struct FTTLBaseBossTrinContContainerInfo> ContainerInfoList;                                 // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLWyveFlashParameter
struct FTTLWyveFlashParameter
{
public:
	float                                        MaxFlashValue;                                     // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlashValueUpLimit;                                 // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlashValueSlowDownSpeed;                           // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlashTime;                                         // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x34 (0x34 - 0x0)
// ScriptStruct DXM.TTLWyveMoveData
struct FTTLWyveMoveData
{
public:
	float                                        Speed;                                             // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AccelTime;                                         // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BrakeTime;                                         // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotationSpeed;                                     // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Defence;                                           // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PhysicsResist;                                     // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FemtoResist;                                       // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BurningResist;                                     // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StunResist;                                        // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AcidResist;                                        // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlashResist;                                       // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JammingResist;                                     // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AngryDecSpeed;                                     // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLBaseCampWidgetStruct
struct FTTLBaseCampWidgetStruct
{
public:
	class UUserWidget*                           Widget;                                            // 0x0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        State;                                             // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B26[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x4 (0x4 - 0x0)
// ScriptStruct DXM.TTLBaseControllerAnalogInputControl
struct FTTLBaseControllerAnalogInputControl
{
public:
	uint8                                        Pad_2B27[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLBaseHeliCoverInfo
struct FTTLBaseHeliCoverInfo
{
public:
	struct FVector                               CoverLocation;                                     // 0x0(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B28[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                Actor;                                             // 0x10(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Damaged;                                           // 0x18(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B29[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLBaseHeliFollowerInfo
struct FTTLBaseHeliFollowerInfo
{
public:
	struct FVector                               TargetLocation;                                    // 0x0(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B2A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                CoverActor;                                        // 0x10(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CoverTime;                                         // 0x18(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CoverIntervalTime;                                 // 0x1C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseHeliFollowerMode          Mode;                                              // 0x20(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B2B[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLBaseLandAnimalAnimInfo
struct FTTLBaseLandAnimalAnimInfo
{
public:
	float                                        Look;                                              // 0x0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Speed;                                             // 0x4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct DXM.TTLActionInfo
struct FTTLActionInfo
{
public:
	int32                                        ActionNo;                                          // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CheckType;                                         // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ExecuteLevel;                                      // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AfterFixedTime;                                    // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsOptional;                                        // 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDisableDamageReaction;                           // 0x11(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDisableDeath;                                    // 0x12(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsForceExecute;                                    // 0x13(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLWyveActionSetInfo
struct FTTLWyveActionSetInfo
{
public:
	class FName                                  Comment;                                           // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ValidDistance;                                     // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Priority;                                          // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ContinuousPriority;                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B2C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLActionInfo>                ActionList;                                        // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct DXM.TTLWyveActionPhaseInfo
struct FTTLWyveActionPhaseInfo
{
public:
	TArray<struct FTTLWyveActionSetInfo>         ActionSetList;                                     // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FTTLWyveActionSetInfo                 StartActionSet;                                    // 0x10(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct DXM.TTLNoDamageTargetForDuelStart
struct FTTLNoDamageTargetForDuelStart
{
public:
	uint8                                        Pad_2B2D[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLSuspendEventControlStatus
struct FTTLSuspendEventControlStatus
{
public:
	uint8                                        Pad_2B2E[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLSuperArmorParameter
struct FTTLSuperArmorParameter
{
public:
	float                                        SuperArmorRateThreshold;                           // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SuperArmorTimeSpan;                                // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsInvokedSuperArmor;                               // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B2F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLSkillEffect*                       PSkillEffect;                                      // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct DXM.TTLStatusParameterFluctuation
struct FTTLStatusParameterFluctuation
{
public:
	float                                        MultiplyValue;                                     // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlusValue;                                         // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         RecentlyChanged;                                   // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B30[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x108 (0x108 - 0x0)
// ScriptStruct DXM.TTLWarningInfo
struct FTTLWarningInfo
{
public:
	float                                        PastSeconds;                                       // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RestShowSeconds;                                   // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  DisplayName;                                       // 0x8(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class USoundCue*                             SFXCue;                                            // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxStart;                                           // 0x28(0x98)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FLinearColor                          IconBaseColor;                                     // 0xC0(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          IconTextBorderColor;                               // 0xD0(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          WarningHUDColor;                                   // 0xE0(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        FxPlayback;                                        // 0xF0(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLAbnormalZoneStatus
struct FTTLAbnormalZoneStatus
{
public:
	uint8                                        Pad_2B31[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x58 (0x58 - 0x0)
// ScriptStruct DXM.TTLAbnormalStatusParameter
struct FTTLAbnormalStatusParameter
{
public:
	uint8                                        Pad_2B32[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AbnormalContinuationTime;                          // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentAbnormalStatusValue;                        // 0xC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B33[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsAbnormalStatus;                                  // 0x40(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B34[0x13];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AbnormalStatusHealRate;                            // 0x54(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLMissionIncome
struct FTTLMissionIncome
{
public:
	int32                                        Income;                                            // 0x0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ObjectReward;                                      // 0x4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct DXM.TTLMissionExpense
struct FTTLMissionExpense
{
public:
	int32                                        Wingman;                                           // 0x0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Ammo;                                              // 0x4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Repair;                                            // 0x8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ObjectInsurance;                                   // 0xC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MissionSpecial;                                    // 0x10(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLMissionPartsCorruptLog
struct FTTLMissionPartsCorruptLog
{
public:
	float                                        CorruptTime;                                       // 0x0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B35[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  PartID;                                            // 0x8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLPartsCorruptLogType           CorruptType;                                       // 0x10(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLPartsType                     PartType;                                          // 0x11(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B36[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct DXM.TTLMissionActionLog
struct FTTLMissionActionLog
{
public:
	int32                                        DodgeBoostCount;                                   // 0x0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        KnockDownCount;                                    // 0x4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        KnockOutCount;                                     // 0x8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Miragecount;                                       // 0xC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EmptyFemtoCount;                                   // 0x10(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        OverHeatCount;                                     // 0x14(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeOnTheGroundInMission;                          // 0x18(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeInTheAirInMission;                             // 0x1C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeOnTheGroundInMulti;                            // 0x20(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeInTheAirInMulti;                               // 0x24(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        KilledArsenalCount;                                // 0x28(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        KilledCountByOuter;                                // 0x2C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLMissionFloatWithTimeLog
struct FTTLMissionFloatWithTimeLog
{
public:
	float                                        EventTime;                                         // 0x0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LogValue;                                          // 0x4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct DXM.TTLMissionWeaponUseLog
struct FTTLMissionWeaponUseLog
{
public:
	class FName                                  WeaponID;                                          // 0x0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        UseCount;                                          // 0x8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ShootCount;                                        // 0xC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HitCount;                                          // 0x10(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CriticalCount;                                     // 0x14(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TotalDamage;                                       // 0x18(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        UseCountInMatch;                                   // 0x1C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ShootCountInMatch;                                 // 0x20(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HitCountInMatch;                                   // 0x24(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CriticalCountInMatch;                              // 0x28(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TotalDamageInMatch;                                // 0x2C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTTLMissionFloatWithTimeLog>   DamageLog;                                         // 0x30(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x8 (0x48 - 0x40)
// ScriptStruct DXM.TTLExtendedMissionWeaponUseLog
struct FTTLExtendedMissionWeaponUseLog : public FTTLMissionWeaponUseLog
{
public:
	uint8                                        Pad_2B37[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct DXM.TTLMissionTMPRiseLog
struct FTTLMissionTMPRiseLog
{
public:
	struct FTTLMissionFloatWithTimeLog           LogEvent;                                          // 0x0(0x8)(BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	enum class ETTLTMPRiseLogType                LogType;                                           // 0x8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B38[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLMissionKillCountLog
struct FTTLMissionKillCountLog
{
public:
	class FName                                  EnemyID;                                           // 0x0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        KillCount;                                         // 0x8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B39[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x138 (0x138 - 0x0)
// ScriptStruct DXM.TTLMissionLog
struct FTTLMissionLog
{
public:
	float                                        StartTime;                                         // 0x0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EndTime;                                           // 0x4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartTimeForLog;                                   // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EndTimeForLog;                                     // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GroundTime;                                        // 0x10(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AirTime;                                           // 0x14(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsMissionSucceed;                                  // 0x18(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B3A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  MissionName;                                       // 0x20(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLMissionIncome                     Income;                                            // 0x38(0x8)(BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLMissionExpense                    Expense;                                           // 0x40(0x14)(BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLMissionActionLog                  ActionLog;                                         // 0x54(0x30)(BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B3B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLMissionFloatWithTimeLog>   VPLogList;                                         // 0x88(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLMissionFloatWithTimeLog>   DamageLog;                                         // 0x98(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLMissionFloatWithTimeLog>   FemtoDamageLog;                                    // 0xA8(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLMissionFloatWithTimeLog>   TMPLogList;                                        // 0xB8(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLMissionTMPRiseLog>         TMPRiseLog;                                        // 0xC8(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLExtendedMissionWeaponUseLog> WeaponUseLog;                                      // 0xD8(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLMissionPartsCorruptLog>    PartsCorruptLog;                                   // 0xE8(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLMissionKillCountLog>       KillCountLog;                                      // 0xF8(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          KilledArsenalPartsList;                            // 0x108(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         SubGoalCondition1;                                 // 0x118(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         SubGoalCondition2;                                 // 0x119(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         SubGoalCondition3;                                 // 0x11A(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B3C[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TotalScore;                                        // 0x11C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DuelRequestNum;                                    // 0x120(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DuelApprovalNum;                                   // 0x124(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MainGoalIndex;                                     // 0x128(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NPCKillNumInSingleMission;                         // 0x12C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BossKillNumInSingleMission;                        // 0x130(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B3D[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLMissionPartsUseLog
struct FTTLMissionPartsUseLog
{
public:
	class FName                                  PartsID;                                           // 0x0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLPartsType                     PartsType;                                         // 0x8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B3E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        UseCount;                                          // 0xC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HalfDestroyCount;                                  // 0x10(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DestroyCount;                                      // 0x14(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        UseCountInMatch;                                   // 0x18(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HalfDestroyCountInMatch;                           // 0x1C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DestroyCountInMatch;                               // 0x20(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B3F[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLMaterialIntefaceContainer
struct FTTLMaterialIntefaceContainer
{
public:
	uint8                                        Pad_2B40[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstanceDynamic*              MaterialIntstance;                                 // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x4 (0x4 - 0x0)
// ScriptStruct DXM.TTLBaseBehavior
struct FTTLBaseBehavior
{
public:
	float                                        VPRatio;                                           // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLMaterialBehaviorContainer
struct FTTLMaterialBehaviorContainer
{
public:
	int32                                        MeshIndex;                                         // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaterialIndex;                                     // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ParameterName;                                     // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBehaviorValueType             Type;                                              // 0x10(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B41[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Value;                                             // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          ColorValue;                                        // 0x18(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x14 (0x18 - 0x4)
// ScriptStruct DXM.TTLMaterialBehavior
struct FTTLMaterialBehavior : public FTTLBaseBehavior
{
public:
	uint8                                        Pad_2B42[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLMaterialBehaviorContainer> ContainerArray;                                    // 0x8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct DXM.TTLStatusManagementObject
struct FTTLStatusManagementObject
{
public:
	uint8                                        Pad_2B43[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xB0 (0xB0 - 0x0)
// ScriptStruct DXM.TTLBlackLotusSailContainer
struct FTTLBlackLotusSailContainer
{
public:
	uint8                                        Pad_2B44[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstanceDynamic*              MaterialPtr;                                       // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              MaterialPtr_Panel;                                 // 0x18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Tag;                                               // 0x20(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartCloseAnimTime;                                // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EndCloseAnimTime;                                  // 0x2C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B45[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimationAsset*                       Animation_Close;                                   // 0x90(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B46[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLBlackLotusVPActionInfo
struct FTTLBlackLotusVPActionInfo
{
public:
	float                                        VP;                                                // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B47[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                SailIndexArray;                                    // 0x8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct DXM.TTLHPRenderInfo
struct FTTLHPRenderInfo
{
public:
	uint8                                        Pad_2B48[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct DXM.TTLActionArgumentInfo
struct FTTLActionArgumentInfo
{
public:
	uint8                                        Pad_2B49[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                ActorValue1;                                       // 0x10(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B4A[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLActionSetInfo
struct FTTLActionSetInfo
{
public:
	TArray<struct FTTLActionInfo>                ActionList;                                        // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        Priority;                                          // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ContinuousPriority;                                // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Comment;                                           // 0x18(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct DXM.TTLActionPhaseInfo
struct FTTLActionPhaseInfo
{
public:
	TArray<struct FTTLActionSetInfo>             ActionSetList;                                     // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FTTLActionSetInfo                     StartActionSet;                                    // 0x10(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct DXM.TTLBossLaserHitEffecter
struct FTTLBossLaserHitEffecter
{
public:
	uint8                                        Pad_2B4B[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlayback                        HitVFXPlayback;                                    // 0x10(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B4C[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLBossLastAfterImageInfo
struct FTTLBossLastAfterImageInfo
{
public:
	uint8                                        Pad_2B4D[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xA8 (0xA8 - 0x0)
// ScriptStruct DXM.TTLBossWeakenedVFXInfo
struct FTTLBossWeakenedVFXInfo
{
public:
	class FName                                  TargetMeshName;                                    // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                TargetMesh;                                        // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TargetMeshIndex;                                   // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B4E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  FirstDischargeVFXParticleNumParameterName;         // 0x18(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FirstDischargeVFXParticleMinSideParameterName;     // 0x20(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FirstDischargeVFXParticleMaxSizeParameterName;     // 0x28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FirstExplosionVFXParticleNumParameterName;         // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FirstExplosionVFXParticleMinSideParameterName;     // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FirstExplosionVFXParticleMaxSizeParameterName;     // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SecondDischargeVFXParticleNumParameterName;        // 0x48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SecondDischargeVFXParticleMinSideParameterName;    // 0x50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SecondDischargeVFXParticleMaxSizeParameterName;    // 0x58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SecondExplosionVFXParticleNumParameterName;        // 0x60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SecondExplosionVFXParticleMinSideParameterName;    // 0x68(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SecondExplosionVFXParticleMaxSizeParameterName;    // 0x70(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        DischargeVFXPlayback;                              // 0x78(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        ExplosionVFXPlayback;                              // 0x90(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLCollectArsenalInfo
struct FTTLCollectArsenalInfo
{
public:
	uint8                                        Pad_2B4F[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLMissionRewardParts
struct FTTLMissionRewardParts
{
public:
	class FName                                  PartsID;                                           // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLPartsType                     PartsType;                                         // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSlotRandom;                                      // 0x9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsTypeRandom;                                      // 0xA(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B50[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLMissionReward
struct FTTLMissionReward
{
public:
	int32                                        Credits;                                           // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B51[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  DecorationInfoID;                                  // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTTLMissionRewardParts>        Parts;                                             // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x4 (0x4 - 0x0)
// ScriptStruct DXM.TTLBreakableObjectSpawnActorInfo_Base
struct FTTLBreakableObjectSpawnActorInfo_Base
{
public:
	int32                                        SpawnRatio;                                        // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x34 (0x38 - 0x4)
// ScriptStruct DXM.TTLBreakableObjectSpawnActorInfo_Femto
struct FTTLBreakableObjectSpawnActorInfo_Femto : public FTTLBreakableObjectSpawnActorInfo_Base
{
public:
	uint8                                        Pad_2B52[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class ATTLFieldFemtoItem>      SpawnClassOf;                                      // 0x8(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RecoveryAmount;                                    // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B53[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x2C (0x30 - 0x4)
// ScriptStruct DXM.TTLBreakableObjectSpawnActorInfo
struct FTTLBreakableObjectSpawnActorInfo : public FTTLBreakableObjectSpawnActorInfo_Base
{
public:
	uint8                                        Pad_2B54[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class AActor>                  SpawnClassOf;                                      // 0x8(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct DXM.TTLBreakableSpawnActorInfo
struct FTTLBreakableSpawnActorInfo
{
public:
	TSubclassOf<class ATTLExplosionActor>        SpawnClassOf;                                      // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeaponID;                                          // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEStatusType                   ExplosionType;                                     // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B55[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinDamageScale;                                    // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxDamageRadius;                                   // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsOverrideInstigator;                              // 0x1C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B56[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class APawn>                   InstigatorSoftRef;                                 // 0x20(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APawn*                                 InstigatorPawnRef;                                 // 0x48(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct DXM.TTLBreakObjLockonSetting
struct FTTLBreakObjLockonSetting
{
public:
	float                                        LockOn_Scale;                                      // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LockOn_HUDScale;                                   // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LockOn_Enabled;                                    // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B57[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct DXM.TTLCameraShakeInfo
struct FTTLCameraShakeInfo
{
public:
	TArray<class UCameraShake*>                  CameraShakeList;                                   // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                  DataName;                                          // 0x10(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        UniqueHandle;                                      // 0x18(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B58[0x24];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct DXM.TTLCameraShakeFOscillator
struct FTTLCameraShakeFOscillator
{
public:
	float                                        Amplitude;                                         // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Frequency;                                         // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLCameraShakeInitialOffset      InitialOffset;                                     // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B59[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x24 (0x24 - 0x0)
// ScriptStruct DXM.TTLCameraShakeROscillator
struct FTTLCameraShakeROscillator
{
public:
	struct FTTLCameraShakeFOscillator            Pitch;                                             // 0x0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLCameraShakeFOscillator            Yaw;                                               // 0xC(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLCameraShakeFOscillator            Roll;                                              // 0x18(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x1C (0x1C - 0x0)
// ScriptStruct DXM.TTLCameraShakePostFxOscillator
struct FTTLCameraShakePostFxOscillator
{
public:
	bool                                         Enabled;                                           // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B5A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Duration;                                          // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLCameraShakePostProcessType    PostProcessType;                                   // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B5B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PostProcessFloatAmount;                            // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               PostProcessVectorAmount;                           // 0x10(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x24 (0x24 - 0x0)
// ScriptStruct DXM.TTLCameraShakeVOscillator
struct FTTLCameraShakeVOscillator
{
public:
	struct FTTLCameraShakeFOscillator            X;                                                 // 0x0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLCameraShakeFOscillator            Y;                                                 // 0xC(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLCameraShakeFOscillator            Z;                                                 // 0x18(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLCameraShakeForceFeedback
struct FTTLCameraShakeForceFeedback
{
public:
	bool                                         Enabled;                                           // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B5C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UForceFeedbackEffect*                  Asset;                                             // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xA0 (0xA8 - 0x8)
// ScriptStruct DXM.TTLCameraShakeParamRow
struct FTTLCameraShakeParamRow : public FTableRowBase
{
public:
	float                                        OscillationDuration;                               // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OscillationBlendInTime;                            // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OscillationBlendOutTime;                           // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLCameraShakeROscillator            RotOscillation;                                    // 0x14(0x24)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLCameraShakeVOscillator            LocOscillation;                                    // 0x38(0x24)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLCameraShakeFOscillator            FOVOscillation;                                    // 0x5C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLCameraShakePostFxOscillator       PostFxOscillation;                                 // 0x68(0x1C)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B5D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLCameraShakeForceFeedback          ForceFeedback;                                     // 0x88(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        InnerRadius;                                       // 0x98(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OuterRadius;                                       // 0x9C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Falloff;                                           // 0xA0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B5E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLCampNPCPlayVoiceInfo
struct FTTLCampNPCPlayVoiceInfo
{
public:
	class FName                                  VoiceRowName;                                      // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlayWeight;                                        // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B5F[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct DXM.TTLTransportRestrictInfo
struct FTTLTransportRestrictInfo
{
public:
	bool                                         IsRestrict;                                        // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B60[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TransportModePowerRatioToNormal;                   // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TransportModePowerRatioToNormalForRising;          // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x28 - 0x8)
// ScriptStruct DXM.TTLCatchableActorAimCameraParam
struct FTTLCatchableActorAimCameraParam : public FTableRowBase
{
public:
	float                                        TargetArmLengthOffset;                             // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              CameraRotatorOffset;                               // 0xC(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               CameraPositionOffset;                              // 0x18(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B61[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x110 (0x118 - 0x8)
// ScriptStruct DXM.TTLCatchableActorVisualParam
struct FTTLCatchableActorVisualParam : public FTableRowBase
{
public:
	struct FTTLCatchableActorAimCameraParam      AimCameraParamLeft;                                // 0x8(0x28)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLCatchableActorAimCameraParam      AimCameraParamRight;                               // 0x30(0x28)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                        Point1RightOffsetX;                                // 0x58(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point1RightOffsetY;                                // 0x5C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point1RightOffsetZ;                                // 0x60(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point1RightPitch;                                  // 0x64(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point1RightYaw;                                    // 0x68(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point1RightRoll;                                   // 0x6C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point1LeftOffsetX;                                 // 0x70(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point1LeftOffsetY;                                 // 0x74(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point1LeftOffsetZ;                                 // 0x78(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point1LeftPitch;                                   // 0x7C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point1LeftYaw;                                     // 0x80(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point1LeftRoll;                                    // 0x84(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point2RightOffsetX;                                // 0x88(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point2RightOffsetY;                                // 0x8C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point2RightOffsetZ;                                // 0x90(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point2RightPitch;                                  // 0x94(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point2RightYaw;                                    // 0x98(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point2RightRoll;                                   // 0x9C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point2LeftOffsetX;                                 // 0xA0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point2LeftOffsetY;                                 // 0xA4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point2LeftOffsetZ;                                 // 0xA8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point2LeftPitch;                                   // 0xAC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point2LeftYaw;                                     // 0xB0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point2LeftRoll;                                    // 0xB4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point3RightOffsetX;                                // 0xB8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point3RightOffsetY;                                // 0xBC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point3RightOffsetZ;                                // 0xC0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point3RightPitch;                                  // 0xC4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point3RightYaw;                                    // 0xC8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point3RightRoll;                                   // 0xCC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point3LeftOffsetX;                                 // 0xD0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point3LeftOffsetY;                                 // 0xD4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point3LeftOffsetZ;                                 // 0xD8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point3LeftPitch;                                   // 0xDC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point3LeftYaw;                                     // 0xE0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point3LeftRoll;                                    // 0xE4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point4RightOffsetX;                                // 0xE8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point4RightOffsetY;                                // 0xEC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point4RightOffsetZ;                                // 0xF0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point4RightPitch;                                  // 0xF4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point4RightYaw;                                    // 0xF8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point4RightRoll;                                   // 0xFC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point4LeftOffsetX;                                 // 0x100(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point4LeftOffsetY;                                 // 0x104(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point4LeftOffsetZ;                                 // 0x108(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point4LeftPitch;                                   // 0x10C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point4LeftYaw;                                     // 0x110(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Point4LeftRoll;                                    // 0x114(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x10 - 0x8)
// ScriptStruct DXM.TTLOuterPunchThrowActorParam
struct FTTLOuterPunchThrowActorParam : public FTableRowBase
{
public:
	bool                                         CanBeCaughtAtOuterPunchThrowing;                   // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B62[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        OuterPunchThrowZOffset;                            // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xA0 (0xA8 - 0x8)
// ScriptStruct DXM.TTLCatchableActorExplosionParam
struct FTTLCatchableActorExplosionParam : public FTableRowBase
{
public:
	bool                                         EnableExplosion;                                   // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B63[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class ATTLExplosionActor>      ExplosionClass;                                    // 0x10(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ExplosionSocket;                                   // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEAbnormalStatusType           ExplodeAbnormalType;                               // 0x40(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B64[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ExplodeAbnormalValue;                              // 0x44(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeDamage;                                     // 0x48(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeSeconds;                                    // 0x4C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMPRiseOnExplode;                                  // 0x50(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeRadius;                                     // 0x54(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeKnockOut;                                   // 0x58(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeKnockBack;                                  // 0x5C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeMinDamageScale;                             // 0x60(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxExplodeDamageRadius;                            // 0x64(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeExplodeAbnormalValue;                       // 0x68(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeWhiteOutContinuationTime;                   // 0x6C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableExplodeFriendlyFire;                         // 0x70(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B65[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ExplodeTMPRiseOnAbnormalSpace;                     // 0x74(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeAddValueOnAbnormalSpace;                    // 0x78(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeAbnormalSpaceContinuationTime;              // 0x7C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeAbnormalSpaceRadius;                        // 0x80(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeAbnormalSpaceAppearDelay;                   // 0x84(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeAbnormalSpaceAppearTime;                    // 0x88(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeAbnormalSpaceDisappearTime;                 // 0x8C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeHealVPValue;                                // 0x90(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeHealAbnormalStatusRate;                     // 0x94(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeHealPartsHPValue;                           // 0x98(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeWeakHealRate;                               // 0x9C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeWeakHealContinuationTime;                   // 0xA0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B66[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLFxModuleColorParameter
struct FTTLFxModuleColorParameter
{
public:
	class FName                                  Name;                                              // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          Value;                                             // 0x8(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLFxModuleFloatParameter
struct FTTLFxModuleFloatParameter
{
public:
	class FName                                  Name;                                              // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Value;                                             // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B67[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLFxModuleParameters
struct FTTLFxModuleParameters
{
public:
	TArray<struct FTTLFxModuleColorParameter>    ColorParameters;                                   // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FTTLFxModuleFloatParameter>    FloatParameters;                                   // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x70 (0x70 - 0x0)
// ScriptStruct DXM.TTLFxParamWeak
struct FTTLFxParamWeak
{
public:
	TSoftObjectPtr<class UParticleSystem>        VFX;                                               // 0x0(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxModuleParameters                VFXModuleParameters;                               // 0x28(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USoundAtomCue>          SFX;                                               // 0x48(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x80 (0x88 - 0x8)
// ScriptStruct DXM.TTLCatchableActorFxParam
struct FTTLCatchableActorFxParam : public FTableRowBase
{
public:
	bool                                         EnableFx;                                          // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B68[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  Socket;                                            // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParamWeak                       FxParam;                                           // 0x18(0x70)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// 0xA60 (0xA68 - 0x8)
// ScriptStruct DXM.TTLCatchableActorParam
struct FTTLCatchableActorParam : public FTableRowBase
{
public:
	float                                        Hp;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Damage;                                            // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LifeSeconds;                                       // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GravityScale;                                      // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpinSpeed;                                         // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLCatchableActorCatchMotionType CatchMotionType;                                   // 0x1C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B69[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLOuterPunchThrowActorParam         OuterPunchThrowActorParam;                         // 0x20(0x10)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FVector                               BoxTraceHalfSize;                                  // 0x30(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B6A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLCatchableActorExplosionParam      ExplosionParamOnLand1;                             // 0x40(0xA8)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLCatchableActorExplosionParam      ExplosionParamOnLand2;                             // 0xE8(0xA8)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLCatchableActorExplosionParam      ExplosionParamOnLand3;                             // 0x190(0xA8)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLCatchableActorExplosionParam      ExplosionParamOnLand4;                             // 0x238(0xA8)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLCatchableActorExplosionParam      ExplosionParamOnAir1;                              // 0x2E0(0xA8)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLCatchableActorExplosionParam      ExplosionParamOnAir2;                              // 0x388(0xA8)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLCatchableActorExplosionParam      ExplosionParamOnAir3;                              // 0x430(0xA8)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLCatchableActorExplosionParam      ExplosionParamOnAir4;                              // 0x4D8(0xA8)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLCatchableActorFxParam             ExplosionFxParamOnLand1;                           // 0x580(0x88)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLCatchableActorFxParam             ExplosionFxParamOnLand2;                           // 0x608(0x88)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLCatchableActorFxParam             ExplosionFxParamOnLand3;                           // 0x690(0x88)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLCatchableActorFxParam             ExplosionFxParamOnLand4;                           // 0x718(0x88)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLCatchableActorFxParam             ExplosionFxParamOnAir1;                            // 0x7A0(0x88)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLCatchableActorFxParam             ExplosionFxParamOnAir2;                            // 0x828(0x88)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLCatchableActorFxParam             ExplosionFxParamOnAir3;                            // 0x8B0(0x88)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLCatchableActorFxParam             ExplosionFxParamOnAir4;                            // 0x938(0x88)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                        HeatSourceGenerateNumOnLand;                       // 0x9C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeatSourceXYSpeedOnLand;                           // 0x9C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeatSourceZSpeedOnLand;                            // 0x9C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B6B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class ATTLHeatSourceObject>    HeatSourceClassOnLand;                             // 0x9D0(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeatSourceLifeTimeOnLand;                          // 0x9F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeatSourceHPOnLand;                                // 0x9FC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeatSourceHeatTMPOnLand;                           // 0xA00(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeatSourceBurningTMPOnLand;                        // 0xA04(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeatSourceHeatScaleOnLand;                         // 0xA08(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeatSourceBurnScaleOnLand;                         // 0xA0C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HeatSourceIsDestructibleOnLand;                    // 0xA10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HeatSourceIsImmediateDestructOnLand;               // 0xA11(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HeatSourceNoPlayDestroyAnimationOnLand;            // 0xA12(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B6C[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        HeatSourceGenerateNumOnAir;                        // 0xA14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeatSourceXYSpeedOnAir;                            // 0xA18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeatSourceZSpeedOnAir;                             // 0xA1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class ATTLHeatSourceObject>    HeatSourceClassOnAir;                              // 0xA20(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeatSourceLifeTimeOnAir;                           // 0xA48(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeatSourceHPOnAir;                                 // 0xA4C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeatSourceHeatTMPOnAir;                            // 0xA50(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeatSourceBurningTMPOnAir;                         // 0xA54(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeatSourceHeatScaleOnAir;                          // 0xA58(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeatSourceBurnScaleOnAir;                          // 0xA5C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HeatSourceIsDestructibleOnAir;                     // 0xA60(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HeatSourceIsImmediateDestructOnAir;                // 0xA61(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HeatSourceNoPlayDestroyAnimationOnAir;             // 0xA62(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableActorFriendlyFire;                           // 0xA63(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B6D[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC8 (0xC8 - 0x0)
// ScriptStruct DXM.TTLMovableUnit
struct FTTLMovableUnit
{
public:
	uint8                                        Pad_2B6E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponent*                MeshComp;                                          // 0x8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLMaterialInstanceDynamic           MeshMaterial;                                      // 0x10(0x10)(NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLMaterialInstanceDynamic           FemtoMeshMaterial;                                 // 0x20(0x10)(NoDestructor, NativeAccessSpecifierPublic)
	class USceneComponent*                       ParentMeshComp;                                    // 0x30(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B6F[0x90];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x7 (0x7 - 0x0)
// ScriptStruct DXM.TTLAttackFlagControlParameter
struct FTTLAttackFlagControlParameter
{
public:
	uint8                                        Pad_2B70[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLRandomPartsContainer
struct FTTLRandomPartsContainer
{
public:
	class FName                                  PartsID;                                           // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpawnWeight;                                       // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B71[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLOuterLocationHistory
struct FTTLOuterLocationHistory
{
public:
	uint8                                        Pad_2B72[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x6 (0x6 - 0x0)
// ScriptStruct DXM.TTLEventWeaponHiddenSetting
struct FTTLEventWeaponHiddenSetting
{
public:
	bool                                         IsLeftWeaponHidden;                                // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsRightWeaponHidden;                               // 0x1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsShoulderWeaponHidden;                            // 0x2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSupportWeaponHidden;                             // 0x3(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsLeftWeaponRackHidden;                            // 0x4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsRightWeaponRackHidden;                           // 0x5(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLWeaponActionParameters
struct FTTLWeaponActionParameters
{
public:
	uint8                                        Pad_2B73[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLCharaEditOuterFacialInfo
struct FTTLCharaEditOuterFacialInfo
{
public:
	uint8                                        Pad_2B74[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimSequenceBase*                     MaleAnim;                                          // 0x18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                     FemaleAnim;                                        // 0x20(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct DXM.TTLCharaEditMenuColPalParam
struct FTTLCharaEditMenuColPalParam
{
public:
	bool                                         IsEqu;                                             // 0x0(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B75[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          Color;                                             // 0x4(0x10)(BlueprintVisible, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLCharaEditMenuTexPalParam
struct FTTLCharaEditMenuTexPalParam
{
public:
	bool                                         IsEqu;                                             // 0x0(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B76[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTexture2D*                            PTex2D;                                            // 0x8(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B77[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLChaseSpeedConvertParam
struct FTTLChaseSpeedConvertParam
{
public:
	float                                        AssembleMinMoveSpeed;                              // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AssembleMaxMoveSpeed;                              // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChaseMinMoveSpeed;                                 // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChaseMaxMoveSpeed;                                 // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct DXM.TTLEmoteSetting
struct FTTLEmoteSetting
{
public:
	class FString                                ID;                                                // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Name;                                              // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                StringTableKey;                                    // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct DXM.TTLChatSettingMessage
struct FTTLChatSettingMessage
{
public:
	class FString                                ID;                                                // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Message;                                           // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SoundPath;                                         // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                StringTableKey;                                    // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLChatSettingCategory
struct FTTLChatSettingCategory
{
public:
	class FName                                  CategoryID;                                        // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  CategoryName;                                      // 0x8(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// 0x20 (0x28 - 0x8)
// ScriptStruct DXM.TTLChatDefaultPresetMessageRow
struct FTTLChatDefaultPresetMessageRow : public FTableRowBase
{
public:
	enum class ETTLChatMessageFor                MessageFor;                                        // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B78[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ChatSettingMessageID;                              // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EmoteID;                                           // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x48 - 0x8)
// ScriptStruct DXM.TTLChatSettingMessageRow
struct FTTLChatSettingMessageRow : public FTableRowBase
{
public:
	bool                                         IsEnable;                                          // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B79[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  CategoryID;                                        // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                StringTableKey;                                    // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SoundPath;                                         // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Comment;                                           // 0x30(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// 0x30 (0x38 - 0x8)
// ScriptStruct DXM.TTLChatSettingCategoryRow
struct FTTLChatSettingCategoryRow : public FTableRowBase
{
public:
	bool                                         IsEnable;                                          // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B7A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                StringTableKey;                                    // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Comment;                                           // 0x20(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLCheatControllerInfo
struct FTTLCheatControllerInfo
{
public:
	uint8                                        Pad_2B7B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLClassStateMachineImplContainer
struct FTTLClassStateMachineImplContainer
{
public:
	class UClass*                                ClassIs;                                           // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UTTLClassStateMachineObject> StateClassIs;                                      // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLClassStateMachineObject*           StateObj;                                          // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLClassStateMachineContainer
struct FTTLClassStateMachineContainer
{
public:
	uint8                                        Pad_2B7C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLClassStateMachineImplContainer> StateMachine;                                      // 0x8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLClassStateMachineInfo
struct FTTLClassStateMachineInfo
{
public:
	uint8                                        Pad_2B7D[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLCollectInfo
struct FTTLCollectInfo
{
public:
	bool                                         IsOverride;                                        // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B7E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RotateTime;                                        // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LaserRangeSize;                                    // 0x8(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               VelocitySize;                                      // 0x14(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLAnalogInputAction
struct FTTLAnalogInputAction
{
public:
	uint8                                        Pad_2B7F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLHoldAction
struct FTTLHoldAction
{
public:
	enum class ETTLEActionType                   Action;                                            // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B80[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        InputDuration;                                     // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLLongAction
struct FTTLLongAction
{
public:
	enum class ETTLEActionType                   Action;                                            // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B81[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        InputDuration;                                     // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLRepeatAction
struct FTTLRepeatAction
{
public:
	enum class ETTLEActionType                   Action;                                            // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B82[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RepeatCount;                                       // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct DXM.TTLCommandGroup
struct FTTLCommandGroup
{
public:
	uint8                                        Pad_2B83[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLAnalogInputAction>         AnalogInputActions;                                // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<enum class ETTLEActionType>           InputIndex;                                        // 0x20(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLLongAction>                LongActions;                                       // 0x30(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLRepeatAction>              RepeatActions;                                     // 0x40(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLHoldAction>                HoldActions;                                       // 0x50(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct DXM.TTLCommandContainer
struct FTTLCommandContainer
{
public:
	uint8                                        Pad_2B84[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLCommandGroup                      Commands;                                          // 0x8(0x60)(NativeAccessSpecifierPublic)
};

// 0x2 (0x2 - 0x0)
// ScriptStruct DXM.TTLInputAction
struct FTTLInputAction
{
public:
	enum class ETTLEActionType                   Action;                                            // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsPressed;                                         // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x3 (0x3 - 0x0)
// ScriptStruct DXM.TTLColorPickerHSVParam2
struct FTTLColorPickerHSVParam2
{
public:
	uint8                                        H;                                                 // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        S;                                                 // 0x1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        V;                                                 // 0x2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x3 (0x3 - 0x0)
// ScriptStruct DXM.TTLColorPickerHSVParam
struct FTTLColorPickerHSVParam
{
public:
	uint8                                        H;                                                 // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        S;                                                 // 0x1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        V;                                                 // 0x2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct DXM.TTLCommonPopupParamWithColor
struct FTTLCommonPopupParamWithColor
{
public:
	uint8                                        Pad_2B85[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLCommonPopupInfo
struct FTTLCommonPopupInfo
{
public:
	class UUserWidget*                           ButtonWidget;                                      // 0x0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEPopUpSEType                  ButtonSE;                                          // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsGrayOut;                                         // 0x9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B86[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct DXM.TTLEDecorationInfoTypeAndID
struct FTTLEDecorationInfoTypeAndID
{
public:
	enum class ETTLEDecorationInfoType           InfoType;                                          // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B87[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  DecorationID;                                      // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ReasonTextKey;                                     // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ReasonValue;                                       // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B88[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                AchievementID;                                     // 0x20(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x80 (0x80 - 0x0)
// ScriptStruct DXM.TTLCommonPopupRewardInfo
struct FTTLCommonPopupRewardInfo
{
public:
	struct FTTLArsenalPartsInfo                  PartsInfo;                                         // 0x0(0x38)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ID;                                                // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Value;                                             // 0x40(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLECommonPopupRewardType        RewardType;                                        // 0x44(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B89[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLEDecorationInfoTypeAndID          DecorationInfo;                                    // 0x48(0x30)(NativeAccessSpecifierPublic)
	enum class ETTLECharaEditInfoType            OuterPartsType;                                    // 0x78(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B8A[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLCommunicationTalkRequestRejectHistory
struct FTTLCommunicationTalkRequestRejectHistory
{
public:
	class FString                                RequestName;                                       // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ProcessTime;                                       // 0x10(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B8B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Reason;                                            // 0x18(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLCommunicationTalkRequestHistory
struct FTTLCommunicationTalkRequestHistory
{
public:
	class FName                                  MessageID;                                         // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ProcessTime;                                       // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B8C[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLCommunicationTalkRequest
struct FTTLCommunicationTalkRequest
{
public:
	class FName                                  OuterName;                                         // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TermIndex;                                         // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLNPCBelongingType              BelongingType;                                     // 0xC(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B8D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CoolTime;                                          // 0x10(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B8E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  MessageSetName;                                    // 0x18(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B8F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLCommunicationTalkCoolTimeInfo
struct FTTLCommunicationTalkCoolTimeInfo
{
public:
	class FName                                  MessageID;                                         // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Weight;                                            // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CoolTime;                                          // 0xC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x28 - 0x8)
// ScriptStruct DXM.TTLCommunicationTalkPrioritySetting
struct FTTLCommunicationTalkPrioritySetting : public FTableRowBase
{
public:
	enum class ETTLCommunicationTalkPriority     Priority_Term0;                                    // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLCommunicationTalkPriority     Priority_Term1;                                    // 0x9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLCommunicationTalkPriority     Priority_Term2;                                    // 0xA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLCommunicationTalkPriority     Priority_Term3;                                    // 0xB(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLCommunicationTalkPriority     Priority_Term4;                                    // 0xC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLCommunicationTalkPriority     Priority_Term5;                                    // 0xD(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLCommunicationTalkPriority     Priority_Term6;                                    // 0xE(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLCommunicationTalkPriority     Priority_Term7;                                    // 0xF(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLCommunicationTalkPriority     Priority_Term8;                                    // 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLCommunicationTalkPriority     Priority_Term9;                                    // 0x11(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLCommunicationTalkPriority     Priority_Term10;                                   // 0x12(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLCommunicationTalkPriority     Priority_Term11;                                   // 0x13(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLCommunicationTalkPriority     Priority_Term12;                                   // 0x14(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLCommunicationTalkPriority     Priority_Term13;                                   // 0x15(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLCommunicationTalkPriority     Priority_Term14;                                   // 0x16(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLCommunicationTalkPriority     Priority_Term15;                                   // 0x17(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLCommunicationTalkPriority     Priority_Term16;                                   // 0x18(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLCommunicationTalkPriority     Priority_Term17;                                   // 0x19(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLCommunicationTalkPriority     Priority_Term18;                                   // 0x1A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLCommunicationTalkPriority     Priority_Term19;                                   // 0x1B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLCommunicationTalkPriority     Priority_Term20;                                   // 0x1C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLCommunicationTalkPriority     Priority_Term21;                                   // 0x1D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLCommunicationTalkPriority     Priority_TermSp1;                                  // 0x1E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLCommunicationTalkPriority     Priority_TermSp2;                                  // 0x1F(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLCommunicationTalkPriority     Priority_TermSp3;                                  // 0x20(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLCommunicationTalkPriority     Priority_TermFF;                                   // 0x21(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B90[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xE0 (0xE8 - 0x8)
// ScriptStruct DXM.TTLCommunicationTalkSetting
struct FTTLCommunicationTalkSetting : public FTableRowBase
{
public:
	class FString                                Comment;                                           // 0x8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Info_Term0;                                        // 0x18(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Info_Term1;                                        // 0x20(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Info_Term2;                                        // 0x28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Info_Term3;                                        // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Info_Term4;                                        // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Info_Term5;                                        // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Info_Term6;                                        // 0x48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Info_Term7;                                        // 0x50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Info_Term8;                                        // 0x58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Info_Term9;                                        // 0x60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Info_Term10;                                       // 0x68(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Info_Term11;                                       // 0x70(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Info_Term12;                                       // 0x78(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Info_Term13;                                       // 0x80(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Info_Term14;                                       // 0x88(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Info_Term15;                                       // 0x90(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Info_Term16;                                       // 0x98(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Info_Term17;                                       // 0xA0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Info_Term18;                                       // 0xA8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Info_Term19;                                       // 0xB0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Info_Term20;                                       // 0xB8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Info_Term21;                                       // 0xC0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Info_TermSp1;                                      // 0xC8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Info_TermSp2;                                      // 0xD0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Info_TermSp3;                                      // 0xD8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Info_TermFF;                                       // 0xE0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x38 - 0x8)
// ScriptStruct DXM.TTLCommunicationTalkInfo
struct FTTLCommunicationTalkInfo : public FTableRowBase
{
public:
	class FString                                Comment;                                           // 0x8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MessageSet_Enemy;                                  // 0x18(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MessageSet_Ally;                                   // 0x20(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MessageSet_Friend;                                 // 0x28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CoolTime;                                          // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B91[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xA0 (0xA8 - 0x8)
// ScriptStruct DXM.TTLCommunicationTalkMessageSet
struct FTTLCommunicationTalkMessageSet : public FTableRowBase
{
public:
	class FString                                Comment;                                           // 0x8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Message1_ID;                                       // 0x18(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Message1_Weight;                                   // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Message1_CoolTime;                                 // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Message1_LowerFriendShipValue;                     // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Message1_UpperFriendShipValue;                     // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Message2_ID;                                       // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Message2_Weight;                                   // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Message2_CoolTime;                                 // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Message2_LowerFriendShipValue;                     // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Message2_UpperFriendShipValue;                     // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Message3_ID;                                       // 0x48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Message3_Weight;                                   // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Message3_CoolTime;                                 // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Message3_LowerFriendShipValue;                     // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Message3_UpperFriendShipValue;                     // 0x5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Message4_ID;                                       // 0x60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Message4_Weight;                                   // 0x68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Message4_CoolTime;                                 // 0x6C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Message4_LowerFriendShipValue;                     // 0x70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Message4_UpperFriendShipValue;                     // 0x74(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Message5_ID;                                       // 0x78(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Message5_Weight;                                   // 0x80(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Message5_CoolTime;                                 // 0x84(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Message5_LowerFriendShipValue;                     // 0x88(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Message5_UpperFriendShipValue;                     // 0x8C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Message6_ID;                                       // 0x90(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Message6_Weight;                                   // 0x98(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Message6_CoolTime;                                 // 0x9C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Message6_LowerFriendShipValue;                     // 0xA0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Message6_UpperFriendShipValue;                     // 0xA4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLConsoleMsgPlayInfo
struct FTTLConsoleMsgPlayInfo
{
public:
	enum class ETTLConsoleMsgType                MsgType;                                           // 0x0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B92[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  MsgRowName;                                        // 0x8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FText>                          ContextList;                                       // 0x10(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x28 - 0x8)
// ScriptStruct DXM.TTLConsoleMsgParamRow
struct FTTLConsoleMsgParamRow : public FTableRowBase
{
public:
	class FString                                Serif;                                             // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SoundVoicePath;                                    // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLConsoleMsgType                MsgType;                                           // 0x20(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B93[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x90 (0x90 - 0x0)
// ScriptStruct DXM.TTLSurvivalMissionInitializeData
struct FTTLSurvivalMissionInitializeData
{
public:
	uint8                                        Pad_2B94[0x90];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLReasonForObtaining
struct FTTLReasonForObtaining
{
public:
	enum class ETTLReasonForObtaining            ReasonForObtaining;                                // 0x0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B95[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SubGoalIndex;                                      // 0x4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BossDropTextID;                                    // 0x8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B96[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x60 (0x60 - 0x0)
// ScriptStruct DXM.TTLMissionPartsInventory
struct FTTLMissionPartsInventory
{
public:
	struct FTTLArsenalPartsInfo                  PartsInfo;                                         // 0x0(0x38)(BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLReasonForObtaining                ReasonForObtaining;                                // 0x38(0x20)(BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         ForceEquipAfterMission;                            // 0x58(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsNew;                                             // 0x59(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B97[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLMissionFlagItemInventory
struct FTTLMissionFlagItemInventory
{
public:
	class FName                                  FlagItemID;                                        // 0x0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLReasonForObtaining                ReasonForObtaining;                                // 0x8(0x20)(BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct DXM.TTLMissionAttachmentInventory
struct FTTLMissionAttachmentInventory
{
public:
	struct FTTLReasonForObtaining                ReasonForObtaining;                                // 0x0(0x20)(NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLOwnedAttachmentParam              Attachment;                                        // 0x20(0x18)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLPickUpDecalResult
struct FTTLPickUpDecalResult
{
public:
	enum class ETTLEDecorationInfoType           DecalType;                                         // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B98[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  DecalKey;                                          // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct DXM.TTLMissionDecalItemInventory
struct FTTLMissionDecalItemInventory
{
public:
	struct FTTLPickUpDecalResult                 DecalItem;                                         // 0x0(0x10)(BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLReasonForObtaining                ReasonForObtaining;                                // 0x10(0x20)(BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLBossBattleData
struct FTTLBossBattleData
{
public:
	class FName                                  BossID;                                            // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DataProgress;                                      // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B99[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xA8 (0xA8 - 0x0)
// ScriptStruct DXM.TTLInheritMissionContainer
struct FTTLInheritMissionContainer
{
public:
	TArray<struct FTTLMissionPartsInventory>     MissionPartsInventoryInfo;                         // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLMissionFlagItemInventory>  MissionFlagItemInventoryInfo;                      // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLMissionDecalItemInventory> MissionDecalInventoryInfo;                         // 0x20(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLBossBattleData>            BossBattleDataInventoryInfo;                       // 0x30(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLMissionAttachmentInventory> MissionAttachmentInventoryInfo;                    // 0x40(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLEDecorationInfoTypeAndID>  DecorationItems;                                   // 0x50(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B9A[0x48];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x98 (0x98 - 0x0)
// ScriptStruct DXM.TTLArsenalPartsPaintInfo
struct FTTLArsenalPartsPaintInfo
{
public:
	bool                                         IsDefaultColor;                                    // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B9B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          MainColor;                                         // 0x4(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          SubColor1;                                         // 0x14(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          SubColor2;                                         // 0x24(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B9C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  MainColorName;                                     // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SubColor1Name;                                     // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SubColor2Name;                                     // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DecalIndex;                                        // 0x50(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B9D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  DecalID;                                           // 0x58(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          DecalColor;                                        // 0x60(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DecalColorName;                                    // 0x70(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             DecalPosition;                                     // 0x78(0x8)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DecalRotation;                                     // 0x80(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             DecalScaleXY;                                      // 0x84(0x8)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B9E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  DecalPartID;                                       // 0x90(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x310 (0x310 - 0x0)
// ScriptStruct DXM.TTLArsenalPaintInfo
struct FTTLArsenalPaintInfo
{
public:
	int32                                        ComouflageIndex;                                   // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B9F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ComouflageID;                                      // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SkinSetID;                                         // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLArsenalPartsPaintInfo             HeadInfo;                                          // 0x18(0x98)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLArsenalPartsPaintInfo             BodyInfo;                                          // 0xB0(0x98)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLArsenalPartsPaintInfo             LeftArmInfo;                                       // 0x148(0x98)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLArsenalPartsPaintInfo             RightArmInfo;                                      // 0x1E0(0x98)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLArsenalPartsPaintInfo             LegsInfo;                                          // 0x278(0x98)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x130 (0x130 - 0x0)
// ScriptStruct DXM.TTLArsenalAllWeaponInfo
struct FTTLArsenalAllWeaponInfo
{
public:
	uint8                                        Pad_2BA0[0x130];                                   // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x780 (0x780 - 0x0)
// ScriptStruct DXM.TTLInheritBattleInfo
struct FTTLInheritBattleInfo
{
public:
	struct FTTLArsenalPartsInfoList              ArsenalPartsInfoAtFinishingMission;                // 0x0(0x310)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLArsenalPaintInfo                  ArsenalContinuousPaintInfo;                        // 0x310(0x310)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLArsenalAllWeaponInfo              ArsenalAllWeaponInfo;                              // 0x620(0x130)(NativeAccessSpecifierPublic)
	uint8                                        Pad_2BA1[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLInheritArsenalAllFunnelWeaponInfo
struct FTTLInheritArsenalAllFunnelWeaponInfo
{
public:
	uint8                                        Pad_2BA2[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x4 (0x4 - 0x0)
// ScriptStruct DXM.TTLInheritArsenalFunnelWeaponInfo
struct FTTLInheritArsenalFunnelWeaponInfo
{
public:
	uint8                                        Pad_2BA3[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x1C (0x1C - 0x0)
// ScriptStruct DXM.TTLBulletRemainParameter
struct FTTLBulletRemainParameter
{
public:
	int32                                        CurrentBulletNum;                                  // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalBulletNum;                                    // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxBulletNum;                                      // 0x8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableBulletNum;                                 // 0xC(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableMagazine;                                  // 0xD(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEBulletCondition              ConditionCurrentValue;                             // 0xE(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEBulletCondition              ConditionMaxValue;                                 // 0xF(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEBulletCondition              ConditionSeparator;                                // 0x10(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsShowGauge;                                       // 0x11(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BA4[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GaugeValue;                                        // 0x14(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BA5[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct DXM.TTLArsenalWeaponInfo
struct FTTLArsenalWeaponInfo
{
public:
	class UClass*                                ClassIs;                                           // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BA6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLBulletRemainParameter             BulletParam;                                       // 0xC(0x1C)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BA7[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC0 (0xC0 - 0x0)
// ScriptStruct DXM.TTLInheritArsenalAllWeaponInfo
struct FTTLInheritArsenalAllWeaponInfo
{
public:
	uint8                                        Pad_2BA8[0xC0];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLInheritArsenalWeaponInfo
struct FTTLInheritArsenalWeaponInfo
{
public:
	uint8                                        Pad_2BA9[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x4 (0x4 - 0x0)
// ScriptStruct DXM.TTLInheritArsenalPartsInfo
struct FTTLInheritArsenalPartsInfo
{
public:
	uint8                                        Pad_2BAA[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLCoopAttackerInfo
struct FTTLCoopAttackerInfo
{
public:
	uint8                                        Pad_2BAB[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLCoopAttackInfo
struct FTTLCoopAttackInfo
{
public:
	uint8                                        Pad_2BAC[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLCoopAttackerInfo>          AttackerInfo;                                      // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BAD[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLCoopAttackGroupInfo
struct FTTLCoopAttackGroupInfo
{
public:
	TArray<struct FTTLCoopAttackInfo>            InfoArray;                                         // 0x0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2BAE[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x68 (0x68 - 0x0)
// ScriptStruct DXM.TTLDamagePopup
struct FTTLDamagePopup
{
public:
	class UUserWidget*                           Widget;                                            // 0x0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BAF[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLDamagePopupSettings
struct FTTLDamagePopupSettings
{
public:
	float                                        ResistThresholdBad;                                // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ResistThresholdGood;                               // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RandomRadius;                                      // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RadiusRatioNear;                                   // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DurationOfWaitingSpawn;                            // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DurationOfDisplay;                                 // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlowSpeed;                                         // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlowInertia;                                       // 0x1C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLDebugHUDHateTarget
struct FTTLDebugHUDHateTarget
{
public:
	class AActor*                                Actor;                                             // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HateValue;                                         // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BB0[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLDebugWeaponClass
struct FTTLDebugWeaponClass
{
public:
	class FString                                WeaponName;                                        // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeaponID;                                          // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct DXM.TTLDebugActorClass
struct FTTLDebugActorClass
{
public:
	class FString                                ActorName;                                         // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AActor>                  ActorClass;                                        // 0x10(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AAIController>           AIClass;                                           // 0x38(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLDebugNPCJoinInfo
struct FTTLDebugNPCJoinInfo
{
public:
	class FName                                  NPCOuterID;                                        // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLNPCFlagState                  FlagState;                                         // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BB1[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLDebugPartsInfo
struct FTTLDebugPartsInfo
{
public:
	class FName                                  PartsID;                                           // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLPartsType                     PartType;                                          // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BB2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        AttachmentSlotNum;                                 // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC0 (0xC0 - 0x0)
// ScriptStruct DXM.TTLDebugInitAssemble
struct FTTLDebugInitAssemble
{
public:
	struct FTTLDebugPartsInfo                    Head;                                              // 0x0(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLDebugPartsInfo                    Body;                                              // 0x10(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLDebugPartsInfo                    Inside;                                            // 0x20(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLDebugPartsInfo                    ArmR;                                              // 0x30(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLDebugPartsInfo                    ArmL;                                              // 0x40(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLDebugPartsInfo                    Legs;                                              // 0x50(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLDebugPartsInfo                    WeaponR;                                           // 0x60(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLDebugPartsInfo                    WeaponL;                                           // 0x70(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLDebugPartsInfo                    Shoulder;                                          // 0x80(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLDebugPartsInfo                    Support;                                           // 0x90(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLDebugPartsInfo                    RackR;                                             // 0xA0(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLDebugPartsInfo                    RackL;                                             // 0xB0(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLDebugAttachmentInfo
struct FTTLDebugAttachmentInfo
{
public:
	class FName                                  AttachmentID;                                      // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AttachmentNum;                                     // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BB3[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x170 (0x178 - 0x8)
// ScriptStruct DXM.TTLDebugSaveDataParam
struct FTTLDebugSaveDataParam : public FTableRowBase
{
public:
	class FString                                CommandText;                                       // 0x8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  OpenMissionId;                                     // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLDebugInitAssemble                 CurrentAssemble;                                   // 0x20(0xC0)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	int32                                        OverrideCash;                                      // 0xE0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BB4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLDebugPartsInfo>            GetPartsList;                                      // 0xE8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLDebugAttachmentInfo>       GetAttachmentList;                                 // 0xF8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          GetDecalList;                                      // 0x108(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          GetSurfaceList;                                    // 0x118(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          GetTitleList;                                      // 0x128(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          GetEmblemList;                                     // 0x138(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLDebugNPCJoinInfo>          JoinNPCList;                                       // 0x148(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          LabSkillList;                                      // 0x158(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        DebugCommandList;                                  // 0x168(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLDebugDecorationInfo
struct FTTLDebugDecorationInfo
{
public:
	enum class ETTLEDecorationInfoType           DecorationType;                                    // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BB5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  DecorationID;                                      // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x48 (0x50 - 0x8)
// ScriptStruct DXM.TTLDecorationInfoParamRow
struct FTTLDecorationInfoParamRow : public FTableRowBase
{
public:
	enum class ETTLEDecorationInfoType           DecorationInfoType_1;                              // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BB6[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  DecorationID_1;                                    // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PercentValue_1;                                    // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEDecorationInfoType           DecorationInfoType_2;                              // 0x1C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BB7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  DecorationID_2;                                    // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PercentValue_2;                                    // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEDecorationInfoType           DecorationInfoType_3;                              // 0x2C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BB8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  DecorationID_3;                                    // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PercentValue_3;                                    // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BB9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Comment;                                           // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x48 (0x50 - 0x8)
// ScriptStruct DXM.TTLDecorationConditionsParamRow
struct FTTLDecorationConditionsParamRow : public FTableRowBase
{
public:
	bool                                         IsEnable;                                          // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEDecorationConditionsType     DecorationConditionsType;                          // 0x9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BBA[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ConditionsValue;                                   // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEDecorationInfoType           DecorationInfoType;                                // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BBB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  DecorationID;                                      // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ReasonTextKey;                                     // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ForceShowReason;                                   // 0x28(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HideWhenNotHave;                                   // 0x29(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IgnoreWhenDisableBattleMode;                       // 0x2A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BBC[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                AchievementID;                                     // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Comment;                                           // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLDlcNotificationInfo
struct FTTLDlcNotificationInfo
{
public:
	uint8                                        Pad_2BBD[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ETTLEDlcType                      Type;                                              // 0x10(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLECharaEditInfoType            OuterPartsType;                                    // 0x11(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLPartsType                     PartType;                                          // 0x12(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BBE[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ID;                                                // 0x18(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Num;                                               // 0x20(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BBF[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLDlcEntry
struct FTTLDlcEntry
{
public:
	enum class ETTLEDlcType                      Type;                                              // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BC0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ID;                                                // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Num;                                               // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLPartsType                     OptPartsType;                                      // 0x14(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLECharaEditInfoType            OptOuterPartsType;                                 // 0x15(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BC1[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  OptOther;                                          // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x30 - 0x8)
// ScriptStruct DXM.TTLDlcCatalog
struct FTTLDlcCatalog : public FTableRowBase
{
public:
	class FName                                  NameKey;                                           // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DebugName;                                         // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTTLDlcEntry>                  Entries;                                           // 0x18(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         IsFreeContents;                                    // 0x28(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BC2[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x24 (0x24 - 0x0)
// ScriptStruct DXM.TTLStayJudgeInfo
struct FTTLStayJudgeInfo
{
public:
	uint8                                        Pad_2BC3[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StayJudgeTime;                                     // 0x18(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StayJudgeDistance;                                 // 0x1C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsDebugDraw;                                       // 0x20(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2BC4[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xD0 (0xD0 - 0x0)
// ScriptStruct DXM.TTLArsenalDroppedPartsInfo
struct FTTLArsenalDroppedPartsInfo
{
public:
	struct FTTLArsenalPartsInfo                  PartsInfo;                                         // 0x0(0x38)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLArsenalPartsPaintInfo             PaintInfo;                                         // 0x38(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x40 - 0x8)
// ScriptStruct DXM.TTLMobDropParamRow
struct FTTLMobDropParamRow : public FTableRowBase
{
public:
	int32                                        SpWeaponType1;                                     // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpWeaponDropRate1;                                 // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpWeaponNumRate1;                                  // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SpWeaponType2;                                     // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpWeaponDropRate2;                                 // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpWeaponNumRate2;                                  // 0x1C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SpWeaponType3;                                     // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpWeaponDropRate3;                                 // 0x24(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpWeaponNumRate3;                                  // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NormalWeaponDropRate;                              // 0x2C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NormalWeaponNumRate;                               // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SmallFemtoDropRate;                                // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LargeFemtoDropRate;                                // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NoDropRate;                                        // 0x3C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xF8 (0x100 - 0x8)
// ScriptStruct DXM.TTLArsenalPartsAttachmentDropParamRow
struct FTTLArsenalPartsAttachmentDropParamRow : public FTableRowBase
{
public:
	class FName                                  AttachmentID1;                                     // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AttachmentDropRate1;                               // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BC5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  Attachment1ConditionMissionID;                     // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AttachmentID2;                                     // 0x20(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AttachmentDropRate2;                               // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BC6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  Attachment2ConditionMissionID;                     // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AttachmentID3;                                     // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AttachmentDropRate3;                               // 0x40(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BC7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  Attachment3ConditionMissionID;                     // 0x48(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AttachmentID4;                                     // 0x50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AttachmentDropRate4;                               // 0x58(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BC8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  Attachment4ConditionMissionID;                     // 0x60(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AttachmentID5;                                     // 0x68(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AttachmentDropRate5;                               // 0x70(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BC9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  Attachment5ConditionMissionID;                     // 0x78(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UseOnlySurvivalAttachment;                         // 0x80(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BCA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SurvivalAttachmentID1;                             // 0x88(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SurvivalAttachmentDropRate1;                       // 0x90(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BCB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SurvivalAttachment1ConditionMissionID;             // 0x98(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SurvivalAttachmentID2;                             // 0xA0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SurvivalAttachmentDropRate2;                       // 0xA8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BCC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SurvivalAttachment2ConditionMissionID;             // 0xB0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SurvivalAttachmentID3;                             // 0xB8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SurvivalAttachmentDropRate3;                       // 0xC0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BCD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SurvivalAttachment3ConditionMissionID;             // 0xC8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SurvivalAttachmentID4;                             // 0xD0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SurvivalAttachmentDropRate4;                       // 0xD8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BCE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SurvivalAttachment4ConditionMissionID;             // 0xE0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SurvivalAttachmentID5;                             // 0xE8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SurvivalAttachmentDropRate5;                       // 0xF0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BCF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SurvivalAttachment5ConditionMissionID;             // 0xF8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x38 - 0x8)
// ScriptStruct DXM.TTLArsenalDropParamRow
struct FTTLArsenalDropParamRow : public FTableRowBase
{
public:
	float                                        HeadDropRate;                                      // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BodyDropRate;                                      // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightArmDropRate;                                  // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftArmDropRate;                                   // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LegsDropRate;                                      // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InsideDropRate;                                    // 0x1C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftWeaponDropRate;                                // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightWeaponDropRate;                               // 0x24(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShoulderWeaponDropRate;                            // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OptionDropRate;                                    // 0x2C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftRackDropRate;                                  // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightRackDropRate;                                 // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x58 (0x60 - 0x8)
// ScriptStruct DXM.TTLEffectSoundRow
struct FTTLEffectSoundRow : public FTableRowBase
{
public:
	bool                                         IsLoop;                                            // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BD0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class USoundAtomCue>          SFXAsset;                                          // 0x10(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USoundAtomCue>          SFXAssetPlayer;                                    // 0x38(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x7 (0x7 - 0x0)
// ScriptStruct DXM.TTLElementReleaseData
struct FTTLElementReleaseData
{
public:
	enum class ETTLEElementReleaseType           ReleaseType;                                       // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEElementReleaseNoticeState    EventNotice;                                       // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEElementReleaseNoticeState    ConsoleMsgNotice;                                  // 0x2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEElementReleaseNoticeState    TutorialNotice;                                    // 0x3(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEElementReleaseNoticeState    ConsoleNotification;                               // 0x4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEElementReleaseNoticeState    BasecampNotice;                                    // 0x5(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEElementReleaseNoticeState    BasecampTutorialNotice;                            // 0x6(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x58 - 0x8)
// ScriptStruct DXM.TTLElementReleaseParam
struct FTTLElementReleaseParam : public FTableRowBase
{
public:
	enum class ETTLEElementReleaseType           ReleaseType;                                       // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BD1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  MissionID;                                         // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventID;                                           // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ConsoleMsgID;                                      // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TutorialID;                                        // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BasecampTutorialID;                                // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BasecampNoticeElementTextKey;                      // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEElementReleaseNoticeTextType NoticeTextType;                                    // 0x40(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BD2[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  NotificationID;                                    // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ForceOpenAfterGameCleared;                         // 0x50(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Disabled;                                          // 0x51(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BD3[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x158 (0x160 - 0x8)
// ScriptStruct DXM.TTLEmoteParamRow
struct FTTLEmoteParamRow : public FTableRowBase
{
public:
	class FName                                  StringTableKey;                                    // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimSequenceBase>      EmoteMotion;                                       // 0x10(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimSequenceBase>      EmoteMotionLeftHand;                               // 0x38(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimSequenceBase>      EmoteMotionRightHand;                              // 0x60(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimSequenceBase>      EmoteMotionFace;                                   // 0x88(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimSequenceBase>      EmoteMotionFemale;                                 // 0xB0(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimSequenceBase>      EmoteMotionFemaleLeftHand;                         // 0xD8(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimSequenceBase>      EmoteMotionFemaleRightHand;                        // 0x100(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimSequenceBase>      EmoteMotionFemaleFace;                             // 0x128(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LoopEmote;                                         // 0x150(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BD4[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  DLCID;                                             // 0x158(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLLaserPath
struct FTTLLaserPath
{
public:
	class AActor*                                Actor;                                             // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Angle;                                             // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BD5[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLBossWeakMaterialChangeList
struct FTTLBossWeakMaterialChangeList
{
public:
	uint8                                        Pad_2BD6[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLENBossSnak_JointTransReplicator
struct FTTLENBossSnak_JointTransReplicator
{
public:
	struct FVector_NetQuantize100                Loc;                                               // 0x0(0xC)(NoDestructor, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize100                Rot;                                               // 0xC(0xC)(NoDestructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTSnakeBossPathData
struct FTTSnakeBossPathData
{
public:
	class ATTLSplinePath*                        Custom;                                            // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BD7[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLElectric
struct FTTLElectric
{
public:
	uint8                                        Pad_2BD8[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponent*                Mesh;                                              // 0x8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        VFXPlayback;                                       // 0x10(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLENBossTrts01TackleLevel
struct FTTLENBossTrts01TackleLevel
{
public:
	class FName                                  TackleParamID;                                     // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  StampParamID;                                      // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpeedRate;                                         // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TackleTime;                                        // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HomingSpeed;                                       // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReverberationTime;                                 // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLENBossTrts01ShootMissileLevel
struct FTTLENBossTrts01ShootMissileLevel
{
public:
	float                                        BeforeWaitTime;                                    // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ShootNum;                                          // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootIntervalTime;                                 // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AfterWaitTime;                                     // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLENBossTrts01StampJumpLevel
struct FTTLENBossTrts01StampJumpLevel
{
public:
	class FName                                  LandingParamID;                                    // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FallParamID;                                       // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Length;                                            // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Height;                                            // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Time;                                              // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HomingSpeed;                                       // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnSpeed;                                         // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetRange;                                       // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLENBossTrts01ShortJumpLevel
struct FTTLENBossTrts01ShortJumpLevel
{
public:
	class FName                                  LandingParamID;                                    // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Length;                                            // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Height;                                            // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AnimSpeedRate;                                     // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Time;                                              // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLENBossTrts01LongJumpLevel
struct FTTLENBossTrts01LongJumpLevel
{
public:
	class FName                                  LandingParamID;                                    // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Length;                                            // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Height;                                            // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Time;                                              // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnSpeed;                                         // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct DXM.TTLENBossTrts01TurnLevel
struct FTTLENBossTrts01TurnLevel
{
public:
	enum class ETTLENBossTrts01TurnMode          Mode;                                              // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BD9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Speed;                                             // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AnimSpeedRate;                                     // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLENBossTrts01ExtraThickLaserLevelParameter
struct FTTLENBossTrts01ExtraThickLaserLevelParameter
{
public:
	class FName                                  ParamID;                                           // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NoticeIrradiationTime;                             // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IrradiationTime;                                   // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLENBossTrts01ExtraThickLaserLevel
struct FTTLENBossTrts01ExtraThickLaserLevel
{
public:
	TArray<struct FTTLENBossTrts01ExtraThickLaserLevelParameter> Parameter;                                         // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        DischargeWeakPointTime;                            // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BDA[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLENBossTrts01SliceLaserLevel
struct FTTLENBossTrts01SliceLaserLevel
{
public:
	class FName                                  ParamID;                                           // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeightAdjustmentTime;                              // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeightAdjustmentSpeed;                             // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurningWaitTime;                                   // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurningTime;                                       // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TurningCount;                                      // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BDB[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLENBossTrts01WholeBodyBarrierLevel
struct FTTLENBossTrts01WholeBodyBarrierLevel
{
public:
	class FName                                  ParamID;                                           // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReadyTime;                                         // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartTime;                                         // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZoomTime;                                          // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExpansionTime;                                     // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxRadius;                                         // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BDC[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLENBossTrts01CannonLevel
struct FTTLENBossTrts01CannonLevel
{
public:
	float                                        RapidSpeed;                                        // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AttackTime;                                        // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLENBossTrts01StampLevel
struct FTTLENBossTrts01StampLevel
{
public:
	class FName                                  SteppingParamID;                                   // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  StampParamID;                                      // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WaitTime;                                          // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SwingupSpeed;                                      // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DownSwingSpeed;                                    // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HomingSpeed;                                       // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RandomRadius;                                      // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BDD[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct DXM.TTLENBossTrts01MoveLevel
struct FTTLENBossTrts01MoveLevel
{
public:
	int32                                        StepCount;                                         // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Speed;                                             // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IntervalTime;                                      // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLENBossTrtsBodyHitInfo
struct FTTLENBossTrtsBodyHitInfo
{
public:
	class AActor*                                Actor;                                             // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HitTime;                                           // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BDE[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLCoopAttackDamageContainer
struct FTTLCoopAttackDamageContainer
{
public:
	int32                                        CoopAttackerNum;                                   // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageRatio;                                       // 0x4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLCoopAttackContainer
struct FTTLCoopAttackContainer
{
public:
	uint8                                        Pad_2BDF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLCoopAttackDamageContainer> DamageArray;                                       // 0x8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLENBossTrtsLaserExtraThickLaserHitInfo
struct FTTLENBossTrtsLaserExtraThickLaserHitInfo
{
public:
	class ATTLCharacterCommon*                   Player;                                            // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HitTime;                                           // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BE0[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLEnemyLongRangeWeaponShootSettings
struct FTTLEnemyLongRangeWeaponShootSettings
{
public:
	enum class ETTLEnemyLongRangeWeaponShootDirectionType DirectionType;                                     // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsAddOwnerSpeed;                                   // 0x1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableRangeCheck;                                // 0x2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BE1[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RangeCheckWidthAngleDegree;                        // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RangeCheckZTop;                                    // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RangeCheckZBottom;                                 // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RangeCheckDestNear;                                // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RangeCheckDestFar;                                 // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnablePinpointCheck;                             // 0x18(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BE2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PinpointCheckRadius;                               // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xB0 (0xB0 - 0x0)
// ScriptStruct DXM.TTLPushCollideInfo
struct FTTLPushCollideInfo
{
public:
	class UShapeComponent*                       Collide;                                           // 0x0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                       AttachParent;                                      // 0x8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BE3[0xA0];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLEventMoviePlayerInitialzieClassInfo
struct FTTLEventMoviePlayerInitialzieClassInfo
{
public:
	TSubclassOf<class ATTLMoviePlayer>           MoviePlayerClass;                                  // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLEventMoviePlayerInitialzieBaseInfo
struct FTTLEventMoviePlayerInitialzieBaseInfo
{
public:
	uint8                                        Pad_2BE4[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UUserWidget>               InitMovieWidgetClass;                              // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          InitScreenTargetWidgetStepArray;                   // 0x10(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x10 (0x30 - 0x20)
// ScriptStruct DXM.TTLEventMoviePlayerInitialzieNameInfo
struct FTTLEventMoviePlayerInitialzieNameInfo : public FTTLEventMoviePlayerInitialzieBaseInfo
{
public:
	class FName                                  MovieTexturePath;                                  // 0x20(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MovieMaterialPath;                                 // 0x28(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x30 - 0x20)
// ScriptStruct DXM.TTLEventMoviePlayerInitialzieAssetInfo
struct FTTLEventMoviePlayerInitialzieAssetInfo : public FTTLEventMoviePlayerInitialzieBaseInfo
{
public:
	class UManaTexture*                          InitMovieTexture;                                  // 0x20(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    InitMovieMaterial;                                 // 0x28(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct DXM.TTLEnvironmentVFXParam
struct FTTLEnvironmentVFXParam
{
public:
	TArray<struct FTTLFxParamWeak>               Assets;                                            // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FVector                               SpawnOffset;                                       // 0x10(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SpawnOffsetRand;                                   // 0x1C(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              SpawnAngle;                                        // 0x28(0xC)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               SpawnScale;                                        // 0x34(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpawnInterval;                                     // 0x40(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpawnIntervalRand;                                 // 0x44(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1C (0x1C - 0x0)
// ScriptStruct DXM.TTLStageMinimapParam
struct FTTLStageMinimapParam
{
public:
	float                                        NorthDefferenceDegree;                             // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsChangeFromDefaultValues;                         // 0x4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BE5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GlobalSaturation;                                  // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GlobalGamma;                                       // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GlobalOffset;                                      // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MidtoneOffset;                                     // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InitialCameraZPos;                                 // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1B0 (0x1B8 - 0x8)
// ScriptStruct DXM.TTLStageSettingsRow
struct FTTLStageSettingsRow : public FTableRowBase
{
public:
	struct FLinearColor                          BackgroundShadowColor;                             // 0x8(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          ArsenalShadowColor;                                // 0x18(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          HumanShadowColor;                                  // 0x28(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          EnemyShadowColor;                                  // 0x38(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        WeatherVFXNear;                                    // 0x48(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        WeatherVFXFar;                                     // 0x70(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeatherSkyName;                                    // 0x98(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeatherLightingName;                               // 0xA0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeatherVFXName;                                    // 0xA8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLEnvironmentVFXParam               EnvironmentVFXGroundRandom;                        // 0xB0(0x48)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLEnvironmentVFXParam               EnvironmentVFXSkyRandom;                           // 0xF8(0x48)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USoundAtomCue>          EnvironmentSFX;                                    // 0x140(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USoundAtomCue>          EnvironmentSFX2;                                   // 0x168(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EnvironmentSFXThresholdZ;                          // 0x190(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPhysicalSurface                  DemoSurfaceType;                                   // 0x194(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BE6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLStageMinimapParam                 StageMinimapParam;                                 // 0x198(0x1C)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BE7[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x88 (0x88 - 0x0)
// ScriptStruct DXM.TTLEvManEventActionInfo
struct FTTLEvManEventActionInfo
{
public:
	uint8                                        Pad_2BE8[0x88];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLEvManEventActionPostProcessInfo
struct FTTLEvManEventActionPostProcessInfo
{
public:
	uint8                                        Pad_2BE9[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x2 (0x2 - 0x0)
// ScriptStruct DXM.TTLEvManEventActionLightInfo
struct FTTLEvManEventActionLightInfo
{
public:
	uint8                                        Pad_2BEA[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xB0 (0xB0 - 0x0)
// ScriptStruct DXM.TTLEvManEventSetting
struct FTTLEvManEventSetting
{
public:
	uint8                                        Pad_2BEB[0xB0];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLEventBranchParam
struct FTTLEventBranchParam
{
public:
	class FString                                BranchName;                                        // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BranchIndex;                                       // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BEC[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLEventSettingBindingActor
struct FTTLEventSettingBindingActor
{
public:
	class FString                                TrackName;                                         // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                 Actor;                                             // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Flags;                                             // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BED[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLBindingActor
struct FTTLBindingActor
{
public:
	class FString                                TrackName;                                         // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                Actor;                                             // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Flags;                                             // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BEE[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xF0 (0xF0 - 0x0)
// ScriptStruct DXM.TTLEvManSequenceActorInfo
struct FTTLEvManSequenceActorInfo
{
public:
	TArray<struct FMovieSceneObjectBindingID>    BindingIDList;                                     // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FTransform                            Transform;                                         // 0x10(0x30)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	int32                                        Flags;                                             // 0x40(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                 Actor;                                             // 0x44(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BEF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AController*                           Controller;                                        // 0x50(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BF0[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            CameraTransform;                                   // 0x60(0x30)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class USceneComponent*                       AttachedComponent;                                 // 0x90(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AttachedSoketName;                                 // 0x98(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                            AttachedRelativeTransform;                         // 0xA0(0x30)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BF1[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x20 - 0x8)
// ScriptStruct DXM.TTLSubEventParamRow
struct FTTLSubEventParamRow : public FTableRowBase
{
public:
	class FName                                  EventMessageParamName;                             // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Percentage;                                        // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Priority;                                          // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsStackEnable;                                     // 0x18(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BF2[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x40 - 0x8)
// ScriptStruct DXM.TTLEventParamRow
struct FTTLEventParamRow : public FTableRowBase
{
public:
	class FName                                  LevelSequencePath;                                 // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventMessageParamName;                             // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MissionBriefingParamName;                          // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TalkDemoParamName;                                 // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LoadLevelName;                                     // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableLetterBox;                                   // 0x30(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableNoBackgroundMessage;                         // 0x31(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EventMode;                                         // 0x32(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         SuspendGame;                                       // 0x33(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableSkip;                                        // 0x34(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableMovement;                                    // 0x35(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Immediate;                                         // 0x36(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsStartFadeLoadingInWhile;                         // 0x37(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsFinishFadeLoadingInWhile;                        // 0x38(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BF3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Priority;                                          // 0x3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x80 (0x88 - 0x8)
// ScriptStruct DXM.TTLTalkDemoParamRow
struct FTTLTalkDemoParamRow : public FTableRowBase
{
public:
	class FName                                  SpeakerNameParamName;                              // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Serif;                                             // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ImageTextureName;                                  // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsLeave;                                           // 0x28(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BF4[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SoundVoicePath;                                    // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ChangeSoundBgmPath;                                // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MsgColorId;                                        // 0x40(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MsgInAnimId;                                       // 0x44(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WindowDisplayDelay;                                // 0x48(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MessageDisplayDelay;                               // 0x4C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSelectMessageParam;                              // 0x50(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BF5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  Select00TalkDemoParamName;                         // 0x58(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Select01TalkDemoParamName;                         // 0x60(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Select02TalkDemoParamName;                         // 0x68(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Select03TalkDemoParamName;                         // 0x70(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Select04TalkDemoParamName;                         // 0x78(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NextTalkDemoParamName;                             // 0x80(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x108 (0x110 - 0x8)
// ScriptStruct DXM.TTLMissionBriefingParamRow
struct FTTLMissionBriefingParamRow : public FTableRowBase
{
public:
	class FName                                  SpeakerNameParamName;                              // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                BriefingSerif;                                     // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SoundVoicePath;                                    // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WaitTime;                                          // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableSkipMessageControl;                          // 0x2C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableSendingControl;                              // 0x2D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableSendingAfterVoicePlay;                       // 0x2E(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BF6[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  PlayAnimation00Name;                               // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PlayAnimation00Widget;                             // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         PlayAnimation00IsReverse;                          // 0x40(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BF7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PlayAnimation00DelayTime;                          // 0x44(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PlayAnimation01Name;                               // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PlayAnimation01Widget;                             // 0x50(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         PlayAnimation01IsReverse;                          // 0x58(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BF8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PlayAnimation01DelayTime;                          // 0x5C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PlayAnimation02Name;                               // 0x60(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PlayAnimation02Widget;                             // 0x68(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         PlayAnimation02IsReverse;                          // 0x70(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BF9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PlayAnimation02DelayTime;                          // 0x74(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ImageU00;                                          // 0x78(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ImageU00Icon;                                      // 0x80(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImageU00DelayTime;                                 // 0x88(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BFA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ImageU01;                                          // 0x90(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ImageU01Icon;                                      // 0x98(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImageU01DelayTime;                                 // 0xA0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BFB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ImageU02;                                          // 0xA8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ImageU02Icon;                                      // 0xB0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImageU02DelayTime;                                 // 0xB8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BFC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ImageU03;                                          // 0xC0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ImageU03Icon;                                      // 0xC8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImageU03DelayTime;                                 // 0xD0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BFD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ImageU04;                                          // 0xD8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ImageU04Icon;                                      // 0xE0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImageU04DelayTime;                                 // 0xE8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BFE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ImageU05;                                          // 0xF0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ImageU05Icon;                                      // 0xF8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImageU05DelayTime;                                 // 0x100(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BFF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  NextMissionBriefingParamName;                      // 0x108(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x40 - 0x8)
// ScriptStruct DXM.TTLEventMessageParamRow
struct FTTLEventMessageParamRow : public FTableRowBase
{
public:
	class FName                                  SpeakerNameParamName;                              // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Serif;                                             // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SoundVoicePath;                                    // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Speed;                                             // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WaitTime;                                          // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableBatchDisplayControl;                         // 0x30(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableSkipMessageControl;                          // 0x31(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableSendingControl;                              // 0x32(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableSendingAfterVoicePlay;                       // 0x33(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSelectMessageParam;                              // 0x34(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C00[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  NextMessageParamName;                              // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x40 - 0x8)
// ScriptStruct DXM.TTLSpeakerNameParamRow
struct FTTLSpeakerNameParamRow : public FTableRowBase
{
public:
	class FString                                SpeakerName;                                       // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SpeakerIconPath;                                   // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TalkDemoFaceId;                                    // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TalkDemoEmblemId;                                  // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  OuterBPName;                                       // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OuterLipSyncBlendWeight;                           // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OuterLipSyncPlayRate;                              // 0x3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLProbeInitInfo
struct FTTLProbeInitInfo
{
public:
	int32                                        EffetIndex;                                        // 0x0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Speed;                                             // 0x4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class ATTLSplinePath>         SplineRef;                                         // 0x8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Tag;                                               // 0x10(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C01[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x30 - 0x8)
// ScriptStruct DXM.TTLLaserVisualParamRow
struct FTTLLaserVisualParamRow : public FTableRowBase
{
public:
	struct FVector                               ColorVector;                                       // 0x8(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Thickness;                                         // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Thickness_ChargeMax;                               // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HitScale;                                          // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HitScale_ChargeMax;                                // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C02[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  LaserDescription;                                  // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLExplorerListContainer
struct FTTLExplorerListContainer
{
public:
	uint8                                        Pad_2C03[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UUserWidget*                           FactorWidget;                                      // 0x20(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x340 (0x340 - 0x0)
// ScriptStruct DXM.TTLFriendListInfoData
struct FTTLFriendListInfoData
{
public:
	uint8                                        Pad_2C04[0x340];                                   // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x1 (0x1 - 0x0)
// ScriptStruct DXM.TTLFxParamCrawler
struct FTTLFxParamCrawler
{
public:
	uint8                                        Pad_2C05[0x1];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLGameAutoStateContainer
struct FTTLGameAutoStateContainer
{
public:
	enum class ETTLAutomationManagerType         AutoType;                                          // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C06[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ATTLAutomationManager>     ManagerClass;                                      // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLSaveEditorContainerBase
struct FTTLSaveEditorContainerBase
{
public:
	uint8                                        Pad_2C07[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x20 - 0x18)
// ScriptStruct DXM.TTLWidgetContainer
struct FTTLWidgetContainer : public FTTLSaveEditorContainerBase
{
public:
	class UUserWidget*                           Widget;                                            // 0x18(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLGameDataSection
struct FTTLGameDataSection
{
public:
	uint8                                        Pad_2C08[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct DXM.TTLSaveEditorPageContent
struct FTTLSaveEditorPageContent
{
public:
	uint8                                        Pad_2C09[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UUserWidget*                           PageWidget;                                        // 0x8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTTLWidgetContainer>           WidgetArray;                                       // 0x10(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLGameDataSection                   OriginalData;                                      // 0x20(0x20)(NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLVariableNameBySectionData
struct FTTLVariableNameBySectionData
{
public:
	uint8                                        Pad_2C0A[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct DXM.TTLSaveEditorPrimitiveWidgetInfo
struct FTTLSaveEditorPrimitiveWidgetInfo
{
public:
	TSubclassOf<class UUserWidget>               ContentPrimitiveBool;                              // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>               ContentPrimitiveInt32;                             // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>               ContentPrimitiveInt64;                             // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>               ContentPrimitiveUInt64;                            // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>               ContentPrimitiveFloat;                             // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>               ContentPrimitiveString;                            // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>               ContentPrimitiveName;                              // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>               ContentPrimitiveFDateTime;                         // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x58 - 0x18)
// ScriptStruct DXM.TTLVariableContainer
struct FTTLVariableContainer : public FTTLSaveEditorContainerBase
{
public:
	uint8                                        Pad_2C0B[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLMatchmakeErrorResult
struct FTTLMatchmakeErrorResult
{
public:
	class FString                                ErrroCodeStr;                                      // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLMatchmakeErrorType            ErrorType;                                         // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C0C[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLSessionErrorResult
struct FTTLSessionErrorResult
{
public:
	class FString                                ErrroCodeStr;                                      // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLSessionErrorType              ErrorType;                                         // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C0D[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLHateTargetActor
struct FTTLHateTargetActor
{
public:
	class AActor*                                Actor;                                             // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2C0E[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x628 (0x628 - 0x0)
// ScriptStruct DXM.TTLPVPEventArsenalParam
struct FTTLPVPEventArsenalParam
{
public:
	struct FTTLArsenalPartsInfoList              PartsInfoList;                                     // 0x0(0x310)(BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLArsenalPaintInfo                  PaintInfo;                                         // 0x310(0x310)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C0F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct DXM.TTLPVPResultPlayerParams
struct FTTLPVPResultPlayerParams
{
public:
	class FString                                PlayerName;                                        // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlayerIndex;                                       // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MultiPlayerIndex;                                  // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BeforeMoney;                                       // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RewardMoney;                                       // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EmblemID;                                          // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TitleID;                                           // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsExecDuel;                                        // 0x30(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C10[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct DXM.TTLPVPResultParam
struct FTTLPVPResultParam
{
public:
	enum class ETTLEMissionResult                MissionResult;                                     // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C11[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        BeforeMoney;                                       // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AfterMoney;                                        // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        VariationMoney;                                    // 0xC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                WinnerPlayerName;                                  // 0x10(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTTLPVPResultPlayerParams>     PlayerParams;                                      // 0x20(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct DXM.TTLFader
struct FTTLFader
{
public:
	uint8                                        Pad_2C12[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLMultiplayCondition
struct FTTLMultiplayCondition
{
public:
	uint8                                        Pad_2C13[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLGeneralGroup
struct FTTLGeneralGroup
{
public:
	uint8                                        Pad_2C14[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        Actors;                                            // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLTargetAreaGroup
struct FTTLTargetAreaGroup
{
public:
	uint8                                        Pad_2C15[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ATTLTargetArea*>                AreaActors;                                        // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLMissionGroup
struct FTTLMissionGroup
{
public:
	uint8                                        Pad_2C16[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        Actors;                                            // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C17[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLOptionScreenInfo
struct FTTLOptionScreenInfo
{
public:
	enum class EFTTLOptionScreenColorPerceptionType ColorPerception;                                   // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C18[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Brightness;                                        // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1C (0x1C - 0x0)
// ScriptStruct DXM.TTLGraphicOptionInfo
struct FTTLGraphicOptionInfo
{
public:
	bool                                         IsAutoFixResolution;                               // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLAntiAliasMethod               AntiAiliasMethod;                                  // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLResolutionPreset              ResolutionPreset;                                  // 0x2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EWindowMode                       WindowMode;                                        // 0x3(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C19[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        AntiAliasQuality;                                  // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        ShadowQuality;                                     // 0x9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        TextureQuality;                                    // 0xA(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableVSync;                                     // 0xB(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableSceneColorFringe;                          // 0xC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableBloom;                                     // 0xD(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableLensFlare;                                 // 0xE(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableVignetteAndGrainJitter;                    // 0xF(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableDOF;                                       // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        ScreenPercentage;                                  // 0x11(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2C1A[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLOptionScreenInfo                  ScreenInfo;                                        // 0x14(0x8)(NoDestructor, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct DXM.TTLResolutionInfo
struct FTTLResolutionInfo
{
public:
	uint8                                        Pad_2C1B[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLGravityTargetList
struct FTTLGravityTargetList
{
public:
	class AActor*                                TargetActor;                                       // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        FxPlayback;                                        // 0x8(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C1C[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLHateDeliverSetting
struct FTTLHateDeliverSetting
{
public:
	class AActor*                                AttackCauser;                                      // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                AttackTarget;                                      // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                HateOrigin;                                        // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                HateTarget;                                        // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsPlus;                                            // 0x20(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C1D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HateDiffValue;                                     // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x2C (0x2C - 0x0)
// ScriptStruct DXM.TTLHeatSourceParameter
struct FTTLHeatSourceParameter
{
public:
	float                                        HeatLifeTime;                                      // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HitPoint;                                          // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeatTMP;                                           // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BurningTMP;                                        // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               HeatScale;                                         // 0x10(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BurnScale;                                         // 0x1C(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDestructible;                                    // 0x28(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsImmediateDestruct;                               // 0x29(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         NoPlayDestroyAnimation;                            // 0x2A(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C1E[0x1];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLHeatTargetInfo
struct FTTLHeatTargetInfo
{
public:
	class UTTLBasicStatusComponent*              Status;                                            // 0x0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsBurn;                                            // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C1F[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x10 - 0x8)
// ScriptStruct DXM.TTLHudCustomParamRow
struct FTTLHudCustomParamRow : public FTableRowBase
{
public:
	int32                                        Value;                                             // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C20[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct DXM.TTLMemberForHUD
struct FTTLMemberForHUD
{
public:
	uint8                                        Pad_2C21[0x48];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLHUDMissionCommandGoalItemParams
struct FTTLHUDMissionCommandGoalItemParams
{
public:
	class FText                                  Title;                                             // 0x0(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	enum class ETTLResultIconType                Icon1;                                             // 0x18(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLResultIconType                Icon2;                                             // 0x19(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLGoalItemBackgroundType        BackgroundType;                                    // 0x1A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C22[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x2 (0x2 - 0x0)
// ScriptStruct DXM.TTLHUDMissionCommandWeaponParams
struct FTTLHUDMissionCommandWeaponParams
{
public:
	bool                                         IsLeftHand;                                        // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsLeftRack;                                        // 0x1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct DXM.TTLHUDMissionCommandParams
struct FTTLHUDMissionCommandParams
{
public:
	class FText                                  Title;                                             // 0x0(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  Subtitle;                                          // 0x18(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<struct FTTLHUDMissionCommandGoalItemParams> GoalItems;                                         // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	enum class ETTLResultIconType                AnimationSubGoalIcon;                              // 0x40(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C23[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        AnimationSubGoalIndex;                             // 0x44(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLHUDMissionCommandWeaponParams     WeaponParams;                                      // 0x48(0x2)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C24[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct DXM.TTLHUDDuelResultPlayerParams
struct FTTLHUDDuelResultPlayerParams
{
public:
	class FText                                  PlayerName;                                        // 0x0(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                         IsDefeated;                                        // 0x18(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C25[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        BeforeMoney;                                       // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RewardMoney;                                       // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C26[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FText>                          DefeatPlayerName;                                  // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         IsMyself;                                          // 0x38(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C27[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  EmblemID;                                          // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLHUDDuelResultParams
struct FTTLHUDDuelResultParams
{
public:
	int32                                        BeforeMoney;                                       // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AfterMoney;                                        // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTTLHUDDuelResultPlayerParams> Players;                                           // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xF8 (0xF8 - 0x0)
// ScriptStruct DXM.TTLHUDPVPResultCommandParams
struct FTTLHUDPVPResultCommandParams
{
public:
	float                                        Duration;                                          // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C28[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                StatusText;                                        // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                WinnerText;                                        // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                MoneyText;                                         // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Money;                                             // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BeforeMoney;                                       // 0x3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AddMoney;                                          // 0x40(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GaugeNewValue;                                     // 0x44(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableGaugeAnimation;                              // 0x48(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C29[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GaugeDuration1;                                    // 0x4C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GaugeDuration2;                                    // 0x50(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GaugeDuration3;                                    // 0x54(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLHUDPVPResultGaugeEaseType     GaugeEaseType;                                     // 0x58(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C2A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GaugeEaseExp;                                      // 0x5C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  ItemText1;                                         // 0x60(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  ItemText2;                                         // 0x78(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  ItemText3;                                         // 0x90(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                        ItemPoint;                                         // 0xA8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ItemIsDefeated;                                    // 0xAC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C2B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FText>                          DefeatPlayerName;                                  // 0xB0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        ItemIndex;                                         // 0xC0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsMyself;                                          // 0xC4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C2C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  EmblemID;                                          // 0xC8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TitleID;                                           // 0xD0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowTeamColor;                                     // 0xD8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C2D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RemainingVPRate;                                   // 0xDC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsArsenalVPRate;                                   // 0xE0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEPVPResultType                ResultType;                                        // 0xE1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C2E[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UWidgetAnimation*>              AnimationList;                                     // 0xE8(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct DXM.TTLHUDStartDuelCommandParams
struct FTTLHUDStartDuelCommandParams
{
public:
	class FText                                  PlayerName1;                                       // 0x0(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                        Prize1;                                            // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C2F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  PlayerName2;                                       // 0x20(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                        Prize2;                                            // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AdditionalPlayerCount;                             // 0x3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C30[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLHUDStartDuelPlayerInfo
struct FTTLHUDStartDuelPlayerInfo
{
public:
	uint8                                        Pad_2C31[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xE8 (0xF0 - 0x8)
// ScriptStruct DXM.TTLHumanAlterationSkillRow
struct FTTLHumanAlterationSkillRow : public FTableRowBase
{
public:
	class FString                                Comment;                                           // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SkillName;                                         // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SiteName;                                          // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanSurgeryPoint            SurgeryPoint;                                      // 0x28(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C32[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SkillDescription;                                  // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SkillIconPath;                                     // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  OperationDescription;                              // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        OperationCost;                                     // 0x48(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C33[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  PremiseSkillID;                                    // 0x50(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NextSkill00;                                       // 0x58(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NextSkill01;                                       // 0x60(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NextSkill02;                                       // 0x68(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NextSkill03;                                       // 0x70(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NextSkill04;                                       // 0x78(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NextSkill05;                                       // 0x80(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NextSkill06;                                       // 0x88(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsExtraSkill;                                      // 0x90(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanPartsType               ChangeModelPartsType;                              // 0x91(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C34[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ChangeModelName;                                   // 0x98(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ChangeDataNameMale;                                // 0xA0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ChangeDataNameFemale;                              // 0xA8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsChangeParts;                                     // 0xB0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C35[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  GazeCameraID;                                      // 0xB8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  KartePartsID_01;                                   // 0xC0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  KartePartsID_02;                                   // 0xC8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  KartePartsID_03;                                   // 0xD0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Level;                                             // 0xD8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C36[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        DispOfs;                                           // 0xDC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SkillTableID;                                      // 0xE0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanSkillEffectType         EffectType;                                        // 0xE8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UseTrialMode;                                      // 0xE9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C37[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xB10 (0xB10 - 0x0)
// ScriptStruct DXM.TTLHumanEditSettings
struct FTTLHumanEditSettings
{
public:
	uint8                                        Pad_2C38[0xA88];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ETTLEHumanGenderType              SexType;                                           // 0xA88(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C39[0x27];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector4                              ParameterDecal;                                    // 0xAB0(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C3A[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                FaceID;                                            // 0xAE0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                LeftHandID;                                        // 0xAF0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                RightHandID;                                       // 0xB00(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct DXM.TTLEditColor
struct FTTLEditColor
{
public:
	struct FLinearColor                          Color;                                             // 0x0(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EmissionPower;                                     // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct DXM.TTLIceCommonParamRow
struct FTTLIceCommonParamRow : public FTableRowBase
{
public:
	int32                                        FlavorRandomChoiceValue;                           // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        GetStampEatLimitNum;                               // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableStampEatLimit;                               // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C3B[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x48 - 0x8)
// ScriptStruct DXM.TTLIceComboParamRow
struct FTTLIceComboParamRow : public FTableRowBase
{
public:
	bool                                         IsEnable;                                          // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C3C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ConeID;                                            // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FlaverID_00;                                       // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FlaverID_01;                                       // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EffectID;                                          // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PercentValue;                                      // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C3D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Comment;                                           // 0x38(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x58 - 0x8)
// ScriptStruct DXM.TTLIceParamBaseRow
struct FTTLIceParamBaseRow : public FTableRowBase
{
public:
	bool                                         IsEnable;                                          // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C3E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  TextureFileName;                                   // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                NameKey;                                           // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DescriptionKey;                                    // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PriceValue;                                        // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C3F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Comment;                                           // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C40[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x60 - 0x58)
// ScriptStruct DXM.TTLIceCornParamRow
struct FTTLIceCornParamRow : public FTTLIceParamBaseRow
{
public:
	int32                                        PercentValue;                                      // 0x58(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFTTLIceFlavorInAnime             FlavorInAnime;                                     // 0x5C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C41[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x60 - 0x58)
// ScriptStruct DXM.TTLIceFlavorParamRow
struct FTTLIceFlavorParamRow : public FTTLIceParamBaseRow
{
public:
	class FName                                  EffectID;                                          // 0x58(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x38 - 0x8)
// ScriptStruct DXM.TTLIceEFfectParamRow
struct FTTLIceEFfectParamRow : public FTableRowBase
{
public:
	class FName                                  InvokeSkillID;                                     // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DescriptionKey;                                    // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ResultKey;                                         // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C42[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct DXM.TTLIceBuyListContainer
struct FTTLIceBuyListContainer
{
public:
	uint8                                        Pad_2C43[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UWidgetAnimation*                      FadeInAnim;                                        // 0x30(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xB8 (0xB8 - 0x0)
// ScriptStruct DXM.TTLIceDialogContainer
struct FTTLIceDialogContainer
{
public:
	uint8                                        Pad_2C44[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UClass*                                SkillTextClass;                                    // 0x48(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UUserWidget*>                   SkillTextWidgetArray;                              // 0x50(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      FadeInAnim;                                        // 0x60(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      DecideAnim;                                        // 0x68(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      IceSkillEffectFadeIn;                              // 0x70(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      IceSkillEffectFadeOut;                             // 0x78(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      MoneyFocusInAnim;                                  // 0x80(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      BtnNormalAnim;                                     // 0x88(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      BtnFocusInAnim;                                    // 0x90(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      BtnDisableInAnim;                                  // 0x98(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C45[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct DXM.TTLIceDialogBtnContainer
struct FTTLIceDialogBtnContainer
{
public:
	uint8                                        Pad_2C46[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLIceDialogBtnInfo
struct FTTLIceDialogBtnInfo
{
public:
	uint8                                        Pad_2C47[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLFlavorPickupContainer
struct FTTLFlavorPickupContainer
{
public:
	uint8                                        Pad_2C48[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct DXM.TTLInsuranceContainer
struct FTTLInsuranceContainer
{
public:
	class FName                                  InsuranceExpenseId;                                // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLInsuranceType                 InsuranceType;                                     // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C49[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TScriptInterface<class ITTLInsuranceSourceInterface> OwnerInterface;                                    // 0x18(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C4A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xD8 (0xD8 - 0x0)
// ScriptStruct DXM.TTLSurvivalMissionPartsInventoryData
struct FTTLSurvivalMissionPartsInventoryData
{
public:
	struct FTTLArsenalDroppedPartsInfo           InventoryData;                                     // 0x0(0xD0)(NativeAccessSpecifierPublic)
	uint8                                        MultiIndex;                                        // 0xD0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C4B[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLSurvivalMissionPartsInventoryPacket
struct FTTLSurvivalMissionPartsInventoryPacket
{
public:
	TArray<struct FTTLSurvivalMissionPartsInventoryData> InventoryPartsList;                                // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct DXM.TTLPickUpPartsResult
struct FTTLPickUpPartsResult
{
public:
	struct FTTLArsenalPartsInfo                  PartsInfo;                                         // 0x0(0x38)(BlueprintVisible, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InventoryIndex;                                    // 0x38(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C4C[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xE8 (0xE8 - 0x0)
// ScriptStruct DXM.TTLInventoryItem
struct FTTLInventoryItem
{
public:
	enum class ETTLInventoryCategory             InventoryCategory;                                 // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C4D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ItemId;                                            // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AttachmentID1;                                     // 0x10(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AttachmentID2;                                     // 0x18(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AttachmentID3;                                     // 0x20(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PartsHP;                                           // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PartsHPMax;                                        // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PartsHPMax2;                                       // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         PartsIsHalfDestroyed;                              // 0x34(0x1)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         PartsIsCompletelyDestroyed;                        // 0x35(0x1)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C4E[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentBulletNum;                                  // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxBulletNum;                                      // 0x3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MagazineSize;                                      // 0x40(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BulletRemain;                                      // 0x44(0x4)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        UID;                                               // 0x48(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C4F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLArsenalPartsPaintInfo             PaintInfo;                                         // 0x50(0x98)(Edit, BlueprintVisible, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLDropItem
struct FTTLDropItem
{
public:
	enum class ETTLEDropType                     DropType;                                          // 0x0(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLWeaponType                    BulletType;                                        // 0x1(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C50[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        BulletNum;                                         // 0x4(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLKarteLog
struct FTTLKarteLog
{
public:
	class FName                                  SkillID;                                           // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct DXM.TTLSkillEffectRow
struct FTTLSkillEffectRow : public FTableRowBase
{
public:
	enum class ETTLESkillEffectType              SkillType;                                         // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C51[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        EffectValue;                                       // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLSkillTargetType               SkillTarget;                                       // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C52[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SpecialParamName;                                  // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x28 - 0x8)
// ScriptStruct DXM.TTLKarteRow
struct FTTLKarteRow : public FTableRowBase
{
public:
	class FName                                  SkillEffect1;                                      // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SkillEffect2;                                      // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SkillEffect3;                                      // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SkillEffect4;                                      // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xB0 (0xB8 - 0x8)
// ScriptStruct DXM.TTLOptionKeyboardPresetListParam
struct FTTLOptionKeyboardPresetListParam : public FTableRowBase
{
public:
	class FString                                Comment;                                           // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDataTable>             SpecificatedTblSoft;                               // 0x18(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDataTable>             ArsenalTblSoft;                                    // 0x40(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDataTable>             OuterTblSoft;                                      // 0x68(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDataTable>             CommonTblSoft;                                     // 0x90(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x48 - 0x8)
// ScriptStruct DXM.TTLOptionKeyboardConfigPresetParam
struct FTTLOptionKeyboardConfigPresetParam : public FTableRowBase
{
public:
	class FString                                Comment;                                           // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEActionType                   ActionType;                                        // 0x18(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C53[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FKey                                  Key;                                               // 0x20(0x18)(Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEKeyboardActionKind           KeyActionKind;                                     // 0x38(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C54[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AnalogActionDirectionValue;                        // 0x3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        UiDisplayPriority;                                 // 0x40(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C55[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLSkillTreeWidgetList
struct FTTLSkillTreeWidgetList
{
public:
	TArray<class UUserWidget*>                   WidgetArray;                                       // 0x0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLLandAnimalIdleAnimationInfo
struct FTTLLandAnimalIdleAnimationInfo
{
public:
	uint8                                        Pad_2C56[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        IdleTime;                                          // 0x8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C57[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct DXM.TTLLandAnimalInfo
struct FTTLLandAnimalInfo
{
public:
	class USkeletalMesh*                         Mesh;                                              // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTTLLandAnimalIdleAnimationInfo> IdleAnimInfoArray;                                 // 0x8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        SpawnNum;                                          // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C58[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UClass*                                AnimInstanceAsset;                                 // 0x20(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        IdleAnimNum;                                       // 0x28(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C59[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ULandAnimalEscapeEntity>   EntityClass;                                       // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct DXM.TTLLanguageInfomation
struct FTTLLanguageInfomation
{
public:
	uint8                                        Pad_2C5A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                TextNamespace;                                     // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                TextKey;                                           // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ISOTwoLetters;                                     // 0x28(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLRemovePlayerInfo
struct FTTLRemovePlayerInfo
{
public:
	uint8                                        Pad_2C5B[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLMissionProgress
struct FTTLMissionProgress
{
public:
	enum class ETTLEMissionProgressType          Type;                                              // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C5C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLHUDRestTarget*                     HUDRestTarget;                                     // 0x8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TargetTag;                                         // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MissionProgressTargetInitialCount;                 // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEMissionProgressValueShowType ValueShowType;                                     // 0x1C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEMissionProgressValueCountType ValueCountType;                                    // 0x1D(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C5D[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLNPCFriendInfo
struct FTTLNPCFriendInfo
{
public:
	uint8                                        Pad_2C5E[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x30 - 0x8)
// ScriptStruct DXM.TTLStageConditionsRow
struct FTTLStageConditionsRow : public FTableRowBase
{
public:
	float                                        FrameThrowerRangeRatio;                            // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FrameThrowerDamageRatio;                           // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FrameThrowerTMPRatio;                              // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArkGunRangeRatio;                                  // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArkGunDamageRatio;                                 // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArkGunChainRatio;                                  // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StunRatio;                                         // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BurningRatio;                                      // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMPRecoveryRatio;                                  // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C5F[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x180 (0x188 - 0x8)
// ScriptStruct DXM.TTLMissionSettingsRow
struct FTTLMissionSettingsRow : public FTableRowBase
{
public:
	float                                        FemtoZoneTopZCm;                                   // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FemtoZoneBottomZCm;                                // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FemtoOffsetIncreasePerSecondInZoneTop;             // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FemtoOffsetIncreasePerSecondInZoneBottom;          // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxDynamicHeatSourceNum;                           // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxAcidSpaceNum;                                   // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxIncendiarySpaceNum;                             // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxHealSpaceNum;                                   // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxGravityBulletNum;                               // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C60[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  StageName;                                         // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  StageConditionName;                                // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MainGoalReward;                                    // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SubGoal1Reward;                                    // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SubGoal2Reward;                                    // 0x50(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SubGoal3Reward;                                    // 0x58(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MissionDemoName;                                   // 0x60(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsFlyingMissionStart;                              // 0x68(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEMissionPlayerStartType       PlayerStartType;                                   // 0x69(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEMissionUniqueStatus          UniqueCondition;                                   // 0x6A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C61[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ContinuousPartsListID;                             // 0x70(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FixationWeaponID;                                  // 0x78(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLPartsType                     FixationWeaponType;                                // 0x80(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanFriendlyFire;                                   // 0x81(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEMissionTimeCheckType         TimeType;                                          // 0x82(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEMissionWeatherCheckType      WeatherType;                                       // 0x83(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EncounterOccurRate;                                // 0x84(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EncounterEventID1;                                 // 0x88(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EncounterEvent1Rate;                               // 0x90(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C62[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  EncounterEvent1Condition;                          // 0x98(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EncounterEventID2;                                 // 0xA0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EncounterEvent2Rate;                               // 0xA8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C63[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  EncounterEvent2Condition;                          // 0xB0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EncounterEventID3;                                 // 0xB8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EncounterEvent3Rate;                               // 0xC0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C64[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  EncounterEvent3Condition;                          // 0xC8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EncounterEventID4;                                 // 0xD0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EncounterEvent4Rate;                               // 0xD8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C65[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  EncounterEvent4Condition;                          // 0xE0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EncounterEventID5;                                 // 0xE8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EncounterEvent5Rate;                               // 0xF0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C66[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  EncounterEvent5Condition;                          // 0xF8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EncounterEventID6;                                 // 0x100(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EncounterEvent6Rate;                               // 0x108(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C67[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  EncounterEvent6Condition;                          // 0x110(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EncounterEventID7;                                 // 0x118(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EncounterEvent7Rate;                               // 0x120(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C68[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  EncounterEvent7Condition;                          // 0x128(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EncounterEventID8;                                 // 0x130(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EncounterEvent8Rate;                               // 0x138(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C69[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  EncounterEvent8Condition;                          // 0x140(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EncounterEventID9;                                 // 0x148(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EncounterEvent9Rate;                               // 0x150(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C6A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  EncounterEvent9Condition;                          // 0x158(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EncounterEventID10;                                // 0x160(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EncounterEvent10Rate;                              // 0x168(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C6B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  EncounterEvent10Condition;                         // 0x170(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UseAllyAttackRate;                                 // 0x178(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C6C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AllyAttackRate;                                    // 0x17C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CollectPlayerLog;                                  // 0x180(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C6D[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x148 (0x148 - 0x0)
// ScriptStruct DXM.TTLLightningMoveParam
struct FTTLLightningMoveParam
{
public:
	float                                        MoveStartDelay;                                    // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveIntervalDelay;                                 // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveContinuousTime;                                // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MoveNum;                                           // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsUseOneFrameMove;                                 // 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C6E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           FxMoveStart;                                       // 0x18(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxMoveLoop;                                        // 0xB0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLLineChatManageInfo
struct FTTLLineChatManageInfo
{
public:
	bool                                         Unread;                                            // 0x0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C6F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TalkNo;                                            // 0x4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MessageCount;                                      // 0x8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MessageMax;                                        // 0xC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct DXM.TTLLineChatDispParam
struct FTTLLineChatDispParam
{
public:
	enum class ETTLELineChatState                State;                                             // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C70[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Pos;                                               // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StartTalkIndex;                                    // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x28 - 0x8)
// ScriptStruct DXM.TTLLineChatTagParamRow
struct FTTLLineChatTagParamRow : public FTableRowBase
{
public:
	class FString                                TagSrc;                                            // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                TagDst;                                            // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x10 - 0x8)
// ScriptStruct DXM.TTLLineChatFrameTypeParamRow
struct FTTLLineChatFrameTypeParamRow : public FTableRowBase
{
public:
	int32                                        FrameType;                                         // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C71[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x58 (0x60 - 0x8)
// ScriptStruct DXM.TTLLineChatManagerParamRow
struct FTTLLineChatManagerParamRow : public FTableRowBase
{
public:
	class FName                                  StartTalkID;                                       // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Num;                                               // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C72[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  MissionID;                                         // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MissionID2;                                        // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MissionID3;                                        // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NpcID;                                             // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BriefingID;                                        // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EndingViewedIndex;                                 // 0x40(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C73[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  TitleName;                                         // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                TitleMsg;                                          // 0x50(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x28 - 0x8)
// ScriptStruct DXM.TTLLineChatParamRow
struct FTTLLineChatParamRow : public FTableRowBase
{
public:
	class FName                                  SpeakerNameParamName;                              // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Serif;                                             // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Speed;                                             // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WaitTime;                                          // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         RightTalk;                                         // 0x20(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C74[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLLoadAsyncRequest
struct FTTLLoadAsyncRequest
{
public:
	class UTTLLoadAsyncAction*                   Action;                                            // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        State;                                             // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C75[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLLoadBackgroundParam
struct FTTLLoadBackgroundParam
{
public:
	class FName                                  UTextBlockName;                                    // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutoInputInterval;                                 // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IntervalFluctuationRange;                          // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEAutoTextDisplayRule          DisplayRule;                                       // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C76[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        OverflowLineLimitRate;                             // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        LoadingBGTextKey;                                  // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x28 - 0x8)
// ScriptStruct DXM.TTLTipsParamRow
struct FTTLTipsParamRow : public FTableRowBase
{
public:
	enum class ETTLETipsCategory                 TipsCategory;                                      // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C77[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  TipsTextID;                                        // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PremiseMissionID;                                  // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLOptionKeyConfigKeyType        TipsKeyAssign;                                     // 0x20(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C78[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLLockonTargetUnit
struct FTTLLockonTargetUnit
{
public:
	uint8                                        Pad_2C79[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x60 (0x60 - 0x0)
// ScriptStruct DXM.TTLLockonPartsInfo
struct FTTLLockonPartsInfo
{
public:
	class FName                                  AttachSocketName;                                  // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C7A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            AttachOffset;                                      // 0x10(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	enum class ETTLLockonPartsCollide            CollideType;                                       // 0x40(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C7B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               CollideSize;                                       // 0x44(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLLockonPartsPawn*                   LockonPartsPawn;                                   // 0x50(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C7C[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x138 (0x138 - 0x0)
// ScriptStruct DXM.TTLMessageLogPacket
struct FTTLMessageLogPacket
{
public:
	bool                                         IsBroadcast;                                       // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSendEnemyOnly;                                   // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsMine;                                            // 0x2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLMessageLogItemType            MessageLogType;                                    // 0x3(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableInstigatorOverrideID;                        // 0x4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C7D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                InstigatorOverrideID;                              // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableInstigatorUserName;                          // 0x18(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C7E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                InstigatorUserName;                                // 0x20(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableInstigatorNPCMetaID;                         // 0x30(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C7F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                InstigatorNPCMetaID;                               // 0x38(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableInstigatorEnemyID;                           // 0x48(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C80[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                InstigatorEnemyID;                                 // 0x50(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableTargetOverrideID;                            // 0x60(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C81[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                TargetOverrideID;                                  // 0x68(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableTargetUserName;                              // 0x78(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C82[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                TargetUserName;                                    // 0x80(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableTargetNPCMetaID;                             // 0x90(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C83[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                TargetNPCMetaID;                                   // 0x98(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableTargetEnemyID;                               // 0xA8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C84[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                TargetEnemyID;                                     // 0xB0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableTarget2OverrideID;                           // 0xC0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C85[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Target2OverrideID;                                 // 0xC8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableTarget2UserName;                             // 0xD8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C86[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Target2UserName;                                   // 0xE0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableTarget2NPCMetaID;                            // 0xF0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C87[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Target2NPCMetaID;                                  // 0xF8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableTarget2EnemyID;                              // 0x108(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C88[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Target2EnemyID;                                    // 0x110(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLPartsType                     PartsType;                                         // 0x120(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C89[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  PartsID;                                           // 0x128(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Expense;                                           // 0x130(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C8A[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x10 - 0x8)
// ScriptStruct DXM.TTLDefeatEnemyLogMessageParam
struct FTTLDefeatEnemyLogMessageParam : public FTableRowBase
{
public:
	int32                                        Dummy;                                             // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C8B[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x40 - 0x8)
// ScriptStruct DXM.TTLLogoParamRow
struct FTTLLogoParamRow : public FTableRowBase
{
public:
	class FName                                  TexPath;                                           // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WaitTime;                                          // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C8C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                WarningTitle;                                      // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                WarningMsg;                                        // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Skip;                                              // 0x38(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C8D[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x3C (0x3C - 0x0)
// ScriptStruct DXM.TTLongRangeLaserCannonL_LaserParam
struct FTTLongRangeLaserCannonL_LaserParam
{
public:
	float                                        LockOnTargetTimeLimit;                             // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxNumOfShot;                                      // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShotInterval;                                      // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartAttackInterval;                               // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EndAttackInterval;                                 // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExtraThickLaserRange;                              // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExtraThickLaserPreparationTime;                    // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExtraThickLaserRadius;                             // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExtraThickLaserNoticeStartTime;                    // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExtraThickLaserStartTime;                          // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExtraThickLaserFinishTime;                         // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExtraThickLaserIntervalTime;                       // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NoticeIrradiationTime;                             // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IrradiationTime;                                   // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExtraThickLaserEndTime;                            // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x4 (0x4 - 0x0)
// ScriptStruct DXM.TTLLaserCameraShakeParam
struct FTTLLaserCameraShakeParam
{
public:
	uint8                                        Pad_2C8E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x10 - 0x8)
// ScriptStruct DXM.TTLMainMenuNotificationIconRow
struct FTTLMainMenuNotificationIconRow : public FTableRowBase
{
public:
	class FName                                  IconPath;                                          // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x30 - 0x8)
// ScriptStruct DXM.TTLMainMenuNotificationParamRow
struct FTTLMainMenuNotificationParamRow : public FTableRowBase
{
public:
	class FName                                  TitleKey;                                          // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Text1Key;                                          // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Text2Key;                                          // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  IconKey;                                           // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsShowWarningIcon;                                 // 0x28(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C8F[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x78 - 0x30)
// ScriptStruct DXM.TTLMainMenuNotificationSave
struct FTTLMainMenuNotificationSave : public FTTLMainMenuNotificationParamRow
{
public:
	class FName                                  MissionID;                                         // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PartsID;                                           // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DecorationID;                                      // 0x40(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NpcID;                                             // 0x48(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Counter;                                           // 0x50(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C90[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                LineChatMsg;                                       // 0x58(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ContextStr;                                        // 0x68(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLMainMenuNotificationArea
struct FTTLMainMenuNotificationArea
{
public:
	class UUserWidget*                           MenuButton;                                        // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           NotificationArea;                                  // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UUserWidget*>                   NotificationList;                                  // 0x10(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	enum class ETTLEMainMenuFacilityState        FacilityState;                                     // 0x20(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C91[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x10 - 0x8)
// ScriptStruct DXM.TTLInitOpenManual
struct FTTLInitOpenManual : public FTableRowBase
{
public:
	class FName                                  OpenKey;                                           // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct DXM.UTTLTutorial
struct FUTTLTutorial : public FTableRowBase
{
public:
	class FName                                  TuatorialKey;                                      // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ManualKey;                                         // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x40 - 0x8)
// ScriptStruct DXM.UTTLManualInfo
struct FUTTLManualInfo : public FTableRowBase
{
public:
	class FName                                  ManualTitle;                                       // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ManualText;                                        // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Image01;                                           // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Image02;                                           // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDisplayArrow;                                    // 0x28(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C92[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  BigScrollItemName;                                 // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SmallScrollItemName;                               // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLBigItemInfo
struct FTTLBigItemInfo
{
public:
	uint8                                        Pad_2C93[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x3 (0x3 - 0x0)
// ScriptStruct DXM.TTLSmallItemInfo
struct FTTLSmallItemInfo
{
public:
	uint8                                        Pad_2C94[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLSmallItem
struct FTTLSmallItem
{
public:
	TArray<class FText>                          NameArray;                                         // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C95[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x2 (0x2 - 0x0)
// ScriptStruct DXM.TTLSmallItemPrimitive
struct FTTLSmallItemPrimitive
{
public:
	uint8                                        Pad_2C96[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLRateAndPrincipalID
struct FTTLRateAndPrincipalID
{
public:
	uint64                                       PrincipalID;                                       // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        OriginalValue;                                     // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        VariableValue;                                     // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DisconnectionCount;                                // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C97[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLMaterialTextureParameterValue
struct FTTLMaterialTextureParameterValue
{
public:
	class FName                                  ParameterName;                                     // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture*                              Value;                                             // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLMaterialScalarParameterValue
struct FTTLMaterialScalarParameterValue
{
public:
	class FName                                  ParameterName;                                     // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Value;                                             // 0x8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C98[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLMaterialVectorParameterValue
struct FTTLMaterialVectorParameterValue
{
public:
	class FName                                  ParameterName;                                     // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          Value;                                             // 0x8(0x10)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct DXM.TTLMeteoriteSpawnIndexContainer
struct FTTLMeteoriteSpawnIndexContainer
{
public:
	uint8                                        Pad_2C99[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct DXM.TTLMeteoriteHitTargetContainer
struct FTTLMeteoriteHitTargetContainer
{
public:
	uint8                                        Pad_2C9A[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLMeteoriteHitTargetInfo
struct FTTLMeteoriteHitTargetInfo
{
public:
	TSubclassOf<class AActor>                    TargetParentClassIs;                               // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CollisionEnableDistance;                           // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C9B[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x50 (0x58 - 0x8)
// ScriptStruct DXM.TTLNPCSkillMissionRarePartsParam
struct FTTLNPCSkillMissionRarePartsParam : public FTableRowBase
{
public:
	class FName                                  RarePart1;                                         // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLPartsType                     RarePartType1;                                     // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C9C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  RarePart2;                                         // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLPartsType                     RarePartType2;                                     // 0x20(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C9D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  RarePart3;                                         // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLPartsType                     RarePartType3;                                     // 0x30(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C9E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  RarePart4;                                         // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLPartsType                     RarePartType4;                                     // 0x40(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C9F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  RarePart5;                                         // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLPartsType                     RarePartType5;                                     // 0x50(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CA0[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC0 (0xC8 - 0x8)
// ScriptStruct DXM.TTLMissionEnemyAppearanceInfoParam
struct FTTLMissionEnemyAppearanceInfoParam : public FTableRowBase
{
public:
	class FString                                Key_Boss1;                                         // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Key_Boss2;                                         // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Key_Enemy1;                                        // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Key_Enemy2;                                        // 0x38(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Key_Enemy3;                                        // 0x48(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Key_Enemy4;                                        // 0x58(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Key_Enemy5;                                        // 0x68(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Key_Arsenal1;                                      // 0x78(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Key_Arsenal2;                                      // 0x88(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Key_Arsenal3;                                      // 0x98(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Key_Arsenal4;                                      // 0xA8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Key_Arsenal5;                                      // 0xB8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct DXM.TTLMissionPvPTimeUpResult
struct FTTLMissionPvPTimeUpResult
{
public:
	int32                                        MultiplayPlayerIndex;                              // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArsenalHPRate;                                     // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OuterHpRate;                                       // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x10 - 0x8)
// ScriptStruct DXM.TTLMissionExpenseParam
struct FTTLMissionExpenseParam : public FTableRowBase
{
public:
	int32                                        Expense;                                           // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CA1[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x58 (0x60 - 0x8)
// ScriptStruct DXM.TTLMissionFriendRestriction
struct FTTLMissionFriendRestriction : public FTableRowBase
{
public:
	bool                                         ReverseFlag;                                       // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CA2[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  NPCID1;                                            // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NPCID2;                                            // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NPCID3;                                            // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NPCID4;                                            // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NPCID5;                                            // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NPCID6;                                            // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NPCID7;                                            // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NPCID8;                                            // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NPCID9;                                            // 0x50(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NPCID10;                                           // 0x58(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xE0 (0xE8 - 0x8)
// ScriptStruct DXM.TTLCompMissionNPCParam
struct FTTLCompMissionNPCParam : public FTableRowBase
{
public:
	bool                                         AlwaysShow;                                        // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CA3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ActiveCount;                                       // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinCoolCount;                                      // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxCoolCount;                                      // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxNPCCount;                                       // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NoiseCount1;                                       // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NoiseCount2;                                       // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NoiseCount3;                                       // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NPCID1;                                            // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        IConCount1;                                        // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JoinRate1;                                         // 0x34(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NPCID2;                                            // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        IConCount2;                                        // 0x40(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JoinRate2;                                         // 0x44(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NPCID3;                                            // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        IConCount3;                                        // 0x50(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JoinRate3;                                         // 0x54(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NPCID4;                                            // 0x58(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        IConCount4;                                        // 0x60(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JoinRate4;                                         // 0x64(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NPCID5;                                            // 0x68(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        IConCount5;                                        // 0x70(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JoinRate5;                                         // 0x74(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NPCID6;                                            // 0x78(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        IConCount6;                                        // 0x80(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JoinRate6;                                         // 0x84(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NPCID7;                                            // 0x88(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        IConCount7;                                        // 0x90(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JoinRate7;                                         // 0x94(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NPCID8;                                            // 0x98(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        IConCount8;                                        // 0xA0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JoinRate8;                                         // 0xA4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NPCID9;                                            // 0xA8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        IConCount9;                                        // 0xB0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JoinRate9;                                         // 0xB4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NPCID10;                                           // 0xB8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        IConCount10;                                       // 0xC0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JoinRate10;                                        // 0xC4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NPCID11;                                           // 0xC8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        IConCount11;                                       // 0xD0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JoinRate11;                                        // 0xD4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NPCID12;                                           // 0xD8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        IConCount12;                                       // 0xE0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JoinRate12;                                        // 0xE4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x70 (0x78 - 0x8)
// ScriptStruct DXM.TTLMissionRewardParam
struct FTTLMissionRewardParam : public FTableRowBase
{
public:
	int32                                        Credits;                                           // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CA4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  PartReward1;                                       // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLPartsType                     Reward1Category;                                   // 0x18(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Reward1TypeRandom;                                 // 0x19(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Reward1SlotRandom;                                 // 0x1A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Reward1ForceEquip;                                 // 0x1B(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CA5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  PartReward2;                                       // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLPartsType                     Reward2Category;                                   // 0x28(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Reward2TypeRandom;                                 // 0x29(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Reward2SlotRandom;                                 // 0x2A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Reward2ForceEquip;                                 // 0x2B(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CA6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  PartReward3;                                       // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLPartsType                     Reward3Category;                                   // 0x38(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Reward3TypeRandom;                                 // 0x39(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Reward3SlotRandom;                                 // 0x3A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Reward3ForceEquip;                                 // 0x3B(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CA7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  PartReward4;                                       // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLPartsType                     Reward4Category;                                   // 0x48(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Reward4TypeRandom;                                 // 0x49(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Reward4SlotRandom;                                 // 0x4A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CA8[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  DecorationInfoID;                                  // 0x50(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AttachmentID1;                                     // 0x58(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AttachmentNum1;                                    // 0x60(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CA9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  AttachmentID2;                                     // 0x68(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AttachmentNum2;                                    // 0x70(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CAA[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x30 - 0x8)
// ScriptStruct DXM.TTLAditionalMissionMemberParam
struct FTTLAditionalMissionMemberParam : public FTableRowBase
{
public:
	class FName                                  NPCID1;                                            // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NPCID2;                                            // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NPCID3;                                            // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NPCID4;                                            // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NPCID5;                                            // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x78 (0x80 - 0x8)
// ScriptStruct DXM.TTLMissionArea
struct FTTLMissionArea : public FTableRowBase
{
public:
	class FString                                Comment;                                           // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               PinCoordinates;                                    // 0x18(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CAB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  Key_AreaName;                                      // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Key_RegionName;                                    // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MissionAreaImagePath;                              // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          Color_NoOpen;                                      // 0x40(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          Color_Opened;                                      // 0x50(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          Color_Focused;                                     // 0x60(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MaterialSlotName;                                  // 0x70(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SocketName;                                        // 0x78(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x248 (0x250 - 0x8)
// ScriptStruct DXM.TTLMissionInformation
struct FTTLMissionInformation : public FTableRowBase
{
public:
	class FString                                Key_MissionTitle;                                  // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Key_MissionSubTitle;                               // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEMissionType                  MissionType;                                       // 0x28(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEMissionMultiType             MissionMultiType;                                  // 0x29(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEMissionDifficulty            MissionDifficulty;                                 // 0x2A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEEnemyMainStrength            EnemyMainStrength_1;                               // 0x2B(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEEnemyMainStrength            EnemyMainStrength_2;                               // 0x2C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CAC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Key_EnemyStrengthExplanation;                      // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EnemyStrengthImagePath;                            // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                MainGoal1;                                         // 0x48(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MainGoal1_Counter;                                 // 0x58(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CAD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                MainGoal2;                                         // 0x60(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MainGoal2_Counter;                                 // 0x70(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CAE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                MainGoal3;                                         // 0x78(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MainGoal3_Counter;                                 // 0x88(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CAF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                MainGoal4;                                         // 0x90(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MainGoal4_Counter;                                 // 0xA0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CB0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                MainGoal5;                                         // 0xA8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MainGoal5_Counter;                                 // 0xB8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CB1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                FailureCondition1;                                 // 0xC0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                FailureCondition2;                                 // 0xD0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                FailureCondition3;                                 // 0xE0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                FailureCondition4;                                 // 0xF0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                FailureCondition5;                                 // 0x100(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLESubGoalType                  SubGoal1_CondiType;                                // 0x110(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CB2[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                SubGoal1_Type;                                     // 0x118(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SubGoal1_Counter;                                  // 0x128(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         SubGoal1_HiddenFlag;                               // 0x12C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLESubGoalType                  SubGoal2_CondiType;                                // 0x12D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CB3[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                SubGoal2_Type;                                     // 0x130(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SubGoal2_Counter;                                  // 0x140(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         SubGoal2_HiddenFlag;                               // 0x144(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLESubGoalType                  SubGoal3_CondiType;                                // 0x145(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CB4[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                SubGoal3_Type;                                     // 0x148(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SubGoal3_Counter;                                  // 0x158(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         SubGoal3_HiddenFlag;                               // 0x15C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLESubGoalType                  SubGoal4_CondiType;                                // 0x15D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CB5[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                SubGoal4_Type;                                     // 0x160(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SubGoal4_Counter;                                  // 0x170(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         SubGoal4_HiddenFlag;                               // 0x174(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CB6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  MissionImagePath;                                  // 0x178(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Key_ClientName;                                    // 0x180(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ClientImagePath;                                   // 0x190(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Key_MissionSummary;                                // 0x198(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SelectableColleagueNum;                            // 0x1A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CB7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  EnemyAppearanceInfoTblKey;                         // 0x1B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MissionAreaID;                                     // 0x1B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MissionLevelPath;                                  // 0x1C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MissionBriefingPath;                               // 0x1C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AfterBriefingEventPath;                            // 0x1D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AfterBriefingEventPath2;                           // 0x1D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AfterBriefingEventPath3;                           // 0x1E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AfterBriefingEventPath4;                           // 0x1E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AfterBriefingEventPath5;                           // 0x1F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PuppetShowDemoPath;                                // 0x1F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MissionFirstSuccessfulHomeDemoPath;                // 0x200(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MissionFirstSuccessfulHomeDemoPath2;               // 0x208(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsMissionFirstSuccessfulHomeDemoStopHomeBGM;       // 0x210(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CB8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  MissionFirstSuccessfulEventMapDemoPath;            // 0x218(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MissionFirstSuccessfulEventMapDemoPath2;           // 0x220(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FriendRestrictionID;                               // 0x228(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ContinuousMissionID;                               // 0x230(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HideMissionSelect;                                 // 0x238(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         MirageLimit;                                       // 0x239(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CB9[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  PGCommand;                                         // 0x240(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MissionID;                                         // 0x248(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLPremiseMission
struct FTTLPremiseMission
{
public:
	class FName                                  PremiseMissionID;                                  // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEPremiseMissionType           PremiseMissionType;                                // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CBA[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLSubGoal
struct FTTLSubGoal
{
public:
	enum class ETTLESubGoalType                  SubGoalType;                                       // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CBB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SubGoalCounter;                                    // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         FirstHiddenFlag;                                   // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CBC[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  SubGoalText;                                       // 0x10(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// 0x28 (0x30 - 0x8)
// ScriptStruct DXM.TTLMissionCloseConditionRow
struct FTTLMissionCloseConditionRow : public FTableRowBase
{
public:
	bool                                         SelfCloseFlag;                                     // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CBD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CloseCount;                                        // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Condition1;                                        // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Condition2;                                        // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Condition3;                                        // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsMissionRankingConditionFlag;                     // 0x28(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CBE[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x18 - 0x8)
// ScriptStruct DXM.TTLMissionCloseCondition
struct FTTLMissionCloseCondition : public FTableRowBase
{
public:
	class FName                                  MissionID;                                         // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsMissionOpened;                                   // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsMissionOpenedAndFailed;                          // 0x11(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CBF[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x48 - 0x8)
// ScriptStruct DXM.TTLMissionOpenConditionRow
struct FTTLMissionOpenConditionRow : public FTableRowBase
{
public:
	class FName                                  Condition1;                                        // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Condition2;                                        // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Condition3;                                        // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AllOpenConditionClear;                             // 0x20(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CC0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  FirstGameLockCondition1;                           // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FirstGameLockCondition2;                           // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FirstGameLockCondition3;                           // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AllNotOpenConditionClear;                          // 0x40(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsMissionRankingConditionFlag;                     // 0x41(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CC1[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x20 - 0x8)
// ScriptStruct DXM.TTLMissionOpenCondition
struct FTTLMissionOpenCondition : public FTableRowBase
{
public:
	class FName                                  MissionID;                                         // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLESubGoalOpenCondition         SubGoal1Condition;                                 // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLESubGoalOpenCondition         SubGoal2Condition;                                 // 0x11(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLESubGoalOpenCondition         SubGoal3Condition;                                 // 0x12(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLESubGoalOpenCondition         SubGoal4Condition;                                 // 0x13(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PrerequisiteCash;                                  // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         NeedAllMissionClear;                               // 0x18(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CC2[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x7 (0x7 - 0x0)
// ScriptStruct DXM.TTLMissionResultInfo
struct FTTLMissionResultInfo
{
public:
	bool                                         IsSuddenFadeout;                                   // 0x0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSkipExtensionTime;                               // 0x1(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsNoResultScene;                                   // 0x2(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsContinuousMissionInfo;                           // 0x3(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsContinuousMissionInfo_Item;                      // 0x4(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSaveMission;                                     // 0x5(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsNoHUDMissionBlackFadeAtMissionEnd;               // 0x6(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLCompeMissionNPCLotParam
struct FTTLCompeMissionNPCLotParam
{
public:
	uint8                                        Pad_2CC3[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x78 (0x78 - 0x0)
// ScriptStruct DXM.TTLMissionRankingRewardInfo
struct FTTLMissionRankingRewardInfo
{
public:
	struct FTTLArsenalPartsInfo                  PartsInfo;                                         // 0x0(0x38)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ID;                                                // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Value;                                             // 0x40(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEMissionRankingRewardType     RewardType;                                        // 0x44(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CC4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLEDecorationInfoTypeAndID          DecorationInfo;                                    // 0x48(0x30)(NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct DXM.TTLMissionRankingEventData
struct FTTLMissionRankingEventData
{
public:
	uint8                                        Pad_2CC5[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLMissionRankingMissionRewardData
struct FTTLMissionRankingMissionRewardData
{
public:
	uint8                                        Pad_2CC6[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLMissionRankingEventRewardData
struct FTTLMissionRankingEventRewardData
{
public:
	uint8                                        Pad_2CC7[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLMissionRankingOpenMissionData
struct FTTLMissionRankingOpenMissionData
{
public:
	uint8                                        Pad_2CC8[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLMissionRankingTimeLimitData
struct FTTLMissionRankingTimeLimitData
{
public:
	uint8                                        Pad_2CC9[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLMissionRankingSkillData
struct FTTLMissionRankingSkillData
{
public:
	uint8                                        Pad_2CCA[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct DXM.TTLMissionRankingTableData
struct FTTLMissionRankingTableData
{
public:
	uint8                                        Pad_2CCB[0x48];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x90 (0x90 - 0x0)
// ScriptStruct DXM.TTLMissionRankingEventAndReceiveData
struct FTTLMissionRankingEventAndReceiveData
{
public:
	uint8                                        Pad_2CCC[0x90];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x30 - 0x8)
// ScriptStruct DXM.TTLMissionRankingDebugParamRow
struct FTTLMissionRankingDebugParamRow : public FTableRowBase
{
public:
	bool                                         IsEnableCurrentTime;                               // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsReferenceDebugParam;                             // 0x9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CCD[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Year;                                              // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Month;                                             // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Day;                                               // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Hour;                                              // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Minute;                                            // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Count_AllMissionClear;                             // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Count_BossMissionClear;                            // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Count_MissionClearTime;                            // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LoopRewardTestFlag;                                // 0x2C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CCE[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x40 - 0x8)
// ScriptStruct DXM.TTLMissionRankingReceiveParamRow
struct FTTLMissionRankingReceiveParamRow : public FTableRowBase
{
public:
	class FName                                  ReceiveID;                                         // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEMissionRankingReceiveType    ReceiveType;                                       // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CCF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ReceiveValue;                                      // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MissionID;                                         // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLPartsType                     HavePartType;                                      // 0x20(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CD0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  HavePartsID;                                       // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Comment;                                           // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x78 (0x80 - 0x8)
// ScriptStruct DXM.TTLMissionRankingEventParamRow
struct FTTLMissionRankingEventParamRow : public FTableRowBase
{
public:
	class FName                                  EventID;                                           // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEMissionRankingConditions     Conditions;                                        // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CD1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Value_1;                                           // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Value_2;                                           // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEMissionRankingEventType      EventType;                                         // 0x1C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CD2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  RewardIDValue;                                     // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEMissionRankingFinishType     FinishType;                                        // 0x28(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CD3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        FinishValue;                                       // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEMissionRankingLoopCalculate  LoopCalculate;                                     // 0x30(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CD4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LoopCorrectionAdditionValue;                       // 0x34(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LoopCorrectionCalculationValue;                    // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LoopLimitValue;                                    // 0x3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LoopRisePowerValue;                                // 0x40(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LoopRiseVPValue;                                   // 0x44(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LoopRiseLimitTimeValue;                            // 0x48(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CD5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  LoopRewardID;                                      // 0x50(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ReceiveID;                                         // 0x58(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  GoalTargetTextID;                                  // 0x60(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Comment;                                           // 0x68(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CD6[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x38 - 0x8)
// ScriptStruct DXM.TTLMissionRankingTableParamRow
struct FTTLMissionRankingTableParamRow : public FTableRowBase
{
public:
	enum class ETTLEMissionRankingCategory       Category;                                          // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CD7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        StartIndex;                                        // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EndIndex;                                          // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CD8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  MissionID;                                         // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventID;                                           // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Comment;                                           // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x38 - 0x8)
// ScriptStruct DXM.TTLMissionRankingCommonRow
struct FTTLMissionRankingCommonRow : public FTableRowBase
{
public:
	int32                                        Year;                                              // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Month;                                             // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Day;                                               // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CD9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  BossPowerUPSkillID;                                // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BossVPUPSkillID;                                   // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EnemyPowerUPSkillID;                               // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EnemyVPUPSkillID;                                  // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLMissionSelectCharacterSpawnTimer
struct FTTLMissionSelectCharacterSpawnTimer
{
public:
	uint8                                        Pad_2CDA[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLMissionTutorialKeyAssignWidget
struct FTTLMissionTutorialKeyAssignWidget
{
public:
	class UUserWidget*                           Widget_KeyAssign;                                  // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLOptionKeyConfigKeyType        KeyType;                                           // 0x8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CDB[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLMultiLaserPath
struct FTTLMultiLaserPath
{
public:
	class AActor*                                Actor;                                             // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Angle;                                             // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CDC[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLMultiplayPvPRemainHpInfo
struct FTTLMultiplayPvPRemainHpInfo
{
public:
	float                                        PlayerHpRate;                                      // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsArsenalHp;                                       // 0x4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CDD[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLMultiplayPvPResultInfo
struct FTTLMultiplayPvPResultInfo
{
public:
	int32                                        Team1WinCount;                                     // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Team2WinCount;                                     // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTTLMultiplayPvPRemainHpInfo>  HpInfoArray;                                       // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct DXM.TTLMultiplayGameSendInfo
struct FTTLMultiplayGameSendInfo
{
public:
	uint8                                        MultiPlayerIndex;                                  // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CDE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                GamePlayerName;                                    // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ArsenalName;                                       // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TitleID;                                           // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EmblemID;                                          // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PrizeAmount;                                       // 0x38(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int8                                         DisconnectCount;                                   // 0x3C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanCommunicate;                                    // 0x3D(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CDF[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLDuelFinishedParams
struct FTTLDuelFinishedParams
{
public:
	enum class ETTLDuelResult                    DuelResult;                                        // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CE0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  ResultTitle;                                       // 0x8(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct DXM.TTLDuelMatchParam
struct FTTLDuelMatchParam
{
public:
	class APlayerState*                          RequestCharacter;                                  // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerState*                          NominatedCharacter;                                // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CE1[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct DXM.TTLDuelServerDuelLogParam
struct FTTLDuelServerDuelLogParam
{
public:
	class APlayerState*                          Winner;                                            // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerState*                          Loaser;                                            // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CE2[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLNgSkillNoticeInfo
struct FTTLNgSkillNoticeInfo
{
public:
	class FName                                  SkillID;                                           // 0x0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLNgAttachNoticeInfo
struct FTTLNgAttachNoticeInfo
{
public:
	class FName                                  AttachmentID;                                      // 0x0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEPartMenuIndex                Category;                                          // 0x8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CE3[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  PartsID;                                           // 0x10(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLPartsType                     PartType;                                          // 0x18(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CE4[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLNgPartsNoticeInfo
struct FTTLNgPartsNoticeInfo
{
public:
	class FName                                  PartsID;                                           // 0x0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLPartsType                     PartType;                                          // 0x8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEPartMenuIndex                Category;                                          // 0x9(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CE5[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct DXM.TTLNoticeGeneralInfo
struct FTTLNoticeGeneralInfo
{
public:
	enum class ETTLNoticeGeneral_PopupType       PopType;                                           // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CE6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DisplayTime;                                       // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CE7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  Text01;                                            // 0x10(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  Text02;                                            // 0x28(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// 0x70 (0x70 - 0x0)
// ScriptStruct DXM.TTLNoticeListInfo
struct FTTLNoticeListInfo
{
public:
	class FText                                  ButtonTitle;                                       // 0x0(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  ButtonTitle2;                                      // 0x18(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  ButtonDoc;                                         // 0x30(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)
	class UTexture2D*                            ButtonIcon;                                        // 0x48(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          ButtonIconColor;                                   // 0x50(0x10)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CE8[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct DXM.TTLNotifyInfo
struct FTTLNotifyInfo
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)
	class UTexture2D*                            Texture;                                           // 0x18(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PlayForceFeedback;                                 // 0x20(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PlaySEPath;                                        // 0x30(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CE9[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x3 (0x3 - 0x0)
// ScriptStruct DXM.TTLNotifyAnimStyle
struct FTTLNotifyAnimStyle
{
public:
	enum class ETTLNoticeHUD_SlideAnimationType  AnimType;                                          // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsReverse;                                         // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsStart;                                           // 0x2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLNotifyContainer
struct FTTLNotifyContainer
{
public:
	class UUserWidget*                           Widget;                                            // 0x0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLNoticeHUD_StateType           State;                                             // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLNotifyAnimStyle                   AnimInfo;                                          // 0x9(0x3)(NoDestructor, NativeAccessSpecifierPublic)
	int32                                        ID;                                                // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint64                                       Order;                                             // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x30 - 0x8)
// ScriptStruct DXM.TTLMapNPCFriendshipUpParam
struct FTTLMapNPCFriendshipUpParam : public FTableRowBase
{
public:
	class FName                                  OuterID1;                                          // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  OuterID2;                                          // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  OuterID3;                                          // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  OuterID4;                                          // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  OuterID5;                                          // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct DXM.TTLEncountAdditionalEvents
struct FTTLEncountAdditionalEvents
{
public:
	class FName                                  WinEvent;                                          // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LatentEvent;                                       // 0x8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LatentEventTarget;                                 // 0x10(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LatentEventTime;                                   // 0x18(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LatentEventHPRemain;                               // 0x1C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RetireFriendID;                                    // 0x20(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RetireEnemyID;                                     // 0x28(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct DXM.TTLTempEncounterSpecialEvent
struct FTTLTempEncounterSpecialEvent
{
public:
	uint8                                        Pad_2CEA[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xE8 (0xF0 - 0x8)
// ScriptStruct DXM.TTLNPCEncounterTalkEventParam
struct FTTLNPCEncounterTalkEventParam : public FTableRowBase
{
public:
	class FName                                  NormalTalkID;                                      // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SameMercenaryTalkID;                               // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EnemyOuterID1;                                     // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EnemyOuter2DTalkID1;                               // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EnemyOuterTalkID1;                                 // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         SelfRetireFlag;                                    // 0x30(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Enemy1RetireFlag;                                  // 0x31(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CEB[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SelfSkillID1;                                      // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EnemySkillID1;                                     // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EnemyOuterWinTalkID1;                              // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EnemyOuterSecond2DTalkID1;                         // 0x50(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EnemyOuterSecondTalkID1;                           // 0x58(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EnemyOuterSecondTalkConditionMission;              // 0x60(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LatentEventID1;                                    // 0x68(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LatentEventTime;                                   // 0x70(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LatentEventHPRemain;                               // 0x74(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EnemyOuterID2;                                     // 0x78(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EnemyOuterTalkID2;                                 // 0x80(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SelfSkillID2;                                      // 0x88(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EnemySkillID2;                                     // 0x90(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EnemyOuterWinTalkID2;                              // 0x98(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EnemyOuterID3;                                     // 0xA0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EnemyOuterTalkID3;                                 // 0xA8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SelfSkillID3;                                      // 0xB0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EnemySkillID3;                                     // 0xB8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EnemyOuterWinTalkID3;                              // 0xC0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EnemyOuterID4;                                     // 0xC8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EnemyOuterTalkID4;                                 // 0xD0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SelfSkillID4;                                      // 0xD8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EnemySkillID4;                                     // 0xE0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EnemyOuterWinTalkID4;                              // 0xE8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xF8 (0x100 - 0x8)
// ScriptStruct DXM.TTLNPCOuterDataRow
struct FTTLNPCOuterDataRow : public FTableRowBase
{
public:
	enum class ETTLNPCGender                     Gender;                                            // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CEC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Age;                                               // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Skill1;                                            // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Skill2;                                            // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Skill3;                                            // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Skill4;                                            // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Skill5;                                            // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Skill6;                                            // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Skill7;                                            // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Skill8;                                            // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Skill9;                                            // 0x50(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Skill10;                                           // 0x58(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Skill11;                                           // 0x60(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Skill12;                                           // 0x68(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Skill13;                                           // 0x70(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Skill14;                                           // 0x78(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Skill15;                                           // 0x80(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Skill16;                                           // 0x88(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Skill17;                                           // 0x90(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Skill18;                                           // 0x98(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Skill19;                                           // 0xA0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Skill20;                                           // 0xA8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Skill21;                                           // 0xB0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Skill22;                                           // 0xB8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Skill23;                                           // 0xC0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Skill24;                                           // 0xC8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Skill25;                                           // 0xD0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Skill26;                                           // 0xD8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Skill27;                                           // 0xE0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Skill28;                                           // 0xE8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Skill29;                                           // 0xF0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Skill30;                                           // 0xF8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x88 (0x90 - 0x8)
// ScriptStruct DXM.TTLNPCOuterMetaDataRow
struct FTTLNPCOuterMetaDataRow : public FTableRowBase
{
public:
	class FName                                  NPCName;                                           // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  IconID;                                            // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DescriptionKey;                                    // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class ATTLCharacter>           OuterAsset;                                        // 0x20(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CompeMissionAppearCondition;                       // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CompeMissionDisappearCondition;                    // 0x50(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ColleagueNPCArsenalID;                             // 0x58(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimSequenceBase>      MissionSelectWaitMotion;                           // 0x60(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ReversePersonalityID;                              // 0x88(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xB8 (0xC0 - 0x8)
// ScriptStruct DXM.TTLNPCMetaDataRow
struct FTTLNPCMetaDataRow : public FTableRowBase
{
public:
	class FName                                  OuterID;                                           // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLENPCMercenary                 Mercenary;                                         // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CED[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ArsenalName;                                       // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLENPCArsenalWeightType         ArsenalWeightType;                                 // 0x20(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CEE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ArsenalIconID;                                     // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RewardMoney;                                       // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CEF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class ATTLCharacter>           NPCAsset;                                          // 0x38(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LinkNPCName;                                       // 0x60(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Sort;                                              // 0x68(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CF0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UAnimSequenceBase>      SpecialWaitMotion;                                 // 0x70(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimSequenceBase>      MissionSelectWaitMotion;                           // 0x98(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x108 (0x110 - 0x8)
// ScriptStruct DXM.TTLNPCEncounterParamRow
struct FTTLNPCEncounterParamRow : public FTableRowBase
{
public:
	class FName                                  EncounterNPCID1;                                   // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EncounterNPCPartsID1;                              // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EncounterNPC1OverrideParameterID1;                 // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EncounterNPC1Parts2ConditionMission;               // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EncounterNPC1PartsID2;                             // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EncounterNPC1OverrideParameterID2;                 // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EncounterNPC1Parts3ConditionMission;               // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EncounterNPC1PartsID3;                             // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EncounterNPC1OverrideParameterID3;                 // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EncounterNPC1Parts4ConditionMission;               // 0x50(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EncounterNPC1PartsID4;                             // 0x58(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EncounterNPC1OverrideParameterID4;                 // 0x60(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EncounterNPC1Parts5ConditionMission;               // 0x68(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EncounterNPC1PartsID5;                             // 0x70(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EncounterNPC1OverrideParameterID5;                 // 0x78(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EncounterNPCID2;                                   // 0x80(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EncounterNPCPartsID2;                              // 0x88(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EncounterNPC2OverrideParameterID;                  // 0x90(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EncounterNPCID3;                                   // 0x98(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EncounterNPCPartsID3;                              // 0xA0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EncounterNPC3OverrideParameterID;                  // 0xA8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  OperatorTalkID;                                    // 0xB0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Start3DEventID;                                    // 0xB8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  StartEventID;                                      // 0xC0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TalkEventID;                                       // 0xC8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SurrenderEventID;                                  // 0xD0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NoSurrenderEventID;                                // 0xD8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SurrenderSuccessEventID;                           // 0xE0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SurrenderFailureEventID;                           // 0xE8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EscapeSuccessEventID;                              // 0xF0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VPPercent;                                         // 0xF8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CF1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SurrenderConditionID;                              // 0x100(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLENPCSurrenderFailedActionType SurrenderFailedAction;                             // 0x108(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSolomonEncount;                                  // 0x109(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CheckConditionWhenDeath;                           // 0x10A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CF2[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x58 (0x60 - 0x8)
// ScriptStruct DXM.TTLNPCFriendPatternRow
struct FTTLNPCFriendPatternRow : public FTableRowBase
{
public:
	bool                                         ReverseFlag;                                       // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CF3[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  NPCID1;                                            // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NPCID2;                                            // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NPCID3;                                            // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NPCID4;                                            // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NPCID5;                                            // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NPCID6;                                            // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NPCID7;                                            // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NPCID8;                                            // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NPCID9;                                            // 0x50(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NPCID10;                                           // 0x58(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xA0 (0xA8 - 0x8)
// ScriptStruct DXM.TTLNPCEventCheckConditionRow
struct FTTLNPCEventCheckConditionRow : public FTableRowBase
{
public:
	class FName                                  NPCFriendCondCheckID;                              // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MissionID1;                                        // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MissionID2;                                        // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MissionID3;                                        // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         NeedClearAllTargetMission;                         // 0x28(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CF4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MissionSubGoalSetting;                             // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentMissionSubgoalSetting;                      // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MissionClearCount;                                 // 0x34(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SingleMissionClearRate;                            // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FriendCount;                                       // 0x3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NecessaryWeaponTypes;                              // 0x40(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CF5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SpecialWeaponID1;                                  // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SpecialWeaponID2;                                  // 0x50(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SpecialWeaponID3;                                  // 0x58(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DecalID1;                                          // 0x60(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DecalID2;                                          // 0x68(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DecalID3;                                          // 0x70(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEMissionTimeCheckType         TimeCheckType;                                     // 0x78(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEMissionWeatherCheckType      WeatherCheckType;                                  // 0x79(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEMissionConsortCheckType      ConsortType;                                       // 0x7A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CF6[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinPlayerVPPercentage;                             // 0x7C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DecalScanNum;                                      // 0x80(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CF7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  FriendShipNPCID;                                   // 0x88(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalFriendShip;                                   // 0x90(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EndingIndex;                                       // 0x94(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NecessaryEventID;                                  // 0x98(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CheckConditionWhenTargetMissionClear;              // 0xA0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CF8[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x20 - 0x8)
// ScriptStruct DXM.TTLNPCSpecialJoinConditionRow
struct FTTLNPCSpecialJoinConditionRow : public FTableRowBase
{
public:
	class FName                                  FinishMissionID;                                   // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FriendShipValue;                                   // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         BeatInMission;                                     // 0x14(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CF9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PlayerVPPercentageWhenBeat;                        // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         NeedSurrenderInEncounter;                          // 0x1C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CFA[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x50 - 0x8)
// ScriptStruct DXM.TTLNPCFlagParamRow
struct FTTLNPCFlagParamRow : public FTableRowBase
{
public:
	bool                                         HasFriendShipParam;                                // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CFB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxFriendShipParam;                                // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxFriendShipParamForFriend;                       // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FriendShipUpParam;                                 // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HaveEncounterCondition;                            // 0x18(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         NeedBothConditionComplete;                         // 0x19(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         NeedSpecialActionComplete;                         // 0x1A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CFC[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SpecialJoinConditionID;                            // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FriendshipUpEventID;                               // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FriendshipNormalEventID;                           // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FriendshipConditionFinishEventID;                  // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BecomeFriendEventID;                               // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FriendShipUpConditionID;                           // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct DXM.TTLNpcSetParamRow
struct FTTLNpcSetParamRow : public FTableRowBase
{
public:
	class FName                                  MissionID;                                         // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        Path;                                              // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLObjectStatusResistParameter
struct FTTLObjectStatusResistParameter
{
public:
	float                                        StatusDefence;                                     // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PhysicsResist;                                     // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BeamResist;                                        // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CFD[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsDebugDrawCalculateValue;                         // 0xD(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2CFE[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLObjectStatusParameters
struct FTTLObjectStatusParameters
{
public:
	float                                        Hp;                                                // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HPMax;                                             // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDead;                                            // 0x8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CFF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class ETTLEStatusType>           AffectedTypes;                                     // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xC0 (0xC0 - 0x0)
// ScriptStruct DXM.TTLObjectStatusPhaseFx
struct FTTLObjectStatusPhaseFx
{
public:
	struct FTTLFxParam                           FxAsset;                                           // 0x0(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Playback;                                          // 0x98(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  Socket;                                            // 0xB0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UseVertSurface;                                    // 0xB8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D00[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HPPercentage;                                      // 0xBC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLOnlineNotify_PlayerInfo
struct FTTLOnlineNotify_PlayerInfo
{
public:
	int32                                        ID;                                                // 0x0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D01[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Name;                                              // 0x8(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsMissionReady;                                    // 0x18(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D02[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct DXM.TTLOnlineNotifyInfo
struct FTTLOnlineNotifyInfo
{
public:
	class FText                                  Text01;                                            // 0x0(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  Text02;                                            // 0x18(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)
};

// 0x28 (0x30 - 0x8)
// ScriptStruct DXM.UTTLOnlineNotifyHUDinfo
struct FUTTLOnlineNotifyHUDinfo : public FTableRowBase
{
public:
	TSoftObjectPtr<class UTexture2D>             ImagePtr;                                          // 0x8(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x98 (0x98 - 0x0)
// ScriptStruct DXM.TTLTestRoomListData
struct FTTLTestRoomListData
{
public:
	class FText                                  MissionTitle;                                      // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  RoomComment;                                       // 0x18(0x18)(NativeAccessSpecifierPublic)
	class FText                                  HostName;                                          // 0x30(0x18)(NativeAccessSpecifierPublic)
	class FText                                  PeopleNum;                                         // 0x48(0x18)(NativeAccessSpecifierPublic)
	uint8                                        Pad_2D03[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLOnlineRoomSearchItemKeyAndValue
struct FTTLOnlineRoomSearchItemKeyAndValue
{
public:
	class FString                                ItemTable;                                         // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ItemKey;                                           // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ArgValue;                                          // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ArgFilterEnumValue;                                // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x58 - 0x8)
// ScriptStruct DXM.TTLOnlineRoomSearchItemParamRow
struct FTTLOnlineRoomSearchItemParamRow : public FTableRowBase
{
public:
	bool                                         IsEnable;                                          // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D04[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                HeadlineTable;                                     // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                HeadlineKey;                                       // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTTLOnlineRoomSearchItemKeyAndValue> ItemKeyAndValueArray;                              // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                Comment;                                           // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableLocal;                                       // 0x50(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLOnlineRoomItemType            Type;                                              // 0x51(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D05[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x10 - 0x8)
// ScriptStruct DXM.TTLRankmatchMissionParamRow
struct FTTLRankmatchMissionParamRow : public FTableRowBase
{
public:
	class FName                                  MissionID;                                         // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLMatchmakeRefereeStats
struct FTTLMatchmakeRefereeStats
{
public:
	int32                                        RatingValue;                                       // 0x0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DisconnectionRate;                                 // 0x4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLCreateRoomSetting
struct FTTLCreateRoomSetting
{
public:
	enum class ETTLSessionSettingRoomType        SettingRoomType;                                   // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLSessionSettingMission         SettingMission;                                    // 0x1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D06[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SettingMissionID;                                  // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLSessionSettingTarget          SettingTarget;                                     // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLSessionSettingComment         SettingComment;                                    // 0x9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLSessionSettingTimeLimit       SettingTimeLimit;                                  // 0xA(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D07[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Regulation;                                        // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsAutoMatchmaking;                                 // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D08[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        RevisionNum;                                       // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x48 - 0x8)
// ScriptStruct DXM.TTLOnlineTitleParamRow
struct FTTLOnlineTitleParamRow : public FTableRowBase
{
public:
	bool                                         IsEnable;                                          // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D09[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                TitleNameKey;                                      // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                UnLockID;                                          // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Comment;                                           // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D0A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLOnlRoomSelectorInitialValues
struct FTTLOnlRoomSelectorInitialValues
{
public:
	uint8                                        Pad_2D0B[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct DXM.TTLHUDCustomListInfo
struct FTTLHUDCustomListInfo
{
public:
	class FText                                  ButtonTitle;                                       // 0x0(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<class FText>                          ButtonSelect;                                      // 0x18(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        ButtonSelectPos;                                   // 0x28(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SortNumber;                                        // 0x2C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SaveIndex;                                         // 0x30(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D0C[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLOptionCommonKeyData
struct FTTLOptionCommonKeyData
{
public:
	uint8                                        Pad_2D0D[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x2 (0x2 - 0x0)
// ScriptStruct DXM.TTLOptionCommonKeyAndAssist
struct FTTLOptionCommonKeyAndAssist
{
public:
	uint8                                        Pad_2D0E[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x2 (0x2 - 0x0)
// ScriptStruct DXM.TTLOptionCurrentKeyAndAssist
struct FTTLOptionCurrentKeyAndAssist
{
public:
	uint8                                        Pad_2D0F[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLOPtionSelectData
struct FTTLOPtionSelectData
{
public:
	int32                                        Select;                                            // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D10[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        ItemNameSpace;                                     // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        ItemKey;                                           // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct DXM.TTLInitTblContentsAndHelp
struct FTTLInitTblContentsAndHelp
{
public:
	class FText                                  ContentsText;                                      // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  HelpText;                                          // 0x18(0x18)(NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct DXM.TTLInitTblData2
struct FTTLInitTblData2
{
public:
	enum class ETTLOptionWidgetType              Type;                                              // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D11[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  TitleText;                                         // 0x8(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  ItemText;                                          // 0x20(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                        barValue;                                          // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D12[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLInitTblContentsAndHelp>    ContentsAndHelpArray;                              // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct DXM.TTLInitTblLeftMenu
struct FTTLInitTblLeftMenu
{
public:
	class FText                                  MenuText;                                          // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  HeaderHelpText;                                    // 0x18(0x18)(NativeAccessSpecifierPublic)
	class FText                                  HeaderButtonText;                                  // 0x30(0x18)(NativeAccessSpecifierPublic)
};

// 0x2 (0x2 - 0x0)
// ScriptStruct DXM.TTLOptionKeyConfigKeyAndAssist
struct FTTLOptionKeyConfigKeyAndAssist
{
public:
	enum class ETTLEInputType                    Key;                                               // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEInputType                    AssistKey;                                         // 0x1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct DXM.TTLOptionKeyConfigPresetParam
struct FTTLOptionKeyConfigPresetParam : public FTableRowBase
{
public:
	TArray<struct FTTLOptionKeyConfigKeyAndAssist> KeyAndAssistArray;                                 // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	enum class ETTLEInputType                    AssistKey_1;                                       // 0x18(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEInputType                    AssistKey_2;                                       // 0x19(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D13[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x38 - 0x8)
// ScriptStruct DXM.TTLOptionKeyConfigMenuParam
struct FTTLOptionKeyConfigMenuParam : public FTableRowBase
{
public:
	bool                                         IsShowHeadline;                                    // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLOptionKeyConfigKeyType        KeyConfigKeyType;                                  // 0x9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsTypeSelector;                                    // 0xA(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLOptionKeyCategory             KeyCategory;                                       // 0xB(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D14[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  HeadloneTextID;                                    // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ItemTextID;                                        // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HelpTextID;                                        // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Comment;                                           // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLOptionMenuTextAndTableID
struct FTTLOptionMenuTextAndTableID
{
public:
	class FName                                  TableID;                                           // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TextID;                                            // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLOptionMenuContentsAndHelpID
struct FTTLOptionMenuContentsAndHelpID
{
public:
	class FName                                  ContentsTextID;                                    // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HelpTextID;                                        // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct DXM.TTLOptionMenuItem
struct FTTLOptionMenuItem
{
public:
	enum class ETTLOptionWidgetType              WidgetType;                                        // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D15[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ItemId;                                            // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HelpTextID;                                        // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ContentsTableID;                                   // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HelpTableID;                                       // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTTLOptionMenuContentsAndHelpID> ContentsIDArray;                                   // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x40 (0x48 - 0x8)
// ScriptStruct DXM.TTLOptionGameSettingMenuParam
struct FTTLOptionGameSettingMenuParam : public FTableRowBase
{
public:
	struct FTTLOptionMenuTextAndTableID          HeadlineTextAndTableID;                            // 0x8(0x10)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                  HeaderHelpTextID;                                  // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HeaderButtonTextID;                                // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ResetPopupTextID;                                  // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DefaltCursorIndex;                                 // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D16[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLOptionMenuItem>            ItemArray;                                         // 0x38(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLOuterBoneTransform
struct FTTLOuterBoneTransform
{
public:
	TArray<struct FVector>                       Translations;                                      // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLLipSyncPattern
struct FTTLLipSyncPattern
{
public:
	TArray<TSoftObjectPtr<class UAnimMontage>>   LipSyncMotionAsset;                                // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};

// 0x94 (0x94 - 0x0)
// ScriptStruct DXM.TTLHumanCustomPartsInfo
struct FTTLHumanCustomPartsInfo
{
public:
	enum class ETTLEHumanCustomColorID           SkinColor;                                         // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           HeadParts;                                         // 0x1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           FaceTexParts;                                      // 0x2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           BeardParts;                                        // 0x3(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           BeardColor;                                        // 0x4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           HairParts;                                         // 0x5(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HairFlip;                                          // 0x6(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           HairColor;                                         // 0x7(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        EyeEditType;                                       // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           EyePartsLR;                                        // 0x9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           EyePartsL;                                         // 0xA(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           EyePartsR;                                         // 0xB(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           EyeColorLR;                                        // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           EyeColorL;                                         // 0xD(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           EyeColorR;                                         // 0xE(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           EyebrowsParts;                                     // 0xF(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           EyebrowsPosXNum;                                   // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           EyebrowsPosYNum;                                   // 0x11(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           EyebrowsRotNum;                                    // 0x12(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           EyebrowsColor;                                     // 0x13(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           MakeupEyelineColor;                                // 0x14(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           MakeupLipsColor;                                   // 0x15(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           SealParts;                                         // 0x16(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           SealColor;                                         // 0x17(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         SealFlip;                                          // 0x18(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         FaceLineOn;                                        // 0x19(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           BodyParts;                                         // 0x1A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           BodyColor1;                                        // 0x1B(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           BodyColor2;                                        // 0x1C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           BodyColor3;                                        // 0x1D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           ArmLParts;                                         // 0x1E(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           HandLParts;                                        // 0x1F(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           ArmLColor1;                                        // 0x20(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           ArmLColor2;                                        // 0x21(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           ArmLColor3;                                        // 0x22(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           ArmRParts;                                         // 0x23(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           HandRParts;                                        // 0x24(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           ArmRColor1;                                        // 0x25(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           ArmRColor2;                                        // 0x26(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           ArmRColor3;                                        // 0x27(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           LegParts;                                          // 0x28(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           LegColor1;                                         // 0x29(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           LegColor2;                                         // 0x2A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           LegColor3;                                         // 0x2B(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           HeadApParts;                                       // 0x2C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           HeadApColor1;                                      // 0x2D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           HeadApColor2;                                      // 0x2E(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           HeadApColor3;                                      // 0x2F(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           EyeApParts;                                        // 0x30(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           EyeApColor1;                                       // 0x31(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           EyeApColor2;                                       // 0x32(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           EyeApColor3;                                       // 0x33(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           JawApParts;                                        // 0x34(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           JawApColor1;                                       // 0x35(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           JawApColor2;                                       // 0x36(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           JawApColor3;                                       // 0x37(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           ArmApLParts;                                       // 0x38(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           ArmApLColor1;                                      // 0x39(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           ArmApLColor2;                                      // 0x3A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           ArmApLColor3;                                      // 0x3B(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           ArmApRParts;                                       // 0x3C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           ArmApRColor1;                                      // 0x3D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           ArmApRColor2;                                      // 0x3E(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           ArmApRColor3;                                      // 0x3F(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           LegApLParts;                                       // 0x40(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           LegApLColor1;                                      // 0x41(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           LegApLColor2;                                      // 0x42(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           LegApLColor3;                                      // 0x43(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           LegApRParts;                                       // 0x44(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           LegApRColor1;                                      // 0x45(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           LegApRColor2;                                      // 0x46(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           LegApRColor3;                                      // 0x47(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           HipApParts;                                        // 0x48(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           HipApColor1;                                       // 0x49(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           HipApColor2;                                       // 0x4A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           HipApColor3;                                       // 0x4B(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           WearParts;                                         // 0x4C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           RemodelColor1;                                     // 0x4D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           RemodelColor2;                                     // 0x4E(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           RemodelColor3;                                     // 0x4F(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SkinColorCustom;                                   // 0x50(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HairColorCustom;                                   // 0x54(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BeardColorCustom;                                  // 0x58(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EyeColorLRCustom;                                  // 0x5C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EyeColorLCustom;                                   // 0x60(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EyeColorRCustom;                                   // 0x64(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EyebrowsColorCustom;                               // 0x68(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MakeupEyelineColorCustom;                          // 0x6C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MakeupLipsColorCustom;                             // 0x70(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SealColorCustom;                                   // 0x74(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BodyColor1Custom;                                  // 0x78(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BodyColor2Custom;                                  // 0x7C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BodyColor3Custom;                                  // 0x80(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RemodelColor1Custom;                               // 0x84(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RemodelColor2Custom;                               // 0x88(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RemodelColor3Custom;                               // 0x8C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomDLCSuitsType      DLCSuitsType;                                      // 0x90(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D17[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xD0 (0xD0 - 0x0)
// ScriptStruct DXM.TTLHumanEditInfo
struct FTTLHumanEditInfo
{
public:
	bool                                         InitializeFlag;                                    // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanGenderType              Gender;                                            // 0x1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D18[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLHumanCustomPartsInfo>      PartsInfoList;                                     // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLHumanCustomPartsInfo>      PartsInfoRemodelList;                              // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FTTLHumanCustomPartsInfo              CurrentPartsInfo;                                  // 0x28(0x94)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D19[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<uint8>                                VoiceIndex;                                        // 0xC0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x120 (0x128 - 0x8)
// ScriptStruct DXM.TTLHumanBoneOffsetParam
struct FTTLHumanBoneOffsetParam : public FTableRowBase
{
public:
	struct FVector                               OffsetHips;                                        // 0x8(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetSpine;                                   // 0x14(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetSpine1;                                  // 0x20(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetSpine2;                                  // 0x2C(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetNeck;                                    // 0x38(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetHead;                                    // 0x44(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetMouth;                                   // 0x50(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetLid;                                     // 0x5C(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetRightUpLeg;                              // 0x68(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetRightLeg;                                // 0x74(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetRightFoot;                               // 0x80(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetRightToeBase;                            // 0x8C(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetLeftUpLeg;                               // 0x98(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetLeftLeg;                                 // 0xA4(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetLeftFoot;                                // 0xB0(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetLeftToeBase;                             // 0xBC(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetRightShoulder;                           // 0xC8(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetRightArm;                                // 0xD4(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetRightForeArm;                            // 0xE0(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetRightHand;                               // 0xEC(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetLeftShoulder;                            // 0xF8(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetLeftArm;                                 // 0x104(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetLeftForeArm;                             // 0x110(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetLeftHand;                                // 0x11C(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xA0 (0xA8 - 0x8)
// ScriptStruct DXM.TTLHumanRightHandVisualParam
struct FTTLHumanRightHandVisualParam : public FTableRowBase
{
public:
	TSoftObjectPtr<class UAnimationAsset>        RightHandIdleMotionPath;                           // 0x8(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimationAsset>        RightHandThrowPoseMotionPath;                      // 0x30(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimationAsset>        RightHandThrowMotionPath;                          // 0x58(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimationAsset>        RightHandTrapSettingMotionPath;                    // 0x80(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xA0 (0xA8 - 0x8)
// ScriptStruct DXM.TTLHumanLeftHandVisualParam
struct FTTLHumanLeftHandVisualParam : public FTableRowBase
{
public:
	TSoftObjectPtr<class UAnimationAsset>        LeftHandIdleMotionPath;                            // 0x8(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimationAsset>        LeftHandThrowPoseMotionPath;                       // 0x30(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimationAsset>        LeftHandThrowMotionPath;                           // 0x58(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimationAsset>        LeftHandTrapSettingMotionPath;                     // 0x80(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x78 (0x80 - 0x8)
// ScriptStruct DXM.TTLHumanFaceVisualParam
struct FTTLHumanFaceVisualParam : public FTableRowBase
{
public:
	TSoftObjectPtr<class USkeletalMesh>          FaceModelPath;                                     // 0x8(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimationAsset>        FaceNormalMotionPath;                              // 0x30(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimationAsset>        FaceDamagedMotionPath;                             // 0x58(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLDevelopFlagItemOwnedInfo
struct FTTLDevelopFlagItemOwnedInfo
{
public:
	class FName                                  ItemId;                                            // 0x0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsOwned;                                           // 0x8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D1A[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x28 - 0x8)
// ScriptStruct DXM.TTLDevelopFlagItemParamRow
struct FTTLDevelopFlagItemParamRow : public FTableRowBase
{
public:
	float                                        DropRate;                                          // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEFlagItemDropType             DropType;                                          // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D1B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  DropMission;                                       // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         NeedSubGoal1Finish;                                // 0x18(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         NeedSubGoal2Finish;                                // 0x19(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         NeedSubGoal3Finish;                                // 0x1A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D1C[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  DropNPC;                                           // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x88 (0x90 - 0x8)
// ScriptStruct DXM.TTLPartsDevelopParamRow
struct FTTLPartsDevelopParamRow : public FTableRowBase
{
public:
	enum class ETTLPartsType                     DevelopPartsCategory;                              // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D1D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SimultaneousDevelopPartsID;                        // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DevelopPeriod;                                     // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D1E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  MissionID;                                         // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DevelopMoney;                                      // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DevelopIceTokenNum;                                // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FlagItemID;                                        // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BossID;                                            // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RequiredPartsNum;                                  // 0x40(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D1F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  RequiredPartsID1;                                  // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ObtainedIceTokenNum;                               // 0x50(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D20[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ObtainedAttachmentID1;                             // 0x58(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ObtainedAttachmentID2;                             // 0x60(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ObtainedAttachmentID3;                             // 0x68(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ObtainedAttachmentID4;                             // 0x70(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ObtainedAttachmentID5;                             // 0x78(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ObtainedPaintItemID;                               // 0x80(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D21[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0xA8 - 0x90)
// ScriptStruct DXM.TTLDevelopStatus
struct FTTLDevelopStatus : public FTTLPartsDevelopParamRow
{
public:
	class FName                                  PartsID;                                           // 0x90(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDeveloped;                                       // 0x98(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsShowList;                                        // 0x99(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D22[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentDevelopPeriod;                              // 0x9C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSecretDevelop;                                   // 0xA0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsNoticedDevelopable;                              // 0xA1(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D23[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x18 - 0x8)
// ScriptStruct DXM.TTLNgSkillRow
struct FTTLNgSkillRow : public FTableRowBase
{
public:
	class FName                                  SkillID;                                           // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLENgType                       NgType;                                            // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D24[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x18 - 0x8)
// ScriptStruct DXM.TTLNgAttachmentRow
struct FTTLNgAttachmentRow : public FTableRowBase
{
public:
	class FName                                  AttachmentID;                                      // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLENgType                       NgType;                                            // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D25[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x18 - 0x8)
// ScriptStruct DXM.TTLNgPartsRow
struct FTTLNgPartsRow : public FTableRowBase
{
public:
	class FName                                  PartsID;                                           // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLPartsType                     PartType;                                          // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLENgType                       NgType;                                            // 0x11(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D26[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x38 - 0x8)
// ScriptStruct DXM.TTLPartsFeatureParamRow
struct FTTLPartsFeatureParamRow : public FTableRowBase
{
public:
	class FName                                  AttributeInfo;                                     // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Feature1;                                          // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Feature2;                                          // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Feature3;                                          // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Feature4;                                          // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Feature5;                                          // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x30 - 0x8)
// ScriptStruct DXM.TTLFeatureParamDefineRow
struct FTTLFeatureParamDefineRow : public FTableRowBase
{
public:
	enum class ETTLEFeatureParamRank             Rank;                                              // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D27[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                IconPath;                                          // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          IconColor;                                         // 0x20(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x58 (0x60 - 0x8)
// ScriptStruct DXM.TTLPartsMetaDataRow
struct FTTLPartsMetaDataRow : public FTableRowBase
{
public:
	class FText                                  PartsName;                                         // 0x8(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FString                                PartsTextKeyID;                                    // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  IconPath;                                          // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEnterpriseType                EnterpriseType;                                    // 0x38(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D28[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        PurchaseAmount;                                    // 0x3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MissionID;                                         // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanNotSell;                                        // 0x48(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D29[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SlotNum;                                           // 0x4C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ShopSlotNum;                                       // 0x50(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D2A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  DLCID;                                             // 0x58(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x28 - 0x8)
// ScriptStruct DXM.TTLArsenaltotalGradeRow
struct FTTLArsenaltotalGradeRow : public FTableRowBase
{
public:
	float                                        Armor;                                             // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Mobility;                                          // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Search;                                            // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Attack;                                            // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Bullet;                                            // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLArsenalGrade                  ArmorGrade;                                        // 0x1C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLArsenalGrade                  MobilityGrade;                                     // 0x1D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLArsenalGrade                  SearchGrade;                                       // 0x1E(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLArsenalGrade                  AttackGrade;                                       // 0x1F(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLArsenalGrade                  BulletGrade;                                       // 0x20(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D2B[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x40 - 0x8)
// ScriptStruct DXM.TTLRadarParamRow
struct FTTLRadarParamRow : public FTableRowBase
{
public:
	float                                        IntervalSeconds;                                   // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsVisibleMyCharacter;                              // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableIntervalUpdateMyCharacter;                 // 0xD(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableZAlphaMyCharacter;                         // 0xE(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableRotationMyCharacter;                       // 0xF(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableRayCheckMyCharacter;                       // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsVisibleEnemyCharacter;                           // 0x11(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableIntervalUpdateEnemyCharacter;              // 0x12(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableZAlphaEnemyCharacter;                      // 0x13(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableRotationEnemyCharacter;                    // 0x14(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableRayCheckEnemyCharacter;                    // 0x15(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsVisibleAllyCharacter;                            // 0x16(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableIntervalUpdateAllyCharacter;               // 0x17(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableZAlphaAllyCharacter;                       // 0x18(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableRotationAllyCharacter;                     // 0x19(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableRayCheckAllyCharacter;                     // 0x1A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsVisibleWreckedCharacter;                         // 0x1B(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableIntervalUpdateWreckedCharacter;            // 0x1C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableZAlphaWreckedCharacter;                    // 0x1D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableRotationWreckedCharacter;                  // 0x1E(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableRayCheckWreckedCharacter;                  // 0x1F(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsVisibleFieldItem;                                // 0x20(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableIntervalUpdateFieldItem;                   // 0x21(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableZAlphaFieldItem;                           // 0x22(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableRotationFieldItem;                         // 0x23(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableRayCheckFieldItem;                         // 0x24(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsVisibleHeatSource;                               // 0x25(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableIntervalUpdateHeatSource;                  // 0x26(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableZAlphaHeatSource;                          // 0x27(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableRotationHeatSource;                        // 0x28(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableRayCheckHeatSource;                        // 0x29(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsVisibleFemtoZone;                                // 0x2A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableIntervalUpdateFemtoZone;                   // 0x2B(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableZAlphaFemtoZone;                           // 0x2C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableRotationFemtoZone;                         // 0x2D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableRayCheckFemtoZone;                         // 0x2E(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D2C[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                RadarNameKey;                                      // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x40 - 0x8)
// ScriptStruct DXM.TTLSkinSetParamRow
struct FTTLSkinSetParamRow : public FTableRowBase
{
public:
	class FName                                  HeadModelID;                                       // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BodyModelID;                                       // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ArmLModelID;                                       // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ArmRModelID;                                       // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LegsModelID;                                       // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanApplySurface;                                   // 0x30(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanApplyColor;                                     // 0x31(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanApplyDecal;                                     // 0x32(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D2D[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  DLCID;                                             // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x80 (0x88 - 0x8)
// ScriptStruct DXM.TTLMovableUnitParamRow
struct FTTLMovableUnitParamRow : public FTableRowBase
{
public:
	TSoftObjectPtr<class UAnimationAsset>        Motion1;                                           // 0x8(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimationAsset>        Motion2;                                           // 0x30(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimationAsset>        Motion3;                                           // 0x58(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsBreakable;                                       // 0x80(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsUpper;                                           // 0x81(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsLower;                                           // 0x82(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsLeft;                                            // 0x83(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsRight;                                           // 0x84(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsHatch;                                           // 0x85(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsFoot;                                            // 0x86(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D2E[0x1];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x0 (0x8 - 0x8)
// ScriptStruct DXM.TTLPartsVisualCommonParamRow
struct FTTLPartsVisualCommonParamRow : public FTableRowBase
{
public:
};

// 0x18 (0x20 - 0x8)
// ScriptStruct DXM.TTLPartsVisualExParamRow
struct FTTLPartsVisualExParamRow : public FTTLPartsVisualCommonParamRow
{
public:
	class FName                                  MotionPath1;                                       // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MotionPath2;                                       // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MotionPath3;                                       // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x288 (0x290 - 0x8)
// ScriptStruct DXM.TTLPartsVisualLegsParamRow
struct FTTLPartsVisualLegsParamRow : public FTTLPartsVisualCommonParamRow
{
public:
	class FName                                  MeshPath;                                          // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USkeletalMesh>          MovableUnit1Mesh;                                  // 0x10(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MovableUnit1SocketName;                            // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USkeletalMesh>          MovableUnit2Mesh;                                  // 0x40(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MovableUnit2SocketName;                            // 0x68(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USkeletalMesh>          MovableUnit3Mesh;                                  // 0x70(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MovableUnit3SocketName;                            // 0x98(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USkeletalMesh>          MovableUnit4Mesh;                                  // 0xA0(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MovableUnit4SocketName;                            // 0xC8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        OverrideHalfDestroyedVFX1;                         // 0xD0(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HalfDestroyedVFX1SocketName;                       // 0xF8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HalfDestroyedVFX1Scale;                            // 0x100(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D2F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UParticleSystem>        OverrideHalfDestroyedVFX2;                         // 0x108(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HalfDestroyedVFX2SocketName;                       // 0x130(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HalfDestroyedVFX2Scale;                            // 0x138(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D30[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UParticleSystem>        OverrideHalfDestroyedVFX3;                         // 0x140(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HalfDestroyedVFX3SocketName;                       // 0x168(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HalfDestroyedVFX3Scale;                            // 0x170(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D31[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UParticleSystem>        OverrideHalfDestroyedVFX4;                         // 0x178(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HalfDestroyedVFX4SocketName;                       // 0x1A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HalfDestroyedVFX4Scale;                            // 0x1A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D32[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UParticleSystem>        OverrideCompletelyDestroyedVFX1;                   // 0x1B0(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CompletelyDestroyedVFX1SocketName;                 // 0x1D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CompletelyDestroyedVFX1Scale;                      // 0x1E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D33[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UParticleSystem>        OverrideCompletelyDestroyedVFX2;                   // 0x1E8(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CompletelyDestroyedVFX2SocketName;                 // 0x210(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CompletelyDestroyedVFX2Scale;                      // 0x218(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D34[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UParticleSystem>        OverrideCompletelyDestroyedVFX3;                   // 0x220(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CompletelyDestroyedVFX3SocketName;                 // 0x248(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CompletelyDestroyedVFX3Scale;                      // 0x250(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D35[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UParticleSystem>        OverrideCompletelyDestroyedVFX4;                   // 0x258(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CompletelyDestroyedVFX4SocketName;                 // 0x280(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CompletelyDestroyedVFX4Scale;                      // 0x288(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoneOffset;                                        // 0x28C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x168 (0x170 - 0x8)
// ScriptStruct DXM.TTLPartsVisualArmLeftParamRow
struct FTTLPartsVisualArmLeftParamRow : public FTTLPartsVisualCommonParamRow
{
public:
	class FName                                  MeshPath;                                          // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PTArmorMeshPath;                                   // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PTArmorSocketName;                                 // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PTExhaustMeshPath;                                 // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PTExhaustSocketName;                               // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USkeletalMesh>          MovableUnit1Mesh;                                  // 0x30(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MovableUnit1SocketName;                            // 0x58(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USkeletalMesh>          MovableUnit2Mesh;                                  // 0x60(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MovableUnit2SocketName;                            // 0x88(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        OverrideHalfDestroyedVFX1;                         // 0x90(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HalfDestroyedVFX1SocketName;                       // 0xB8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HalfDestroyedVFX1Scale;                            // 0xC0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D36[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UParticleSystem>        OverrideHalfDestroyedVFX2;                         // 0xC8(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HalfDestroyedVFX2SocketName;                       // 0xF0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HalfDestroyedVFX2Scale;                            // 0xF8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D37[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UParticleSystem>        OverrideCompletelyDestroyedVFX1;                   // 0x100(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CompletelyDestroyedVFX1SocketName;                 // 0x128(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CompletelyDestroyedVFX1Scale;                      // 0x130(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D38[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UParticleSystem>        OverrideCompletelyDestroyedVFX2;                   // 0x138(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CompletelyDestroyedVFX2SocketName;                 // 0x160(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CompletelyDestroyedVFX2Scale;                      // 0x168(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D39[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x168 (0x170 - 0x8)
// ScriptStruct DXM.TTLPartsVisualArmRightParamRow
struct FTTLPartsVisualArmRightParamRow : public FTTLPartsVisualCommonParamRow
{
public:
	class FName                                  MeshPath;                                          // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PTArmorMeshPath;                                   // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PTArmorSocketName;                                 // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PTExhaustMeshPath;                                 // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PTExhaustSocketName;                               // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USkeletalMesh>          MovableUnit1Mesh;                                  // 0x30(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MovableUnit1SocketName;                            // 0x58(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USkeletalMesh>          MovableUnit2Mesh;                                  // 0x60(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MovableUnit2SocketName;                            // 0x88(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        OverrideHalfDestroyedVFX1;                         // 0x90(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HalfDestroyedVFX1SocketName;                       // 0xB8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HalfDestroyedVFX1Scale;                            // 0xC0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D3A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UParticleSystem>        OverrideHalfDestroyedVFX2;                         // 0xC8(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HalfDestroyedVFX2SocketName;                       // 0xF0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HalfDestroyedVFX2Scale;                            // 0xF8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D3B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UParticleSystem>        OverrideCompletelyDestroyedVFX1;                   // 0x100(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CompletelyDestroyedVFX1SocketName;                 // 0x128(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CompletelyDestroyedVFX1Scale;                      // 0x130(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D3C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UParticleSystem>        OverrideCompletelyDestroyedVFX2;                   // 0x138(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CompletelyDestroyedVFX2SocketName;                 // 0x160(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CompletelyDestroyedVFX2Scale;                      // 0x168(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D3D[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x350 (0x358 - 0x8)
// ScriptStruct DXM.TTLPartsVisualBodyParamRow
struct FTTLPartsVisualBodyParamRow : public FTTLPartsVisualCommonParamRow
{
public:
	class FName                                  MeshPath;                                          // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeaponRackLeftPath;                                // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USkeletalMesh>          MovableUnit1Mesh;                                  // 0x18(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MovableUnit1SocketName;                            // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USkeletalMesh>          MovableUnit2Mesh;                                  // 0x48(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MovableUnit2SocketName;                            // 0x70(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USkeletalMesh>          MovableUnit3Mesh;                                  // 0x78(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MovableUnit3SocketName;                            // 0xA0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        OverrideHalfDestroyedVFX1;                         // 0xA8(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HalfDestroyedVFX1SocketName;                       // 0xD0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HalfDestroyedVFX1Scale;                            // 0xD8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D3E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UParticleSystem>        OverrideHalfDestroyedVFX2;                         // 0xE0(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HalfDestroyedVFX2SocketName;                       // 0x108(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HalfDestroyedVFX2Scale;                            // 0x110(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D3F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UParticleSystem>        OverrideCompletelyDestroyedVFX1;                   // 0x118(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CompletelyDestroyedVFX1SocketName;                 // 0x140(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CompletelyDestroyedVFX1Scale;                      // 0x148(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D40[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UParticleSystem>        OverrideCompletelyDestroyedVFX2;                   // 0x150(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CompletelyDestroyedVFX2SocketName;                 // 0x178(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CompletelyDestroyedVFX2Scale;                      // 0x180(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D41[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UParticleSystem>        OverrideHalfDestroyedBackVFX1;                     // 0x188(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HalfDestroyedBackVFX1SocketName;                   // 0x1B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HalfDestroyedBackVFX1Scale;                        // 0x1B8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D42[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UParticleSystem>        OverrideHalfDestroyedBackVFX2;                     // 0x1C0(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HalfDestroyedBackVFX2SocketName;                   // 0x1E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HalfDestroyedBackVFX2Scale;                        // 0x1F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D43[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UParticleSystem>        OverrideCompletelyDestroyedBackVFX1;               // 0x1F8(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CompletelyDestroyedBackVFX1SocketName;             // 0x220(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CompletelyDestroyedBackVFX1Scale;                  // 0x228(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D44[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UParticleSystem>        OverrideCompletelyDestroyedBackVFX2;               // 0x230(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CompletelyDestroyedBackVFX2SocketName;             // 0x258(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CompletelyDestroyedBackVFX2Scale;                  // 0x260(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoneOffset;                                        // 0x264(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimMontage>           GetOffMontageMale;                                 // 0x268(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimMontage>           GetOffMontageFemale;                               // 0x290(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimComposite>         GetOnCompositeMale;                                // 0x2B8(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimComposite>         GetOnCompositeFemale;                              // 0x2E0(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimSequence>          EjectMotionMale;                                   // 0x308(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimSequence>          EjectMotionFemale;                                 // 0x330(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xE8 (0xF0 - 0x8)
// ScriptStruct DXM.TTLPartsVisualHeadParamRow
struct FTTLPartsVisualHeadParamRow : public FTTLPartsVisualCommonParamRow
{
public:
	class FName                                  MeshPath;                                          // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        OverrideHalfDestroyedVFX1;                         // 0x10(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HalfDestroyedVFX1SocketName;                       // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HalfDestroyedVFX1Scale;                            // 0x40(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D45[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UParticleSystem>        OverrideHalfDestroyedVFX2;                         // 0x48(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HalfDestroyedVFX2SocketName;                       // 0x70(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HalfDestroyedVFX2Scale;                            // 0x78(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D46[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UParticleSystem>        OverrideCompletelyDestroyedVFX1;                   // 0x80(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CompletelyDestroyedVFX1SocketName;                 // 0xA8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CompletelyDestroyedVFX1Scale;                      // 0xB0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D47[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UParticleSystem>        OverrideCompletelyDestroyedVFX2;                   // 0xB8(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CompletelyDestroyedVFX2SocketName;                 // 0xE0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CompletelyDestroyedVFX2Scale;                      // 0xE8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D48[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xD0 (0xD8 - 0x8)
// ScriptStruct DXM.TTLPartsCommonParamRow
struct FTTLPartsCommonParamRow : public FTableRowBase
{
public:
	class FName                                  Name;                                              // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Cost;                                              // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefPhysical;                                       // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HPExt;                                             // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HPInt;                                             // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Weight;                                            // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AirResistance;                                     // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Stealth;                                           // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BurningResist;                                     // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StunResist;                                        // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AcidResist;                                        // 0x34(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PhysicsResist;                                     // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FemtoResist;                                       // 0x3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D49[0x98];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x108 - 0xD8)
// ScriptStruct DXM.TTLPartsLegsParamRow
struct FTTLPartsLegsParamRow : public FTTLPartsCommonParamRow
{
public:
	float                                        GroundSpeed;                                       // 0xD8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GroundBoostSpeed;                                  // 0xDC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WalkSpeed;                                         // 0xE0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpSpeed;                                         // 0xE4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LandingTime;                                       // 0xE8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraInertia;                                     // 0xEC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PoseControlSpec;                                   // 0xF0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeatDownSpec;                                      // 0xF4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KnockbackRecoveryTime;                             // 0xF8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Acceleration;                                      // 0xFC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LandingStopSpeed;                                  // 0x100(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D4A[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x118 - 0xD8)
// ScriptStruct DXM.TTLPartsArmLeftParamRow
struct FTTLPartsArmLeftParamRow : public FTTLPartsCommonParamRow
{
public:
	float                                        ArmLeftAttackCorrection;                           // 0xD8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArmLeftCoolCorrection;                             // 0xDC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArmLeftBurstCorrection;                            // 0xE0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArmLeftAccuracyCorrection;                         // 0xE4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PunchName;                                         // 0xE8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  GunArmLeftType;                                    // 0xF0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  GunArmLeftSkinType;                                // 0xF8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArmLeftThrowSpec;                                  // 0x100(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArmLeftRecoilSpec;                                 // 0x104(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArmLeftJointRange;                                 // 0x108(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArmLeftReloadCorrection;                           // 0x10C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArmLeftMaxPower;                                   // 0x110(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D4B[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x118 - 0xD8)
// ScriptStruct DXM.TTLPartsArmRightParamRow
struct FTTLPartsArmRightParamRow : public FTTLPartsCommonParamRow
{
public:
	float                                        ArmRightAttackCorrection;                          // 0xD8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArmRightCoolCorrection;                            // 0xDC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArmRightBurstCorrection;                           // 0xE0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArmRightAccuracyCorrection;                        // 0xE4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PunchName;                                         // 0xE8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  GunArmRightType;                                   // 0xF0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  GunArmRightSkinType;                               // 0xF8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArmRightThrowSpec;                                 // 0x100(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArmRightRecoilSpec;                                // 0x104(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArmRightJointRange;                                // 0x108(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArmRightReloadCorrection;                          // 0x10C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArmRightMaxPower;                                  // 0x110(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D4C[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x120 - 0xD8)
// ScriptStruct DXM.TTLPartsInsideParamRow
struct FTTLPartsInsideParamRow : public FTTLPartsCommonParamRow
{
public:
	float                                        ShieldFemto;                                       // 0xD8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShieldHP;                                          // 0xDC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShieldNum;                                         // 0xE0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CorrectionDef;                                     // 0xE4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CorrectionCool;                                    // 0xE8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CorrectionBurst;                                   // 0xEC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MirageFemtoConsume;                                // 0xF0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootingSpec;                                      // 0xF4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TrajectoryCalcSpec;                                // 0xF8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlyingProcessSpec;                                 // 0xFC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostProcessSpec;                                  // 0x100(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeatControlSpec;                                   // 0x104(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CoolingPerformance;                                // 0x108(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LimitTMP;                                          // 0x10C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FemtoUpRate;                                       // 0x110(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootCorrectSpec;                                  // 0x114(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CostCapacityCorrection;                            // 0x118(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LockOnReviseEnabled;                               // 0x11C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D4D[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x120 - 0xD8)
// ScriptStruct DXM.TTLPartsBodyParamRow
struct FTTLPartsBodyParamRow : public FTTLPartsCommonParamRow
{
public:
	float                                        VP;                                                // 0xD8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CostCapacity;                                      // 0xDC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CoolSpeedGround;                                   // 0xE0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CoolSpeedFlying;                                   // 0xE4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CoolSpeedSpecial;                                  // 0xE8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlyingSpeed;                                       // 0xEC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlyingBoostSpeed;                                  // 0xF0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RiseSpeed;                                         // 0xF4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FirstRiseImpact;                                   // 0xF8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlyingBoostSpeedTMPFirst;                          // 0xFC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlyingBoostSpeedTMP;                               // 0x100(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GroundBoostSpeedTMPFirst;                          // 0x104(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GroundBoostSpeedTMP;                               // 0x108(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostPowerOnLand;                                  // 0x10C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMPWarning;                                        // 0x110(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMPOverHeat;                                       // 0x114(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KnockbackResist;                                   // 0x118(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D4E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x100 - 0xD8)
// ScriptStruct DXM.TTLPartsHeadParamRow
struct FTTLPartsHeadParamRow : public FTTLPartsCommonParamRow
{
public:
	float                                        LockOnRange;                                       // 0xD8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LockOnTime;                                        // 0xDC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLLockonSightType               LockonSightType;                                   // 0xE0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D4F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LockonSightHeight;                                 // 0xE4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LockonSightWidth;                                  // 0xE8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D50[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  RaderID;                                           // 0xF0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RadarRadius;                                       // 0xF8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootingControlCorrection;                         // 0xFC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1C (0x1C - 0x0)
// ScriptStruct DXM.TTLPartsTotalDefParam
struct FTTLPartsTotalDefParam
{
public:
	float                                        DefPhysical;                                       // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxKnockbackValue;                                 // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BurningResist;                                     // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StunResist;                                        // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AcidResist;                                        // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PhysicsResist;                                     // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FemtoResist;                                       // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct DXM.TTLPartsTotalCoolParam
struct FTTLPartsTotalCoolParam
{
public:
	float                                        CoolSpeedGround;                                   // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CoolSpeedFlying;                                   // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CoolSpeedSpecial;                                  // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMPWarning;                                        // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMPOverHeat;                                       // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct DXM.TTLPartsTotalShieldParam
struct FTTLPartsTotalShieldParam
{
public:
	float                                        ShieldFemto;                                       // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShieldHP;                                          // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShieldNum;                                         // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x24 (0x24 - 0x0)
// ScriptStruct DXM.TTLPartsTotalGroundParam
struct FTTLPartsTotalGroundParam
{
public:
	float                                        GroundSpeed;                                       // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GroundBoostSpeed;                                  // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GroundBoostSpeedTMPFirst;                          // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GroundBoostSpeedTMP;                               // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WalkSpeed;                                         // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LandingTime;                                       // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpSpeed;                                         // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Acceleration;                                      // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LandingStopSpeed;                                  // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLPartsTotalFlyingParam
struct FTTLPartsTotalFlyingParam
{
public:
	float                                        FlyingSpeed;                                       // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlyingBoostSpeed;                                  // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RiseSpeed;                                         // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FirstRiseImpact;                                   // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlyingBoostSpeedTMPFirst;                          // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlyingBoostSpeedTMP;                               // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct DXM.TTLPartsTotalLockonParam
struct FTTLPartsTotalLockonParam
{
public:
	float                                        LockOnRange;                                       // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LockOnTime;                                        // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLLockonSightType               SightType;                                         // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D51[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SightHeight;                                       // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SightWidth;                                        // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLPartsTotalArmRightParam
struct FTTLPartsTotalArmRightParam
{
public:
	float                                        ArmRightCoolCorrection;                            // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArmRightBurstCorrection;                           // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArmRightAccuracyCorrection;                        // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArmRightThrowSpec;                                 // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArmRightRecoilSpec;                                // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArmRightReloadCorrection;                          // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLPartsTotalArmLeftParam
struct FTTLPartsTotalArmLeftParam
{
public:
	float                                        ArmLeftCoolCorrection;                             // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArmLeftBurstCorrection;                            // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArmLeftAccuracyCorrection;                         // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArmLeftThrowSpec;                                  // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArmLeftRecoilSpec;                                 // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArmLeftReloadCorrection;                           // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x4 (0x4 - 0x0)
// ScriptStruct DXM.TTLPartsTotalCorrectionParam
struct FTTLPartsTotalCorrectionParam
{
public:
	float                                        CorrectionDef;                                     // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLPartsTotalArmorParam
struct FTTLPartsTotalArmorParam
{
public:
	float                                        HPExtHead;                                         // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HPIntHead;                                         // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HPExtBody;                                         // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HPIntBody;                                         // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HPExtArmRight;                                     // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HPIntArmRight;                                     // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HPExtArmLeft;                                      // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HPIntArmLeft;                                      // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HPExtLegs;                                         // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HPIntLegs;                                         // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x24 (0x24 - 0x0)
// ScriptStruct DXM.TTLPartsTotalAttackParam
struct FTTLPartsTotalAttackParam
{
public:
	float                                        Range;                                             // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Damage;                                            // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Bullet;                                            // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMPRiseOnUse;                                      // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMPRiseOnDamage;                                   // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KnockBack;                                         // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KnockOut;                                          // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightCloseRangeAttackSpec;                         // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftCloseRangeAttackSpec;                          // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x4 (0x4 - 0x0)
// ScriptStruct DXM.TTLPartsTotalMoveCorrectionParam
struct FTTLPartsTotalMoveCorrectionParam
{
public:
	float                                        KnockbackRecoveryTime;                             // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLPartsTotalFemtoParam
struct FTTLPartsTotalFemtoParam
{
public:
	float                                        MirageFemtoConsume;                                // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FemtoUpRate;                                       // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x98 (0x98 - 0x0)
// ScriptStruct DXM.TTLExtraAttachmentParam
struct FTTLExtraAttachmentParam
{
public:
	uint8                                        Pad_2D52[0x98];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x1D8 (0x1D8 - 0x0)
// ScriptStruct DXM.TTLPartsTotalParam
struct FTTLPartsTotalParam
{
public:
	float                                        VP;                                                // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Cost;                                              // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CostCapacity;                                      // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraInertia;                                     // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLPartsTotalDefParam                DefParam;                                          // 0x10(0x1C)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLPartsTotalCoolParam               CoolParam;                                         // 0x2C(0x14)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLPartsTotalGroundParam             GroundParam;                                       // 0x40(0x24)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLPartsTotalFlyingParam             FlyingParam;                                       // 0x64(0x18)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLPartsTotalLockonParam             LockonParam;                                       // 0x7C(0x14)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLPartsTotalShieldParam             ShieldParam;                                       // 0x90(0xC)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	float                                        Weight;                                            // 0x9C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Stability;                                         // 0xA0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShockResistance;                                   // 0xA4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLPartsTotalArmRightParam           ArmRightParam;                                     // 0xA8(0x18)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLPartsTotalArmLeftParam            ArmLeftParam;                                      // 0xC0(0x18)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLPartsTotalCorrectionParam         CorrectionParam;                                   // 0xD8(0x4)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLPartsTotalArmorParam              ArmorParam;                                        // 0xDC(0x28)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLPartsTotalAttackParam             AttackParam;                                       // 0x104(0x24)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLPartsTotalMoveCorrectionParam     MoveParam;                                         // 0x128(0x4)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLPartsTotalFemtoParam              FemtoParam;                                        // 0x12C(0x8)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	float                                        Stealth;                                           // 0x134(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AirResistance;                                     // 0x138(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LockOnReviseEnabled;                               // 0x13C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D53[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLExtraAttachmentParam              TotalExtraAttachmentParam;                         // 0x140(0x98)(BlueprintVisible, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct DXM.TTLPartsTotalShootingCorrectionParam
struct FTTLPartsTotalShootingCorrectionParam
{
public:
	float                                        ShootingSpec;                                      // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TrajectoryCalcSpec;                                // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootCorrectSpec;                                  // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLOneExtraAttachmentParam
struct FTTLOneExtraAttachmentParam
{
public:
	uint8                                        Pad_2D54[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x20 - 0x8)
// ScriptStruct DXM.TTLSortMenuParamRow
struct FTTLSortMenuParamRow : public FTableRowBase
{
public:
	class FName                                  Namespace;                                         // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Key;                                               // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Type;                                              // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D55[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x10 - 0x8)
// ScriptStruct DXM.TTLSortIDParamRow
struct FTTLSortIDParamRow : public FTableRowBase
{
public:
	int32                                        SortID;                                            // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D56[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLNPCSortParam
struct FTTLNPCSortParam
{
public:
	class FName                                  NpcID;                                             // 0x0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Sort;                                              // 0x8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        AddOrder;                                          // 0x9(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        RequestOrder;                                      // 0xA(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D57[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLDecorationNewFlag
struct FTTLDecorationNewFlag
{
public:
	class FName                                  DecorationItemID;                                  // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnable;                                          // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEDecorationFlagState          DecorationFlagState;                               // 0x9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D58[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint64                                       GetPlayTime;                                       // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLDecorationNewFlagSortParam
struct FTTLDecorationNewFlagSortParam
{
public:
	struct FTTLDecorationNewFlag                 Parts;                                             // 0x0(0x18)(BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DefaultNum;                                        // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsNoneParts;                                       // 0x1C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D59[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLOwnedAttachmentSortParam
struct FTTLOwnedAttachmentSortParam
{
public:
	struct FTTLOwnedAttachmentParam              Parts;                                             // 0x0(0x18)(BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEAttachmentType               Type;                                              // 0x18(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D5A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PurchaseAmount;                                    // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SortID;                                            // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SortExclude;                                       // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x38 - 0x8)
// ScriptStruct DXM.TTLPartsSortParamBaseRow
struct FTTLPartsSortParamBaseRow : public FTableRowBase
{
public:
	float                                        Cost;                                              // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefPhysical;                                       // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FemtoResist;                                       // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HPInt;                                             // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HPExt;                                             // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Stealth;                                           // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Weight;                                            // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PhysicsResist;                                     // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BurningResist;                                     // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StunResist;                                        // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AcidResist;                                        // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D5B[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x120 (0x128 - 0x8)
// ScriptStruct DXM.TTLWeaponParamBaseRow
struct FTTLWeaponParamBaseRow : public FTableRowBase
{
public:
	class FName                                  WeaponName;                                        // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLWeaponType                    WeaponType;                                        // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D5C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Cost;                                              // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Weight;                                            // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AirResistance;                                     // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Stealth;                                           // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Range;                                             // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Damage;                                            // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AttributeDamage;                                   // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLWeaponDamageAttribute         DamageAttribute;                                   // 0x30(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D5D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ThrownDamage;                                      // 0x34(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Bullet;                                            // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMPRiseOnUse;                                      // 0x3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMPRiseOnDamage;                                   // 0x40(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KnockBack;                                         // 0x44(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KnockOut;                                          // 0x48(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IgnoreMass;                                        // 0x4C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLDmgDirType                    DirectionType;                                     // 0x4D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEAbnormalStatusType           AbnormalType;                                      // 0x4E(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D5E[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AbnormalValue;                                     // 0x50(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LifeSeconds;                                       // 0x54(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SequenceRadius;                                    // 0x58(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D5F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  DropWeaponID;                                      // 0x60(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UnFireTime;                                        // 0x68(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VP;                                                // 0x6C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D60[0xB8];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x1B0 (0x1B0 - 0x0)
// ScriptStruct DXM.TTLArsenalSortPartsInfo
struct FTTLArsenalSortPartsInfo
{
public:
	struct FTTLArsenalPartsInfo                  Parts;                                             // 0x0(0x38)(BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PurchaseAmount;                                    // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEnterpriseType                EnterpriseType;                                    // 0x3C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D61[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLWeaponParamBaseRow                WeaponParamBaseRow;                                // 0x40(0x128)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLPartsSortParamBaseRow             PartsSortParamBaseRow;                             // 0x168(0x38)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                        Have;                                              // 0x1A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SortID;                                            // 0x1A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SortExclude;                                       // 0x1A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEWeaponCategory               WeaponCategory;                                    // 0x1AC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D62[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLPauseMenuMissionContentesParts
struct FTTLPauseMenuMissionContentesParts
{
public:
	class UWidget*                               Name;                                              // 0x0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                               Icon;                                              // 0x8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                               CheckMark;                                         // 0x10(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLAISettingModule
struct FTTLAISettingModule
{
public:
	bool                                         IsAIStop;                                          // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsAIStop_DisableLockOn;                            // 0x1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsAIStop_Invincible;                               // 0x2(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D63[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  AIGroupTagName;                                    // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UTTLAdjustActiveEmissiveComponent> AdjustEmissiveComponent;                           // 0x10(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D64[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLMissionCallbackProcessor
struct FTTLMissionCallbackProcessor
{
public:
	class AActor*                                OwnerActor;                                        // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                HPThresholds;                                      // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLMissionCallbackSetting
struct FTTLMissionCallbackSetting
{
public:
	enum class ETTLEMissionCallbackType          Type;                                              // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D65[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  Value;                                             // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct DXM.TTLLayoutSetting
struct FTTLLayoutSetting
{
public:
	bool                                         IsHiddenAtMissionStart;                            // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D66[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLMissionCallbackSetting>    CallbackSettings;                                  // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        Score;                                             // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D67[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  EnemyID;                                           // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  OverrideCharacterNameKey;                          // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xB60 (0xB68 - 0x8)
// ScriptStruct DXM.TTLPhysicalMaterialFxRow
struct FTTLPhysicalMaterialFxRow : public FTableRowBase
{
public:
	struct FTTLFxParamWeak                       FxPH01a;                                           // 0x8(0x70)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLFxParamWeak                       FxPH01b;                                           // 0x78(0x70)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLFxParamWeak                       FxPH01c;                                           // 0xE8(0x70)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLFxParamWeak                       FxPH02a;                                           // 0x158(0x70)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLFxParamWeak                       FxPH02b;                                           // 0x1C8(0x70)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLFxParamWeak                       FxPH02c;                                           // 0x238(0x70)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLFxParamWeak                       FxPH02d;                                           // 0x2A8(0x70)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLFxParamWeak                       FxPH03a;                                           // 0x318(0x70)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLFxParamWeak                       FxPH04a;                                           // 0x388(0x70)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLFxParamWeak                       FxPH05a;                                           // 0x3F8(0x70)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLFxParamWeak                       FxPH05b;                                           // 0x468(0x70)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLFxParamWeak                       FxPH05c;                                           // 0x4D8(0x70)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLFxParamWeak                       FxPH06a;                                           // 0x548(0x70)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLFxParamWeak                       FxPH06b;                                           // 0x5B8(0x70)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLFxParamWeak                       FxPH07a;                                           // 0x628(0x70)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLFxParamWeak                       FxPH08a;                                           // 0x698(0x70)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLFxParamWeak                       FxPH08b;                                           // 0x708(0x70)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLFxParamWeak                       FxPH09a;                                           // 0x778(0x70)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLFxParamWeak                       FxPH10a;                                           // 0x7E8(0x70)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLFxParamWeak                       FxPH12a;                                           // 0x858(0x70)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLFxParamWeak                       FxPH13a;                                           // 0x8C8(0x70)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLFxParamWeak                       FxPH21a;                                           // 0x938(0x70)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLFxParamWeak                       FxPH22a;                                           // 0x9A8(0x70)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLFxParamWeak                       FxPH41a;                                           // 0xA18(0x70)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLFxParamWeak                       FxPH42a;                                           // 0xA88(0x70)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLFxParamWeak                       FxPH43a;                                           // 0xAF8(0x70)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct DXM.TTLPostLogMessageArgument
struct FTTLPostLogMessageArgument
{
public:
	class AActor*                                InstigatorActor;                                   // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                TargetActor;                                       // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                TargetActor2;                                      // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLPartsType                     PartsType;                                         // 0x18(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D68[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  PartsID;                                           // 0x20(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Expense;                                           // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D69[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLInheritArsenalVPInfo
struct FTTLInheritArsenalVPInfo
{
public:
	float                                        Hp;                                                // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeadHP;                                            // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChestHP;                                           // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LArmHP;                                            // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RArmHP;                                            // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LegsHP;                                            // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x4 (0x4 - 0x0)
// ScriptStruct DXM.TTLSurvivalFunnelPotInfoConvertPacket
struct FTTLSurvivalFunnelPotInfoConvertPacket
{
public:
	float                                        Hp;                                                // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLSurvivalFunnelInfoConvertPacket
struct FTTLSurvivalFunnelInfoConvertPacket
{
public:
	TArray<struct FTTLSurvivalFunnelPotInfoConvertPacket> FunnelList;                                        // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct DXM.TTLSurvivalBulletInfoConvertPacket
struct FTTLSurvivalBulletInfoConvertPacket
{
public:
	int32                                        RemainBulletNum;                                   // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MagazinBulletNum;                                  // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Dulability;                                        // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLOuterStorageInfo
struct FTTLOuterStorageInfo
{
public:
	float                                        VP;                                                // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TotalVP;                                           // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        GeneradeBullet;                                    // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TrapBullet;                                        // 0xC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x88 (0x88 - 0x0)
// ScriptStruct DXM.TTLSurvivalMissionInitializePacketData
struct FTTLSurvivalMissionInitializePacketData
{
public:
	uint8                                        MultiPlayerIndex;                                  // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D6A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLInheritArsenalVPInfo              VPInfo;                                            // 0x4(0x18)(NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLSurvivalBulletInfoConvertPacket   Left;                                              // 0x1C(0xC)(NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLSurvivalBulletInfoConvertPacket   Right;                                             // 0x28(0xC)(NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLSurvivalBulletInfoConvertPacket   LeftRack;                                          // 0x34(0xC)(NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLSurvivalBulletInfoConvertPacket   RightRack;                                         // 0x40(0xC)(NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLSurvivalBulletInfoConvertPacket   Shoulder;                                          // 0x4C(0xC)(NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLSurvivalBulletInfoConvertPacket   Support;                                           // 0x58(0xC)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D6B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLSurvivalFunnelInfoConvertPacket   Funnel;                                            // 0x68(0x10)(NativeAccessSpecifierPublic)
	struct FTTLOuterStorageInfo                  OuterInfo;                                         // 0x78(0x10)(NoDestructor, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct DXM.TTLPlayLogTopPanelInfo
struct FTTLPlayLogTopPanelInfo
{
public:
	uint8                                        Pad_2D6C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ETTLEPlayLogPanelType             PanelType;                                         // 0x4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEPlayLogParentCategory        ParentType;                                        // 0x5(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D6D[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UUserWidget*                           PanelWidget;                                       // 0x8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CursorMovable;                                     // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D6E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FIntVector                            CurrentCursor;                                     // 0x14(0xC)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UUserWidget*>                   ChildButtons;                                      // 0x20(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Anim_ChildOn;                                      // 0x30(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Anim_ChildOff;                                     // 0x38(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PanelColumn;                                       // 0x40(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D6F[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct DXM.TTLLogParamTextInfo
struct FTTLLogParamTextInfo
{
public:
	class FText                                  Title;                                             // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Subtitle;                                          // 0x18(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Contents;                                          // 0x30(0x18)(NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct DXM.TTLLogParamPieChartInfo
struct FTTLLogParamPieChartInfo
{
public:
	class UTexture2D*                            Icon;                                              // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  IconText;                                          // 0x8(0x18)(NativeAccessSpecifierPublic)
	float                                        Ratio;                                             // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D70[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  Title;                                             // 0x28(0x18)(NativeAccessSpecifierPublic)
};

// 0x138 (0x138 - 0x0)
// ScriptStruct DXM.TTLOtherPlayerLogInfoReceiveData
struct FTTLOtherPlayerLogInfoReceiveData
{
public:
	uint8                                        Pad_2D71[0x138];                                   // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x130 (0x130 - 0x0)
// ScriptStruct DXM.TTLOtherPlayerLogInfo
struct FTTLOtherPlayerLogInfo
{
public:
	class FString                                PlayerName;                                        // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TitleID;                                           // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EmblemID;                                          // 0x18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PrizeAmount;                                       // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D72[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  PartsID_Head;                                      // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PartsID_Body;                                      // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PartsID_Inside;                                    // 0x40(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PartsID_LeftArm;                                   // 0x48(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PartsID_RightArm;                                  // 0x50(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PartsID_Legs;                                      // 0x58(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeaponID_Left;                                     // 0x60(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeaponID_Right;                                    // 0x68(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeaponID_Shoulder;                                 // 0x70(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeaponID_Support;                                  // 0x78(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeaponID_Rack1;                                    // 0x80(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeaponID_Rack2;                                    // 0x88(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          AttachmentID_Head;                                 // 0x90(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          AttachmentID_Body;                                 // 0xA0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          AttachmentID_LeftArm;                              // 0xB0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          AttachmentID_RightArm;                             // 0xC0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          AttachmentID_Legs;                                 // 0xD0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          AttachmentID_LeftWeapon;                           // 0xE0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          AttachmentID_RightWeapon;                          // 0xF0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          AttachmentID_ShoulderWeapon;                       // 0x100(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          AttachmentID_LeftRack;                             // 0x110(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          AttachmentID_RightRack;                            // 0x120(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct DXM.TTLLogChildBtnInfo
struct FTTLLogChildBtnInfo
{
public:
	class UTexture2D*                            Icon;                                              // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D73[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLScaleInfo
struct FTTLScaleInfo
{
public:
	class UCurveFloat*                           ScaleChangeCurve;                                  // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D74[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x18 - 0x10)
// ScriptStruct DXM.TTLPostProcessScaleInfo
struct FTTLPostProcessScaleInfo : public FTTLScaleInfo
{
public:
	float                                        ScaleChangedBlend;                                 // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D75[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x20 - 0x10)
// ScriptStruct DXM.TTLShapeScaleInfo
struct FTTLShapeScaleInfo : public FTTLScaleInfo
{
public:
	struct FVector                               ScaleChangedScale;                                 // 0x10(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D76[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLPooledProjectile
struct FTTLPooledProjectile
{
public:
	class ATTLProjectileBase*                    Projectile;                                        // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsActivate;                                        // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D77[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct DXM.TTLCollisionSourceInfo
struct FTTLCollisionSourceInfo
{
public:
	class FName                                  Tag;                                               // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CollisionMovePower;                                // 0x8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CollisionMovePower_Chara;                          // 0xC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CollisionMovePower_CharaOuter;                     // 0x10(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLCollisionSourceType           CollisionType;                                     // 0x14(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Size;                                              // 0x18(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D78[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class AActor>>            IgnoreClassArray;                                  // 0x28(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                         IsPushForGettingOn;                                // 0x38(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsOFFAtStopping;                                   // 0x39(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D79[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x40 - 0x8)
// ScriptStruct DXM.TTLRankingRankOffsetPointRow
struct FTTLRankingRankOffsetPointRow : public FTableRowBase
{
public:
	int32                                        PointValueMin;                                     // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PointValueMax;                                     // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PointValueR1;                                      // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PointValueR2;                                      // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PointValueY1;                                      // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PointValueY2;                                      // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RatingChangeValueIncMax;                           // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RatingChangeValueIncMin;                           // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RatingChangeValueDecMax;                           // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RatingChangeValueDecMin;                           // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Comment;                                           // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x40 - 0x8)
// ScriptStruct DXM.TTLRankingRankParamRow
struct FTTLRankingRankParamRow : public FTableRowBase
{
public:
	int32                                        PointValue;                                        // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D7A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  TextureFileName;                                   // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                NameKey;                                           // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PointBaseValue;                                    // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PointRateValue;                                    // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Comment;                                           // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x28 - 0x8)
// ScriptStruct DXM.TTLRankingCommonParamRow
struct FTTLRankingCommonParamRow : public FTableRowBase
{
public:
	int32                                        DisconnectionWarningCount;                         // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DisconnectionPenaltyStartNum;                      // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DisconnectionPenaltyMaxNum;                        // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DisconnectionPenaltyValue;                         // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DuelRatingScale;                                   // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RatingValueMax;                                    // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RatingValueMin;                                    // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D7B[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x28 - 0x8)
// ScriptStruct DXM.TTLNgItemInfoRow
struct FTTLNgItemInfoRow : public FTableRowBase
{
public:
	class FString                                Comment;                                           // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          NgItemIdList;                                      // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLRegulationiStringTableInfo
struct FTTLRegulationiStringTableInfo
{
public:
	class FString                                Namespace;                                         // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Key;                                               // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x58 (0x60 - 0x8)
// ScriptStruct DXM.TTLRegulationInfoRow
struct FTTLRegulationInfoRow : public FTableRowBase
{
public:
	class FString                                Comment;                                           // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SortIndex;                                         // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D7C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLRegulationiStringTableInfo        StringTableInfo;                                   // 0x20(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FName                                  RegulationPartsRow;                                // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RegulationAttachmentRow;                           // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RegulationSkillRow;                                // 0x50(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UseRankMatch;                                      // 0x58(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UseTagMatch;                                       // 0x59(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D7D[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x3 (0x3 - 0x0)
// ScriptStruct DXM.TTLCharaEditFlagInfo
struct FTTLCharaEditFlagInfo
{
public:
	enum class ETTLECharaEditInfoType            InfoType;                                          // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           PartsID;                                           // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLECharaEditFlagState           State;                                             // 0x2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct DXM.TTLSortTypeInfo
struct FTTLSortTypeInfo
{
public:
	enum class ETTLESortMenuType                 MenuType;                                          // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D7E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SortCursor;                                        // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Order;                                             // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D7F[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x2 (0x2 - 0x0)
// ScriptStruct DXM.TTLManualDataSmallInfo
struct FTTLManualDataSmallInfo
{
public:
	bool                                         IsOpen;                                            // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsReading;                                         // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLManualDataBigInfo
struct FTTLManualDataBigInfo
{
public:
	TArray<struct FTTLManualDataSmallInfo>       SmallInfoArray;                                    // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLManualDataInfo
struct FTTLManualDataInfo
{
public:
	TArray<struct FTTLManualDataBigInfo>         BigInfoArray;                                      // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x4 (0x4 - 0x0)
// ScriptStruct DXM.TTLTutorialPageInfo
struct FTTLTutorialPageInfo
{
public:
	uint16                                       BigIndex;                                          // 0x0(0x2)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint16                                       SmallIndex;                                        // 0x2(0x2)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLTutorialDataInfo
struct FTTLTutorialDataInfo
{
public:
	TArray<struct FTTLTutorialPageInfo>          PageInfo;                                          // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLBaseCampWeaponInfo
struct FTTLBaseCampWeaponInfo
{
public:
	bool                                         DispFlag;                                          // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D80[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint32                                       WeaponIDCRC;                                       // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLLineChatInfo
struct FTTLLineChatInfo
{
public:
	TArray<enum class ETTLELineChatState>        LineChatState;                                     // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<uint64>                               OpenPlayTime;                                      // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLOnlineInfo
struct FTTLOnlineInfo
{
public:
	uint64                                       NEXUniqueId;                                       // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint64                                       NEXPassword;                                       // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x100 (0x100 - 0x0)
// ScriptStruct DXM.TTLDlcInfo
struct FTTLDlcInfo
{
public:
	enum class ETTLEDlcState                     DlcNotice[0x100];                                  // 0x0(0x100)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xD0 (0xD0 - 0x0)
// ScriptStruct DXM.TTLOuterCustomInfo
struct FTTLOuterCustomInfo
{
public:
	struct FTTLHumanEditInfo                     HumanInfo;                                         // 0x0(0xD0)(BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct DXM.TTLDecorationNewFlagList
struct FTTLDecorationNewFlagList
{
public:
	TArray<struct FTTLDecorationNewFlag>         AllColorNewFlagList;                               // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLDecorationNewFlag>         AllDecalNewFlagList;                               // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLDecorationNewFlag>         AllSurfaceNewFlagList;                             // 0x20(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLDecorationNewFlag>         AllTitleNewFlagList;                               // 0x30(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLDecorationNewFlag>         AllEmblemNewFlagList;                              // 0x40(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLDecorationNewFlag>         AllArsenalSkinNewFlagList;                         // 0x50(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLNewPartsFlags
struct FTTLNewPartsFlags
{
public:
	struct FTTLAssemblePartsInfoRow              PartsInfo;                                         // 0x0(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                        NewPartsFlags;                                     // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D81[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x3 (0x3 - 0x0)
// ScriptStruct DXM.TTLMainMenuFacilityInfo
struct FTTLMainMenuFacilityInfo
{
public:
	enum class ETTLEMainMenuFacilityType         Facility;                                          // 0x0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEntered;                                         // 0x1(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEFacilityState                OpenState;                                         // 0x2(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x90 (0x90 - 0x0)
// ScriptStruct DXM.TTLMainMenuNotificationInfo
struct FTTLMainMenuNotificationInfo
{
public:
	class FName                                  NotificationID;                                    // 0x0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEMainMenuFacilityType         Facility;                                          // 0x8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D82[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLMainMenuNotificationSave          NotificationParam;                                 // 0x10(0x78)(BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                         IsNew;                                             // 0x88(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D83[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x80 (0x80 - 0x0)
// ScriptStruct DXM.TTLMainMenuNotifications
struct FTTLMainMenuNotifications
{
public:
	TArray<struct FTTLMainMenuNotificationInfo>  MissionNotifications;                              // 0x0(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLMainMenuNotificationInfo>  DockNotifications;                                 // 0x10(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLMainMenuNotificationInfo>  ShopNotifications;                                 // 0x20(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLMainMenuNotificationInfo>  FactoryNotifications;                              // 0x30(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLMainMenuNotificationInfo>  IceCreamParlorNotifications;                       // 0x40(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLMainMenuNotificationInfo>  LabNotifications;                                  // 0x50(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLMainMenuNotificationInfo>  OnlineNotifications;                               // 0x60(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLMainMenuNotificationInfo>  LineChatNotifications;                             // 0x70(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct DXM.TTLCompMissionActivateInfo
struct FTTLCompMissionActivateInfo
{
public:
	class FName                                  MissionID;                                         // 0x0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ActivateCount;                                     // 0x8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D84[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  NPC1ID;                                            // 0x10(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NPC1NoiseCount;                                    // 0x18(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NPC1MercenaryCount;                                // 0x1C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NPC2ID;                                            // 0x20(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NPC2NoiseCount;                                    // 0x28(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NPC2MercenaryCount;                                // 0x2C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NPC3ID;                                            // 0x30(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NPC3NoiseCount;                                    // 0x38(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NPC3MercenaryCount;                                // 0x3C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AlwaysShow;                                        // 0x40(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D85[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLCompMissionCoolDownInfo
struct FTTLCompMissionCoolDownInfo
{
public:
	class FName                                  MissionID;                                         // 0x0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CoolDownCount;                                     // 0x8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentCoolDownCount;                              // 0xC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AlwaysShow;                                        // 0x10(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D86[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLMissionSubGoalProgressInfo
struct FTTLMissionSubGoalProgressInfo
{
public:
	bool                                         IsFinished;                                        // 0x0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D87[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        FinishCount;                                       // 0x4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct DXM.TTLMissionProgressInfo
struct FTTLMissionProgressInfo
{
public:
	class FName                                  MissionID;                                         // 0x0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEMissionType                  MissionType;                                       // 0x8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D88[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        FinishCount;                                       // 0xC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlayCount;                                         // 0x10(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FinishCountWhenOpened;                             // 0x14(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FinishTime;                                        // 0x18(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinDamage;                                         // 0x1C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsOpened;                                          // 0x20(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsFinished;                                        // 0x21(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsNewMission;                                      // 0x22(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D89[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLMissionSubGoalProgressInfo        SubGoal1Progress;                                  // 0x24(0x8)(BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLMissionSubGoalProgressInfo        SubGoal2Progress;                                  // 0x2C(0x8)(BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLMissionSubGoalProgressInfo        SubGoal3Progress;                                  // 0x34(0x8)(BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLMissionSubGoalProgressInfo        SubGoal4Progress;                                  // 0x3C(0x8)(BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D8A[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLMyNPCInfo
struct FTTLMyNPCInfo
{
public:
	class FName                                  MyNPC_0;                                           // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  MyNPC_1;                                           // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  MyNPC_2;                                           // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLNPCJoinInfoSort
struct FTTLNPCJoinInfoSort
{
public:
	uint8                                        RequestOrder;                                      // 0x0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D8B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Index;                                             // 0x4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x70 (0x70 - 0x0)
// ScriptStruct DXM.TTLNPCJoinInfo
struct FTTLNPCJoinInfo
{
public:
	class FName                                  NpcID;                                             // 0x0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLNPCFlagState                  FlagState;                                         // 0x8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D8C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLNPCFlagParamRow                   JoinParam;                                         // 0x10(0x50)(BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                        CurrentFriendShipValue;                            // 0x60(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        AddOrder;                                          // 0x64(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        RequestOrder;                                      // 0x65(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EncounterConditionFinish;                          // 0x66(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         SpecialBeatConditionFinish;                        // 0x67(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         SpecialActionDone;                                 // 0x68(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         NormalConditionEnable;                             // 0x69(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D8D[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLPlayerAssembleParamMenuState
struct FTTLPlayerAssembleParamMenuState
{
public:
	class FString                                ContextString;                                     // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEArsenalParamMenuState        ParamMenuState;                                    // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D8E[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x640 (0x640 - 0x0)
// ScriptStruct DXM.TTLPlayerAssembleInfo
struct FTTLPlayerAssembleInfo
{
public:
	class FString                                AssembleClassName;                                 // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DockClassDataName;                                 // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLArsenalPartsInfoList              PartsList;                                         // 0x20(0x310)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLArsenalPaintInfo                  PaintInfo;                                         // 0x330(0x310)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLPlayerKarteInfo
struct FTTLPlayerKarteInfo
{
public:
	TArray<struct FTTLKarteLog>                  PlayerKarteLog;                                    // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLIceCreamLog
struct FTTLIceCreamLog
{
public:
	int32                                        EatCount;                                          // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D8F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  FlavorID;                                          // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x3C (0x3C - 0x0)
// ScriptStruct DXM.TTLMatchTotalLog
struct FTTLMatchTotalLog
{
public:
	int32                                        MatchCount;                                        // 0x0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxContinuousVictory;                              // 0x4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentContinuousVictory;                          // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         WinPreviousMatch;                                  // 0xC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D90[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        DuelCount;                                         // 0x10(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DuelWinCount;                                      // 0x14(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DuelLoseCount;                                     // 0x18(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RunawaysCount;                                     // 0x1C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MatchResultWin;                                    // 0x20(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MatchResultLose;                                   // 0x24(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MatchResultDraw;                                   // 0x28(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MatchCount2on2;                                    // 0x2C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MatchResultWin2on2;                                // 0x30(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MatchResultLose2on2;                               // 0x34(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MatchResultDraw2on2;                               // 0x38(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLOneMatchLog
struct FTTLOneMatchLog
{
public:
	enum class ETTLEMissionResult                BattleResult;                                      // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D91[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                OpponentName;                                      // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        OpponentPrizeAmount;                               // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D92[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  BattleStageID;                                     // 0x20(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLMatchStageLog
struct FTTLMatchStageLog
{
public:
	class FName                                  StageID;                                           // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        WinCount;                                          // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlayCount;                                         // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLContractNPCLog
struct FTTLContractNPCLog
{
public:
	class FName                                  NpcID;                                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ContractCount;                                     // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D93[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x138 (0x138 - 0x0)
// ScriptStruct DXM.TTLPlayerStatisticsInfo
struct FTTLPlayerStatisticsInfo
{
public:
	float                                        TotalDamage;                                       // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TotalFemtoDamage;                                  // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TotalTMPRise;                                      // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NPCKillCountSinglePlay;                            // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BossKillCountSinglePlay;                           // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLMissionActionLog                  ActionLog;                                         // 0x14(0x30)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D94[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLMissionPartsUseLog>        PartsUseLog;                                       // 0x48(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLMissionWeaponUseLog>       WeaponUseLog;                                      // 0x58(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLMissionKillCountLog>       EnemyKillCounts;                                   // 0x68(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLIceCreamLog>               IceCreamLog;                                       // 0x78(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        TotalEatIceCreamNum;                               // 0x88(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalIceCreamTokenNum;                             // 0x8C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalLabGetSkillNum;                               // 0x90(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalLabResetSkillNum;                             // 0x94(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalDuelRequestNum;                               // 0x98(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalDuelApprovalNum;                              // 0x9C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MaxRankID;                                         // 0xA0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxPrizeAmount;                                    // 0xA8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLMatchTotalLog                     MatchTotalLog;                                     // 0xAC(0x3C)(NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLOneMatchLog>               OneMatchLogs;                                      // 0xE8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLOneMatchLog>               OneDuelLogs;                                       // 0xF8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLMatchStageLog>             RankMatchStageLog;                                 // 0x108(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        TotalIncome;                                       // 0x118(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalAmmunitionExpense;                            // 0x11C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalRepairExpense;                                // 0x120(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D95[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLContractNPCLog>            ContractNPCLog;                                    // 0x128(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLTreasureWeaponInfo
struct FTTLTreasureWeaponInfo
{
public:
	class FName                                  PartsListID;                                       // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1 (0x1 - 0x0)
// ScriptStruct DXM.TTLPlayerIceCreamLogInfo
struct FTTLPlayerIceCreamLogInfo
{
public:
	uint8                                        Pad_2D96[0x1];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLPlayerIceCreamLogParam
struct FTTLPlayerIceCreamLogParam
{
public:
	class FName                                  ID;                                                // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EatCount;                                          // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D97[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLMissionRankingOpenMissionInfo
struct FTTLMissionRankingOpenMissionInfo
{
public:
	class FName                                  EventID;                                           // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MissionID;                                         // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsForeverOpen;                                     // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsCloseResetWeek;                                  // 0x11(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsCloseResetDays;                                  // 0x12(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D98[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDateTime                             CloseTime;                                         // 0x18(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LimitPlayCount;                                    // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D99[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x90 (0x90 - 0x0)
// ScriptStruct DXM.TTLPlayerOnlineInfo
struct FTTLPlayerOnlineInfo
{
public:
	int32                                        WeekIndex;                                         // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DaysIndex;                                         // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PointRankingRateValue;                             // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MissionRankingCount[0x5];                          // 0xC(0x14)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          ReceivedRewardAllArray;                            // 0x20(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          ReceivedRewardWeekArray;                           // 0x30(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          ReceivedRewardDaysArray;                           // 0x40(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          OpenMissionAllArray;                               // 0x50(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          OpenMissionWeekArray;                              // 0x60(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          OpenMissionDaysArray;                              // 0x70(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLMissionRankingOpenMissionInfo> OpenMissionInfoArray;                              // 0x80(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x98 (0x98 - 0x0)
// ScriptStruct DXM.TTLPlayerBasicInfo
struct FTTLPlayerBasicInfo
{
public:
	class FString                                PlayerName;                                        // 0x0(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Cash;                                              // 0x10(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MissionClearCount;                                 // 0x14(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MissionPlayCount;                                  // 0x18(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D9A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int64                                        GeneratedPartsNum;                                 // 0x20(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        GeneratedAttachmentNum;                            // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        IceCreamToken;                                     // 0x2C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        IceCreamStamp;                                     // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D9B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  FavoriteIceFlavorID;                               // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HighestContractColleagueID;                        // 0x40(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TitleID;                                           // 0x48(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EmblemID;                                          // 0x50(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RankID;                                            // 0x58(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PrizeAmount;                                       // 0x60(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PointToRankUp;                                     // 0x64(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  GoodStageID;                                       // 0x68(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MercenaryRank;                                     // 0x70(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NextMercenaryRank;                                 // 0x74(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ScenarioProgress;                                  // 0x78(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ScannedDecalNum;                                   // 0x7C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint64                                       PlayTime;                                          // 0x80(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             SaveTime;                                          // 0x88(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EndingViewFlags;                                   // 0x90(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CompeMissionNPCResetCountRemain;                   // 0x94(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct DXM.TTLChatMessage
struct FTTLChatMessage
{
public:
	enum class ETTLChatMessageMode               Mode;                                              // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D9C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ChatMessage;                                       // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SoundPath;                                         // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                MessageKey;                                        // 0x28(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ChatSettingMessageID;                              // 0x38(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DefaultChatSettingMessageID;                       // 0x48(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EmoteID;                                           // 0x58(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DefaultEmoteID;                                    // 0x60(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct DXM.TTLOnlineDisconectData
struct FTTLOnlineDisconectData
{
public:
	bool                                         IsStartedBattle;                                   // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsShowOnlineInstabilityPopup;                      // 0x1(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsShowDisconnectionPopup;                          // 0x2(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D9D[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        DisconnectionCount;                                // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLFunnelStatusForPot
struct FTTLFunnelStatusForPot
{
public:
	class ATTLBaseFunnelPawn*                    FunnelPawn;                                        // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D9E[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLDebugSkillEffectInfo
struct FTTLDebugSkillEffectInfo
{
public:
	class FName                                  SkillName;                                         // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SkillOwnerName;                                    // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLESkillEffectType              EffectType;                                        // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D9F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        EffectValue;                                       // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLSkillObject*                       ObjectPtr;                                         // 0x18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLSkillSpecialParameter
struct FTTLSkillSpecialParameter
{
public:
	class FName                                  ParamName;                                         // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                ValueList;                                         // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct DXM.TTLSkillEffectParameter
struct FTTLSkillEffectParameter : public FTableRowBase
{
public:
	enum class ETTLESkillEffectType              SkillType;                                         // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DA0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        EffectValue;                                       // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLSkillTargetType               SkillTarget;                                       // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DA1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SpecialParamName;                                  // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLSmokeSpawnParam
struct FTTLSmokeSpawnParam
{
public:
	int32                                        VP;                                                // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLSmokeVFX                      SmokeType;                                         // 0x4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DA2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                SpawnIndexArray;                                   // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLSmokeVFXBlendContainer
struct FTTLSmokeVFXBlendContainer
{
public:
	float                                        CurrentTime;                                       // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxTime;                                           // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Playback;                                          // 0x8(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// 0xB8 (0xB8 - 0x0)
// ScriptStruct DXM.TTLSmokeVFXColorContainer
struct FTTLSmokeVFXColorContainer
{
public:
	struct FTTLFxParam                           Resources;                                         // 0x0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxModuleParameters                Parameters;                                        // 0x98(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLSmokeBaseColorContainer
struct FTTLSmokeBaseColorContainer
{
public:
	class FName                                  ParameterName;                                     // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          BaseColor;                                         // 0x8(0x10)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLSmokeBaseFloatContainer
struct FTTLSmokeBaseFloatContainer
{
public:
	class FName                                  ParameterName;                                     // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DA3[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct DXM.TTLSmokeVFXContainer
struct FTTLSmokeVFXContainer
{
public:
	class FName                                  SocketName;                                        // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Playback;                                          // 0x8(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FTTLSmokeBaseColorContainer>   BaseNameColorPair;                                 // 0x20(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLSmokeBaseFloatContainer>   BaseNameFloatPair;                                 // 0x30(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLSortMenuButtonInfo
struct FTTLSortMenuButtonInfo
{
public:
	uint8                                        Pad_2DA4[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLSpawnHateTarget
struct FTTLSpawnHateTarget
{
public:
	class AActor*                                Actor;                                             // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CountAttacked;                                     // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DA5[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x50 - 0x8)
// ScriptStruct DXM.TTLStaffRollParamRow
struct FTTLStaffRollParamRow : public FTableRowBase
{
public:
	enum class ETTLEStaffRollCommandType         CommandType;                                       // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DA6[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Content;                                           // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Content2;                                          // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Content3;                                          // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Content4;                                          // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLTextBlockInfo
struct FTTLTextBlockInfo
{
public:
	class UTextBlock*                            TextBlockPointer;                                  // 0x0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DA7[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLWidgetWithType
struct FTTLWidgetWithType
{
public:
	uint8                                        Pad_2DA8[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UUserWidget*                           Widget;                                            // 0x8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLSurvivalDebugRandomNPCSpawnInfo
struct FTTLSurvivalDebugRandomNPCSpawnInfo
{
public:
	struct FIntVector                            OwnerRoomPos;                                      // 0x0(0xC)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ArrangementPatternRowIndex;                        // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                ElectedClassIndexList;                             // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x38 - 0x8)
// ScriptStruct DXM.TTLSurvivalNPCLotteryInfo
struct FTTLSurvivalNPCLotteryInfo : public FTableRowBase
{
public:
	TSoftClassPtr<class ATTLCharacterCommon>     NPCAsset;                                          // 0x8(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LotteryRatio;                                      // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DA9[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x18 - 0x8)
// ScriptStruct DXM.TTLSurvivalNPCLotteryTableParam
struct FTTLSurvivalNPCLotteryTableParam : public FTableRowBase
{
public:
	TArray<struct FTTLSurvivalNPCLotteryInfo>    LotteryInfoList;                                   // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x148 (0x150 - 0x8)
// ScriptStruct DXM.TTLSurvivalNPCArrangementPatternParam
struct FTTLSurvivalNPCArrangementPatternParam : public FTableRowBase
{
public:
	class FName                                  RoomName;                                          // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                            Transform1;                                        // 0x10(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                  ArrangementTableRowName1;                          // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DAA[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            Transform2;                                        // 0x50(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                  ArrangementTableRowName2;                          // 0x80(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DAB[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            Transform3;                                        // 0x90(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                  ArrangementTableRowName3;                          // 0xC0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DAC[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            Transform4;                                        // 0xD0(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                  ArrangementTableRowName4;                          // 0x100(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DAD[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            Transform5;                                        // 0x110(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                  ArrangementTableRowName5;                          // 0x140(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DAE[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLSurvivalDungeonElectedMapLevelInfo
struct FTTLSurvivalDungeonElectedMapLevelInfo
{
public:
	uint8                                        Pad_2DAF[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x60 (0x68 - 0x8)
// ScriptStruct DXM.TTLSurvivalDungeonRoomSubLevelParam
struct FTTLSurvivalDungeonRoomSubLevelParam : public FTableRowBase
{
public:
	class FString                                CheckName;                                         // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        LevelNameList;                                     // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	enum class ETTLSurvivalDungeonMapLevelType   Type;                                              // 0x28(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsFixedOpenDirection;                              // 0x29(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLSurvivalDungeonMapRoomGateType NorthGateType;                                     // 0x2A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLSurvivalDungeonMapRoomGateType EastGateType;                                      // 0x2B(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLSurvivalDungeonMapRoomGateType SouthGateType;                                     // 0x2C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLSurvivalDungeonMapRoomGateType WestGateType;                                      // 0x2D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLSurvivalDungeonMapLevelSpecialRoomType SpecialRoomType;                                   // 0x2E(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DB0[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          GroupRoomRowNameList;                              // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        RoomNumLimitMin;                                   // 0x40(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RoomNumLimitMax;                                   // 0x44(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ElectTimeMax;                                      // 0x48(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DB1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          NotCombineRoomList;                                // 0x50(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        LotteryRatio;                                      // 0x60(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DB2[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLSurvivalDungeonMapLevelInfo
struct FTTLSurvivalDungeonMapLevelInfo
{
public:
	uint8                                        TableRowIndex;                                     // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int8                                         PosX;                                              // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int8                                         PosY;                                              // 0x2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLSurvivalDungeonDirection      RotateDirection;                                   // 0x3(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DB3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class ETTLSurvivalDungeonMapRoomGateType> GateTypeList;                                      // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct DXM.TTLSurvivalDungeonSubRoadMakeInfo
struct FTTLSurvivalDungeonSubRoadMakeInfo
{
public:
	uint8                                        Pad_2DB4[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x14 (0x14 - 0x0)
// ScriptStruct DXM.TTLSurvivalDungeonCanMakeSubRoadRoomInfo
struct FTTLSurvivalDungeonCanMakeSubRoadRoomInfo
{
public:
	uint8                                        Pad_2DB5[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLSurvivalDungeonMapRoomInfo
struct FTTLSurvivalDungeonMapRoomInfo
{
public:
	uint8                                        Pad_2DB6[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x10 - 0x8)
// ScriptStruct DXM.TTLSurvivalDungeonGenerateSettingRow
struct FTTLSurvivalDungeonGenerateSettingRow : public FTableRowBase
{
public:
	class FName                                  Value;                                             // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x10 - 0x8)
// ScriptStruct DXM.TTLSystemParamRow
struct FTTLSystemParamRow : public FTableRowBase
{
public:
	class FName                                  Value;                                             // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLTalkDemoFaceParam
struct FTTLTalkDemoFaceParam
{
public:
	enum class ETTLTalkParamMode                 Mode;                                              // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DB7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Timer;                                             // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WaitTime;                                          // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsActive;                                          // 0xC(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DB8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UUserWidget*                           Widget;                                            // 0x10(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLKeyHelpParam
struct FTTLKeyHelpParam
{
public:
	enum class ETTLTalkParamMode                 Mode;                                              // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DB9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Timer;                                             // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           Widget;                                            // 0x8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLTalkMessageParam
struct FTTLTalkMessageParam
{
public:
	enum class ETTLTalkParamMode                 Mode;                                              // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DBA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Timer;                                             // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           Widget;                                            // 0x8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLNotificationAreaInfo
struct FTTLNotificationAreaInfo
{
public:
	enum class ETTLEMainMenuFacilityType         Facility;                                          // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DBB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UUserWidget*>                   NotificationList;                                  // 0x8(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct DXM.TTLNotificationChangeReservedInfo
struct FTTLNotificationChangeReservedInfo
{
public:
	uint8                                        Pad_2DBC[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct DXM.TTLHumanViewerAdditionalNPC
struct FTTLHumanViewerAdditionalNPC
{
public:
	class FString                                DisplayName;                                       // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class ATTLCharacter>           NPCAsset;                                          // 0x10(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLStageNameAndLevelPointer
struct FTTLStageNameAndLevelPointer
{
public:
	uint8                                        Pad_2DBD[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLLevelNameAndUseStage
struct FTTLLevelNameAndUseStage
{
public:
	uint8                                        Pad_2DBE[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct DXM.TTLStageNameAndReadLevel
struct FTTLStageNameAndReadLevel
{
public:
	class FString                                StageName;                                         // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               InitialPosition;                                   // 0x10(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DBF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        ReadLevel;                                         // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLFileNameAndPath
struct FTTLFileNameAndPath
{
public:
	uint8                                        Pad_2DC0[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLBaseNameAndPath
struct FTTLBaseNameAndPath
{
public:
	uint8                                        Pad_2DC1[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLActorWaitRespawn
struct FTTLActorWaitRespawn
{
public:
	class AActor*                                TargetActor;                                       // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimerRemain;                                       // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DC2[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct DXM.TTLTestSerifMainMenuElement
struct FTTLTestSerifMainMenuElement
{
public:
	uint8                                        Pad_2DC3[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLTestSerifSubMenuElement
struct FTTLTestSerifSubMenuElement
{
public:
	uint8                                        Pad_2DC4[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLTrainCargo_Container
struct FTTLTrainCargo_Container
{
public:
	class FName                                  SocketName;                                        // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                    AttachClass;                                       // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnablePushCollision;                             // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DC5[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x180 (0x180 - 0x0)
// ScriptStruct DXM.TTLThrusterContainer
struct FTTLThrusterContainer
{
public:
	uint8                                        Pad_2DC6[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           ThrusterVFX;                                       // 0x8(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           ThrusterStopVFX;                                   // 0xA0(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FVector                               Scale;                                             // 0x138(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DC7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlayback                        ThrusterVFXPlayback;                               // 0x148(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class FName>                          ThrusterSocketArray;                               // 0x160(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FTTLFxPlayback>                ThrusterPlaybackArray;                             // 0x170(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// 0xD0 (0xD0 - 0x0)
// ScriptStruct DXM.TTLTrainVFX
struct FTTLTrainVFX
{
public:
	uint8                                        Pad_2DC8[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           HoverSmokeVFX;                                     // 0x10(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        HoverSmokeVFX_Playback;                            // 0xA8(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  HoverSocketName;                                   // 0xC0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GroundCheckRayLengthPower;                         // 0xC8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GroundCheckRayLengthPowerZupOffset;                // 0xCC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct DXM.TTLTransportAirplane
struct FTTLTransportAirplane
{
public:
	class ATTLENFeryNrml01Pawn*                  Parent;                                            // 0x0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLSplinePath*                        TTLSplinePathRef;                                  // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DC9[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Velocity;                                          // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Acceleration;                                      // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxVelocity;                                       // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DCA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CurrentDeltaTime;                                  // 0x28(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DCB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       DefaultRootComponent;                              // 0x30(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                BodyMeshComponent;                                 // 0x38(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                BrokenBodyMeshComponent;                           // 0x40(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                         BoxComponent;                                      // 0x48(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLRaderTargetComponent*              RaderComponent;                                    // 0x50(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBasicStatusComponent*              StatusComponent;                                   // 0x58(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBadStatusVFXComponent*             BadStatusComponent;                                // 0x60(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xE8 (0xE8 - 0x0)
// ScriptStruct DXM.TTLTransportVFXContainer
struct FTTLTransportVFXContainer
{
public:
	struct FTTLFxParam                           VfxParam;                                          // 0x0(0x98)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        VFXPlayback;                                       // 0x98(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  AttachSocket;                                      // 0xB0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsAutoDestory;                                     // 0xB8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSettingParameter;                                // 0xB9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DCC[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  RateParametName;                                   // 0xC0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpawnRate;                                         // 0xC8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DCD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ScaleParametName;                                  // 0xD0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SpawnScale;                                        // 0xD8(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DCE[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x680 (0x680 - 0x0)
// ScriptStruct DXM.TTLUISpawnArsenalReservedInfo
struct FTTLUISpawnArsenalReservedInfo
{
public:
	uint8                                        Pad_2DCF[0x680];                                   // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x80 (0x80 - 0x0)
// ScriptStruct DXM.TTLUIPartsChangeReservedInfo
struct FTTLUIPartsChangeReservedInfo
{
public:
	uint8                                        Pad_2DD0[0x80];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLProgressParamArea
struct FTTLProgressParamArea
{
public:
	class UProgressBar*                          ProgressBarWidget;                                 // 0x0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2DD1[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xF0 (0xF0 - 0x0)
// ScriptStruct DXM.TTLPartsCompareParam
struct FTTLPartsCompareParam
{
public:
	uint8                                        Pad_2DD2[0xF0];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLParamValue
struct FTTLParamValue
{
public:
	bool                                         IsUseText;                                         // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DD3[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  Text;                                              // 0x8(0x18)(NativeAccessSpecifierPublic)
	float                                        Num;                                               // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FractionalDigits;                                  // 0x24(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct DXM.TTLPartsParamArea
struct FTTLPartsParamArea
{
public:
	class UUserWidget*                           Widget_PartsParamArea;                             // 0x0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            Widget_GradeText;                                  // 0x8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                Widget_GradeGraph;                                 // 0x10(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            Widget_TitleText;                                  // 0x18(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UUserWidget*>                   Widget_ParamList;                                  // 0x20(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UUserWidget*>                   Widget_MetaParamList;                              // 0x30(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLUIHomPartsTop00_ButtonParam
struct FTTLUIHomPartsTop00_ButtonParam
{
public:
	enum class ETTLUIButtonIconType              IconTypeA;                                         // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLUIButtonIconType              IconTypeB;                                         // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DD4[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  Text;                                              // 0x8(0x18)(NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLMissionSelect2ReproductionInfo
struct FTTLMissionSelect2ReproductionInfo
{
public:
	class FName                                  SelectedMissionID;                                 // 0x0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CategoryMainCursor;                                // 0x8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CategorySubCursor;                                 // 0xC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsOpenDock;                                        // 0x10(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DD5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          SelectedColleagueNpcIdList;                        // 0x18(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct DXM.TTLDrawLinesInfo
struct FTTLDrawLinesInfo
{
public:
	uint8                                        Pad_2DD6[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct DXM.TTLPolygonVertexInfo
struct FTTLPolygonVertexInfo
{
public:
	struct FVector4                              TexCoords;                                         // 0x0(0x10)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             MaterialTexCoords;                                 // 0x10(0x8)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             Position;                                          // 0x18(0x8)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          Color;                                             // 0x20(0x10)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PixelWidth;                                        // 0x30(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PixelHeight;                                       // 0x34(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DD7[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLHeaderKeyAssignInfo
struct FTTLHeaderKeyAssignInfo
{
public:
	uint8                                        Pad_2DD8[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x14 (0x14 - 0x0)
// ScriptStruct DXM.TTLLineChatStruct
struct FTTLLineChatStruct
{
public:
	struct FVector2D                             Pos;                                               // 0x0(0x8)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             Size;                                              // 0x8(0x8)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Disp;                                              // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsInit;                                            // 0x11(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DD9[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLLineChatListInfo
struct FTTLLineChatListInfo
{
public:
	class FName                                  ButtonName;                                        // 0x0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ButtonMsg;                                         // 0x8(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Unread;                                            // 0x18(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DDA[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x9C (0x9C - 0x0)
// ScriptStruct DXM.TTLUIChangeHumanReservedInfo
struct FTTLUIChangeHumanReservedInfo
{
public:
	uint8                                        Pad_2DDB[0x9C];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLResultPartsCorruptLogTimeLineInfo
struct FTTLResultPartsCorruptLogTimeLineInfo
{
public:
	uint8                                        Pad_2DDC[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UUserWidget*>                   WidgetListMsnResultCsr03;                          // 0x8(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLResultBattleDataGaugeProgress
struct FTTLResultBattleDataGaugeProgress
{
public:
	class UUserWidget*                           WidgetHomAsbGauge00;                               // 0x0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2DDD[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x10 - 0x8)
// ScriptStruct DXM.TTLIconTagParamRow
struct FTTLIconTagParamRow : public FTableRowBase
{
public:
	class FName                                  RichTextIconTag;                                   // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct DXM.TTLKeyInputImageParamRow
struct FTTLKeyInputImageParamRow : public FTableRowBase
{
public:
	enum class ETTLEInputType                    InputType;                                         // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DDE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ImageTag;                                          // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct DXM.TTLUIModelMeshAndPoseRow
struct FTTLUIModelMeshAndPoseRow : public FTableRowBase
{
public:
	class FName                                  SkeletalMeshPath;                                  // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MotionPath;                                        // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x68 (0x70 - 0x8)
// ScriptStruct DXM.TTLUIArsenalSettingsRow
struct FTTLUIArsenalSettingsRow : public FTableRowBase
{
public:
	uint8                                        Pad_2DDF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            ArsenalSpawnTransform;                             // 0x10(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                            ArsenalShadowPosition;                             // 0x40(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct DXM.TTLKeyInputTextTagParamRow
struct FTTLKeyInputTextTagParamRow : public FTableRowBase
{
public:
	class FString                                TagSrc;                                            // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLOptionKeyConfigKeyType        KeyConfigType;                                     // 0x18(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DE0[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x18 - 0x8)
// ScriptStruct DXM.TTLUINGWordParamRow
struct FTTLUINGWordParamRow : public FTableRowBase
{
public:
	class FString                                Word;                                              // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x10 - 0x8)
// ScriptStruct DXM.TTLUITopMenuParamRow
struct FTTLUITopMenuParamRow : public FTableRowBase
{
public:
	float                                        ButtonLeftPaddingValue;                            // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DE1[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x18 - 0x8)
// ScriptStruct DXM.TTLUICharaCustomKartePartsRow
struct FTTLUICharaCustomKartePartsRow : public FTableRowBase
{
public:
	enum class ETTLKarteChangeParts              Change_Parts;                                      // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DE2[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  Target_Data_Key;                                   // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct DXM.TTLUIOuterColorsPaletteRow
struct FTTLUIOuterColorsPaletteRow : public FTableRowBase
{
public:
	struct FLinearColor                          Palette_Color;                                     // 0x8(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Palette_Name_Key;                                  // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x80 (0x88 - 0x8)
// ScriptStruct DXM.TTLUICharaCustomVoicelRow
struct FTTLUICharaCustomVoicelRow : public FTableRowBase
{
public:
	enum class ETTLEHumanCustomPartsID           PartsID;                                           // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DE3[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  VoiceParamRowKey;                                  // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  VoiceNameKey;                                      // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Price;                                             // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DE4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SampleVoice1;                                      // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SampleVoice2;                                      // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SampleVoice3;                                      // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SampleVoice4;                                      // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SampleVoice5;                                      // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SampleVoice6;                                      // 0x50(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SampleVoice7;                                      // 0x58(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SampleVoice8;                                      // 0x60(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SampleVoice9;                                      // 0x68(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SampleVoice10;                                     // 0x70(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UseTrialMode;                                      // 0x78(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsShowBySpecificCondition;                         // 0x79(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DE5[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  DLCID;                                             // 0x80(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct DXM.TTLUICharaCustomFacialRow
struct FTTLUICharaCustomFacialRow : public FTableRowBase
{
public:
	class FName                                  FacialKey;                                         // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MaleAnimPath;                                      // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FemaleAnimPath;                                    // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct DXM.TTLUICharaCustomOuterPosPaletteRow
struct FTTLUICharaCustomOuterPosPaletteRow : public FTableRowBase
{
public:
	struct FVector                               Position;                                          // 0x8(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DE6[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x80 (0x88 - 0x8)
// ScriptStruct DXM.TTLUICharaCustomSettingRow
struct FTTLUICharaCustomSettingRow : public FTableRowBase
{
public:
	enum class ETTLEHumanCustomSettingType       Type;                                              // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanGenderType              Gender;                                            // 0x9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           SkinColor;                                         // 0xA(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           HeadParts;                                         // 0xB(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           FaceTexParts;                                      // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           BeardParts;                                        // 0xD(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           BeardColor;                                        // 0xE(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           HairParts;                                         // 0xF(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HairFlip;                                          // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           HairColor;                                         // 0x11(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           EyePartsL;                                         // 0x12(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           EyePartsR;                                         // 0x13(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           EyeColorL;                                         // 0x14(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           EyeColorR;                                         // 0x15(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           EyebrowsParts;                                     // 0x16(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           EyebrowsPosXNum;                                   // 0x17(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           EyebrowsPosYNum;                                   // 0x18(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           EyebrowsRotNum;                                    // 0x19(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           EyebrowsColor;                                     // 0x1A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           MakeupEyelineColor;                                // 0x1B(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           MakeupLipsColor;                                   // 0x1C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           SealParts;                                         // 0x1D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           SealColor;                                         // 0x1E(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         SealFlip;                                          // 0x1F(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         FaceLineOn;                                        // 0x20(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           BodyParts;                                         // 0x21(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           BodyColor1;                                        // 0x22(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           BodyColor2;                                        // 0x23(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           BodyColor3;                                        // 0x24(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           ArmLParts;                                         // 0x25(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           HandLParts;                                        // 0x26(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           ArmLColor1;                                        // 0x27(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           ArmLColor2;                                        // 0x28(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           ArmLColor3;                                        // 0x29(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           ArmRParts;                                         // 0x2A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           HandRParts;                                        // 0x2B(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           ArmRColor1;                                        // 0x2C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           ArmRColor2;                                        // 0x2D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           ArmRColor3;                                        // 0x2E(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           LegParts;                                          // 0x2F(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           LegColor1;                                         // 0x30(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           LegColor2;                                         // 0x31(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           LegColor3;                                         // 0x32(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           HeadApParts;                                       // 0x33(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           HeadApColor1;                                      // 0x34(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           HeadApColor2;                                      // 0x35(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           HeadApColor3;                                      // 0x36(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           EyeApParts;                                        // 0x37(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           EyeApColor1;                                       // 0x38(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           EyeApColor2;                                       // 0x39(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           EyeApColor3;                                       // 0x3A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           JawApParts;                                        // 0x3B(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           JawApColor1;                                       // 0x3C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           JawApColor2;                                       // 0x3D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           JawApColor3;                                       // 0x3E(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           ArmApLParts;                                       // 0x3F(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           ArmApLColor1;                                      // 0x40(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           ArmApLColor2;                                      // 0x41(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           ArmApLColor3;                                      // 0x42(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           ArmApRParts;                                       // 0x43(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           ArmApRColor1;                                      // 0x44(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           ArmApRColor2;                                      // 0x45(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           ArmApRColor3;                                      // 0x46(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           LegApLParts;                                       // 0x47(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           LegApLColor1;                                      // 0x48(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           LegApLColor2;                                      // 0x49(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           LegApLColor3;                                      // 0x4A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           LegApRParts;                                       // 0x4B(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           LegApRColor1;                                      // 0x4C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           LegApRColor2;                                      // 0x4D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           LegApRColor3;                                      // 0x4E(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           HipApParts;                                        // 0x4F(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           HipApColor1;                                       // 0x50(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           HipApColor2;                                       // 0x51(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           HipApColor3;                                       // 0x52(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           RemodelColor1;                                     // 0x53(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           RemodelColor2;                                     // 0x54(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomColorID           RemodelColor3;                                     // 0x55(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLColorPickerHSVParam               SkinColorCustom;                                   // 0x56(0x3)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLColorPickerHSVParam               HairColorCustom;                                   // 0x59(0x3)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLColorPickerHSVParam               BeardColorCustom;                                  // 0x5C(0x3)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLColorPickerHSVParam               EyeColorLRCustom;                                  // 0x5F(0x3)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLColorPickerHSVParam               EyeColorLCustom;                                   // 0x62(0x3)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLColorPickerHSVParam               EyeColorRCustom;                                   // 0x65(0x3)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLColorPickerHSVParam               EyebrowsColorCustom;                               // 0x68(0x3)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLColorPickerHSVParam               MakeupEyelineColorCustom;                          // 0x6B(0x3)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLColorPickerHSVParam               MakeupLipsColorCustom;                             // 0x6E(0x3)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLColorPickerHSVParam               SealColorCustom;                                   // 0x71(0x3)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLColorPickerHSVParam               BodyColor1Custom;                                  // 0x74(0x3)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLColorPickerHSVParam               BodyColor2Custom;                                  // 0x77(0x3)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLColorPickerHSVParam               BodyColor3Custom;                                  // 0x7A(0x3)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLColorPickerHSVParam               RemodelColor1Custom;                               // 0x7D(0x3)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLColorPickerHSVParam               RemodelColor2Custom;                               // 0x80(0x3)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLColorPickerHSVParam               RemodelColor3Custom;                               // 0x83(0x3)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DE7[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x38 - 0x8)
// ScriptStruct DXM.TTLUICharaCustomWearSettingRow
struct FTTLUICharaCustomWearSettingRow : public FTableRowBase
{
public:
	enum class ETTLEHumanCustomPartsID           PartsID;                                           // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomKind              PartsKind;                                         // 0x9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanGenderType              Gender;                                            // 0xA(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           PartsIDBody;                                       // 0xB(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           PartsIDArmL;                                       // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           PartsIDHandL;                                      // 0xD(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           PartsIDArmR;                                       // 0xE(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           PartsIDHandR;                                      // 0xF(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           PartsIDLegs;                                       // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DE8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  Parts_Name_Key;                                    // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Money;                                             // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanEditColor;                                     // 0x24(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanOverrideModel;                                 // 0x25(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DE9[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  DLCID;                                             // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomDLCSuitsType      DLCSuitsType;                                      // 0x30(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DEA[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x28 - 0x8)
// ScriptStruct DXM.TTLUICharaCustomParamRow
struct FTTLUICharaCustomParamRow : public FTableRowBase
{
public:
	enum class ETTLEHumanCustomPartsID           PartsID;                                           // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DEB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Param00;                                           // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Param01;                                           // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DEC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  Param_Name_Key;                                    // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Money;                                             // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DED[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x30 - 0x8)
// ScriptStruct DXM.TTLUICharaCustomColorsPaletteRow
struct FTTLUICharaCustomColorsPaletteRow : public FTableRowBase
{
public:
	enum class ETTLEHumanCustomColorID           ColorID;                                           // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomKind              ColorKind;                                         // 0x9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DEE[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          Palette_Color;                                     // 0xC(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DEF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  Palette_Name_Key;                                  // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Money;                                             // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DF0[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x58 (0x60 - 0x8)
// ScriptStruct DXM.TTLUICharaCustomPartsRow
struct FTTLUICharaCustomPartsRow : public FTableRowBase
{
public:
	enum class ETTLEHumanCustomPartsID           PartsID;                                           // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomKind              PartsKind;                                         // 0x9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanGenderType              Gender;                                            // 0xA(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DF1[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Parts_Path_Normal;                                 // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Parts_Path_Reverse;                                // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanPartsType               ExtraPartsType;                                    // 0x30(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomPartsID           ExtraPartsID;                                      // 0x31(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DF2[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  Parts_Name_Key;                                    // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  IconPath;                                          // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Money;                                             // 0x48(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DF3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  DLCID;                                             // 0x50(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UseTrialMode;                                      // 0x58(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DF4[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x58 (0x60 - 0x8)
// ScriptStruct DXM.TTLUIPartsCoatingTextureRow
struct FTTLUIPartsCoatingTextureRow : public FTableRowBase
{
public:
	class FString                                Texture_Path;                                      // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Name_Key;                                          // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEPaintTextureCategory         Texture_Category;                                  // 0x20(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DF5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  DLCID;                                             // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanMoveDecal;                                      // 0x30(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanChangeDecalSize;                                // 0x31(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanRotateDecal;                                    // 0x32(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanChangeDecalColor;                               // 0x33(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanChangeDecalAlpha;                               // 0x34(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsGilt;                                            // 0x35(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DF6[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          GiltColor;                                         // 0x38(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxMetalic;                                        // 0x48(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinMetalic;                                        // 0x4C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxRoughness;                                      // 0x50(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinRoughness;                                      // 0x54(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UseTrialMode;                                      // 0x58(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DF7[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x40 - 0x8)
// ScriptStruct DXM.TTLUIPaintColorsPaletteRow
struct FTTLUIPaintColorsPaletteRow : public FTableRowBase
{
public:
	struct FLinearColor                          Palette_Color;                                     // 0x8(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Palette_Name_Key;                                  // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsPlayable;                                        // 0x20(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DF8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Palette_Command;                                   // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DLCID;                                             // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct DXM.TTLUISettingParamRow
struct FTTLUISettingParamRow : public FTableRowBase
{
public:
	class FString                                Value;                                             // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x38 - 0x8)
// ScriptStruct DXM.TTLUIPreviewCameraSettingRow
struct FTTLUIPreviewCameraSettingRow : public FTableRowBase
{
public:
	float                                        MoveXMin;                                          // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveXMax;                                          // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveYMin;                                          // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveYMax;                                          // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShiftSpeed;                                        // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZoomMin;                                           // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZoomMax;                                           // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZoomSpeed;                                         // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotateMin;                                         // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotateMax;                                         // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotateSpeed;                                       // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DF9[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x48 - 0x8)
// ScriptStruct DXM.TTLUIPreviewBGRow
struct FTTLUIPreviewBGRow : public FTableRowBase
{
public:
	class FString                                BGKey;                                             // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                BGPath;                                            // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                IconPath;                                          // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEDockPreviewBGType            BGType;                                            // 0x38(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DFA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  DLCID;                                             // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x30 - 0x8)
// ScriptStruct DXM.TTLUIPreviewArsenalPoseRow
struct FTTLUIPreviewArsenalPoseRow : public FTableRowBase
{
public:
	class FString                                WaitMontageSectionalName;                          // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DLCID;                                             // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                MotionPath;                                        // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct DXM.TTLUIPreviewCameraSettingsRow
struct FTTLUIPreviewCameraSettingsRow : public FTableRowBase
{
public:
	float                                        RotateXMax;                                        // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotateYMax;                                        // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotateZMax;                                        // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DFB[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x30 - 0x8)
// ScriptStruct DXM.TTLUIModelCameraZoomSettingsRow
struct FTTLUIModelCameraZoomSettingsRow : public FTableRowBase
{
public:
	struct FVector                               GazingPoint;                                       // 0x8(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InitialZoomLength;                                 // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZoomMin;                                           // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZoomMax;                                           // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              GazingModelRotation;                               // 0x20(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        CameraRotation;                                    // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xA8 (0xB0 - 0x8)
// ScriptStruct DXM.TTLUICameraSettings2Row
struct FTTLUICameraSettings2Row : public FTableRowBase
{
public:
	uint8                                        Pad_2DFC[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            CameraTransform;                                   // 0x10(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        FOV;                                               // 0x40(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZoomSpeed;                                         // 0x44(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZoomMin;                                           // 0x48(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZoomMax;                                           // 0x4C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ZoomDirection;                                     // 0x50(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpringArmLength;                                   // 0x5C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              CameraRotation;                                    // 0x60(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DFD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  BackgroundAssetPath;                               // 0x70(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UseBlackBack;                                      // 0x78(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DFE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            BackgroundTransform;                               // 0x80(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x58 (0x60 - 0x8)
// ScriptStruct DXM.TTLUICameraSettingsRow
struct FTTLUICameraSettingsRow : public FTableRowBase
{
public:
	uint8                                        Pad_2DFF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            CameraTransform;                                   // 0x10(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               ZoomDirection;                                     // 0x40(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FOV;                                               // 0x4C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ActorInitialRotation;                              // 0x50(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E00[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct DXM.TTLUITopMenuInitData
struct FTTLUITopMenuInitData
{
public:
	class FText                                  MainButtonText;                                    // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  MainButtonHelpText;                                // 0x18(0x18)(NativeAccessSpecifierPublic)
	TArray<class FText>                          SubButtonTextArray;                                // 0x30(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<bool>                                 IsNew;                                             // 0x40(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x4 (0x4 - 0x0)
// ScriptStruct DXM.TTLWeaponWorkParametersShield
struct FTTLWeaponWorkParametersShield
{
public:
	float                                        Duarability;                                       // 0x0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLWeaponWorkParametersCloseRange
struct FTTLWeaponWorkParametersCloseRange
{
public:
	class UAnimMontage*                          RightWeaponMontage;                                // 0x0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          LeftWeaponMontage;                                 // 0x8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct DXM.TTLWeaponWorkParametersLongRange
struct FTTLWeaponWorkParametersLongRange
{
public:
	class UTTLLongRangeWeaponParameter*          WeaponParameter;                                   // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MagazineBulletRemain;                              // 0x8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BulletRemain;                                      // 0xC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x48 (0x50 - 0x8)
// ScriptStruct DXM.TTLWeaponGroupParam
struct FTTLWeaponGroupParam : public FTableRowBase
{
public:
	class FName                                  WeaponGroupID1;                                    // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GroupID1DropRate;                                  // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LineUpID1InShopAfterDevelop;                       // 0x14(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E01[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  WeaponGroupID2;                                    // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GroupID2DropRate;                                  // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LineUpID2InShopAfterDevelop;                       // 0x24(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E02[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  WeaponGroupID3;                                    // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GroupID3DropRate;                                  // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LineUpID3InShopAfterDevelop;                       // 0x34(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E03[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  WeaponGroupID4;                                    // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GroupID4DropRate;                                  // 0x40(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LineUpID4InShopAfterDevelop;                       // 0x44(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E04[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  RandomDropUnlockMission;                           // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x80 (0x1A8 - 0x128)
// ScriptStruct DXM.TTLSupportWeaponParamRow
struct FTTLSupportWeaponParamRow : public FTTLWeaponParamBaseRow
{
public:
	TSoftClassPtr<class ATTLWeaponBase>          WeaponClass;                                       // 0x128(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DescentBoostSpeed;                                 // 0x150(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DescentQuickBoostSpeed;                            // 0x154(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FirstTMPRiseOnUse;                                 // 0x158(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraControlRate;                                 // 0x15C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LaunchNumForSameTime;                              // 0x160(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LaunchNumForOneAction;                             // 0x164(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LaunchCoolTime;                                    // 0x168(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BulletSpeed;                                       // 0x16C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CoolTime;                                          // 0x170(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ApplyGravityTime;                                  // 0x174(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ApplyGravityRate;                                  // 0x178(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NormalAdditionalBullet;                            // 0x17C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BazookaAdditionalBullet;                           // 0x180(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MissileAdditionalBullet;                           // 0x184(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RailGunAdditionalBullet;                           // 0x188(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArkGunAdditionalBullet;                            // 0x18C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AcidGunAdditionalBullet;                           // 0x190(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlameThrowerAdditionalBullet;                      // 0x194(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CoolingTMPValue;                                   // 0x198(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AddFemtoValue;                                     // 0x19C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbsorptionFemtoValue;                              // 0x1A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E05[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xA8 (0x1D0 - 0x128)
// ScriptStruct DXM.TTLCloseRangeWeaponParamRow
struct FTTLCloseRangeWeaponParamRow : public FTTLWeaponParamBaseRow
{
public:
	TSoftClassPtr<class ATTLWeaponBase>          WeaponClass;                                       // 0x128(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLCloseRangeWeaponType          CloseRangeWeaponType;                              // 0x150(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E06[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TempDamage;                                        // 0x154(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HomingRange;                                       // 0x158(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StanceDuration;                                    // 0x15C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AfterFreezeTime;                                   // 0x160(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IntervalTime;                                      // 0x164(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LockOnTime;                                        // 0x168(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxDamageScale;                                    // 0x16C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMPRiseOnUsingPerSecond;                           // 0x170(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxMoveSpeed;                                      // 0x174(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AccelerationTime;                                  // 0x178(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FirstAttackMaxMoveLength;                          // 0x17C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StiffTime;                                         // 0x180(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CriticalStartDistance;                             // 0x184(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CriticalEndDistance;                               // 0x188(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CriticalBonusScale;                                // 0x18C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LowPowerDistance;                                  // 0x190(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LowPowerScale;                                     // 0x194(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ComboAttackMaxMoveLength;                          // 0x198(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ComboAttackInputTime;                              // 0x19C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ComboAttackRange;                                  // 0x1A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ComboAttackMaxNum;                                 // 0x1A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ComboTime;                                         // 0x1A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ConsumeFemto;                                      // 0x1AC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageBonusScale;                                  // 0x1B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLCloseRangeAttackMotionType    MotionType;                                        // 0x1B4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E07[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Duarability;                                       // 0x1B8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Deffence;                                          // 0x1BC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PhysicsResist;                                     // 0x1C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FemtoResist;                                       // 0x1C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShockAbsorptionRate;                               // 0x1C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KnockBackControlDirection;                         // 0x1CC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x108 (0x230 - 0x128)
// ScriptStruct DXM.TTLMissileWeaponParamRow
struct FTTLMissileWeaponParamRow : public FTTLWeaponParamBaseRow
{
public:
	TSoftClassPtr<class ATTLWeaponBase>          WeaponClass;                                       // 0x128(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HitPoint;                                          // 0x150(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InitialSpeed;                                      // 0x154(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSpeed;                                          // 0x158(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Acceleration;                                      // 0x15C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpeedRandomizer;                                   // 0x160(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxProjectileNum;                                  // 0x164(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReloadTime;                                        // 0x168(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurningRadius;                                     // 0x16C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurningDegree;                                     // 0x170(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsUseTurnDegree;                                   // 0x174(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E08[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HomingTime;                                        // 0x178(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HomingStartTime;                                   // 0x17C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DetachRagTime;                                     // 0x180(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VFXRagTime;                                        // 0x184(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnabledPreMove;                                    // 0x188(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E09[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PreTailEffect2DelaySeconds;                        // 0x18C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PreInitialSpeed;                                   // 0x190(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PreMinSpeed;                                       // 0x194(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PreAcceleration;                                   // 0x198(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PreInitialZSpeed;                                  // 0x19C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PreZAcceleration;                                  // 0x1A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PreMoveTime;                                       // 0x1A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              PreMoveEndRoll;                                    // 0x1A8(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        PreNoRotation;                                     // 0x1B4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ActiveHomingDistance;                              // 0x1B8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootInterval;                                     // 0x1BC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSameShoot;                                       // 0x1C0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E0A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LockOnMaxNum;                                      // 0x1C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LockOnTargetNum;                                   // 0x1C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SameTimeShootNum;                                  // 0x1CC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LockOnInterval;                                    // 0x1D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LockOnDistance;                                    // 0x1D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeDamage;                                     // 0x1D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeTime;                                       // 0x1DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeRadius;                                     // 0x1E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMPRiseOnExplode;                                  // 0x1E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeMinDamageScale;                             // 0x1E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxExplodeDamageRadius;                            // 0x1EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeAbnormalValue;                              // 0x1F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeKnockOut;                                   // 0x1F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeKnockBack;                                  // 0x1F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImpactPointRandValue;                              // 0x1FC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsImpactPointRandomCircumference;                  // 0x200(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E0B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ProximityFuseExplodeRagTime;                       // 0x204(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMPRiseOnAbnormalSpace;                            // 0x208(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AddValueOnAbnormalSpace;                           // 0x20C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalSpaceContinuationTime;                     // 0x210(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalSpaceRadius;                               // 0x214(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalSpaceAppearDelay;                          // 0x218(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalSpaceAppearTime;                           // 0x21C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalSpaceDisappearTime;                        // 0x220(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ConsumeFemto;                                      // 0x224(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinFemtoValue;                                     // 0x228(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E0C[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x188 (0x2B0 - 0x128)
// ScriptStruct DXM.TTLWeaponParamRow
struct FTTLWeaponParamRow : public FTTLWeaponParamBaseRow
{
public:
	TSoftClassPtr<class ATTLWeaponBase>          WeaponClass;                                       // 0x128(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MagazineSize;                                      // 0x150(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceIgnoreGravity;                             // 0x154(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BulletSpeed;                                       // 0x158(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BulletSpeedRandomizer;                             // 0x15C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinSpreadAngle;                                    // 0x160(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSpreadAngle;                                    // 0x164(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GroupingRate;                                      // 0x168(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CouldRapidFire;                                    // 0x16C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReloadTime;                                        // 0x170(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ShootRate;                                         // 0x174(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CriticalStartDistance;                             // 0x178(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CriticalEndDistance;                               // 0x17C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CriticalBonusScale;                                // 0x180(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsAutoModeWeapon;                                  // 0x184(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E0D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AutoModeCoolTime;                                  // 0x188(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StiffTime;                                         // 0x18C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ShotNum;                                           // 0x190(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShotSpreadAngle;                                   // 0x194(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CousumeFemto;                                      // 0x198(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageBonusScale;                                  // 0x19C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageBonusTime;                                   // 0x1A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LaserMaxTime;                                      // 0x1A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinFemtoValue;                                     // 0x1A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxChargeTime;                                     // 0x1AC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StayTime;                                          // 0x1B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxChargeBonusScale;                               // 0x1B4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChargeBonusScale;                                  // 0x1B8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EnergizationRange;                                 // 0x1BC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxEnergizationEnemy;                              // 0x1C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EnergizationDamageAttenuate;                       // 0x1C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalAttenuate;                                 // 0x1C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EnergizationAbnormalAttenuate;                     // 0x1CC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootPreparationTime;                              // 0x1D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NoLockOnTime;                                      // 0x1D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraControlRate;                                 // 0x1D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DeployRailGunSecondAnimTime;                       // 0x1DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DecreaseDamageRatio;                               // 0x1E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AddMinSpreadAngleRatio;                            // 0x1E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AddMaxSpreadAngleRatio;                            // 0x1E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanAttackAlly;                                     // 0x1EC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanSwallowUpAllyBullet;                            // 0x1ED(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E0E[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FirstSpeed;                                        // 0x1F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Acceleration;                                      // 0x1F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurningDegree;                                     // 0x1F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HomingStartTime;                                   // 0x1FC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExpansionTime;                                     // 0x200(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SameTimeShootNum;                                  // 0x204(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageAttenuate;                                   // 0x208(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootCoolTime;                                     // 0x20C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BulletGravityScale;                                // 0x210(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BulletSlowDownSpeedOnGravity;                      // 0x214(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChargeTime;                                        // 0x218(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeDamage;                                     // 0x21C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeTime;                                       // 0x220(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeRadius;                                     // 0x224(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMPRiseOnExplode;                                  // 0x228(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeKnockOut;                                   // 0x22C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeKnockBack;                                  // 0x230(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeMinDamageScale;                             // 0x234(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxExplodeDamageRadius;                            // 0x238(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeAbnormalValue;                              // 0x23C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ProximityFuseExplodeRagTime;                       // 0x240(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WhiteOutContinuationTime;                          // 0x244(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMPRiseOnAbnormalSpace;                            // 0x248(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AddValueOnAbnormalSpace;                           // 0x24C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalSpaceContinuationTime;                     // 0x250(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalSpaceRadius;                               // 0x254(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalSpaceAppearDelay;                          // 0x258(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalSpaceAppearTime;                           // 0x25C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalSpaceDisappearTime;                        // 0x260(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplosionNearPlayerDistance;                       // 0x264(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FirstWaitTime;                                     // 0x268(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DetonateTime;                                      // 0x26C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxLayingNum;                                      // 0x270(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlowInterval;                                      // 0x274(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlowScale;                                         // 0x278(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HealVPValue;                                       // 0x27C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HealAbnormalStatusRate;                            // 0x280(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HealPartsHPValue;                                  // 0x284(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WeakHealRate;                                      // 0x288(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WeakHealContinuationTime;                          // 0x28C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FunnelBattleRange;                                 // 0x290(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E0F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  FunnelName;                                        // 0x298(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Deffence;                                          // 0x2A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BulletDeffence;                                    // 0x2A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LaserDeffence;                                     // 0x2A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FunnelMoveSpeed;                                   // 0x2AC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x70 (0x78 - 0x8)
// ScriptStruct DXM.TTLWeaponMetaDataRow
struct FTTLWeaponMetaDataRow : public FTableRowBase
{
public:
	class FText                                  PartsName;                                         // 0x8(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FString                                WeaponTextKeyID;                                   // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLPartsType                     PartsType;                                         // 0x30(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E10[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  IconPath;                                          // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEnterpriseType                EnterpriseType;                                    // 0x40(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEWeaponCategory               WeaponCategory;                                    // 0x41(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E11[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        PurchaseAmount;                                    // 0x44(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MissionID;                                         // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanNotSell;                                        // 0x50(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E12[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SlotNum;                                           // 0x54(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ShopSlotNum;                                       // 0x58(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E13[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  DLCID;                                             // 0x60(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseCampWaitMotionType        BaseCampWaitMotionType;                            // 0x68(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E14[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  BaseCampWaitWeaponMotionPath;                      // 0x70(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x10 - 0x8)
// ScriptStruct DXM.TTLWeaponTypeParamRow
struct FTTLWeaponTypeParamRow : public FTableRowBase
{
public:
	enum class ETTLWeaponType                    WeaponType;                                        // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E15[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RecoverBulletRateOnAddToInv;                       // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct DXM.TTLWeatherFX
struct FTTLWeatherFX
{
public:
	uint8                                        Pad_2E16[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystemComponent*              PlayingVFX;                                        // 0x28(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct DXM.TTLWholeBodyBarrierLevel
struct FTTLWholeBodyBarrierLevel
{
public:
	float                                        ReadyTime;                                         // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZoomTime;                                          // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExpansionTime;                                     // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxRadius;                                         // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartTime;                                         // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct DXM.TTLWyveAIDataAssetRecord
struct FTTLWyveAIDataAssetRecord
{
public:
	int32                                        ExecuteLevel;                                      // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Time;                                              // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RecastTime;                                        // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLWyveTargetType                TargetType;                                        // 0xC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E17[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FlashTime;                                         // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Speed;                                             // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AddSpeedTime;                                      // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DecSpeedTime;                                      // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CheckDistance;                                     // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpSpeed;                                         // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CollisionRadius;                                   // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Damage;                                            // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEAbnormalStatusType           AbnormalType;                                      // 0x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E18[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AbnormalValue;                                     // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HomingRate;                                        // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HomingRate2;                                       // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeaponParameter;                                   // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AttackCount;                                       // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AttackTime;                                        // 0x4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Type;                                              // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E19[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<float>                                Value;                                             // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct DXM.TTLWyveAIDataRecordImpl
struct FTTLWyveAIDataRecordImpl
{
public:
	int32                                        ActionID;                                          // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E1A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLWyveAIDataAssetRecord>     RecordData;                                        // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct DXM.TTLWyveAICounterDataRecord
struct FTTLWyveAICounterDataRecord
{
public:
	float                                        VpRate;                                            // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Threshold;                                         // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RecastTime;                                        // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SleepTime;                                         // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StepCounter;                                       // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpCounter;                                       // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HowlCounter;                                       // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MissileCounter;                                    // 0x1C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x24 (0x24 - 0x0)
// ScriptStruct DXM.TTLWyveAIMoveDataRecord
struct FTTLWyveAIMoveDataRecord
{
public:
	float                                        Straight;                                          // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Around;                                            // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Approach;                                          // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Stay;                                              // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Leave;                                             // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Jump;                                              // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Boost;                                             // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeMin;                                           // 0x1C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeMax;                                           // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x38 - 0x8)
// ScriptStruct DXM.TTLWyveCounterAIAssetDataTable
struct FTTLWyveCounterAIAssetDataTable : public FTableRowBase
{
public:
	class FString                                Comment;                                           // 0x8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VpRate;                                            // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Threshold;                                         // 0x1C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RecastTime;                                        // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SleepTime;                                         // 0x24(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StepCounter;                                       // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpCounter;                                       // 0x2C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HowlCounter;                                       // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MissileCounter;                                    // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x40 - 0x8)
// ScriptStruct DXM.TTLWyveMoveAIAssetDataTable
struct FTTLWyveMoveAIAssetDataTable : public FTableRowBase
{
public:
	class FString                                Comment;                                           // 0x8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Level;                                             // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Straight;                                          // 0x1C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Around;                                            // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Approach;                                          // 0x24(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Stay;                                              // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Leave;                                             // 0x2C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Jump;                                              // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Boost;                                             // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeMin;                                           // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeMax;                                           // 0x3C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x80 (0x88 - 0x8)
// ScriptStruct DXM.TTLWyveAIAssetDataTable
struct FTTLWyveAIAssetDataTable : public FTableRowBase
{
public:
	int32                                        ActionID;                                          // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E1B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Comment;                                           // 0x10(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ExecuteLevel;                                      // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Type;                                              // 0x24(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Time;                                              // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RecastTime;                                        // 0x2C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLWyveTargetType                TargetType;                                        // 0x30(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E1C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FlashTime;                                         // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Speed;                                             // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AddSpeedTime;                                      // 0x3C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DecSpeedTime;                                      // 0x40(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CheckDistance;                                     // 0x44(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpSpeed;                                         // 0x48(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CollisionRadius;                                   // 0x4C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Damage;                                            // 0x50(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEAbnormalStatusType           AbnormalType;                                      // 0x54(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E1D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AbnormalValue;                                     // 0x58(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HomingRate;                                        // 0x5C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HomingRate2;                                       // 0x60(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E1E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  WeaponParameter;                                   // 0x68(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AttackCount;                                       // 0x70(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AttackTime;                                        // 0x74(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                Value;                                             // 0x78(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLWyveBigLaserHitTable
struct FTTLWyveBigLaserHitTable
{
public:
	float                                        Explosion;                                         // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Smoke;                                             // 0x4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ExplosionSize;                                     // 0x8(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SmokeSize;                                         // 0x14(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Param;                                             // 0x20(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ParamLow;                                          // 0x24(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct DXM.TTLWyveVfxData
struct FTTLWyveVfxData
{
public:
	struct FTTLFxPlayback                        PlayData;                                          // 0x0(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E1F[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x5 (0x5 - 0x0)
// ScriptStruct DXM.TTLKeyAssignInfo
struct FTTLKeyAssignInfo
{
public:
	uint8                                        Pad_2E20[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

}


