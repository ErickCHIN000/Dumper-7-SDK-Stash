#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x0 (0x88 - 0x88)
// Class DXM.EnemyParam
class UEnemyParam : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UEnemyParam* GetDefaultObj();

};

// 0x0 (0x88 - 0x88)
// Class DXM.DroneParam
class UDroneParam : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UDroneParam* GetDefaultObj();

};

// 0x0 (0x88 - 0x88)
// Class DXM.TankParam
class UTankParam : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UTankParam* GetDefaultObj();

};

// 0x0 (0x88 - 0x88)
// Class DXM.HelicopterParam
class UHelicopterParam : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UHelicopterParam* GetDefaultObj();

};

// 0x0 (0x88 - 0x88)
// Class DXM.FighterParam
class UFighterParam : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UFighterParam* GetDefaultObj();

};

// 0x0 (0x88 - 0x88)
// Class DXM.FeryParam
class UFeryParam : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UFeryParam* GetDefaultObj();

};

// 0x0 (0x88 - 0x88)
// Class DXM.CannonParam
class UCannonParam : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UCannonParam* GetDefaultObj();

};

// 0x68 (0xA0 - 0x38)
// Class DXM.OuterEmoteAnimNotify
class UOuterEmoteAnimNotify : public UAnimNotify
{
public:
	TSoftObjectPtr<class UParticleSystem>        VFXForEmote;                                       // 0x38(0x28)(Edit, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AttachSocket;                                      // 0x60(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20C[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            AttachRelativeTransform;                           // 0x70(0x30)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOuterEmoteAnimNotify* GetDefaultObj();

};

// 0x28 (0x230 - 0x208)
// Class DXM.PlayerFlagWidget
class UPlayerFlagWidget : public UUserWidget
{
public:
	class UMultiLineEditableTextBox*             CMC_InfoText;                                      // 0x208(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMultiLineEditableTextBox*             CharaCommon_InfoText;                              // 0x210(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMultiLineEditableTextBox*             AMC_InfoText;                                      // 0x218(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMultiLineEditableTextBox*             AMC_InfoText2;                                     // 0x220(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATTLCharacterCommon*                   PlayerCharaCommon;                                 // 0x228(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPlayerFlagWidget* GetDefaultObj();

	void UpdateSelf();
	void InitializeSelf();
};

// 0x10 (0x338 - 0x328)
// Class DXM.TTLPauseMenuBase
class ATTLPauseMenuBase : public AActor
{
public:
	UMulticastDelegateProperty_                  OnPauseMenuBaseExit;                               // 0x328(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ATTLPauseMenuBase* GetDefaultObj();

};

// 0xF8 (0x430 - 0x338)
// Class DXM.TLLPauseMenu
class ATLLPauseMenu : public ATTLPauseMenuBase
{
public:
	class ATTLYesNoPopUp*                        ActorYesNoPop;                                     // 0x338(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLOkPopUp*                           ActorOkPop;                                        // 0x340(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           WidgetPauseMenu;                                   // 0x348(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVerticalBox*                          Widget_MissionTopWidget;                           // 0x350(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLUITopMenuComponent*                TopMenuComponent;                                  // 0x358(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLPauseMenuComponent*                PauseMenuComponent;                                // 0x360(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLSurvivalMapUIComponent*            SurvivalMapComponent;                              // 0x368(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           Widget_BattleTopWidget;                            // 0x370(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            Widget_BattlePlayerHeadlineText;                   // 0x378(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            Widget_BattleRankingHeadlineText;                  // 0x380(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            Widget_BattleRankingNumText;                       // 0x388(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            Widget_BattlePlayerNameText;                       // 0x390(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            Widget_BattleClassNameText;                        // 0x398(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            Widget_BattlePointNumText;                         // 0x3A0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            Widget_BattleTitleText;                            // 0x3A8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                               Widget_MissionTitleTopWidget;                      // 0x3B0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_294[0x58];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ATTLOkPopUp>               OkPopupClass;                                      // 0x410(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_296[0x18];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATLLPauseMenu* GetDefaultObj();

	void ToTitleSceneBP();
	void SetIsOpenOptionMenu(bool IsOpen);
	void OpenYesNoPopBP();
	void OpenYesNoPop(class ATTLYesNoPopUp* YesNoPop);
	void OpenOptionMenuBP();
	void OpenManualUIBP();
	void OpenedOtherWindowPopup();
	void OnTopMenuOutAnimeEnd();
	void OnTopMenuInAnimeEnd();
	void OnPauseMenuInfoOutAnimeEnd();
	void OnMissionRetired();
	void OnMissionFinished(enum class ETTLEMissionResult MissionResult);
	void OnMissionEventStarted(class FName EventID);
	void OnInputRepeatAction(enum class ETTLEActionType KeyType, int32 Count);
	void OnInputAction(enum class ETTLEActionType KeyType, bool IsPressed);
	void OnDecideOkPopup();
	void OnChangeReadyToMissionComplete(enum class ETTLEReadyToMissionErrorType ErrorType, bool IsReadyToMission);
	void Initialize(class UUserWidget* Widget);
	void GetKeyMove(enum class ETTLEActionType KeyType);
	void Finalize();
	void ExitSessionRoomBP();
	void ContinueMisisonBP();
	void CloseYesNoPopUpBP();
	void ClosePauseMenu();
	void ClosedOtherWindowPopup();
};

// 0x18 (0x340 - 0x328)
// Class DXM.TTLActor
class ATTLActor : public AActor
{
public:
	float                                        LockOn_Scale;                                      // 0x328(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LockOn_HUDScale;                                   // 0x32C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B7[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLBossWeakDamageComponent*           WeakCameraShake_Component;                         // 0x338(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ATTLActor* GetDefaultObj();

	void WeakCameraShake_Set(class AActor* InDamageCauser, const struct FVector& InLocation, float InDamage, bool InIsDefeat);
	void SetEventStart(class FName EventName);
	void SetEventResumeGame(class FName EventName);
	void SetEventFinish(class FName EventName);
};

// 0x38 (0x378 - 0x340)
// Class DXM.TTL3DInteractUIObject
class ATTL3DInteractUIObject : public ATTLActor
{
public:
	class UBoxComponent*                         UICollision;                                       // 0x340(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetComponent*                      WidgetComponent;                                   // 0x348(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TextID;                                            // 0x350(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                SkeletalMeshComponent;                             // 0x358(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimationAsset*                       GateAnimationOpne;                                 // 0x360(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimationAsset*                       GateAnimationClose;                                // 0x368(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEInteractType                 ConsoleType;                                       // 0x370(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F8[0x7];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTL3DInteractUIObject* GetDefaultObj();

	void UIActorEndOverlap(class AActor* OverlapperdActor, class AActor* OtherActor);
	void UIActorBeginOverlap(class AActor* OverlapperdActor, class AActor* OtherActor);
	void SetVisibility(bool NewVisibility);
	void SetText(class FName& TextID);
	void PlayOutAnimation();
	void PlayAnimation();
	bool IsPlayingOutAnimation();
	void ChangeWidgetVisibility(bool NewVisibility);
};

// 0x2E0 (0x620 - 0x340)
// Class DXM.TTLExplosionActor
class ATTLExplosionActor : public ATTLActor
{
public:
	uint8                                        Pad_398[0x18];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLDamageParameterComponent*          DamageParameter;                                   // 0x358(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                      ExplodeCollision;                                  // 0x360(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  ExplodeMesh;                                       // 0x368(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           ExplosionFX;                                       // 0x370(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           ExplosionFX_70Common;                              // 0x408(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           ExplosionFX_100Common;                             // 0x4A0(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        ExplosionPlayBack;                                 // 0x538(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	bool                                         CanChangeLargeTypeCommonVFX;                       // 0x550(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_39B[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LifeTime_Common;                                   // 0x554(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ExplosionTMPRise;                                  // 0x558(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLExplosionSize                 StandardSize;                                      // 0x55C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_39F[0x53];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ATTLExplosionActor>        AbnormalSpaceClass;                                // 0x5B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3A0[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        TargetList;                                        // 0x5C0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        IgnoreActorList;                                   // 0x5D0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_3A4[0x14];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        VFXScale;                                          // 0x5F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         VFXScaleForce;                                     // 0x5F8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         FriendlyFireEnabled;                               // 0x5F9(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3A7[0xA];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaterialSmallValue;                                // 0x604(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaterialMiddleValue;                               // 0x608(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaterialLargeValue;                                // 0x60C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaterialIndex;                                     // 0x610(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PostProcessLimitRadius;                            // 0x614(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              MaterialInstance;                                  // 0x618(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ATTLExplosionActor* GetDefaultObj();

	void OnExplosionEnd(class AActor* DestroyedActor);
	void OnendOverLap(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnBeginOverLap(class AActor* OverlappedActor, class AActor* OtherActor);
	class AActor* CreateExplosionActor(class UObject* WorldContextObject, class UClass* ExplosionClass, enum class ETTLEStatusType Type, class AActor* ExplosionOwner, const struct FTransform& Transform, float Damage, float Radius, float Time, float TmpRise, float KnockOut, float KnockBack, float MinDamageRate, float MaxDamageRadius, bool FriendlyFireEnabled, class APawn* ExplosionInstigator, enum class ETTLEAbnormalStatusType AbnormalType, float AbnormalValue, float ExplodeAbnormalValue, float WhiteOutContinuationTime, float TMPRiseOnAbnormalSpace, float AddValueOnAbnormalSpace, float AbnormalSpaceContinuationTime, float AbnormalSpaceRadius, float AbnormalSpaceAppearDelay, float AbnormalSpaceAppearTime, float AbnormalSpaceDisappearTime, float HealVPValue, float HealAbnormalStatusRate, float HealPartsHPValue, float WeakHealContinuationTime, float WeakHealRate, enum class ETTLMissileExplosionVFXType MissileVFXType);
	void AddAbnormalStatus(class UTTLBasicStatusComponent* TargetStatus);
};

// 0xA0 (0x6C0 - 0x620)
// Class DXM.TTLFiniteExplosionActorBase
class ATTLFiniteExplosionActorBase : public ATTLExplosionActor
{
public:
	struct FTTLFxParam                           FxEndSE;                                           // 0x620(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_3D1[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLFiniteExplosionActorBase* GetDefaultObj();

};

// 0x8 (0x6C8 - 0x6C0)
// Class DXM.TTLAcidSpaceActor
class ATTLAcidSpaceActor : public ATTLFiniteExplosionActorBase
{
public:
	bool                                         IsNoScaling;                                       // 0x6C0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3F7[0x7];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLAcidSpaceActor* GetDefaultObj();

	void InitializeDynamicAcidSpaceList(class UObject* WorldContextObject);
	void FinalizeDynamicAcidSpaceList();
};

// 0x98 (0xC0 - 0x28)
// Class DXM.TTLActionVoiceManager
class UTTLActionVoiceManager : public UObject
{
public:
	uint8                                        Pad_40A[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLActionVoiceParamMap>       ActionVoiceParamMap;                               // 0x30(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FTTLActionVoicePathMap>        ActionVoicePathMap;                                // 0x40(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class UAtomComponent*                        VoiceComponent;                                    // 0x50(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class FName, class UAtomComponent*>     VoiceComponentList;                                // 0x58(0x50)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FTTLActionVoicePlayedTime>     ActionVoicePlayedTimeList;                         // 0xA8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_415[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLActionVoiceManager* GetDefaultObj();

	void SetEnableActionVoice(bool Flag);
};

// 0x0 (0x88 - 0x88)
// Class DXM.TTLActionVoiceParam
class UTTLActionVoiceParam : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UTTLActionVoiceParam* GetDefaultObj();

};

// 0x198 (0x4D8 - 0x340)
// Class DXM.TTLWeaponBase
class ATTLWeaponBase : public ATTLActor
{
public:
	uint8                                        Pad_6F4[0x20];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponent*                WeaponMesh;                                        // 0x360(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          DamageParameter;                                   // 0x368(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLWeaponType                    WeaponType;                                        // 0x370(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UnavailableFlag;                                   // 0x371(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F9[0x6];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsAttached;                                        // 0x378(0x1)(Edit, BlueprintVisible, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsChargeAttack;                                    // 0x379(0x1)(Edit, BlueprintVisible, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FC[0x6];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  WeaponID;                                          // 0x380(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeaponName;                                        // 0x388(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Range;                                             // 0x390(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ForceHideName;                                     // 0x394(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanAddOwnerSpeed;                                  // 0x395(0x1)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_701[0x2];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  AttachmentID1;                                     // 0x398(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AttachmentID2;                                     // 0x3A0(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AttachmentID3;                                     // 0x3A8(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_703[0x20];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimationAsset*                       DeployWeaponRightAnimAsset;                        // 0x3D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimationAsset*                       DeployWeaponLeftAnimAsset;                         // 0x3D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Equipment_RightAttachSocketName;                   // 0x3E0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_706[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            Equipment_RightOffset;                             // 0x3F0(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                  Equipment_LeftAttachSocketName;                    // 0x420(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_709[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            Equipment_LeftOffset;                              // 0x430(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         IsBossWeapon;                                      // 0x460(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_70E[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLMaterialInstanceDynamic           CutoffMaterialInstanceOnDestroy;                   // 0x468(0x10)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FTTLPartsCutoffParam                  CutoffParamOnDestroy;                              // 0x478(0x14)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_712[0x14];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLWeaponAddTMPObject*                AddTMPObject;                                      // 0x4A0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         TractorBeam_StealFlag;                             // 0x4A8(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_717[0x2F];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLWeaponBase* GetDefaultObj();

	void Wreck(bool IsLeft, const struct FVector& Position, const struct FRotator& Rotator);
	void StartUnFire();
	void StartStore();
	void StartReload(int32 BulletRemain);
	void StartPurge();
	void StartPick(enum class ETTLWeaponSlot WeaponSlotType);
	void StartPartsDestroyed(bool IsCompletelyDestroyed);
	void StartFalling();
	void SetWeaponDuarability(float Duarability);
	void SetUniqueIdByPartsInfo(struct FTTLAssemblePartsInfoRow& PartsInfo);
	void SetUniqueIdByInventoryItem(struct FTTLInventoryItem& InventoryItem);
	void SetUniqueId(int32 Value);
	void SetRootComponentVisible(bool Visibility, bool PropagateToChildren);
	void SetBulletRemainParameter(struct FTTLBulletRemainParameter* bulletRemainParam);
	class UParticleSystemComponent* SetAndAttachLoopEffect(class UParticleSystem* LoopEffect, class USkeletalMeshComponent* TargetMesh, class FName MuzzleSocketName);
	bool ProcessStore(float DeltaSeconds);
	bool ProcessReload(float DeltaSeconds);
	bool ProcessPurge(float DeltaSeconds);
	void PlayReloadFx(bool IsLeft);
	void OnTakeEndBP();
	void OnReloadEndBP();
	void OnPurgeEndBP();
	void OnInputStartBP();
	void OnInputStart();
	void OnInputEndBP();
	void OnInputEnd();
	bool IsUnFiring();
	bool IsUnavailable();
	bool IsTargetInScreen(const struct FVector& TargetPos);
	bool IsTaking();
	bool IsSwitchEnabled();
	bool IsSingleShootStiffWeapon();
	bool IsReloading();
	bool IsPurging();
	bool IsPunchWeapon();
	bool IsLaserWeaponSelf();
	bool IsInputStart();
	bool IsFiringWeapon();
	bool IsBrokenWeapon();
	void InitializeParameter();
	int32 GetUniqueID();
	bool GetParametersShield(struct FTTLWeaponWorkParametersShield* Parameters);
	bool GetParametersLongRange(struct FTTLWeaponWorkParametersLongRange* Parameters);
	bool GetParametersCloseRange(struct FTTLWeaponWorkParametersCloseRange* Parameters);
	struct FTransform GetMuzzleTransform();
	struct FVector GetLockOnPos();
	void GetCenterScreenLocationForWeapon(struct FVector* RetVector, float Range);
	void GetBulletRemainParameter(struct FTTLBulletRemainParameter* bulletRemainParam);
	class UAnimMontage* GetArsenalAttackMontageFromWeapon(enum class ETTLWeaponMotionType MotionType);
	void FinishStore();
	void FinishReload();
	void FinishPurge();
	void ExtraActionOnDamaged();
	void ExecuteAttack();
	void EndUnFire();
	bool CouldTake();
	bool CouldStartAttack();
	bool CouldReload();
	bool CouldPurge();
	bool CouldContinueAttack();
	bool CheckWeaponTestMode();
	void CheckShortageAttackSource();
	bool CheckBulletInfinityMode();
	void ChangeWeaponMeshFromLeftToRight();
	bool CanStartMotionPlay();
};

// 0x9D0 (0xEA8 - 0x4D8)
// Class DXM.TTLLongRangeWeapon
class ATTLLongRangeWeapon : public ATTLWeaponBase
{
public:
	class UTTLLongRangeWeaponParameter*          WeaponParameter;                                   // 0x4D8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLProjectileBase>        BulletClass;                                       // 0x4E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           MuzzleLoopEffect;                                  // 0x4E8(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UParticleSystem*                       CartridgeEffect;                                   // 0x580(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           AssultShiftVFX;                                    // 0x588(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        MuzzleLoopEffectPlayBack;                          // 0x620(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           MuzzleFxParam;                                     // 0x638(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           MuzzleFinishFxParam;                               // 0x6D0(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           ArkGunChargeEffect;                                // 0x768(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        ArkGunChargeEffectPlayback;                        // 0x800(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxLoopEffect;                                      // 0x818(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        FxLoopEffectPlayBack;                              // 0x8B0(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxMuzzleChargeMaxEffect;                           // 0x8C8(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxLoopChargeMaxEffect;                             // 0x960(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           LaserNoticeEffect;                                 // 0x9F8(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           LaserNoticeSE;                                     // 0xA90(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        LaserNoticeEffectPlayback;                         // 0xB28(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  MuzzleEffectSocketName;                            // 0xB40(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LaserNoticeSocketName;                             // 0xB48(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MuzzleSocketName;                                  // 0xB50(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxDamageReactionEffect;                            // 0xB58(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxWeaponDestroyEffect;                             // 0xBF0(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class AActor*                                IgnoredActor;                                      // 0xC88(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ATTLFemtoLaserBase*>            LaserList;                                         // 0xC90(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FVector                               LaserShootDirection;                               // 0xCA0(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_850[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLArkGunLaserBase*                   ArkGunLaser;                                       // 0xCB0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          LeftShootAnime;                                    // 0xCB8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          RightShootAnime;                                   // 0xCC0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          LeftReloadAnime_Extra;                             // 0xCC8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          RightReloadAnime_Extra;                            // 0xCD0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsGunArm;                                          // 0xCD8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_859[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SpreadAngleCorrection;                             // 0xCDC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IdleSpreadAngleCorrection;                         // 0xCE0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RunningSpreadAngleCorrection;                      // 0xCE4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        QuickBoostSpreadAngleCorrection;                   // 0xCE8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentSpreadRate;                                 // 0xCEC(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentCoolTime;                                   // 0xCF0(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentChargeTime;                                 // 0xCF4(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentChargeLaserChargeTime;                      // 0xCF8(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentDamageBonusTime;                            // 0xCFC(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentReloadTime;                                 // 0xD00(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MagazineBulletRemain;                              // 0xD04(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        BulletRemain;                                      // 0xD08(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_865[0x1];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsPressed;                                         // 0xD0D(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_868[0x2];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UForceFeedbackEffect*                  ForceFeedbackEffect;                               // 0xD10(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UForceFeedbackEffect>   ForceFeedbackReloadL;                              // 0xD18(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UForceFeedbackEffect>   ForceFeedbackReloadR;                              // 0xD40(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsDisplayParam;                                    // 0xD68(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsOverrideCoolTime;                                // 0xD69(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_871[0x2];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        OverrideCoolTime;                                  // 0xD6C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_872[0x10];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ConsumeMagazineSecond;                             // 0xD80(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_876[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BeforeShootChargeTimer;                            // 0xD88(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_878[0x14];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                OldIgnoredActor;                                   // 0xDA0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        DamageReactionEffectPlayBack;                      // 0xDA8(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_87B[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        UnFireChargeTime;                                  // 0xDC8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_87E[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLGravityGunBullet*                  GravityGunBullet;                                  // 0xDD0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_880[0x10];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          WeaponMontage;                                     // 0xDE8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimationAsset*                       StorageWeaponAnimAsset;                            // 0xDF0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_888[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ETTLEOuterFunnelState             OuterFunnelState;                                  // 0xDFC(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_88C[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StandbyWaitTime;                                   // 0xE00(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UndockTime;                                        // 0xE04(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotationTime;                                      // 0xE08(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveSpeed;                                         // 0xE0C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeToShoot;                                       // 0xE10(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_898[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class ACharacter*                            OwnerCharacter;                                    // 0xE18(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ShiftVector;                                       // 0xE20(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               UnDockLocation;                                    // 0xE2C(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LocationOffsetOpened;                              // 0xE38(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_8A0[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLOuterSubWeapon*                    SubWeapon;                                         // 0xE48(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsChargeShot;                                      // 0xE50(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanCustomDLCSuitsType      DLCSuitsType;                                      // 0xE51(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_8A6[0x6];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstanceDynamic*              WeaponMaterial;                                    // 0xE58(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WitcherStartEmissive;                              // 0xE60(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WitcherEndEmissive;                                // 0xE64(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           WitcherScaleCurve;                                 // 0xE68(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_8AD[0x1C];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        HitCountMax;                                       // 0xE8C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_8B0[0x18];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLLongRangeWeapon* GetDefaultObj();

	void UpdateWeaponTransformPrepareOpening(float DeltaSeconds);
	void UpdateWeaponTransformOpening(float DeltaSeconds);
	void UpdateWeaponTransformOpened(float DeltaSeconds);
	void UpdateWeaponTransformClosingEnd(float DeltaSeconds);
	void UpdateWeaponTransformClosing(float DeltaSeconds);
	bool UpdateOuterFunnelOpened(float DeltaSeconds);
	void UpdateOuterFunnel(float DeltaSeconds);
	void ShootBullet(class APawn* Character);
	void ReattachWeaponBP();
	void PlayFireEffect();
	bool NeedsCalcDeviationWeaponType();
	bool IsShootDirectionLinkCamera();
	float GetShootMotionRate();
	struct FVector GetLocalFinalLocation();
	void GetBaseParam(struct FTTLWeaponParamRow* Param);
	void ExecSpinShootAttack();
	void ClampCameraRotation(struct FRotator& InRotation, struct FRotator* OutRotation);
	void CalcShiftVector();
	struct FVector CalcFunnelMovePoint(float DeltaSeconds, struct FVector& TargetPos);
	void Attack(const struct FVector& TargetPos);
	void AddExtraDummyMeshInAllMeshList(class USkeletalMeshComponent* Mesh);
};

// 0x20 (0xEC8 - 0xEA8)
// Class DXM.TTLShoulderWeaponBase
class ATTLShoulderWeaponBase : public ATTLLongRangeWeapon
{
public:
	class USkeletalMeshComponent*                WeaponMesh_R;                                      // 0xEA8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          AttackMontage;                                     // 0xEB0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HasNeedChargeAttack;                               // 0xEB8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_919[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimationAsset*                       DeployWeaponAnimAsset;                             // 0xEC0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ATTLShoulderWeaponBase* GetDefaultObj();

	void StartLaunch();
	void AttackWithTargetActor(class AActor* Target, TArray<struct FTransform>* SpawnTransformList, struct FVector* OwnerVelocity, TArray<float>* SpeedRandRateList, TArray<struct FVector>* ImpactRandOffsetList);
};

// 0x270 (0x1138 - 0xEC8)
// Class DXM.TTLShoulderMissilePot
class ATTLShoulderMissilePot : public ATTLShoulderWeaponBase
{
public:
	struct FTTLFxParam                           FxMuzzle;                                          // 0xEC8(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	int32                                        MaxProjectileNum;                                  // 0xF60(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_941[0xC];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                MuzzleSocketNameBase;                              // 0xF70(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_944[0x1C];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RandomAngleThreshold;                              // 0xF9C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UseVerticalRandomAngle;                            // 0xFA0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_94A[0x10F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                MissileMeshPath;                                   // 0x10B0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_94D[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UStaticMeshComponent*>          MissileGroup;                                      // 0x10C8(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UAnimationAsset*                       DeployWeaponAnimAsset_R;                           // 0x10D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimationAsset*                       StorageWeaponAnimAsset_R;                          // 0x10E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_958[0xC];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AnimationPlayTime;                                 // 0x10F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EndAnimationRagTime;                               // 0x10F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LoopMotionPlayRate;                                // 0x10FC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FRotator>                      DisseminationPotRotator;                           // 0x1100(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        MissileOffsetDepth;                                // 0x1110(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_963[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          AttackAirMontage;                                  // 0x1118(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_964[0x18];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLShoulderMissilePot* GetDefaultObj();

	void GetMissileParam(struct FTTLMissileWeaponParamRow* Param);
};

// 0xA8 (0x11E0 - 0x1138)
// Class DXM.TTLActiveMissileLauncher
class ATTLActiveMissileLauncher : public ATTLShoulderMissilePot
{
public:
	TSubclassOf<class UUserWidget>               TargetMarkClass;                                   // 0x1138(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USoundAtomCue>          TargetMarkSE;                                      // 0x1140(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsLockOn;                                          // 0x1168(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_9C8[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLMissileLockOnTarget>       TargetList;                                        // 0x1170(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_9CB[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             UIOffsetAtCenterSocket;                            // 0x1184(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_9CC[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UUserWidget*>                   TargetMarkList;                                    // 0x1190(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_9CE[0x40];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLActiveMissileLauncher* GetDefaultObj();

	void UpdateLockOnUIPos();
	void UpdateLockOnUI(int32 Index, int32 Num);
	void UpdateLockOnList(float DeltaSeconds);
	void ProcessLockOn();
	void PlayMarkerAnimation(class UUserWidget* Marker);
	void OnDestroyedDelegate(class AActor* DestroyedActor);
	void LockOnEnd();
	void GetTargetList(TArray<class AActor*>* TargetList);
	class UTTLBasicStatusComponent* GetPlayerBasicStatusComponent();
	int32 GetCurrentLockOnNum();
	void ChangeMarkerVisibility(enum class ESlateVisibility NewVisibility);
	bool CanPlayFirstMotion();
};

// 0x8 (0xF8 - 0xF0)
// Class DXM.TTLActorComponent
class UTTLActorComponent : public UActorComponent
{
public:
	bool                                         TTLIsBegunPlay;                                    // 0xF0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_A35[0x7];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLActorComponent* GetDefaultObj();

	void TTLCanBeginPlay(bool* CanBegin);
	void TTLBeginPlay();
	void SetFreeze(bool IsFreezed);
	void PlayFxAttached(struct FTTLFxParam& FxParam, class UParticleSystemComponent** VFX, class UAtomComponent** SFX, class USceneComponent* AttachToComponent, class FName AttachPointName, struct FVector& Location, struct FRotator& Rotation);
	void PlayFxAtLocationRotation(struct FTTLFxParam& FxParam, class UParticleSystemComponent** VFX, class UAtomComponent** SFX, class AActor* OwnerActor, struct FVector& Location, struct FRotator& Rotation, struct FVector& Scale);
	void PlayFxAtLocation(struct FTTLFxParam& FxParam, class UParticleSystemComponent** VFX, class UAtomComponent** SFX, class AActor* OwnerActor, struct FTransform& Transform);
	bool IsLockOnTarget();
	bool IsLocalControlPawnOwner();
	bool AreMainObjectsValid();
};

// 0x168 (0x490 - 0x328)
// Class DXM.TTLActorGenerator
class ATTLActorGenerator : public AActor
{
public:
	uint8                                        Pad_AB2[0x20];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLGeneratorContainer>        SurfaceContainer;                                  // 0x348(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UAnimationAsset*                       OpenAnimationPtr;                                  // 0x358(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimationAsset*                       RiseAnimatinoPtr;                                  // 0x360(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ContainerAnimationSpeed;                           // 0x368(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxSpawnNumAtSameTime;                             // 0x36C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RespawnSpanTime;                                   // 0x370(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_AB5[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SpawnNum;                                          // 0x378(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsEnemy;                                           // 0x37C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_AB7[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLGeneratorActorContainerList> SpawnContaienrList;                                // 0x380(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         IsStartAuto;                                       // 0x390(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_ABB[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class AActor>>            NeedFailCatchActors;                               // 0x398(0x10)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                        Pad_ABD[0x10];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SpawnActorTime;                                    // 0x3B8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_ABE[0xC];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               CheckBoxHalfSize;                                  // 0x3C8(0xC)(Edit, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsDebugDrawCheckActor;                             // 0x3D4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsDebugDoCheckActor;                               // 0x3D5(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_AC2[0x2];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstance*                     MaterialONClass;                                   // 0x3D8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstance*                     MaterialOFFClass;                                  // 0x3E0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UTTLAdjustActiveEmissiveComponent> EmissiveComponentClass;                            // 0x3E8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_AC7[0xA0];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLActorGenerator* GetDefaultObj();

	void StopThink();
	void StartThink(float StartTime);
	void Spawn();
	void OnEventStart(class FName EventName);
	void OnEventFinish(class FName EventName, enum class ETTLEventFinishedType EventFinishedType);
	void OnEndAdjustEmissive(class AActor* Actor);
	void OnDeadSpawnActor(class AActor* DeadActor);
	void OnDeadInSpawning(class AActor* DeadActor);
};

// 0xE8 (0x5C0 - 0x4D8)
// Class DXM.TTLSupportWeaponBase
class ATTLSupportWeaponBase : public ATTLWeaponBase
{
public:
	class USkeletalMeshComponent*                WeaponMesh_R;                                      // 0x4D8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_AEB[0x1];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsEnabled;                                         // 0x4E1(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_AED[0x6];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLLongRangeWeaponParameter*          WeaponParameter;                                   // 0x4E8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BulletRemain;                                      // 0x4F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BulletMax;                                         // 0x4F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           ShootReactionFx;                                   // 0x4F8(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_AF5[0xC];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TotalDeployAnimTime;                               // 0x59C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TotalStorageAnimTime;                              // 0x5A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_AF6[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          WeaponLeftMontage;                                 // 0x5A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          WeaponRightMontage;                                // 0x5B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsReverseMontagePlay;                              // 0x5B8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_AFD[0x7];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLSupportWeaponBase* GetDefaultObj();

	void UseBulletRemain();
	void SetEnable(bool NewEnable);
	void PlayMuzzleEffect(bool IsLeft);
};

// 0x10 (0x5D0 - 0x5C0)
// Class DXM.TTLSupportOneActionWeapon
class ATTLSupportOneActionWeapon : public ATTLSupportWeaponBase
{
public:
	uint8                                        Pad_B05[0x10];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLSupportOneActionWeapon* GetDefaultObj();

};

// 0x20 (0x5F0 - 0x5D0)
// Class DXM.TTLAdditionalMagazine
class ATTLAdditionalMagazine : public ATTLSupportOneActionWeapon
{
public:
	uint8                                        Pad_B0B[0x20];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLAdditionalMagazine* GetDefaultObj();

};

// 0x20 (0x48 - 0x28)
// Class DXM.TTLMaterialContainer
class UTTLMaterialContainer : public UObject
{
public:
	class UMaterialInstanceDynamic*              DynamicalInterface;                                // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_B0F[0x18];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLMaterialContainer* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class DXM.TTLMaterialScalarContainer
class UTTLMaterialScalarContainer : public UTTLMaterialContainer
{
public:

	static class UClass* StaticClass();
	static class UTTLMaterialScalarContainer* GetDefaultObj();

};

// 0x10 (0x58 - 0x48)
// Class DXM.TTLMaterialColorRedContainer
class UTTLMaterialColorRedContainer : public UTTLMaterialContainer
{
public:
	uint8                                        Pad_B17[0x10];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLMaterialColorRedContainer* GetDefaultObj();

};

// 0xA8 (0x198 - 0xF0)
// Class DXM.TTLAdjustActiveEmissiveComponent
class UTTLAdjustActiveEmissiveComponent : public UActorComponent
{
public:
	uint8                                        Pad_B1A[0x1C];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ETTLActiveEmissiveCharacterType   CharacterType;                                     // 0x10C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_B1B[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ATTLCharacterCommon>       ArsenalClassType;                                  // 0x110(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_B1D[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UTTLMaterialContainer*>         TargetMaterialArray;                               // 0x120(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class FName                                  EmissiveParameterName;                             // 0x130(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           ActiveCurveObj;                                    // 0x138(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           DeActiveCurveObj;                                  // 0x140(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsChoiceMaterial;                                  // 0x148(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_B20[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                ChoiceMaterialIndexArray;                          // 0x150(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FTTLCurveContainer>            ActiveCurveContainerArray;                         // 0x160(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FTTLCurveContainer>            DeactiveCurveContainerArray;                       // 0x170(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_B24[0x10];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ETTLAdjustMaterialParamType       AdjustParamType;                                   // 0x190(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_B25[0x7];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAdjustActiveEmissiveComponent* GetDefaultObj();

};

// 0x340 (0x438 - 0xF8)
// Class DXM.TTLAIActionComponent
class UTTLAIActionComponent : public UTTLActorComponent
{
public:
	UMulticastDelegateProperty_                  OnActionChanged;                                   // 0xF8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnAttackActionChanged;                             // 0x108(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnHateTargetChanged;                               // 0x118(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnReactionWithParam;                               // 0x128(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class AActor*                                OwnerActor;                                        // 0x138(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBasicStatusComponent*              OwnerBasicStatus;                                  // 0x140(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLAIActionType                  SelectedAction;                                    // 0x148(0x1)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLAIActionType                  SelectedAttackAction;                              // 0x149(0x1)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_DA9[0x6];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                ActTarget;                                         // 0x150(0x8)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                LastActTarget;                                     // 0x158(0x8)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                ActAttackTarget;                                   // 0x160(0x8)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ActDistance;                                       // 0x168(0x4)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ActAngle;                                          // 0x16C(0x4)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ActHeight;                                         // 0x170(0x4)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ActDirection;                                      // 0x174(0xC)(BlueprintVisible, Net, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              ActRotation;                                       // 0x180(0xC)(BlueprintVisible, Net, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        ActDuration;                                       // 0x18C(0x4)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ActCount;                                          // 0x190(0x4)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ActPower;                                          // 0x194(0x4)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ActRatio;                                          // 0x198(0x4)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLAIMoveMode                    ActMoveType;                                       // 0x19C(0x1)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_DAC[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ActName;                                           // 0x1A0(0x8)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ActFlag;                                           // 0x1A8(0x1)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ActFlag2;                                          // 0x1A9(0x1)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLAISlot                        ActSlot;                                           // 0x1AA(0x1)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLAIState                       ActAIState;                                        // 0x1AB(0x1)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ProcessInterval;                                   // 0x1AC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LockOnDegree;                                      // 0x1B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BattleRange;                                       // 0x1B4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnabledCheckCollision;                           // 0x1B8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnabledCheckBattleRange;                         // 0x1B9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_DAF[0x2];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LostTimeLimit;                                     // 0x1BC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CombatDistance;                                    // 0x1C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HPThreshold;                                       // 0x1C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HPThresholdForProcess1;                            // 0x1C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HPThresholdForProcess2;                            // 0x1CC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HPThresholdForProcess3;                            // 0x1D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HPThresholdForProcess4;                            // 0x1D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AttackDelayTimeMin;                                // 0x1D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AttackDelayTimeMax;                                // 0x1DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GoHealAreaVPRate;                                  // 0x1E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GoAroundDegree;                                    // 0x1E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnabledCheckShootColli;                          // 0x1E8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_DB4[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ShootAimRate;                                      // 0x1EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightWeaponRange;                                  // 0x1F0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftWeaponRange;                                   // 0x1F4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShoulderWeaponRange;                               // 0x1F8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpecialWeaponRange;                                // 0x1FC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CloseRightWeaponRange;                             // 0x200(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CloseLeftWeaponRange;                              // 0x204(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_DB6[0x10];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLActionStateParam>          ActionStateParams;                                 // 0x218(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class ATTLSplinePath*                        PatrolPath;                                        // 0x228(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATriggerBase*                          ActionArea;                                        // 0x230(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        MissionTargets;                                    // 0x238(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        MissionTargetSearchRange;                          // 0x248(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_DB7[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ATargetPoint*>                  TargetPoints;                                      // 0x250(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLAIReactionSetting>         EnabledReactions;                                  // 0x260(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLAIReactionLimit>           ReactionLimits;                                    // 0x270(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        DodgeReactionRange;                                // 0x280(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetActorMinimumTime;                            // 0x284(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_DB9[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLDebugAIReactionHistoryInfo> ReactionHistory;                                   // 0x290(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLDebugAIActionHistoryInfo>  ActionHistroy;                                     // 0x2A0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        SupportTargets;                                    // 0x2B0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        SupporterActors;                                   // 0x2C0(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        SupportRate;                                       // 0x2D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_DBB[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                CurrentSupportTarget;                              // 0x2D8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       AIFlag;                                            // 0x2E0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HateInitialOffset;                                 // 0x2E4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HateImportance;                                    // 0x2E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HateDecreasePerTime;                               // 0x2EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HateDecreaseRateByAttack;                          // 0x2F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HateDPSRate;                                       // 0x2F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HateDPSDecreaseRate;                               // 0x2F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HateDPSIncreaseRate;                               // 0x2FC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HateDPSRateLimit;                                  // 0x300(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HateDiffuseDistance;                               // 0x304(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HateDiffuseValueRate;                              // 0x308(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_DBD[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                MostHateTargetLast;                                // 0x310(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HateProcessTime;                                   // 0x318(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_DBE[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLHateTarget>                HateTargets;                                       // 0x320(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLHateAdditionDistanceParam> HateAdditionDistanceParams;                        // 0x330(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        HateIgnoreActorList;                               // 0x340(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<class AActor*, struct FVector>          LastFoundLocations;                                // 0x350(0x50)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class AActor*                                LeaderActor;                                       // 0x3A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        FollowerActors;                                    // 0x3A8(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         SetLeaderPlayerOnBegin;                            // 0x3B8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_DBF[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLAIFriendParam>             AIFriendParams;                                    // 0x3C0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        ContinuousDamageCounter;                           // 0x3D0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ContinuousDamageRate;                              // 0x3D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableContinuousDamageCounter;                   // 0x3D8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_DC2[0xB];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsDummyAttackForFlash;                             // 0x3E4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_DC3[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<bool>                                 AIControllerSwitch;                                // 0x3E8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         IsSpyChara;                                        // 0x3F8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HasNoHate;                                         // 0x3F9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableAttackOnSpecialAction;                       // 0x3FA(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsReversePersonality;                              // 0x3FB(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_DC4[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLAISpecialActionComponent*          CurrentSpecialAction;                              // 0x400(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AIActionComponentTimer;                            // 0x408(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ActionContinuedTime;                               // 0x40C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_DC6[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AttackDelayTimer;                                  // 0x414(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsFirstPlayerFound;                                // 0x418(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_DC7[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                JammingDummyActor;                                 // 0x420(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_DC8[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ChaseTimer;                                        // 0x430(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_DC9[0x1];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsDisplayParameters;                               // 0x435(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_DCA[0x2];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAIActionComponent* GetDefaultObj();

	void UpdateHateTargets(float DeltaSeconds);
	void StartQuickBoost(float Seconds);
	bool StartMirage();
	void StartGetOnBP();
	bool StartGetOn();
	void StartGetOffBP();
	bool StartGetOff();
	bool StartFemtoShift(enum class ETTLAIFemtoShiftType Type);
	void StartChangeWeapon();
	void StartAttackWeaponSpecialBP(class AActor* TargetActor, bool* Result);
	bool StartAttackWeaponSpecial(class AActor* TargetActor, bool IsParallelAttack);
	void StartAttackWeaponShoulderBP(class AActor* TargetActor, bool* Result);
	bool StartAttackWeaponShoulder(class AActor* TargetActor, bool IsParallelAttack);
	bool StartAttackWeaponRightShoulder(class AActor* TargetActor, bool IsParallelAttack);
	void StartAttackWeaponRightBP(class AActor* TargetActor, bool* Result);
	bool StartAttackWeaponRight(class AActor* TargetActor, bool IsParallelAttack);
	bool StartAttackWeaponLeftShoulder(class AActor* TargetActor, bool IsParallelAttack);
	bool StartAttackWeaponLeftRight(class AActor* TargetActor, bool IsParallelAttack);
	void StartAttackWeaponLeftBP(class AActor* TargetActor, bool* Result);
	bool StartAttackWeaponLeft(class AActor* TargetActor, bool IsParallelAttack);
	bool StartAttackWeaponAll(class AActor* TargetActor, bool IsParallelAttack);
	void StartActionWaitBP(class AActor* TargetActor, float Distance, bool* Result);
	bool StartActionWait(class AActor* TargetActor, float Distance);
	void StartActionStraightMoveBP(const struct FVector& TargetDirection, bool* Result);
	bool StartActionStraightMove(const struct FVector& TargetDirection, float Time);
	void StartActionSpecialBP(class AActor* TargetActor, bool* Result);
	bool StartActionSpecial(class AActor* TargetActor);
	void StartActionPatrolTargetPointBP(class AActor* TargetActor, enum class ETTLAISlot Slot, bool* Result);
	bool StartActionPatrolTargetPoint(class AActor* TargetActor, enum class ETTLAISlot Slot);
	void StartActionPatrolDirectLocationBP(class AActor* TargetActor, const struct FVector& TargetLocation, float Distance, bool* Result);
	bool StartActionPatrolDirectLocation(class AActor* TargetActor, const struct FVector& TargetLocation, float Distance, bool IsFaceToTargetActor, bool IsForce);
	void StartActionPatrolBP(class AActor* TargetActor, bool* Result);
	void StartActionPatrolActionAreaBP(class AActor* TargetActor, bool* Result);
	bool StartActionPatrolActionArea(class AActor* TargetActor);
	bool StartActionPatrol(class AActor* TargetActor);
	bool StartActionNone();
	void StartActionKeepDistanceBP(class AActor* TargetActor, float Distance, bool* Result);
	bool StartActionKeepDistance(class AActor* TargetActor, float Distance);
	void StartActionGuardBP(class AActor* TargetActor, bool* Result);
	bool StartActionGuard(class AActor* TargetActor);
	bool StartActionGoToIncomingTargetPoint(class AActor* TargetActor);
	bool StartActionGoAroundSideWithHeight(class AActor* TargetActor, float Distance, float Angle, float Height, float HeightRange, bool UseCameraAngle);
	void StartActionGoAroundSideBP(class AActor* TargetActor, float Distance, float Degree, bool* Result);
	bool StartActionGoAroundSide(class AActor* TargetActor, float Distance, float Angle, bool UseCameraAngle);
	void StartActionFastApproachBP(class AActor* TargetActor, float Distance, bool* Result);
	bool StartActionFastApproach(class AActor* TargetActor, float Distance, bool DoGoAroundSide);
	void StartActionExchangeWeaponBP(bool IsLeft, bool* Result);
	bool StartActionExchangeWeapon(bool IsLeft);
	void StartActionEscapeBP(class AActor* TargetActor, bool* Result);
	bool StartActionEscape(class AActor* TargetActor);
	void StartActionChaseBP(class AActor* TargetActor, float Distance, bool* Result);
	bool StartActionChase(class AActor* TargetActor, float Distance, bool DoGoAroundSide);
	void StartActionChangeMoveTypeBP(enum class ETTLAIMoveMode Mode, bool* Result);
	bool StartActionChangeMoveType(enum class ETTLAIMoveMode Mode);
	void StartActionBlockAttackBP(class AActor* TargetActor, class AActor* SupportActor, float DistanceRate, bool* Result);
	bool StartActionBlockAttack(class AActor* TargetActor, class AActor* SupportActor, float DistanceRate);
	void SetWeaponRange();
	void SetBurstShootMode(bool Value, bool IsLeft);
	void SetAttackDelayTimer(bool IsParallelAttack);
	void SetAISpecialAction(class UTTLAISpecialActionComponent* SPActionComponent);
	void SetAIFlag(enum class ETTLAIFlag Flag, bool Value);
	bool SelectAction(enum class ETTLAIActionType Action, bool IsForce, bool IsParallelAttack);
	void ResetHateTargets();
	bool RequestCommunicationMessageFromNPC(enum class ETTLCommunicationTalkTerm TermIndex, int32 TermPhase);
	void RemoveFromMissionTargets(class AActor* RemoveTarget);
	void RemoveAllMissionTargets();
	void ProcessAttackedByHateTarget(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void OnTakeDown(class AActor* TargetActor);
	void OnStatusDead();
	void OnStatusBeOverridden(class UTTLBasicStatusComponent* BasicStatus, struct FTTLEnemyParam& EnemyParam);
	void OnStartTsubazeriai(class ATTLCharacterCommon* EnemyArsenal);
	void OnStartDamageReactionDelegate(enum class ETTLDamageState NextState);
	void OnQuitOverHeatImplement();
	void OnQuitOverHeat();
	void OnPointAttackedByHateTargetDelegate(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& ShotFromDirection, class UDamageType* DamageType, class AActor* DamageCauser);
	void OnOverHeatImplement();
	void OnOverHeat();
	void OnGotFlash();
	void OnGotDown();
	void OnFinishDamageReactionDelegate(enum class ETTLDamageState PrevState);
	void OnDamageFriendlyFire(class AActor* Instigator);
	void OnCalculateHP(float OldHP, float Hp, float HPMax);
	void OnAttackedByHateTargetDelegate(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void MultiRequestCommunicationMessageFromNPC(enum class ETTLCommunicationTalkTerm TermIndex, int32 TermPhase);
	bool IsWeaponConsumeFemto(enum class ETTLAIWeaponEnum Type);
	bool IsParallelAttack();
	bool IsNonParallelAttackAction();
	bool IsInPatrolPoint(class AActor* Actor, class ATargetPoint* TargetPoint, float ExtentRate);
	bool IsInActionArea(class AActor* Actor);
	bool InterruptAction(enum class ETTLAIActionType Action);
	void HateInit(class AActor* MyActor);
	bool GetWeaponType(enum class ETTLAIWeaponEnum Type, enum class ETTLWeaponType* ReturnType);
	float GetWeaponRangeMin();
	float GetWeaponRangeMax();
	float GetWeaponRange(enum class ETTLAIWeaponEnum Weapon);
	float GetWeaponCriticalRange(enum class ETTLAIWeaponEnum Weapon);
	class ATargetPoint* GetTargetPointImpl(enum class ETTLAISlot Slot);
	class ATargetPoint* GetTargetPoint(enum class ETTLAISlot Slot);
	bool GetTargetLastFoundLocation(class AActor* TargetActor, struct FVector* LastFondLocation);
	class AActor* GetNearestMissionTarget();
	class AActor* GetNearestActorByType(enum class ETTLEStatusType Type);
	float GetModifiedBattleRange(class AActor* TargetActor);
	bool GetIsPunch(enum class ETTLAIWeaponEnum Type);
	TArray<class AActor*> GetHateTargets();
	float GetEscapeDistance();
	float GetDistanceIgnoreGravity(enum class ETTLAIWeaponEnum Weapon);
	float GetCombatDistance();
	bool GetBurstShootMode(bool IsLeft);
	float GetAttackDelayTimer();
	class UTTLAISpecialActionComponent* GetAISpecialAction();
	bool GetAIFlag(enum class ETTLAIFlag Flag);
	float GetActionContinuedTime();
	bool FinishParallelAttack();
	void FinishGuardBP();
	bool FinishGuard();
	void FinishChaseBP();
	bool FinishChase();
	void FinishAttackWeaponSpecialBP();
	bool FinishAttackWeaponSpecial();
	void FinishAttackWeaponShoulderBP();
	bool FinishAttackWeaponShoulder();
	bool FinishAttackWeaponRightShoulder();
	void FinishAttackWeaponRightBP();
	bool FinishAttackWeaponRight();
	bool FinishAttackWeaponLeftShoulder();
	bool FinishAttackWeaponLeftRight();
	void FinishAttackWeaponLeftBP();
	bool FinishAttackWeaponLeft();
	bool FinishAttackWeaponAll();
	bool EndFemtoShift();
	void CopyAIActionParams(class UTTLAIActionComponent* OriginalComp, class UTTLAIActionComponent* DistComp);
	void ClearAttackDelayTimer();
	bool CheckNearGround(class AActor* CheckActor, float CheckHeight);
	void CheckMoveTypeBP(enum class ETTLAIMoveMode Mode, bool* Result);
	bool CheckMoveType(enum class ETTLAIMoveMode Mode);
	bool CheckAngleLessThan(class AActor* Actor, class AActor* CheckActor, const struct FVector& BaseDirection, float CheckAngle);
	bool CanParallelAttack();
	enum class ETTLAISlot CalcTargetPointEvaluate(enum class ETTLAIWeaponEnum CurrentWeapon);
	void AttackActionChangedBP(enum class ETTLAIActionType ActionPrev, enum class ETTLAIActionType ActionNext);
	bool AttackActionChanged(enum class ETTLAIActionType ActionPrev, enum class ETTLAIActionType ActionNext);
	void AIProcess();
	void AIInit(class AActor* MyActor);
	void AddWarningInfo(class AActor* OwnerActor, class AActor* TargetActor);
	void AddMissionTarget(class AActor* AddTarget);
	void AddHateTarget(class AActor* TargetActor, int32 CountAttacked);
	void AddHateCountAttacked(class AActor* TargetActor, int32 AddValue);
	void ActionChangedBP(enum class ETTLAIActionType ActionPrev, enum class ETTLAIActionType ActionNext);
	bool ActionChanged(enum class ETTLAIActionType ActionPrev, enum class ETTLAIActionType ActionNext);
};

// 0x28 (0x460 - 0x438)
// Class DXM.TTLAIActBaseBossOgreSwordComp
class UTTLAIActBaseBossOgreSwordComp : public UTTLAIActionComponent
{
public:
	class ATTLBaseBossOgreSwordPawn*             OwnerPawn;                                         // 0x438(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossOgreSwordAIActNo      Action_No;                                         // 0x440(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_DE5[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Action_Phase;                                      // 0x444(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_DE6[0x18];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAIActBaseBossOgreSwordComp* GetDefaultObj();

	bool Wait_Set();
	bool Wait_InAction();
	bool Useless_Set();
	bool Useless_InAction();
	bool Lost_Set(bool RandomValue);
	bool Lost_InAction();
	bool Captured_StartControl();
	void Captured_Start();
	bool Captured_End();
	bool Captured_CanAccess();
	bool Captured_Attack();
	void AIInit_Implementation(class AActor* MyActor);
};

// 0x20 (0x458 - 0x438)
// Class DXM.TTLAIActionBaseCannonComponent
class UTTLAIActionBaseCannonComponent : public UTTLAIActionComponent
{
public:
	class ATTLBaseCannonPawn*                    SelfPawn;                                          // 0x438(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLFirearmControlComponent*           SelfFirearmCtrl;                                   // 0x440(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_DE9[0x10];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAIActionBaseCannonComponent* GetDefaultObj();

	void MulticastStart_Attack_SetMotion();
	void MulticastEnd_Attack();
	bool IsExistTarget(class AActor* TargetActor);
	void AIInit_Implementation(class AActor* MyActor);
};

// 0x8 (0x460 - 0x458)
// Class DXM.TTLAIActBaseENBossSnakCannonComp
class UTTLAIActBaseENBossSnakCannonComp : public UTTLAIActionBaseCannonComponent
{
public:
	uint8                                        Pad_DEA[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAIActBaseENBossSnakCannonComp* GetDefaultObj();

	void Process_Attack();
};

// 0x148 (0x580 - 0x438)
// Class DXM.TTLAIActBaseHelicopterComponent
class UTTLAIActBaseHelicopterComponent : public UTTLAIActionComponent
{
public:
	class ATTLBaseHelicopterPawn*                SelfPawn;                                          // 0x438(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseHelicopterPawn*                LeaderPawn;                                        // 0x440(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCapsuleComponent*                     SelfCapsule;                                       // 0x448(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATargetPoint*                          Action_TargetPoint;                                // 0x450(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ATTLWarningArea*>               Action_WarningAreaList;                            // 0x458(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	enum class ETTLBaseHeliType                  Action_Type;                                       // 0x468(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Flags_IsDamaged;                                   // 0x469(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Flags_IsSearchEnemyRangeIntrusion;                 // 0x46A(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Flags_IsActivate;                                  // 0x46B(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_E0A[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        SupportActors;                                     // 0x470(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_E0B[0x100];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAIActBaseHelicopterComponent* GetDefaultObj();

	void Multicast_SetDamageAction(enum class ETTLBaseHeliDamageReact Type, const struct FVector& Direction);
	bool Knockback_Process(float DeltaSeconds);
	bool Down_Process(float DeltaSeconds);
	bool Death_Process(float DeltaSeconds);
	bool DamageAction_Process(float DeltaSeconds);
	bool DamageAction_InAction();
	class AActor* CheckSupportActor();
	void BaseHelicopter_Wait();
	bool BaseHelicopter_StopProcess();
	void BaseHelicopter_Special();
	void BaseHelicopter_PatrolTargetPoint();
	void BaseHelicopter_PatrolActionArea();
	void BaseHelicopter_Patrol();
	void BaseHelicopter_None();
	bool BaseHelicopter_MoveToLocationRange(const struct FVector& TargetLocation, float Range, float TargetRot);
	bool BaseHelicopter_MoveToActorRange(class AActor* Target, float Range, int32 IsWay);
	void BaseHelicopter_KeepDistance();
	void BaseHelicopter_GoAroundSide();
	void BaseHelicopter_Escape();
	void BaseHelicopter_Chase();
	void BaseHelicopter_Attack();
};

// 0xA0 (0x4D8 - 0x438)
// Class DXM.TTLAIActENBossTrtsLaser01Comp
class UTTLAIActENBossTrtsLaser01Comp : public UTTLAIActionComponent
{
public:
	uint8                                        Pad_E22[0x60];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLENBossTrtsLaser01Pawn*             SelfPawn;                                          // 0x498(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_E23[0x38];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAIActENBossTrtsLaser01Comp* GetDefaultObj();

	bool PlayerUse_StartControl();
	void PlayerUse_Start(float SpeedRate);
	bool PlayerUse_Shoot();
	bool PlayerUse_SetCaptureSpeedRate(float SpeedRate);
	bool PlayerUse_Hit();
	bool PlayerUse_End();
	bool Idle_Start();
	bool Idle_IsAction();
	bool DropOut_Start(const struct FVector& Point, float YawBias);
	void DropOut_Landing();
	bool DropOut_IsAction();
	bool DropOut_FindPoint(struct FVector* OutPoint, float* OutYawBias);
	bool DropOut_End();
	void AIInit_Implementation(class AActor* MyActor);
};

// 0x38 (0x470 - 0x438)
// Class DXM.TTLAIActENBossTrtsMissile01Comp
class UTTLAIActENBossTrtsMissile01Comp : public UTTLAIActionComponent
{
public:
	class ATTLENBossTrtsMissile01Pawn*           SelfPawn;                                          // 0x438(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_E31[0x30];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAIActENBossTrtsMissile01Comp* GetDefaultObj();

	bool ShootMissile_Start();
	void ShootMissile_Process(float DeltaSeconds);
	bool ShootMissile_InAction();
	void ShootMissile_Cancel();
	bool Idle_Start();
	bool Idle_IsAction();
	bool Dead_Start();
	bool Dead_Set();
	bool Dead_IsAction();
	void AIInit_Implementation(class AActor* MyActor);
};

// 0x18 (0x450 - 0x438)
// Class DXM.TTLAIActionBaseTankComponent
class UTTLAIActionBaseTankComponent : public UTTLAIActionComponent
{
public:
	class ATTLBaseTankCharacter*                 SelfCharacter;                                     // 0x438(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLFirearmControlComponent*           SelfFirearmCtrl;                                   // 0x440(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_E33[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAIActionBaseTankComponent* GetDefaultObj();

};

// 0x0 (0x450 - 0x450)
// Class DXM.TTLAIActionStrongTankComponent
class UTTLAIActionStrongTankComponent : public UTTLAIActionBaseTankComponent
{
public:

	static class UClass* StaticClass();
	static class UTTLAIActionStrongTankComponent* GetDefaultObj();

};

// 0x18 (0x468 - 0x450)
// Class DXM.TTLAIActionArkTankComponent
class UTTLAIActionArkTankComponent : public UTTLAIActionStrongTankComponent
{
public:
	class ATTLArkTankPawn*                       SelfArkTankPawn;                                   // 0x450(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WeaponSpeed;                                       // 0x458(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_E42[0xC];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAIActionArkTankComponent* GetDefaultObj();

	bool IsLineTraceHitRight(class AActor* TargetActor);
	bool IsLineTraceHitLeft(class AActor* TargetActor);
	void ArkTankAction_StartAttackCenter(class AActor* TargetActor);
	void ArkTankAction_StartAttackBothSide(class AActor* TargetActor);
	void ArkTankAction_EndAttackCenter();
	void ArkTankAction_EndAttackBothSide();
	void ArkTankAction_AttackCenter();
	void ArkTankAction_AttackBothSide();
};

// 0x20 (0x470 - 0x450)
// Class DXM.TTLAIActionArmorTankComponent
class UTTLAIActionArmorTankComponent : public UTTLAIActionBaseTankComponent
{
public:
	TArray<class ATargetPoint*>                  EscapePoints;                                      // 0x450(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	enum class ETTLArmorTankType                 ProcessType;                                       // 0x460(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_E4B[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLArmorTankCharacter*                SelfArmorTankCharacter;                            // 0x468(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTTLAIActionArmorTankComponent* GetDefaultObj();

	bool IsLockonFromTarget(class AActor* TargetActor);
	enum class ETTLAISlot FindTargetPointSlot();
};

// 0x8 (0x478 - 0x470)
// Class DXM.TTLAIActionArmorJammerComponent
class UTTLAIActionArmorJammerComponent : public UTTLAIActionArmorTankComponent
{
public:
	uint8                                        Pad_E5C[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAIActionArmorJammerComponent* GetDefaultObj();

};

// 0x188 (0x5C0 - 0x438)
// Class DXM.TTLAIActionArsenalComponent
class UTTLAIActionArsenalComponent : public UTTLAIActionComponent
{
public:
	bool                                         UseWingShiftAtMove;                                // 0x438(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         UseAssultShiftAtAttack;                            // 0x439(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsNearGround;                                      // 0x43A(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_EA0[0x1];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BoostChangedTime;                                  // 0x43C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        QuickBoostTime;                                    // 0x440(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_EA1[0x2];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         UseSpecialWait;                                    // 0x446(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_EA2[0x1];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NowTsubazeriaiScore;                               // 0x448(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxTsubazeriaiScore;                               // 0x44C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinTsubazeriaiScore;                               // 0x450(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotationRate;                                      // 0x454(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLArsenalBurstShootInfo             BurstShootInfoLeft;                                // 0x458(0x14)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLArsenalBurstShootInfo             BurstShootInfoRight;                               // 0x46C(0x14)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLArsenalBurstShootInfo             BurstShootInfoShoulder;                            // 0x480(0x14)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	float                                        CollisionAvoidJudgeHeight;                         // 0x494(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SniperShootRangeLimit;                             // 0x498(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLAIHeightThreshold             HeightThresholdType;                               // 0x49C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_EA3[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HeightThreshold;                                   // 0x4A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MirageCoolTime;                                    // 0x4A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CanStartMirageFemtoRate;                           // 0x4A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_EA4[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AController>               IncomingAIController;                              // 0x4B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AController>               SurrenderAIController;                             // 0x4B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AController>               EscapeAIController;                                // 0x4C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATargetPoint*                          IncomingTargetPoint;                               // 0x4C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IncomingStartDistance;                             // 0x4D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IncomingStopDistance;                              // 0x4D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VPDownMessageRate_Medium;                          // 0x4D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VPDownMessageRate_Large;                           // 0x4DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ImportantOuter1;                                   // 0x4E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ImportantOuter2;                                   // 0x4E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ImportantOuter3;                                   // 0x4F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IdleTalkTime;                                      // 0x4F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UseNewMethodAvoidCollision;                        // 0x4FC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsShowAvoidCollisionDebugInfo;                     // 0x4FD(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_EAB[0x2];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AvoidCollisionRate;                                // 0x500(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AvoidCollisionRayLength;                           // 0x504(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_EAD[0x60];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AvoidSoftCollisionRate;                            // 0x568(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UTTLArsenalMovementComponent> ArsenalMovementPtr;                                // 0x56C(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsAttackR;                                         // 0x574(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsAttackL;                                         // 0x575(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_EAE[0x6];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CollisionCheckInterval;                            // 0x57C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_EAF[0x34];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        UseRoutePathTime;                                  // 0x5B4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_EB0[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAIActionArsenalComponent* GetDefaultObj();

	void SwitchFlyingCpp(class UTTLArsenalMovementComponent* ArsenalMovement);
	bool StartMirageBP();
	void SetQuickBoostCpp(enum class ETTLAIActionType NextAction);
	void RequestMessageMessageImportantFriendDestroyed(class ATTLCharacterCommon* TargetCharacter);
	void ProcessMirageIntervalTimer(float DeltaTime);
	void ProcessBoostCpp(float DeltaTime);
	bool ProcessAITsubazeriai(class UTTLArsenalMovementComponent* ArsenalMovement);
	void LookAtTargetCpp();
	void LookActorWhileMovingCpp(class AActor* LookTarget);
	bool IsDestroyedParts(enum class ETTLPartsType PartsType);
	bool GetTryAvoidJump();
	float GetRoutePathTime();
	struct FRotator GetLookAtLerpRotator(class AActor* LookTarget, bool RotatePitch);
	struct FVector GetCollisionAvoidVector();
	int32 GetBulletRemain(enum class ETTLAIWeaponPart WeaponPart);
	bool DoSelectedAttackAction(float DeltaTime);
	bool DoSelectedAction(float DeltaTime);
	void DoActionWait();
	void DoActionStraightMove();
	void DoActionSpecial(float DeltaTime);
	void DoActionPatrolTargetPoint();
	void DoActionPatrolTargetLocation();
	void DoActionPatrolActionArea();
	void DoActionPatrol();
	void DoActionNone();
	void DoActionKeepDistance();
	bool DoActionGuard();
	void DoActionGoAroundSide();
	void DoActionChase();
	void DoActionChangeMoveType();
	void DoActionBlockAttack();
	bool DoActionAttackWeaponSpecial();
	bool DoActionAttackWeaponShoulder();
	bool DoActionAttackWeaponRight();
	bool DoActionAttackWeaponLeftRight();
	bool DoActionAttackWeaponLeft();
	bool DoActionAttackWeaponAll();
	bool CheckTMPEnableQuickBoost();
	void CheckGroundWhileFlying();
	bool CanStartMirage();
	struct FVector CalcMovementInputForPatrolTargetPoint();
	struct FVector CalcMovementInputForPatrolActionArea(class UShapeComponent* CollisionComponent);
	struct FVector CalcMovementInputForPatrol(class ATTLSplinePath* SplinePath);
	struct FVector CalcMovementInputForKeepDistance(class AActor* TargetActor);
	struct FVector CalcMovementInputForGuard(class AActor* TargetActor);
	struct FVector CalcMovementInputForGoAroundSide();
	struct FVector CalcMovementInputForDirectLocation(const struct FVector& TargetLocation);
	struct FVector CalcMovementInputForChase(class AActor* TargetActor);
	void AddMovementInputCpp(const struct FVector& InputDirection, float Scale, bool FaceToTarget, bool FaceToAttackTarget);
};

// 0x58 (0x4B0 - 0x458)
// Class DXM.TTLAIActionBaseBossBallCanoComp
class UTTLAIActionBaseBossBallCanoComp : public UTTLAIActionBaseCannonComponent
{
public:
	enum class ETTLBossBallTurretShape           TurretShape;                                       // 0x458(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DebugDrawCannonTargetDirection;                    // 0x459(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCallEndFireAfter;                                 // 0x45A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_EB2[0x4D];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstanceDynamic*              DynamicMaterialBody;                               // 0x4A8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLAIActionBaseBossBallCanoComp* GetDefaultObj();

	void AddIgnoreTargetOnShoot(TArray<class AActor*>* OutIgnoreActor);
};

// 0x50 (0x488 - 0x438)
// Class DXM.TTLAIActionBaseBossBallComponent
class UTTLAIActionBaseBossBallComponent : public UTTLAIActionComponent
{
public:
	class AActor*                                TargetActor;                                       // 0x438(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseBossBallPawn*                  OwnerPawn;                                         // 0x440(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseBossBallAIController*          OwnerAICtrl;                                       // 0x448(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossBallAIActNo           ActionNo;                                          // 0x450(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_EB6[0x37];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAIActionBaseBossBallComponent* GetDefaultObj();

	void AIInit_Implementation(class AActor* MyActor);
};

// 0x1A0 (0x5D8 - 0x438)
// Class DXM.TTLAIActionBaseBossFishComponent
class UTTLAIActionBaseBossFishComponent : public UTTLAIActionComponent
{
public:
	float                                        MoveDistance;                                      // 0x438(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChaseDistance;                                     // 0x43C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InGroundTime;                                      // 0x440(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_F23[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             RushAngleRange;                                    // 0x448(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             RushDistanceRange;                                 // 0x450(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RushOutCheckCollisionSafeRate;                     // 0x458(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         RushOutDraw;                                       // 0x45C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_F24[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class ETTLBaseBossFishMissileSocketID> MissileSockets;                                    // 0x460(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        MissileInterval;                                   // 0x470(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MissileWaitTime;                                   // 0x474(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MissileCloseTime;                                  // 0x478(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MissileEnd;                                        // 0x47C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnMinDegree;                                     // 0x480(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OotGroundSignTime;                                 // 0x484(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OotGroundSignInteval;                              // 0x488(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsPlayGroundSign;                                  // 0x48C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_F28[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WaitGroundSignStartTime;                           // 0x490(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BigLaserShootTime;                                 // 0x494(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BigLaserRange;                                     // 0x498(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotationPostureInterval;                           // 0x4A4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotationDistance;                                  // 0x4A8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotationAttackTimeMax;                             // 0x4AC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             CannonAngle;                                       // 0x4B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageTime;                                        // 0x4B8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageReactionValue;                               // 0x4BC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTTLMultiLaserPath>            MultiLaserPaths;                                   // 0x4C0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        MultiLaserHeight;                                  // 0x4D0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RushRange;                                         // 0x4D4(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RushCountMin;                                      // 0x4E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RushCountMax;                                      // 0x4E4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AngryTime;                                         // 0x4E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EvacucateOverTime;                                 // 0x4EC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ATargetPoint*>                  EvacucateUnderPoints;                              // 0x4F0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class ATargetPoint*>                  JumpOutPoints;                                     // 0x500(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         JumpOutDraw;                                       // 0x510(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_F2A[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PatrolTimeOut;                                     // 0x514(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PatrolTimeOutEscape;                               // 0x518(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChaseTimeOut;                                      // 0x51C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AreaOutTimerMax;                                   // 0x520(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_F2C[0xB4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAIActionBaseBossFishComponent* GetDefaultObj();

	bool StopActionCannon();
	bool StartActionTurn(struct FVector& LookAt);
	bool StartActionSpring(class AActor* TargetActor);
	bool StartActionSpawnDrone();
	bool StartActionRushRand(class AActor* TargetAcotr);
	bool StartActionRush(class AActor* TargetAcotr, int32 TurnCount, bool IsDive);
	bool StartActionRotation();
	bool StartActionOutGround(class AActor* TargetActor);
	bool StartActionMultiLaser(int32 PathSeed);
	bool StartActionMissile(class AActor* TargetActor, bool IsParallelAttack);
	bool StartActionInGround();
	bool StartActionGroundSign(class AActor* TargetActor, int32 SocketNo);
	bool StartActionEvacucateUnder();
	bool StartActionEvacucateOver();
	bool StartActionDead();
	bool StartActionDamage(bool IsStartInGround, struct FVector& StartLocation);
	bool StartActionCannon(class AActor* TargetActor);
	bool StartActionBigLaser(class AActor* TargetActor);
	bool StartActionAngry();
	bool StartActionAcid(class AActor* TargetActor);
	bool StartAction(int32 ActionNo, int32 ExecuteLevel, class AActor* TargetActor);
	void MulticastStartTriggerActionDamage(bool IsStartInGround, const struct FVector& StartLocation);
	void MulticastStartTriggerAction(enum class ETTLBaseBossFishTriggerActionType Type);
	void MulticastStartActionSpring(class AActor* TargetActor, struct FVector& Location, struct FVector& VfxLocation, struct FVector& Direction, uint8 AfterType);
	void MulticastStartActionRush(class AActor* TargetActor, int8 TurnCount, bool IsDive);
	void MulticastStartActionOutGround(struct FVector& Location, class AActor* TargetActor);
	void MulticastStartActionGroundSign(class AActor* TargetActor, struct FVector& Location, struct FVector& VfxLocation, uint8 Type, int32 SocketNo);
	void MulticastStartActionAcid(class AActor* TargetActor, int8 TableNo, int8 bombRand);
	void MulticastStartAction(uint8 ActionNo, int32 ExecuteLevel, class AActor* TargetActor);
	bool IsInGround();
	enum class ETTLBaseBossFishAIActNo GetCurrentActionNo();
	bool CheckInGroundTime();
	bool CheckActionTurn(struct FVector& LookAt);
	bool CheckActionSpring(class AActor* TargetActor);
	bool CheckActionSpawnDrone();
	bool CheckActionRush(class AActor* TargetAcotr);
	bool CheckActionRotation(class AActor* TargetActor);
	bool CheckActionOutGround(bool IsInGroundAttack);
	bool CheckActionMultiLaser(class AActor* TargetActor);
	bool CheckActionMissile(class AActor* TargetActor, bool IsParallelAttack);
	bool CheckActionInGround();
	bool CheckActionGroundSign();
	bool CheckActionEvacucateUnder();
	bool CheckActionEvacucateOver();
	bool CheckActionDead();
	bool CheckActionDamage();
	bool CheckActionCannon(class AActor* TargetActor);
	bool CheckActionBigLaser(class AActor* TargetActor);
	bool CheckActionAcid(class AActor* TargetActor, bool IsContinue);
};

// 0x1C0 (0x5F8 - 0x438)
// Class DXM.TTLAIActionBaseBossLastComponent
class UTTLAIActionBaseBossLastComponent : public UTTLAIActionComponent
{
public:
	class ATTLBaseBossLastPawn*                  OwnerPawn;                                         // 0x438(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseBossLastAIController*          OwnerAICtrl;                                       // 0x440(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossLastAIActSet          ActionSet_No;                                      // 0x448(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_F96[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ActionSet_Phase;                                   // 0x44C(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossLastAIActNo           ActionNo;                                          // 0x450(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_F97[0x1A7];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAIActionBaseBossLastComponent* GetDefaultObj();

	bool Wait_Set();
	bool Wait_InAction();
	bool TractorBeam_Set(int32 Level);
	bool TractorBeam_InAction();
	bool Rush_Set(int32 Level);
	bool Rush_InAction();
	void Multicast_AI_SetInfoValie(int32 Phase, int32 Value00_0, int32 Value00_1, int32 Value01_0, int32 Value01_1, int32 Value02_0, int32 Value02_1, int32 Value03_0, int32 Value03_1, int32 Value04_0, int32 Value04_1, int32 Value05_0, int32 Value05_1, int32 Value06_0, int32 Value06_1, int32 Value07_0, int32 Value07_1);
	void Multicast_ActionSet_Wait_Set(float WaitTime, int32 RandomValue);
	void Multicast_ActionSet_TractorBeam_Set(int32 MoveLevel, float WaitTime, int32 TractorBeamLevel, float AfterFixTime, int32 RandomValue, int32 AICtrlPhase, int32 AICtrlActionIndex);
	void Multicast_ActionSet_Stun_Set(int32 RandomValue);
	void Multicast_ActionSet_SmallDamage_Set(float DamageFixTime, float AfterFixTime, int32 RandomValue);
	void Multicast_ActionSet_Rush_Set(int32 MoveLevel, float WaitTime, int32 RushLevel, float AfterFixTime, int32 RandomValue, int32 AICtrlPhase, int32 AICtrlActionIndex);
	void Multicast_ActionSet_Move_Set(int32 MoveLevel, float WraparoundRate, float IntervalTime, float TotalTime, float AfterFixTime, int32 BodyShootLevel, enum class ETTLBaseBossLastFnelAIAct FunnelAction, int32 FunnelShootLevel, int32 FunnelNum, int32 RandomValue, int32 AICtrlPhase, int32 AICtrlActionIndex);
	void Multicast_ActionSet_EmergencyMove_Set(int32 MoveLevel, int32 BodyShootLevel, enum class ETTLBaseBossLastFnelAIAct FunnelAction, int32 FunnelShootLevel, int32 FunnelNum, int32 RandomValue, int32 AICtrlPhase, int32 AICtrlActionIndex);
	void Multicast_ActionSet_Death_Set(class AActor* DamageCasuer, int32 RandomValue);
	void Multicast_ActionSet_DawnHammer_Set(int32 MoveLevel, float WaitTime, int32 DawnHammerLevel, float AfterFixTime, int32 RandomValue, int32 AICtrlPhase, int32 AICtrlActionIndex);
	void Multicast_ActionSet_BigDamageToAnger_Set(float DamageFixTime, float IntervalTime, float AfterFixTime, int32 RandomValue);
	void Multicast_ActionSet_BigDamage_Set(float DamageFixTime, float AfterFixTime, int32 RandomValue);
	bool Move_Set(int32 Level, float WraparoundYaw);
	bool Move_InAction();
	bool Funnel_SetAction(enum class ETTLBaseBossLastFnelAIAct ActNo, int32 ShootLevel, int32 Num, int32 RandomValue);
	bool DawnHammer_Set(int32 Level);
	bool DawnHammer_InAction();
	bool Damage_Set(enum class ETTLBaseBossLastAIDamage Damage, float FixTime, const struct FVector& Velocity, int32 Progress);
	bool Damage_InAction();
	bool BodyShoot_Set(int32 Level);
	bool BodyShoot_InAction();
	bool Anger_Set();
	bool Anger_InAction();
	void AIInit_Implementation(class AActor* MyActor);
	bool ActionSet_Wait_Set(float WaitTime, bool IsForce);
	bool ActionSet_TractorBeam_Set(int32 MoveLevel, float WaitTime, int32 TractorBeamLevel, float AfterFixTime, int32 AICtrlPhase, int32 AICtrlActionIndex);
	bool ActionSet_TractorBeam_Check(int32 MoveLevel, int32 TractorBeamLevel);
	bool ActionSet_Stun_Set();
	bool ActionSet_SmallDamage_Set(float DamageFixTime, float AfterFixTime);
	bool ActionSet_Rush_Set(int32 MoveLevel, float WaitTime, int32 RushLevel, float AfterFixTime, int32 AICtrlPhase, int32 AICtrlActionIndex);
	bool ActionSet_Rush_Check(int32 MoveLevel, int32 RushLevel);
	bool ActionSet_Move_Set(int32 MoveLevel, float WraparoundRate, float IntervalTime, float TotalTime, float AfterFixTime, int32 BodyShootLevel, enum class ETTLBaseBossLastFnelAIAct FunnelAction, int32 FunnelShootLevel, int32 FunnelNum, int32 AICtrlPhase, int32 AICtrlActionIndex);
	bool ActionSet_Move_Check(int32 MoveLevel, int32 BodyShootLevel, enum class ETTLBaseBossLastFnelAIAct FunnelAction, int32 FunnelShootLevel);
	bool ActionSet_EmergencyMove_Set(int32 MoveLevel, int32 BodyShootLevel, enum class ETTLBaseBossLastFnelAIAct FunnelAction, int32 FunnelShootLevel, int32 FunnelNum, int32 AICtrlPhase, int32 AICtrlActionIndex);
	bool ActionSet_EmergencyMove_Check(int32 MoveLevel, int32 BodyShootLevel, enum class ETTLBaseBossLastFnelAIAct FunnelAction, int32 FunnelShootLevel);
	bool ActionSet_Death_Set(class AActor* DamageCauser);
	bool ActionSet_DawnHammer_Set(int32 MoveLevel, float WaitTime, int32 DawnHammerLevel, float AfterFixTime, int32 AICtrlPhase, int32 AICtrlActionIndex);
	bool ActionSet_DawnHammer_Check(int32 MoveLevel, int32 DawnHammerLevel);
	bool ActionSet_BigDamageToAnger_Set(float DamageFixTime, float IntervalTime, float AfterFixTime);
	bool ActionSet_BigDamage_Set(float DamageFixTime, float AfterFixTime);
};

// 0x28 (0x460 - 0x438)
// Class DXM.TTLAIActionBaseBossLastFnelComp
class UTTLAIActionBaseBossLastFnelComp : public UTTLAIActionComponent
{
public:
	class ATTLBaseBossLastFnelPawn*              OwnerPawn;                                         // 0x438(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossLastFnelAIAct         ActionNo;                                          // 0x440(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_FA4[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ActionPhase;                                       // 0x444(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossLastFnelAIAct         RequestActionNo;                                   // 0x448(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_FA5[0x17];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAIActionBaseBossLastFnelComp* GetDefaultObj();

	bool FollowTargetShoot_Set(bool IsMulticast);
	bool FollowTargetShoot_InAction();
	bool FollowOwnerShoot_Set(bool IsMulticast);
	bool FollowOwnerShoot_InAction();
	bool FollowAttachShoot_Set(bool IsMulticast);
	bool FollowAttachShoot_InAction();
	bool DawnHammer_Set(int32 Level, int32 No, bool IsForce);
	bool DawnHammer_InAction();
	bool Damage_Set();
	bool Damage_InAction();
	bool AttachWait_Set(bool IsForce);
	bool AttachWait_IsAttached();
	bool AttachWait_InAction();
	void AIInit_Implementation(class AActor* MyActor);
};

// 0x20 (0x458 - 0x438)
// Class DXM.TTLAIActionBaseBossOgreComponent
class UTTLAIActionBaseBossOgreComponent : public UTTLAIActionComponent
{
public:
	class ATTLBaseBossOgreCharacter*             OwnerBoss;                                         // 0x438(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                TargetActor;                                       // 0x440(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossOgreAIActNo           ActionNo;                                          // 0x448(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1057[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAIActionBaseBossOgreComponent* GetDefaultObj();

	bool Walk_Set(const struct FVector& BossLoc, const struct FRotator& BossRot, bool IsDisableDamage, bool IsDisableDeath, float AnimSpeed, int32 Level, class AActor* TargetAct, float Distance, bool IsSaveList);
	bool Walk_InAction();
	enum class ETTLBossAICtrlResult Walk_Check(int32 Level, class AActor** OutTargetActor, float* OutDistance);
	bool Wait_Set(const struct FVector& BossLoc, const struct FRotator& BossRot, bool IsDisableDamage, bool IsDisableDeath, float AnimSpeed, class ATTLBaseBossOgreCharacter* Owner, bool IsSaveList, bool IsForce);
	bool Wait_InAction();
	void UpdateTargetActor(class AActor* Target);
	bool Turn_Set(const struct FVector& BossLoc, const struct FRotator& BossRot, bool IsDisableDamage, bool IsDisableDeath, float AnimSpeed, float DeltaYaw, bool IsSaveList);
	bool Turn_InAction();
	enum class ETTLBossAICtrlResult Turn_Check(float* OutDeltaYaw);
	bool Tackle_Set(const struct FVector& BossLoc, const struct FRotator& BossRot, bool IsDisableDamage, bool IsDisableDeath, float AnimSpeed, int32 Level, class AActor* TargetAct, bool IsSaveList);
	bool Tackle_InAction();
	enum class ETTLBossAICtrlResult Tackle_Check(int32 Level, class AActor** OutTargetActor);
	bool SwordStamp_Set(const struct FVector& BossLoc, const struct FRotator& BossRot, bool IsDisableDamage, bool IsDisableDeath, float AnimSpeed, int32 Level, bool IsSaveList);
	bool SwordStamp_InAction();
	enum class ETTLBossAICtrlResult SwordStamp_Check(int32 Level);
	bool SwordSlash_Set(const struct FVector& BossLoc, const struct FRotator& BossRot, bool IsDisableDamage, bool IsDisableDeath, float AnimSpeed, int32 Level, class AActor* TargetAct, bool IsSaveList);
	bool SwordSlash_InAction();
	enum class ETTLBossAICtrlResult SwordSlash_Check(int32 Level, class AActor** OutTargetActor);
	void MulticastWalkSet(const struct FVector& BossLoc, const struct FRotator& BossRot, bool IsDisableDamage, bool IsDisableDeath, float AnimSpeed, int32 Level, class AActor* TargetAct, float Distance, bool IsSaveList);
	void MulticastWaitSet(const struct FVector& BossLoc, const struct FRotator& BossRot, bool IsDisableDamage, bool IsDisableDeath, float AnimSpeed, class AActor* TempTargetActor, bool IsSaveList);
	void MulticastTurnSet(const struct FVector& BossLoc, const struct FRotator& BossRot, bool IsDisableDamage, bool IsDisableDeath, float AnimSpeed, class AActor* TargetAct, float DeltaYaw, bool IsSaveList);
	void MulticastTackleSet(const struct FVector& BossLoc, const struct FRotator& BossRot, bool IsDisableDamage, bool IsDisableDeath, float AnimSpeed, int32 Level, class AActor* TargetAct, bool IsSaveList);
	void MulticastSwordStampSet(const struct FVector& BossLoc, const struct FRotator& BossRot, bool IsDisableDamage, bool IsDisableDeath, float AnimSpeed, class AActor* TargetAct, int32 Level, bool IsSaveList);
	void MulticastSwordSlashSet(const struct FVector& BossLoc, const struct FRotator& BossRot, bool IsDisableDamage, bool IsDisableDeath, float AnimSpeed, int32 Level, class AActor* TargetAct, bool IsSaveList);
	void MulticastMissileSetParallel(int32 Level);
	void MulticastMissileSet(const struct FVector& BossLoc, const struct FRotator& BossRot, bool IsDisableDamage, bool IsDisableDeath, float AnimSpeed, class AActor* TargetAct, int32 Level, bool IsSaveList);
	void MulticastKickSet(const struct FVector& BossLoc, const struct FRotator& BossRot, bool IsDisableDamage, bool IsDisableDeath, float AnimSpeed, int32 Level, class AActor* TargetAct, int32 Type, bool IsSaveList);
	void MulticastJumpSet(const struct FVector& BossLoc, const struct FRotator& BossRot, bool IsDisableDamage, bool IsDisableDeath, float AnimSpeed, int32 Level, const struct FVector& TargetLocation, class AActor* TargetAct, bool IsSaveList);
	void MulticastGuardSet(const struct FVector& BossLoc, const struct FRotator& BossRot, bool IsDisableDamage, bool IsDisableDeath, float AnimSpeed, class AActor* TargetAct, int32 Level, bool IsSaveList);
	void MulticastGraspingSet(const struct FVector& BossLoc, const struct FRotator& BossRot, bool IsDisableDamage, bool IsDisableDeath, float AnimSpeed, int32 Level, class AActor* TargetAct, bool IsSaveList);
	void MulticastFallSet();
	void MulticastDamageSet(const struct FVector& BossLoc, const struct FRotator& BossRot, bool IsDisableDamage, bool IsDisableDeath, float AnimSpeed, class AActor* TargetAct, int32 Parts, class AActor* DamageCauser, bool IsSaveList);
	void MulticastBackHandBlowSet(const struct FVector& BossLoc, const struct FRotator& BossRot, bool IsDisableDamage, bool IsDisableDeath, float AnimSpeed, int32 Level, class AActor* TargetAct, bool IsSaveList);
	void MulticastAngerSet(const struct FVector& BossLoc, const struct FRotator& BossRot, bool IsDisableDamage, bool IsDisableDeath, float AnimSpeed, class AActor* TargetAct, bool IsSaveList);
	bool Missile_SetParallel(int32 Level);
	bool Missile_Set(const struct FVector& BossLoc, const struct FRotator& BossRot, bool IsDisableDamage, bool IsDisableDeath, float AnimSpeed, int32 Level, bool IsSaveList);
	bool Missile_InAction();
	enum class ETTLBossAICtrlResult Missile_CheckParallel(int32 Level);
	enum class ETTLBossAICtrlResult Missile_Check(int32 Level);
	bool Kick_Set(const struct FVector& BossLoc, const struct FRotator& BossRot, bool IsDisableDamage, bool IsDisableDeath, float AnimSpeed, int32 Level, class AActor* TargetAct, int32 Type, bool IsSaveList);
	bool Kick_InAction();
	enum class ETTLBossAICtrlResult Kick_Check(int32 Level, class AActor** OutTargetActor, int32* OutType);
	bool Jump_Set(const struct FVector& BossLoc, const struct FRotator& BossRot, bool IsDisableDamage, bool IsDisableDeath, float AnimSpeed, int32 Level, const struct FVector& TargetLocation, class AActor* TargetAct, bool IsSaveList);
	bool Jump_InAction();
	enum class ETTLBossAICtrlResult Jump_Check(int32 Level, int32 Type, struct FVector* OutLocation, class AActor** OutTargetActor);
	bool Guard_Set(const struct FVector& BossLoc, const struct FRotator& BossRot, bool IsDisableDamage, bool IsDisableDeath, float AnimSpeed, int32 Level, bool IsSaveList);
	bool Guard_InAction();
	enum class ETTLBossAICtrlResult Guard_Check(int32 Level);
	bool Grasping_Set(const struct FVector& BossLoc, const struct FRotator& BossRot, bool IsDisableDamage, bool IsDisableDeath, float AnimSpeed, int32 Level, class AActor* TargetAct, bool IsSaveList);
	bool Grasping_InAction();
	enum class ETTLBossAICtrlResult Grasping_Check(int32 Level, class AActor** OutTargetActor);
	bool Damage_Set(const struct FVector& BossLoc, const struct FRotator& BossRot, bool IsDisableDamage, bool IsDisableDeath, float AnimSpeed, int32 Parts, class AActor* DamageCauser, bool IsSaveList, bool IsForce);
	bool Damage_InAction();
	bool BackHandBlow_Set(const struct FVector& BossLoc, const struct FRotator& BossRot, bool IsDisableDamage, bool IsDisableDeath, float AnimSpeed, int32 Level, class AActor* TargetAct, bool IsSaveList);
	bool BackHandBlow_InAction();
	enum class ETTLBossAICtrlResult BackHandBlow_Check(int32 Level, class AActor** OutTargetActor);
	bool Anger_Set(const struct FVector& BossLoc, const struct FRotator& BossRot, bool IsDisableDamage, bool IsDisableDeath, float AnimSpeed, bool IsSaveList);
	bool Anger_InAction();
	void AIInit_Implementation(class AActor* MyActor);
};

// 0x0 (0x438 - 0x438)
// Class DXM.TTLAIActionBaseBossSpedComponent
class UTTLAIActionBaseBossSpedComponent : public UTTLAIActionComponent
{
public:

	static class UClass* StaticClass();
	static class UTTLAIActionBaseBossSpedComponent* GetDefaultObj();

};

// 0x88 (0x4C0 - 0x438)
// Class DXM.TTLAIActionBaseBossTrinComponent
class UTTLAIActionBaseBossTrinComponent : public UTTLAIActionComponent
{
public:
	class ATTLBaseBossTrinCharacter*             OwnerBoss;                                         // 0x438(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1062[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                Action_Actor;                                      // 0x448(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1063[0x70];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAIActionBaseBossTrinComponent* GetDefaultObj();

	void AIInit_Implementation(class AActor* MyActor);
};

// 0x10 (0x448 - 0x438)
// Class DXM.TTLAIActionBaseBossTrinContComp
class UTTLAIActionBaseBossTrinContComp : public UTTLAIActionComponent
{
public:
	class ATTLBaseBossTrinContCharacter*         OwnerCharacter;                                    // 0x438(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1067[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAIActionBaseBossTrinContComp* GetDefaultObj();

	void AIInit_Implementation(class AActor* MyActor);
};

// 0xC0 (0x4F8 - 0x438)
// Class DXM.TTLAIActionBaseBossWyveComponent
class UTTLAIActionBaseBossWyveComponent : public UTTLAIActionComponent
{
public:
	class UTTLWyveAIDataAsset*                   AIParameterAsset;                                  // 0x438(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1076[0xB8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAIActionBaseBossWyveComponent* GetDefaultObj();

	void TTLMulticastSubMoveExecute(class AActor* Target, const struct FVector& Location, float Timer, int32 Flag);
	void TTLMultiCastStartActionMissile(enum class ETTLBaseBossWyveActionState ActionState, int32 ExecuteLevel, class AActor* Target, class AActor* Hate1, class AActor* Hate2, class AActor* Hate3, class AActor* Hate4, class AActor* Hate5, class AActor* Hate6, class AActor* Hate7, class AActor* Hate8);
	void TTLMultiCastStartAction(enum class ETTLBaseBossWyveActionState ActionState, int32 ExecuteLevel, class AActor* Target, int32 Parameter, float FParameter);
	void OnTakeAnyDamageDelegate(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
};

// 0x10 (0x448 - 0x438)
// Class DXM.TTLAIActionBaseCarComponent
class UTTLAIActionBaseCarComponent : public UTTLAIActionComponent
{
public:
	class ATTLBaseCarCharacter*                  SelfCharacter;                                     // 0x438(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1079[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAIActionBaseCarComponent* GetDefaultObj();

	bool Attack_Start();
	bool Attack_End();
	void Action_Wait();
	void Action_PatrolTargetPoint();
	void Action_PatrolActionArea();
	void Action_Patrol();
	void Action_None();
	void Action_KeepDistance();
	void Action_GoAroundSide();
	void Action_Chase();
	void Action_Attack();
};

// 0x38 (0x470 - 0x438)
// Class DXM.TTLAIActionBaseDroneComponent
class UTTLAIActionBaseDroneComponent : public UTTLAIActionComponent
{
public:
	class ATTLBaseDronePawn*                     SelfPawn;                                          // 0x438(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLFirearmControlComponent*           SelfFirearmCtrl;                                   // 0x440(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_107A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                FollowActor;                                       // 0x450(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FollowDistance;                                    // 0x458(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CombatRange;                                       // 0x45C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseDroneSecuState            SecurityDrone_State;                               // 0x460(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_107B[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAIActionBaseDroneComponent* GetDefaultObj();

	void SecurityDrone_Update(float DeltaSeconds);
};

// 0x0 (0x448 - 0x448)
// Class DXM.TTLAIActionBaseRushCarComponent
class UTTLAIActionBaseRushCarComponent : public UTTLAIActionBaseCarComponent
{
public:

	static class UClass* StaticClass();
	static class UTTLAIActionBaseRushCarComponent* GetDefaultObj();

	bool Action_InAttack();
};

// 0x18 (0x450 - 0x438)
// Class DXM.TTLAIActionBaseTurretComponent
class UTTLAIActionBaseTurretComponent : public UTTLAIActionComponent
{
public:
	class ATTLBaseTurretPawn*                    SelfPawn;                                          // 0x438(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLFirearmControlComponent*           SelfFirearmCtrl;                                   // 0x440(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1082[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAIActionBaseTurretComponent* GetDefaultObj();

	void MulticastAttack_Start();
	void MulticastAttack_End();
	bool Attack_Start();
	bool Attack_End();
	void Action_Wait();
	void Action_PatrolTargetPoint();
	void Action_PatrolActionArea();
	void Action_Patrol();
	void Action_None();
	void Action_KeepDistance();
	void Action_GoAroundSide();
	void Action_Chase();
	void Action_Attack();
};

// 0x10 (0x448 - 0x438)
// Class DXM.TTLAIActionBossSnakFinComponent
class UTTLAIActionBossSnakFinComponent : public UTTLAIActionComponent
{
public:
	class ATTLBaseENBossSnakFin*                 SelfPawn;                                          // 0x438(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Initialized;                                       // 0x440(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1085[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAIActionBossSnakFinComponent* GetDefaultObj();

	bool Start_Wait();
	bool Start_Attack();
	void Process_Wait();
	void Process_Attack();
	bool IsExistTarget();
	bool End_Attack();
};

// 0x0 (0x470 - 0x470)
// Class DXM.TTLAIActionSupportDroneComponent
class UTTLAIActionSupportDroneComponent : public UTTLAIActionBaseDroneComponent
{
public:

	static class UClass* StaticClass();
	static class UTTLAIActionSupportDroneComponent* GetDefaultObj();

};

// 0x10 (0x480 - 0x470)
// Class DXM.TTLAIActionDecoyCarrierComponent
class UTTLAIActionDecoyCarrierComponent : public UTTLAIActionSupportDroneComponent
{
public:
	float                                        DecoyCountMin;                                     // 0x470(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DecoyCountMax;                                     // 0x474(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootIntervalDefault;                              // 0x478(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootIntervalBattle;                               // 0x47C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLAIActionDecoyCarrierComponent* GetDefaultObj();

	void SetBattleMode(bool IsBattle);
	void AIInit_Implementation(class AActor* MyActor);
};

// 0x218 (0x650 - 0x438)
// Class DXM.TTLAIActionENBossSnak01Component
class UTTLAIActionENBossSnak01Component : public UTTLAIActionComponent
{
public:
	TArray<struct FTTLENBossSnakPath>            FirstSnakPaths;                                    // 0x438(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLENBossSnakPath>            SecondSnakPaths;                                   // 0x448(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        SwitchPathTime;                                    // 0x458(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              SwithPathAngleLimit;                               // 0x45C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        ChangeSpeedCoolTime;                               // 0x468(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CheckNextPathDistance;                             // 0x46C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PitchAdjustAngle;                                  // 0x470(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RollDistance;                                      // 0x474(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RollCountMin;                                      // 0x478(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RollCountMax;                                      // 0x47C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EnemyAppInterval;                                  // 0x480(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MissileInterval;                                   // 0x484(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MissileNum;                                        // 0x488(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TailJointNum;                                      // 0x48C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TailRadius;                                        // 0x490(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1091[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class ETTLENBossSnakGenStopType, struct FTTLENBossSnakActionGenPoint> StopGenPoints;                                     // 0x498(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        CircleCapsuleHeight;                               // 0x4E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CircleCapsuleRadius;                               // 0x4EC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CircleWeaponName;                                  // 0x4F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CircleAttackStartTime;                             // 0x4F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CircleTime;                                        // 0x4FC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ATriggerBase*>                  CircleAreas;                                       // 0x500(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        CircleCoolTime;                                    // 0x510(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArkGunModeAttackTime;                              // 0x514(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArkGunModeCoolTime;                                // 0x518(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightAngleTime;                                    // 0x51C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ATriggerBase*>                  ChaseAreas;                                        // 0x520(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        ChaceDistance;                                     // 0x530(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChaceTime;                                         // 0x534(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChaceRate;                                         // 0x538(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CheckAreaOutStartTime;                             // 0x53C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsUseTriggerBox;                                   // 0x540(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1094[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        NoTriggerChaseDistance;                            // 0x544(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChaseCoolTime;                                     // 0x548(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Initialized;                                       // 0x54C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1095[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                TargetActor;                                       // 0x550(0x8)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLENBossSnakActions             CurrentAction;                                     // 0x558(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsTransform;                                       // 0x559(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsTailAttack;                                      // 0x55A(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1096[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ChaseStartDir;                                     // 0x55C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ApproachTimeOut;                                   // 0x560(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CircleRadius;                                      // 0x564(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DiffZ;                                             // 0x568(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DiffZRate;                                         // 0x56C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1097[0x7C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AutoArkGunWaitTime;                                // 0x5EC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutoArkGunModeAttackTime;                          // 0x5F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1098[0x5C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAIActionENBossSnak01Component* GetDefaultObj();

	void Transform_Start();
	void Transform_End();
	void Roll_Start();
	void RightAngle_Start();
	void OnComponentEndOverlapCircleArea(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnComponentBeginOverlapCircleArea(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void MulticastStartDonutsAttack();
	void MulticastStartAction(enum class ETTLENBossSnak01AICtrl ActionNo, int32 ExecuteLevel);
	void MulticastRollStart(int8 Direction, int8 Count);
	void MulticastCircleStart(int8 SurroundType);
	void Missile_Start();
	void EnemySpawn_Start();
	void DebugStartAction_Change();
	void DebugStartAction_ArkGun();
	bool DamageReaction_Start(enum class ETTLENBossSnakDamageType DamageType);
	void DamageReaction_End();
	void Circle_Start();
	bool CheckState(enum class ETTLENBossSnakActions Action);
	enum class ETTLBossAICtrlResult Check_Tail();
	enum class ETTLBossAICtrlResult Check_Roll();
	enum class ETTLBossAICtrlResult Check_RightAngle();
	enum class ETTLBossAICtrlResult Check_Missile();
	enum class ETTLBossAICtrlResult Check_EnemySpawn();
	enum class ETTLBossAICtrlResult Check_DamageReaction(int32* OutType);
	enum class ETTLBossAICtrlResult Check_Circle();
	enum class ETTLBossAICtrlResult Check_ChangeSpeed();
	enum class ETTLBossAICtrlResult Check_Chace();
	enum class ETTLBossAICtrlResult Check_ArkGunMode();
	void ChangeSpeed_Start(int32 Type);
	void Chace_Start(class AActor* TargetActor);
	void ArkGunMode_Start();
	void ActionTail_Start();
	void ActionTail_Finish();
	void ActionNone_Start();
};

// 0x128 (0x560 - 0x438)
// Class DXM.TTLAIActionENBossTrts01Component
class UTTLAIActionENBossTrts01Component : public UTTLAIActionComponent
{
public:
	class AActor*                                TargetActor;                                       // 0x438(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableUpdateTargetActor;                         // 0x440(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_10D9[0xAF];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLENBossTrts01Character*             SelfCharacter;                                     // 0x4F0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_10DA[0x68];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAIActionENBossTrts01Component* GetDefaultObj();

	bool WholeBodyBarrier_Start(int32 Level);
	bool WholeBodyBarrier_InAction();
	enum class ETTLBossAICtrlResult WholeBodyBarrier_Check();
	void UpdateTargetActor(class AActor* Target);
	bool Turn_Start(int32 Level, float Yaw);
	bool Turn_InAction();
	enum class ETTLBossAICtrlResult Turn_Check(int32 Level, float* OutYaw);
	bool Tackle_Start(int32 InLevel, class AActor* InTargetActor);
	bool Tackle_InAction();
	enum class ETTLBossAICtrlResult Tackle_Check(int32 ExecuteLevel, class AActor** OutTargetActor);
	bool SummonEnemy_Start(int32 Level);
	bool SummonEnemy_InAction();
	void SummonEnemy_Destroy();
	enum class ETTLBossAICtrlResult SummonEnemy_Check(int32* OutCount);
	void StampJump_TakeOff();
	bool StampJump_Start(int32 Level, const struct FVector& Point);
	bool StampJump_InAction();
	enum class ETTLBossAICtrlResult StampJump_Check(int32 ExecuteLevel, struct FVector* OutPoint);
	bool Stamp_Start(int32 Level, class AActor* Target, int32 Foot);
	bool Stamp_InAction();
	enum class ETTLBossAICtrlResult Stamp_Check(class AActor** OutTargetActor, int32* OutFoot);
	bool SliceLaser_Start(int32 Level);
	bool SliceLaser_InAction();
	enum class ETTLBossAICtrlResult SliceLaser_Check();
	void ShortJump_TakeOff();
	bool ShortJump_Start(int32 Level, const struct FVector& Point);
	bool ShortJump_InAction();
	enum class ETTLBossAICtrlResult ShortJump_Check(int32 ExecuteLevel, int32 CheckType, int32* OutDirection, struct FVector* OutPoint);
	bool ShootMissile_Start(int32 Level);
	bool ShootMissile_InAction();
	enum class ETTLBossAICtrlResult ShootMissile_Check(int32 ExecuteLevel);
	void MulticastStartDamageReaction(int32 No);
	void MulticastShootMissileStart(int32 Level);
	void MulticastEndDamageReaction();
	void MulticastCannonAttackStart(int32 Level);
	bool Move_Start(int32 Level);
	bool Move_InAction();
	void LongJump_TakeOff();
	bool LongJump_Start(int32 Level, const struct FVector& Point);
	bool LongJump_InAction();
	enum class ETTLBossAICtrlResult LongJump_Check(int32 Level, int32 CheckType, struct FVector* OutPoint);
	bool Idle_Start(class ATTLENBossTrts01Character* POwner);
	bool ExtraThickLaser_Start(int32 Level);
	bool ExtraThickLaser_InAction();
	enum class ETTLBossAICtrlResult ExtraThickLaser_Check(int32 Level);
	bool DeathIdle_Start();
	bool Death_Start();
	bool Death_InAction();
	enum class ETTLBossAICtrlResult Death_Check();
	bool DamageReaction_Start(int32 No);
	bool DamageReaction_RequestLaserDamage();
	bool DamageReaction_InAction();
	enum class ETTLBossAICtrlResult DamageReaction_Check(int32* OutType);
	bool CannonAttack_Start(int32 Level);
	bool CannonAttack_SetFree(bool Value, int32 Level);
	bool CannonAttack_IsFree();
	bool CannonAttack_InAction();
	enum class ETTLBossAICtrlResult CannonAttack_Check(int32* OutCount);
	bool Anger_Start();
	bool Anger_InAction();
	enum class ETTLBossAICtrlResult Anger_Check();
	void AIInit_Implementation(class AActor* MyActor);
};

// 0xA8 (0x4E0 - 0x438)
// Class DXM.TTLAIActionFeryBaseComponent
class UTTLAIActionFeryBaseComponent : public UTTLAIActionComponent
{
public:
	class ATTLENFeryBasePawn*                    SelfFeryPawn;                                      // 0x438(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                         SelfBoxCollision;                                  // 0x440(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentPointIndex;                                 // 0x448(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_10E3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ATriggerBase*>                  DischargeAreas;                                    // 0x450(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        DischargeTime;                                     // 0x460(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DischargeWaitTime;                                 // 0x464(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          DischargeSockets;                                  // 0x468(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class ATTLSpawnContainerBaseCharacter*> DischargeActors;                                   // 0x478(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnHatchOpen;                                       // 0x488(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnHatchClose;                                      // 0x498(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	float                                        WaitTime;                                          // 0x4A8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WaitTimer;                                         // 0x4AC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        WaitFlags;                                         // 0x4B0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_10E4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVector>                       DischargeDropVector;                               // 0x4B8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_10E5[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAIActionFeryBaseComponent* GetDefaultObj();

	void SetTargetPointPawn(struct FVector& TargetPoint);
	void SetEnableMovePawn(bool Enable);
	void ReleaseContainer();
	bool IsInDischargeArea(class AActor* Actor);
	bool IsEndRotationPawn();
	struct FVector GetTargetPointPawn();
	float GetPitchMaxPawn();
	struct FRotator GetDeltaRotationPawn();
	int32 FindNearestPathPoint();
	void EndAction_Discharge();
	void CallWait(struct FVector& Target, float WaitTime, int32 WaitType, enum class ETTLAIActionType NextAction, enum class ETTLENFeryBossActions bossAction);
};

// 0xA70 (0xF50 - 0x4E0)
// Class DXM.TTLAIActionFeryBoss01Component
class UTTLAIActionFeryBoss01Component : public UTTLAIActionFeryBaseComponent
{
public:
	UMulticastDelegateProperty_                  OnAngry;                                           // 0x4E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnACRush00Start;                                   // 0x4F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnACRush00End;                                     // 0x500(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnReinforce;                                       // 0x510(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnSmallDamageNormal;                               // 0x520(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLergeDamageNormal;                               // 0x530(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnSmallDamageAngry;                                // 0x540(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLergeDamageAngry;                                // 0x550(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissileOpen;                                     // 0x560(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissileClose;                                    // 0x570(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissileFire;                                     // 0x580(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMultiLaserOpen;                                  // 0x590(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMultiLaserClose;                                 // 0x5A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMotionDeath;                                     // 0x5B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	float                                        HeightMin;                                         // 0x5C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1106[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ATargetPoint*>                  MinimumHeightCheckPoint;                           // 0x5C8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        ChaceHeightRange;                                  // 0x5D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChaceDistance;                                     // 0x5DC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChaceDuration;                                     // 0x5E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChaceSpeed;                                        // 0x5E4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChaceTurnSpeed;                                    // 0x5E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChaceAccelTime;                                    // 0x5EC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChaceReduceTime;                                   // 0x5F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChaceWaitTime;                                     // 0x5F4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChaceKeepDistance;                                 // 0x5F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChaceKeepTime;                                     // 0x5FC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           ChaceSignVFX;                                      // 0x600(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           ChaceThrusterVFX;                                  // 0x698(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           ChaceThrusterFinishVFX;                            // 0x730(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        ChaceOverlapActors;                                // 0x7C8(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        AngryChaceAccelTime;                               // 0x7D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AngryChaceAccelRate;                               // 0x7DC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChaceCameraShakeDistance;                          // 0x7E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChaceCameraShakeScale;                             // 0x7E4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChaceHitCameraShakeScale;                          // 0x7E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AngryMoveSpeedScale;                               // 0x7EC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AngryChaceTurnSpeedScale;                          // 0x7F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AngryEyeAmpRate;                                   // 0x7F4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          AngryEyeColor;                                     // 0x7F8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           AngryEyeVFX;                                       // 0x808(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                         IsAngry;                                           // 0x8A0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1107[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ATargetPoint*>                  BreakAwayPoints;                                   // 0x8A8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        BreakAwayTurnTime;                                 // 0x8B8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BreakAwayMoveSpeed;                                // 0x8BC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BreakAwayCooldownTime;                             // 0x8C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BreakAwayPlayerCheckTime;                          // 0x8C4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsBreakAway;                                       // 0x8C8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1109[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ATargetPoint*>                  FrontReturnPoints;                                 // 0x8D0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        FrontReturnSpeed;                                  // 0x8E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FrontReturnReduceTime;                             // 0x8E4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class APawn>                     ReinforcePawn;                                     // 0x8E8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ReinforceCountMax;                                 // 0x8F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ReinforceCountMin;                                 // 0x8F4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReinforceDistane;                                  // 0x8F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReinforceSpawnTime;                                // 0x8FC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ATTLSplinePath*>                ReinforcePaths;                                    // 0x900(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           ReinforceVFX;                                      // 0x910(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        ReinforceVFXTime;                                  // 0x9A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReinforceWaitTime;                                 // 0x9AC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class APawn*>                         ReinforceSpawns;                                   // 0x9B0(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        MissileFireInterval;                               // 0x9C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MissileCloseTime;                                  // 0x9C4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MissileWaitTime;                                   // 0x9C8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MissileFireMax;                                    // 0x9CC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LaserChargeTime;                                   // 0x9D0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LaserShootTime;                                    // 0x9D4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LaserWaitTime;                                     // 0x9D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GunDistance;                                       // 0x9DC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GunDeltaRotation;                                  // 0x9E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GunAprochTime;                                     // 0x9E4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DischargeCooldownTime;                             // 0x9E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_110C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLENBossferyContainerTable>  ContainerTables;                                   // 0x9F0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLENBossferyContainerCounter> ContainerCounters;                                 // 0xA00(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           DamageReactionVFX;                                 // 0xA10(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        DamageReactionVFXTime;                             // 0xAA8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Initialized;                                       // 0xAAC(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_110D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ChaceDuration2;                                    // 0xAB0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChaceSpeed2;                                       // 0xAB4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChaceTurnSpeed2;                                   // 0xAB8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChaceAccelTime2;                                   // 0xABC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChaceReduceTime2;                                  // 0xAC0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChaceWaitTime2;                                    // 0xAC4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChaceKeepTime2;                                    // 0xAC8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChaseHighDamageRate;                               // 0xACC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBasicStatusComponent*              BasicStatus;                                       // 0xAD0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GunNearestDistance;                                // 0xAD8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GunFarDistance;                                    // 0xADC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PathPointNearestDistance;                          // 0xAE0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReachTargetDistance;                               // 0xAE4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_110E[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlayback                        ChaceSignVFXPlayback00;                            // 0xB10(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        ChaceSignVFXPlayback01;                            // 0xB28(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        ChaceSignVFXPlayback02;                            // 0xB40(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        ChaceSignVFXPlayback03;                            // 0xB58(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        ChaceThrusterVFXPlayback00;                        // 0xB70(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        ChaceThrusterVFXPlayback01;                        // 0xB88(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        ChaceThrusterVFXPlayback02;                        // 0xBA0(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        ChaceThrusterVFXPlayback03;                        // 0xBB8(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        ChaceThrusterVFXPlayback10;                        // 0xBD0(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        ChaceThrusterVFXPlayback11;                        // 0xBE8(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        ChaceThrusterVFXPlayback12;                        // 0xC00(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        ChaceThrusterVFXPlayback13;                        // 0xC18(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        ChaceThrusterVFXPlayback20;                        // 0xC30(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        ChaceThrusterVFXPlayback21;                        // 0xC48(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        ChaceThrusterVFXPlayback22;                        // 0xC60(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        ChaceThrusterVFXPlayback23;                        // 0xC78(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        ChaceThrusterVFXPlayback30;                        // 0xC90(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        ChaceThrusterVFXPlayback31;                        // 0xCA8(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        ChaceThrusterVFXPlayback32;                        // 0xCC0(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        ChaceThrusterVFXPlayback33;                        // 0xCD8(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_110F[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlayback                        DamageReactionVFXPlayback;                         // 0xD30(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1110[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLENBossGraveYard>           DeleteList;                                        // 0xD50(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1111[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlayback                        AngryVFXPlayback;                                  // 0xD90(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        ReinforceVFXPlayback;                              // 0xDA8(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        ChaseThrusterFinishVFXPlayback48;                  // 0xDC0(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        ChaseThrusterFinishVFXPlayback49;                  // 0xDD8(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        ChaseThrusterFinishVFXPlayback50;                  // 0xDF0(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        ChaseThrusterFinishVFXPlayback51;                  // 0xE08(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        ChaseThrusterFinishVFXPlayback40;                  // 0xE20(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        ChaseThrusterFinishVFXPlayback41;                  // 0xE38(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        ChaseThrusterFinishVFXPlayback42;                  // 0xE50(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        ChaseThrusterFinishVFXPlayback43;                  // 0xE68(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        ChaseThrusterFinishVFXPlayback52;                  // 0xE80(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        ChaseThrusterFinishVFXPlayback53;                  // 0xE98(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        ChaseThrusterFinishVFXPlayback54;                  // 0xEB0(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        ChaseThrusterFinishVFXPlayback55;                  // 0xEC8(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        ChaseThrusterFinishVFXPlayback44;                  // 0xEE0(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        ChaseThrusterFinishVFXPlayback45;                  // 0xEF8(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        ChaseThrusterFinishVFXPlayback46;                  // 0xF10(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        ChaseThrusterFinishVFXPlayback47;                  // 0xF28(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1112[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAIActionFeryBoss01Component* GetDefaultObj();

	bool WeaponRight_Check(class AActor* Actor);
	void WeakDestroyCountUp();
	bool TargetIsMinHeight(class AActor* Target);
	void StopShakeCamera();
	bool StartMultiLaser(int32 Parameter);
	bool StartMissileFire(class AActor* TargetActor);
	bool StartDamageReaction(enum class ETTLENFeryBossDamages DamageType);
	bool StartActionTurn(class AActor* TargetActor);
	bool StartActionReinforce();
	bool StartActionFrontReturn(class ATargetPoint* Point);
	bool StartActionBreakAway(class ATargetPoint* Point, int32 ActionNo);
	bool StartActionAngry();
	void ShakeCameraHitCharge(class AActor* Actor);
	void RequestSpawnReinforce(const struct FRotator& Rotation);
	void OnDestroyedDischargeActor(class AActor* Actor);
	void MultiLaserOpen();
	void MultiLaserClose();
	void MulticastStartAction(int32 ActionNo, int32 ExecuteLevel, class AActor* TargetActor, int8 Parameter);
	void MissileOpen();
	void MissileFireEnd();
	void MissileClose();
	bool IsReinforce();
	bool IsInChaceArea(class AActor* Actor);
	bool IsBreakAwayConditions();
	float GetTurnBlend();
	int32 GetReinforcePathsEmptyCount();
	struct FVector GetFowardLocationXY(float Distance);
	void ForceCoolDown();
	bool Discharge_Check(int32 PatternNo);
	void DestroyVFX();
	void DestroyContainers();
	void DestroyChaceThrusterVFXBP(float Delay);
	void DestroyChaceThrusterVFX();
	void DamageReactionEnd();
	void CreateContainers();
	void AngryEnd();
	void ACRush00StartEnd();
	void ACRush00EndEnd();
};

// 0x98 (0x578 - 0x4E0)
// Class DXM.TTLAIActionFeryNrml01Component
class UTTLAIActionFeryNrml01Component : public UTTLAIActionFeryBaseComponent
{
public:
	int32                                        PatrolMax;                                         // 0x4E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeightMax;                                         // 0x4E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeightMin;                                         // 0x4E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1115[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class ATTLSpawnContainerBaseCharacter>> DischargeClassesS;                                 // 0x4F0(0x10)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class ATTLSpawnContainerBaseCharacter>> DischargeClassesL;                                 // 0x500(0x10)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class FName                                  DischargeSocketL;                                  // 0x510(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDischargedL;                                     // 0x518(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1116[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DischargeLTime;                                    // 0x51C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DischargeLTimer;                                   // 0x520(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DischargeLWaitTime;                                // 0x524(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DischargeLWaitTimer;                               // 0x528(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1117[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLSpawnHateTarget>           SpawnHateTargets;                                  // 0x530(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        SpawnMissionTargets;                               // 0x540(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        DischargeMax;                                      // 0x550(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SpawnInGameMax;                                    // 0x554(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1118[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAIActionFeryNrml01Component* GetDefaultObj();

	void OnDestroyedDischargeActor(class AActor* Actor);
	bool IsEndPatrol();
};

// 0x90 (0x4C8 - 0x438)
// Class DXM.TTLAIActionFighterComponent
class UTTLAIActionFighterComponent : public UTTLAIActionComponent
{
public:
	class ATTLFighterPawn*                       SelfFighterPawn;                                   // 0x438(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ActionVelocity;                                    // 0x440(0xC)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Initialized;                                       // 0x44C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1120[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLEnemyWeaponBase*                   EnemyWeapon;                                       // 0x450(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxMoveSpeed;                                      // 0x458(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveSpeedChangeRate;                               // 0x45C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotateSpeed;                                       // 0x460(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AlongValue;                                        // 0x464(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZSpeedOnPatrol;                                    // 0x468(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotateSpeedOnChase;                                // 0x46C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CheckSkipOnChase;                                  // 0x470(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AvoidDistanceMax;                                  // 0x474(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotateSpeedOnAvoid;                                // 0x478(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZMaxOnChase;                                       // 0x47C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZMinOnChase;                                       // 0x480(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZSpeedOnChase;                                     // 0x484(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableAvoid;                                     // 0x488(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1121[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CheckDistanceInAvoid;                              // 0x48C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotateSpeedOnInAvoid;                              // 0x490(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HitAfterSecondsInAvoid;                            // 0x494(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowDebugLineInAvoid;                              // 0x498(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1122[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxMoveSpeedInAvoid;                               // 0x49C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1123[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAIActionFighterComponent* GetDefaultObj();

	void OpenHatch();
	void MoveZOnChase();
	bool IsTargetInRange(class AActor* TargetActor, float RangeDegree);
	bool IsTargetFront(class AActor* TargetActor);
	bool FighterAction_StartAttack(class AActor* TargetActor);
	void FighterAction_Patrol();
	bool FighterAction_EndAttack();
	void FighterAction_Chase();
	bool FighterAction_Avoid();
	void FighterAction_AttackCenter();
	void FighterAction_AttackBothSide();
	void CloseHatch();
	void AvoidOnChase(class AActor* TargetActor);
};

// 0x8 (0x478 - 0x470)
// Class DXM.TTLAIActionFunnelPawnComponent
class UTTLAIActionFunnelPawnComponent : public UTTLAIActionSupportDroneComponent
{
public:
	uint8                                        Pad_1124[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAIActionFunnelPawnComponent* GetDefaultObj();

	void Action_Chase();
};

// 0x18 (0x488 - 0x470)
// Class DXM.TTLAIActionGuardDroneComponent
class UTTLAIActionGuardDroneComponent : public UTTLAIActionSupportDroneComponent
{
public:
	float                                        CoverInterval;                                     // 0x470(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AproachDistance;                                   // 0x474(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BreakAwayDistance;                                 // 0x478(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BlockDistance;                                     // 0x47C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1127[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAIActionGuardDroneComponent* GetDefaultObj();

	bool IsLockonedAreaActors(class AActor* TargetActor);
	bool InBreakAwayRanget(class AActor* TargetActor);
	class AActor* GetFollowActorTarget();
};

// 0x28 (0x480 - 0x458)
// Class DXM.TTLAIActionHeliFlashComponent
class UTTLAIActionHeliFlashComponent : public UTTLAIActionBaseCannonComponent
{
public:
	float                                        DefaultDurationTime;                               // 0x458(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefaultIntervalTime;                               // 0x45C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DefaultRapidRate;                                  // 0x460(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FollowDurationTime;                                // 0x464(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FollowIntervalTime;                                // 0x468(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FollowRapidRate;                                   // 0x46C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1128[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAIActionHeliFlashComponent* GetDefaultObj();

	void SetFollowFirearm(bool IsFollow);
};

// 0x8 (0x4D0 - 0x4C8)
// Class DXM.TTLAIActionHFightStelComponent
class UTTLAIActionHFightStelComponent : public UTTLAIActionFighterComponent
{
public:
	class ATTLENFightStelPawn*                   SelfFightStelPawn;                                 // 0x4C8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLAIActionHFightStelComponent* GetDefaultObj();

	void FighterAction_AttackPinpoint();
	void FighterAction_AttackMissile();
	void FighterAction_AttackDrop();
};

// 0x8 (0x478 - 0x470)
// Class DXM.TTLAIActionJammerDroneComponent
class UTTLAIActionJammerDroneComponent : public UTTLAIActionSupportDroneComponent
{
public:
	uint8                                        Pad_1129[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAIActionJammerDroneComponent* GetDefaultObj();

};

// 0x98 (0x4D0 - 0x438)
// Class DXM.TTLAIActionLRangeLaserComponent
class UTTLAIActionLRangeLaserComponent : public UTTLAIActionComponent
{
public:
	bool                                         IsDynamicSearchRadius;                             // 0x438(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_112A[0x4B];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RotationSpeed;                                     // 0x484(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsLockOn;                                          // 0x488(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_112B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LockOnTargetTime;                                  // 0x48C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LockOnTargetTimeLimit;                             // 0x490(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETTLAILRangeLaser_State           CurrentState;                                      // 0x494(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_112C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxNumOfShot;                                      // 0x498(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CurrentShotNum;                                    // 0x49C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ShotInterval;                                      // 0x4A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentShotTime;                                   // 0x4A4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CheckAttackRangeFrameSpan;                         // 0x4A8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_112D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StartAttackInterval;                               // 0x4B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentStartAttackInterval;                        // 0x4B4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentEndAttackInterval;                          // 0x4B8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrenWaitLaserEnd;                                // 0x4BC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrenWaitTimeForBroken;                           // 0x4C0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_112E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLLongRangeLaserCannon*              SelfPawn;                                          // 0x4C8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTTLAIActionLRangeLaserComponent* GetDefaultObj();

	void Wait_LRangeLaser();
	bool StartWait_LRangeLaser();
	bool StartAttack_LRangeLaser();
	bool IsOverLockOnTimeLimit();
	bool IsInRaysForTarget();
	bool FinishAttack_LRangeLaser();
	void Attack_LRangeLaser();
};

// 0x20 (0x490 - 0x470)
// Class DXM.TTLAIActionMineThrowerComponent
class UTTLAIActionMineThrowerComponent : public UTTLAIActionSupportDroneComponent
{
public:
	float                                        MineCountMin;                                      // 0x470(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MineCountMax;                                      // 0x474(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_112F[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAIActionMineThrowerComponent* GetDefaultObj();

	bool StartActionEscapeMine();
	bool IsShootInterval();
	bool IsInRangeMine();
};

// 0x10 (0x460 - 0x450)
// Class DXM.TTLAIActionMissilerTankComponent
class UTTLAIActionMissilerTankComponent : public UTTLAIActionStrongTankComponent
{
public:
	class ATTLMissilerTankPawn*                  SelfMissilerTankPawn;                              // 0x450(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLFirearmControlComponent*           SelfMissileFirearmControlComponent;                // 0x458(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLAIActionMissilerTankComponent* GetDefaultObj();

	void TankMissilerAction_AttackNormalBullet();
	void TankMissilerAction_AttackMissile();
	bool Attack_Start();
	bool Attack_End();
};

// 0x68 (0x4A0 - 0x438)
// Class DXM.TTLAIActionOuterComponent
class UTTLAIActionOuterComponent : public UTTLAIActionComponent
{
public:
	class ATTLCharacterCommon*                   SelfOuterPawn;                                     // 0x438(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsInitialized;                                     // 0x440(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1134[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PathResearchInterval;                              // 0x444(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsBeginOuterSupportAttack;                         // 0x448(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1135[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                OwnerArsenal;                                      // 0x450(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RunSpeedRate;                                      // 0x458(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SetTrapDistanceMin;                                // 0x45C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDrawDebugPath;                                   // 0x460(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1136[0x3F];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAIActionOuterComponent* GetDefaultObj();

	void OuterAction_SelfExplosion();
	void OuterAction_PatrolTargetPoint();
	void OuterAction_PatrolActionArea();
	void OuterAction_Patrol();
	void OuterAction_None();
	void OuterAction_KeepDistance();
	void OuterAction_GoAroundSide();
	void OuterAction_Chase();
	void OuterAction_AttackSupport();
	void OuterAction_AttackSub();
	void OuterAction_AttackMain();
	bool FireOuterSupportWeapon();
	bool FireOuterSubWeapon();
	bool FireOuterSelfExplosion();
	bool FireOuterMainWeapon();
};

// 0x8 (0xF8 - 0xF0)
// Class DXM.TTLAISpecialActionComponent
class UTTLAISpecialActionComponent : public UActorComponent
{
public:
	float                                        CoolTime;                                          // 0xF0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentCoolTime;                                   // 0xF4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLAISpecialActionComponent* GetDefaultObj();

	void StartActionBP(bool* IsBegun);
	bool StartAction();
	void InitializeAction(class AActor* Owner);
	bool ForceSetEndState();
	void ExecuteActionBP(float DeltaTime, class ATTLCharacter* Character, bool* IsEnd);
	bool ExecuteAction(float DeltaTime, class ATTLCharacter* Character);
	void EndActionBP(bool* RetVal);
	bool EndAction();
};

// 0x150 (0x248 - 0xF8)
// Class DXM.TTLAIBaseJammerComponent
class UTTLAIBaseJammerComponent : public UTTLAISpecialActionComponent
{
public:
	class UTTLDamageParameterComponent*          DamageParameter;                                   // 0xF8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           JammerVFX;                                         // 0x100(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        JammerTime;                                        // 0x198(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JammerCooldownTime;                                // 0x19C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JammerAreaRadius;                                  // 0x1A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        JammerMaterialIndex;                               // 0x1A4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefaultBlinkRate;                                  // 0x1A8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefaultEmissionPower;                              // 0x1AC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          DefaultEmissionColor;                              // 0x1B0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JammerBlinkRate;                                   // 0x1C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JammerEmissionPower;                               // 0x1C4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          JammerEmissionColor;                               // 0x1C8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1141[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLJammerControl                     JammerControl;                                     // 0x208(0x40)(NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLAIBaseJammerComponent* GetDefaultObj();

	void OnJammerSphereEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnJammerSphereBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnDestoryedOwner(class AActor* Actor);
	void Multicast_StartJammerWait();
	void Multicast_EndJammerWait();
};

// 0x18 (0x260 - 0x248)
// Class DXM.TTLAIArmorJammerComponent
class UTTLAIArmorJammerComponent : public UTTLAIBaseJammerComponent
{
public:
	class FName                                  VFXSocket;                                         // 0x248(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1142[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAIArmorJammerComponent* GetDefaultObj();

};

// 0x80 (0x4B8 - 0x438)
// Class DXM.TTLAIController
class ATTLAIController : public AAIController
{
public:
	class AActor*                                MyActor;                                           // 0x438(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLAIActionComponent*                 MyAIAction;                                        // 0x440(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                PlayerActor;                                       // 0x448(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                TargetActor;                                       // 0x450(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ProcessCount;                                      // 0x458(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLAIState                       AIState;                                           // 0x45C(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLAIWeaponEnum                  AICurrentWeapon;                                   // 0x45D(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_11E7[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLBasicStatusComponent*              MyStatus;                                          // 0x460(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TrackLeaderStartDistance;                          // 0x468(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TrackLeaderEndDistance;                            // 0x46C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsFollowingLeader;                                 // 0x470(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_11E8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               FirstSpawnLocation;                                // 0x474(0xC)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ProcessTime;                                       // 0x480(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PauseTime;                                         // 0x484(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_11E9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        AIInnerState;                                      // 0x48C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_11EA[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLAIBranchTimer>             BranchTimer;                                       // 0x4A0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                         IsStopAI;                                          // 0x4B0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         DebugIsMultiplayAi;                                // 0x4B1(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_11EB[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLAIController* GetDefaultObj();

	void UpdateMyActorAndComponents();
	void UpdateLeaderLiving();
	void StartQuickBoost(float Seconds);
	bool StartMirage();
	void StartImpermanentStatusForAbyss(class AActor* StatusActor, float AttackBuffRate, float BuffLength, float DebuffLength);
	bool StartGuardWithMove();
	bool StartGetOnArsenal();
	bool StartGetOffArsenal();
	bool StartFemtoShift(enum class ETTLAIFemtoShiftType Type);
	void SetUseArsenalSpecialWait(class AActor* SetArsenal, bool Flag);
	void SetStopAI(bool Flag);
	bool SetNPCBelongingType(enum class ETTLNPCBelongingType Type);
	void SetLinkNPC();
	void SetLeaderActor(class AActor* Actor);
	void SetIsReversePersonality(bool Flag);
	void SetFriendAIParam();
	void SetCurrentSupportTarget(class AActor* Actor);
	void SetControllerSwitch(bool Value, enum class ETTLAIControllerSwitch SwitchIndex);
	void SetBurstShootMode(bool Value, bool IsLeft);
	void SetAIFlag(enum class ETTLAIFlag Flag, bool Value);
	void SelectWeaponManual(enum class ETTLAIWeaponEnum Weapon);
	void SelectWeapon(enum class ETTLAIWeaponEnum* OutputWeapon);
	void SelectSPMove(enum class ETTLAIYesNoEnum* OutputYesNo);
	void SelectGuard(enum class ETTLAIYesNoEnum* OutputYesNo);
	void ResetAttackDelayTimer();
	void RequestCommunicationMessageFromAIController(enum class ETTLCommunicationTalkTerm TermIndex);
	void RemoveAICallbackDelegate(class UTTLAIActionComponent* AIAction);
	bool OutOfSoftCollision(class AActor* Actor, struct FVector* NearestPos);
	void OnReactionWithParamDelegate(enum class ETTLAIReaction Type, const struct FTTLAIReactionParam& Param);
	void OnHateTargetChangedDelegate(class AActor* TargetActor);
	void OnGetOnArsenalBP();
	void OnGetOnArsenal();
	void OnGetOffArsenalBP();
	void OnGetOffArsenal();
	void OnActionChangedDelegate(enum class ETTLAIActionType before, enum class ETTLAIActionType After);
	void JudgeIsLeaderMyself(enum class ETTLAIYesNoEnum* OutputYesNo);
	void JudgeAndDoSpecialAction(enum class ETTLAIYesNoEnum* OutputYesNo);
	bool IsUsingSpecialWeapon();
	bool IsSupportTarget(class AActor* Actor);
	bool IsStunActor(class AActor* Actor);
	bool IsRunningForwardActor(class AActor* Actor);
	bool IsQuickBoosting();
	bool IsNoneTargetPoint();
	bool IsNonePatrolPath();
	bool IsMissionFinished();
	bool IsGroundOnlyWeapon(enum class ETTLAIWeaponEnum CheckWeapon);
	bool IsFemtoRateUpperValue(float Value);
	bool IsExistSupportTarget();
	bool IsExistNearArsenal(class AActor* Actor, float Distance);
	bool IsExistGround(float CheckHeight);
	bool IsExistFollower();
	bool IsExistActionArea();
	bool IsEquippedWeaponAtParts(enum class ETTLWeaponType WeaponType, enum class ETTLAIWeaponEnum Parts);
	bool IsEquippedWeapon(enum class ETTLWeaponType WeaponType, enum class ETTLAIWeaponEnum* Parts);
	bool IsEquipeedWeaponAtWeaponRack(enum class ETTLWeaponType WeaponType, enum class ETTLAIWeaponPart WeaponRackPart);
	bool IsEnableSeriousBoost();
	bool IsDoingSpecialAction();
	bool IsDeadActor(class AActor* Actor);
	bool IsContinuedSameAIAction(float CheckTime, enum class ETTLAIActionType* CurrentAction);
	bool IsCloseCurrentWeapon();
	bool IsAvailableTargetActor();
	bool IsAnyPartsDestroyed();
	bool IsActionNonParallelAttack(class AActor* Actor);
	bool IsAbnormalStatus(class AActor* Actor, enum class ETTLEAbnormalStatusType AbnormalStatusType);
	int32 GetTargetPointNum();
	class AActor* GetTargetActorOfSupportActor();
	class AActor* GetTargetActor(class AActor* Actor);
	class AActor* GetSupportTargetFromList(int32 Index);
	float GetSoftCollisionDistance(class AActor* Actor, struct FVector* NearestPosition);
	class AActor* GetRecoverTarget(float VPCoefficient, float DistCoefficient, float VPRateUpperLimit);
	float GetPauseTimerValue();
	enum class ETTLNPCBelongingType GetNPCBelongingType();
	class AActor* GetNearThrowTarget(const TArray<class UClass*>& IgnoreClasses);
	class ATTLHealBullet* GetNearestHealBullet(class AActor* BaseActor);
	class ATTLSplinePath* GetNearestEscapePath(class AActor* BaseActor, float* DistanceToPath);
	class AActor* GetNearestActorFromArray(const TArray<class AActor*>& ActorArray, bool ExcludeNearArsenal);
	class AActor* GetLowestHPAlly();
	class AActor* GetLeaderActor();
	bool GetIsStopAI();
	bool GetIsReversePersonality();
	int32 GetInnerStateValue();
	struct FVector GetEscapeTargetPosition(class AActor* Actor, float DistanceFromArea);
	float GetEquippedWeaponRange(enum class ETTLAIWeaponPart WeaponPart);
	float GetCurrentWeaponCriticalRange();
	class AActor* GetCurrentSupportTarget();
	float GetCurrentBattleRange();
	bool GetBurstShootMode(bool IsLeft);
	enum class ETTLAISlot GetBestEvaluateTargetPoint(enum class ETTLAIWeaponEnum CurrentWeapon);
	class AActor* GetBeLockedOnFriend(class AActor* CheckActor);
	float GetAIFriendParam(enum class ETTLAIFriendParamType Type);
	bool GetAIFlag(enum class ETTLAIFlag Flag);
	bool FinishParallelAttack();
	bool EndFemtoShift();
	void DoOnceEveryCountNum(enum class ETTLAIYesNoEnum* OutputYesNo, int32 CountNum);
	void DecideAvoidMissileAction(enum class ETTLAIAvoidMissileAction* OutputAvoidAction, float WeightNone, float WeightBoost, float WeightDescent, float WeightShield, float WeightFemto);
	void DebugSetStopAI(bool Flag);
	void DebugSetMultiplayAi();
	bool DebugIsStopAI();
	bool CheckWeaponIsValid(enum class ETTLAIWeaponEnum SelectedWeapon);
	bool CheckUpperAngleLessThan(class AActor* Actor, float CheckAngle);
	bool CheckShootCollision(class AActor* Actor, float* Distance);
	bool CheckOverheat();
	bool CheckMoveType(class AActor* Actor, enum class ETTLAIMoveMode Mode);
	bool CheckLockedOn(class AActor* Actor);
	bool CheckInPatrolPoint(class AActor* Actor, enum class ETTLAISlot Slot);
	bool CheckInPatrolArea(class AActor* Actor);
	bool CheckHPLessThan(class AActor* Actor, float HPPercent);
	bool CheckDistanceLessThan(class AActor* Actor, float Distance);
	bool CheckDamageMovement(class AActor* Actor);
	bool CheckAngleLessThan(class AActor* Actor, float CheckAngle);
	bool Check2DDistanceLessThan(class AActor* Actor, float Distance);
	void CanStartCatchActor(class AActor** CaughtActor, bool* IsCatch, bool* IsLeft);
	bool CanGetOnOffAction();
	void BranchWeaponRangeType(enum class ETTLAILongCloseEnum* OutputLongClose, enum class ETTLAIWeaponEnum Weapon);
	void BranchTimerProbability(enum class ETTLAIYesNoEnum* OutputYesNo, uint8 TimerIndex, float ProbavilityMaxValue);
	void BranchPercent(enum class ETTLAIYesNoEnum* OutputYesNo, float YesPercent);
	void BranchOnSwitch(enum class ETTLAITrueFalseEnum* OutputTrueFalse, enum class ETTLAIControllerSwitch SwitchIndex);
	bool AttackWeaponSpecial(class AActor* TargetActor, bool IsParallelAttack);
	bool AttackWeaponShoulder(class AActor* TargetActor, bool IsParallelAttack);
	bool AttackWeaponRight(class AActor* TargetActor, bool IsParallelAttack);
	bool AttackWeaponLeftRight(class AActor* TargetActor, bool IsParallelAttack);
	bool AttackWeaponLeft(class AActor* TargetActor, bool IsParallelAttack);
	bool AttackWeaponImpl(enum class ETTLAIWeaponEnum Weapon, class AActor* TargetActor, bool IsParallelAttack);
	bool AttackWeaponHandAndShoulder(class AActor* TargetActor, bool IsLeft, bool IsParallelAttack);
	bool AttackWeaponCurrent(class AActor* TargetActor, float Seconds, bool IsParallelAttack);
	bool AttackWeaponAuto(class AActor* TargetActor, float Seconds, bool IsParallelAttack);
	bool AttackWeaponAll(class AActor* TargetActor, bool IsParallelAttack);
	bool AttackAIPause(float Seconds);
	bool AreComponentsValid();
	void AISpecialActionInitialize();
	void AIReaction(enum class ETTLAIReaction Type, const struct FTTLAIReactionParam& Param);
	void AIProcessOuter();
	void AIProcessExHP4();
	void AIProcessExHP3();
	void AIProcessExHP2();
	void AIProcessExHP1();
	void AIProcess();
	void AIInit();
	void AIHateTargetChanged(class AActor* TargetActor);
	void AIAttackFinished();
	void AIActionChanged(enum class ETTLAIActionType before, enum class ETTLAIActionType After);
	void AddMyHateValue(class AActor* HateTarget, int32 AddValue);
	void AddFriendAIParam(enum class ETTLAIFriendParamType Type, float Value);
	void AddFollowerHateValue(class AActor* HateTarget, int32 AddValue);
	void AddAICallbackDelegate(class UTTLAIActionComponent* AIAction);
	bool ActionWait(class AActor* TargetActor, float Distance);
	bool ActionStraightMove(const struct FVector& TargetDirection, float Time);
	bool ActionSpecial(class AActor* TargetActor);
	bool ActionPatrolTargetPoint(class AActor* TargetActor, enum class ETTLAISlot Slot);
	bool ActionPatrolDirectLocation(class AActor* TargetActor, const struct FVector& TargetLocation, float Distance, bool IsFaceToTargetActor, bool IsForce);
	bool ActionPatrolActionArea(class AActor* TargetActor);
	bool ActionPatrol(class AActor* TargetActor);
	void ActionOutOfSoftCollision(enum class ETTLAIYesNoEnum* OutputYesNo);
	bool ActionNone();
	void ActionKeepOutArea(enum class ETTLAIYesNoEnum* OutputYesNo);
	bool ActionKeepDistance(class AActor* TargetActor, float Distance);
	bool ActionGuard(class AActor* TargetActor, float Seconds);
	bool ActionGoToIncomingTargetPoint(class AActor* TargetActor);
	void ActionGoToDefenceArea(enum class ETTLAIYesNoEnum* OutputYesNo);
	bool ActionGoAroundSide(class AActor* TargetActor, float Distance, float Angle, bool IsMoveVertical, float HeightDifference, float DifferenceRange, bool UseCameraAngle);
	void ActionFriendFollowPlayer(enum class ETTLAIYesNoEnum* OutputYesNo);
	void ActionFollowPlayer(enum class ETTLAIYesNoEnum* OutputYesNo);
	void ActionFollowLeader(enum class ETTLAIYesNoEnum* OutputYesNo);
	bool ActionFastApproach(class AActor* TargetActor, float Distance, bool DoGoAroundSide);
	bool ActionExchangeWeapon(bool IsLeft);
	bool ActionEscape(class AActor* TargetActor);
	bool ActionChase(class AActor* TargetActor, float Distance, bool DoGoAroundSide);
	bool ActionChangeWeapon();
	bool ActionChangeMoveType(enum class ETTLAIMoveMode Mode);
	bool ActionBlockAttack(class AActor* TargetActor, class AActor* SupportActor, float DistanceRate);
};

// 0x48 (0x140 - 0xF8)
// Class DXM.TTLAIDeltaAttackComponent
class UTTLAIDeltaAttackComponent : public UTTLAISpecialActionComponent
{
public:
	float                                        AttackDistance;                                    // 0xF8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AttackTime;                                        // 0xFC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OrbitingRatio;                                     // 0x100(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PositionAngle;                                     // 0x104(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AttackStartDelay;                                  // 0x108(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StandByTimeLimit;                                  // 0x10C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_120E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ActionState;                                       // 0x118(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_120F[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               MoveTarget;                                        // 0x128(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AttackTimeCount;                                   // 0x134(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1210[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAIDeltaAttackComponent* GetDefaultObj();

	void SetMoveTarget(const struct FVector& Location);
	void MoveForTarget(class AActor* Actor);
	void MoveAroundTarget(class AActor* Actor);
	bool IsArrivedMoveTarget(class AActor* Owner);
	struct FVector GetMoveTarget();
	bool ActionAtState4(float DeltaTime, class ATTLCharacter* Owner);
	bool ActionAtState3(float DeltaTime, class ATTLCharacter* Owner);
	bool ActionAtState2(float DeltaTime, class ATTLCharacter* Owner);
	bool ActionAtState1(float DeltaTime, class ATTLCharacter* Owner);
	bool ActionAtState0(float DeltaTime, class ATTLCharacter* Owner);
};

// 0x18 (0x260 - 0x248)
// Class DXM.TTLAIDroneJammerComponent
class UTTLAIDroneJammerComponent : public UTTLAIBaseJammerComponent
{
public:
	class FName                                  VFXSocket;                                         // 0x248(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1216[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAIDroneJammerComponent* GetDefaultObj();

	void Multicast_StopJammerVFX();
	void Multicast_PlayJammerVFX();
};

// 0x190 (0x288 - 0xF8)
// Class DXM.TTLAILightningMoveComponent
class UTTLAILightningMoveComponent : public UTTLAISpecialActionComponent
{
public:
	float                                        MoveScale;                                         // 0xF8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveAngleFar;                                      // 0xFC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveAngleNear;                                     // 0x100(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DoPercent;                                         // 0x104(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LightningMoveSpeed;                                // 0x108(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FinalTargetDistance;                               // 0x10C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1219[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLLightningMoveParam                LightningParam;                                    // 0x128(0x148)(Edit, BlueprintVisible, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UTTLLightningMoveObject*               LightningMoveObject;                               // 0x270(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_121A[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAILightningMoveComponent* GetDefaultObj();

	void SetLightningDirection(int32 MoveCount);
};

// 0x40 (0x138 - 0xF8)
// Class DXM.TTLAISpreadElevenComponent
class UTTLAISpreadElevenComponent : public UTTLAISpecialActionComponent
{
public:
	float                                        ArriveRadius;                                      // 0xF8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AttackStopTime;                                    // 0xFC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ActionState;                                       // 0x100(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1233[0x34];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAISpreadElevenComponent* GetDefaultObj();

	bool ActionAtState6(float DeltaTime, class ATTLCharacter* Owner);
	bool ActionAtState5(float DeltaTime, class ATTLCharacter* Owner);
	bool ActionAtState4(float DeltaTime, class ATTLCharacter* Owner);
	bool ActionAtState3(float DeltaTime, class ATTLCharacter* Owner);
	bool ActionAtState2(float DeltaTime, class ATTLCharacter* Owner);
	bool ActionAtState1(float DeltaTime, class ATTLCharacter* Owner);
	bool ActionAtState0(float DeltaTime, class ATTLCharacter* Owner);
};

// 0x88 (0x178 - 0xF0)
// Class DXM.TTLAlongSplinePathComponent
class UTTLAlongSplinePathComponent : public UActorComponent
{
public:
	class AActor*                                SelfParent;                                        // 0xF0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLSplinePath*                        TTLSplinePathRef;                                  // 0xF8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Velocity;                                          // 0x100(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Acceleration;                                      // 0x104(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxVelocity;                                       // 0x108(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1239[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsRotatorBySplineTangent;                          // 0x114(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsUseGroundHeight;                                 // 0x115(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_123A[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GroundRayOffset;                                   // 0x118(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GroundOffset;                                      // 0x11C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsUsePathRotatoin;                                 // 0x120(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_123B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CurrentTargetKeyInput;                             // 0x128(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ErrorRangeForSplinePoint;                          // 0x12C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              RotationLimit;                                     // 0x130(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         IsSweepMove;                                       // 0x13C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_123D[0x3B];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAlongSplinePathComponent* GetDefaultObj();

	bool TryGetGroundHeightAtSelf(float* Height);
	void SetAcceleration(float Accel);
	void InitCondition();
	float GetAcceleration();
	bool ChangeState(enum class ETTLAlongSplinePath_State State);
};

// 0x178 (0x5B0 - 0x438)
// Class DXM.TTLAnimalAIController
class ATTLAnimalAIController : public AAIController
{
public:
	uint8                                        Pad_1243[0x58];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UBlackboardData>        BlackBoardObj;                                     // 0x490(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLAnimalBrain*                       BrainRef;                                          // 0x4B8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UTTLAnimalBrain>         BrainObjRef;                                       // 0x4C0(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class ATTLCharacterCommon>     CharaClassRef;                                     // 0x4E8(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  OuterGazeName;                                     // 0x510(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTTLGazeContainer                     GazeContainer_Neck;                                // 0x518(0x48)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FTTLOuterEmoteInfo>            EmoteTaskArray;                                    // 0x560(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FName                                  WelcomeTaskName;                                   // 0x570(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UTTLAnimalBrain>           WelcomBrainRef;                                    // 0x578(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FTTLOuterEmoteInfo>            WelcomeEmoteArray;                                 // 0x580(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FTTLWelcomContainer                   WelcomeContainer;                                  // 0x590(0x14)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1244[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLAnimalAIController* GetDefaultObj();

	void OnChangeOuterEmote(enum class ETTLEmoteType EmoteType);
	void Multicast_NotifyChangeingAnimation(enum class ETTLAnimalAnimType AnimType);
	struct FRotator GetEaseRotator(float Delta, float RotationInterp, struct FRotator& CurrentRotation, struct FRotator& TargetRotation);
};

// 0xE8 (0x440 - 0x358)
// Class DXM.TTLAnimalAnimInstance
class UTTLAnimalAnimInstance : public UAnimInstance
{
public:
	uint8                                        Pad_1245[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLGazeContainer                     GazeContainer_Neck;                                // 0x388(0x48)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         IsEndAnim;                                         // 0x3D0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETTLAnimalAnimType                CurrentAnimType;                                   // 0x3D1(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1246[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTL_LookAtIKContainer                LookAtContainer_Neck;                              // 0x3D4(0x10)(BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                         IsNeedIK_Neck;                                     // 0x3E4(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsDebugDraw_Neck;                                  // 0x3E5(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1247[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class ATTLCharacterCommon>     CharaClassRef;                                     // 0x3E8(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  OuterGazeName;                                     // 0x410(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          CrawMontage;                                       // 0x418(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          AttackMontage;                                     // 0x420(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1249[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAnimalAnimInstance* GetDefaultObj();

	void StopNotify_CrawMontage();
	void StopNotify_AttackMontage();
	void SetAnimEnd(bool IsEnd);
	enum class ETTLMontageType GetOnlyMontageType();
	void AnimNotify_IdleToCraw_End(class UAnimNotify* Notify);
	void AnimNotify_CrawToIdle_End(class UAnimNotify* Notify);
	void AnimNotify_Attack_End(class UAnimNotify* Notify);
};

// 0xF0 (0x830 - 0x740)
// Class DXM.TTLAnimalBase
class ATTLAnimalBase : public ACharacter
{
public:
	struct FTTLFxParam                           WelcomeSEParam;                                    // 0x740(0x98)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class AActor*                                GazeTargetActor;                                   // 0x7D8(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDebugLog_Multi;                                  // 0x7E0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1251[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLAnimalInfoContainer               AIInfoContainer;                                   // 0x7E8(0x28)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1252[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ETTLAnimalAnimType                CurrentAnimType;                                   // 0x820(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETTLMontageType                   CurrentOnlyMontageType;                            // 0x821(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1253[0xE];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLAnimalBase* GetDefaultObj();

	void OnRep_ChangeInitMontageType();
	void OnRep_ChangeGazeTarget();
	void OnRep_ChangeAnimType();
	void Multi_StopCurrentOnlyMontage();
	void Multi_SetMontageAnim(enum class ETTLMontageType MontageType);
	int32 GetMontageType();
};

// 0x50 (0x78 - 0x28)
// Class DXM.TTLBrainCommon
class UTTLBrainCommon : public UObject
{
public:
	uint8                                        Pad_1255[0x11];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsUseElapsedTime;                                  // 0x39(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETTLInitTransitionType            InitTransitionType;                                // 0x3A(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1257[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DesiredSpan;                                       // 0x3C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinDesiredSpan;                                    // 0x40(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxDesiredSpan;                                    // 0x44(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  HumanGazeSocketName;                               // 0x48(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ATTLCharacterCommon>       CharaClassRef;                                     // 0x50(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1259[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBrainCommon* GetDefaultObj();

};

// 0x10 (0x88 - 0x78)
// Class DXM.TTLBrainThink
class UTTLBrainThink : public UTTLBrainCommon
{
public:
	uint8                                        Pad_125C[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsContinueCalculate;                               // 0x79(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_125D[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DesireValue;                                       // 0x7C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_125E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBrainThink* GetDefaultObj();

};

// 0x8 (0x80 - 0x78)
// Class DXM.TTLBrainBehavior
class UTTLBrainBehavior : public UTTLBrainCommon
{
public:
	bool                                         IsUseAnimation;                                    // 0x78(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLAnimalAnimType                CurrentAnimType;                                   // 0x79(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsTransitionAtEndAnim;                             // 0x7A(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsTransitionSelf;                                  // 0x7B(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1262[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBrainBehavior* GetDefaultObj();

};

// 0x68 (0x90 - 0x28)
// Class DXM.TTLAnimalBrain
class UTTLAnimalBrain : public UObject
{
public:
	uint8                                        Pad_1265[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  InitTaskTag;                                       // 0x40(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTTLAnimationContainer                AnimContainer;                                     // 0x48(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                         IdDebugDraw;                                       // 0x58(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1266[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLTaskContainer>             TaskArray;                                         // 0x60(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1267[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAnimalBrain* GetDefaultObj();

	enum class ETTLAnimalAnimType GetCurrentBehaviorAnimationType();
};

// 0x8 (0x360 - 0x358)
// Class DXM.TTLAnimInstance
class UTTLAnimInstance : public UAnimInstance
{
public:
	float                                        Speed;                                             // 0x358(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Direction;                                         // 0x35C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLAnimInstance* GetDefaultObj();

	bool UpdateParaameters(class AActor* Actor);
};

// 0x8 (0x330 - 0x328)
// Class DXM.TTLArkGunEffectDummyActor
class ATTLArkGunEffectDummyActor : public AActor
{
public:
	class USceneComponent*                       DummySceneComponent;                               // 0x328(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ATTLArkGunEffectDummyActor* GetDefaultObj();

};

// 0xF8 (0x438 - 0x340)
// Class DXM.TTLProjectileBase
class ATTLProjectileBase : public ATTLActor
{
public:
	uint8                                        Pad_126B[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMeshComponent*                  ProjectileMesh;                                    // 0x360(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          DamageParameter;                                   // 0x368(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Damage;                                            // 0x370(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KnockBackValue;                                    // 0x374(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxAttach;                                          // 0x378(0x98)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        FxAttachPlayback;                                  // 0x410(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TSubclassOf<class ADecalActor>               HitDecal;                                          // 0x428(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsTargetForGravityGun;                             // 0x430(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_126C[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLProjectileBase* GetDefaultObj();

	void SpawnHitDecal(struct FHitResult& HitResult);
	void PlayEnviromentHitVFX(struct FHitResult& HitResult);
	void InitializeProjectile();
	void FinalizeProjectile();
};

// 0x360 (0x798 - 0x438)
// Class DXM.TTLArkGunLaserBase
class ATTLArkGunLaserBase : public ATTLProjectileBase
{
public:
	TSubclassOf<class AActor>                    BulletClass;                                       // 0x438(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Range;                                             // 0x440(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Speed;                                             // 0x444(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_126E[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLArkGunChild>               ChildLaser;                                        // 0x478(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1270[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           FxHitEffect;                                       // 0x4A0(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        FxHitEffectPlayBack;                               // 0x538(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxLightningEffect;                                 // 0x550(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        FxLightningPlayBack;                               // 0x5E8(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        EffectRange;                                       // 0x600(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1271[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                EffectTargetActor;                                 // 0x608(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         NeedsCheckEnergizationRange;                       // 0x610(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1272[0x27];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                IgnoredActor;                                      // 0x638(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1273[0x80];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TraceRadius;                                       // 0x6C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SortTime;                                          // 0x6C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1274[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLArkGunEffectDummyActor*            DummyActorForEffect;                               // 0x6D8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           DebugEffect;                                       // 0x6E0(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        DebugPlayBack;                                     // 0x778(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1275[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLArkGunLaserBase* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class DXM.TTLArkGunTargetInterface
class ITTLArkGunTargetInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ITTLArkGunTargetInterface* GetDefaultObj();

};

// 0x50 (0x3B0 - 0x360)
// Class DXM.TTLBaseTankAnimInstance
class UTTLBaseTankAnimInstance : public UTTLAnimInstance
{
public:
	class ATTLBaseTankCharacter*                 OwnerTank;                                         // 0x360(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Root_LookAtLocation;                               // 0x368(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Root_LookAtAlpha;                                  // 0x374(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Root_TransformTranslation;                         // 0x378(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Root_TransformAlpha;                               // 0x384(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Body_LookAtLocation;                               // 0x388(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Body_LookAtAlpha;                                  // 0x394(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Turret_LookAtLocation;                             // 0x398(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Turret_LookAtAlpha;                                // 0x3A4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Cover_Alpha;                                       // 0x3A8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1282[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBaseTankAnimInstance* GetDefaultObj();

	void Initialize(class ATTLBaseTankCharacter* Owner);
	struct FVector CalcBarrelLookAtLocation();
};

// 0x0 (0x3B0 - 0x3B0)
// Class DXM.TTLStrongTankAnimInstance
class UTTLStrongTankAnimInstance : public UTTLBaseTankAnimInstance
{
public:

	static class UClass* StaticClass();
	static class UTTLStrongTankAnimInstance* GetDefaultObj();

};

// 0x0 (0x3B0 - 0x3B0)
// Class DXM.TTLArkTankAnimInstance
class UTTLArkTankAnimInstance : public UTTLStrongTankAnimInstance
{
public:

	static class UClass* StaticClass();
	static class UTTLArkTankAnimInstance* GetDefaultObj();

	struct FVector CalcMainWeaponLookAtLocation();
	float CalcMainWeaponLookAtAlpha();
};

// 0x38 (0xEE0 - 0xEA8)
// Class DXM.TTLEnemyLongRangeWeapon
class ATTLEnemyLongRangeWeapon : public ATTLLongRangeWeapon
{
public:
	bool                                         IsAttacking;                                       // 0xEA8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1289[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponent*                LaserWeaponMesh;                                   // 0xEB0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LaserMuzzleSocketName;                             // 0xEB8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                LaserTargetActor;                                  // 0xEC0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                       LoopEffectAttachWeaponMesh;                        // 0xEC8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LoopEffectAttachSocketName;                        // 0xED0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_128A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLEnemyLongRangeWeapon* GetDefaultObj();

	void TryAttack(const struct FVector& TargetPos);
	void StartAttack(class AActor* LaserTargetActor, class USkeletalMeshComponent* LaserWeaponMesh, class FName LaserMuzzleSocketName);
	void SetUpMuzzle(class USkeletalMeshComponent* Mesh, class FName MuzzleName);
	bool IsArkGunUnFired();
	bool IsArkGunCharging();
	void EndAttack();
};

// 0x0 (0xEE0 - 0xEE0)
// Class DXM.TTLArkTankEnemyLongRangeWeapon
class ATTLArkTankEnemyLongRangeWeapon : public ATTLEnemyLongRangeWeapon
{
public:

	static class UClass* StaticClass();
	static class ATTLArkTankEnemyLongRangeWeapon* GetDefaultObj();

};

// 0x80 (0x7C0 - 0x740)
// Class DXM.TTLCharacter
class ATTLCharacter : public ACharacter
{
public:
	struct FTTLLayoutSetting                     LayoutSetting;                                     // 0x740(0x30)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	uint8                                        Pad_12B9[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         RemoveMarkerHUD;                                   // 0x771(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12BA[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLItemDropComponent*                 ItemDrop;                                          // 0x778(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12BB[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLEventSequencerComponent*           TTLEventSequencer;                                 // 0x788(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBadStatusVFXComponent*             TTLBadStatusVFX;                                   // 0x790(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HasNeedsForBadStatusVFXComp;                       // 0x798(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBadStatusVFXSize              SizeForBadStatusVFX;                               // 0x799(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HasNeedsForFlashDegree;                            // 0x79A(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12BC[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LockOn_Scale;                                      // 0x79C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LockOn_HUDScale;                                   // 0x7A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12BD[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLBossWeakDamageComponent*           WeakCameraShake_Component;                         // 0x7B0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12BE[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLCharacter* GetDefaultObj();

	void WeakCameraShake_Set(class AActor* InDamageCauser, const struct FVector& InLocation, float InDamage, bool InIsDefeat);
	void UpdateAbnormalStatusEndForBoss(float DeltaSeconds, enum class ETTLEAbnormalStatusType Type);
	void SetEventStart(class FName EventName);
	void SetEventResumeGame(class FName EventName);
	void SetEventMessageWait(class FName CurrentAnimName);
	void SetEventFinish(class FName EventName);
	void ServerSetInvincible(bool IsInvincible);
	void ServerCreateBulletC(class AActor* Weapon, const struct FTransform& Transform, TSubclassOf<class ATTLProjectileBase> BulletClass, const struct FVector& bulletDirection);
	void ReturnToInitialLocation(bool IsForAlive);
	void ResetEventMessageWait();
	int32 PartsDefence_GetIndex(class AActor* AttackerActor);
	void OnBadStatusVFXStart_Implementation(enum class ETTLEAbnormalStatusType Type, class UTTLBadStatusVFXComponent* badStatusComp, bool IsHeal);
	void OnBadStatusVFXStart(enum class ETTLEAbnormalStatusType Type, class UTTLBadStatusVFXComponent* badStatusComp, bool IsHeal);
	void OnBadStatusVFXEnd_Implementation(enum class ETTLEAbnormalStatusType Type, class UTTLBadStatusVFXComponent* badStatusComp, bool IsHeal);
	void OnBadStatusVFXEnd(enum class ETTLEAbnormalStatusType Type, class UTTLBadStatusVFXComponent* badStatusComp, bool IsHeal);
	void OnAbnormalStatusEndForBoss(enum class ETTLEAbnormalStatusType Type);
	void OnAbnormalStatusBeginForBoss(enum class ETTLEAbnormalStatusType Type);
	void MulticastSetInvincible(bool IsInvincible);
	void MulticastCreateBulletC(class AActor* Weapon, const struct FTransform& Transform, TSubclassOf<class ATTLProjectileBase> BulletClass, const struct FVector& bulletDirection);
	bool IsMyControledCharacter();
	void GetEyeLocationAndForwardVector_Implementation(struct FVector* EyeLocation, struct FVector* EyeForwardVector);
	void GetEyeLocationAndForwardVector(struct FVector* EyeLocation, struct FVector* EyeForwardVector);
	class UTTLDamageParameterComponent* GetDamageParameterComponentBP(int32 DamageNo);
	class UTTLDamageParameterComponent* GetDamageParameterComponent(int32 DamageNo);
	void ChangeCharacterType(enum class ETTLEStatusType TargerType);
	bool CanTakeDamageBP();
	bool CanStartAbnormalStatus(enum class ETTLEAbnormalStatusType Type);
	void AddSkillFromList(TArray<class FName>& InputSkillList, bool UseAddValue, bool SkipVP);
	void AddOnMissionSkill();
};

// 0xD90 (0x1550 - 0x7C0)
// Class DXM.TTLBaseTankCharacter
class ATTLBaseTankCharacter : public ATTLCharacter
{
public:
	class USkeletalMeshComponent*                SelfMesh;                                          // 0x7C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBaseTankAnimInstance*              SelfAnimInst;                                      // 0x7C8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLFirearmControlComponent*           SelfFirearmCtrl;                                   // 0x7D0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLCharacterInfoHUDComponent*         SelfInfoHUD;                                       // 0x7D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCapsuleComponent*                     SelfCapsuleCollide;                                // 0x7E0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                         SelfBoxCollide;                                    // 0x7E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLSplineComponent*                   SelfSpline;                                        // 0x7F0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBasicStatusComponent*              SelfStatus;                                        // 0x7F8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLAIActionBaseTankComponent*         SelfAIAct;                                         // 0x800(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12CC[0xA8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFirearmInfo                       Shoot_Info;                                        // 0x8B0(0x648)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          Shoot_DamageParameter;                             // 0xEF8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12CD[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           Turret_SwirlingEffectResource;                     // 0xF10(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  Turret_HeadSocketName;                             // 0xFA8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Turret_BarrelSocketName;                           // 0xFB0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Turret_BarrelDirection;                            // 0xFB8(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Turret_MuzzleOffset;                               // 0xFC4(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Turret_TurnSpeed;                                  // 0xFD0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Turret_PitchBase;                                  // 0xFD4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             Turret_PitchRange;                                 // 0xFD8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Turret_YawRange;                                   // 0xFE0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Turret_CoverSpeed;                                 // 0xFE4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Turret_DeviationRate;                              // 0xFE8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Turret_DeviationTargetSpeedLimit;                  // 0xFEC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Turret_OuterDelayTime;                             // 0xFF0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12CE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlayback                        Turret_SwirlingEffect;                             // 0xFF8(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class AActor*                                Turret_LookAtActor;                                // 0x1010(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12CF[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Move_PathResearchInterval;                         // 0x1040(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Move_MaxSpeed;                                     // 0x1044(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Move_AccelerateTime;                               // 0x1048(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Move_TurnSpeed;                                    // 0x104C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Move_MoveEffectResource;                           // 0x1050(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Move_StopEffectResource;                           // 0x10E8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Move_MoveEffect;                                   // 0x1180(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class AActor*                                Move_TargetActor;                                  // 0x1198(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLSplinePath*                        Move_TargetPath;                                   // 0x11A0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                Move_WaitActor;                                    // 0x11A8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12D0[0xA8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MicroFreeze_Time;                                  // 0x1258(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MicroFreeze_DecelerationRate;                      // 0x125C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector4                              MicroFreeze_BodyInclination;                       // 0x1260(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12D1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             Knockback_Low;                                     // 0x1274(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             Knockback_Middle;                                  // 0x127C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             Knockback_High;                                    // 0x1284(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12D2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector4                              Knockback_LowBodyInclination;                      // 0x1290(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector4                              Knockback_MiddleBodyInclination;                   // 0x12A0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector4                              Knockback_HighBodyInclination;                     // 0x12B0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12D3[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Down_Time;                                         // 0x12D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Down_TurretPitch;                                  // 0x12DC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector4                              Down_BodyInclination;                              // 0x12E0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12D4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Suspension_BaseInclinationAngle;                   // 0x12F4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Suspension_CentroidInclinationAngle;               // 0x12F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Suspension_BodyInclinationRate;                    // 0x12FC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Suspension_AccelerationInclinationAddRate;         // 0x1300(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Suspension_AccelerationInclinationDecRate;         // 0x1304(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Suspension_TurnInclinationAddRate;                 // 0x1308(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Suspension_TurnInclinationDecRate;                 // 0x130C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Suspension_ShootInclinationAddRate;                // 0x1310(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Suspension_ShootInclinationDecRate;                // 0x1314(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12D5[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           HoverEffect_Asset;                                 // 0x1368(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class FName>                          HoverEffect_AttachSocketNameList;                  // 0x1400(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FTTLFxPlayback>                HoverEffect_PlaybackList;                          // 0x1410(0x10)(BlueprintVisible, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_12D6[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           LandingEffect_Asset;                               // 0x1428(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                         Multiplay_IsTransInterpolation;                    // 0x14C0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12D7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Multiplay_TransInterpolateTime;                    // 0x14C4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12D8[0x88];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseTankCharacter* GetDefaultObj();

	void OnStatusBeOverriddenDelegate(class UTTLBasicStatusComponent* BasicStatus, struct FTTLEnemyParam& EnemyParam);
	void OnCaughtByDelegate(class AActor* NewOwner);
	void Move_StartFalling();
	void Move_MultiplayStop(class AActor* TargetActor, float TargetDistance);
	void Move_MultiplayStartMoveToPath(class ATTLSplinePath* Path);
	void Move_MultiplayStartMoveToLocation(const struct FVector& TargetLocation, float Distance, bool IsInfinite, class AActor* TargetActor, float TargetDistance);
	void Move_MultiplayStartMoveToActor(class AActor* TargetActor, float Distance, bool IsInfinite);
	void Move_Landing(const struct FVector& Location, const struct FVector& Normal);
	void Initialize();
	void DamageReaction_OnTakeAnyDamageDelegate(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
};

// 0xF8 (0x1648 - 0x1550)
// Class DXM.TTLStrongTankPawn
class ATTLStrongTankPawn : public ATTLBaseTankCharacter
{
public:
	TSubclassOf<class ATTLExplosionActor>        ExplosionClass;                                    // 0x1550(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeStartTime;                                  // 0x1558(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeDamage;                                     // 0x155C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeKnockOut;                                   // 0x1560(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeKnockBack;                                  // 0x1564(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeRadius;                                     // 0x1568(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeTime;                                       // 0x156C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeTmpRise;                                    // 0x1570(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeMinDamageScale;                             // 0x1574(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxExplodeDamageRadius;                            // 0x1578(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ExplodeFriendlyFireEnable;                         // 0x157C(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12D9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ExplodeParamName;                                  // 0x1580(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxWreck;                                           // 0x1588(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  WreckVFXSocketName;                                // 0x1620(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12DA[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlayback                        FxPlaybackWreck;                                   // 0x1630(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ATTLStrongTankPawn* GetDefaultObj();

	void Wreck_BP();
	void Wreck();
	bool IsWrecked();
	void Explode();
};

// 0x888 (0x1ED0 - 0x1648)
// Class DXM.TTLArkTankPawn
class ATTLArkTankPawn : public ATTLStrongTankPawn
{
public:
	class FName                                  WeaponSocketName;                                  // 0x1648(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CenterWeaponId;                                    // 0x1650(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLEnemyLongRangeWeapon>  CenterWeaponClass;                                 // 0x1658(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLProjectileBase>        CenterBulletClass;                                 // 0x1660(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLWeaponType                    CenterWeaponType;                                  // 0x1668(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12DC[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                CenterWeaponMeshName;                              // 0x1670(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CenterWeaponSocket;                                // 0x1680(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxCenterWeapon;                                    // 0x1688(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           CenterLoopVFX;                                     // 0x1720(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  RightWeaponID;                                     // 0x17B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLEnemyLongRangeWeapon>  RightWeaponClass;                                  // 0x17C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLProjectileBase>        RightBulletClass;                                  // 0x17C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLWeaponType                    RightWeaponType;                                   // 0x17D0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12DD[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                RightWeaponMeshName;                               // 0x17D8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RightWeaponSocket;                                 // 0x17E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxRightWeapon;                                     // 0x17F0(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           RightLoopVFX;                                      // 0x1888(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  LeftWeaponID;                                      // 0x1920(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLEnemyLongRangeWeapon>  LeftWeaponClass;                                   // 0x1928(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLProjectileBase>        LeftBulletClass;                                   // 0x1930(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLWeaponType                    LeftWeaponType;                                    // 0x1938(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12DE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                LeftWeaponMeshName;                                // 0x1940(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LeftWeaponSocket;                                  // 0x1950(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxLeftWeapon;                                      // 0x1958(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           LeftLoopVFX;                                       // 0x19F0(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxArkgunChargeInternal;                            // 0x1A88(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxArkgunChargeAlong;                               // 0x1B20(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxArkgunChargePoint;                               // 0x1BB8(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxArkgunShootPoint;                                // 0x1C50(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        MaxMoveSpeedRunAway;                               // 0x1CE8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsRunAway;                                         // 0x1CEC(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12DF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ArkgunPitchBase;                                   // 0x1CF0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             ArkgunPitchRange;                                  // 0x1CF4(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12E0[0x44];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlayback                        PlaybackArkgunChargeInternal[0x6];                 // 0x1D40(0x90)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        PlaybackArkgunChargeAlong[0x6];                    // 0x1DD0(0x90)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        PlaybackArkgunChargePoint[0x2];                    // 0x1E60(0x30)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        PlaybackArkgunShootPoint[0x2];                     // 0x1E90(0x30)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	enum class ETTLArkGunnerBothSidePoint        BothSidePoint;                                     // 0x1EC0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_12E1[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLArkTankPawn* GetDefaultObj();

	void SetWeaponLookAtLocation(const struct FVector& Location);
	void SetWeaponLookAtAlpha(float Alpha);
	void MulticastStartBothSideAttack(class AActor* TargetActor);
	void MulticastEndBothSideAttack();
	struct FVector GetWeaponLookAtLocation();
	float GetWeaponLookAtAlpha();
	void ArkTankBoneControl(class AActor* Target, float WeaponSpeed);
};

// 0x10 (0x3C0 - 0x3B0)
// Class DXM.TTLArmorJammerAnimInstance
class UTTLArmorJammerAnimInstance : public UTTLBaseTankAnimInstance
{
public:
	class UAnimMontage*                          JammerMontage;                                     // 0x3B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsJammerOpendFlag;                                 // 0x3B8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12E2[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLArmorJammerAnimInstance* GetDefaultObj();

};

// 0x28 (0x1578 - 0x1550)
// Class DXM.TTLArmorTankCharacter
class ATTLArmorTankCharacter : public ATTLBaseTankCharacter
{
public:
	struct FVector2D                             Knockback_Cannon;                                  // 0x1550(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12E3[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector4                              Knockback_CannonBodyInclination;                   // 0x1560(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12E4[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLArmorTankCharacter* GetDefaultObj();

	void Shoot_Shoot(class AActor* TargetActor);
	bool IsCannonKnockback();
};

// 0x8 (0x1580 - 0x1578)
// Class DXM.TTLArmorJammerCharacter
class ATTLArmorJammerCharacter : public ATTLArmorTankCharacter
{
public:
	class UTTLArmorJammerAnimInstance*           JammerAnim;                                        // 0x1578(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ATTLArmorJammerCharacter* GetDefaultObj();

};

// 0x138 (0x4C0 - 0x388)
// Class DXM.TTLPawn
class ATTLPawn : public APawn
{
public:
	struct FTTLLayoutSetting                     LayoutSetting;                                     // 0x388(0x30)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	uint8                                        Pad_1301[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         RemoveMarkerHUD;                                   // 0x3B9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1302[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLItemDropComponent*                 ItemDrop;                                          // 0x3C0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBadStatusVFXComponent*             TTLBadStatusVFX;                                   // 0x3C8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HasNeedsForBadStatusVFXComp;                       // 0x3D0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBadStatusVFXSize              SizeForBadStatusVFX;                               // 0x3D1(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HasNeedsForFlashDegree;                            // 0x3D2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1303[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LockOn_Scale;                                      // 0x3D4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LockOn_HUDScale;                                   // 0x3D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsTransInterpolation;                              // 0x3DC(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1304[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TransInterpolateTime;                              // 0x3E0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1305[0xA4];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLAISettingModule                   AISetting;                                         // 0x488(0x20)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1306[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLBossWeakDamageComponent*           WeakCameraShake_Component;                         // 0x4B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ATTLPawn* GetDefaultObj();

	void WeakCameraShake_Set(class AActor* InDamageCauser, const struct FVector& InLocation, float InDamage, bool InIsDefeat);
	void UpdateAbnormalStatusEndForBoss(float DeltaSeconds, enum class ETTLEAbnormalStatusType Type);
	void SetEventStart(class FName EventName);
	void SetEventResumeGame(class FName EventName);
	void SetEventFinish(class FName EventName);
	void ServerCreateBullet(class AActor* Weapon, const struct FTransform& Transform, TSubclassOf<class ATTLProjectileBase> BulletClass, const struct FVector& bulletDirection);
	void ReturnToInitialPosition(bool IsForAlive);
	int32 PartsDefence_GetIndex(class AActor* AttackerActor);
	void OnBadStatusVFXStart_Implementation(enum class ETTLEAbnormalStatusType Type, class UTTLBadStatusVFXComponent* badStatusComp, bool IsHeal);
	void OnBadStatusVFXStart(enum class ETTLEAbnormalStatusType Type, class UTTLBadStatusVFXComponent* badStatusComp, bool IsHeal);
	void OnBadStatusVFXEnd_Implementation(enum class ETTLEAbnormalStatusType Type, class UTTLBadStatusVFXComponent* badStatusComp, bool IsHeal);
	void OnBadStatusVFXEnd(enum class ETTLEAbnormalStatusType Type, class UTTLBadStatusVFXComponent* badStatusComp, bool IsHeal);
	void OnAbnormalStatusEndForBoss(enum class ETTLEAbnormalStatusType Type);
	void OnAbnormalStatusBeginForBoss(enum class ETTLEAbnormalStatusType Type);
	void MulticastCreateBullet(class AActor* Weapon, const struct FTransform& Transform, TSubclassOf<class ATTLProjectileBase> BulletClass, const struct FVector& bulletDirection);
	void GetEyeLocationAndForwardVector_Implementation(struct FVector* EyeLocation, struct FVector* EyeForwardVector);
	void GetEyeLocationAndForwardVector(struct FVector* EyeLocation, struct FVector* EyeForwardVector);
	class UTTLDamageParameterComponent* GetDamageParameterComponentBP(int32 DamageNo);
	bool CanTakeDamageBP();
	bool CanStartAbnormalStatus(enum class ETTLEAbnormalStatusType Type);
};

// 0x0 (0x4C0 - 0x4C0)
// Class DXM.TTLArmorPawn
class ATTLArmorPawn : public ATTLPawn
{
public:

	static class UClass* StaticClass();
	static class ATTLArmorPawn* GetDefaultObj();

};

// 0x570 (0x8D0 - 0x360)
// Class DXM.TTLArsenalAnimInstance
class UTTLArsenalAnimInstance : public UTTLAnimInstance
{
public:
	uint8                                        Pad_134F[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               InputDirection;                                    // 0x390(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnabledInputDirection;                           // 0x39C(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsPlayerControllled;                               // 0x39D(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1350[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsLocalPlayerControllled;                          // 0x39F(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InputThreshold;                                    // 0x3A0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastDirection;                                     // 0x3A4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DirectionInterpolated;                             // 0x3A8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        QuickMoveVariationTime;                            // 0x3AC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1352[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RiseSpeed;                                         // 0x3C4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WalkingAnimePlayRate;                              // 0x3C8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsBoosting;                                        // 0x3CC(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsFlying;                                          // 0x3CD(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDashing;                                         // 0x3CE(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsQuickMoving;                                     // 0x3CF(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsFalling;                                         // 0x3D0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsLanding;                                         // 0x3D1(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsGrounded;                                        // 0x3D2(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsJumpCharging;                                    // 0x3D3(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsJumping;                                         // 0x3D4(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDescenting;                                      // 0x3D5(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsProgressBoostingExceptDescent;                   // 0x3D6(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsAutoRunning;                                     // 0x3D7(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsNotArmBlendForShoulder;                          // 0x3D8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsJumpingUpToDown;                                 // 0x3D9(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1353[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        JumpMotionScale;                                   // 0x3DC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LandedMotionScale;                                 // 0x3E0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UseLongLandedMotion;                               // 0x3E4(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsRising;                                          // 0x3E5(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDamaged;                                         // 0x3E6(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1354[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DamageDirection;                                   // 0x3E8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLDamageState                   DamageState;                                       // 0x3EC(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsWrecked;                                         // 0x3ED(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsTurning;                                         // 0x3EE(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1355[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TurnDirection;                                     // 0x3F0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         GuardTurning;                                      // 0x3F4(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsLeftWeaponShieldGuard;                           // 0x3F5(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsRightWeaponShieldGuard;                          // 0x3F6(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsLeftAndRightWeaponShieldGuard;                   // 0x3F7(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsBlendFrontQuickMoveVariation;                    // 0x3F8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLArsenalTurnMotionType         TurnMotionType;                                    // 0x3F9(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsRolling;                                         // 0x3FA(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDodgeInvincible;                                 // 0x3FB(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsPicking;                                         // 0x3FC(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsCatchableLeft;                                   // 0x3FD(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         TargetCaught;                                      // 0x3FE(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsThrowing;                                        // 0x3FF(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ThrowAiming;                                       // 0x400(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsCatching;                                        // 0x401(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CatchReady;                                        // 0x402(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsTargetPickable;                                  // 0x403(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsTargetWeapon;                                    // 0x404(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsMovingInput;                                     // 0x405(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsShootR;                                          // 0x406(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsShootL;                                          // 0x407(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1359[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsLightningMoveInput;                              // 0x40A(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsSniperRifleMode;                                 // 0x40B(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              AimRotation;                                       // 0x40C(0xC)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        SniperTurnRate;                                    // 0x418(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsStepTurn;                                        // 0x41C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_135A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WaitStepTurnRate;                                  // 0x420(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WaitStepTurnLerpRate;                              // 0x424(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_135C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               BoneOffsetArms;                                    // 0x42C(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetArmsMinus;                               // 0x438(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetLegs;                                    // 0x444(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetLegsMinus;                               // 0x450(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         NeedsProcessIK;                                    // 0x45C(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_135D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HipsTranslationRate;                               // 0x460(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HipsTranslationLerpSpeed;                          // 0x464(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               HipsTranslation;                                   // 0x468(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftFootTranslationRate;                           // 0x474(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LeftFootIKTranslation;                             // 0x478(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightFootTranslationRate;                          // 0x484(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RightFootIKTranslation;                            // 0x488(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftFootLookAtRate;                                // 0x494(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LeftFootLookAtPosition;                            // 0x498(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightFootLookAtRate;                               // 0x4A4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RightFootLookAtPosition;                           // 0x4A8(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FootTranslationLerpSpeed;                          // 0x4B4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AnimGraph_IsBlendFullBodyForCatchAndJumpCharge;    // 0x4B8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_135F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AnimGraph_CloseRangeAttackBlendTime;               // 0x4BC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AnimGraph_OffsetArmAlphaL;                         // 0x4C0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AnimGraph_OffsetArmAlphaR;                         // 0x4C4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AnimGraph_RootOffsetArmAlphaL;                     // 0x4C8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AnimGraph_RootOffsetArmAlphaR;                     // 0x4CC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLArsenalIKController*               ArsenalControllerIK;                               // 0x4D0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLArsenalIKType                 IKType;                                            // 0x4D8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1360[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MoveTimeByStop;                                    // 0x4DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GetOffMoveTimeByStop;                              // 0x4E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1361[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UTTLArsenalIKController_StopBySpeedInterp> IKController_StopBySpeedInterpClass;               // 0x4E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDebugDrawArsenalIK;                              // 0x4F0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDebugDrawEnableStepTurn;                         // 0x4F1(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDebugDrawEnableSpeed;                            // 0x4F2(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDebugDrawStopStartTime;                          // 0x4F3(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDebugDrawDamageState;                            // 0x4F4(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDebugDrawOthers;                                 // 0x4F5(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDebugDrawIKParameter;                            // 0x4F6(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDebugDrawCamera;                                 // 0x4F7(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsReactivating;                                    // 0x4F8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsReactivateEnding;                                // 0x4F9(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsTransport;                                       // 0x4FA(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsPutDownNow;                                      // 0x4FB(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSpinShoot;                                       // 0x4FC(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSpinShootLeft;                                   // 0x4FD(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSpinShootOnGround;                               // 0x4FE(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1362[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxJoggingTime;                                    // 0x500(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JoggingTime;                                       // 0x504(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          WreckedAnimMontage;                                // 0x508(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          WreckedAnimMontageForEject;                        // 0x510(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          LeftArmWrekMontage[0x3];                           // 0x518(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          RightArmWrekMontage[0x3];                          // 0x530(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          ReactivateMontage;                                 // 0x548(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          LeftCatchThrowMontages[0x8];                       // 0x550(0x40)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          RightCatchThrowMontages[0x8];                      // 0x590(0x40)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                     NPCSpecialWait;                                    // 0x5D0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsPlayingSpecialWait;                              // 0x5D8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1363[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          SingleShootStiffMontage;                           // 0x5E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1364[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        CloseRangeAttack_ComboIgnoreActorList;             // 0x600(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class UAnimMontage*                          CloseRangeAttack_BothAnimMontage;                  // 0x610(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1365[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ETTLArsenalCloseRangeAttackType   CloseRangeAttack_Type;                             // 0x630(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLArsenalCloseRangeAttackPhase  CloseRangeAttack_Phase;                            // 0x631(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1366[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         CloseRangeAttack_IsPunchStance;                    // 0x638(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1367[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          Tsubazeriai_RRMontage;                             // 0x648(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          Tsubazeriai_RLMontage;                             // 0x650(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          Tsubazeriai_LRMontage;                             // 0x658(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          Tsubazeriai_LLMontage;                             // 0x660(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          Tsubazeriai_CurrentMontage;                        // 0x668(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          JumpChargeMontage;                                 // 0x670(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               UnderVectorForSpine;                               // 0x678(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1369[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              CurrentSpineRotator;                               // 0x688(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                              SpineAddOffset;                                    // 0x694(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                              SpineMultipleOffset;                               // 0x6A0(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_136A[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SpinePitchLimitDegree;                             // 0x6B8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_136B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SpineOffsetAlpha;                                  // 0x6C4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpineAlphaLerpRate;                                // 0x6C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_136C[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         EnableRootArmOffsetL;                              // 0x6CE(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         EnableRootArmOffsetR;                              // 0x6CF(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         EnableArmOffsetL;                                  // 0x6D0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         EnableArmOffsetR;                                  // 0x6D1(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_136D[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ArmOffsetAlphaL;                                   // 0x6D4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ArmOffsetAlphaR;                                   // 0x6D8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RootArmOffsetAlphaL;                               // 0x6DC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RootArmOffsetAlphaR;                               // 0x6E0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              RootArmOffsetRotationL;                            // 0x6E4(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                              RootArmOffsetRotationR;                            // 0x6F0(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                              ArmOffsetRotationL;                                // 0x6FC(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                              ArmOffsetRotationR;                                // 0x708(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                              DefaultRootArmOffsetRotationL;                     // 0x714(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                              DefaultRootArmOffsetRotationR;                     // 0x720(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_136F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLArsenalArmOffsetParam             ArmOffsetParamL;                                   // 0x730(0x14)(BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FTTLArsenalArmOffsetParam             ArmOffsetParamR;                                   // 0x744(0x14)(BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FTTLArsenalArmMontageSettings         ArmMontageSetL;                                    // 0x758(0x38)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FTTLArsenalArmMontageSettings         ArmMontageSetR;                                    // 0x790(0x38)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        ArmOffsetFadeRate;                                 // 0x7C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETTLCaptureWeaponType             UseCaptureWeaponType;                              // 0x7CC(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1371[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        UseCaptureWeaponPhase;                             // 0x7D0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1372[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          WaitMontageBase;                                   // 0x7D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UAnimMontage*>                  WaitMontageList;                                   // 0x7E0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UAnimMontage*                          WaitMontageMenuBase;                               // 0x7F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UAnimMontage*>                  WaitMontageMenuList;                               // 0x7F8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UAnimMontage*                          WreckAnimMontagePlaying;                           // 0x808(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          WreckLeftArmAnimMontagePlaying;                    // 0x810(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          WreckRightArmAnimMontagePlaying;                   // 0x818(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          CaptureLargeLaserMontage;                          // 0x820(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          CaptureOgreSwordMontage;                           // 0x828(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          CaptureCatchableFinMontage;                        // 0x830(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1374[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsInterpCloseRangeAttackEndRotation;               // 0x840(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsInterpCloseRangePunchStartRotation;              // 0x841(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1375[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ETTLArsenalAnimState_Transport    AnimState_Transport;                               // 0x843(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1376[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ETTLArsenalSniperModeAttackType   SniperModeAttackType;                              // 0x848(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1377[0x27];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class UTTLCameraCheck>         FrontCheckClass;                                   // 0x870(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UTTLCameraCheck>         SideCheckClass;                                    // 0x898(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLCameraCheck*                       CameraFrontCheckPtr;                               // 0x8C0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLCameraCheck*                       CameraSideCheckPtr;                                // 0x8C8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTTLArsenalAnimInstance* GetDefaultObj();

	void TryThrowActorBP(class ATTLCharacterCommon* Character);
	bool TryTargetKnockBackEventInTsubazeriaiLose();
	bool TryFootTraceCpp(class FName CheckSocketName, class FName FootSocketName, float BaseHeight, float CheckRange, float* HitHeight, float* FootHeight, struct FVector* FloorNormal, struct FVector* FootLocation, bool TraceComplex);
	void TryCatchActorBP(class UTTLArsenalCatchableActorMovement* CatchableActorMovement);
	void StopThrowingAnimation();
	void StopReactiveMontage(bool StopImmediately);
	void StopMovableUnitAction(enum class ETTLEPartsMovableType Type, float DurationToStop);
	bool StartUseCaptureWeaponCPP(enum class ETTLCaptureWeaponType Type);
	void StartSingleShoot(bool IsLeft, class ATTLLongRangeWeapon* Weapon);
	void StartMovableUnitAction(enum class ETTLEPartsMovableType Type, float DurationToStop);
	void ShoulderCannon_AnimNotify_ShootCannonImpl();
	void ShoulderCannon_AnimNotify(class ATTLCharacterCommon* SelfArsenal);
	void SetArsenalBaseCampMontageSection(class FName& SectionName);
	void SetArmOffsetFadeEvent(bool IsLeft, float FadeTime);
	bool Rule_IsSpeedWalkToWait();
	bool Rule_IsSpeedWaitToWalk();
	bool Rule_IsSpeedDashToDashEnd();
	bool Rule_IsSpeedAirWalkToWalkEnd();
	bool Rule_IsSpeedAirWalkToWait();
	bool Rule_IsSpeedAirWaitToWalk();
	bool Rule_IsMoveInputAvailable();
	bool Rule_IsInAir();
	bool Rule_IsConditionJoggingToDash();
	bool Rule_IsChangeStateWalkToWait();
	bool Rule_IsChangeStateWalkToJogging();
	bool Rule_IsChangeStateWaitToWalk();
	bool Rule_IsChangeStateLandingToWait();
	bool Rule_IsChangeStateJoggingToWait();
	bool Rule_IsChangeStateJoggingToBeforeDash();
	bool Rule_IsChangeStateDashToDashStop();
	bool Rule_GoToNextStateImmiediatelyWhenMoving();
	bool Rule_DoesStartDamaged();
	bool Rule_DoesFinishDamaged();
	bool Rule_DashStartToDash();
	bool Rule_ChangeStatetoLanding();
	bool Rule_BeforeDashJumpInToStartDash();
	void ResetSpineOffset();
	void ProcessWreckMotion();
	void ProcessWeaponWreckMotion(bool IsInAir, bool IsWreck, class ATTLCharacterCommon* OwnerArsenal);
	void ProcessShotAttack_MotionProcess(float DeltaSeconds, bool IsLeft);
	void ProcessShotAttack_ArmOffset(float DeltaSeconds, bool IsLeft);
	void ProcessDirectionInterpolation(float DeltaSeconds);
	void ProcessDecreaseSpineRotAlpha(float DeltaSeconds);
	void ProcessCaptureWeaponCPP();
	void ProcessCalcSpineRotation(float DeltaSeconds, bool IsRestoring, class ATTLCharacterCommon* SelfArsenal, class ATTLShoulderCannon* CannonWeapon);
	void ProcessBaseCampOrMenuWaitMontage(class ATTLCharacterCommon* Character);
	void ProcessAttackCpp(float DeltaSeconds);
	bool PlayMontages(class ATTLCharacterCommon* Character, bool IsLeft, class UAnimMontage* MontageReload, class UAnimMontage* MontagePurge, class UAnimMontage* MontageTake, class UAnimMontage* MontageUnFire, class UAnimMontage* MontagePurgeCaughtWeapon);
	void PlayMontageBaseCampWait(class ATTLCharacterCommon* Character);
	void PickEnd();
	void OnShootBulletEvent(bool IsLeft);
	void Missile_AnimNotifyMotionProcess(class ATTLCharacterCommon* SelfArsenal);
	bool IsTsubazeriaiPhase(bool IsContainedAfterSettlement);
	bool IsSingleShootWeapon(bool IsLeft, class ATTLWeaponBase* Weapon);
	float GetOffsetArmAlphaFadeOutTime(bool IsLeft);
	void Funnel_AnimNotifyMotionProcess(class ATTLCharacterCommon* SelfArsenal);
	void EndPressPoseCPP(bool IsLeft, bool IsRight, bool IsShoot, bool IsShield);
	void EndPressPoseBp(bool IsLeft, bool IsRight, bool IsShoot, bool IsShield);
	void CloseRangeAttack_SetResultOfTsubazeriai(class ATTLCharacterCommon* Character, enum class ETTLArsenalCloseRangeAttackPhase NewPhase);
	bool CloseRangeAttack_Progress();
	void CloseRangeAttack_Process_Cpp(float DeltaSeconds);
	bool CloseRangeAttack_ChangeTsubazeriai(class ATTLCharacterCommon* Character, class UTTLArsenalAnimInstance* TargetAnimInstance);
	bool CloseRangeAttack_CanMovePhase(class UAnimMontage* Montage, class ATTLCloseRangeWeapon* Weapon, bool CanMoveInAttack);
	void CloseRangeAttack_Cancel_Impl(class ATTLCharacterCommon* Character, bool IsReAttack);
	bool CloseRangeAttack_Cancel();
	void CloseRange_SetAttackCollide(bool IsEnable, class ATTLCharacterCommon* Character);
	void ClearArmRotationOffset(bool MontagePlayed, bool IsLeft);
	void CheckShootArmEnableOnMotionEnd(bool IsLefte);
	void ChangeArsenalMotion(class UAnimSequenceBase* AnimSequence);
	void CancelWeaponOffsetFlags(enum class ETTLPartsType PartsType, bool IsLeft);
	void CancelSingleShoot(class ATTLCharacterCommon* SelfArsenal, bool IsLeft, bool IsMotionCancel);
	float CalcOffsetAlpha(float CurrentAlpha, float IncreaseSpeed, float DeltaSeconds);
	struct FRotator CalcArmRotationCpp(class ATTLCharacterCommon* SelfArsenal, bool IsRight, float OffsetRoll, float OffsetPitch, float OffsetYaw);
	void AnimNotify_TsubazeriaiWin(class UAnimNotify* Notify);
	void AnimNotify_TsubazeriaiLose(class UAnimNotify* Notify);
	void AnimNotify_StartMoveStop(class UAnimNotify* Notify);
	void AnimNotify_RollerDashStateStart(class UAnimNotify* Notify);
	void AnimNotify_RollerDash_Exited(class UAnimNotify* Notify);
	void AnimNotify_RollerDash_Entered(class UAnimNotify* Notify);
	void AnimNotify_PlayVFXKnockbackLand(class UAnimNotify* Notify);
	void AnimNotify_LandingStartCancel(class UAnimNotify* Notify);
	void AnimNotify_LandingChangeScale(class UAnimNotify* Notify);
	void AnimNotify_LandingCanMove(class UAnimNotify* Notify);
	void AnimNotify_Landing_End(class UAnimNotify* Notify);
	void AnimNotify_IntoIdle(class UAnimNotify* Notify);
	void AnimNotify_EndSniperMode(class UAnimNotify* Notify);
	void AnimNotify_DoublePunchStartRollerDash(class UAnimNotify* Notify);
	void AnimNotify_DoublePunchEndRollerDash(class UAnimNotify* Notify);
	void AnimNotify_CheckNextShootR(class UAnimNotify* Notify);
	void AnimNotify_CheckNextShootL(class UAnimNotify* Notify);
	void AnimNotify_ChangeDamageState(class UAnimNotify* Notify);
	void AnimNotify_CatchThrow_Throw(class UAnimNotify* Notify);
	void AnimNotify_CatchThrow_Pick(class UAnimNotify* Notify);
	void AnimNotify_CatchThrow_Catch(class UAnimNotify* Notify);
	void AnimNotify_CatchThrow_AfterThrow(class UAnimNotify* Notify);
	void AnimNotify_CanRestartMove(class UAnimNotify* Notify);
	void AddDelayCheckArmEnableEvent(bool IsLeft, float DelayTime);
};

// 0x10 (0x38 - 0x28)
// Class DXM.TTLArsenalIKController
class UTTLArsenalIKController : public UObject
{
public:
	uint8                                        Pad_1378[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLArsenalIKController* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class DXM.TTLArsenalIKController_AllTimes
class UTTLArsenalIKController_AllTimes : public UTTLArsenalIKController
{
public:

	static class UClass* StaticClass();
	static class UTTLArsenalIKController_AllTimes* GetDefaultObj();

};

// 0x18 (0x50 - 0x38)
// Class DXM.TTLArsenalIKController_StopBySpeed
class UTTLArsenalIKController_StopBySpeed : public UTTLArsenalIKController
{
public:
	uint8                                        Pad_1379[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLArsenalIKController_StopBySpeed* GetDefaultObj();

};

// 0x50 (0xA0 - 0x50)
// Class DXM.TTLArsenalIKController_StopBySpeedInterp
class UTTLArsenalIKController_StopBySpeedInterp : public UTTLArsenalIKController_StopBySpeed
{
public:
	class UTTLIKFootManupulate*                  FootManupulate;                                    // 0x50(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UTTLIKFootManupulate>      FootManupulateClass;                               // 0x58(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               AnkleLookAtRatioAtMove;                            // 0x60(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               AnkleLookAtRatioAtMoveToStop;                      // 0x6C(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               AnkleLookAtRatioToStop;                            // 0x78(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               AnkleLookAtRatioToStopAndStepTurn;                 // 0x84(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FootLookAtRatioAtMove;                             // 0x90(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FootLookAtRatioAtMoveToStop;                       // 0x94(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FootLookAtRatioToStop;                             // 0x98(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FootLookAtRatioAtAir;                              // 0x9C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTTLArsenalIKController_StopBySpeedInterp* GetDefaultObj();

};

// 0x68 (0x90 - 0x28)
// Class DXM.TTLIKOneFootManupulate
class UTTLIKOneFootManupulate : public UObject
{
public:
	uint8                                        Pad_137A[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  RayCenterSocketName;                               // 0x70(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FootSocketName;                                    // 0x78(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AnkleLookAtOffsetPower;                            // 0x80(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_137B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        InterpAnkle;                                       // 0x88(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_137C[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLIKOneFootManupulate* GetDefaultObj();

};

// 0x40 (0x68 - 0x28)
// Class DXM.TTLIKFootManupulate
class UTTLIKFootManupulate : public UObject
{
public:
	uint8                                        Pad_137D[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UTTLIKOneFootManupulate>   LeftFootManupulateClass;                           // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UTTLIKOneFootManupulate>   RightFootManupulateClass;                          // 0x48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLIKOneFootManupulate*               LeftFootManupulate;                                // 0x50(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLIKOneFootManupulate*               RightFootManupulate;                               // 0x58(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_137F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLIKFootManupulate* GetDefaultObj();

};

// 0x90 (0xB8 - 0x28)
// Class DXM.TTLCameraCheck
class UTTLCameraCheck : public UObject
{
public:
	TSoftObjectPtr<class UTextureRenderTarget2D> RenderTarget;                                      // 0x28(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UUserWidget>             WidgetClassPtr;                                    // 0x50(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AngleForTargetOffset;                              // 0x78(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        OffsetForTargetOffset;                             // 0x7C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               OffsetAddForTargetOffset;                          // 0x80(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              CameraRotator;                                     // 0x8C(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector2D                             ScreenLocation;                                    // 0x98(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1380[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UUserWidget*                           RenderTargetWidget;                                // 0xB0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLCameraCheck* GetDefaultObj();

};

// 0x0 (0xF8 - 0xF8)
// Class DXM.TTLArsenalApplyEffectComponent
class UTTLArsenalApplyEffectComponent : public UTTLActorComponent
{
public:

	static class UClass* StaticClass();
	static class UTTLArsenalApplyEffectComponent* GetDefaultObj();

};

// 0x278 (0x370 - 0xF8)
// Class DXM.TTLArsenalCatchableActorMovement
class UTTLArsenalCatchableActorMovement : public UTTLActorComponent
{
public:
	uint8                                        Pad_13A5[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                CatchTarget;                                       // 0x110(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          ThrowLineColor;                                    // 0x118(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ThrowLineThickness;                                // 0x128(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMPRiseOnThrow;                                    // 0x12C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsAming;                                           // 0x130(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsPicking;                                         // 0x131(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsThrowing;                                        // 0x132(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsReadyCatch;                                      // 0x133(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsPickableTarget;                                  // 0x134(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsWeaponTarget;                                    // 0x135(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsLeft;                                            // 0x136(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         TargetCaught;                                      // 0x137(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsCatchingForTransportation;                       // 0x138(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsPutDownNow;                                      // 0x139(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanPutDown;                                        // 0x13A(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ForceCancel;                                       // 0x13B(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UseAimCamera;                                      // 0x13C(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsCatching;                                        // 0x13D(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LockAimCameraRotation;                             // 0x13E(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AdjustOnAttach;                                    // 0x13F(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLArsenalState_Transport        State_Transport;                                   // 0x140(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsPickingForTransportaion;                         // 0x141(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13A6[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               AimDirection;                                      // 0x144(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsAimCamera;                                       // 0x150(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13A7[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            AimSourceTransform;                                // 0x160(0x30)(BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class AActor*                                LockonTarget;                                      // 0x190(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LockOnVector;                                      // 0x198(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13A8[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            DestAimSourceTransformation;                       // 0x1B0(0x30)(BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               AdjustDestLocationOnAttach;                        // 0x1E0(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CatchableScope;                                    // 0x1EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ThrowSpeed;                                        // 0x1F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SecondsPerFrame;                                   // 0x1F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimPitch;                                          // 0x1F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimCameraPitch;                                    // 0x1FC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ThrowLineEstimateFrames;                           // 0x200(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SearchForwardDistance;                             // 0x204(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SearchRadius;                                      // 0x208(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArsenalCatchSpeedLimit;                            // 0x20C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SearchStartForwardDistance;                        // 0x210(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ThrowLineSize;                                     // 0x214(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ThrowOffsetLeft;                                   // 0x218(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ThrowOffsetRight;                                  // 0x224(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ThrowOffsetGrenadeLeft;                            // 0x230(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ThrowOffsetGrenadeRight;                           // 0x23C(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InputAimForward;                                   // 0x248(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InputAimRight;                                     // 0x24C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ThrowSourcePosition;                               // 0x250(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftThrowSpeedCorrection;                          // 0x25C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightThrowSpeedCorrection;                         // 0x260(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftThrowDamageCorrection;                         // 0x264(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightThrowDamageCorrection;                        // 0x268(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftExplosionDamageCorrection;                     // 0x26C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightExplosionDamageCorrection;                    // 0x270(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftExplosionKnockOutAdditive;                     // 0x274(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightExplosionKnockOutAdditive;                    // 0x278(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13AA[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        OffsetPowerFromMeshForGettingForward;              // 0x288(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MarginZUpPowerForPuttingTransform;                 // 0x28C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OffsetPowerForPuttingTransform;                    // 0x290(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDebugDrawForCheckingGround;                      // 0x294(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13AB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DebugDrawThicknessForCheckingGround;               // 0x298(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DebugDrawTimeForCheckingGround;                    // 0x29C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MarginZUpPowerForCheckingPuttingPoint;             // 0x2A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RadiusForPutting;                                  // 0x2A4(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MarginZUpPowerForPutting;                          // 0x2B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DebugDrawTimeForPutting;                           // 0x2B4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDebugDrawForPutting;                             // 0x2B8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13AC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BackPowerForPutting;                               // 0x2BC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ForwardPowerForPutting;                            // 0x2C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ThrowDirection;                                    // 0x2C4(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13AD[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                CheckCatchTarget;                                  // 0x300(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  IsCaughtTag;                                       // 0x308(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        OuterPunchThrowLimitStartDegree;                   // 0x310(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        OuterPunchThrowLimitCameraDegree;                  // 0x314(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SearchRadius_OuterPunchThrow;                      // 0x318(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SearchStartForwardDistance_OuterPunchThrow;        // 0x31C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SearchForwardDistance_OuterPunchThrow;             // 0x320(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETTLCatchableState                CatchableState;                                    // 0x324(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_13B0[0x4B];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLArsenalCatchableActorMovement* GetDefaultObj();

	void UseGrenadeRemainBullet();
	bool TryStartOuterPunchThrow_Throw();
	bool TryStartOuterPunchThrow_Catch();
	bool TryStartCatchActorCPP(enum class ETTLThrowType ThrowType);
	bool TryMoveBackForTransport();
	bool TryGeTransformForTransportCenter(struct FTransform* Transform);
	bool TryForceCancelCatchMotion();
	bool TryCatchWeaponCpp(bool IsLeft);
	void StartCatchActorCPP(class AActor* CaughtTarget, bool IsLeft, enum class ETTLThrowType ThrowType);
	void SetWeaponVisibility(bool Visible);
	void RunOnServerCrushAndCancelCatch(class AActor* CheckCatchTarget);
	void ReleaseTargetCommon();
	void OnStartTransport();
	void OnStartThrowEvent();
	void OnStartDamageReactionFromArsenalMovement(enum class ETTLDamageState DamageState);
	void OnStartDamageReaction_Main(enum class ETTLDamageState DamageState);
	void OnStartCatchThrowEvent();
	void OnNotifyExecThrowBP(bool IsLeft, bool IsHandWeapon, struct FVector& TargetPos, struct FVector& Direction, enum class ETTLThrowType ThrowType);
	void OnNotifyExecCancelAimBP();
	void OnNotify_DoingPutDown();
	void OnMulticast_StartOuterPunchThrow_Catch();
	void OnEndTransport();
	void OnDamageReactionTransportBP();
	void NotifyReleaseObjectToLevelBP();
	void NotifyPutDownAndEnd();
	void NotifyExecThrow(bool IsLeft, bool IsHandWeapon, struct FVector& TargetPos, struct FVector& Direction, enum class ETTLThrowType ThrowType);
	void NotifyExecCancelAim();
	void MulticastCrushAndCancelCatch(class AActor* CheckCatchTarget);
	bool IsThrowMotionPlaying();
	bool IsPickableTargetCaught();
	bool IsOthersAtPuttingPoint();
	bool IsObstacleAtReleasing();
	bool IsFallingOrFlying();
	bool IsCatchMotionPlaying();
	bool IsCatchingWeaponCPP();
	bool IsCatchingPickableCPP();
	bool IsCatchingGrenadeCPP();
	bool IsCatchActorHasTag(class FName Tag);
	bool IsAimingTarget();
	struct FVector GetWorldAimDirectionCPP();
	void GetWorldAimCameraDestPosition(struct FVector* Position);
	void GetThrowBaseTransform(struct FTransform* baseTransform);
	void GetThrowBaseLocation(struct FVector* baseLocation);
	struct FVector GetGravityCPP();
	void GetCatchableActorCPP(class AActor** CaughtActor, bool* IsCaught, bool* IsLeft, bool* IsFailCatch, enum class ETTLThrowType ThrowType, bool ShowWarning);
	float GetBulletSpeedCPP();
	void ForceCancelCpp();
	void ForceCancelBP();
	void DrawThrowLine(const struct FVector& SourcePosition, const struct FVector& Direction, const struct FVector& GravityVec, float ThrowSpeed, float ShowDuration, bool UseCustomParam, float CustomIntervalDistance, float CustomMeshScale);
	void DestroyTransport();
	void DebugCheckCatchableStatus(enum class ETTLCatchableState* CurrentState, enum class ETTLCatchTargetType* TargetType);
	bool CheckStartCatchStatus();
	bool ChangeArsenalParameter(bool IsTransport);
	void CatchActorBP();
	bool CanTryAllMovementCPP(bool IsLeft, bool IsStart);
	bool CanRelinquish();
	void CancelEquipConversion();
	void CancelCaughtMotionForTransport();
	void CancelCatchMotion();
	void CancelAllCatchableMovement();
	bool CanCatchPunchThrowTarget(class AActor* TargetActor, class UTTLCatchableActorComponent* CatchableActorComponent);
	bool CanCatchMovement_OneSideHand(bool IsLeft, bool IsStart);
	bool CanCatchMovement(bool IsLeft, bool IsStart);
	void CallTryRelinquishActor(bool IsLeft);
	void CallStartAimForOuterPunchThrow(struct FVector& Direction);
	void CallReleaseForStun();
	float CalcDegreeBetweenDirectionToTarget(class AActor* TargetActor, const struct FVector& ForwardVector, bool IsContainedZ);
	void AttachToTargetOnPick(float DeltaSeconds);
};

// 0xAE0 (0xBD8 - 0xF8)
// Class DXM.TTLArsenalDestroyPartsComponent
class UTTLArsenalDestroyPartsComponent : public UTTLActorComponent
{
public:
	UMulticastDelegateProperty_                  OnHalfDestroyedParts;                              // 0xF8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnCompletelyDestroyedParts;                        // 0x108(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMap<enum class ETTLDestroyablePartsType, bool> IsHalfDestroyeds;                                  // 0x118(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<enum class ETTLDestroyablePartsType, bool> IsCompletelyDestroyeds;                            // 0x168(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<enum class ETTLDestroyablePartsType, struct FTTLFXPlaybacks> FXPlaybacksOnHalfDestroy;                          // 0x1B8(0x50)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TMap<enum class ETTLDestroyablePartsType, struct FTTLFXPlaybacks> FXPlaybacksOnCompletelyDestroy;                    // 0x208(0x50)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLDestroyedFXParam                  FxHeadDestroyed;                                   // 0x258(0x260)(Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLDestroyedFXParam                  FxBodyDestroyed;                                   // 0x4B8(0x260)(Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLDestroyedFXParam                  FxArmLRDestroyed;                                  // 0x718(0x260)(Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLDestroyedFXParam                  FxLegsDestroyed;                                   // 0x978(0x260)(Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLArsenalDestroyPartsComponent* GetDefaultObj();

	void UpdateArsenal_PartsDestroyEvent(struct FTTLInventoryItem& InventoryItem);
	void ShowOuterHair();
	void ShowOuter();
	void SetWeaponRightVisibility(bool NewVisibility);
	void SetWeaponLeftVisibility(bool NewVisibility);
	void SetHalfDestroyed(enum class ETTLDestroyablePartsType PartsType, bool NewState);
	void SetCompletelyDestroyed(enum class ETTLDestroyablePartsType PartsType, bool NewState);
	void RestoreParts(enum class ETTLDestroyablePartsType PartsType);
	bool IsHalfDestroyed(enum class ETTLDestroyablePartsType PartsType);
	bool IsCompletelyDestroyed(enum class ETTLDestroyablePartsType PartsType);
	void HalfDestroyParts(enum class ETTLDestroyablePartsType PartsType);
	void CompletelyDestroyParts(enum class ETTLDestroyablePartsType PartsType, bool EnableVFXs);
	void CancelAttack(bool IsLeft);
};

// 0x0 (0x340 - 0x340)
// Class DXM.TTLArsenalDirectionMarker
class ATTLArsenalDirectionMarker : public ATTLActor
{
public:

	static class UClass* StaticClass();
	static class ATTLArsenalDirectionMarker* GetDefaultObj();

};

// 0x2F8 (0x3F0 - 0xF8)
// Class DXM.TTLArsenalEquipComponent
class UTTLArsenalEquipComponent : public UTTLActorComponent
{
public:
	TArray<struct FTTLWeaponRackSlot>            WeaponRackSlots;                                   // 0xF8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_13E9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ETTLInventoryCategory             CurrentEquipCategory;                              // 0x10C(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13EA[0x13];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        EquipCoolTime;                                     // 0x120(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsFinishedSetUpInventory;                          // 0x124(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETTLChangeEquipMode               ChangeEquipMode;                                   // 0x125(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_13ED[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        EquipFlashPower;                                   // 0x128(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsCutOffInChangingHeadOrBody;                      // 0x12C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_13EE[0xB];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLChangeEquipPartsStatus            ChangeEquipPartsStatusList[0xC];                   // 0x138(0x2A0)(ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_13EF[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLArsenalEquipComponent* GetDefaultObj();

	void UpdateWeaponRackSupportWeapon(class ATTLSupportWeaponBase* SupportWeapon);
	void UpdateWeaponRackShoulderWeapon(class ATTLShoulderWeaponBase* ShoulderWeapon);
	void UpdateHUD_SelectableRackPanel();
	void UpdateHUD_Rack(bool ForceUpdate);
	void UpdateArsenalHandWeaponForAI(bool IsLeft);
	void UpdateArsenalHandWeaponBPForAI();
	void UpdateArsenalHandWeaponBP();
	void UpdateArsenalHandWeapon(bool IsLeft, bool IsFixIndex);
	void UpdateArsenalByCategory(enum class ETTLInventoryCategory InventoryCategory, bool SkipStartTake, bool NeedsPartsHPHeal);
	void UpdateArsenal(bool SkipStartTake);
	void UpdateAllExtraPanels();
	void TryTestOpen();
	void TryTestClose();
	bool TryStartFinishChangeEquipWeapon(bool IsLeftRack);
	bool TryStartChangeEquipMode(bool IsWeaponEquipMode, bool IsLeft);
	bool TryEndChangeEquipMode(enum class ETTLChangeEquipMode EquipModeCheck);
	bool TryDestroyPunchWeapon(class ATTLWeaponBase* Weapon);
	void StoreToWeaponRackByPickUpResults(TArray<struct FTTLPickUpPartsResult>& PickUpResults);
	void StoreToWeaponRack(class ATTLWeaponBase* StoredWeapon, int32 SlotToStore);
	class ATTLWeaponBase* SpawnWeaponFromPartsID(class FName RowName);
	class ATTLWeaponBase* SpawnWeaponFromInventoryInfo(struct FTTLInventoryItem& WeaponInfo);
	class ATTLWeaponBase* SpawnPunchWeaponFromArmID(bool IsLeft, class FName PartsID);
	class ATTLWeaponBase* SpawnPunchWeapon(bool IsLeft);
	void SetUpMissionInventory(struct FTTLArsenalPartsInfoList& PartsInfo, struct FTTLArsenalPaintInfo& PaintInfo);
	void SetChangeEquipMode(bool IsEnabled, bool IsWeaponMode, bool IsLeftMode);
	class ATTLWeaponBase* PickFromWeaponRack(int32 SlotToPick);
	bool IsUnEquipNextHandWeapon(enum class ETTLInventoryCategory InventoryCategory, class UTTLInventoryManager* InventoryManager);
	bool IsUnEquip(class FName PartsID);
	bool IsInitializedInventory();
	bool IsEquipModeEnabled();
	bool IsChangeEquipWeaponMode();
	int32 GetWeaponRackSlot(int32 WeaponUID);
	int32 GetWeaponRackEmptySlot();
	class ATTLWeaponBase* GetWeaponFromWeaponRack(int32 RackSlot);
	class FName GetUnEquipID();
	void GetRackInventory(bool IsLeft, struct FTTLInventoryItem* OutItem);
	class ATTLWeaponBase* ExchangeForWeaponRack(class ATTLWeaponBase* StoredWeapon, int32 SlotToExchange);
	bool EquipShoulderOptionWeaponByPickUpResults(TArray<struct FTTLPickUpPartsResult>& PickUpResults);
	bool EquipPartsByPickUpResults(TArray<struct FTTLPickUpPartsResult>& PickUpResults);
	bool EquipByPickUpResults(bool IsLeft, TArray<struct FTTLPickUpPartsResult>& PickUpResults);
	void DetachWeapon(class ATTLWeaponBase* Weapon, const struct FTransform& OffsetTransform);
	void CreateWeaponRackSlots(class USkeletalMeshComponent* LeftRack, class USkeletalMeshComponent* RightRack);
	void ChangeToRackWeapon(bool IsLeftHand, bool IsLeftRack);
	bool CanStartEquipMode(bool IsLeft);
	bool CanChangeNextWeapon(enum class ETTLInventoryCategory Category);
	bool CanChangeArmCausedByGunArm(enum class ETTLInventoryCategory InventoryCategory, class UTTLInventoryManager* InventoryManager, class UTTLChangePartsComponent* ChangePartsComponent);
	void CallCalcArsenalParam();
	void AttachWeapon(class ATTLWeaponBase* Weapon, class USkeletalMeshComponent* MeshToAttach, class FName SocketName, const struct FTransform& OffsetTransform);
	void ApplyInventoryToArsenalWeapon(enum class ETTLInventoryCategory InventoryCategory, bool IsMultiSync);
};

// 0x80 (0x3C0 - 0x340)
// Class DXM.TTLArsenalEquipHUD2
class ATTLArsenalEquipHUD2 : public ATTLActor
{
public:
	class UUserWidget*                           PWidget;                                           // 0x340(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           PWidget1;                                          // 0x348(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           PWidget2;                                          // 0x350(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      PAnimation_pWidgetSetUp;                           // 0x358(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      PAnimation_pWidget1SetUp;                          // 0x360(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      PAnimation_pWidget2SetUp;                          // 0x368(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UWidgetAnimation*>              PAnimation_pWidgetChange_Panel;                    // 0x370(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UWidgetAnimation*>              PAnimation_pWidget1Change_Panel;                   // 0x380(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UWidgetAnimation*>              PAnimation_pWidget2Change_Panel;                   // 0x390(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UWidgetAnimation*>              PAnimation_pWidget1SetUp_Panel;                    // 0x3A0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UWidgetAnimation*>              PAnimation_pWidget2SetUp_Panel;                    // 0x3B0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ATTLArsenalEquipHUD2* GetDefaultObj();

	void SetWidgetSetUpAnimationReference_Panel(class UWidgetAnimation* Animation, int32 WidgetIndex, enum class ETTLPanelPosition PanelPosition);
	void SetWidgetChangeAnimationReference(class UWidgetAnimation* Animation, int32 WidgetIndex, enum class ETTLPanelPosition PanelPosition);
	class UUserWidget* GetWidgetFromPanelPosition(enum class ETTLPanelPosition PanelPosition, int32 WidgetIndex);
};

// 0xA0 (0x198 - 0xF8)
// Class DXM.TTLArsenalEquipHUD2Component
class UTTLArsenalEquipHUD2Component : public UTTLActorComponent
{
public:
	bool                                         IsRightGunArmForNotChangeUI;                       // 0xF8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsLeftGunArmForNotChangeUI;                        // 0xF9(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_140E[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UChildActorComponent*                  PChildActorComponent;                              // 0x100(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATTLArsenalEquipHUD2*                  PArsenalEquipHUD2;                                 // 0x108(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateColor                           PanelTextColorWhite;                               // 0x110(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FSlateColor                           PanelTextColorYellow;                              // 0x138(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FSlateColor                           PanelTextColorRed;                                 // 0x160(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                         IsHudVisible;                                      // 0x188(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1410[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AActor>                    ChildActorComponentHUDActorClass;                  // 0x190(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTTLArsenalEquipHUD2Component* GetDefaultObj();

	void TryInitializeHUD2();
	void SwitchShowHUD(bool IsShow, int32 HudMode);
	void SetUpPanel_PanelContentsInCpp(class UUserWidget* ParentWidget, class FText CategoryName, class FText PartsCode, class FText PartsName, bool IsUnEquip, bool IsTranspand, enum class ETTLEquipHUDPanelValueState ValueState, int32 CurrentValue, int32 MaxValue);
	void SetUpPanel_GetInfoFromInventory(struct FTTLInventoryItem& InventoryItem, bool IsWeapon, class FText* OutPartsCode, class FText* OutPartsName, int32* OutCurrentValue, int32* OutMaxValue, enum class ETTLEquipHUDPanelValueState* OutPanelState, class UObject** OutSilhouetteIcon, bool NeedsShilhouetteIcon);
	void SetUpPanel_EachPanel(struct FTTLInventoryItem& InventoryItem, enum class ETTLPanelPosition PanelPosition);
	void PlayWidgetsChangeAnimation(enum class ETTLPanelPosition PanelPosition);
	enum class ETTLPanelPosition ConvertPanelPositionFromInventoryCategory(enum class ETTLInventoryCategory Category);
	void ChangeGunArmForNotChangeUI(enum class ETTLInventoryCategory Category, bool CanChangeUINormally);
	void CallSetUpPanel_PanelContents(class UUserWidget* UiWidget, struct FTTLInventoryItem& InventoryItem, class FText& CategoryName, bool IsWeaponPanel, bool IsTranspand);
};

// 0x98 (0x190 - 0xF8)
// Class DXM.TTLArsenalEquipHUD3Component
class UTTLArsenalEquipHUD3Component : public UTTLActorComponent
{
public:
	struct FSlateColor                           BulletTextColorNormal;                             // 0xF8(0x28)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSlateColor                           BulletTextColorWarning;                            // 0x120(0x28)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSlateColor                           BulletTextColorBad;                                // 0x148(0x28)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UTTLHUDMissionMain*                    HUDMissionMain;                                    // 0x170(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLHUDArsenalWeapon*                  HUDLeftHandWeapon;                                 // 0x178(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLHUDArsenalWeapon*                  HUDRightHandWeapon;                                // 0x180(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1417[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLArsenalEquipHUD3Component* GetDefaultObj();

	void UpdateRackHUD(struct FTTLInventoryItem& InventoryItem, bool IsLeftRack, bool ForceUpdate);
	void OpenHUD(bool IsLeftHand);
	void CloseHUD();
	void ChangeEquip(bool IsLeftRack);
};

// 0x80 (0x170 - 0xF0)
// Class DXM.TTLArsenalFireControlComponent
class UTTLArsenalFireControlComponent : public UActorComponent
{
public:
	float                                        RightArmAttackCorrection;                          // 0xF0(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1420[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RightArmAttackCDCorrection;                        // 0xF8(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightArmAttackIntervalCorrection;                  // 0xFC(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightArmAttackGrouppingCorrection;                 // 0x100(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightArmAttackSpreadCorrection;                    // 0x104(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightArmAttackReloadCorrection;                    // 0x108(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightArmCloseAttackCorrection;                     // 0x10C(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1421[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RightArmPunchChargeCorrection;                     // 0x114(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightArmCloseHitStopCorrection;                    // 0x118(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightArmCloseCoolDownCorrection;                   // 0x11C(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftArmAttackCorrection;                           // 0x120(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1422[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LeftArmAttackCDCorrection;                         // 0x128(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftArmAttackIntervalCorrection;                   // 0x12C(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftArmAttackGrouppingCorrection;                  // 0x130(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftArmAttackSpreadCorrection;                     // 0x134(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftArmAttackReloadCorrection;                     // 0x138(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftArmCloseAttackCorrection;                      // 0x13C(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1423[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LeftArmPunchChargeCorrection;                      // 0x144(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftArmCloseHitStopCorrection;                     // 0x148(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftArmCloseCoolDownCorrection;                    // 0x14C(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WeaponStiffTimeCorrection;                         // 0x150(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsAttackShoulder;                                  // 0x154(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1424[0x1B];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLArsenalFireControlComponent* GetDefaultObj();

	bool TryEndFemtoShift();
	void ProcessSupportInputCPP(bool IsStart, bool IsGuarding);
	bool ProcessShoulderInputCPP(bool IsStart, bool IsGuarding);
	bool ProcessHandInputCPP(bool IsLeft, bool IsGuarding);
	void ProcessGrenadePlayerInputCPP(bool IsStart, bool IsGuarding);
	void GetWeaponRangeSpecialBP(float* Range);
	float GetWeaponRangeSpecial();
	void GetWeaponRangeShoulderBP(float* Range);
	float GetWeaponRangeShoulder();
	void GetWeaponRangeRightBP(float* Range);
	float GetWeaponRangeRight();
	void GetWeaponRangeLeftBP(float* Range);
	float GetWeaponRangeLeft();
	void GetShoulderWeaponDistanceIgnoreGravity(float* Range);
	void GetShoulderWeaponCriticalRangeBP(float* Range);
	float GetShoulderWeaponCriticalRange();
	void GetRightWeaponDistanceIgnoreGravity(float* Range);
	void GetRightWeaponCriticalRangeBP(float* Range);
	float GetRightWeaponCriticalRange();
	void GetLeftWeaponDistanceIgnoreGravity(float* Range);
	void GetLeftWeaponCriticalRangeBP(float* Range);
	float GetLeftWeaponCriticalRange();
	void GetCloseRangeComboAttackRightBP(float* Range);
	float GetCloseRangeComboAttackRight();
	void GetCloseRangeComboAttackLeftBP(float* Range);
	float GetCloseRangeComboAttackLeft();
	void ExecShoulderAttack();
	bool CheckNextShootFlag(bool IsLeft);
	bool CanSupportInput(bool IsGuarding, class ATTLWeaponBase* Weapon);
	bool CanSpinShoot();
	void CalcWeaponParameterBP();
};

// 0x320 (0x418 - 0xF8)
// Class DXM.TTLArsenalHUD2Component
class UTTLArsenalHUD2Component : public UTTLActorComponent
{
public:
	TSubclassOf<class UUserWidget>               UIClass;                                           // 0xF8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           ArsenalHUD;                                        // 0x100(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLHUDMissionMain*                    HUDMissionMain;                                    // 0x108(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsOverlapCrossHair;                                // 0x110(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_146B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class ETTLDestroyablePartsType, class UObject*> PartsHUDIcons;                                     // 0x118(0x50)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<enum class ETTLEPartsDamagedPhase, struct FLinearColor> PartsHUDColors;                                    // 0x168(0x50)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FLinearColor                          WeaponHUDNormalColor;                              // 0x1B8(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          WeaponHUDReloadingColor;                           // 0x1C8(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          VPHUDNormalColor;                                  // 0x1D8(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          VPHUDNearDestroyColor;                             // 0x1E8(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          TMPHUDNormalColor;                                 // 0x1F8(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          TMPHUDWarningColor;                                // 0x208(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          TMPHUDOverHeatColor;                               // 0x218(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          FemtoHUDNormalColor;                               // 0x228(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          FemtoHUDDisabledColor;                             // 0x238(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          WidgetGrayoutColor;                                // 0x248(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          WidgetNormalColor;                                 // 0x258(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          BulletRemainTextNormalColor;                       // 0x268(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          BulletRemainTextWarningColor;                      // 0x278(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          BulletRemainTextBadColor;                          // 0x288(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             WidgetPosShoulder_Arsenal;                         // 0x298(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             WidgetPosShoulder_Outer;                           // 0x2A0(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             WidgetPosLeft_Arsenal;                             // 0x2A8(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             WidgetPosLeft_Outer;                               // 0x2B0(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             WidgetPosRight_Arsenal;                            // 0x2B8(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             WidgetPosRight_Outer;                              // 0x2C0(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             OuterHPWidgetOffset;                               // 0x2C8(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               OuterHPWidgetActorOffset;                          // 0x2D0(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FemtoGaugeMax;                                     // 0x2DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMPGaugeMax;                                       // 0x2E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          InstrumentsHitColor;                               // 0x2E4(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          InstrumentsNoHitColor;                             // 0x2F4(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DamagedHUDCount;                                   // 0x304(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamagedHUDShowMinDegree;                           // 0x308(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamagedHUDShowMaxDegree;                           // 0x30C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_146D[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsSightInited;                                     // 0x311(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsShowWarning;                                     // 0x312(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsVisible;                                         // 0x313(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsInited;                                          // 0x314(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsBegan;                                           // 0x315(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsPlayAttackAnimation;                             // 0x316(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLWarningType                   CurrentWarningType;                                // 0x317(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTTLDamagedHUD>                DamagedHUDs;                                       // 0x318(0x10)(Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                         IsUseTimer;                                        // 0x328(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_146E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CurrentTime;                                       // 0x32C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FunnelGaugeShowRestSeconds;                        // 0x330(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FunnelGaugeShowRestSecondsMax;                     // 0x334(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                MagazineRecoverNum;                                // 0x338(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                RecoverNum;                                        // 0x348(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                RecoverEffectRestSeconds;                          // 0x358(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class UTTLArsenalHUDCommandExecutor*         HUDCommandExecutor;                                // 0x368(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1470[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLHUDGaugeWidget*                    OuterHPGauge;                                      // 0x378(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           RaderWidget;                                       // 0x380(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLHUDFemtoShiftGauge*                FemtoShiftGaugeAsault;                             // 0x388(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLHUDFemtoShiftGauge*                FemtoShiftGaugeWing;                               // 0x390(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLHUDFemtoShiftGauge*                FemtoShiftGaugeShield;                             // 0x398(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1471[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLHUDWarningScreen*                  WarningScreen;                                     // 0x3B0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLHUDTime*                           HUDRestTime;                                       // 0x3B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLHUDPartsGauge*                     PartsGaugeHead;                                    // 0x3C0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLHUDPartsGauge*                     PartsGaugeChest;                                   // 0x3C8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLHUDPartsGauge*                     PartsGaugeLeftArm;                                 // 0x3D0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLHUDPartsGauge*                     PartsGaugeRightArm;                                // 0x3D8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLHUDPartsGauge*                     PartsGaugeLegs;                                    // 0x3E0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1473[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLArsenalHUD2Component* GetDefaultObj();

	void UpdateWarningScreenHUD(float DeltaSeconds);
	void UpdateWarningListHUD(float DeltaSeconds);
	void UpdateWarningHUDCPP(float DeltaSeconds);
	void UpdateTMPHUDCPP(class UTTLBasicStatusComponent* BasicStatus);
	void UpdateRestTimeHUDCPP();
	void UpdateRader();
	void UpdatePlayerHUDBP(float DeltaSeconds);
	void UpdatePlayerHUD(float DeltaSeconds);
	void UpdatePartsGaugeHUDCPP(float DeltaSeconds);
	void UpdateOuterGaugesHUD(class UUserWidget* UserWidget, class AActor* TargetActor);
	void UpdateFemtoShiftHUD(float DeltaSeconds);
	void UpdateFemtoHUDCPP(class UTTLBasicStatusComponent* BasicStatus);
	void UpdateDamagedHUD(class AActor* Actor);
	void UpdateArsenalWeaponHUDCpp(class UUserWidget* WMsnHudTop00, class ATTLCharacterCommon* OwnerCharacter);
	void UpdateArsenalInfoOnOuterModeHUDBP(class UUserWidget* UserWidget, class AActor* TargetActor);
	void UpdateArsenalInfoOnOuterModeHUD(class UUserWidget* UserWidget, class AActor* TargetActor);
	void UpdateArsenalHPHUD(class UTTLBasicStatusComponent* BasicStatus);
	void SwitchLockOnAnimation_SniperHUD(bool IsLockOnEnabled);
	void SwitchCoolingAnimation(bool IsOn, class UUserWidget* Widget);
	void StopRecoverEffect(enum class ETTLWeaponPart WeaponPart);
	void StopAnimationWhenArsenalGotRebooting(class UUserWidget* Widget);
	void StartSniperHUD();
	void StartRecoverEffect(enum class ETTLWeaponPart WeaponPart, int32 MagazineRecoverNum, int32 RecoverNum);
	void ShowFailedChangeWeaponMessage(bool IsLeft, enum class ETTLFailedChangeWeaponReason Reason);
	void SetWidgetDispPosScale(class UWidget* Target, struct FTTLOptionHudCustomParam& Param, bool Posscale_only, bool Force_hide);
	void SetWidgetAlphaSub(class UWidget* Widget, float Alpha);
	void SetWeaponNameCPP(class UTTLHUDArsenalWeapon* HudWeapon, class ATTLWeaponBase* Weapon);
	void SetWeaponID(enum class ETTLArsenalHUDWeaponKind WeaponKind, class ATTLWeaponBase* WeaponBase);
	void SetWeaponIconCPP(class UTTLHUDArsenalWeapon* HudWeapon, class ATTLWeaponBase* Weapon);
	void SetWeaponGaugeWidgetCpp(bool IsEquipped, class UTTLHUDArsenalWeapon* WMsnHudGauge02, int32 CurrentBulletNum, int32 CurrentMaxNum, bool IsEnableBulletNum, bool IsEnableMagazine, enum class ETTLEBulletCondition ConditionCurrentValue, enum class ETTLEBulletCondition ConditionMaxValue, enum class ETTLEBulletCondition ConditionSeparator, bool IsReloading, bool IsRecoverEffect, int32 TotalRecoverNum, int32 MagazineRecoverNumDiff, int32 RecoverNumDiff, bool IsShowBulletRemainGauge, float bulletRemainGaugeValue);
	void SetVisibilityOuterHUDBP(bool NewVisibility);
	void SetVisibilityOuterHUD(bool NewVisibility);
	void SetVisibilityMissionProgressHUD(bool NewVisibility);
	void SetVisibilityArsenalHUDBP(bool NewVisibility);
	void SetVisibilityArsenalHUD(bool NewVisibility);
	bool SetVisibilityAll(bool NewVisibility);
	void SetUpUpdateMainMissionHUD(int32 Index);
	void SetUpMissionProgressHUD();
	void SetUpAchieveSubMissionHUD(enum class ETTLEGoalType GoalType);
	void SetPartDamageGauge(class UUserWidget* Widget, float CurrentValue, float MaxValue, enum class ETTLEPartsDamagedPhase DamagePhase);
	void SetOtherInstruments_TargetInfo(class UUserWidget* Widget, bool IsTargetEnable, float TargetAngleDegree);
	void SetOtherInstruments_SightColor(class UUserWidget* Widget, bool IsAttackHit);
	void SetOtherInstruments_Roll(class UUserWidget* Widget, float RollDegree);
	void SetOtherInstruments_Pitch(class UUserWidget* Widget, float PitchDegree);
	void SetOtherInstruments_G(class UUserWidget* Widget, float GValue);
	void SetOtherInstruments(class UUserWidget* Sight, float RollDegree, float PitchDegree, bool IsAttackHit, bool IsTargetEnable, float TargetAngleDegree, float GValue);
	void SetDistanceText_SniperHUD(class AActor* TargetActor, struct FVector& HitLocation);
	void SetArsenalHudCustom(struct FTTLOptionHudCustomInfo& HudCustomInfo);
	void ProcessRecoverEffect(float DeltaSeconds);
	void ProcessPropellantTankFemto(class UUserWidget* Widget);
	void ProcessHUDAnimation(float DeltaSeconds);
	void PlayHitAnimation_SniperHUD();
	void PlayAnimationWhenArsenalGotRebooting(class UUserWidget* Widget);
	void PlayAnimationSubGoalMissionProgressHUDBP(int32 Index);
	void PlayAnimationSubGoalMissionProgressHUD(int32 Index);
	void PlayAnimationShowSupportWeaponHUDBP();
	void PlayAnimationShowSupportWeaponHUD();
	void PlayAnimationOutOuterHUDBP();
	void PlayAnimationOutOuterHUD();
	void PlayAnimationOutMissionProgressHUDBP();
	void PlayAnimationOutMissionProgressHUD();
	void PlayAnimationOuterHitBP();
	void PlayAnimationOuterHit();
	void PlayAnimationOuterAttackBP();
	void PlayAnimationOuterAttack();
	void PlayAnimationOutArsenalHUDBP();
	void PlayAnimationOutArsenalHUD();
	void PlayAnimationInOuterHUDBP();
	void PlayAnimationInOuterHUD();
	void PlayAnimationInMissionProgressHUDBP();
	void PlayAnimationInMissionProgressHUD();
	void PlayAnimationInArsenalHUDBP();
	void PlayAnimationInArsenalHUD();
	bool IsHudCustomDisp_AreaAlert();
	bool IsHudCustomDisp(enum class ETTLOptionHUDCustomType Type);
	bool IsHitDisp();
	bool IsHitCrossHair(class AActor** OutTargetActor, struct FVector* OutHitLocation);
	bool IsChangedWeaponID(enum class ETTLArsenalHUDWeaponKind WeaponKind, class ATTLWeaponBase* WeaponBase);
	bool IsArsenalMode();
	void InitVPHUDCPP();
	void InitTMPHUDCPP(class UTTLBasicStatusComponent* BasicStatus);
	void InitializeHUD();
	void InitFemtoHUDCPP(class UTTLBasicStatusComponent* BasicStatus);
	void InitDamagedHUDCPP();
	void InitCommonHUDCPP();
	class FText GetWarningText(enum class ETTLWarningType WarningType);
	float GetTargetAngleDegree(class AActor* Actor, const struct FVector& TargetLocation);
	void GetRecoverEffectInfo(enum class ETTLWeaponPart WeaponPart, bool* IsRecoverEffect, int32* TotalRecoverNum);
	void GetRecoverCountUpEffectInfo(enum class ETTLWeaponPart WeaponPart, int32* MagazineRecoverNumDiff, int32* RecoverNumDiff);
	bool GetLockonTargetAngleDegree(class AActor* Actor, float* AngleDegree);
	float GetAlphaHitDisp();
	void EndSniperHUD();
	void ChangeModeBP(bool IsArsenalMode, bool IsFirst);
	void ChangeMode(bool IsArsenalMode, bool IsFirst);
	void CallSetArsenalHudCustom_OptionWeapon();
	void CallSetArsenalHudCustom();
};

// 0x50 (0x78 - 0x28)
// Class DXM.TTLArsenalHUDCommandBase
class UTTLArsenalHUDCommandBase : public UObject
{
public:
	float                                        RestSeconds;                                       // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1475[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLArsenalHUDCommandParams           CommandParams;                                     // 0x30(0x48)(NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLArsenalHUDCommandBase* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class DXM.TTLArsenalHUDCommand_HideHUD
class UTTLArsenalHUDCommand_HideHUD : public UTTLArsenalHUDCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLArsenalHUDCommand_HideHUD* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class DXM.TTLArsenalHUDCommand_ShowHUD
class UTTLArsenalHUDCommand_ShowHUD : public UTTLArsenalHUDCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLArsenalHUDCommand_ShowHUD* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class DXM.TTLArsenalHUDCommand_PlayInArsenalHUD
class UTTLArsenalHUDCommand_PlayInArsenalHUD : public UTTLArsenalHUDCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLArsenalHUDCommand_PlayInArsenalHUD* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class DXM.TTLArsenalHUDCommand_PlayOutArsenalHUD
class UTTLArsenalHUDCommand_PlayOutArsenalHUD : public UTTLArsenalHUDCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLArsenalHUDCommand_PlayOutArsenalHUD* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class DXM.TTLArsenalHUDCommand_PlayInOuterHUD
class UTTLArsenalHUDCommand_PlayInOuterHUD : public UTTLArsenalHUDCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLArsenalHUDCommand_PlayInOuterHUD* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class DXM.TTLArsenalHUDCommand_PlayOutOuterHUD
class UTTLArsenalHUDCommand_PlayOutOuterHUD : public UTTLArsenalHUDCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLArsenalHUDCommand_PlayOutOuterHUD* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class DXM.TTLArsenalHUDCommand_WaitOnly
class UTTLArsenalHUDCommand_WaitOnly : public UTTLArsenalHUDCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLArsenalHUDCommand_WaitOnly* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class DXM.TTLArsenalHUDCommand_ShowOuterHUD
class UTTLArsenalHUDCommand_ShowOuterHUD : public UTTLArsenalHUDCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLArsenalHUDCommand_ShowOuterHUD* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class DXM.TTLArsenalHUDCommand_HideOuterHUD
class UTTLArsenalHUDCommand_HideOuterHUD : public UTTLArsenalHUDCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLArsenalHUDCommand_HideOuterHUD* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class DXM.TTLArsenalHUDCommand_ShowArsenalHUD
class UTTLArsenalHUDCommand_ShowArsenalHUD : public UTTLArsenalHUDCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLArsenalHUDCommand_ShowArsenalHUD* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class DXM.TTLArsenalHUDCommand_HideArsenalHUD
class UTTLArsenalHUDCommand_HideArsenalHUD : public UTTLArsenalHUDCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLArsenalHUDCommand_HideArsenalHUD* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class DXM.TTLArsenalHUDCommand_SetUpMissionProgressHUD
class UTTLArsenalHUDCommand_SetUpMissionProgressHUD : public UTTLArsenalHUDCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLArsenalHUDCommand_SetUpMissionProgressHUD* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class DXM.TTLArsenalHUDCommand_PlayInMissionProgressHUD
class UTTLArsenalHUDCommand_PlayInMissionProgressHUD : public UTTLArsenalHUDCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLArsenalHUDCommand_PlayInMissionProgressHUD* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class DXM.TTLArsenalHUDCommand_PlayOutMissionProgressHUD
class UTTLArsenalHUDCommand_PlayOutMissionProgressHUD : public UTTLArsenalHUDCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLArsenalHUDCommand_PlayOutMissionProgressHUD* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class DXM.TTLArsenalHUDCommand_ShowMissionProgressHUD
class UTTLArsenalHUDCommand_ShowMissionProgressHUD : public UTTLArsenalHUDCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLArsenalHUDCommand_ShowMissionProgressHUD* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class DXM.TTLArsenalHUDCommand_HideMissionProgressHUD
class UTTLArsenalHUDCommand_HideMissionProgressHUD : public UTTLArsenalHUDCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLArsenalHUDCommand_HideMissionProgressHUD* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class DXM.TTLArsenalHUDCommand_PlaySubGoalMissionProgressHUD
class UTTLArsenalHUDCommand_PlaySubGoalMissionProgressHUD : public UTTLArsenalHUDCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLArsenalHUDCommand_PlaySubGoalMissionProgressHUD* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class DXM.TTLArsenalHUDCommand_SetArsenalHUDCustom
class UTTLArsenalHUDCommand_SetArsenalHUDCustom : public UTTLArsenalHUDCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLArsenalHUDCommand_SetArsenalHUDCustom* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class DXM.TTLArsenalHUDCommandExecutor
class UTTLArsenalHUDCommandExecutor : public UObject
{
public:
	TArray<class UTTLArsenalHUDCommandBase*>     HUDCommands;                                       // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLArsenalHUDCommandExecutor* GetDefaultObj();

};

// 0x10 (0x108 - 0xF8)
// Class DXM.TTLArsenalHUDComponent
class UTTLArsenalHUDComponent : public UTTLActorComponent
{
public:
	TSubclassOf<class UUserWidget>               UIClass;                                           // 0xF8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           ArsenalHUD;                                        // 0x100(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLArsenalHUDComponent* GetDefaultObj();

	void UpdatePlayerHUD(float DeltaSeconds);
};

// 0x0 (0x28 - 0x28)
// Class DXM.TTLArsenalHUDMakerInterface
class ITTLArsenalHUDMakerInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ITTLArsenalHUDMakerInterface* GetDefaultObj();

	struct FVector GetLocationBP();
	struct FVector GetHUDTextBP(class FText* HudText1, class FText* HudText2);
};

// 0x10 (0x108 - 0xF8)
// Class DXM.TTLArsenalInstrumentHUDComponent
class UTTLArsenalInstrumentHUDComponent : public UTTLActorComponent
{
public:
	class UUserWidget*                           InstrumentHUD;                                     // 0xF8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsHudVisible;                                      // 0x100(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_147C[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLArsenalInstrumentHUDComponent* GetDefaultObj();

	class FString MakePartsInfoString(class UTTLBasicStatusComponent* BasicStatus);
};

// 0xA0 (0x198 - 0xF8)
// Class DXM.TTLArsenalItemMarkerHUDComponent
class UTTLArsenalItemMarkerHUDComponent : public UTTLActorComponent
{
public:
	uint8                                        Pad_1481[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             HUDOffset;                                         // 0x100(0x8)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>               HUDClass;                                          // 0x108(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTTLItemMarkerHUDPooledItem>   PooledHUDs;                                        // 0x110(0x10)(Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<TScriptInterface<class ITTLArsenalHUDMakerInterface>> TargetFieldItems;                                  // 0x120(0x10)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<enum class ETTLArsenalItemMarkerHUD_DisplayType> MakerPriorityArray;                                // 0x130(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        AddHUDNum;                                         // 0x140(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1483[0x54];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLArsenalItemMarkerHUDComponent* GetDefaultObj();

	void UpdateHUDBP(float DeltaSeconds);
	void UpdateHUD(float DeltaSeconds);
	void RemoveTargetFieldItem(TScriptInterface<class ITTLArsenalHUDMakerInterface> FieldItem);
	void PlayStartAnimation(class UUserWidget* HUD);
	void PlayDisableAnimation(class UUserWidget* HUD);
	class UWidgetAnimation* GetHUDWidgetNoAccessAnim(class UUserWidget* HUD);
	class UWidgetAnimation* GetHUDWidgetDescriptionInAnim(class UUserWidget* HUD);
	class UWidgetAnimation* GetHUDWidgetAccessAnim(class UUserWidget* HUD);
	void DumpPoolHUDInfo();
	bool AddTargetFieldItem(TScriptInterface<class ITTLArsenalHUDMakerInterface> FieldItem, enum class ETTLArsenalItemMarkerHUD_DisplayType DisplayType, enum class ETTLERaderObjectType RaderType);
};

// 0x24D0 (0x25C8 - 0xF8)
// Class DXM.TTLArsenalMovementComponent
class UTTLArsenalMovementComponent : public UTTLActorComponent
{
public:
	bool                                         SniperModeEnabled;                                 // 0xF8(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14DA[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnStartSniperModeForPlayer;                        // 0x108(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEndSniperModeForPlayer;                          // 0x118(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_14DB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SniperCameraControlRotationRate;                   // 0x12C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SniperCameraZoomMaxRate;                           // 0x130(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14DC[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  CollisionCheckTag;                                 // 0x150(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsCollisionCheck;                                  // 0x158(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14DD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CollisionMovePower;                                // 0x15C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CollisionCheckRadius;                              // 0x160(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CollisionCheckHalfHeight;                          // 0x164(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DebugArrowSize;                                    // 0x168(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DebugArrowSizePower;                               // 0x16C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsCollisionDebugDraw;                              // 0x170(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14DE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnTriggerQuickMove;                                // 0x178(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnStartDamageReaction;                             // 0x188(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnFinishDamageReaction;                            // 0x198(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnTriggerAvoidWallAction;                          // 0x1A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class ACharacter*                            OwnerCharacter;                                    // 0x1B8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14DF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USkinnedMeshComponent*                 ArmLMesh;                                          // 0x1C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkinnedMeshComponent*                 ArmRMesh;                                          // 0x1D0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkinnedMeshComponent*                 CenterbodyMesh;                                    // 0x1D8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkinnedMeshComponent*                 HeadMesh;                                          // 0x1E0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkinnedMeshComponent*                 LegsMesh;                                          // 0x1E8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14E0[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WalkSpeed;                                         // 0x1F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DashSpeed;                                         // 0x1FC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostSpeed;                                        // 0x200(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpSpeed;                                         // 0x204(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RiseSpeed;                                         // 0x208(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OuterRiseSpeed;                                    // 0x20C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OuterGrenadeFlySpeed;                              // 0x210(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RiseFirstImpulse;                                  // 0x214(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RiseMinContinueSeconds;                            // 0x218(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DescentSpeed;                                      // 0x21C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DescentFirstImpulse;                               // 0x220(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DescentMinContinueSeconds;                         // 0x224(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Acceleration;                                      // 0x228(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoostDirection;                                    // 0x22C(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14E1[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HoverSpeed;                                        // 0x244(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        QuickSpeedOnAir;                                   // 0x248(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        QuickSpeedOnLand;                                  // 0x24C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        QuickDescentSpeed;                                 // 0x250(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PresetMode;                                        // 0x254(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostControl;                                      // 0x258(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnStopDuration;                                  // 0x25C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GroundTurnStopDuration;                            // 0x260(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RollingDuration;                                   // 0x264(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AirRollingDuration;                                // 0x268(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OuterBladeDuration;                                // 0x26C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OuterBladeDurationInAir;                           // 0x270(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         RollingPressed;                                    // 0x274(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14E2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LandingTime;                                       // 0x278(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DodgeDuration;                                     // 0x27C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DodgeRadius;                                       // 0x280(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14E3[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         JumpPressed;                                       // 0x28C(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         RisePressed;                                       // 0x28D(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DescentPressed;                                    // 0x28E(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DashPressed;                                       // 0x28F(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         QuickMovePressed;                                  // 0x290(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         FlyMovement;                                       // 0x291(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisableMovement;                                   // 0x292(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LandingMovement;                                   // 0x293(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LandingStopSpeed;                                  // 0x294(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LandingCancel;                                     // 0x298(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14E4[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         RollerDashing;                                     // 0x29A(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14E5[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        JumpRemainingTime;                                 // 0x29C(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpChargeTime;                                    // 0x2A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpLandedTime;                                    // 0x2A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LandedMotionDuration;                              // 0x2A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LongLandedMotionDuration;                          // 0x2AC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LongLandedMotionThreshold;                         // 0x2B0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14E6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LandedMotionScale;                                 // 0x2B8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpMotionDuration;                                // 0x2BC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DoubleJumpMotionDuration;                          // 0x2C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpUpToDownMotionDuration;                        // 0x2C4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpMotionScale;                                   // 0x2C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DamageMovement;                                    // 0x2CC(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DodgeMovement;                                     // 0x2CD(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DodgeInbincible;                                   // 0x2CE(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14E7[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DodgeInbincibleRemainingTime;                      // 0x2D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostSpeedInBaseCamp;                              // 0x2D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ForceControlWarning;                               // 0x2D8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ForceControlled;                                   // 0x2D9(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14E8[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsWrecked;                                         // 0x2DC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsWreckLanded;                                     // 0x2DD(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14E9[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WreckedWeaponDistanceR;                            // 0x2E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WreckedWeaponDistanceL;                            // 0x2E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsWreckForEject;                                   // 0x2E8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsWreckInAir;                                      // 0x2E9(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsInitialWrecked;                                  // 0x2EA(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsAutoRunning;                                     // 0x2EB(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14EA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class ATTLHUDEntity>           HUDClassOf;                                        // 0x2F0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14EB[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         BoostEnabled;                                      // 0x338(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14EC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BoostElapsedTime;                                  // 0x33C(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         QuickMoveEnabled;                                  // 0x340(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsRightWeaponShieldGuard;                          // 0x341(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsLeftWeaponShieldGuard;                           // 0x342(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSuccessWeaponShieldGuarding;                     // 0x343(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14ED[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsOuterEjecting;                                   // 0x345(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14EE[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsGuardSpeedDown;                                  // 0x348(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsFemtoShield;                                     // 0x349(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLGuardType                     WeaponShieldGuardType;                             // 0x34A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLDamageState                   DamageState;                                       // 0x34B(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamagedTime;                                       // 0x34C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               QuickMoveDirection;                                // 0x350(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        QuickMoveElapsedTime;                              // 0x35C(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         MovementStarted;                                   // 0x360(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         TurnMovement;                                      // 0x361(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14EF[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               TurnDirection;                                     // 0x364(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnMovementTime;                                  // 0x370(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         RollingMovement;                                   // 0x374(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         RollingBladeAttack;                                // 0x375(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         RollingWithCloseRangeAttack;                       // 0x376(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14F0[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RollingSpeed;                                      // 0x378(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RollingDirection;                                  // 0x37C(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RollingMovementTime;                               // 0x388(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RollingMovementDisabledTime;                       // 0x38C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RollingCounterRate;                                // 0x390(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RollingCounterVelocityLimit;                       // 0x394(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RollingCounterEnableTime;                          // 0x398(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         GetOnMovement;                                     // 0x39C(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         GetOffMovement;                                    // 0x39D(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         PlayingOneShotAnimation;                           // 0x39E(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14F1[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          PlayingOneShotAnimationMontage;                    // 0x3A0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14F2[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                DamageCauserOwner;                                 // 0x3B0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14F3[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         LightningMovement;                                 // 0x3C0(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14F4[0x23];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsLightningMoveFarToQuickInput;                    // 0x3E4(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14F5[0x1B];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RollingStaminaConsume;                             // 0x400(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DashStaminaConsume;                                // 0x404(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InputForward;                                      // 0x408(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InputRight;                                        // 0x40C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               InputDirection;                                    // 0x410(0xC)(Edit, BlueprintVisible, Net, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14F6[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        InputThreshold0;                                   // 0x428(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InputThreshold1;                                   // 0x42C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DashThreshold;                                     // 0x430(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveStartBoostTime;                                // 0x434(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              MoveStartFrontRotation;                            // 0x438(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               LaunchVelocity;                                    // 0x444(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InputTurn;                                         // 0x450(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InputLookup;                                       // 0x454(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraControlRate;                                 // 0x458(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageIntervalTime;                                // 0x45C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanCancelDamageReaction;                           // 0x460(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14F7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DamageTimeOnLandThreshold;                         // 0x464(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageTimeNoKnockBackThreshold;                    // 0x468(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KnockBackTime;                                     // 0x46C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageIntervalTimeThreshold;                       // 0x470(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageVelocityScale;                               // 0x474(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamagedRotationInterpTimeOnLand;                   // 0x478(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamagedRotationInterpTimeOnAir;                    // 0x47C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DamagedRotationInterpCurve;                        // 0x480(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HitBreakSpeedDownRate;                             // 0x488(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShieldSpeedDownRate;                               // 0x48C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLKnockOutParameter                 KnockOutParameter;                                 // 0x490(0x58)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	float                                        ReactionBackLevel1;                                // 0x4E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReactionBackLevel2;                                // 0x4EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReactionBackLevel3;                                // 0x4F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReactionBackCloseRangeRepelled;                    // 0x4F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OuterFallDamageThreshold;                          // 0x4F8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OuterFallDeathThreshold;                           // 0x4FC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14F8[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UAnimSequenceBase>      AvoidAnimationAirLeft;                             // 0x518(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimSequenceBase>      AvoidAnimationAirRight;                            // 0x540(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimSequenceBase>      AvoidAnimationGroundLeft;                          // 0x568(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimSequenceBase>      AvoidAnimationGroundRight;                         // 0x590(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxVernierOff;                                      // 0x5B8(0x98)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxVernierOn;                                       // 0x650(0x98)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxVernierOnRemoteOuter;                            // 0x6E8(0x98)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxQuickBoost;                                      // 0x780(0x98)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxQuickBoostStartCross;                            // 0x818(0x98)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxQuickBoostEnd;                                   // 0x8B0(0x98)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxQuickBoostLoop;                                  // 0x948(0x98)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxFootStepNormal;                                  // 0x9E0(0x98)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxDash;                                            // 0xA78(0x98)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxLanded;                                          // 0xB10(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxFallDown;                                        // 0xBA8(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxFallDownEnd;                                     // 0xC40(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxFallDownEndOnSnowGround;                         // 0xCD8(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxDodgeSuccess;                                    // 0xD70(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxDodgeQuickBoostLoop;                             // 0xE08(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxFemtoShiftAssultStart;                           // 0xEA0(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxFemtoShiftAssultArmStart[0x3];                   // 0xF38(0x1C8)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxFemtoShiftAssultFinish;                          // 0x1100(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxFemtoShiftWingStart;                             // 0x1198(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxFemtoShiftWingArmStart[0x3];                     // 0x1230(0x1C8)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxFemtoShiftWingFinish;                            // 0x13F8(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxFemtoShiftShieldLoop;                            // 0x1490(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxFemtoZoneLoop;                                   // 0x1528(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UParticleSystem*                       TemplateVernierOn;                                 // 0x15C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       TemplateVernierOff;                                // 0x15C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USkeletalMesh>          AssultShiftMeshes[0x3];                            // 0x15D0(0x78)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USkeletalMesh>          WingShiftMeshesLeft[0x3];                          // 0x1648(0x78)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USkeletalMesh>          WingShiftMeshesRight[0x3];                         // 0x16C0(0x78)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                AssultShiftMeshComps[0x6];                         // 0x1738(0x30)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                WingShiftMeshComps[0x6];                           // 0x1768(0x30)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              AssultShiftMaterialInstanceDynamics[0x6];          // 0x1798(0x30)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              WingShiftMaterialInstanceDynamics[0x6];            // 0x17C8(0x30)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimationAsset>        AssultShiftAnimationLeft;                          // 0x17F8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimationAsset>        AssultShiftAnimationRight;                         // 0x1820(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimationAsset>        WingShiftAnimationLeft;                            // 0x1848(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimationAsset>        WingShiftAnimationRight;                           // 0x1870(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimerHandle                          FemtoShiftStartTimer;                              // 0x1898(0x8)(NoDestructor, NativeAccessSpecifierPublic)
	struct FTimerHandle                          FemtoShiftAssultEndTimer;                          // 0x18A0(0x8)(NoDestructor, NativeAccessSpecifierPublic)
	struct FTimerHandle                          FemtoShiftWingEndTimer;                            // 0x18A8(0x8)(NoDestructor, NativeAccessSpecifierPublic)
	bool                                         IsProcessingFemtoShiftStartVFX;                    // 0x18B0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14F9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FemtoShiftStartVFXProcessTime;                     // 0x18B4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentFemtoShiftStartVFXProcessTime;              // 0x18B8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          FemtoShiftStartVFXStartColor;                      // 0x18BC(0x10)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          FemtoShiftStartVFXEndColor;                        // 0x18CC(0x10)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14FA[0x34];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DefaultFriction;                                   // 0x1910(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefaultGroundBrakingDeceleration;                  // 0x1914(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefaultAirBrakingDeceleration;                     // 0x1918(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SlideDirection;                                    // 0x191C(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FallDownStartTime;                                 // 0x1928(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               AvoidWallLocation;                                 // 0x192C(0xC)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               AvoidWallNormal;                                   // 0x1938(0xC)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               AvoidWallActionDirection;                          // 0x1944(0xC)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AvoidWallActionTime;                               // 0x1950(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsLeftAvoidWallAction;                             // 0x1954(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSpinShooting;                                    // 0x1955(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSpinShootLeft;                                   // 0x1956(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14FB[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              CloseRangeAttack_Rotation;                         // 0x1958(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_14FC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                CloseRangeAttack_TargetActor;                      // 0x1968(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CloseRangeAttack_Phase;                            // 0x1970(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CloseRangeAttack_Speed;                            // 0x1974(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CloseRangeAttack_Timer;                            // 0x1978(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CloseRangeAttack_StopTimer;                        // 0x197C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CloseRangeAttack_Length;                           // 0x1980(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CloseRangeAttack_IsAfterBoost;                     // 0x1984(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14FD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           CloseRangeAttack_MoveEffectResource;               // 0x1988(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           CloseRangeAttack_EstablishedComboEffectResource;   // 0x1A20(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                         CloseRangeAttack_CanMoveInAttack;                  // 0x1AB8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14FE[0x1F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLCharacterCommon*                   Tsubazeriai_TargetActor;                           // 0x1AD8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Tsubazeriai_Phase;                                 // 0x1AE0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14FF[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Tsubazeriai_ContinuousTime;                        // 0x1AF4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Tsubazeriai_PositionOffsetWithCapsuleRadius;       // 0x1AF8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1500[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Tsubazeriai_TolerantDistance;                      // 0x1B04(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        Tsubazeriai_DegreeLimit;                           // 0x1B08(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1501[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsEnableAirCounter;                                // 0x1B10(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1502[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxQuickBoostVFXFadeTime;                          // 0x1B14(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1503[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsRespawning;                                      // 0x1B24(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsGettingRespawned;                                // 0x1B25(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1504[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               RespawnLimitVelocity;                              // 0x1B28(0xC)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1505[0x134];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsOuterMode;                                       // 0x1C68(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1506[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         CouldDoubleJump;                                   // 0x1C6B(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        OuterJumpCount;                                    // 0x1C6C(0x4)(BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1507[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        OuterJumpCameraLagMaxDistance;                     // 0x1C74(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1508[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        OuterFlyingCameraLagSpeed;                         // 0x1C88(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanMoveWhenLanding;                                // 0x1C8C(0x1)(BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1509[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsOuterSettingTrap;                                // 0x1C94(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDashJumping;                                     // 0x1C95(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEOuterThrowPhase              OuterThrowPhase;                                   // 0x1C96(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsPunchThrow;                                      // 0x1C97(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanRollingCancelOnThrow;                           // 0x1C98(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_150A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnOuterThrowEnd;                                   // 0x1CA0(0x10)(BlueprintVisible, ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	enum class ETTLEOuterExplosionPhase          OuterExplosionPhase;                               // 0x1CB0(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_150B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        OuterExplosionChargeTime;                          // 0x1CB4(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentOuterExplosionChargeTime;                   // 0x1CB8(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OuterExplosionWaitTime;                            // 0x1CBC(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentOuterExplosionWaitTime;                     // 0x1CC0(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_150C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnOuterExplosion;                                  // 0x1CC8(0x10)(BlueprintVisible, ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        OuterDefaultRotationRate;                          // 0x1CD8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_150D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           OuterExplosionFX;                                  // 0x1CE0(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           OuterExplosionChargeFX;                            // 0x1D78(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           OuterRollingFX;                                    // 0x1E10(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           CrashSmokeFX;                                      // 0x1EA8(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           GetRespawningFX;                                   // 0x1F40(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           GetRespawnSuccessFX;                               // 0x1FD8(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           OuterPunchThrowFX;                                 // 0x2070(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        OuterDamageFlyLoopBlendTime;                       // 0x2108(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OuterLandRollingFriction;                          // 0x210C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_150E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               GetOnJumpStartLocation;                            // 0x2114(0xC)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               GetOnJumpFinalLocation;                            // 0x2120(0xC)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              GetOnJumpStartRotation;                            // 0x212C(0xC)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              GetOnJumpChargeStartRotation;                      // 0x2138(0xC)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              GetOnJumpChargeFinalRotation;                      // 0x2144(0xC)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_150F[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         OuterRepairEnabled;                                // 0x2168(0x1)(BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1510[0x23];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         DebugOuterJumpCameraLag;                           // 0x218C(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1511[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          FemtoShiftChangeTimer;                             // 0x2190(0x8)(NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1512[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystemComponent*              VernierPSC[0x2];                                   // 0x21A0(0x10)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        VFXVernier;                                        // 0x21B0(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1513[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlayback                        VFXFootLoop[0x3];                                  // 0x21D0(0x48)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1514[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlayback                        VFXBodyLoop;                                       // 0x2220(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1515[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlayback                        VFXQuickBoost[0x2];                                // 0x2240(0x30)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	bool                                         VFXIsDodgeQuickBoost;                              // 0x2270(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1516[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlayback                        VFXFallDown;                                       // 0x2278(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        VFXFemtoShiftLoop[0x4];                            // 0x2290(0x60)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        VFXHoverPlayback;                                  // 0x22F0(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        VFXHoverQuickBoostPlayback;                        // 0x2308(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        VFXFemtoZoneLoopPlayback;                          // 0x2320(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        VFXCrashPlayback[0x5];                             // 0x2338(0x78)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        VFXOnRespawnPlayback;                              // 0x23B0(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        OuterExplosionChargePlayback;                      // 0x23C8(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        VFXSpinShoot;                                      // 0x23E0(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UAnimationAsset*                       AnimAssetPartsLegL1[0x3];                          // 0x23F8(0x18)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimationAsset*                       AnimAssetPartsLegL2[0x3];                          // 0x2410(0x18)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimationAsset*                       AnimAssetPartsLegR1[0x3];                          // 0x2428(0x18)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimationAsset*                       AnimAssetPartsLegR2[0x3];                          // 0x2440(0x18)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          RollerDashVFXTimer;                                // 0x2458(0x8)(NoDestructor, NativeAccessSpecifierPrivate)
	class ATTLCharacterCommon*                   OuterGetOnTarget;                                  // 0x2460(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1517[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        RestoreRotationState;                              // 0x2470(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDebugDrawCheckFloor;                             // 0x2474(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1518[0xA3];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ETTLMultiplayFemtoShiftState      CurrentFemtoShiftStatus;                           // 0x2518(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1519[0x1F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLHUDMissionMain*                    HUDMissionMain;                                    // 0x2538(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_151A[0x88];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLArsenalMovementComponent* GetDefaultObj();

	void WreckWeapon(class ATTLWeaponBase* Weapon, bool IsLeft);
	void UpdateRespawnVFX(float Percentage);
	void UpdateOuterModeModel(TArray<class FName>& InputSkillList);
	bool TryAddTsubazeriaiScore();
	void ToggleSniperMode();
	bool ToggleFemtoShift(bool IsPrev);
	bool SwitchRisePressed(bool IsPressed);
	bool SwitchBoost();
	void StopVFXQuickBoost();
	void StopMovableUnitAction(enum class ETTLEPartsMovableType Type, float DurationToStop);
	void StartWreckLand();
	void StartWreck(bool IsInAir, bool InitialWrecked);
	void StartTurn(struct FVector& Direction, float StopDuration);
	void StartSpinShoot();
	void StartSingleAnimation(class UAnimSequenceBase* AnimAsset, float PlayRate, bool IsLoop);
	void StartRolling(struct FVector& Direction, bool IsWithCloseRangeAttack);
	void StartQuickMove();
	void StartOuterTrapSetting(struct FVector& SpawnLocation, struct FVector& SpawnDirection);
	void StartOuterThrow();
	void StartOuterPunchThrow_Throw();
	void StartOuterPunchThrow_StartThrow();
	void StartOuterPunchThrow_Catch();
	void StartOuterJump();
	void StartOuterEjectJump();
	void StartMovableUnitAction(enum class ETTLEPartsMovableType Type, float DurationToStop);
	void StartLanded(TSubclassOf<class AActor> DecalClass);
	void StartJumpCharge();
	void StartJump();
	void StartGettingRespawned();
	void StartGetOnJump();
	void StartGetOn(class ATTLCharacterCommon* Target);
	void StartGetOff(class FName& BodyID, enum class ETTLEHumanGenderType Gender);
	void StartFlyingDamage();
	bool StartFemtoShiftWingImpl();
	bool StartFemtoShiftWing();
	bool StartFemtoShiftShieldImpl();
	bool StartFemtoShiftShield();
	bool StartFemtoShiftAssultImpl();
	bool StartFemtoShiftAssult();
	void StartExplosionCharge();
	void StartDamageReaction(const struct FVector& DamageDirection, float KnockBack, float KnockOut, bool* IsKnockBackStart, bool IsCatchTarget, float Mass, bool IgnoreMass, bool ForceFallDown, bool IsForceClient);
	void StartBoostOff();
	void StartBeGotOn();
	void StartBeGotOff();
	bool StartArrested();
	void SetVernierCustomDepth(bool Enable);
	void SetSpinShootVFXEnable(bool Enable);
	void SetLightningMoveParam(float MinCalcInputTime, float MaxCalcInputTime, float MinMoveDistance, float MaxMoveDistance);
	void SetEnableVFXVernier(bool Enable);
	void SetEnableVFXRollerDash(bool Enable, bool ForceStop, bool ForceRestart);
	void SetEnableVFXQuickBoost(bool Enable, bool Reset);
	void SetEnableVFXKnockbackSlide(bool Enable);
	void SetEnableVFXKnockbackRolling(bool Enable);
	void SetEnableVFXFemtoShiftWing(bool Enable, bool NoFemto);
	void SetEnableVFXFemtoShiftShield(bool Enable);
	void SetEnableVFXFallDown(bool Enable);
	bool SetEnableQuickMove(bool Enable, bool NeedsCheckCanQuickMove);
	bool SetEnableFlying(bool Enable);
	bool SetEnableDodge(bool Enable, bool IsInbincible);
	bool SetEnableDash(bool Enable);
	bool SetEnableBoost(bool Enable);
	bool SetDescentPressed(bool IsPressed, float CameraControlRate);
	bool SetDamageReactionCPP(class AActor* DamageCauser, class UDamageType* DamageType);
	bool SetBoostOffIfLanded();
	void SetAllVFXVernierVisibility(bool Visible);
	void ServerNotifyStartRolling(struct FVector& Direction, bool IsWithCloseRangeAttack);
	void ServerNotifyStartOuterRepair();
	void ServerNotifyStartLightningMove();
	void ServerNotifyMovementStatus(int8 MovementFlag);
	void ServerNotifyFemutoShift(enum class ETTLMultiplayFemtoShiftState NotifyState);
	void ServerNotifyEndRolling(bool DashPressed);
	void ServerNotifyEndOuterRepair();
	void ServerNotifyEndLightningMove();
	void ReservePurgeCaptureWeapon(uint8 AttackType);
	void ProcessYawPitchCpp(float Yaw, float Pitch);
	void ProcessWreckBP(float DeltaSeconds);
	void ProcessWreck(float DeltaSeconds);
	void ProcessWeaponCancel(class ATTLWeaponBase* Weapon, class UAnimMontage* Montage, bool NeedBlend, bool IsForceInputEnd);
	bool ProcessTsubazeriai_Cpp(float DeltaSeconds, bool* IsForceKnockBack);
	void ProcessShieldBreakEnd(bool IsLeft);
	void ProcessRollingAction(float DeltaSeconds);
	void ProcessPitchControlCpp(float DeltaSeconds);
	void ProcessOuterExplosion(float DeltaSeconds);
	void ProcessMoveCpp(float ForwardAxisValue, float RightAxisValue, struct FVector* ForwardVector, struct FVector* RightVector, struct FRotator* ControlRotation);
	void ProcessJumpInput(float DeltaSeconds);
	void ProcessInputCpp(struct FVector* Direction, bool* Started, bool* Changed, bool MustCalcInputVector);
	void ProcessFemtoShiftStartVFX(float DeltaTime);
	void ProcessDamageEndOnBP();
	void ProcessDamageEnd();
	void ProcessAirControl(float DeltaSeconds);
	void ProcessAction(float DeltaSeconds);
	void PlayWreckVFX();
	void PlayVFXRailGunFootStep(bool Enable);
	void PlayVFXOuterRolling();
	void PlayVFXLanded();
	void PlayVFXKnockbackLanded();
	void PlayVFXFootStep(bool IsLeft, bool IsDash);
	void PlayVFXFallDownEnd();
	void PlayVFXDodgeSuccess();
	void OnTriggerQuickMoveDelegate(bool Enabled, const struct FVector& MoveInputDirection);
	void OnSpinShootEnd();
	void OnShieldBreakStart(bool IsLeft);
	void OnShieldBreakEnd(bool IsLeft);
	void OnRespawnCanceled();
	void OnRespawnAnimationFinish();
	void OnRep_RiseChanged();
	void OnRep_QuickMoveChanged();
	void OnRep_FlyMovement();
	void OnRep_FemtoShitStatus();
	void OnPartsCompleteDestroyed(enum class ETTLDestroyablePartsType PartsType);
	void OnOwnerPartsChangeFinished(enum class ETTLPartsType Type);
	void OnOwnerFemtoLevelChange(int32 NewLevel, bool Initialized);
	void OnOwnerCharacterMovementModeChange(class ACharacter* Character, enum class EMovementMode PrevMovementMode, uint8 PreviousCustomMode);
	void OnOwnerCharacterHit(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void OnOverHeatStart();
	void OnOuterTurnEnd();
	void OnInitializeBP();
	void OnHitBreakStart();
	void OnHitBreakEnd();
	void OnGotOnFinish();
	void OnAvoidActionStart(float AvoidTime, const struct FVector& WallLocation, const struct FVector& WallNormal, const struct FVector& ActionDirection, bool IsLeft);
	class AActor* Move_Manual(const struct FVector& Velocity);
	bool IsTargetCatch();
	bool IsSniperModeRestriction();
	bool IsShieldGuardKnockBack();
	bool IsShieldGuard();
	bool IsPickUp();
	bool IsOuterThrowing();
	bool IsOuterPunchThrowing();
	bool IsOuterExplosionCharging();
	bool IsMovable();
	bool IsLanded();
	bool IsKnockBackDamage();
	bool IsInActionCloseRangeAttack();
	bool IsDescent();
	void IsCloseRangeAttackMoving(bool WithMoveCheck, bool* IsMoving);
	void InitializeVernier();
	void InitializeAssets();
	void GettingRespawnFinish();
	void GetOnAttachToHatch();
	void ForceFinishFemtoShiftVFX();
	bool FinishFemtoShiftVFX();
	bool FinishFemtoShift_ExceptAssult();
	bool FinishFemtoShift();
	void ExecuteOuterExplosion();
	void EndOuterTrapSetting();
	void EndOuterThrow(bool IsForceCancel);
	void EndOuterEject();
	void EndJump();
	void EndArrested();
	bool CouldCancelDamageReaction();
	bool CheckCatchActorAndForceCancelAtStartWreckLand();
	bool CheckCanDescent();
	bool CheckCanControlMovement();
	bool CheckCanBoost();
	bool CanQuickMoveForPlayerController(bool IsEnabled);
	bool CanOuterThrowing();
	bool CanGetOffAction();
	bool CanChangeSniperMode();
	bool CanChangeRisePressed();
	void CancelSupportWeaponAttack();
	void CancelShoulderWeaponAttack();
	void CancelRightShotAttack();
	void CancelRightShieldAttack(bool NeedsCheckGuarding);
	void CancelOuterBladeWeaponAttack();
	void CancelLeftShotAttack();
	void CancelLeftShieldAttack(bool NeedsCheckGuarding);
	void CancelCloseRangeAttack(bool ForceBoostOn);
	void CancelAllWeaponAttack(bool CancelCatchWeapon);
	bool CanCancelCloseRangeAttack(bool IsQuickBoost);
	void CallCancelCloseRangeWeaponAttack(bool IsOnlyFlags, bool CancelCatchWeapon);
	void CallCancelAllAttackFromCpp();
	float CalcKnockOutSpeed(float KnockOutValue, float AttackerMass, bool IgnoreMass);
	void CalcCharactorRotationOnDamage(struct FVector& DamageDirection);
	bool AttackCheckForFemtoShiftChange();
	void AddMovementInputOnClient(struct FVector& WorldDirection, float ScaleValue, bool Force);
	void AddLaunchVelocity(struct FVector& Velocity);
	void ActionOnWreckMotionFinish();
	void ActionOnDamageStarted(class UDamageType* DamageType, class AActor* DamageCauser);
};

// 0x40 (0x380 - 0x340)
// Class DXM.TTLArsenalNameUi
class ATTLArsenalNameUi : public ATTLActor
{
public:
	class UWidgetComponent*                      WidgetComponent;                                   // 0x340(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        ConsoleNo;                                         // 0x348(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_151B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        InputInterval;                                     // 0x34C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLAutoTextInputComponent*            AutoTextInputComp;                                 // 0x350(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_151C[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLArsenalNameUi* GetDefaultObj();

};

// 0x1A8 (0x2A0 - 0xF8)
// Class DXM.TTLArsenalPaintComponent
class UTTLArsenalPaintComponent : public UTTLActorComponent
{
public:
	class USkeletalMeshComponent*                BaseMesh;                                          // 0xF8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                PartsMeshes[0x7];                                  // 0x100(0x38)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLMaterialInstanceDynamic           PartsMaterials[0xB];                               // 0x138(0xB0)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1532[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLWeaponMaterialInfo>        WeaponMaterialInfoList;                            // 0x228(0x10)(ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnFinishedCutoff;                                  // 0x238(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnStartedCutoffParts;                              // 0x248(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnFinishedCutoffParts;                             // 0x258(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1533[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CutoffSpeed;                                       // 0x278(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1534[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                StartTst;                                          // 0x280(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                EndTst;                                            // 0x288(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TestOverrideCutoffValue;                           // 0x290(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1535[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLArsenalPaintComponent* GetDefaultObj();

	void UpdateMaterials(enum class ETTLEPartMenuIndex Type, bool UseCutoff);
	void TestSetSocketActorPos(const struct FVector& StartPos, const struct FVector& EndPos);
	void SetPartsDecalTexture(enum class ETTLPartsType Type, const class FString& DecalPath);
	void SetPartsDecalParameter(enum class ETTLPartsType Type, struct FTTLArsenalPartsPaintInfo& PaintInfo);
	void SetPartsDecalColor(enum class ETTLPartsType Type, const struct FLinearColor& Color);
	void SetPartsComouflageByName(enum class ETTLPartsType Type, struct FTTLArsenalPaintInfo& PaintInfo, bool* GiltSet);
	void SetPartsComouflage(enum class ETTLPartsType Type, int32 ComouflageIndex);
	void SetPartsColor3(enum class ETTLPartsType Type, struct FLinearColor& Color);
	void SetPartsColor2(enum class ETTLPartsType Type, struct FLinearColor& Color);
	void SetPartsColor1(enum class ETTLPartsType Type, struct FLinearColor& Color);
	void SetPartsColor(enum class ETTLPartsType Type, struct FLinearColor& Color1, struct FLinearColor& Color2, struct FLinearColor& Color3);
	void SetArsenalPaint(struct FTTLArsenalPaintInfo& PaintInfo, bool IsChangePartsFinish);
	void PlayCutoffParts(enum class ETTLEPartMenuIndex PartsType, bool InverseDirection, bool ShowAllBody, float DelayToPlay);
	void PlayCutoffAppearAfterDisappear(float DelayToPlay);
	float PlayCutoff(bool InverseDirection, float DelayToPlay);
	bool IsPlayingCutoff(enum class ETTLEPartMenuIndex PartsType);
	void HighlightDecalPlace(enum class ETTLPartsType Type, bool IsHighlight);
};

// 0x2F0 (0x630 - 0x340)
// Class DXM.TTLMenuSceneBase
class ATTLMenuSceneBase : public ATTLActor
{
public:
	uint8                                        Pad_1563[0x128];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UUserWidget>               LayoutClass;                                       // 0x468(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UUserWidget>             LayoutClassSoft;                                   // 0x470(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           LayoutWidget;                                      // 0x498(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ArrowIndex;                                        // 0x4A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        State;                                             // 0x4A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1565[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsStartScene;                                      // 0x4A9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsNowLoading;                                      // 0x4AA(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1566[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ATTLPopUpBase*>                 PopUpList;                                         // 0x4B0(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          ReservedTutorialList;                              // 0x4C0(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class AActor*                                UICamera;                                          // 0x4D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1567[0x68];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLUIHeaderComponent*                 HeaderMenuComponent;                               // 0x540(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLUITopMenuComponent*                TopMenuComponent;                                  // 0x548(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLAssembleMenuComponent*             AssembleMenuComponent;                             // 0x550(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLUIArsenalAssembleComponent*        ArsenalAssembleComponent;                          // 0x558(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLUIArsenalParamMenuComponent*       ArsenalParamMenuComponent;                         // 0x560(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLUICameraControllBase*              CameraControllComponent;                           // 0x568(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLSortMenuComponent*                 SortMenuComponent;                                 // 0x570(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLAssembleCategoryMenuComponent*     AssembleCategoryMenuComponent;                     // 0x578(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLAutoTextInputComponent*            AutoTextInputComp;                                 // 0x580(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATTLLevelControlActor*                 LevelController;                                   // 0x588(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         CameraTest;                                        // 0x590(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETTLMenuSceneType                 SceneType;                                         // 0x591(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_156A[0x16];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLInlineKeyboardActor*               InlineKeyboard;                                    // 0x5A8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_156B[0x80];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLMenuSceneBase* GetDefaultObj();

	void StopConsoleMessage();
	void StartSceneBP();
	void StartScene(class AActor* Camera);
	void StartSavingUI();
	float StartLoadingUI(enum class ETTLELoadingType LoadingType);
	void StartConsoleMessageByMsgInfo(struct FTTLConsoleMsgPlayInfo& MsgPlayInfo);
	void StartConsoleMessage(enum class ETTLConsoleMsgType ConsoleMsgType, class FName ConsoleMsgRowName);
	bool ShouldFinishStateTransition();
	void SetPopUp(class ATTLPopUpBase* NewPopUp, enum class ETTLEManagedPopUpType Type);
	void SetOpenMenuMode(enum class ETTLEOpenMenuMode NewMode);
	void SetArrowIndex(int32 Input, int32 MaxIndex);
	void ReserveFirstOpen();
	void ProcessUp_ToFree();
	void ProcessUp(int32 RepeatCount);
	void ProcessRStickUp_ToFree();
	void ProcessRStickUp(int32 RepeatCount);
	void ProcessRStickRight_ToFree();
	void ProcessRStickRight(int32 RepeatCount);
	void ProcessRStickLeft_ToFree();
	void ProcessRStickLeft(int32 RepeatCount);
	void ProcessRStickDown_ToFree();
	void ProcessRStickDown(int32 RepeatCount);
	void ProcessRight_ToFree();
	void ProcessRight(int32 RepeatCount);
	void ProcessR1Repeat(int32 RepeatCount);
	void ProcessLStickUp(int32 RepeatCount);
	void ProcessLStickRight(int32 RepeatCount);
	void ProcessLStickLeft(int32 RepeatCount);
	void ProcessLStickDown(int32 RepeatCount);
	void ProcessLoadingButtonB();
	void ProcessLoadingButtonA();
	void ProcessLeft_ToFree();
	void ProcessLeft(int32 RepeatCount);
	void ProcessL1Repeat(int32 RepeatCount);
	void ProcessDown_ToFree();
	void ProcessDown(int32 RepeatCount);
	void ProcessButtonY();
	void ProcessButtonX();
	void ProcessButtonStart();
	void ProcessButtonSelect();
	void ProcessButtonR3();
	void ProcessButtonR2();
	void ProcessButtonR1();
	void ProcessButtonL3();
	void ProcessButtonL2();
	void ProcessButtonL1();
	void ProcessButtonB();
	void ProcessButtonA();
	void ProcessAnalogRStickY(float AxisValue);
	void ProcessAnalogRStickX(float AxisValue);
	void ProcessAnalogLStickY(float AxisValue);
	void ProcessAnalogLStickX(float AxisValue);
	void PlaySESystemOpen();
	void PlaySESystemClose();
	void PlaySESpecMenu();
	void PlaySESortMenu();
	void PlaySESelect();
	void PlaySEPayment();
	void PlaySEOk();
	void PlaySEMissionStart();
	void PlaySEMenuNext();
	void PlaySEGetMoney();
	void PlaySEError();
	void PlaySEEquip();
	void PlaySEChangeFilter();
	void PlaySEChangeCategory();
	void PlaySECancel();
	void PlayMenuSE(enum class ETTLEMenuSeType SeType);
	void PlayDemo(class FName EventID);
	void OpenTutorials(const TArray<enum class ETTLEElementReleaseType>& ElementReleaseTypeList);
	class ATTLManualPopUp* OpenTutorialPopup(class FName& TutorialID);
	class ATTLManualPopUp* OpenManualPopup();
	class ATTLLineChatPopUp* OpenLineChatPopup(bool UseHeader);
	void OpenKeyboardWithAttribute(const class FString& DefaultInput, int32 MaxLength, class FText HeaderText, class FText SubHeaderText);
	void OpenKeyboard(const class FString& DefaultInput);
	void OnUpdatedArsenalParam(struct FTTLArsenalPartsInfoList& PartsInfoList, struct FTTLArsenalPartsInfoList& ComparePartsInfoList);
	void OnOpenMultiplayErrorPopup(class ATTLPopUpBase* ErrorPopup);
	void OnLogoutUserComplete(bool WasSuccessful);
	void OnInputRepeatAction(enum class ETTLEActionType ActionType, int32 RepeatCount);
	void OnInputAnalogAction(enum class ETTLEActionType ActionType, float AxisValue);
	void OnInputAction(enum class ETTLEActionType ActionType, bool IsPressed);
	void OnFinishedWidgetAnim();
	void OnFinishedUICameraGazingPointMove();
	void OnFinishedKeyboardInput(const class FString& InputText, bool IsCancel);
	void OnFinishedDemo(class FName EventID, enum class ETTLEventFinishedType EventFinishedType);
	void OnFinishedConsoleMessageInput();
	void OnDecideCheckRegulationPopup();
	void OnCloseErrorPopup(enum class ETTLNetwarkFailureType FailureType);
	void OnClosedRegulationPopup();
	void OnClosedManualPopup();
	void OnChangedParamMenuState(enum class ETTLEArsenalParamMenuState& NewState);
	void OnCancelCheckRegulationPopup();
	bool IsShopScene();
	bool IsPressedButton(enum class ETTLEActionType ActionType);
	bool IsPlayLogScene();
	bool IsMissionSelectScene();
	bool IsDockScene();
	void InitializeScene();
	class UWidget* GetWidgetByName(class FName& Name);
	void GetState(enum class ETTLEMenuSceneState* OutState);
	enum class ETTLMenuSceneType GetSceneType();
	class FName GetMissionPath();
	void GetErrorStatus(enum class ETTLEMenuErrorStatus* OutErrorStatus);
	void FinishStateTransition();
	void FinishSavingUI();
	float FinishLoadingUI(bool Immediate);
	void EnteredFacility(enum class ETTLEMainMenuFacilityType Facility);
	void EndSceneBP();
	void EndScene();
	void DlcNotice_End();
	void ContinueLoadingUI();
	void ChangeState(enum class ETTLEMenuSceneState NextState, bool WithTransition, bool WithLoading);
	void ChangeShadowColor(class FName SceneName);
	bool ChangeEnvSE(class USoundAtomCue* Sound, float FadeInTime, float FadeOutTime);
	bool ChangeBGM(class USoundAtomCue* Sound, float FadeInTime, float FadeOutTime);
	void CancelStateTransition();
};

// 0x0 (0x630 - 0x630)
// Class DXM.TTLArsenalPaintScene
class ATTLArsenalPaintScene : public ATTLMenuSceneBase
{
public:

	static class UClass* StaticClass();
	static class ATTLArsenalPaintScene* GetDefaultObj();

};

// 0x440 (0x530 - 0xF0)
// Class DXM.TTLArsenalParticleArmorComponent
class UTTLArsenalParticleArmorComponent : public UActorComponent
{
public:
	class UTTLBasicStatusComponent*              BasicStatus;                                       // 0xF0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                LeftArmorMesh;                                     // 0xF8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                RightArmorMesh;                                    // 0x100(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              LeftArmorMeshMaterialInstanceDynamic;              // 0x108(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              RightArmorMeshMaterialInstanceDynamic;             // 0x110(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SocketBaseName;                                    // 0x118(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           SpawnVFX;                                          // 0x128(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           ContinueVFX;                                       // 0x1C0(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           DestroyVFX;                                        // 0x258(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FXArmorStart;                                      // 0x2F0(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FXArmorStartOnArmor;                               // 0x388(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FXArmorEnd;                                        // 0x420(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FLinearColor                          VFXStartColor;                                     // 0x4B8(0x10)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          VFXEndColor;                                       // 0x4C8(0x10)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimerHandle                          StartVFXTimer;                                     // 0x4D8(0x8)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FTimerHandle                          EndVFXTimer;                                       // 0x4E0(0x8)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FTimerHandle                          FXPlayTimer[0x3];                                  // 0x4E8(0x18)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1574[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLArsenalParticleArmorComponent* GetDefaultObj();

	void UpdateVFXProcess(float DeltaTime);
	bool ShouldShowVFX();
	void SetShowVFX(bool IsShow);
	void SetArmorVisibility(int32 Index, bool Visibility, bool PlayChangeFX);
	void ResetArmorVisibilityWhenPartChanged();
	void PlayVFXStartParticleArmor(class USkinnedMeshComponent* LeftArmMesh, class USkinnedMeshComponent* RightArmMesh);
	void PlayVFXEndParticleArmor();
	void InitializeArmor();
	int32 GetCurrentArmorNum();
	void ForceChangeArmorVisibility(bool IsHidden);
	void ChangeArmor(int32 NewArmorNum, bool PlayChangeFX);
};

// 0x58 (0xBF0 - 0xB98)
// Class DXM.TTLArsenalPartsComponent
class UTTLArsenalPartsComponent : public USkeletalMeshComponent
{
public:
	class FName                                  PartsID;                                           // 0xB98(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLPartsType                     PartsType;                                         // 0xBA0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1579[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLArsenalPartsInfo                  PartsInfo;                                         // 0xBA8(0x38)(BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_157A[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLArsenalPartsComponent* GetDefaultObj();

};

// 0xB0 (0x1A8 - 0xF8)
// Class DXM.TTLArsenalPickUpHUD2Component
class UTTLArsenalPickUpHUD2Component : public UTTLActorComponent
{
public:
	TSubclassOf<class UUserWidget>               UIClass;                                           // 0xF8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           ArsenalHUD;                                        // 0x100(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsVisible;                                         // 0x108(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_157C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                TargetActor;                                       // 0x110(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTTLArsenalDroppedPartsInfo>   DroppedParts;                                      // 0x118(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	enum class ETTLPickUpHUD2Mode                CurrentMode;                                       // 0x128(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_157D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentIndex;                                      // 0x12C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateColor                           ItemIsNewColor;                                    // 0x130(0x28)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSlateColor                           ItemIsNotNewColor;                                 // 0x158(0x28)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	uint8                                        Pad_157E[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AutoInputTextInterval;                             // 0x190(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_157F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UUserWidget*>                   PartsFeatureParamAreaList;                         // 0x198(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLArsenalPickUpHUD2Component* GetDefaultObj();

	void UpdateHUD(float DeltaSeconds);
	void SetVisibility(bool NewVisibility);
};

// 0xE0 (0x1D8 - 0xF8)
// Class DXM.TTLArsenalPickUpPartsComponent
class UTTLArsenalPickUpPartsComponent : public UTTLActorComponent
{
public:
	struct FTTLFxParam                           PickFx;                                            // 0xF8(0x98)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        UnableUIControlSecondsMax;                         // 0x190(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSelecting;                                       // 0x194(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_158A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TWeakObjectPtr<class AActor>>         PickUpTargetActors;                                // 0x198(0x10)(ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                        Pad_158B[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class UTTLArsenalMovementComponent> ArsenalMoveRef;                                    // 0x1B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_158C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LimitSpeed;                                        // 0x1C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UnableUIControlSeconds;                            // 0x1CC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsStartDamageEventBinded;                          // 0x1D0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsDeadEventBinded;                                 // 0x1D1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_158F[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        UnableControlTick;                                 // 0x1D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTTLArsenalPickUpPartsComponent* GetDefaultObj();

	void TryUIUp();
	void TryUISwitchDetail();
	void TryUIOk();
	bool TryUIHideDetail();
	void TryUIDown();
	void TryUICancel();
	bool TryPickUpParts();
	void RemovePickUpTarget(class AActor* TargetActor);
	void OnStatusDead();
	void OnStartDamageReaction(enum class ETTLDamageState DamageStage);
	bool IsOpenedTutorial();
	bool IsArsenalControlType();
	void AddPickUpTarget(class AActor* TargetActor);
};

// 0x128 (0x220 - 0xF8)
// Class DXM.TTLArsenalRaderHUDComponent
class UTTLArsenalRaderHUDComponent : public UTTLActorComponent
{
public:
	TSubclassOf<class UUserWidget>               UIClass;                                           // 0xF8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           ArsenalHUD;                                        // 0x100(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTTLRaderInfo>                 RaderInfos;                                        // 0x108(0x10)(Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FTTLRader3DInfo>               Rader3DInfos;                                      // 0x118(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>               RaderTargetUIClass;                                // 0x128(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UpdateRaderInfoIntervalSeconds;                    // 0x130(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZDiffAlphaMin;                                     // 0x134(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZDiffAlphaMax;                                     // 0x138(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZDiffBottom;                                       // 0x13C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZDiffTop;                                          // 0x140(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZDiffRange;                                        // 0x144(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             RaderSize;                                         // 0x148(0x8)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             RaderPosition;                                     // 0x150(0x8)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DirectionTargetRadiusOffset;                       // 0x158(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15AE[0xAC];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLMultiplayDuelControlComponent*     MultiplayDuelControlComponent;                     // 0x208(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FTTLAddToRaderReserveInfo>     AddToRaderReserveInfos;                            // 0x210(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLArsenalRaderHUDComponent* GetDefaultObj();

	void UpdateRaderJamming();
	void UpdateRaderHUD(float DeltaSeconds);
	void UpdatePlayerHUD(float DeltaSeconds);
	void SetRaderRadius(float Radius);
	void SetRaderParams(struct FTTLRadarParamRow& RaderParam);
	void SetHide(class AActor* TargetActor, bool IsHide, bool CheckLocallyAndPlayer);
	void RemoveWidgetFromHUDMission(class UUserWidget* Widget);
	void RemoveStayAfterBroken(class AActor* TargetActor, bool CheckLocallyAndPlayer);
	void RemoveIconView(class AActor* TargetActor, bool CheckLocallyAndPlayer);
	void RemoveHighlightCommand(float Delay, class AActor* TargetActor);
	void RemoveHighlightBP(class AActor* TargetActor, bool CheckLocallyAndPlayer);
	void RefreshRader();
	void MoveRaderInfos(class AActor* MoveFromActor);
	float GetRaderRadius();
	int32 FindRaderInfo(class AActor* TargetActor);
	int32 FindRader3DInfo(class AActor* TargetActor);
	int32 FindMissingRaderInfo();
	void ClearRader();
	void CleanupRaderInfos();
	void AddWidgetToHUDMissionBP(class UUserWidget* UserWidget);
	void AddWidgetToHUDMission(class UUserWidget* UserWidget);
	void AddStayAfterBroken(class AActor* TargetActor, bool CheckLocallyAndPlayer);
	void AddIconView(class AActor* TargetActor, bool CheckLocallyAndPlayer);
	void AddHighlightCommand(float Delay, class AActor* TargetActor);
	void AddHighlightBP(class AActor* TargetActor, bool CheckLocallyAndPlayer);
	void AddAllToRader();
};

// 0x40 (0x138 - 0xF8)
// Class DXM.TTLArsenalTargetObjHUDComponent
class UTTLArsenalTargetObjHUDComponent : public UTTLActorComponent
{
public:
	TSubclassOf<class UUserWidget>               WidgetClass;                                       // 0xF8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           Widget;                                            // 0x100(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             WidgetLocationOffset;                              // 0x108(0x8)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15AF[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLArsenalTargetObjHUDComponent* GetDefaultObj();

	void NoticeLockonInfo(float Distance, const struct FVector& TargetObjLocation, class FName TargetName);
};

// 0x90 (0x180 - 0xF0)
// Class DXM.TTLAssembleCategoryMenuComponent
class UTTLAssembleCategoryMenuComponent : public UActorComponent
{
public:
	TSubclassOf<class UUserWidget>               Class_HomDockBtn00;                                // 0xF0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_HomDockBtn01;                                // 0xF8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_MainBtnON;                                    // 0x100(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_MainBtnOFF;                                   // 0x108(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_SubBtnOpen;                                   // 0x110(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_SubBtnON;                                     // 0x118(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_SubBtnOFF;                                    // 0x120(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                          AddingButtonsBox;                                  // 0x128(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UUserWidget*>                   MainButtonList;                                    // 0x130(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UUserWidget*>                   SubButtonList;                                     // 0x140(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_15B2[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAssembleCategoryMenuComponent* GetDefaultObj();

	bool InitializeBP(class UUserWidget* ExistingBtn);
	void Initialize(class UVerticalBox* VerticalBoxForAddingButtons);
};

// 0x528 (0x618 - 0xF0)
// Class DXM.TTLAssembleMenuComponent
class UTTLAssembleMenuComponent : public UActorComponent
{
public:
	bool                                         IsInitialized;                                     // 0xF0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15DC[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UUserWidget*                           Widget_AssembleTop;                                // 0xF8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_MainButtonON;                            // 0x100(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_MainButtonOFF;                           // 0x108(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_SubButtonOpen;                           // 0x110(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_SubButtonON;                             // 0x118(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_SubButtonOFF;                            // 0x120(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_HomDockBtn00;                                // 0x128(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_HomDockBtn01;                                // 0x130(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15DE[0x348];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UUserWidget*>                   MainButtonsList;                                   // 0x480(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UUserWidget*>                   SubButtonsList;                                    // 0x490(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UUserWidget*>                   PartsButtonsList;                                  // 0x4A0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_15DF[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLDockScrollListComponent*           PartsScrollComponent;                              // 0x4C0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLDockScrollListComponent*           AttachScrollComponent;                             // 0x4C8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVerticalBox*                          Widget_menu_v00;                                   // 0x4D0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           Widget_list_u00;                                   // 0x4D8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UScrollBox*                            Widget_list_scr00;                                 // 0x4E0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           Widget_list_u01;                                   // 0x4E8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVerticalBox*                          Widget_page_v01;                                   // 0x4F0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVerticalBox*                          Widget_page_v02;                                   // 0x4F8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           Widget_page_u03;                                   // 0x500(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           Widget_page_u04;                                   // 0x508(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           Widget_prt_u00;                                    // 0x510(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           Widget_prt_u01;                                    // 0x518(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           Widget_prt_u02;                                    // 0x520(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_15E2[0xF0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAssembleMenuComponent* GetDefaultObj();

	void UpdateCursor_Attach(bool IsVisibleCursor);
	void UpdateCursor(bool IsVisibleCursor);
	void UpdateCurrentPartsList(struct FTTLArsenalPartsInfoList& CurrentPartsList);
	void UpdateAttachmentAttachedPartsInfo(const struct FTTLArsenalPartsInfo& ArsenalPartsInfo);
	void StartSelectDevelopRequiredPartsMenu(struct FTTLArsenalPartsInfoList& CurrentPartsList);
	void StartSelectDevelopPartsMenu(class FName CursoredPartsID);
	bool StartSelectAttachmentSlot();
	bool StartSelectAttachment(class FName PartsIDToAttach, bool PickOnlySlotExpandAttachment);
	void StartPartsDevelopMenu(enum class ETTLEAssembleTopCategory TopCategory, bool IsSecretDevelop);
	void StartClassSelectMenu(TArray<struct FTTLPlayerAssembleInfo>& AssembleClassList, int32 StartCursorPos);
	void StartAssembleMenu(enum class ETTLEAssembleTopCategory TopCategory, TArray<struct FTTLArsenalPartsInfo>& AllPartsList, enum class ETTLEAssembleMenuComponentMode MenuMode);
	void SetSortType(int32 Cursor_pos);
	void SetCurrentCursoredClass(const struct FTTLPlayerAssembleInfo& ClassInfo);
	void NewWeaponSetSortType(int32 Cursor_pos, int32 Main_category, int32 Sub_category, bool Is_shop);
	void NewPartsSetSortType(int32 Cursor_pos, int32 Category, bool Is_shop);
	class FText GetSubCategoryText(enum class ETTLEAssembleSubCategory SubCategory);
	enum class ETTLEAssembleSubCategory GetSubCategory(enum class ETTLEWeaponCategory WeaponCategory);
	struct FTTLArsenalPartsInfo GetPartsInfoFromCurrentCursor();
	enum class ETTLEPartMenuIndex GetPartMenuIndexFromPartsType(enum class ETTLPartsType PartsType, enum class ETTLEPartMenuIndex HandWeaponPart);
	enum class ETTLEPartMenuIndex GetPartMenuIndex();
	class FText GetMainCategoryText_EnterpriseName(enum class ETTLEnterpriseType EnterpriseType);
	class FText GetMainCategoryText_ClassName(int32 ClassIndex);
	class FText GetMainCategoryText(enum class ETTLEAssembleMainCategory MainCategory);
	struct FTTLOwnedAttachmentParam GetCursoredAttachmentParam();
	struct FTTLArsenalPartsInfoList GetCurrentCursoredPartsList();
	int32 GetCurrentCursoredClassIndex();
	struct FTTLPlayerAssembleInfo GetCurrentCursoredClass();
	int32 GetCurrentCursoredAttachSlotIndex();
	enum class ETTLEAssembleTopCategory GetAssembleTopCategory();
	enum class ETTLEAssembleMenuComponentState GetAssembleMenuState();
	void FocusPartsButton(bool IsFocus);
	enum class ETTLEAssembleMenuInputAction DecideButton();
	void CreateSubCategoryMenu();
	void CreatePartsListMenu(bool WithCheckBox, bool Is_defparts, const struct FTTLArsenalPartsInfo& Defparts);
	void CreateMainCategoryMenu(enum class ETTLEAssembleTopCategory TopCategory, int32 StartCursorPos);
	void CloseSubCategoryMenu();
	void ChangeSubCategory(enum class ETTLEAssembleSubCategory NewCategory);
	void ChangeMainCategory(enum class ETTLEAssembleMainCategory NewCategory);
	bool ChangeCursorLR(int32 Offset, int32 RepeatCount);
	bool ChangeCursor(int32 Offset, int32 RepeatCount);
	void ChangeAssembleMenuState(enum class ETTLEAssembleMenuComponentState NewState);
	enum class ETTLEAssembleMenuInputAction CancelButton();
	int32 Calc_NewCursor(int32 CurrentCursor, int32 CursorMax, int32 Offset, int32 RepeatCount);
};

// 0x98 (0x3C0 - 0x328)
// Class DXM.TTLPopUpBase
class ATTLPopUpBase : public AActor
{
public:
	TSubclassOf<class UUserWidget>               WidgetClass;                                       // 0x328(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UUserWidget>             WidgetClassSoft;                                   // 0x330(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           PopUpWidget;                                       // 0x358(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEPopUpState                   State;                                             // 0x360(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15F2[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                PauseActor;                                        // 0x368(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      OpenAnimation;                                     // 0x370(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      CloseAnimation;                                    // 0x378(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_OpenedBackground;                             // 0x380(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnOpened;                                          // 0x388(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnClosed;                                          // 0x398(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	uint8                                        Pad_15F3[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        SEPathList;                                        // 0x3B0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ATTLPopUpBase* GetDefaultObj();

	void UpdateSE(enum class ETTLEPopUpSEType SeType, const class FString& SourcePath);
	void SetupContents();
	void SetKeyAssign(class FText Description, enum class ETTLKeyAssignIcon KeyAssign1, enum class ETTLKeyAssignIcon KeyAssign2);
	void ProcessUp(int32 RepeatCount);
	void ProcessRight(int32 RepeatCount);
	void ProcessLStickUp(int32 RepeatCount);
	void ProcessLStickRight(int32 RepeatCount);
	void ProcessLStickLeft(int32 RepeatCount);
	void ProcessLStickDown(int32 RepeatCount);
	void ProcessLeft(int32 RepeatCount);
	void ProcessDown(int32 RepeatCount);
	void ProcessButtonY();
	void ProcessButtonX();
	void ProcessButtonR1();
	void ProcessButtonL1();
	void ProcessButtonB();
	void ProcessButtonA();
	void ProcessAnalogAction(enum class ETTLEActionType KeyType, float AxisValue);
	void PlaySESortMenu();
	void PlaySESelect();
	void PlaySEOk();
	void PlaySEError();
	void PlaySEChangeCategory();
	void PlaySECancel();
	void PlaySEByReference(class FString* SoundRef);
	float OpenPopUp(class AActor* PauseActor);
	void OnPopUpOpened();
	void OnPopUpClosed(bool ForceClose);
	bool IsRunning();
	bool IsOpened();
	int32 GetOpenedPopUpNum();
	float ClosePopUp();
};

// 0x28 (0x3E8 - 0x3C0)
// Class DXM.TTLAssistKeyPopUp
class ATTLAssistKeyPopUp : public ATTLPopUpBase
{
public:
	TArray<struct FTTLAssistKeyPopUpItem>        AssistKeyPopUpItemArray;                           // 0x3C0(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnClosePopup;                                      // 0x3D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	uint8                                        Pad_15F5[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLAssistKeyPopUp* GetDefaultObj();

	void SetupAssistKey(enum class ETTLEInputType Key_1, enum class ETTLEInputType Key_2);
	void OnInputAction(enum class ETTLEActionType KeyType, bool IsPressed);
};

// 0x0 (0x88 - 0x88)
// Class DXM.TTLAttachmentParam
class UTTLAttachmentParam : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UTTLAttachmentParam* GetDefaultObj();

};

// 0x78 (0x168 - 0xF0)
// Class DXM.TTLAutoBattleComponent
class UTTLAutoBattleComponent : public UActorComponent
{
public:
	bool                                         IsAutoBattleEnable;                                // 0xF0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDemoSkipEnable;                                  // 0xF1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15F7[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                TargetActor;                                       // 0xF8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLBasicStatusComponent*              OwnerStatus;                                       // 0x100(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class ATTLLevelScriptActor>   LevelScriptActor;                                  // 0x108(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_15F8[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAutoBattleComponent* GetDefaultObj();

};

// 0x90 (0xB8 - 0x28)
// Class DXM.TTLAutoBehaviour
class UTTLAutoBehaviour : public UObject
{
public:
	uint8                                        Pad_15F9[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLAutoScrollListUtility*             ScrollPtr;                                         // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLSendCommand*                       CommandRef;                                        // 0x40(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InitWaitTime;                                      // 0x48(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15FA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        UpdateTime;                                        // 0x50(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15FB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsOutputLog;                                       // 0x58(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsCheckOutputLog;                                  // 0x59(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15FC[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLCommandOrder*                      CommanderRef;                                      // 0x60(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class UTTLCommandOrder>>  CommandOrderArray;                                 // 0x68(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class UTTLCommandOrder>>  ParallelCommandOrderArrayClass;                    // 0x78(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class UTTLCommandOrder*>              ParallelCommandOrderArray;                         // 0x88(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	enum class ETTLMenuSceneType                 NextMenuSceneType;                                 // 0x98(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15FD[0x1F];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAutoBehaviour* GetDefaultObj();

	void OnDecideAtScrollUtitliy();
};

// 0x38 (0xF0 - 0xB8)
// Class DXM.TTLAutoBehaviour_BaseCamp
class UTTLAutoBehaviour_BaseCamp : public UTTLAutoBehaviour
{
public:
	TSoftClassPtr<class ATTLBasecampNotifyActor> BasecampNotifyClass;                               // 0xB8(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15FE[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAutoBehaviour_BaseCamp* GetDefaultObj();

};

// 0x8 (0xF8 - 0xF0)
// Class DXM.TTLAutoBehaviour_BaseCamp_MoveToTerminalTop
class UTTLAutoBehaviour_BaseCamp_MoveToTerminalTop : public UTTLAutoBehaviour_BaseCamp
{
public:
	class FName                                  MoveToTerminalTopInBaseCamp;                       // 0xF0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTTLAutoBehaviour_BaseCamp_MoveToTerminalTop* GetDefaultObj();

};

// 0x0 (0xB8 - 0xB8)
// Class DXM.TTLAutoBehaviour_Battle
class UTTLAutoBehaviour_Battle : public UTTLAutoBehaviour
{
public:

	static class UClass* StaticClass();
	static class UTTLAutoBehaviour_Battle* GetDefaultObj();

};

// 0x18 (0xD0 - 0xB8)
// Class DXM.TTLAutoBehaviour_Battle_MissionDiscarded
class UTTLAutoBehaviour_Battle_MissionDiscarded : public UTTLAutoBehaviour_Battle
{
public:
	uint8                                        Pad_15FF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  MissionDiscardCommand;                             // 0xC0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EndTime;                                           // 0xC8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1600[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAutoBehaviour_Battle_MissionDiscarded* GetDefaultObj();

};

// 0x8 (0xC0 - 0xB8)
// Class DXM.TTLAutoBehaviour_Battle_AutoBattle
class UTTLAutoBehaviour_Battle_AutoBattle : public UTTLAutoBehaviour_Battle
{
public:
	uint8                                        Pad_1601[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAutoBehaviour_Battle_AutoBattle* GetDefaultObj();

};

// 0x18 (0xD0 - 0xB8)
// Class DXM.TTLAutoBehaviour_MissionSelect
class UTTLAutoBehaviour_MissionSelect : public UTTLAutoBehaviour
{
public:
	uint8                                        Pad_1602[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAutoBehaviour_MissionSelect* GetDefaultObj();

};

// 0x68 (0x90 - 0x28)
// Class DXM.TTLAutoScrollListUtility
class UTTLAutoScrollListUtility : public UObject
{
public:
	uint8                                        Pad_1603[0x68];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAutoScrollListUtility* GetDefaultObj();

};

// 0x0 (0x90 - 0x90)
// Class DXM.TTLAutoScrollList_MissionSelect
class UTTLAutoScrollList_MissionSelect : public UTTLAutoScrollListUtility
{
public:

	static class UClass* StaticClass();
	static class UTTLAutoScrollList_MissionSelect* GetDefaultObj();

};

// 0x78 (0x148 - 0xD0)
// Class DXM.TTLAutoBehaviour_MissionSelect_AllCheck
class UTTLAutoBehaviour_MissionSelect_AllCheck : public UTTLAutoBehaviour_MissionSelect
{
public:
	struct FTTLScrollTargetInfo                  ScrollTargetInfo;                                  // 0xD0(0x28)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                         IsAllreadyReceivedEveryTime;                       // 0xF8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsCheckOffer;                                      // 0xF9(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1604[0x4E];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAutoBehaviour_MissionSelect_AllCheck* GetDefaultObj();

};

// 0x18 (0xE8 - 0xD0)
// Class DXM.TTLAutoBehaviour_MissionSelect_SelectTargetMission
class UTTLAutoBehaviour_MissionSelect_SelectTargetMission : public UTTLAutoBehaviour_MissionSelect
{
public:
	uint8                                        Pad_1605[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAutoBehaviour_MissionSelect_SelectTargetMission* GetDefaultObj();

};

// 0x18 (0xD0 - 0xB8)
// Class DXM.TTLAutoBehaviour_OnlineBase
class UTTLAutoBehaviour_OnlineBase : public UTTLAutoBehaviour
{
public:
	enum class ETTLAutomationManagerType         NextMenuType;                                      // 0xB8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1606[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                TargetMission;                                     // 0xC0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTTLAutoBehaviour_OnlineBase* GetDefaultObj();

};

// 0x10 (0xE0 - 0xD0)
// Class DXM.TTLAutoBehaviour_OnlineCreateBase
class UTTLAutoBehaviour_OnlineCreateBase : public UTTLAutoBehaviour_OnlineBase
{
public:
	class FName                                  TargetMissionName;                                 // 0xD0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1608[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAutoBehaviour_OnlineCreateBase* GetDefaultObj();

	void OnCreateSessionComplete(class FName SessionName, bool WasSuccessful);
};

// 0x8 (0xE8 - 0xE0)
// Class DXM.TTLAutoBehaviour_OnlineCoopRoomCreate
class UTTLAutoBehaviour_OnlineCoopRoomCreate : public UTTLAutoBehaviour_OnlineCreateBase
{
public:
	uint8                                        Pad_1609[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAutoBehaviour_OnlineCoopRoomCreate* GetDefaultObj();

};

// 0x8 (0xE8 - 0xE0)
// Class DXM.TTLAutoBehaviour_OnlineBattleRoom1vs1Create
class UTTLAutoBehaviour_OnlineBattleRoom1vs1Create : public UTTLAutoBehaviour_OnlineCreateBase
{
public:
	uint8                                        Pad_160A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAutoBehaviour_OnlineBattleRoom1vs1Create* GetDefaultObj();

};

// 0x48 (0x118 - 0xD0)
// Class DXM.TTLAutoBehaviour_OnlineRoomSearchBase
class UTTLAutoBehaviour_OnlineRoomSearchBase : public UTTLAutoBehaviour_OnlineBase
{
public:
	struct FTTLAutoRoomSetting                   AutoRoomSetting;                                   // 0xD0(0x28)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UTTLAutomationOnlineRoomSelecter*      OnlineRoomSelector;                                // 0xF8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_160C[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ETTLMenuSceneType                 NextMenueSceneType;                                // 0x110(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_160D[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAutoBehaviour_OnlineRoomSearchBase* GetDefaultObj();

	void OnFindSessionComplete(bool WasSuccessful, TArray<struct FBlueprintSessionResult>& SessionSearchResults);
};

// 0x40 (0x68 - 0x28)
// Class DXM.TTLAutomationOnlineRoomSelecter
class UTTLAutomationOnlineRoomSelecter : public UObject
{
public:
	uint8                                        Pad_160E[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLSendCommand*                       ScrollPtr;                                         // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_160F[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAutomationOnlineRoomSelecter* GetDefaultObj();

};

// 0x0 (0x118 - 0x118)
// Class DXM.TTLAutoBehaviour_OnlineCoopRoomSearch
class UTTLAutoBehaviour_OnlineCoopRoomSearch : public UTTLAutoBehaviour_OnlineRoomSearchBase
{
public:

	static class UClass* StaticClass();
	static class UTTLAutoBehaviour_OnlineCoopRoomSearch* GetDefaultObj();

};

// 0x28 (0xF8 - 0xD0)
// Class DXM.TTLAutoBehaviour_OnlineCoopRoomSearchMissionSelect
class UTTLAutoBehaviour_OnlineCoopRoomSearchMissionSelect : public UTTLAutoBehaviour_OnlineBase
{
public:
	uint8                                        Pad_1610[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  TargetPlayer;                                      // 0xE8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1611[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAutoBehaviour_OnlineCoopRoomSearchMissionSelect* GetDefaultObj();

};

// 0x8 (0x120 - 0x118)
// Class DXM.TTLAutoBehaviour_OnlineBattleRoomSearch1VS1
class UTTLAutoBehaviour_OnlineBattleRoomSearch1VS1 : public UTTLAutoBehaviour_OnlineRoomSearchBase
{
public:
	uint8                                        Pad_1612[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAutoBehaviour_OnlineBattleRoomSearch1VS1* GetDefaultObj();

};

// 0x8 (0x120 - 0x118)
// Class DXM.TTLAutoBehaviour_OnlineBattleRoomSearchMissionSelect1VS1
class UTTLAutoBehaviour_OnlineBattleRoomSearchMissionSelect1VS1 : public UTTLAutoBehaviour_OnlineRoomSearchBase
{
public:
	uint8                                        Pad_1613[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAutoBehaviour_OnlineBattleRoomSearchMissionSelect1VS1* GetDefaultObj();

};

// 0x30 (0x100 - 0xD0)
// Class DXM.TTLAutoBehaviour_OnlineSelectRoomBase
class UTTLAutoBehaviour_OnlineSelectRoomBase : public UTTLAutoBehaviour_OnlineBase
{
public:
	uint8                                        Pad_1614[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLScrollTargetInfo                  ScrollTargetInfo;                                  // 0xD8(0x28)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTTLAutoBehaviour_OnlineSelectRoomBase* GetDefaultObj();

};

// 0x0 (0x100 - 0x100)
// Class DXM.TTLAutoBehaviour_InternetOrLocal
class UTTLAutoBehaviour_InternetOrLocal : public UTTLAutoBehaviour_OnlineSelectRoomBase
{
public:

	static class UClass* StaticClass();
	static class UTTLAutoBehaviour_InternetOrLocal* GetDefaultObj();

};

// 0x0 (0x100 - 0x100)
// Class DXM.TTLAutoBehaviour_OnlineInternet
class UTTLAutoBehaviour_OnlineInternet : public UTTLAutoBehaviour_OnlineSelectRoomBase
{
public:

	static class UClass* StaticClass();
	static class UTTLAutoBehaviour_OnlineInternet* GetDefaultObj();

};

// 0x10 (0x110 - 0x100)
// Class DXM.TTLAutoBehaviour_OnlineTagMatch
class UTTLAutoBehaviour_OnlineTagMatch : public UTTLAutoBehaviour_OnlineSelectRoomBase
{
public:
	uint8                                        Pad_1615[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAutoBehaviour_OnlineTagMatch* GetDefaultObj();

};

// 0x0 (0xB8 - 0xB8)
// Class DXM.TTLAutoBehaviour_TerminalTop
class UTTLAutoBehaviour_TerminalTop : public UTTLAutoBehaviour
{
public:

	static class UClass* StaticClass();
	static class UTTLAutoBehaviour_TerminalTop* GetDefaultObj();

};

// 0x30 (0xE8 - 0xB8)
// Class DXM.TTLAutomationBehaviour_TerminalTop_Specific
class UTTLAutomationBehaviour_TerminalTop_Specific : public UTTLAutoBehaviour_TerminalTop
{
public:
	uint8                                        Pad_1616[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLScrollTargetInfo                  ScrollTargetInfo;                                  // 0xC0(0x28)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTTLAutomationBehaviour_TerminalTop_Specific* GetDefaultObj();

};

// 0x8 (0xC0 - 0xB8)
// Class DXM.TTLAutoBehaviour_Title
class UTTLAutoBehaviour_Title : public UTTLAutoBehaviour
{
public:
	uint8                                        Pad_1617[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAutoBehaviour_Title* GetDefaultObj();

};

// 0x0 (0xC0 - 0xC0)
// Class DXM.TTLAutoBehaviour_Title_MoveToGame
class UTTLAutoBehaviour_Title_MoveToGame : public UTTLAutoBehaviour_Title
{
public:

	static class UClass* StaticClass();
	static class UTTLAutoBehaviour_Title_MoveToGame* GetDefaultObj();

};

// 0x28 (0x50 - 0x28)
// Class DXM.TTLSendCommand
class UTTLSendCommand : public UObject
{
public:
	uint8                                        Pad_1618[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLSendCommand* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class DXM.TTLSendCommandRepeat
class UTTLSendCommandRepeat : public UObject
{
public:
	uint8                                        Pad_1619[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLSendCommandRepeat* GetDefaultObj();

};

// 0x28 (0x50 - 0x28)
// Class DXM.TTLAutomation_MissionSelectHistoryData
class UTTLAutomation_MissionSelectHistoryData : public UObject
{
public:
	uint8                                        Pad_161A[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAutomation_MissionSelectHistoryData* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class DXM.TTLBaseCommandOrder
class UTTLBaseCommandOrder : public UObject
{
public:
	class UClass*                                CommanderClass;                                    // 0x28(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTTLBaseCommandOrder* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class DXM.TTLUpdater
class UTTLUpdater : public UObject
{
public:

	static class UClass* StaticClass();
	static class UTTLUpdater* GetDefaultObj();

};

// 0x80 (0x3A8 - 0x328)
// Class DXM.TTLAutomationManager
class ATTLAutomationManager : public AActor
{
public:
	enum class ETTLGameAutoMode                  Mode;                                              // 0x328(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1622[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DelayInitTime;                                     // 0x32C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FTTLSceneAutomationContainer>  SceneAndBehaviourInfoArray;                        // 0x330(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                         IsForceReleaseMission;                             // 0x340(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsDebugScreenDraw;                                 // 0x341(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1623[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSoftClassPtr<class ATTLAutomationManager>> CookRefArray;                                      // 0x348(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class UTTLAutoBehaviour*                     BehaviourRef;                                      // 0x358(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLAutoBehaviour*                     BehaviourRefNext;                                  // 0x360(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLSendCommandRepeat*                 RepeatCommandRef;                                  // 0x368(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1624[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLAutomationManager* GetDefaultObj();

	void SetScene(class ATTLMenuSceneBase* Scene);
	void InitDelayEnableTick();
};

// 0x30 (0x58 - 0x28)
// Class DXM.TTLAutoPlayInfoRW
class UTTLAutoPlayInfoRW : public UObject
{
public:
	uint8                                        Pad_1625[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAutoPlayInfoRW* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class DXM.TTLOrderGoStraight
class UTTLOrderGoStraight : public UTTLBaseCommandOrder
{
public:
	class FName                                  TargetTag;                                         // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StopDistance;                                      // 0x38(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1627[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLOrderGoStraight* GetDefaultObj();

};

// 0x20 (0x48 - 0x28)
// Class DXM.TTLCommandOrder
class UTTLCommandOrder : public UObject
{
public:
	uint8                                        Pad_1628[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WaitTime;                                          // 0x2C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1629[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLCommandOrder* GetDefaultObj();

	void OnBeginBP();
	void CheckUpdateBP();
};

// 0x20 (0x68 - 0x48)
// Class DXM.TTLCommandOrder_GoStraight
class UTTLCommandOrder_GoStraight : public UTTLCommandOrder
{
public:
	uint8                                        Pad_162A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  TargetTag;                                         // 0x50(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StopDistance;                                      // 0x58(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_162B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxMoveTargetFlame;                                // 0x60(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_162C[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLCommandOrder_GoStraight* GetDefaultObj();

};

// 0x8 (0x50 - 0x48)
// Class DXM.TTLCommandOrder_Wait
class UTTLCommandOrder_Wait : public UTTLCommandOrder
{
public:
	float                                        CommandWaitTime;                                   // 0x48(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_162E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLCommandOrder_Wait* GetDefaultObj();

};

// 0x28 (0x50 - 0x28)
// Class DXM.TTLCommandCommander
class UTTLCommandCommander : public UObject
{
public:
	TArray<struct FTTLOrderContainer>            OrderArray;                                        // 0x28(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<class UTTLCommandOrder*>              Orders;                                            // 0x38(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_162F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLCommandCommander* GetDefaultObj();

};

// 0x18 (0x60 - 0x48)
// Class DXM.TTLCommandOrder_SendBtn
class UTTLCommandOrder_SendBtn : public UTTLCommandOrder
{
public:
	class UTTLSendCommand*                       Sender;                                            // 0x48(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FTTLCommandInputContainer>     ActionArray;                                       // 0x50(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTTLCommandOrder_SendBtn* GetDefaultObj();

};

// 0x40 (0x88 - 0x48)
// Class DXM.TTLCommandOrder_AutoMissionDiscard
class UTTLCommandOrder_AutoMissionDiscard : public UTTLCommandOrder
{
public:
	float                                        NoDamageTimer;                                     // 0x48(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1631[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UTTLAutoBehaviour>         NextBehaviour;                                     // 0x50(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1632[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLCommandOrder_AutoMissionDiscard* GetDefaultObj();

};

// 0x10 (0x100 - 0xF0)
// Class DXM.TTLAutoTextInputComponent
class UTTLAutoTextInputComponent : public UActorComponent
{
public:
	uint8                                        Pad_1633[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAutoTextInputComponent* GetDefaultObj();

};

// 0x518 (0x608 - 0xF0)
// Class DXM.TTLBadStatusVFXComponent
class UTTLBadStatusVFXComponent : public UActorComponent
{
public:
	UMulticastDelegateProperty_                  OnStatusBegin;                                     // 0xF0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnStatusEnd;                                       // 0x100(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	bool                                         DoesCreateAllMaterial;                             // 0x110(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1638[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           BurningFX;                                         // 0x118(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           StunFX;                                            // 0x1B0(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           AcidFX;                                            // 0x248(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           HealFX;                                            // 0x2E0(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           HealWeakFX;                                        // 0x378(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           BoostFX;                                           // 0x410(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           BoostBeginFX;                                      // 0x4A8(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FTTLFxPlayback>                BurningPlayBack;                                   // 0x540(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FTTLFxPlayback>                StunPlayBack;                                      // 0x550(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FTTLFxPlayback>                AcidPlayBack;                                      // 0x560(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FTTLFxPlayback>                HealPlayBack;                                      // 0x570(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FTTLFxPlayback>                BoostPlayBack;                                     // 0x580(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FTTLFxPlayback>                DeleteVfxPool;                                     // 0x590(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1639[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                StunMaterialIndices;                               // 0x5D8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class USkeletalMeshComponent*>        MaterialMeshComponents;                            // 0x5E8(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FTTLMaterialInstanceIdentifier> MaterialIdentifiers;                               // 0x5F8(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLBadStatusVFXComponent* GetDefaultObj();

	void TryChangeExtraMaterials(bool IsHeal, enum class ETTLEAbnormalStatusType Type);
	void StopBadStatusVFX(enum class ETTLEAbnormalStatusType Type, bool IsHeal, bool IsVFXForceDestroy);
	void StopAttachedFX(enum class ETTLEAbnormalStatusType Type, bool IsHeal, bool ForceDestroy);
	void SetHealMaterial(bool IsOn, class USceneComponent* Mesh, enum class ETTLEAbnormalStatusType Type);
	void SetEndHealVFX(bool IsHeal, enum class ETTLEAbnormalStatusType Type);
	void ProcessStopAttachedFX(enum class ETTLEAbnormalStatusType Type, bool ForceDestroy);
	void ProcessNextFXPlayAttached(enum class ETTLEAbnormalStatusType ExceptionType);
	void PlayFxAttached(enum class ETTLEAbnormalStatusType Type, class USceneComponent* AttachToComponent, class AActor* AttachedActor, bool IsHeal, class FName AttachPointName, struct FVector& Location, struct FRotator& Rotation);
	void PlayBadStatusVFX(enum class ETTLEAbnormalStatusType Type, bool IsHeal);
	void AddExtraMaterialMeshComp(const TArray<class USkeletalMeshComponent*>& SkeletalMeshComponents);
};

// 0x98 (0x3D8 - 0x340)
// Class DXM.TTLBaseBarrierActor
class ATTLBaseBarrierActor : public ATTLActor
{
public:
	uint8                                        Pad_163F[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ETTLBarrierActionNo               Action_No;                                         // 0x35C(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1640[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Status_MaxVP;                                      // 0x360(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Status_VPRecoverySpeed;                            // 0x364(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Status_NotVPRecoveryTime;                          // 0x368(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Status_Defence;                                    // 0x36C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PhysicsResist;                                     // 0x370(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BeamResist;                                        // 0x374(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Status_VP;                                         // 0x378(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanThroughRailGun;                                 // 0x37C(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsShowDamagePopUp;                                 // 0x37D(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1641[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLObjectStatusResistParameter       DamageCalculator;                                  // 0x384(0x10)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1642[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          ColA;                                              // 0x398(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          ColB;                                              // 0x3A8(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          ColC;                                              // 0x3B8(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          ColD;                                              // 0x3C8(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ATTLBaseBarrierActor* GetDefaultObj();

	void Status_OnTakeAnyDamageDelegate(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	struct FLinearColor Status_CalcBarrierColor();
	void SetBarrierNoDamage(bool NoDamageFlag);
	bool IsBarrierNoDamage();
};

// 0x2B0 (0x688 - 0x3D8)
// Class DXM.TTLBarrierForBlackLotus
class ATTLBarrierForBlackLotus : public ATTLBaseBarrierActor
{
public:
	struct FTTLFxParam                           CreatingBarrierVFX;                                // 0x3D8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           RemainingBarrierVFX;                               // 0x470(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           BrokenBarrierVFX;                                  // 0x508(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        CreatingVFXPlayback;                               // 0x5A0(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        RemainingVFXPlayback;                              // 0x5B8(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        BrokenBarrierVFXPlayback;                          // 0x5D0(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	int32                                        ReSpawnTimeForBarrier;                             // 0x5E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpawnTimeForBarrier;                               // 0x5EC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImpulsTimeForBarrier;                              // 0x5F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SphereRadius;                                      // 0x5F4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDebugDrawForSphereTrace;                         // 0x5F8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1645[0x3F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  BarrierSpawnSocketName;                            // 0x638(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               BarrierMeshOffset;                                 // 0x640(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               BarrierMeshOffsetForMin;                           // 0x64C(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               MaxSizeForBarrierMesh;                             // 0x658(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1646[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UMaterialInstanceDynamic*>      BarrierVFXMaterials;                               // 0x678(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ATTLBarrierForBlackLotus* GetDefaultObj();

};

// 0x190 (0x568 - 0x3D8)
// Class DXM.TTLBarrierInLevelActor
class ATTLBarrierInLevelActor : public ATTLBaseBarrierActor
{
public:
	class AActor*                                OwnerActor;                                        // 0x3D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               CollisionSize;                                     // 0x3E0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1649[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       SelfRoot;                                          // 0x3F0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  SelfCollision;                                     // 0x3F8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           BarrierFxParam;                                    // 0x400(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           BarrierDestroyFxParam;                             // 0x498(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        BarrierVFXPlayback;                                // 0x530(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UMaterialInstanceDynamic*>      BarrierVFXMaterials;                               // 0x548(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_164B[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBarrierInLevelActor* GetDefaultObj();

	void SetLockOnState(bool Enable);
	void SetCollisionState(bool Enable);
	void ChangeVFXState(enum class ETTLBarrierActionNo NewState);
};

// 0x0 (0x1550 - 0x1550)
// Class DXM.TTLBase4LegTankCharacter
class ATTLBase4LegTankCharacter : public ATTLBaseTankCharacter
{
public:

	static class UClass* StaticClass();
	static class ATTLBase4LegTankCharacter* GetDefaultObj();

};

// 0x68 (0x520 - 0x4B8)
// Class DXM.TTLBossAIController
class ATTLBossAIController : public ATTLAIController
{
public:
	TArray<struct FTTLActionPhaseInfo>           PhaseList;                                         // 0x4B8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_164C[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBossAIController* GetDefaultObj();

};

// 0xD0 (0x5F0 - 0x520)
// Class DXM.TTLBaseBossBallAIController
class ATTLBaseBossBallAIController : public ATTLBossAIController
{
public:
	uint8                                        Pad_1653[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLBaseBossBallCtrlDmgReact>  DmgReactCtrlParamList;                             // 0x528(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        RoutinAttackInterval;                              // 0x538(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TrctEnableSameCount;                               // 0x53C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EnableNomrlaBarrierHpRate;                         // 0x540(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1654[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class ETTLBaseBossBallAICtrl>    ExecNormalBarrierPatterns;                         // 0x548(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        ExecAngryHpRate;                                   // 0x558(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsAvatar;                                          // 0x55C(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1655[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MovieSlashWaitActionCount;                         // 0x560(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AllDirLaserSameCnt;                                // 0x564(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChangeLaserRestVPRate;                             // 0x568(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MovieSlashQuickIntervalTime;                       // 0x56C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MovieSlashQuickMaxDistance;                        // 0x570(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1656[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLBaseBossBallFarTargetActionParam  FarTargetActionParam;                              // 0x578(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_1657[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                OldTrctTarget;                                     // 0x5D8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1658[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseBossBallAIController* GetDefaultObj();

	bool StartAction(int32 ActionNo, int32 ExecuteLevel, struct FTTLActionArgumentInfo* Argument);
	bool ProcessAction(int32 ActionNo, float DeltaSeconds);
	void Initialize();
	void DebugStartAiAction(enum class ETTLBaseBossBallAIActNo ActionNo, int32 ExecuteLevel, int32 AvatarCount);
	bool DebugCheckCurrentAction(enum class ETTLBaseBossBallAIActNo CheckNo);
	enum class ETTLBossAICtrlResult CheckAction(int32 ActionNo, int32 ExecuteLevel, int32 CheckType, struct FTTLActionArgumentInfo* Argument);
};

// 0x20 (0x380 - 0x360)
// Class DXM.TTLBaseBossBallAnimInstance
class UTTLBaseBossBallAnimInstance : public UTTLAnimInstance
{
public:
	class ATTLBaseBossBallPawn*                  SelfPawn;                                          // 0x360(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BigLaserLookAtLocation;                            // 0x368(0xC)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1659[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBaseBossBallAnimInstance* GetDefaultObj();

	void Notify_DamageL_OnEnd();
	void Notify_Angry_OnExec();
	void Notify_Angry_OnEnd();
	enum class ETTLBaseBossBallAnimState GetAnimState();
};

// 0x28 (0x350 - 0x328)
// Class DXM.TTLBaseBossBallBigLaserShooter
class ATTLBaseBossBallBigLaserShooter : public AActor
{
public:
	TSubclassOf<class ATTLBigLaser>              BigLaserClass;                                     // 0x328(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_165A[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseBossBallBigLaserShooter* GetDefaultObj();

};

// 0x2C0 (0x600 - 0x340)
// Class DXM.TTLBaseBossBallBladeActor
class ATTLBaseBossBallBladeActor : public ATTLActor
{
public:
	class USkeletalMeshComponent*                SelfMesh;                                          // 0x340(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           AttackEffectResource;                              // 0x348(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           StartEffectResource;                               // 0x3E0(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           EndEffectResource;                                 // 0x478(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           HitEffectResource;                                 // 0x510(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FVector                               HitVFXInnerColorVector;                            // 0x5A8(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               HitVFXOuterColorVector;                            // 0x5B4(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        AttackEffectPlayback;                              // 0x5C0(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_165B[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseBossBallBladeActor* GetDefaultObj();

};

// 0x0 (0x340 - 0x340)
// Class DXM.TTLCollideActor
class ATTLCollideActor : public ATTLActor
{
public:

	static class UClass* StaticClass();
	static class ATTLCollideActor* GetDefaultObj();

};

// 0x38 (0x378 - 0x340)
// Class DXM.TTLBaseBossBallCollideActor
class ATTLBaseBossBallCollideActor : public ATTLCollideActor
{
public:
	uint8                                        Pad_165C[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLENBossBallMultiHitInfo>    HitInfoList;                                       // 0x368(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ATTLBaseBossBallCollideActor* GetDefaultObj();

};

// 0x1350 (0x1810 - 0x4C0)
// Class DXM.TTLBaseBossBallPawn
class ATTLBaseBossBallPawn : public ATTLPawn
{
public:
	uint8                                        Pad_1669[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsAvatar;                                          // 0x4D0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_166A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           AvatarSpawnVfxResource;                            // 0x4D8(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           AvatarDeadVfxResource;                             // 0x570(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  AvatarVfxLocNodeName;                              // 0x608(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           MasterAvatarSpawnVfxResource;                      // 0x610(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        AvatarCreateIntervalTime;                          // 0x6A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_166B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ATTLBaseCannonPawn>        TurretPen_Class;                                   // 0x6B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLBaseCannonPawn>        TurretHex_Class;                                   // 0x6B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              TurretOffsetRotator;                               // 0x6C0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_166C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLBaseBossBallMoveLevel>     Move_Level;                                        // 0x6D0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FTTLBaseBossBallActionMoveLevel> Move_ActionList_Level;                             // 0x6E0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        MinAirDistance;                                    // 0x6F0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLbaseBossBallRandomMoveBaseParams  RandomMoveBaseParam;                               // 0x6F4(0x8)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_166E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           Move_LoopVfxResource;                              // 0x700(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Move_HighSpeedVfxResource;                         // 0x798(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FTTLBaseBossBallShotgunLevel>  Shotgun_Level;                                     // 0x830(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FTTLBaseBossBallBazookaLevel>  Bazooka_Level;                                     // 0x840(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FTTLBaseBossBallNormalLaserLevel> NormalLaser_Level;                                 // 0x850(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FTTLBaseBossBallWholeBarrierLevel> WholeBarrier_Level;                                // 0x860(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           WholeBarrier_HitEffectResource;                    // 0x870(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FTTLBaseBossBallMissileLevel>  Missile_Level;                                     // 0x908(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Missile_StartEffectResource;                       // 0x918(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FTTLBaseBossBallBigLaserLevel> BigLaser_Level;                                    // 0x9B0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        BigLaserOffsetShooterDistance;                     // 0x9C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BigLaserPtbStartDisapperTime;                      // 0x9C4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTTLBaseBossBallRangeCannonLevel> RangeCannon_Level;                                 // 0x9C8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FTTLBaseBossBallRangeArkGunLevel> RangeArkGun_Level;                                 // 0x9D8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FTTLBaseBossBallRangeGrenadeLevel> RangeGrenade_Level;                                // 0x9E8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FTTLBaseBossBallTrctLevel>     Trct_Level;                                        // 0x9F8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FTTLBaseBossBallCreateAvatar          CreateAvatarSetting;                               // 0xA08(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLBossBallProgEmissionColorPattern> ProgEmissionColorPattern;                          // 0xA20(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FTTLBossBallProgEmissionSpeedPattern> ProgEmissionSpeedPattern;                          // 0xA30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FTTLBossBallProgEmissionAction> ProgEmissionAction;                                // 0xA40(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLBaseBossOgreBarrierActor> NormalBarrier_Class;                               // 0xA50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NormalBarrier_SocketName;                          // 0xA58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NormalBarrier_ActionTime;                          // 0xA60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NormalBarrier_RestartActionCount;                  // 0xA64(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTTLBossBallRepresentedDamage> RepresentedDamageSettingParams;                    // 0xA68(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        RepresentedDamageLerpTime;                         // 0xA78(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1670[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLBaseBossBallAngry                 AngrySettingParam;                                 // 0xA80(0xB8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLBaseBossBallDamageL               DamageLSettingParam;                               // 0xB38(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLBaseBossBallDamageS               DamageSSettingParam;                               // 0xB50(0xA0)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLBaseBossBallActionCommon          ActionCommonSetting;                               // 0xBF0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLBaseBossBallMoveCenterParams      MoveCenterParam;                                   // 0xBF4(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1671[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  StartEventName;                                    // 0xC08(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FinishEventName;                                   // 0xC10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBossCoreInfoHUDComponent*          TTLBossCoreInfoHUDComponent;                       // 0xC18(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1672[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ETTLBaseBossBallAnimState         AnimState;                                         // 0xC38(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1673[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLBaseBossBallMovieSlashParam       MovieSlash_Param;                                  // 0xC40(0x60)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bMovieSlashDebugDraw;                              // 0xCA0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1674[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MovieSlashDebugDrawTime;                           // 0xCA4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLBaseBossBallAllDirLaserParam      AllDirLaserParam;                                  // 0xCA8(0x680)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxAllDirLaserLp;                                   // 0x1328(0x98)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxAllDirLaserEd;                                   // 0x13C0(0x98)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  FxAllDirLaserLpAttachNode;                         // 0x1458(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLBaseBossBallTrackingQuickMoveParam TrackingQuickMoveParam;                            // 0x1460(0xC)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLBaseBossBallRandomMove2Param      RandomMove2Param;                                  // 0x146C(0x2C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                        RandomMove2Percent;                                // 0x1498(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1675[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           FxRandomMove2Moving;                               // 0x14A0(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  FxRandomMove2MovingAttachNode;                     // 0x1538(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         SendPacketActionAndMove;                           // 0x1540(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         SendPacketShootNotify;                             // 0x1541(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTurretReplicated;                                 // 0x1542(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableCheckHeightOnMapCenter;                     // 0x1543(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CheckHeightZOnMapCenter;                           // 0x1544(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1676[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlayback                        FxRandomMove2MovingPlayback;                       // 0x1560(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        FxAllDirLaserLpPlayback;                           // 0x1578(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_1677[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlayback                        MasterAvatarFXPlayback;                            // 0x15E0(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1678[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlayback                        Move_LoopVfx;                                      // 0x1620(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1679[0x100];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ATTLBaseCannonPawn*>            TurrentList;                                       // 0x1738(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UMaterialInstanceDynamic*>      SelfMeshMatList;                                   // 0x1748(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class ATTLBaseBossBallBigLaserShooter*       BigLaserShooter;                                   // 0x1758(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATTLBaseBossOgreBarrierActor*          NormalBarrier_Actor;                               // 0x1760(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATTLBaseBossLastTrctActor*             TractorBeam_Actor;                                 // 0x1768(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                Lock_TargetActor;                                  // 0x1770(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLBaseBossBallAnimInstance*          SelfAnimInst;                                      // 0x1778(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        MissilePlayHandle;                                 // 0x1780(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        SmallDamageReactionPlayHandle;                     // 0x1798(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_167A[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ATTLBaseBossBallBladeActor*>    BladeActors;                                       // 0x1800(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ATTLBaseBossBallPawn* GetDefaultObj();

	void StopPrognosticEmission();
	void StartPrognosticEmission(struct FTTLBossBallProgEmissionAction& Pattern);
	void OnWhileBarrierCollideChange(enum class ETTLWholeBarrrierColliPhase Phase, float Radius);
	void OnTakePointDamageBallPawnDelegate(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& ShotFromDirection, class UDamageType* DamageType, class AActor* DamageCauser);
	void OnTakeAnyDamageBallPawnDelegate(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void OnSelfStatusDead();
	void OnMissionEventStarted(class FName EventName);
	void OnMissionEventFinished(class FName EventName, enum class ETTLEventFinishedType EventFinishedType);
	void OnAvatarStatusDead(class AActor* DeadActor);
	void MulticastStartReaction(enum class ETTLBaseBossBallAICtrl ReqAction, const struct FVector_NetQuantize& HitPos);
	void MulticastStartCreateAvatar(class AActor* TargetActor, uint8 AvatarMaxCount);
	void MulticastStartActionWithMove(class AActor* TargetActor, enum class ETTLBaseBossBallAIActNo ReqAction, enum class ETTLBaseBossBallMoveTypes ReqMoveType);
	void MulticastStartAction(class AActor* TargetActor, enum class ETTLBaseBossBallAIActNo ReqAction);
	class UTTLDamageParameterComponent* GetDamageParameterComponentBall(int32 DamageNo);
};

// 0x690 (0xB50 - 0x4C0)
// Class DXM.TTLBaseBossBallTurret
class ATTLBaseBossBallTurret : public ATTLPawn
{
public:
	class UTTLFirearmControlComponent*           SelfFirearm;                                       // 0x4C0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseBossBallPawn*                  OwnerBoss;                                         // 0x4C8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UArrowComponent*                       ForwordArrow;                                      // 0x4D0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLLongRangeWeaponParameter*          Long_BaseWeaponParam;                              // 0x4D8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          Long_BaseDamageParam;                              // 0x4E0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFirearmInfo                       Shotgun_Info;                                      // 0x4E8(0x648)(ContainsInstancedReference, NativeAccessSpecifierPublic)
	class AActor*                                TargetActor;                                       // 0xB30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_167B[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseBossBallTurret* GetDefaultObj();

};

// 0x40 (0x3A0 - 0x360)
// Class DXM.TTLBaseBossFeryAnimInstance
class UTTLBaseBossFeryAnimInstance : public UTTLAnimInstance
{
public:
	class UAnimMontage*                          ContainerMontage;                                  // 0x360(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          RushMontage;                                       // 0x368(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          DamageMontage;                                     // 0x370(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          MissileMontage;                                    // 0x378(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          LaserMontage;                                      // 0x380(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_167F[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBaseBossFeryAnimInstance* GetDefaultObj();

	bool OwnerIsDead();
	void OnRushStart();
	void OnRushEnd();
	void OnReleaseContainer();
	void OnMissileOpen();
	void OnMissileClose();
	void OnLaserOpen();
	void OnLaserClose();
	void OnHatchCloseEnd();
	void OnDamageReaction();
	void OnAngry();
	bool IsTurnR();
	bool IsAngryState(enum class ETTLBaseBossFeryAngryState State);
	float GetTurnMotionRate();
};

// 0x38 (0x558 - 0x520)
// Class DXM.TTLBaseBossFishAIController
class ATTLBaseBossFishAIController : public ATTLBossAIController
{
public:
	TArray<float>                                PhaseChangeHPRate;                                 // 0x520(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_1680[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseBossFishAIController* GetDefaultObj();

};

// 0x20 (0x380 - 0x360)
// Class DXM.TTLBaseBossFishAnimInstance
class UTTLBaseBossFishAnimInstance : public UTTLAnimInstance
{
public:
	class ATTLBaseBossFishCharacter*             SelfCharacter;                                     // 0x360(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LaserLookAt;                                       // 0x368(0xC)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LaserPitchRange;                                   // 0x374(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LaserAlpha;                                        // 0x378(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1681[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBaseBossFishAnimInstance* GetDefaultObj();

	void Initialize(class ATTLBaseBossFishCharacter* Fish);
};

// 0x50 (0x510 - 0x4C0)
// Class DXM.TTLBaseBossFishBladePawn
class ATTLBaseBossFishBladePawn : public ATTLPawn
{
public:
	uint8                                        Pad_1682[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstanceDynamic*              BreakObjectMaterial;                               // 0x4F0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*              DefaultObjectMaterial;                             // 0x4F8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1683[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseBossFishBladePawn* GetDefaultObj();

	void OnStatusDead();
};

// 0x14C0 (0x1C80 - 0x7C0)
// Class DXM.TTLBaseBossFishCharacter
class ATTLBaseBossFishCharacter : public ATTLCharacter
{
public:
	uint8                                        Pad_1695[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponent*                CollideMesh;                                       // 0x7D0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBaseBossFishAnimInstance*          SelfAnimInst;                                      // 0x7D8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCapsuleComponent*                     SelfCapsuleCollide;                                // 0x7E0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLSplineComponent*                   SelfSpline;                                        // 0x7E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBasicStatusComponent*              SelfStatus;                                        // 0x7F0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           HoverSVFX;                                         // 0x7F8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  HoverSVFXSocket;                                   // 0x890(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           HoverLVFX;                                         // 0x898(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class FName>                          HoverLVFXSockets;                                  // 0x930(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class FName>                          ThrusterVFXSockets;                                // 0x940(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<enum class ETTLBaseBossFishThrusterSocketID> ThrusterDefoultSockets;                            // 0x950(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossFishAnimState         AnimState;                                         // 0x960(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        CommonAnimState;                                   // 0x961(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1696[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ATTLBaseWeakPawn>          WeakClass;                                         // 0x968(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          WeakBldSockets;                                    // 0x970(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<int32>                                WeakBldSocketsId;                                  // 0x980(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class FName>                          WeakSockets;                                       // 0x990(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<int32>                                WeakSocketsId;                                     // 0x9A0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLBaseBossFishBladePawn> BladeClass;                                        // 0x9B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BladeSocket;                                       // 0x9B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        WeakBladeSocketsId;                                // 0x9C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1697[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           HitVFX;                                            // 0x9C8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        BladePlayRate;                                     // 0xA60(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BladeBlendRate;                                    // 0xA64(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDamageReaction;                                 // 0xA68(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsInGround;                                       // 0xA69(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1698[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLBossCoreInfoHUDComponent*          TTLBossCoreInfoHUDComponent;                       // 0xA70(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1699[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlaybacksForFishBoss            HoverVFXPlaybacks;                                 // 0xAA0(0x10)(ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_169A[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Move_PathResearchInterval;                         // 0xAD0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Move_MaxSpeed;                                     // 0xAD4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Move_AccelerateTime;                               // 0xAD8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Move_TurnSpeed;                                    // 0xADC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                Move_TargetActor;                                  // 0xAE0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLSplinePath*                        Move_TargetPath;                                   // 0xAE8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           ThrusterSVFX;                                      // 0xAF0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           ThrusterLVFX;                                      // 0xB88(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<enum class ETTLBaseBossFishThrusterSocketID> ThrusterMoveSockets;                               // 0xC20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        FireSpeedDown;                                     // 0xC30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GroundDepth;                                       // 0xC34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           InGroundVFX;                                       // 0xC38(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           OutGroundVFX;                                      // 0xCD0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  GroundVFXSocket;                                   // 0xD68(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           DischargeVFX;                                      // 0xD70(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class FName>                          DischargeVFXSockets;                               // 0xE08(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           AngryModeVFX;                                      // 0xE18(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class FName>                          AngryModeVFXSockets;                               // 0xEB0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FTTLFxPlaybacksForFishBoss            DischargeVFXPlaybacks;                             // 0xEC0(0x10)(ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlaybacksForFishBoss            AngryModeVFXPlaybacks;                             // 0xED0(0x10)(ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        InGroundVFXPlayback;                               // 0xEE0(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	float                                        SpringSpeed;                                       // 0xEF8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_169C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           SpringStartVFX;                                    // 0xF00(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           SpringSlideVFX;                                    // 0xF98(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        SpringSlideTime;                                   // 0x1030(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpringSlideStopRate;                               // 0x1034(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpringInGroundStopRate;                            // 0x1038(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             SpringAngleRange;                                  // 0x103C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_169D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SpringFlySocketName;                               // 0x1048(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           SpringFlyingVFX;                                   // 0x1050(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_169E[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlayback                        SpringFlyingVFXPlayback;                           // 0x10F8(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_169F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ATTLBaseCannonPawn>        MissileClass;                                      // 0x1118(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          MissileSockets;                                    // 0x1120(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        MissileDepth;                                      // 0x1130(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16A1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           HatchAppearVFX;                                    // 0x1138(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           HatchDisappearVFX;                                 // 0x11D0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_16A2[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TurnTime;                                          // 0x1278(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16A3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class ETTLBaseBossFishThrusterSocketID> TurnRThrusterSockets;                              // 0x1280(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<enum class ETTLBaseBossFishThrusterSocketID> TurnLThrusterSockets;                              // 0x1290(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_16A4[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           OutGroundSignVFX;                                  // 0x12A8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        OutGroundSignVFXPlayback;                          // 0x1340(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TSubclassOf<class ATTLBigLaser>              BigLaserClass;                                     // 0x1358(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BigLaserPitchRange;                                // 0x1360(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BigLaserPitchRate;                                 // 0x1364(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BigLaserAngleSpeed;                                // 0x1368(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16A5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           RotationVFX;                                       // 0x1370(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<enum class ETTLBaseBossFishThrusterSocketID> RotationThrusterSockets;                           // 0x1408(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_16A6[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ATTLBaseCannonPawn>        CannonClass;                                       // 0x1420(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          CannonRightSockets;                                // 0x1428(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class FName>                          CannonLeftSockets;                                 // 0x1438(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_16A7[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           DamageDownVFX;                                     // 0x1468(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_16A8[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ATTLPawn>                  MultiLaserClass;                                   // 0x1508(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MultiLaserSocket;                                  // 0x1510(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16A9[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RushMoveSpeed;                                     // 0x1528(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RushAccelerateTime;                                // 0x152C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RushTurnReduceTime;                                // 0x1530(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RushInGroundReduceTime;                            // 0x1534(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RushRotSpeed;                                      // 0x1538(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RushTurnSpeed;                                     // 0x153C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           RushVFX;                                           // 0x1540(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           RushTurnVFX;                                       // 0x15D8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           RushStopVFX;                                       // 0x1670(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<enum class ETTLBaseBossFishThrusterSocketID> RushThrusterSockets;                               // 0x1708(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        RushTime;                                          // 0x1718(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16AA[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLFxParam>                   AngryVFX;                                          // 0x1728(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class FName>                          AngryVFXSockets;                                   // 0x1738(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        EyeAmpRateFirst;                                   // 0x1748(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          EyeColorFirst;                                     // 0x174C(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EyeAmpRateSecond;                                  // 0x175C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          EyeColorSecond;                                    // 0x1760(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AngrySpeedRate;                                    // 0x1770(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16AB[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         EnabledProcess;                                    // 0x1775(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16AC[0x6A];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlaybacksForFishBoss            ThrusterSVFXPlaybacks;                             // 0x17E0(0x10)(ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_16AD[0x90];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SpringDamageName;                                  // 0x1880(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RotateDamageName;                                  // 0x1888(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RushDamageName;                                    // 0x1890(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  JumpDamageName;                                    // 0x1898(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SpringDamageNameAcid;                              // 0x18A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RotateDamageNameAcid;                              // 0x18A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RushDamageNameAcid;                                // 0x18B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  JumpDamageNameAcid;                                // 0x18B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          DamageParameterSpring;                             // 0x18C0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          DamageParameterRotate;                             // 0x18C8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          DamageParameterRush;                               // 0x18D0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          DamageParameterJump;                               // 0x18D8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          DamageParameterSpringAcid;                         // 0x18E0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          DamageParameterRotateAcid;                         // 0x18E8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          DamageParameterRushAcid;                           // 0x18F0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          DamageParameterJumpAcid;                           // 0x18F8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpOutStartRange;                                 // 0x1900(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16AE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  AcidBombParameterName;                             // 0x1908(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpreadRange0;                                      // 0x1910(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpreadRange1;                                      // 0x1914(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpreadRangeAdd;                                    // 0x1918(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AcidBulletHomeAdjustPoint;                         // 0x191C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShotInterval;                                      // 0x1920(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16AF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           AcidFireVFX;                                       // 0x1928(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        AcidRangeRandMin;                                  // 0x19C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AcidRangeRandMax;                                  // 0x19C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLProjectileBase>        BulletClass;                                       // 0x19C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        TableSeq;                                          // 0x19D0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        AcidBulletCount;                                   // 0x19E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AcidSetCount;                                      // 0x19E4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AcidSetInterval;                                   // 0x19E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AcidMode;                                          // 0x19EC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16B0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AcidCollisionRadiusBonus;                          // 0x19F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16B1[0x94];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLBossWeakenedVFXComponent*          SelfWeakenedVFX;                                   // 0x1A88(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        GroundLock;                                        // 0x1A90(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16B2[0x54];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TailSwingCollisionRadius;                          // 0x1AE8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16B3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  TailSocket;                                        // 0x1AF0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TailOffset;                                        // 0x1AF8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16B4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLSpawnActorComponent*               SpawnActorComponent;                               // 0x1B00(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16B5[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AActor>                    LockonClass;                                       // 0x1B18(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          LockonSockets;                                     // 0x1B20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<TWeakObjectPtr<class AActor>>         LockonActors;                                      // 0x1B30(0x10)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                        Pad_16B6[0xD];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         AIDebug_StopMove;                                  // 0x1B4D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AIDebug_ChaseRange;                                // 0x1B4E(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AIDebug_RotatRange;                                // 0x1B4F(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AIDebug_RushRange;                                 // 0x1B50(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AIDebug_BigLaserRange;                             // 0x1B51(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AIDebug_MultiLaserRange;                           // 0x1B52(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16B7[0xD];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLFxPlayback>                OneshotEffectList;                                 // 0x1B60(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_16B8[0x110];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseBossFishCharacter* GetDefaultObj();

	void StopInGroundVFX();
	void StopDischargeVFX();
	void StartDead();
	void StartAcidBomb();
	void SetMultiLaserActor(class ATTLPawn* LaserActor);
	void SetHoverEffect(bool Enable);
	void SetAngryColorDirect(float Parameter);
	void PlaySpringSlideVFX(struct FVector& Offset);
	void PlayRushTurnVFX(struct FVector& Offset);
	void PlayRotationVFX();
	void PlayInGroundVFX(struct FVector& Offset);
	void PlayDischargeVFX();
	void PlayDisappearVFX();
	void PlayDamageDownVFX();
	void PlayAppearVFX();
	void OnStatusQuitOverHeat_Delegate();
	void OnStatusOverHeat_Delegate();
	void OnStatusDead_Delegate();
	void OnMultiplayOpenErrorPopupDelegate(class ATTLPopUpBase* ErrorPopup);
	void OnMultiplayCloseErrorPopupDelegate();
	void OnMeshComponentHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void OnDestroyedWeakBld(class AActor* Actor);
	void OnDestroyedWeak(class AActor* Actor);
	void MultiCastStopRush();
	void MultiCastInGroundRush();
	void MoveToWaitSet();
	void Move_Stop(class AActor* TargetActor, float TargetDistance);
	void Move_StartMoveToPath(class ATTLSplinePath* Path);
	void Move_StartMoveToLocation(const struct FVector& TargetLocation, float Distance, bool IsInfinite, class AActor* TargetActor, float TargetDistance);
	void Move_StartMoveToActor(class AActor* TargetActor, float Distance, bool IsInfinite);
	void Move_SetMoveEffect(bool IsEnable, bool IsPlayStopFx);
	bool Move_ProcessFalling(float DeltaSeconds);
	void Move_Process(float DeltaSeconds);
	bool Move_IsFalling();
	void Move_CheckFalling(float DeltaSeconds);
	void MotioTurnRush();
	void MotioTurnEndRush();
	void MotionStopTurn();
	void MotionStopStun();
	void MotionStopMove();
	void MotionStopAnger();
	void MotionStopAcid();
	void MotionStartRush();
	void MotionStartMove();
	void MotionStartMissile();
	void MotionStartDamage();
	void MotionStartBigLaser();
	void MotionRotationAttackEnd();
	void MotionRotatinPostureEnd();
	void MotionOutGroundEnd();
	void MotionInGroundEnd();
	void MotionEyeVfxStart();
	void MotionEndRush();
	void MotionEndMissile();
	void MotionEndDamage();
	void MotionEndBigLaser();
	void MotioInGroundEndRush();
	bool IsInGround();
	void AddCannonActor(class ATTLBaseCannonPawn* CannonActor);
};

// 0xF0 (0x5A8 - 0x4B8)
// Class DXM.TTLBaseBossLastAIController
class ATTLBaseBossLastAIController : public ATTLAIController
{
public:
	TArray<struct FTTLBaseBossLastAIActSetInfo>  OpeningPhaseActionInfoList;                        // 0x4B8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FTTLBaseBossLastAIActSetInfo>  OpeningPhaseEmergencyActionInfoList;               // 0x4C8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FTTLBaseBossLastAIActSetInfo>  EarlyPhaseActionInfoList;                          // 0x4D8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FTTLBaseBossLastAIActSetInfo>  EarlyPhaseEmergencyActionInfoList;                 // 0x4E8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FTTLBaseBossLastAIActSetInfo>  MiddlePhaseActionInfoList;                         // 0x4F8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FTTLBaseBossLastAIActSetInfo>  MiddlePhaseEmergencyActionInfoList;                // 0x508(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FTTLBaseBossLastAIActSetInfo>  LastPhaseActionInfoList;                           // 0x518(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FTTLBaseBossLastAIActSetInfo>  LastPhaseEmergencyActionInfoList;                  // 0x528(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        OpeningToEarlyVPRate;                              // 0x538(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OpeningToEarlyDamageFixTime;                       // 0x53C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EarlyToMiddleVPRate;                               // 0x540(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EarlyToMiddleDamageFixTime;                        // 0x544(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MiddleToLastVPRate;                                // 0x548(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MiddleToLastDamageFixTime;                         // 0x54C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16BA[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLBaseBossLastAIMoveLevel>   MoveLevel;                                         // 0x558(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FTTLBaseBossLastAIRushLevel>   RushLevel;                                         // 0x568(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FTTLBaseBossLastAIDawnHammerLevel> DawnHammerLevel;                                   // 0x578(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FTTLBaseBossLastAITractorBeamLevel> TractorBeamLevel;                                  // 0x588(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_16BB[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseBossLastAIController* GetDefaultObj();

};

// 0x248 (0x5A8 - 0x360)
// Class DXM.TTLBaseBossLastAnimInstance
class UTTLBaseBossLastAnimInstance : public UTTLAnimInstance
{
public:
	class ATTLBaseBossLastPawn*                  OwnerPawn;                                         // 0x360(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossLastAnmType           Type;                                              // 0x368(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossLastAnmActNo          ActionNo;                                          // 0x369(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16C4[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ActionPhase;                                       // 0x36C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16C5[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimSequenceBase*                     Wait_Animation;                                    // 0x398(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          Move_FrontMoveMontage;                             // 0x3A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                     Move_FrontMoveEndAnimation;                        // 0x3A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          Move_BackMoveMontage;                              // 0x3B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                     Move_BackMoveEndAnimation;                         // 0x3B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          Move_LeftMoveMontage;                              // 0x3C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                     Move_LeftMoveEndAnimation;                         // 0x3C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          Move_RightMoveMontage;                             // 0x3D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                     Move_RightMoveEndAnimation;                        // 0x3D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          Move_UpMoveMontage;                                // 0x3E0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                     Move_UpMoveEndAnimation;                           // 0x3E8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          Move_DownMoveMontage;                              // 0x3F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                     Move_DownMoveEndAnimation;                         // 0x3F8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Move_FrontMoveSlotName;                            // 0x400(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Move_FrontMoveEndSlotName;                         // 0x408(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Move_BackMoveSlotName;                             // 0x410(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Move_BackMoveEndSlotName;                          // 0x418(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Move_LeftMoveSlotName;                             // 0x420(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Move_LeftMoveEndSlotName;                          // 0x428(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Move_RightMoveSlotName;                            // 0x430(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Move_RightMoveEndSlotName;                         // 0x438(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Move_UpMoveSlotName;                               // 0x440(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Move_UpMoveEndSlotName;                            // 0x448(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Move_DownMoveSlotName;                             // 0x450(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Move_DownMoveEndSlotName;                          // 0x458(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Move_FrontMoveBlendRate;                           // 0x460(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Move_BackMoveBlendRate;                            // 0x464(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Move_LeftMoveBlendRate;                            // 0x468(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Move_RightMoveBlendRate;                           // 0x46C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Move_UpMoveBlendRate;                              // 0x470(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Move_DownMoveBlendRate;                            // 0x474(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          Damage_Montage;                                    // 0x478(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                     Damage_SmallEndAnimation;                          // 0x480(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                     Damage_BigEndAnimation;                            // 0x488(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                     Damage_StunEndAnimation;                           // 0x490(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Damage_SlotName;                                   // 0x498(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Damage_EndSlotName;                                // 0x4A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossLastAnmDamage         Damage_Type;                                       // 0x4A8(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16C7[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimSequenceBase*                     Anger_Animation;                                   // 0x4B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Anger_SlotName;                                    // 0x4B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          TractorBeam_Montage;                               // 0x4C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                     TractorBeam_EndAnimation;                          // 0x4C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TractorBeam_SlotName;                              // 0x4D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TractorBeam_EndSlotName;                           // 0x4D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          Rush_Montage;                                      // 0x4E0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                     Rush_EndAnimation;                                 // 0x4E8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Rush_SlotName;                                     // 0x4F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Rush_EndSlotName;                                  // 0x4F8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          RightChargeLaser_Montage;                          // 0x500(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RightChargeLaser_SlotName;                         // 0x508(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RightChargeLaser_Phase;                            // 0x510(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16C8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          LeftChargeLaser_Montage;                           // 0x518(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LeftChargeLaser_SlotName;                          // 0x520(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LeftChargeLaser_Phase;                             // 0x528(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ArmLookAt_RightTargetLocation;                     // 0x52C(0xC)(Edit, BlueprintVisible, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArmLookAt_RightAlpha;                              // 0x538(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16C9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                ArmLookAt_RightTargetActor;                        // 0x540(0x8)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ArmLookAt_LeftTargetLocation;                      // 0x548(0xC)(Edit, BlueprintVisible, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArmLookAt_LeftAlpha;                               // 0x554(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                ArmLookAt_LeftTargetActor;                         // 0x558(0x8)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArmLookAt_UpperArmRate;                            // 0x560(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16CA[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RightCoilRoll_MaxSpeed;                            // 0x57C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightCoilRoll_AclDclTime;                          // 0x580(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightCoilRoll_Roll;                                // 0x584(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightCoilRoll_Speed;                               // 0x588(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         RightCoilRoll_IsEnable;                            // 0x58C(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16CB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LeftCoilRoll_MaxSpeed;                             // 0x590(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftCoilRoll_AclDclTime;                           // 0x594(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftCoilRoll_Roll;                                 // 0x598(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftCoilRoll_Speed;                                // 0x59C(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LeftCoilRoll_IsEnable;                             // 0x5A0(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16CC[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBaseBossLastAnimInstance* GetDefaultObj();

	bool Wait_Start();
	bool Wait_InAction();
	void Wait_Cancel(enum class ETTLBaseBossLastAnmActNo NewActNo);
	bool TractorBeam_Set();
	bool TractorBeam_InAction();
	bool TractorBeam_End();
	void TractorBeam_Cancel(enum class ETTLBaseBossLastAnmActNo NewActNo);
	bool Rush_Set();
	bool Rush_InAction();
	bool Rush_EndRequest();
	bool Rush_End(float Offset);
	void Rush_Cancel(enum class ETTLBaseBossLastAnmActNo NewActNo);
	void RightCoilRoll_Process(struct FRotator* OutRotate);
	bool RightChargeLaser_Start();
	bool RightChargeLaser_InAction();
	bool RightChargeLaser_End();
	bool Move_Stop();
	bool Move_Start();
	bool Move_InStopAction();
	bool Move_InAnimation();
	bool Move_InAction();
	void Move_Cancel(enum class ETTLBaseBossLastAnmActNo NewActNo);
	void LeftCoilRoll_Process(struct FRotator* OutRotate);
	bool LeftChargeLaser_Start();
	bool LeftChargeLaser_InAction();
	bool LeftChargeLaser_End();
	bool Damage_Set(enum class ETTLBaseBossLastAnmDamage DamageType, float FixTime);
	bool Damage_InAction();
	bool Damage_End();
	void Damage_Cancel(enum class ETTLBaseBossLastAnmActNo NewActNo);
	void ArmLookAt_CalcRightForearmTwistRevise(struct FVector* Location);
	void ArmLookAt_CalcRight(struct FVector* Location, float* Alpha);
	void ArmLookAt_CalcLeftForearmTwistRevise(struct FVector* Location);
	void ArmLookAt_CalcLeft(struct FVector* Location, float* Alpha);
	void Anger_SetEffect();
	bool Anger_Set();
	bool Anger_InAction();
	void Anger_Cancel(enum class ETTLBaseBossLastAnmActNo NewActNo);
	void ActionCancel(enum class ETTLBaseBossLastAnmActNo NewActNo);
};

// 0xA0 (0x560 - 0x4C0)
// Class DXM.TTLBaseBossLastAsnlActor
class ATTLBaseBossLastAsnlActor : public ATTLPawn
{
public:
	class ATTLBaseBossLastPawn*                  OwnerBoss;                                         // 0x4C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                SelfMesh;                                          // 0x4C8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLArsenalPartsComponent*             SelfHeadParts;                                     // 0x4D0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLArsenalPartsComponent*             SelfBodyParts;                                     // 0x4D8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLArsenalPartsComponent*             SelfRightArmParts;                                 // 0x4E0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLArsenalPartsComponent*             SelfLeftArmParts;                                  // 0x4E8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLArsenalPartsComponent*             SelfLegParts;                                      // 0x4F0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBaseBossLastAsnlAnimInstance*      SelfAnimBP;                                        // 0x4F8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBasicStatusComponent*              SelfStatus;                                        // 0x500(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLEnemyPushCollideComponent*         SelfPushCollide;                                   // 0x508(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SelfLocation;                                      // 0x510(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              SelfRotation;                                      // 0x51C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               SelfVelocity;                                      // 0x528(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossLastAsnlActActNo      ActionNo;                                          // 0x534(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16CE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ActionPhase;                                       // 0x538(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16CF[0x24];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseBossLastAsnlActor* GetDefaultObj();

	bool Initialize(class ATTLBaseBossLastPawn* OwnerBoss);
};

// 0x8 (0x5B0 - 0x5A8)
// Class DXM.TTLBaseBossLastAsnlAnimInstance
class UTTLBaseBossLastAsnlAnimInstance : public UTTLBaseBossLastAnimInstance
{
public:
	class ATTLBaseBossLastAsnlActor*             OwnerArsenal;                                      // 0x5A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLBaseBossLastAsnlAnimInstance* GetDefaultObj();

};

// 0x68 (0x3A8 - 0x340)
// Class DXM.TTLBaseBossLastBldActor
class ATTLBaseBossLastBldActor : public ATTLActor
{
public:
	class ATTLBaseBossLastPawn*                  OwnerBoss;                                         // 0x340(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseBossLastRingActor*             OwnerRing;                                         // 0x348(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                SelfMesh;                                          // 0x350(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBasicStatusComponent*              SelfStatus;                                        // 0x358(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SelfLocation;                                      // 0x360(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              SelfRotation;                                      // 0x36C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               SelfVelocity;                                      // 0x378(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16D0[0x24];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseBossLastBldActor* GetDefaultObj();

	bool Initialize();
};

// 0x8 (0x5B0 - 0x5A8)
// Class DXM.TTLBaseBossLastBldAnimInstance
class UTTLBaseBossLastBldAnimInstance : public UTTLBaseBossLastAnimInstance
{
public:
	class ATTLBaseBossLastBldActor*              OwnerBlade;                                        // 0x5A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLBaseBossLastBldAnimInstance* GetDefaultObj();

};

// 0x50 (0x3B0 - 0x360)
// Class DXM.TTLBaseBossLastFnelAnimInstance
class UTTLBaseBossLastFnelAnimInstance : public UTTLAnimInstance
{
public:
	class ATTLBaseBossLastFnelPawn*              OwnerPawn;                                         // 0x360(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossLastFnelAnmActNo      ActionNo;                                          // 0x368(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16D1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ActionPhase;                                       // 0x36C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16D2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CoilCoverRoll_MaxSpeed;                            // 0x374(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CoilCoverRoll_AclDclTime;                          // 0x378(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CoilCoverRoll_Roll;                                // 0x37C(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CoilCoverRoll_Speed;                               // 0x380(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CoilCoverRoll_IsEnable;                            // 0x384(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16D3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CoilRoll_MaxSpeed;                                 // 0x388(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CoilRoll_AclDclTime;                               // 0x38C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CoilRoll_Roll;                                     // 0x390(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CoilRoll_Speed;                                    // 0x394(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CoilRoll_IsEnable;                                 // 0x398(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16D4[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          ChargeLaser_Montage;                               // 0x3A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                     Damage_Animation;                                  // 0x3A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLBaseBossLastFnelAnimInstance* GetDefaultObj();

	bool Damage_Start();
	bool Damage_InAction();
	void Damage_Finalize();
	void CoilRoll_Process(struct FRotator* OutRotate);
	void CoilCoverRoll_Process(struct FRotator* OutRotate);
	bool ChargeLaser_Start();
	bool ChargeLaser_InAction();
	void ChargeLaser_Finalize();
	bool ChargeLaser_End();
	void ActionFinalize();
};

// 0xBD0 (0x1090 - 0x4C0)
// Class DXM.TTLBaseBossLastFnelPawn
class ATTLBaseBossLastFnelPawn : public ATTLPawn
{
public:
	class ATTLBaseBossLastPawn*                  OwnerBoss;                                         // 0x4C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseBossLastRingActor*             OwnerRing;                                         // 0x4C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                SelfMesh;                                          // 0x4D0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBaseBossLastFnelAnimInstance*      SelfAnimBP;                                        // 0x4D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCapsuleComponent*                     SelfCapsule;                                       // 0x4E0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBasicStatusComponent*              SelfStatus;                                        // 0x4E8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLFirearmControlComponent*           SelfFireCtrl;                                      // 0x4F0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLAIActionBaseBossLastFnelComp*      SelfAIAct;                                         // 0x4F8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FunnelNo;                                          // 0x500(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SelfLocation;                                      // 0x504(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SelfCenter;                                        // 0x510(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              SelfRotation;                                      // 0x51C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               SelfVelocity;                                      // 0x528(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16E9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  AttachSocketName;                                  // 0x538(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              BaseAttachRotation;                                // 0x540(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossLastFnelPwnActNo      Action_No;                                         // 0x54C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16EA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Action_Phase;                                      // 0x550(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16EB[0x6C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLBaseBossLastFnelMoveLevel> Move_Level;                                        // 0x5C0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        Move_ActionLevel;                                  // 0x5D0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Move_Velocity;                                     // 0x5D4(0xC)(Edit, BlueprintVisible, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                Move_TargetActor;                                  // 0x5E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16ED[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLBaseBossLastFnelTurnLevel> Turn_Level;                                        // 0x5F0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        Turn_ActionLevel;                                  // 0x600(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             Turn_PitchLimit;                                   // 0x604(0x8)(Edit, BlueprintVisible, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16EE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                Turn_TargetActor;                                  // 0x610(0x8)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WarpAttach_WarpInTime;                             // 0x618(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WarpAttach_WarpInHiddenTime;                       // 0x61C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WarpAttach_IntervalTime;                           // 0x620(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WarpAttach_WarpOutTime;                            // 0x624(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WarpAttach_WarpOutAppearTime;                      // 0x628(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Detach_Time;                                       // 0x62C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Damage_EffectAsset;                                // 0x630(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        Damage_RecoveryTime;                               // 0x6C8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16F0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlayback                        Damage_Effect;                                     // 0x6D0(0x18)(Edit, BlueprintVisible, EditConst, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           DawnHammer_ExtraThickLaser_ChargeEffectAsset;      // 0x6E8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           DawnHammer_ExtraThickLaser_NoticeEffectAsset;      // 0x780(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           DawnHammer_ExtraThickLaser_NoticeTopEffectAsset;   // 0x818(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           DawnHammer_ExtraThickLaser_ShootEffectAsset;       // 0x8B0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           DawnHammer_ExtraThickLaser_MuzzleEffectAsset;      // 0x948(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           DawnHammer_ExtraThickLaser_LaserEffectAsset;       // 0x9E0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           DawnHammer_ExtraThickLaser_TopEffectAsset;         // 0xA78(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           DawnHammer_ExtraThickLaser_HitEffectAsset;         // 0xB10(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        DawnHammer_ExtraThickLaser_HitEffectIntervalTime;  // 0xBA8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DawnHammer_ExtraThickLaser_HitEffectScale;         // 0xBAC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTTLBaseBossLastFnelDawnHammerLevel> DawnHammer_Level;                                  // 0xBB0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	int32                                        DawnHammer_ActionLevel;                            // 0xBC0(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DawnHammer_AssighnedNo;                            // 0xBC4(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        DawnHammer_ExtraThickLaser_ChargeEffect;           // 0xBC8(0x18)(Edit, BlueprintVisible, EditConst, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        DawnHammer_ExtraThickLaser_NoticeEffect;           // 0xBE0(0x18)(Edit, BlueprintVisible, EditConst, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        DawnHammer_ExtraThickLaser_NoticeTopEffect;        // 0xBF8(0x18)(Edit, BlueprintVisible, EditConst, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        DawnHammer_ExtraThickLaser_ShootEffect;            // 0xC10(0x18)(Edit, BlueprintVisible, EditConst, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        DawnHammer_ExtraThickLaser_LaserEffect;            // 0xC28(0x18)(Edit, BlueprintVisible, EditConst, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        DawnHammer_ExtraThickLaser_MuzzleEffect;           // 0xC40(0x18)(Edit, BlueprintVisible, EditConst, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        DawnHammer_ExtraThickLaser_TopEffect;              // 0xC58(0x18)(Edit, BlueprintVisible, EditConst, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FTTLBaseBossLastFnelExtraThickLaserHitInfo> DawnHammer_ExtraThickLaser_HitInfoList;            // 0xC70(0x10)(Edit, BlueprintVisible, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	uint8                                        Pad_16F2[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLBaseBossLastFnelShootLevel> Shoot_Level;                                       // 0xCA0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	int32                                        Shoot_ActionLevel;                                 // 0xCB0(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Shoot_ActionPhase;                                 // 0xCB4(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                Shoot_ActionTargetActor;                           // 0xCB8(0x8)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Shoot_IsContinuous;                                // 0xCC0(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16F3[0x27];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           Effect_ThrusterAsset;                              // 0xCE8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Effect_ThrusterEndAsset;                           // 0xD80(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  Effect_ThrusterAttachSocketName;                   // 0xE18(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Effect_ThrusterPlayback;                           // 0xE20(0x18)(Edit, BlueprintVisible, EditConst, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Effect_WarpInAsset;                                // 0xE38(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Effect_WarpOutAsset;                               // 0xED0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Effect_InvocationAsset;                            // 0xF68(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FLinearColor                          CoilColor_CannonColor;                             // 0x1000(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          CoilColor_ChargeLaserColor;                        // 0x1010(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          CoilColor_MalfunctionColor;                        // 0x1020(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CoilColor_FadeTime;                                // 0x1030(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossLastFnelPwnCoilColor  CoilColor_State;                                   // 0x1034(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16F4[0x2B];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ATTLBaseBossLastPtclWpnActor> AssultShift_Class;                                 // 0x1060(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AssultShift_SocketName;                            // 0x1068(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               AssultShift_AttachOffset;                          // 0x1070(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16F5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLBaseBossLastPtclWpnActor*          AssultShift_Actor;                                 // 0x1080(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossLastFnelAssultShiftState AssultShift_State;                                 // 0x1088(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Lockon_OwnerRequestState;                          // 0x1089(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Lockon_ActionState;                                // 0x108A(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int8                                         DefaultFunnelIndex;                                // 0x108B(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16F6[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseBossLastFnelPawn* GetDefaultObj();

	bool WarpAttach_Set();
	bool Shoot_Start(class AActor* TargetActor, bool IsContinuous);
	bool Shoot_InProcess();
	bool Shoot_InAction();
	void Shoot_End();
	void Multicast_Shoot_Start(class AActor* TargetActor, int32 Level, bool IsContinuous);
	void Multicast_Shoot_Shoot(class AActor* Target);
	void Multicast_Shoot(float WaitTime, int32 ActionPhase);
	void Multicast_DawnHammer_Finish();
	void Move_Manual(const struct FVector& Velocity);
	void Lockon_SetOwnerRequestState(bool IsEnable);
	void Lockon_SetActionState(bool IsEnable);
	bool Initialize(class ATTLBaseBossLastPawn* OwnerBoss, int32 No);
	class UTTLDamageParameterComponent* GetDamageParameterComponent(int32 DamageNo);
	bool FollowTarget_Set(class AActor* TargetActor);
	bool FollowOwner_Set(class AActor* TargetActor);
	bool FollowAttach_Set(class AActor* TargetActor);
	void Effect_Set(int32 Type, bool IsEnable);
	bool Detach_Set();
	bool DawnHammer_Shoot();
	bool DawnHammer_Set(int32 Level, int32 No);
	bool DawnHammer_EndShoot();
	void DawnHammer_Cancel();
	bool Damage_Set();
	void Damage_RecoveryVP(float Value);
	bool CoilColor_Set(enum class ETTLBaseBossLastFnelPwnCoilColor Request, bool IsForce);
	bool AttachWait_Set(float InterpolationTime, const struct FVector& OffsetLocation, const struct FRotator& OffsetRotation);
	bool AssultShift_Set(bool Request, bool IsForce);
};

// 0xED0 (0x1390 - 0x4C0)
// Class DXM.TTLBaseBossLastPawn
class ATTLBaseBossLastPawn : public ATTLPawn
{
public:
	uint8                                        Pad_172B[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponent*                SelfMesh;                                          // 0x4D0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBaseBossLastAnimInstance*          SelfAnimBP;                                        // 0x4D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBasicStatusComponent*              SelfStatus;                                        // 0x4E0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLAIActionBaseBossLastComponent*     SelfAIAct;                                         // 0x4E8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCapsuleComponent*                     SelfCapsule;                                       // 0x4F0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLFirearmControlComponent*           SelfRightFireCtrl;                                 // 0x4F8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLFirearmControlComponent*           SelfLeftFireCtrl;                                  // 0x500(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLEnemyPushCollideComponent*         SelfPushCollide;                                   // 0x508(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBossLastAfterImageComponent*       SelfAfterImage;                                    // 0x510(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SelfLocation;                                      // 0x518(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              SelfRotation;                                      // 0x524(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               SelfVelocity;                                      // 0x530(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossLastPwnActNo          ActionNo;                                          // 0x53C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_172C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ActionPhase;                                       // 0x540(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_172E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLFxPlayback>                OneshotEffectList;                                 // 0x548(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_172F[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ATTLBaseBossLastRingActor> Ring_Class;                                        // 0x5A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseBossLastRingActor*             Ring_Actor;                                        // 0x5B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLBaseBossLastAsnlActor> Arsenal_Class;                                     // 0x5B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseBossLastAsnlActor*             Arsenal_Actor;                                     // 0x5C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLBaseBossLastWeakActor> WeakPoint_Class;                                   // 0x5C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseBossLastWeakActor*             WeakPoint_Actor;                                   // 0x5D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLBaseBossLastFnelPawn>  Funnel_Class;                                      // 0x5D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ATTLBaseBossLastFnelPawn*>      Funnel_PawnList;                                   // 0x5E0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FTTLBaseBossLastFunnelTargetInfo> Funnel_TargetInfoList;                             // 0x5F0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	int32                                        Funnel_ShootNo;                                    // 0x600(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArmLookAt_AimSpeed;                                // 0x604(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArmLookAt_LaserAimSpeedRate;                       // 0x608(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          CoilColor_CannonColor;                             // 0x60C(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          CoilColor_ChargeLaserColor;                        // 0x61C(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CoilColor_FadeTime;                                // 0x62C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossLastPwnCoilColor      CoilColor_State;                                   // 0x630(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1731[0x27];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               Eye_NormalColor;                                   // 0x658(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Eye_NormalSpeedRate;                               // 0x664(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Eye_AngerColor;                                    // 0x668(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Eye_AngerSpeedRate;                                // 0x674(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Eye_ToAngerTime;                                   // 0x678(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Eye_ToDeathTime;                                   // 0x67C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossLastPwnEye            Eye_State;                                         // 0x680(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1733[0x27];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           Thruster_NormalAsset;                              // 0x6A8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Thruster_NormalEndAsset;                           // 0x740(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Thruster_BoostAsset;                               // 0x7D8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Thruster_BoostEndAsset;                            // 0x870(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FTTLFxPlayback>                Thruster_PlaybackList;                             // 0x908(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_1734[0x2F8];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLBaseBossLastMoveLevel>     Move_Level;                                        // 0xC10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        Move_ActionLevel;                                  // 0xC20(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Move_Velocity;                                     // 0xC24(0xC)(Edit, BlueprintVisible, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Move_AnimVelocity;                                 // 0xC30(0xC)(Edit, BlueprintVisible, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1735[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           Move_LoopAsset;                                    // 0xC40(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Move_LoopPlayback;                                 // 0xCD8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_1737[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLBaseBossLastTurnLevel>     Turn_Level;                                        // 0xD00(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        Turn_ActionLevel;                                  // 0xD10(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1738[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           Damage_ProgressEffectAsset1;                       // 0xD18(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Damage_ProgressEffectAsset2;                       // 0xDB0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossLastPwnDamage         Damage_Type;                                       // 0xE48(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1739[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlayback                        Damage_ProgressEffect;                             // 0xE50(0x18)(Edit, BlueprintVisible, EditConst, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Damage_ProgressEffectState;                        // 0xE68(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_173A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           Anger_EffectAsset;                                 // 0xE70(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FTTLBaseBossLastTractorBeamLevel> TractorBeam_Level;                                 // 0xF08(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLBaseBossLastTrctActor> TractorBeam_ActorClass;                            // 0xF18(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseBossLastTrctActor*             TractorBeam_Actor;                                 // 0xF20(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TractorBeam_ActionLevel;                           // 0xF28(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_173C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLBaseBossLastRushLevel>     Rush_Level;                                        // 0xF30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        Rush_MoveTiming;                                   // 0xF40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Rush_AttackTiming;                                 // 0xF44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Rush_CollidePlacementRadius;                       // 0xF48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Rush_CollideRadius;                                // 0xF4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Rush_StartLoopEffectAsset;                         // 0xF50(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Rush_EndEffectAsset;                               // 0xFE8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Rush_HitEffectAsset;                               // 0x1080(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	int32                                        Rush_ActionLevel;                                  // 0x1118(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_173D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        Rush_HitHistory;                                   // 0x1120(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          Rush_DamageParam;                                  // 0x1130(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Rush_Playback;                                     // 0x1138(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_173E[0xC8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLBaseBossLastDawnHammerLevel> DawnHammer_Level;                                  // 0x1218(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        DawnHammer_ActionLevel;                            // 0x1228(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1740[0x9C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLBaseBossLastShootLevel>    RightShoot_Level;                                  // 0x12C8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	int32                                        RightShoot_ActionLevel;                            // 0x12D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RightShoot_ActionPhase;                            // 0x12DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1741[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLBaseBossLastShootLevel>    LeftShoot_Level;                                   // 0x12F8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	int32                                        LeftShoot_ActionLevel;                             // 0x1308(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LeftShoot_ActionPhase;                             // 0x130C(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1742[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLBossCoreInfoHUDComponent*          TTLBossCoreInfoHUDComponent;                       // 0x1328(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBossWeakenedVFXComponent*          SelfWeakenedVFX;                                   // 0x1330(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1743[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ATTLWarningArea*>               WarningArea_List;                                  // 0x1340(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1745[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        UniqueBossDropTargetValue;                         // 0x1354(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1746[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseBossLastPawn* GetDefaultObj();

	void WeakPoint_Destroy();
	bool WeakPoint_Create();
	bool Wait_Set(bool IsSend);
	void Wait_Cancel(enum class ETTLBaseBossLastPwnActNo NewAct);
	bool Turn_Set(int32 Level);
	void Turn_Cancel(enum class ETTLBaseBossLastPwnActNo NewAct);
	bool TractorBeam_Set(int32 Level);
	void TractorBeam_DestroyActor();
	bool TractorBeam_CreateActor();
	void TractorBeam_Cancel(enum class ETTLBaseBossLastPwnActNo NewAct);
	bool Rush_Set(int32 Level);
	bool Rush_EndAction(float Offset);
	void Rush_Cancel(enum class ETTLBaseBossLastPwnActNo NewAct);
	void Ring_Destroy();
	bool Ring_Create();
	bool RightShoot_Start(int32 Level, class AActor* TargetActor);
	bool RightShoot_InAction();
	void RightShoot_End();
	void OnStatusDead_Delegate();
	void Multicast_Wait_Set();
	void Multicast_TractorBeam_Set(int32 Level);
	void Multicast_Rush_Set(int32 Level, int32 RandomValue);
	void Multicast_RightShoot_Start(int32 Level, class AActor* TargetActor);
	void Multicast_Move_Set(int32 Level, float WraparoundYaw, float ActionRange);
	void Multicast_LeftShoot_Start(int32 Level, class AActor* TargetActor);
	void Multicast_DawnHammer_Set(class ATTLBaseBossLastFnelPawn* Pawn1, class ATTLBaseBossLastFnelPawn* Pawn2, class ATTLBaseBossLastFnelPawn* Pawn3, class ATTLBaseBossLastFnelPawn* Pawn4, class ATTLBaseBossLastFnelPawn* Pawn5, class ATTLBaseBossLastFnelPawn* Pawn6, class ATTLBaseBossLastFnelPawn* Pawn7, class ATTLBaseBossLastFnelPawn* Pawn8, int16 Level, int8 RandFlag);
	void Multicast_Anger_Set(int32 RandomValue);
	bool Move_Set(int32 Level, float WraparoundYaw);
	void Move_Manual(const struct FVector& Velocity);
	void Move_Cancel(enum class ETTLBaseBossLastPwnActNo NewAct);
	bool LeftShoot_Start(int32 Level, class AActor* TargetActor);
	bool LeftShoot_InAction();
	void LeftShoot_End();
	bool Initialize();
	class UTTLDamageParameterComponent* GetDamageParameterComponent(int32 DamageNo);
	void Funnel_SetLockonState(bool InEnable);
	bool Funnel_SetAction2(enum class ETTLBaseBossLastFnelAIAct NewActA, int32 NewShootLevelA, enum class ETTLBaseBossLastFnelAIAct NewActB, int32 NewShootLevelB, int32 RandomValue);
	bool Funnel_SetAction(enum class ETTLBaseBossLastFnelAIAct NewAct, int32 NewShootLevel, int32 NewNum, int32 RandomValue, bool IsOnlyRest);
	void Funnel_RecoveryVP(float Value);
	void Funnel_NextAttackSequence();
	int32 Funnel_GetEnables();
	bool Funnel_FindTargetSiege(class ATTLBaseBossLastFnelPawn* InFunnelPawn, class AActor* InTargetActor, float* OutYaw, float* OutDistance, float InPitch);
	void Funnel_Destroy();
	bool Funnel_Create();
	bool Funnel_CheckCollaborationAttack(class ATTLBaseBossLastFnelPawn* InFunnelPawn, class AActor* InTargetActor, float InIntervalTime);
	bool Funnel_CheckAttackSequence(class ATTLBaseBossLastFnelPawn* InFunnelPawn);
	bool Eye_Set(enum class ETTLBaseBossLastPwnEye Request, bool Force);
	bool DawnHammer_Set(int32 Level);
	void DawnHammer_EndShoot(class ATTLBaseBossLastFnelPawn* InFunnelPawn);
	void DawnHammer_Cancel(enum class ETTLBaseBossLastPwnActNo NewAct);
	bool Damage_Set(enum class ETTLBaseBossLastPwnDamage DamageType, float DamageFixTime, const struct FVector& DamageVelocity, int32 Progress);
	void Damage_End();
	void Damage_Cancel(enum class ETTLBaseBossLastPwnActNo NewAct);
	bool CoilColor_Set(enum class ETTLBaseBossLastPwnCoilColor Request, bool IsForce);
	void Arsenal_Destroy();
	bool Arsenal_Create();
	void Anger_SetEffect();
	bool Anger_Set();
	void Anger_Cancel(enum class ETTLBaseBossLastPwnActNo NewAct);
	void ActionCancel(enum class ETTLBaseBossLastPwnActNo NewAct);
};

// 0x0 (0x360 - 0x360)
// Class DXM.TTLBaseBossLastPtbAnimInstance
class UTTLBaseBossLastPtbAnimInstance : public UTTLAnimInstance
{
public:

	static class UClass* StaticClass();
	static class UTTLBaseBossLastPtbAnimInstance* GetDefaultObj();

};

// 0x288 (0x378 - 0xF0)
// Class DXM.TTLBaseBossLastPtbCtrlComponent
class UTTLBaseBossLastPtbCtrlComponent : public UActorComponent
{
public:
	struct FTTLFxParam                           StartEffectResource;                               // 0xF0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           LoopEffectResource;                                // 0x188(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           EndEffectResource;                                 // 0x220(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  StartEffectSocketName;                             // 0x2B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LoopEffectSocketName;                              // 0x2C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EndEffectSocketName;                               // 0x2C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotateZAngle;                                      // 0x2D0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EEasingFunc                       StartEaseFunc;                                     // 0x2D4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1748[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StartEaseExp;                                      // 0x2D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartRotateTime;                                   // 0x2DC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AlwaysRotate;                                      // 0x2E0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1749[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StartDispMeshTime;                                 // 0x2E4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartColorChangeTime;                              // 0x2E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          AppearStartColor;                                  // 0x2EC(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          AppearEndColor;                                    // 0x2FC(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          DisappearStartColor;                               // 0x30C(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_174A[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponent*                SelfMesh;                                          // 0x338(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        StartLoopEffectPlayback;                           // 0x340(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        EndEffectPlayback;                                 // 0x358(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_174B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBaseBossLastPtbCtrlComponent* GetDefaultObj();

};

// 0x280 (0x5C0 - 0x340)
// Class DXM.TTLBaseBossLastPtclWpnActor
class ATTLBaseBossLastPtclWpnActor : public ATTLActor
{
public:
	class ATTLBaseBossLastFnelPawn*              OwnerFunnel;                                       // 0x340(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                SelfMesh;                                          // 0x348(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ProcessPhase;                                      // 0x350(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1751[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Visible_AppearTime;                                // 0x358(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Visible_DisappearFrame;                            // 0x35C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Visible_Phase;                                     // 0x360(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1752[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Rotate_Speed;                                      // 0x36C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EEasingFunc                       Rotate_StartEaseFunc;                              // 0x370(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1753[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Rotate_StartEaseExp;                               // 0x374(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Rotate_StartTime;                                  // 0x378(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Rotate_IsContinue;                                 // 0x37C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1754[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Rotate_Phase;                                      // 0x380(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1755[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           Effect_StartAsset;                                 // 0x398(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Effect_LoopAsset;                                  // 0x430(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Effect_EndAsset;                                   // 0x4C8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Effect_Playback;                                   // 0x560(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	int32                                        Effect_Phase;                                      // 0x578(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Color_ChangeTime;                                  // 0x57C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          Color_AppearStart;                                 // 0x580(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          Color_AppearEnd;                                   // 0x590(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          Color_DisappearEnd;                                // 0x5A0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              Color_Material;                                    // 0x5B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Color_Phase;                                       // 0x5B8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1756[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseBossLastPtclWpnActor* GetDefaultObj();

	bool Visible_Start();
	bool Visible_End();
	bool Start();
	bool Rotate_Start();
	bool Initialize();
	bool End();
	bool Effect_Start();
	bool Effect_End();
	bool Color_StartDisappear();
	bool Color_StartAppear();
};

// 0xE0 (0x420 - 0x340)
// Class DXM.TTLBaseBossLastRingActor
class ATTLBaseBossLastRingActor : public ATTLActor
{
public:
	class ATTLBaseBossLastPawn*                  OwnerBoss;                                         // 0x340(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                SelfMesh;                                          // 0x348(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBaseBossLastRingAnimInstance*      SelfAnimBP;                                        // 0x350(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBasicStatusComponent*              SelfStatus;                                        // 0x358(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBossWeakenedVFXComponent*          SelfWeakenedVFX;                                   // 0x360(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLEnemyPushCollideComponent*         SelfPushCollide;                                   // 0x368(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBossLastAfterImageComponent*       SelfAfterImage;                                    // 0x370(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SelfLocation;                                      // 0x378(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              SelfRotation;                                      // 0x384(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               SelfVelocity;                                      // 0x390(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossLastRingActActNo      ActionNo;                                          // 0x39C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_175C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ActionPhase;                                       // 0x3A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_175D[0x24];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ATTLBaseBossLastBldActor>  Blade_Class;                                       // 0x3C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseBossLastBldActor*              Blade_Actor;                                       // 0x3D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLBaseBossLastTailActor> Tail_Class;                                        // 0x3D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseBossLastTailActor*             Tail_Actor;                                        // 0x3E0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Color_NormalFlashPower;                            // 0x3E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Color_NormalEmissionPower;                         // 0x3EC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Color_TractorBeamFlashPower;                       // 0x3F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Color_TractorBeamEmissionPower;                    // 0x3F4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Color_RushFlashPower;                              // 0x3F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Color_RushEmissionPower;                           // 0x3FC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Color_FadeTime;                                    // 0x400(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossLastRingActColor      Color_State;                                       // 0x404(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_175E[0x1B];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseBossLastRingActor* GetDefaultObj();

	void Tail_Destroy();
	bool Tail_Create();
	bool Initialize();
	bool Color_Set(enum class ETTLBaseBossLastRingActColor Request, bool IsForce);
	void Blade_Destroy();
	bool Blade_Create();
};

// 0x8 (0x5B0 - 0x5A8)
// Class DXM.TTLBaseBossLastRingAnimInstance
class UTTLBaseBossLastRingAnimInstance : public UTTLBaseBossLastAnimInstance
{
public:
	class ATTLBaseBossLastRingActor*             OwnerRing;                                         // 0x5A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLBaseBossLastRingAnimInstance* GetDefaultObj();

};

// 0xE0 (0x420 - 0x340)
// Class DXM.TTLBaseBossLastTailActor
class ATTLBaseBossLastTailActor : public ATTLActor
{
public:
	class ATTLBaseBossLastPawn*                  OwnerBoss;                                         // 0x340(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseBossLastRingActor*             OwnerRing;                                         // 0x348(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                SelfMesh;                                          // 0x350(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBaseBossLastTailAnimInstance*      SelfAnimBP;                                        // 0x358(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBasicStatusComponent*              SelfStatus;                                        // 0x360(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SelfLocation;                                      // 0x368(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              SelfRotation;                                      // 0x374(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               SelfVelocity;                                      // 0x380(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossLastTailActActNo      ActionNo;                                          // 0x38C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_175F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ActionPhase;                                       // 0x390(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1760[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               Color_NormalFlashPower;                            // 0x3B4(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Color_NormalEmissionPower;                         // 0x3C0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Color_AngerFlashPower;                             // 0x3CC(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Color_AngerEmissionPower;                          // 0x3D8(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Color_FadeTime;                                    // 0x3E4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossLastTailActColor      Color_State;                                       // 0x3E8(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1761[0x37];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseBossLastTailActor* GetDefaultObj();

	bool Initialize();
	bool Color_Set(enum class ETTLBaseBossLastTailActColor Request, bool IsForce);
};

// 0x18 (0x5C0 - 0x5A8)
// Class DXM.TTLBaseBossLastTailAnimInstance
class UTTLBaseBossLastTailAnimInstance : public UTTLBaseBossLastAnimInstance
{
public:
	class ATTLBaseBossLastTailActor*             OwnerTail;                                         // 0x5A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1762[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBaseBossLastTailAnimInstance* GetDefaultObj();

	float Physics_CalcAlpha();
};

// 0x310 (0x7D0 - 0x4C0)
// Class DXM.TTLBaseBossLastTrctActor
class ATTLBaseBossLastTrctActor : public ATTLPawn
{
public:
	class USkeletalMeshComponent*                SelfMesh;                                          // 0x4C0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBaseBossLastTrctAnimInstance*      SelfAnimBP;                                        // 0x4C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTTLBaseBossLastTrctLevel>     LevelParam;                                        // 0x4D0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        ProcessPhase;                                      // 0x4E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ExecuteLevel;                                      // 0x4E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTTLBaseBossLastTrctTarget>    TargetInfo;                                        // 0x4E8(0x10)(Edit, BlueprintVisible, ZeroConstructor, EditConst, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x4F8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1769[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           Effect_MuzzleAsset;                                // 0x518(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Effect_OccurrenceAsset;                            // 0x5B0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Effect_VanishAsset;                                // 0x648(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Effect_WeaponTractionAsset;                        // 0x6E0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Effect_MuzzlePlayback;                             // 0x778(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Effect_OccurrencePlayback;                         // 0x790(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Effect_VanishPlayback;                             // 0x7A8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_176A[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseBossLastTrctActor* GetDefaultObj();

	bool Start(int32 Level);
	bool NotifyStealWeapon(class ATTLCharacterCommon* TargetCharacter);
	void Multicast_ToPhase30();
	void Multicast_ToPhase29(int32 Type);
	void Multicast_ToPhase20();
	void Multicast_ToPhase11();
	void Multicast_ToPhase0(int32 Type);
	void Multicast_TargetInfo_StealEstablished(int32 InHandle);
	void Multicast_TargetInfo_SetWeaponActor(int32 InHandle, int32 InType);
	void Multicast_TargetInfo_Remove(int32 InHandle);
	void Multicast_TargetInfo_FinishAbsorb(int32 InHandle, int32 Type);
	void Multicast_TargetInfo_EndAbsorb(int32 InHandle);
	void Multicast_TargetInfo_ClearWeaponActor(int32 InHandle);
	void Multicast_TargetInfo_CancelAbsorb(int32 InHandle);
	void Multicast_TargetInfo_AddStealWeapon(class ATTLCharacterCommon* InActor, int32 InEquipType, int32 InHandle);
	void Multicast_TargetInfo_Add(class ATTLCharacterCommon* InActor, int32 InHandle);
	bool Effect_Set(int32 Type, bool IsEnable);
	bool CheckPurgeWeapon(class ATTLCharacterCommon* TargetCharacter, class ATTLWeaponBase* TargetWeapon);
	void Cancel();
};

// 0x30 (0x390 - 0x360)
// Class DXM.TTLBaseBossLastTrctAnimInstance
class UTTLBaseBossLastTrctAnimInstance : public UTTLAnimInstance
{
public:
	class ATTLBaseBossLastTrctActor*             OwnerActor;                                        // 0x360(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          AnimationMontage;                                  // 0x368(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Phase;                                             // 0x370(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RequestPhase;                                      // 0x374(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              SelfRotation;                                      // 0x378(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_176F[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBaseBossLastTrctAnimInstance* GetDefaultObj();

	bool OPEN(bool IsForce);
	bool IsOpening();
	bool IsOpened();
	bool IsClosing();
	bool IsClosed();
	bool CLOSE(bool IsForce);
};

// 0x110 (0x450 - 0x340)
// Class DXM.TTLBaseBossLastWeakActor
class ATTLBaseBossLastWeakActor : public ATTLActor
{
public:
	uint8                                        Pad_1778[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLBaseBossLastPawn*                  OwnerBoss;                                         // 0x350(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                SelfMesh;                                          // 0x358(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBaseBossLastWeakAnimInstance*      SelfAnimBP;                                        // 0x360(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBasicStatusComponent*              SelfStatus;                                        // 0x368(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCapsuleComponent*                     SelfCoreCapsule;                                   // 0x370(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLCharacterInfoHUDComponent*         SelfHUD;                                           // 0x378(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossLastWeakActState      State;                                             // 0x380(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossLastWeakActState      ReqState;                                          // 0x381(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1779[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               SelfLocation;                                      // 0x384(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SelfVelocity;                                      // 0x390(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_177A[0x11];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ETTLBaseBossLastWeakActLockon     Lockon_State;                                      // 0x3AD(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_177B[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           Damage_EffectAsset;                                // 0x3B0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                         Damage_State;                                      // 0x448(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_177C[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseBossLastWeakActor* GetDefaultObj();

	bool RequestState(enum class ETTLBaseBossLastWeakActState Request, bool IsForce);
	void Lockon_SetState(enum class ETTLBaseBossLastWeakActLockon NewState);
	bool Initialize(class ATTLBaseBossLastPawn* OwnerBoss);
	void Damage_SetState(bool IsEnable);
	void Damage_OnTakeAnyDamageDelegate(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
};

// 0x20 (0x380 - 0x360)
// Class DXM.TTLBaseBossLastWeakAnimInstance
class UTTLBaseBossLastWeakAnimInstance : public UTTLAnimInstance
{
public:
	class ATTLBaseBossLastWeakActor*             OwnerActor;                                        // 0x360(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          AnimationMontage;                                  // 0x368(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossLastWeakAnmState      State;                                             // 0x370(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossLastWeakAnmState      ReqState;                                          // 0x371(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_177E[0xE];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBaseBossLastWeakAnimInstance* GetDefaultObj();

	bool RequestState(enum class ETTLBaseBossLastWeakAnmState Request, bool IsForce);
};

// 0x30 (0x550 - 0x520)
// Class DXM.TTLBaseBossOgreAIController
class ATTLBaseBossOgreAIController : public ATTLBossAIController
{
public:
	TArray<float>                                PhaseSpeedList;                                    // 0x520(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<int32>                                PhaseParallelMissileLevelList;                     // 0x530(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class ATTLBaseBossOgreCharacter*             OwnerBoss;                                         // 0x540(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_177F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseBossOgreAIController* GetDefaultObj();

};

// 0x280 (0x5E0 - 0x360)
// Class DXM.TTLBaseBossOgreAnimInstance
class UTTLBaseBossOgreAnimInstance : public UTTLAnimInstance
{
public:
	class ATTLBaseBossOgreCharacter*             OwnerBoss;                                         // 0x360(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                Action_TargetActor;                                // 0x368(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossOgreAnmActNo          Action_No;                                         // 0x370(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1791[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Action_Phase;                                      // 0x374(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetSpeed;                                       // 0x378(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NowSpeed;                                          // 0x37C(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1792[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          Turn_AnimationMontage;                             // 0x398(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1793[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          Walk_AnimationMontage;                             // 0x3C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          Jump_AnimationMontage;                             // 0x3C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          Grasping_AnimationMontage;                         // 0x3D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          Kick_AnimationMontage;                             // 0x3D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          Tackle_AnimationMontage;                           // 0x3E0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          Damage_AnimationMontage;                           // 0x3E8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                     Damage_DeathLoopAnimation;                         // 0x3F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1794[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          Missile_AnimationMontage;                          // 0x400(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                     Missile_EndAllrangeAnimation;                      // 0x408(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          Guard_AnimationMontage;                            // 0x410(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          Sword_AnimationMontage;                            // 0x418(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          BackHandBlow_AnimationMontage;                     // 0x420(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1795[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          Anger_AnimationMontage;                            // 0x460(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               HipsTransform_EffectorLocation;                    // 0x468(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RightLegIK_EffectorLocation;                       // 0x474(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LeftLegIK_EffectorLocation;                        // 0x480(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RightArmIK_EffectorLocation;                       // 0x48C(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LeftArmIK_EffectorLocation;                        // 0x498(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RightArmIK_JointTargetLocation;                    // 0x4A4(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LeftArmIK_JointTargetLocation;                     // 0x4B0(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RightArmIK_ElbowLocation;                          // 0x4BC(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LeftArmIK_ElbowLocation;                           // 0x4C8(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsNeedFootIK;                                      // 0x4D4(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsNeedArmIK;                                       // 0x4D5(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDebugIKScreen;                                   // 0x4D6(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDebugIKScreen_Effector;                          // 0x4D7(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDebugIK_DrawRay;                                 // 0x4D8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1796[0x63];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              SpineTransform_EffectorRotation;                   // 0x53C(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1797[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HipsTransform_Alpha;                               // 0x554(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightLegIK_Alpha;                                  // 0x558(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftLegIK_Alpha;                                   // 0x55C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpineTransform_Alpha;                              // 0x560(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightArmIK_Alpha;                                  // 0x564(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftArmIK_Alpha;                                   // 0x568(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1798[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LimbWeak_RightArmAlpha;                            // 0x5B4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LimbWeak_LeftArmAlpha;                             // 0x5B8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LimbWeak_RightLegAlpha;                            // 0x5BC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LimbWeak_LeftLegAlpha;                             // 0x5C0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MissileHatch_SwitchingTime;                        // 0x5C4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossOgreMissileHatchState MissileHatch_State;                                // 0x5C8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1799[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MissileHatch_Parts1Alpha;                          // 0x5CC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MissileHatch_Parts2Alpha;                          // 0x5D0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_179A[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBaseBossOgreAnimInstance* GetDefaultObj();

	bool Walk_Set();
	bool Wait_Set();
	bool Wait_InAction();
	bool Turn_Set(float DeltaYaw);
	bool Turn_InAction();
	bool Tackle_Set();
	bool Tackle_End();
	void SwordStamp_SetEffect(int32 Type);
	void SwordStamp_SetAttackCollide();
	bool SwordStamp_Set();
	void SwordSlash_ShootWave();
	void SwordSlash_SetEffect(int32 Type);
	bool SwordSlash_Set(class AActor* TargetActor);
	void Step_RightLeg();
	void Step_LeftLeg();
	void SpineTransform_CalcEffectorRotation(struct FRotator* EffectorRotation, float* Alpha);
	void RightLegIK_Set(enum class ETTLBaseBossOgreIKMode Mode, float Time, bool IsRevise);
	struct FVector RightLegIK_CalcEffectorLocation();
	void RightKnee_Grounded();
	void RightArmIK_CalcEffectorLocation(struct FVector* EffectorLocation, struct FVector* JointTargetLocation, struct FVector* ElbowLocation, float* Alpha);
	void ReviseIK_CheckLeg(float Time, bool IsEnableRight, bool IsEnableLeft);
	void MissileHatch_SetState(enum class ETTLBaseBossOgreMissileHatchState InState, bool InForce);
	void Missile_Shoot();
	bool Missile_Set(bool IsAllrange);
	void Missile_End();
	void LeftLegIK_Set(enum class ETTLBaseBossOgreIKMode Mode, float Time, bool IsRevise);
	struct FVector LeftLegIK_CalcEffectorLocation();
	void LeftKnee_Grounded();
	void LeftArmIK_CalcEffectorLocation(struct FVector* EffectorLocation, struct FVector* JointTargetLocation, struct FVector* ElbowLocation, float* Alpha);
	bool Kick_Set(bool IsLeft);
	void Kick_RightPivotStep();
	void Kick_RightKickStep();
	void Kick_Right();
	void Kick_LeftPivotStep();
	void Kick_LeftKickStep();
	void Kick_Left();
	void Jump_Start(bool IsFall);
	bool Jump_SetLanding(float Time);
	bool Jump_SetFall();
	bool Jump_Set();
	void Jump_LandingRightLeg();
	void Jump_LandingLeftLeg();
	void Jump_Landing();
	bool Initialize(class ATTLBaseBossOgreCharacter* Owner);
	struct FVector HipsTransform_CalcEffectorLocation();
	bool Guard_Set(int32 Level);
	void Grasping_Throw();
	bool Grasping_Set(class AActor* Target);
	bool Damage_Set(int32 Parts);
	void Damage_RightStep();
	void Damage_LeftStep();
	void BackHandBlow_SetEffect(int32 Type);
	bool BackHandBlow_Set(class AActor* TargetActor);
	void Anger_SetEffect(int32 Type);
	bool Anger_Set();
};

// 0x1C8 (0x5A0 - 0x3D8)
// Class DXM.TTLBaseBossOgreBarrierActor
class ATTLBaseBossOgreBarrierActor : public ATTLBaseBarrierActor
{
public:
	uint8                                        Pad_179C[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLBaseBossOgreCharacter*             OwnerBossOgre;                                     // 0x3F0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseBossBallPawn*                  OwnerBossBall;                                     // 0x3F8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                       SelfRoot;                                          // 0x400(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                      SelfSphere;                                        // 0x408(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_179E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         Collision_Enable;                                  // 0x418(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_179F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           Effect_BarrierEffectAsset;                         // 0x420(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Effect_DestroyEffectAsset;                         // 0x4B8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Effect_BarrierEffect;                              // 0x550(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        Effect_BarrierOccurrenceTime;                      // 0x568(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBarrierActionNo               Effect_State;                                      // 0x56C(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17A1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UMaterialInstanceDynamic*>      Effect_MaterialList;                               // 0x570(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	enum class ETTLBarrierActionNo               Notify_Effect_State;                               // 0x580(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Lockon_State;                                      // 0x581(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17A2[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  Material_EmissiveName;                             // 0x588(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Material_DissolveName;                             // 0x590(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17A3[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseBossOgreBarrierActor* GetDefaultObj();

	void OnRep_Effect_State();
	void Multicast_SetDestroy();
	void Lockon_Set(bool IsEnable);
	bool Initialize(class ATTLBaseBossOgreCharacter* Boss);
	void Effect_SetState(enum class ETTLBarrierActionNo NewState);
	void Collision_Set(bool Enable);
	bool Action_Set(enum class ETTLBarrierActionNo NewAction);
};

// 0x1880 (0x2040 - 0x7C0)
// Class DXM.TTLBaseBossOgreCharacter
class ATTLBaseBossOgreCharacter : public ATTLCharacter
{
public:
	uint8                                        Pad_17CA[0x68];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponent*                SelfMesh;                                          // 0x828(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBaseBossOgreAnimInstance*          SelfAnimInst;                                      // 0x830(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCharacterMovementComponent*           SelfChrMove;                                       // 0x838(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBaseBossOgreMovementComponent*     SelfMove;                                          // 0x840(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLEnemyPushCollideComponent*         SelfPushCollide;                                   // 0x848(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLAIActionBaseBossOgreComponent*     SelfAIAct;                                         // 0x850(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCapsuleComponent*                     SelfCapsule;                                       // 0x858(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBasicStatusComponent*              SelfStatus;                                        // 0x860(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLFirearmControlComponent*           SelfFirearm;                                       // 0x868(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBossWeakenedVFXComponent*          SelfWeakenedVFX;                                   // 0x870(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseBossOgreAIController*          SelfAICtrl;                                        // 0x878(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                ActionActor;                                       // 0x880(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossOgreChrActNo          ActionNo;                                          // 0x888(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17CB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ActionPhase;                                       // 0x88C(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTTLFxPlayback>                OneshotEffectList;                                 // 0x890(0x10)(BlueprintVisible, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_17CC[0xB0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsNeedJumpFallCheck;                               // 0x950(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsNeedMoveGround;                                  // 0x951(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17CD[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GroundSearchRayLength;                             // 0x954(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GroundOffset;                                      // 0x958(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GroundMoveInterpSpeed;                             // 0x95C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsNeedFootIK;                                      // 0x960(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsNeedArmIK;                                       // 0x961(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsNeedCameraShake;                                 // 0x962(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDebugDisplayLogForManualMove;                    // 0x963(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDebugDrawManualMoveTrace;                        // 0x964(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17CE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        ManualMoveIgnores;                                 // 0x968(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        Turn_MaxYaw;                                       // 0x978(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Turn_Time;                                         // 0x97C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17CF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLBaseBossOgreWalkLevel>     Walk_Level;                                        // 0x988(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                  Walk_AttackParamName;                              // 0x998(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Walk_StepEffectAsset;                              // 0x9A0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_17D0[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLBaseBossOgreJumpLevel>     Jump_Level;                                        // 0xA48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Jump_TakeoffEffectAsset;                           // 0xA58(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Jump_LandingEffectAsset;                           // 0xAF0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Jump_HitEffectAsset;                               // 0xB88(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_17D1[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLBaseBossOgreGraspingLevel> Grasping_Level;                                    // 0xC48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FRotator                              Grasping_CameraRotation;                           // 0xC58(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        Grasping_CameraLength;                             // 0xC64(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                Grasping_TargetActor;                              // 0xC68(0x8)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLCharacterCommon*                   Grasping_ArrestedCharacter;                        // 0xC70(0x8)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          Grasping_DamageParam;                              // 0xC78(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17D2[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLBaseBossOgreKickLevel>     Kick_Level;                                        // 0xC98(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Kick_KickingFootStepEffectAsset;                   // 0xCA8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Kick_ShaftFootStepEffectAsset;                     // 0xD40(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Kick_KickEffectAsset;                              // 0xDD8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Kick_HitEffectAsset;                               // 0xE70(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FTTLBaseBossOgreTackleLevel>   Tackle_Level;                                      // 0xF08(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Tackle_ThrusterEffectAsset;                        // 0xF18(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Tackle_EndThrusterEffectAsset;                     // 0xFB0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Tackle_EffectAsset;                                // 0x1048(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Tackle_EndEffectAsset;                             // 0x10E0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Tackle_FootSmokeEffectAsset;                       // 0x1178(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Tackle_EndFootSmokeEffectAsset;                    // 0x1210(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Tackle_AroundSmokeEffectAsset;                     // 0x12A8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Tackle_EndAroundSmokeEffectAsset;                  // 0x1340(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Tackle_HitEffectAsset;                             // 0x13D8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        Tackle_ThrusterEffectStartTiming;                  // 0x1470(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Tackle_EffectStartTiming;                          // 0x1474(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Tackle_RightFootSmokeEffectStartTiming;            // 0x1478(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Tackle_LeftFootSmokeEffectStartTiming;             // 0x147C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Tackle_AroundSmokeEffectStartTiming;               // 0x1480(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Tackle_ThrusterEffectEndTiming;                    // 0x1484(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Tackle_EffectEndTiming;                            // 0x1488(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Tackle_RightFootSmokeEffectEndTiming;              // 0x148C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Tackle_LeftFootSmokeEffectEndTiming;               // 0x1490(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Tackle_AroundSmokeEffectEndTiming;                 // 0x1494(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Tackle_WeakCloseTiming;                            // 0x1498(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17D5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlayback                        Tackle_ThrusterEffect1;                            // 0x14A0(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Tackle_ThrusterEffect2;                            // 0x14B8(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Tackle_ThrusterEffect3;                            // 0x14D0(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Tackle_ThrusterEffect4;                            // 0x14E8(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Tackle_Effect;                                     // 0x1500(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Tackle_RightFootSmokeEffect;                       // 0x1518(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Tackle_LeftFootSmokeEffect;                        // 0x1530(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Tackle_AroundSmokeEffect;                          // 0x1548(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_17D7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Damage_ChestCoverFixedTime;                        // 0x1568(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Damage_LeftArmCoverFixedTime;                      // 0x156C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Damage_RightArmCoverFixedTime;                     // 0x1570(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Damage_LeftLegCoverFixedTime;                      // 0x1574(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Damage_RightLegCoverFixedTime;                     // 0x1578(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Damage_LeftArmWeakFixedTime;                       // 0x157C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Damage_RightArmWeakFixedTime;                      // 0x1580(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Damage_LeftLegWeakFixedTime;                       // 0x1584(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Damage_RightLegWeakFixedTime;                      // 0x1588(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Damage_SwordFixedTime;                             // 0x158C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Damage_DownEffectAsset;                            // 0x1590(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Damage_KneeSmokeEffectAsset;                       // 0x1628(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_17D8[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLBaseBossOgreMissileLevel>  Missile_Level;                                     // 0x16D8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          Missile_DamageParam;                               // 0x16E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        Missile_TargetList;                                // 0x16F0(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        Missile_ParallelProcessPhase;                      // 0x1700(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsIgnoreHiddenTargetForPlayableOgre;               // 0x1704(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDebugDraw_LockOnTargets;                         // 0x1705(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17DA[0x36];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               Anger_NormalColor;                                 // 0x173C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Anger_NormalSpeedRate;                             // 0x1748(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Anger_AngerColor;                                  // 0x174C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Anger_AngerSpeedRate;                              // 0x1758(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Anger_ToAngerTime;                                 // 0x175C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Anger_ToDeathTime;                                 // 0x1760(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17DB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           Anger_AngerEffectAsset;                            // 0x1768(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_17DC[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLBaseBossOgreGuardLevel>    Guard_Level;                                       // 0x1808(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_17DD[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLBaseBossOgreSwordSlashLevel> SwordSlash_Level;                                  // 0x1820(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           SwordSlash_EffectAsset;                            // 0x1830(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           SwordSlash_HitEffectAsset;                         // 0x18C8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FVector                               SwordSlash_WaveOffset;                             // 0x1960(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             SwordSlash_RevisePitchRange;                       // 0x196C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17DE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ATTLOgreSwordSlashWave*>        SwordSlash_WaveList;                               // 0x1978(0x10)(Edit, BlueprintVisible, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FTTLBaseBossOgreSwordStampLevel> SwordStamp_Level;                                  // 0x1988(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           SwordStamp_ShockWaveEffectAsset;                   // 0x1998(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           SwordStamp_StampSmokeEffectAsset;                  // 0x1A30(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           SwordStamp_DrawnSmokeEffectAsset;                  // 0x1AC8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           SwordStamp_HitEffectAsset;                         // 0x1B60(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FTTLBaseBossOgreBackHandBlowLevel> BackHandBlow_Level;                                // 0x1BF8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           BackHandBlow_EffectAsset;                          // 0x1C08(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           BackHandBlow_SmokeEffectAsset;                     // 0x1CA0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           BackHandBlow_HitEffectAsset;                       // 0x1D38(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_17DF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ATTLBaseBossOgreGauntletActor> Gauntlet_Class;                                    // 0x1DD8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseBossOgreGauntletActor*         Gauntlet_Actor;                                    // 0x1DE0(0x8)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLBaseBossOgreSwordPawn> Sword_Class;                                       // 0x1DE8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseBossOgreSwordPawn*             Sword_Pawn;                                        // 0x1DF0(0x8)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseBossOgreSwordPawn*             Sword_DropoutedPawn;                               // 0x1DF8(0x8)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLBaseBossOgreCoverPawn> LimbCover_Class;                                   // 0x1E00(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LimbCover_RightArmSocketName;                      // 0x1E08(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LimbCover_LeftArmSocketName;                       // 0x1E10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LimbCover_RightLegSocketName;                      // 0x1E18(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LimbCover_LeftLegSocketName;                       // 0x1E20(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LimbCover_RightArmCanBreak;                        // 0x1E28(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LimbCover_LeftArmCanBreak;                         // 0x1E29(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LimbCover_RightLegCanBreak;                        // 0x1E2A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LimbCover_LeftLegCanBreak;                         // 0x1E2B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17E1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLBaseBossOgreCoverPawn*             LimbCover_RightArmPawn;                            // 0x1E30(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseBossOgreCoverPawn*             LimbCover_LeftArmPawn;                             // 0x1E38(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseBossOgreCoverPawn*             LimbCover_RightLegPawn;                            // 0x1E40(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseBossOgreCoverPawn*             LimbCover_LeftLegPawn;                             // 0x1E48(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLBaseBossOgreWeakPawn>  LimbWeak_Class;                                    // 0x1E50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LimbWeak_RightArmSocketName;                       // 0x1E58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LimbWeak_LeftArmSocketName;                        // 0x1E60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LimbWeak_RightLegSocketName;                       // 0x1E68(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LimbWeak_LeftLegSocketName;                        // 0x1E70(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LimbWeak_RightArmCanBreak;                         // 0x1E78(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LimbWeak_LeftArmCanBreak;                          // 0x1E79(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LimbWeak_RightLegCanBreak;                         // 0x1E7A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LimbWeak_LeftLegCanBreak;                          // 0x1E7B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LimbWeak_SwitchingTime;                            // 0x1E7C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseBossOgreWeakPawn*              LimbWeak_RightArmPawn;                             // 0x1E80(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseBossOgreWeakPawn*              LimbWeak_LeftArmPawn;                              // 0x1E88(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseBossOgreWeakPawn*              LimbWeak_RightLegPawn;                             // 0x1E90(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseBossOgreWeakPawn*              LimbWeak_LeftLegPawn;                              // 0x1E98(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLBaseBossOgreCoverPawn> ChestCover_Class;                                  // 0x1EA0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLBaseBossOgreCoverPawn> ChestCover_DamageClass;                            // 0x1EA8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ChestCover_SocketName;                             // 0x1EB0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ChestCover_CanBreak;                               // 0x1EB8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17E4[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLBaseBossOgreCoverPawn*             ChestCover_Pawn;                                   // 0x1EC0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseBossOgreCoverPawn*             ChestCover_DamagePawn;                             // 0x1EC8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17E5[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ATTLBaseBossOgreWeakPawn>  ChestWeak_Class;                                   // 0x1ED8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ChestWeak_SocketName;                              // 0x1EE0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ChestWeak_IsLeaveAfterDeath;                       // 0x1EE8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17E6[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLBaseBossOgreWeakPawn*              ChestWeak_Pawn;                                    // 0x1EF0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLBaseBossOgreBarrierActor> ChestBarrier_Class;                                // 0x1EF8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ChestBarrier_SocketName;                           // 0x1F00(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseBossOgreBarrierActor*          ChestBarrier_Actor;                                // 0x1F08(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLBaseCannonPawn>        Cannon_Class;                                      // 0x1F10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          Cannon_SocketName;                                 // 0x1F18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class ATTLBaseCannonPawn*>            Cannon_ActorList;                                  // 0x1F28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLBaseBossOgreCollidePawn> AttackCollide_Class;                               // 0x1F38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseBossOgreCollidePawn*           AttackCollide_RightLeg;                            // 0x1F40(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseBossOgreCollidePawn*           AttackCollide_LeftLeg;                             // 0x1F48(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseBossOgreCollidePawn*           AttackCollide_Sword;                               // 0x1F50(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseBossOgreCollidePawn*           AttackCollide_Other;                               // 0x1F58(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDebugDrawCollision;                              // 0x1F60(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17E7[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCameraComponent*                      Camera_Comp;                                       // 0x1F68(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                Camera_TargetActor;                                // 0x1F70(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17E8[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                AI_SaveTargetActor;                                // 0x1FC0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                AI_SaveDamageCauser;                               // 0x1FC8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                AI_SaveActorValue;                                 // 0x1FD0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17E9[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ATTLWarningArea*>               WarningArea_List;                                  // 0x1FF8(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class ATTLSplinePath*                        WarningArea_MoveAreaPath;                          // 0x2008(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17EB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         Event_CastFlag;                                    // 0x2014(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17EC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLBossCoreInfoHUDComponent*          TTLBossCoreInfoHUDComponent;                       // 0x2018(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17ED[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsTransInterpolation;                              // 0x2038(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17EE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TransInterpolateTime;                              // 0x203C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ATTLBaseBossOgreCharacter* GetDefaultObj();

	void Walk_SetStepEffect(const struct FVector& Location);
	bool Walk_Set(int32 Level, class AActor* TargetAct, float Distance);
	bool Walk_InAction();
	bool Wait_Set();
	bool Wait_InAction();
	bool Turn_Set(float DeltaYaw);
	bool Turn_InAction();
	void Tackle_Takeoff();
	void Tackle_SetEffect(int32 Mode, const struct FVector& Location, const struct FRotator& Rotation);
	bool Tackle_Set(int32 Level, class AActor* TargetAct);
	bool Tackle_InAction();
	void SwordStamp_SetEffect(int32 Type, const struct FVector& Location, const struct FRotator& Rotation);
	bool SwordStamp_Set(int32 Level);
	bool SwordStamp_InAction();
	void SwordSlash_SetEffect(int32 Type, const struct FVector& Location, const struct FRotator& Rotation);
	bool SwordSlash_Set(int32 Level, class AActor* TargetActor);
	bool SwordSlash_InAction();
	void SwordSlash_CreateWave(const struct FRotator& InRot);
	void SwordSlash_AddWave(class ATTLOgreSwordSlashWave* PWave);
	void Sword_Drop();
	void Sword_Destroy();
	bool Sword_Create();
	void OnTakeAnyDamageDelegate(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void OnStatusDeathDelegate();
	void MulticastSwordDrop(bool RandomValue);
	bool Missile_Shoot();
	bool Missile_SetParallel(int32 Level);
	bool Missile_Set(int32 Level);
	bool Missile_InAction();
	void Missile_CancelParallel();
	void LimbWeak_SetState(enum class ETTLBaseBossOgreWeak Parts, enum class ETTLBaseBossOgreWeakState State, float Time);
	void LimbWeak_SetDamageState(enum class ETTLBaseBossOgreChrDmgReact Damage);
	void LimbWeak_MulticastDestroy(enum class ETTLBaseBossOgreWeak Parts);
	void LimbWeak_Destroy();
	bool LimbWeak_Create();
	void LimbCover_Destroy();
	bool LimbCover_Create();
	void Kick_SetEffect(int32 Type, const struct FVector& Location, const struct FRotator& Rotation);
	bool Kick_Set(int32 Level, class AActor* TargetActor, int32 Type);
	bool Kick_InAction();
	void Jump_Takeoff();
	void Jump_SetEffect(int32 Type, const struct FVector& Location, const struct FRotator& Rotation);
	bool Jump_Set(int32 Level, const struct FVector& TargetLocation, class AActor* TargetAct);
	bool Jump_InAction();
	bool Jump_Fall();
	void Jump_CheckFall();
	void Initialize();
	bool Guard_Set(int32 Level);
	void Guard_OnTakeAnyDamageDelegate(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	bool Guard_InAction();
	void Grasping_Throw();
	bool Grasping_Set(int32 Level, class AActor* Target);
	void Grasping_RequestArrested(class AActor* Target);
	bool Grasping_InAction();
	void Grasping_Cancel();
	void Grasping_Arrested(class AActor* Target);
	void Gauntlet_Destroy();
	bool Gauntlet_Create();
	void Damage_SetEffect(int32 Type, const struct FVector& Loc, const struct FRotator& Rot);
	bool Damage_Set(enum class ETTLBaseBossOgreChrDmgReact Parts, class AActor* DamageCauser);
	bool Damage_InAction();
	void ChestWeak_Set(bool EnableDamage, bool EnableLockon);
	void ChestWeak_Destroy();
	bool ChestWeak_Create();
	void ChestCover_Destroy();
	bool ChestCover_Create();
	void ChestBarrier_Set(enum class ETTLBarrierActionNo NewAction);
	void ChestBarrier_Destroy();
	bool ChestBarrier_Create();
	void Cannon_SetShoot(bool IsFrontEnable, bool IsBackEnable);
	void Cannon_Destroy();
	bool Cannon_Create();
	void Cannon_Add(class ATTLBaseCannonPawn* PCano);
	bool Camera_Set(enum class ETTLBaseBossOgreChrCamera Mode, float Time);
	void BackHandBlow_SetEffect(int32 Type, const struct FVector& InLoc, const struct FRotator& InRot);
	bool BackHandBlow_Set(int32 Level, class AActor* TargetActor);
	bool BackHandBlow_InAction();
	void AttackCollide_Set(enum class ETTLBaseBossOgreCldParts Parts, enum class ETTLBaseBossOgreCldState State, class FName ParamName);
	void AttackCollide_Destroy();
	bool AttackCollide_Create();
	void Anger_SetEffect(int32 Type);
	bool Anger_Set();
	bool Anger_InAction();
	void AI_StartAction(const struct FVector& BossLoc, const struct FRotator& BossRot, class AActor* TargetActor, int32 Action, int32 ExecuteLevel, class AActor* ActorValue, int32 IntValue, float FloatValue, const struct FVector& VectorValue, bool IsDisableDamage, bool IsDisableDeath, float AnimSpeed, class AActor* DamageCauser, bool IsSaveList);
};

// 0x110 (0x5D0 - 0x4C0)
// Class DXM.TTLBaseBossOgreCollidePawn
class ATTLBaseBossOgreCollidePawn : public ATTLPawn
{
public:
	uint8                                        Pad_17F5[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        IgnoreActorList;                                   // 0x4D0(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_17F6[0xC8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLBaseBossOgreCharacter*             OwnerBoss;                                         // 0x5A8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseBossOgreSwordPawn*             SwordPawn;                                         // 0x5B0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            DataTable;                                         // 0x5B8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          DamageParam;                                       // 0x5C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossOgreCldState          State;                                             // 0x5C8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossOgreCldParts          Parts;                                             // 0x5C9(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17F7[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseBossOgreCollidePawn* GetDefaultObj();

	bool SetCollide(enum class ETTLBaseBossOgreCldState NewState, class FName ParamName);
	bool Initialize2(class ATTLBaseBossOgreSwordPawn* Sword, enum class ETTLBaseBossOgreCldParts Parts);
	bool Initialize(class ATTLBaseBossOgreCharacter* Boss, enum class ETTLBaseBossOgreCldParts Parts);
	void CreateHitEffect(const struct FVector& HitLoc, const struct FRotator& HitRot);
};

// 0x10 (0x370 - 0x360)
// Class DXM.TTLBaseBossOgreCoverAnimInstance
class UTTLBaseBossOgreCoverAnimInstance : public UTTLAnimInstance
{
public:
	class UAnimMontage*                          Destroy_Montage;                                   // 0x360(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17FA[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBaseBossOgreCoverAnimInstance* GetDefaultObj();

	bool Destroy_PlayMontage(class FName baseSection);
	bool Destroy_IsFinishedMontage();
};

// 0x120 (0x5E0 - 0x4C0)
// Class DXM.TTLBaseBossOgreCoverPawn
class ATTLBaseBossOgreCoverPawn : public ATTLArmorPawn
{
public:
	uint8                                        Pad_1801[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           Destroy_EffectAsset;                               // 0x520(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FLinearColor                          Destroy_EffectColor1;                              // 0x5B8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          Destroy_EffectColor2;                              // 0x5C8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        AttachPointType;                                   // 0x5D8(0x1)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1802[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseBossOgreCoverPawn* GetDefaultObj();

	void MulticastDestroyStart();
	void Lockon_Set(bool Enable);
	bool Initialize(class ATTLBaseBossOgreCharacter* Boss, enum class ETTLBaseBossOgreCover Cover);
	bool Destroy_Start();
	bool Destroy_IsFinished();
	void Damage_OnTakeAnyDamageDelegate(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void Collision_Set(bool Enable);
};

// 0x140 (0x600 - 0x4C0)
// Class DXM.TTLBaseBossOgreGauntletActor
class ATTLBaseBossOgreGauntletActor : public ATTLPawn
{
public:
	uint8                                        Pad_1804[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLBaseBossOgreCharacter*             OwnerBoss;                                         // 0x4D0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                SelfNormalMesh;                                    // 0x4D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                SelfBreakMesh;                                     // 0x4E0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBaseBossOgreGauntletAnimInst*      SelfBreakAnimBP;                                   // 0x4E8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UBoxComponent*>                 SelfCollideList;                                   // 0x4F0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UTTLBasicStatusComponent*              SelfStatus;                                        // 0x500(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossOgreGauntletActNo     Action_No;                                         // 0x508(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1805[0x27];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           Break_EffectAsset;                                 // 0x530(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FLinearColor                          Break_EffectColor1;                                // 0x5C8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          Break_EffectColor2;                                // 0x5D8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Break_Effect;                                      // 0x5E8(0x18)(BlueprintVisible, BlueprintReadOnly, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ATTLBaseBossOgreGauntletActor* GetDefaultObj();

	void MulticastBreakSet();
	bool Initialize(class ATTLBaseBossOgreCharacter* Boss);
	bool Break_Set();
	bool Break_IsFinished();
};

// 0x20 (0x380 - 0x360)
// Class DXM.TTLBaseBossOgreGauntletAnimInst
class UTTLBaseBossOgreGauntletAnimInst : public UTTLAnimInstance
{
public:
	class ATTLBaseBossOgreGauntletActor*         OwnerGauntlet;                                     // 0x360(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossOgreGauntletAnmActNo  Action_No;                                         // 0x368(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1807[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          Break_AnimationMontage;                            // 0x370(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1808[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBaseBossOgreGauntletAnimInst* GetDefaultObj();

	bool Break_Set();
	bool Break_IsFinish();
	bool Break_InAction();
};

// 0x60 (0x150 - 0xF0)
// Class DXM.TTLEnemyMovementComponent
class UTTLEnemyMovementComponent : public UActorComponent
{
public:
	class AActor*                                OwnerActor;                                        // 0xF0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                OwnerMesh;                                         // 0xF8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1809[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRootMotionMovementParams             RootMotion_Params;                                 // 0x110(0x40)(Transient, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLEnemyMovementComponent* GetDefaultObj();

};

// 0x10 (0x160 - 0x150)
// Class DXM.TTLBaseBossOgreMovementComponent
class UTTLBaseBossOgreMovementComponent : public UTTLEnemyMovementComponent
{
public:
	class ATTLBaseBossOgreCharacter*             OwnerBoss;                                         // 0x150(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLAIActionBaseBossOgreComponent*     OwnerAIAct;                                        // 0x158(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLBaseBossOgreMovementComponent* GetDefaultObj();

};

// 0x0 (0x438 - 0x438)
// Class DXM.TTLBaseBossOgreSwordAIActionComp
class UTTLBaseBossOgreSwordAIActionComp : public UTTLAIActionComponent
{
public:

	static class UClass* StaticClass();
	static class UTTLBaseBossOgreSwordAIActionComp* GetDefaultObj();

};

// 0x20 (0x380 - 0x360)
// Class DXM.TTLBaseBossOgreSwordAnimInstance
class UTTLBaseBossOgreSwordAnimInstance : public UTTLAnimInstance
{
public:
	class ATTLBaseBossOgreSwordPawn*             OwnerPawn;                                         // 0x360(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          Animation_Montage;                                 // 0x368(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossOgreSwordAnmActNo     Animation_State;                                   // 0x370(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_180E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Animation_Phase;                                   // 0x374(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_180F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBaseBossOgreSwordAnimInstance* GetDefaultObj();

	bool Useless_Set();
	bool Useless_InAction();
	bool Grounded_Set();
	bool Grounded_InAction();
	bool Dropped_Set();
	bool Dropped_InAction();
	bool Attack_Set();
	bool Attack_InAction();
};

// 0x10 (0x160 - 0x150)
// Class DXM.TTLBaseBossOgreSwordMovementComp
class UTTLBaseBossOgreSwordMovementComp : public UTTLEnemyMovementComponent
{
public:
	class ATTLBaseBossOgreSwordPawn*             OwnerBoss;                                         // 0x150(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLAIActBaseBossOgreSwordComp*        OwnerAIAct;                                        // 0x158(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLBaseBossOgreSwordMovementComp* GetDefaultObj();

};

// 0x5C0 (0xD80 - 0x7C0)
// Class DXM.TTLBaseBossOgreSwordPawn
class ATTLBaseBossOgreSwordPawn : public ATTLCharacter
{
public:
	class ATTLBaseBossOgreCharacter*             OwnerBoss;                                         // 0x7C0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                SelfMesh;                                          // 0x7C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBaseBossOgreSwordAnimInstance*     SelfAnimInst;                                      // 0x7D0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCharacterMovementComponent*           SelfChrMove;                                       // 0x7D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBaseBossOgreSwordMovementComp*     SelfMove;                                          // 0x7E0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLEnemyPushCollideComponent*         SelfPushCollide;                                   // 0x7E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLAIActBaseBossOgreSwordComp*        SelfAIAct;                                         // 0x7F0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLCptWpnBaseBossOgreSwordComp*       SelfCptWpn;                                        // 0x7F8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBasicStatusComponent*              SelfStatus;                                        // 0x800(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCameraComponent*                      SelfCamera;                                        // 0x808(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GravityScale;                                      // 0x810(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         InitializeLost;                                    // 0x814(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         InfinityUse;                                       // 0x815(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossOgreSwordPwnActNo     Action_No;                                         // 0x816(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1818[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Action_Phase;                                      // 0x818(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1819[0xD4];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsTransInterpolation;                              // 0x8F0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_181A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TransInterpolateTime;                              // 0x8F4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Effect_BladeStartLoopEffectAsset;                  // 0x8F8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Effect_BladeEndEffectAsset;                        // 0x990(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Effect_BladeTrailEffectAsset;                      // 0xA28(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Effect_HitEffectAsset;                             // 0xAC0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Effect_BladeEffect1;                               // 0xB58(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Effect_BladeEffect2;                               // 0xB70(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Effect_BladeTrailEffect;                           // 0xB88(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Lost_LandingEffectAsset;                           // 0xBA0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        Lost_LeaveLength;                                  // 0xC38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Lost_DirectionOffset;                              // 0xC3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Lost_RotationInterpolationTime;                    // 0xC40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_181C[0x3C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  Captured_ParamName;                                // 0xC80(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Captured_LandingEffectAsset;                       // 0xC88(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FVector                               Captured_FallOffset;                               // 0xD20(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_181D[0x2C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ATTLBaseBossOgreCollidePawn> AttackCollide_Class;                               // 0xD58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseBossOgreCollidePawn*           AttackCollide_Pawn;                                // 0xD60(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_181E[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseBossOgreSwordPawn* GetDefaultObj();

	bool Wait_Set();
	bool Wait_InAction();
	bool Useless_Set();
	bool Useless_InAction();
	void Lost_SetFall();
	bool Lost_Set(bool RandomValue);
	bool Lost_InAction();
	bool Initialize(class ATTLBaseBossOgreCharacter* Boss);
	void Effect_SetBladeEffect(int32 Type);
	bool Captured_StartControl();
	bool Captured_StartAttack();
	bool Captured_StartAccess();
	bool Captured_SetAttackFall();
	void Captured_MulticastRequestUniqueDrop(class AActor* Boss);
	bool Captured_EndAccess();
};

// 0x1A0 (0x660 - 0x4C0)
// Class DXM.TTLBaseBossOgreWeakPawn
class ATTLBaseBossOgreWeakPawn : public ATTLPawn
{
public:
	uint8                                        Pad_1828[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ETTLBaseBossOgreWeak              WeakID;                                            // 0x4F0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1829[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ETTLBaseBossOgreWeakState         State_State;                                       // 0x511(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_182B[0xE];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           Damage_EffectAsset;                                // 0x520(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossOgreWeakDamage        Damage_Mode;                                       // 0x5B8(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_182C[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ETTLBaseBossOgreWeakDamage        Notify_Damage_Mode;                                // 0x5BA(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ETTLBaseBossOgreWeakLockon        Lockon_Mode;                                       // 0x5BB(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_182D[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ETTLBaseBossOgreWeakLockon        Notify_Lockon_Mode;                                // 0x5BD(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_182E[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           Destroy_EffectAsset;                               // 0x5C0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        AttachPointType;                                   // 0x658(0x1)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_182F[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseBossOgreWeakPawn* GetDefaultObj();

	void State_SetState(enum class ETTLBaseBossOgreWeakState State, float Time);
	void OnRep_NotifyLockonMode();
	void OnRep_NotifyDamageMode();
	void Lockon_SetMode(enum class ETTLBaseBossOgreWeakLockon Mode);
	bool Initialize(class ATTLBaseBossOgreCharacter* Boss, enum class ETTLBaseBossOgreWeak Weak, enum class ETTLBaseBossOgreWeakState State, enum class ETTLBaseBossOgreWeakDamage Damage, enum class ETTLBaseBossOgreWeakLockon LockOn);
	void Destroy_Start();
	void Damage_SetMode(enum class ETTLBaseBossOgreWeakDamage Mode);
	void Damage_OnTakeAnyDamageDelegate(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
};

// 0x30 (0x4E8 - 0x4B8)
// Class DXM.TTLBaseBossSpedAIController
class ATTLBaseBossSpedAIController : public ATTLAIController
{
public:
	TArray<struct FTTLBaseBossSpedAIPhaseInfo>   PhaseInfoList;                                     // 0x4B8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        AngerHPRate;                                       // 0x4C8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1831[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLBaseBossSpedPawn*                  OwnerBoss;                                         // 0x4D0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBasicStatusComponent*              TargetStatus;                                      // 0x4D8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1832[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseBossSpedAIController* GetDefaultObj();

};

// 0xB0 (0x410 - 0x360)
// Class DXM.TTLBaseBossSpedAnimInstance
class UTTLBaseBossSpedAnimInstance : public UTTLAnimInstance
{
public:
	class ATTLBaseBossSpedPawn*                  OwnerBoss;                                         // 0x360(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossSpedAnmActNo          Action_No;                                         // 0x368(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_183B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Action_Phase;                                      // 0x36C(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_183C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          Roll_AnimationMontage;                             // 0x378(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          Damage_AnimationMontage;                           // 0x380(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          Hatch_RightAnimationMontage;                       // 0x388(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          Hatch_LeftAnimationMontage;                        // 0x390(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_183D[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               BarrelControl_RightLookAtDirection;                // 0x3A4(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BarrelControl_LeftLookAtDirection;                 // 0x3B0(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BarrelControl_RightLookAtAlpha;                    // 0x3BC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BarrelControl_LeftLookAtAlpha;                     // 0x3C0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_183F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                BarrelControl_LookAtTargetActor;                   // 0x3C8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BarrelControl_RightOffset;                         // 0x3D0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BarrelControl_LeftOffset;                          // 0x3DC(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             BarrelControl_RightLookAtPitchRange;               // 0x3E8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             BarrelControl_RightLookAtYawRange;                 // 0x3F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             BarrelControl_LeftLookAtPitchRange;                // 0x3F8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             BarrelControl_LeftLookAtYawRange;                  // 0x400(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BarrelControl_LookAtSpeed;                         // 0x408(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BarrelControl_DeviationShootingRate;               // 0x40C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLBaseBossSpedAnimInstance* GetDefaultObj();

	bool Roll_Set(bool IsRight);
	bool Roll_OnAction();
	bool Initialize(class ATTLBaseBossSpedPawn* Owner);
	bool Idle_Set();
	bool Idle_OnAction();
	bool Hatch_Set(bool IsRight, enum class ETTLBaseBossSpedAnmHatch NewState, float NewSpeed);
	bool Damage_Set(enum class ETTLBaseBossSpedAnmDamage Type);
	bool Damage_OnAction();
	void BarrelControl_CalcRightLookAt(struct FVector* EffectorLocation, float* Alpha);
	void BarrelControl_CalcLeftLookAt(struct FVector* EffectorLocation, float* Alpha);
};

// 0xEB0 (0x1370 - 0x4C0)
// Class DXM.TTLBaseBossSpedPawn
class ATTLBaseBossSpedPawn : public ATTLPawn
{
public:
	class FName                                  BodyAttackParamName;                               // 0x4C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                SelfMesh;                                          // 0x4C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBaseBossSpedAnimInstance*          SelfAnimBP;                                        // 0x4D0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                      SelfCollide;                                       // 0x4D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLFirearmControlComponent*           SelfFirearmCtrl;                                   // 0x4E0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLFirearmControlComponent*           SelfFirearmCtrlMG;                                 // 0x4E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBasicStatusComponent*              SelfStatus;                                        // 0x4F0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLAIActionBaseBossSpedComponent*     SelfAIAct;                                         // 0x4F8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseBossSpedAIController*          SelfAICtrl;                                        // 0x500(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USplineComponent*                      SelfSpline;                                        // 0x508(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLEnemyPushCollideComponent*         SelfPushCollide;                                   // 0x510(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1843[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                Action_TargetActor;                                // 0x520(0x8)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLSplinePath*                        Action_TargetPath;                                 // 0x528(0x8)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTTLFxPlayback>                OneshotEffectList;                                 // 0x530(0x10)(BlueprintVisible, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          BodyAttackDamageParam;                             // 0x540(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        BodyAttackHitActorList;                            // 0x548(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1845[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ATTLWarningArea*>               WarningArea_List;                                  // 0x5B8(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1846[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLBaseBossSpedMoveLevel>     Move_Level;                                        // 0x5E8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FVector2D                             Move_HeightRange;                                  // 0x5F8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1847[0x90];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLBaseBossSpedPassingLevel>  Passing_Level;                                     // 0x690(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_1848[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLBaseBossSpedSteepTurnLevel> SteepTurn_Level;                                   // 0x6B8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_1849[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLBaseBossSpedOutrangeWraparoundLevel> OutrangeWraparound_Level;                          // 0x6D0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_184A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLBaseBossSpedBarrelrollWraparoundLevel> BarrelrollWraparound_Level;                        // 0x6E8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_184B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLBaseBossSpedRushLevel>     Rush_Level;                                        // 0x700(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Rush_HitEffectAsset;                               // 0x710(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Rush_StartEffectAsset;                             // 0x7A8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Rush_EffectAsset;                                  // 0x840(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_184D[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLBaseBossSpedMachineGunLevel> MachineGun_Level;                                  // 0x8F8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FVector2D                             MachineGun_AutoShootRange;                         // 0x908(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MachineGun_AutoShootLength;                        // 0x910(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_184E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLDamageParameterComponent*          MachineGun_DamageParam;                            // 0x918(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_184F[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLBaseBossSpedMissileLevel>  Missile_Level;                                     // 0x930(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FVector2D                             Missile_ShootPitchRange;                           // 0x940(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             Missile_ShootYawRange;                             // 0x948(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Missile_ShootLength;                               // 0x950(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1850[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           Missile_StartEffectAsset;                          // 0x958(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_1851[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLDamageParameterComponent*          Missile_DamageParam;                               // 0x9F8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                Missile_TargetActor;                               // 0xA00(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1852[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLBaseBossSpedFloatingMineLevel> FloatingMine_Level;                                // 0xA28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_1854[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLDamageParameterComponent*          FloatingMine_DamageParam;                          // 0xA40(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1855[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLBaseBossSpedBombingLevel>  Bombing_Level;                                     // 0xA68(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_1856[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLDamageParameterComponent*          Bombing_DamageParam;                               // 0xA80(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1857[0x24];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Overheat_DefaultOverheatDamage;                    // 0xAAC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Overheat_AdditionOverheatDamage;                   // 0xAB0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Overheat_CumulativeDamageKeepTime;                 // 0xAB4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Overheat_RecoveryCumulativeDamage;                 // 0xAB8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Overheat_Time;                                     // 0xABC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Overheat_MaxSpeed;                                 // 0xAC0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1858[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               BodyColor_NormalColor;                             // 0xAD4(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BodyColor_AngerColor;                              // 0xAE0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BodyColor_NormalPower;                             // 0xAEC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BodyColor_OverheatFlashingSpeed;                   // 0xAF0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BodyColor_FadeTime;                                // 0xAF4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BodyColor_MirageColor;                             // 0xAF8(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BodyColor_MiragePower;                             // 0xB04(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BodyColor_NormalEyeColor;                          // 0xB08(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BodyColor_NormalEyeSpeedRate;                      // 0xB14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BodyColor_AngerEyeColor;                           // 0xB18(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BodyColor_AngerEyeSpeedRate;                       // 0xB24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_185A[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLBaseBossSpedMirageLevel>   Mirage_Level;                                      // 0xB68(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Mirage_HarbingerEffectAsset;                       // 0xB78(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Mirage_StartEffectAsset;                           // 0xC10(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Mirage_EffectAsset;                                // 0xCA8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Mirage_EndEffectAsset;                             // 0xD40(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_185B[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ATTLBaseBossSpedPawn*>          Mirage_PawnList;                                   // 0xDF0(0x10)(Edit, BlueprintVisible, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<class ATTLBaseBossSpedPawn*>          Mirage_CreateList;                                 // 0xE00(0x10)(Edit, BlueprintVisible, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	class ATTLBaseBossSpedPawn*                  Mirage_ParentPawn;                                 // 0xE10(0x8)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_185C[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           Effect_ThrusterEffectAsset;                        // 0xE38(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Effect_WingTrailEffectAsset;                       // 0xED0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Effect_MoveEffectAsset;                            // 0xF68(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_185E[0xF0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           Anger_EffectAsset;                                 // 0x10F0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_185F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           Damage_SmokeEffectAsset;                           // 0x1190(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Damage_ExplosionEffectAsset;                       // 0x1228(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        Damage_SmallMoveSpeed;                             // 0x12C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Damage_SmallTime;                                  // 0x12C4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Damage_BigMoveSpeed;                               // 0x12C8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Damage_BigTime;                                    // 0x12CC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1860[0x5C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AbnormalState_StunedMoveRate;                      // 0x132C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1861[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLBossCoreInfoHUDComponent*          TTLBossCoreInfoHUDComponent;                       // 0x1348(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1862[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseBossSpedPawn* GetDefaultObj();

	void DamageReaction_OnTakeAnyDamageDelegate(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void Damage_OnStatusDead_Delegate();
};

// 0x48 (0x500 - 0x4B8)
// Class DXM.TTLBaseBossTrinAIController
class ATTLBaseBossTrinAIController : public ATTLAIController
{
public:
	class ATTLBaseBossTrinCharacter*             OwnerBoss;                                         // 0x4B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLLevelScriptActor*                  LevelBP;                                           // 0x4C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1864[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLBaseBossTrinAICtrlPhaseInfo> Phase_InfoList;                                    // 0x4D0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_1865[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseBossTrinAIController* GetDefaultObj();

};

// 0x60 (0x3C0 - 0x360)
// Class DXM.TTLBaseBossTrinAnimInstance
class UTTLBaseBossTrinAnimInstance : public UTTLAnimInstance
{
public:
	class ATTLBaseBossTrinCharacter*             OwnerBoss;                                         // 0x360(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1867[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               Root_LookAtLocation;                               // 0x380(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1868[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          Wait_Montage;                                      // 0x398(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          Rush_Montage;                                      // 0x3A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          Damage_Montage;                                    // 0x3A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          Missile_Montage;                                   // 0x3B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1869[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBaseBossTrinAnimInstance* GetDefaultObj();

	void Root_CalcTransformLocation(struct FVector* OutLocation);
};

// 0x1110 (0x18D0 - 0x7C0)
// Class DXM.TTLBaseBossTrinCharacter
class ATTLBaseBossTrinCharacter : public ATTLCharacter
{
public:
	uint8                                        Pad_1874[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponent*                SelfMesh;                                          // 0x7D0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBaseBossTrinAnimInstance*          SelfAnimBP;                                        // 0x7D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCharacterMovementComponent*           SelfChrMove;                                       // 0x7E0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBaseBossTrinMovementComponent*     SelfMovement;                                      // 0x7E8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLEnemyPushCollideComponent*         SelfPushCollide;                                   // 0x7F0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCapsuleComponent*                     SelfCapsule;                                       // 0x7F8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLFirearmControlComponent*           SelfFireCtrl;                                      // 0x800(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBasicStatusComponent*              SelfStatus;                                        // 0x808(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLAIActionBaseBossTrinComponent*     SelfAIAct;                                         // 0x810(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBossWeakenedVFXComponent*          SelfWeakenedVFX;                                   // 0x818(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseBossTrinAIController*          SelfAICtrl;                                        // 0x820(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseBossTrinChrActMode        Action_Mode;                                       // 0x828(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1875[0x2F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLFxPlayback>                OneshotEffectList;                                 // 0x858(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_1876[0xC8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ATTLBaseCannonPawn>        Cannon_Class;                                      // 0x930(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Cannon_DeckSocketName;                             // 0x938(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                            Cannon_DeckOffset;                                 // 0x940(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class ATTLBaseCannonPawn*                    Cannon_DeckPawn;                                   // 0x970(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Cannon_RightSocketName;                            // 0x978(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                            Cannon_RightOffset;                                // 0x980(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class ATTLBaseCannonPawn*                    Cannon_RightPawn;                                  // 0x9B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Cannon_LeftSocketName;                             // 0x9B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                            Cannon_LeftOffset;                                 // 0x9C0(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class ATTLBaseCannonPawn*                    Cannon_LeftPawn;                                   // 0x9F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLBaseBossTrinWeakActor> Weak_Class;                                        // 0x9F8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Weak_UpperDeckSocketName;                          // 0xA00(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseBossTrinWeakActor*             Weak_UpperDeckActor;                               // 0xA08(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Weak_FrontLeftSocketName;                          // 0xA10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseBossTrinWeakActor*             Weak_FrontLeftActor;                               // 0xA18(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Weak_FrontRightSocketName;                         // 0xA20(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseBossTrinWeakActor*             Weak_FrontRightActor;                              // 0xA28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Wheel_FrontOffset;                                 // 0xA30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Wheel_BackOffset;                                  // 0xA34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Connector_BackOffset;                              // 0xA38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Connector_YawLimit;                                // 0xA3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTTLBaseBossTrinFreightTrainInfo> FreightTrain_InfoList;                             // 0xA40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        FreightTrain_ExposureArsenalSpeed;                 // 0xA50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FreightTrain_ExposureDroneSpeed;                   // 0xA54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FreightTrain_DetachEffectAsset;                    // 0xA58(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class ATTLCharacterCommon*>           FreightTrain_ExposureContainerArsenalList;         // 0xAF0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<class ATTLBaseDronePawn*>             FreightTrain_ExposureContainerDroneList;           // 0xB00(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	class ATriggerBox*                           FreightTrain_DetachTriggerBox;                     // 0xB10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1879[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               EyeColor_NormalColor;                              // 0xB20(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EyeColor_NormalSpeedRate;                          // 0xB2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               EyeColor_AngerColor;                               // 0xB30(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EyeColor_AngerSpeedRate;                           // 0xB3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EyeColor_FadeTime;                                 // 0xB40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_187A[0x2C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           Hover_PathMoveEffectAsset;                         // 0xB70(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Hover_FreeMoveEffectAsset;                         // 0xC08(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        Hover_IntervalTime;                                // 0xCA0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_187B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           Hover_FreeMovePeriodicEffectAsset;                 // 0xCA8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        Hover_PeriodicIntervalTime;                        // 0xD40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_187C[0x2C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           Thruster_NormalEffectAsset;                        // 0xD70(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Thruster_NormalEndEffectAsset;                     // 0xE08(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Thruster_RushEffectAsset;                          // 0xEA0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Thruster_RushEndEffectAsset;                       // 0xF38(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_187D[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           Collide_MoveHitEffectAsset;                        // 0xFE8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_187F[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLBaseBossTrinPathMoveLevel> PathMove_Level;                                    // 0x1098(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          PathMove_DamageParam;                              // 0x10A8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1880[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLBaseBossTrinFreeMoveLevel> FreeMove_Level;                                    // 0x10C0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_1881[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                FreeMove_TargetActor;                              // 0x10D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          FreeMove_DamageParam;                              // 0x10E0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1882[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           Anger_EffectAsset;                                 // 0x1108(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class ATriggerBox*                           Anger_AngerTriggerBox;                             // 0x11A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1883[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLBaseBossTrinRushLevel>     Rush_Level;                                        // 0x11B0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_1884[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           Rush_RushStartEffectAsset;                         // 0x11C8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Rush_RushEffectAsset;                              // 0x1260(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Rush_RushEndEffectAsset;                           // 0x12F8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Rush_HoverStartLoopEffectAsset;                    // 0x1390(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Rush_HoverEndEffectAsset;                          // 0x1428(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Rush_AirTrailEffectAsset;                          // 0x14C0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Rush_GroundTrailEffectAsset;                       // 0x1558(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Rush_ImpactEffectAsset;                            // 0x15F0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Rush_HitEffectAsset;                               // 0x1688(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        Rush_PhysicsMaterialUpdateInterval;                // 0x1720(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1885[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLDamageParameterComponent*          Rush_DamageParam;                                  // 0x1728(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1886[0xA8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                Rush_TargetActor;                                  // 0x17D8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        Rush_HitHistory;                                   // 0x17E0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1887[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLBaseBossTrinMissileLevel>  Missile_Level;                                     // 0x1800(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          Missile_DamageParam;                               // 0x1810(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLLongRangeWeaponParameter*          Missile_BaseWeaponParam;                           // 0x1818(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          Missile_BaseDamageParam;                           // 0x1820(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1888[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        UniqueBossDropTargetValue;                         // 0x1850(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1889[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AbnormalState_BurnedMoveRate;                      // 0x1858(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalState_BurnedTurnRate;                      // 0x185C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalState_StunedMoveRate;                      // 0x1860(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalState_StunedTurnRate;                      // 0x1864(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalState_AcidedMoveRate;                      // 0x1868(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalState_AcidedTurnRate;                      // 0x186C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalState_FlashedMoveRate;                     // 0x1870(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalState_FlashedTurnRate;                     // 0x1874(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalState_JammedMoveRate;                      // 0x1878(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalState_JammedTurnRate;                      // 0x187C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBossCoreInfoHUDComponent*          TTLBossCoreInfoHUDComponent;                       // 0x1880(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_188B[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsTransInterpolation;                              // 0x18A0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_188C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TransInterpolateTime;                              // 0x18A4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ATTLWarningArea*>               WarningArea_List;                                  // 0x18A8(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class ATTLSplinePath*                        WarningArea_MoveAreaPath;                          // 0x18B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_188D[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseBossTrinCharacter* GetDefaultObj();

	void Rush_RequestCancel(bool InForce);
	void Rush_Request(int32 InLevel, class AActor* InTargetActor);
	void Rush_Impact(const struct FVector& InImpactLoc, const struct FRotator& InImpactRot, bool InHit);
	void Rush_End();
	void Rush_Departure();
	void PathMove_Request(int32 InLevel, float InMaxMoveTime, float InAfterWaitTime);
	void OnStatusDeadDelegate();
	void OnActorBeginOverlapDelegate(class AActor* OverlappedActor, class AActor* OtherActor);
	void MulticastNotifyEnemySpawn();
	void Missile_Request(int32 InLevel, float InNonconsiderationTime);
	void FreightTrain_RequestContainerExecute(int32 InMaxActorNum, int32 InGroupNo, int32 InTrainNo);
	void FreightTrain_MulticastRequestDetach();
	TArray<class ATTLBaseBossTrinContCharacter*> FreightTrain_GetList();
	void FreeMove_RequestTargetActorMove(int32 InLevel, float InTargetDistance, float InTargetAngle, float InMaxMoveTime, float InAfterWaitTime);
	void Damage_Request(float InFixTime, int32 InMaxActorNum, int32 InPhase);
	void Cannon_AddPawn(class ATTLBaseCannonPawn* PCannon);
	void Anger_Start();
	void Anger_Request(int32 InMaxActorNum, int32 InPhase);
	bool Anger_CheckEscape();
};

// 0x20 (0x4D8 - 0x4B8)
// Class DXM.TTLBaseBossTrinContAIController
class ATTLBaseBossTrinContAIController : public ATTLAIController
{
public:
	class ATTLBaseBossTrinContCharacter*         OwnerCharacter;                                    // 0x4B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTTLBaseBossTrinContAICtrlContainerGroupInfo> ContainerGroupInfoList;                            // 0x4C0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_188E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseBossTrinContAIController* GetDefaultObj();

};

// 0x40 (0x3A0 - 0x360)
// Class DXM.TTLBaseBossTrinContAnimInstance
class UTTLBaseBossTrinContAnimInstance : public UTTLAnimInstance
{
public:
	class ATTLBaseBossTrinContCharacter*         OwnerCharacter;                                    // 0x360(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_188F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          Wait_Montage;                                      // 0x370(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1890[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               Root_LookAtLocation;                               // 0x384(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1891[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBaseBossTrinContAnimInstance* GetDefaultObj();

	void Root_CalcTransformLocation(struct FVector* OutLocation);
};

// 0x2D0 (0xA90 - 0x7C0)
// Class DXM.TTLBaseBossTrinContCharacter
class ATTLBaseBossTrinContCharacter : public ATTLCharacter
{
public:
	class ATTLBaseBossTrinCharacter*             OwnerBoss;                                         // 0x7C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                SelfMesh;                                          // 0x7C8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBaseBossTrinContAnimInstance*      SelfAnimBP;                                        // 0x7D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCharacterMovementComponent*           SelfChrMove;                                       // 0x7D8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBaseBossTrinContMovementComp*      SelfMovement;                                      // 0x7E0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLEnemyPushCollideComponent*         SelfPushCollide;                                   // 0x7E8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCapsuleComponent*                     SelfCapsule;                                       // 0x7F0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBasicStatusComponent*              SelfStatus;                                        // 0x7F8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLAIActionBaseBossTrinContComp*      SelfAIAct;                                         // 0x800(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseBossTrinContAIController*      SelfAICtrl;                                        // 0x808(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TrainNo;                                           // 0x810(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1894[0xDC];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Wheel_FrontOffset;                                 // 0x8F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Wheel_BackOffset;                                  // 0x8F4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Connector_FrontOffset;                             // 0x8F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Connector_BackOffset;                              // 0x8FC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Connector_YawLimit;                                // 0x900(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1895[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLBaseBossTrinContContainerSetInfo> ContainerSet_InfoList;                             // 0x908(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Hover_SmokeEffectAsset;                            // 0x918(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Hover_SparkEffectAsset;                            // 0x9B0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_1896[0x35];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsTransInterpolation;                              // 0xA7D(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1897[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TransInterpolateTime;                              // 0xA80(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1898[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseBossTrinContCharacter* GetDefaultObj();

	void ContainerSet_AddContainer(class ATTLSpawnContainerBaseCharacter* PContainer);
	void ContainerSet_AddCannon(class ATTLBaseCannonPawn* PCannon);
};

// 0x10 (0x160 - 0x150)
// Class DXM.TTLBaseBossTrinContMovementComp
class UTTLBaseBossTrinContMovementComp : public UTTLEnemyMovementComponent
{
public:
	class ATTLBaseBossTrinContCharacter*         OwnerBoss;                                         // 0x150(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1899[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBaseBossTrinContMovementComp* GetDefaultObj();

};

// 0x10 (0x160 - 0x150)
// Class DXM.TTLBaseBossTrinMovementComponent
class UTTLBaseBossTrinMovementComponent : public UTTLEnemyMovementComponent
{
public:
	class ATTLBaseBossTrinCharacter*             OwnerBoss;                                         // 0x150(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_189A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBaseBossTrinMovementComponent* GetDefaultObj();

};

// 0x120 (0x5E0 - 0x4C0)
// Class DXM.TTLBaseBossTrinWeakActor
class ATTLBaseBossTrinWeakActor : public ATTLPawn
{
public:
	uint8                                        Pad_189E[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ETTLBaseBossTrinWeakActParts      SelfParts;                                         // 0x4F8(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_189F[0x3F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           Damage_HitEffectAsset;                             // 0x538(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_18A0[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseBossTrinWeakActor* GetDefaultObj();

	void State_Set(enum class ETTLBaseBossTrinWeakActState InState, float InTimer, bool InForce);
	void Damage_OnTakeAnyDamageDelegate(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void Damage_OnStatusDeadDelegate();
};

// 0x20 (0x380 - 0x360)
// Class DXM.TTLBaseBossTrinWeakAnimInstance
class UTTLBaseBossTrinWeakAnimInstance : public UTTLAnimInstance
{
public:
	class ATTLBaseBossTrinWeakActor*             OwnerActor;                                        // 0x360(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18A1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        State_TransitionTime;                              // 0x36C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18A2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        State_TransitionAlpha;                             // 0x374(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18A3[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBaseBossTrinWeakAnimInstance* GetDefaultObj();

};

// 0x10 (0x160 - 0x150)
// Class DXM.TTLBaseBossTrtsLaserMovementComp
class UTTLBaseBossTrtsLaserMovementComp : public UTTLEnemyMovementComponent
{
public:
	class ATTLENBossTrtsLaser01Pawn*             OwnerBoss;                                         // 0x150(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLAIActENBossTrtsLaser01Comp*        OwnerAIAct;                                        // 0x158(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLBaseBossTrtsLaserMovementComp* GetDefaultObj();

};

// 0x10 (0x160 - 0x150)
// Class DXM.TTLBaseBossTrtsMovementComponent
class UTTLBaseBossTrtsMovementComponent : public UTTLEnemyMovementComponent
{
public:
	class ATTLENBossTrts01Character*             OwnerBoss;                                         // 0x150(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLAIActionENBossTrts01Component*     OwnerAIAct;                                        // 0x158(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLBaseBossTrtsMovementComponent* GetDefaultObj();

};

// 0x0 (0x360 - 0x360)
// Class DXM.TTLBaseBossWeaponAnimInstance
class UTTLBaseBossWeaponAnimInstance : public UTTLAnimInstance
{
public:

	static class UClass* StaticClass();
	static class UTTLBaseBossWeaponAnimInstance* GetDefaultObj();

};

// 0x140 (0x4A0 - 0x360)
// Class DXM.TTLBaseBossWyveAnimationInstance
class UTTLBaseBossWyveAnimationInstance : public UTTLAnimInstance
{
public:
	uint8                                        Pad_18A9[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         AttackTrigger;                                     // 0x380(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18AA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAnimMontage*>                  ForwardMontage;                                    // 0x388(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                  BackMontage;                                       // 0x398(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                  LeftMontage;                                       // 0x3A8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                  RightMontage;                                      // 0x3B8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                  StepMontage;                                       // 0x3C8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                     UpAnimation;                                       // 0x3D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                     DownAnimation;                                     // 0x3E0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                     JumpStartAnimation;                                // 0x3E8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          JumpMontage;                                       // 0x3F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          BackJumpMontage;                                   // 0x3F8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                     JumpEndAnimation;                                  // 0x400(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          LightDamageMontage;                                // 0x408(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          FlashDamageMontage;                                // 0x410(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          StunMontage;                                       // 0x418(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                  ClawRightMontage;                                  // 0x420(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                  ClawLeftMontage;                                   // 0x430(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                  ClawComboMontage;                                  // 0x440(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                  SpinLaserMontage;                                  // 0x450(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UAnimMontage*                          FemtoDrainMontage;                                 // 0x460(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          BigLaserMontage;                                   // 0x468(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                  HowlingMontage;                                    // 0x470(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                  MissileMontage;                                    // 0x480(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UAnimMontage*                          PhaseMontage;                                      // 0x490(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18B0[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBaseBossWyveAnimationInstance* GetDefaultObj();

	void SetVfxTrigger(int32 Index);
	void SetPurgeTrigger(int32 Index);
	void SetGapTrigger(bool Sw);
	void SetBranchTrigger(int32 Index);
	void SetAttackTrigger(bool Sw);
	enum class ETTLBaseBossWyveAnimState GetState();
};

// 0x290 (0x5D0 - 0x340)
// Class DXM.TTLBaseBossWyveFloatParts
class ATTLBaseBossWyveFloatParts : public ATTLActor
{
public:
	uint8                                        Pad_18B3[0x1D8];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ShoulderMeshL;                                     // 0x518(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ShoulderMeshR;                                     // 0x528(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                FloatShoulderMeshL;                                // 0x538(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                FloatShoulderMeshR;                                // 0x548(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                FloatArmMeshL;                                     // 0x558(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                FloatArmMeshR;                                     // 0x568(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                Power;                                             // 0x578(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<float>                                DistanceMax;                                       // 0x588(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_18B4[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseBossWyveFloatParts* GetDefaultObj();

	void OnArmorAbnormalStatusStartDelegate(enum class ETTLEAbnormalStatusType StatType, class UTTLBadStatusVFXComponent* badStatusComp, bool IsHeal);
};

// 0x1140 (0x1600 - 0x4C0)
// Class DXM.TTLBaseBossWyvePawn
class ATTLBaseBossWyvePawn : public ATTLPawn
{
public:
	uint8                                        Pad_18C3[0x80];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLWyveVfxContainer*                  VfxContainer;                                      // 0x540(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_18C4[0x26C];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	uint32                                       ReplicateFlag;                                     // 0x7B4(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_18C5[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnPurgeArmor;                                      // 0x7C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnArmorAbnormal;                                   // 0x7D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnSpawnGauntlet;                                   // 0x7E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class UTTLBossCoreInfoHUDComponent*          BossCoreInfoHUD;                                   // 0x7F8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLBossWyveWeakPawn>      TailClass;                                         // 0x800(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLBossWyveWeakCoverPawn> TailCoverClass;                                    // 0x808(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLBossWyveWeakPawn>      ArmLClass;                                         // 0x810(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLBossWyveWeakPawn>      ArmRClass;                                         // 0x818(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLBossWyveWeakPawn>      HeadClass;                                         // 0x820(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLBaseBossWyveFloatParts> FloatPartsClass;                                   // 0x828(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLBigLaser>              BigLaserClass;                                     // 0x830(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLStandardMissile>       MissileClass;                                      // 0x838(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLBossWyveFemtoDrainPawn> DrainClass;                                        // 0x840(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLPostProcessZoneBase>   PostProcessClass;                                  // 0x848(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLCatchableActorBase>    GauntletLClass;                                    // 0x850(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLCatchableActorBase>    GauntletRClass;                                    // 0x858(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLBossWyveCorePawn>      CoreClass;                                         // 0x860(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RushDPName;                                        // 0x868(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          RushDamageParameter;                               // 0x870(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          SpinLaserDamageParameter;                          // 0x878(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFirearmInfo                       LeftShootInfo;                                     // 0x880(0x648)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFirearmInfo                       RightShootInfo;                                    // 0xEC8(0x648)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  HowlingDPName;                                     // 0x1510(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          HowlingDamageParameter;                            // 0x1518(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTTLWyveMoveData>              MoveData;                                          // 0x1520(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        MathScale;                                         // 0x1530(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartJumpSpeed;                                    // 0x1534(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartFallMotionHeight;                             // 0x1538(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AdsorptionDistance;                                // 0x153C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxHeight;                                         // 0x1540(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinHeight;                                         // 0x1544(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SafetyHeight;                                      // 0x1548(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               AreaCenterLocation;                                // 0x154C(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NormalMoveRotationDegree;                          // 0x1558(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveCheckSphereRadius;                             // 0x155C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveCheckSphereRadiusOffset;                       // 0x1560(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RollMax;                                           // 0x1564(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RestoreRollDegree;                                 // 0x1568(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RestoreRollRate;                                   // 0x156C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ModeChangeTime;                                    // 0x1570(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ModeChangeTargetHeight;                            // 0x1574(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ModeChangeTimeOut;                                 // 0x1578(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLWyveFlashParameter                UniqueFlashParam;                                  // 0x157C(0x10)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	float                                        PenaltyFlashTime;                                  // 0x158C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlashPenaltyTimeMax;                               // 0x1590(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BurningResistDecTime;                              // 0x1594(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BurningTimeMin;                                    // 0x1598(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StuningResistDecTime;                              // 0x159C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StuningTimeMin;                                    // 0x15A0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AcidResistDecTime;                                 // 0x15A4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AcidTimeMin;                                       // 0x15A8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlashResistDecTime;                                // 0x15AC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlashTimeMin;                                      // 0x15B0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OverHeatCoolingSpeed;                              // 0x15B4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OverHeatCoolingSpeedMax;                           // 0x15B8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WeakCoolDownTime;                                  // 0x15BC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OverHeatSpeedDownRate;                             // 0x15C0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18CB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  FinishEventName;                                   // 0x15C8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UTTLWyveVfxContainer>      VfxContaiherClass;                                 // 0x15D0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ATargetPoint*>                  JumpPointList;                                     // 0x15D8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FVector2D                             DebugWindowLocation;                               // 0x15E8(0x8)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         HitCollisionDrawSw;                                // 0x15F0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         MoveInfoDrawSw;                                    // 0x15F1(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         JumpInfoDrawSw;                                    // 0x15F2(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         DrawInfoSw;                                        // 0x15F3(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_18CC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLBossInfoDebugDraw*                 DrawInfo;                                          // 0x15F8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ATTLBaseBossWyvePawn* GetDefaultObj();

	void OnTakePointDamageDelegate(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& ShotFromDirection, class UDamageType* DamageType, class AActor* DamageCauser);
	void OnTakeAnyDamageDelegate(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void OnStatusQuitOverHeat_Delegate();
	void OnStatusDeadDelegate();
	void OnMissionFinished(enum class ETTLEMissionResult MissionResult);
	void OnMissionEventFinishedDelegate(class FName EventName, enum class ETTLEventFinishedType EventFinishedType);
};

// 0x8 (0x210 - 0x208)
// Class DXM.TTLBaseCampLogHUD
class UTTLBaseCampLogHUD : public UUserWidget
{
public:
	uint8                                        Pad_18D2[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBaseCampLogHUD* GetDefaultObj();

	void OnDeleteMessageLogItem(const struct FTTLMessageLogItem& MessageLogItem);
	void OnChangedInputDevice(enum class ETTLEInputDeviceType NewInputDeviceType);
	void OnAddMessageLogItem(const struct FTTLMessageLogItem& MessageLogItem);
	bool CheckLogVisibility();
	bool CheckKeyAssignVisibility();
	bool CheckHUDVisibility();
};

// 0x18 (0x110 - 0xF8)
// Class DXM.TTLBaseCampLogHUDComponent
class UTTLBaseCampLogHUDComponent : public UTTLActorComponent
{
public:
	TSubclassOf<class UUserWidget>               WidgetClass;                                       // 0xF8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           Widget;                                            // 0x100(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18D3[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBaseCampLogHUDComponent* GetDefaultObj();

	void SetEnableHUD();
};

// 0xF0 (0x720 - 0x630)
// Class DXM.TTLBasecampNotifyActor
class ATTLBasecampNotifyActor : public ATTLMenuSceneBase
{
public:
	class UUserWidget*                           BasecampNotifyWidget;                              // 0x630(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UUserWidget*>                   WidgetHomFourTxt00List;                            // 0x638(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_18D5[0x78];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                RankupAnimInName;                                  // 0x6C0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                RankupToElemReleaseAnimName;                       // 0x6D0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                RankupOutAnimName;                                 // 0x6E0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                ElemReleaseOutAnimName;                            // 0x6F0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        SimultaneousDisplayCount;                          // 0x700(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RakupSEPlayTimeThreshold;                          // 0x704(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CloseSEPlayWaitTimeThreshold;                      // 0x708(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18D7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AActor>                    CommonPopupClass;                                  // 0x710(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         TestA;                                             // 0x718(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         TestB;                                             // 0x719(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         TestDisconnectPenalty;                             // 0x71A(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         TestSendRankingError;                              // 0x71B(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18D8[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBasecampNotifyActor* GetDefaultObj();

	class ATTLRewardPopUp* SpawnRewardPopupBP();
	class ATTLCommonPopup* SpawnGetVoicePopupBP();
	void GetVoiceNotify_OnFinished();
};

// 0x50 (0x148 - 0xF8)
// Class DXM.TTLBaseCampNotifyHUDComponent
class UTTLBaseCampNotifyHUDComponent : public UTTLActorComponent
{
public:
	TSubclassOf<class UUserWidget>               ListHUDClass;                                      // 0xF8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>               ListItemClass;                                     // 0x100(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           ListHUD;                                           // 0x108(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTTLBaseCampWidgetStruct>      ListItemArray;                                     // 0x110(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	int32                                        MaxNum;                                            // 0x120(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ProcessedNum;                                      // 0x124(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FinishedNum;                                       // 0x128(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WaitTime;                                          // 0x12C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18DF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLMainMenuNotificationInfo>  NotifyInfoList;                                    // 0x138(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLBaseCampNotifyHUDComponent* GetDefaultObj();

	void StopComponent();
	void StopAnimation(class UUserWidget* Widget);
	void StartRemoveFromList();
	void SlideItem();
	void SetNextItemContent(class UUserWidget* Widget);
	void PlaySlideAnimation(class UUserWidget* Widget, int32 State);
	void PlayOutAnimation(class UUserWidget* Widget);
	void PlayInAnimation(class UUserWidget* Widget);
	void InitializeNotifyList();
	class UUserWidget* GetCurrentProcessWidget();
	class UUserWidget* GetCurrentFinishWidget();
	void FinishRemoveFromList();
	bool CheckSlideAnimation(class UUserWidget* Widget);
	bool CheckSlide();
	bool CheckOutAnimation(class UUserWidget* Widget);
	void AddToList();
};

// 0x10 (0x350 - 0x340)
// Class DXM.TTLBaseCampWeapon
class ATTLBaseCampWeapon : public ATTLActor
{
public:
	class USkeletalMeshComponent*                SkeletalMeshComponent;                             // 0x340(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18E0[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseCampWeapon* GetDefaultObj();

	void OnBaseCampMapLoadFinished();
};

// 0x28 (0x4E0 - 0x4B8)
// Class DXM.TTLBaseCannonAIController
class ATTLBaseCannonAIController : public ATTLAIController
{
public:
	bool                                         DefaultIsSelfThinking;                             // 0x4B8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18E2[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLBaseCannonPawn*                    SelfPawn;                                          // 0x4C0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLAIActionBaseCannonComponent*       SelfAI;                                            // 0x4C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLLongRangeWeaponParameter*          SelfWeapon;                                        // 0x4D0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18E3[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseCannonAIController* GetDefaultObj();

	bool IsExistTarget();
	void ForceWait();
	void ForceAttack();
};

// 0x20 (0x380 - 0x360)
// Class DXM.TTLBaseCannonAnimInstance
class UTTLBaseCannonAnimInstance : public UTTLAnimInstance
{
public:
	struct FVector                               LookAtLocation;                                    // 0x360(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LookAtAlpha;                                       // 0x36C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CoverAlpha;                                        // 0x370(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18E4[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBaseCannonAnimInstance* GetDefaultObj();

};

// 0x0 (0x4E0 - 0x4E0)
// Class DXM.TTLBaseCannonNoThAIController
class ATTLBaseCannonNoThAIController : public ATTLBaseCannonAIController
{
public:

	static class UClass* StaticClass();
	static class ATTLBaseCannonNoThAIController* GetDefaultObj();

};

// 0xA40 (0xF00 - 0x4C0)
// Class DXM.TTLBaseCannonPawn
class ATTLBaseCannonPawn : public ATTLPawn
{
public:
	uint8                                        BossCannonIndex;                                   // 0x4C0(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        ComponentType;                                     // 0x4C1(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18E9[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           BarrelSwirlingEffectResource;                      // 0x4C8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  HeadSocketName;                                    // 0x560(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BarrelSocketName;                                  // 0x568(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BarrelDirection;                                   // 0x570(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LookAtOffset;                                      // 0x57C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LookAtSpeed;                                       // 0x588(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PitchBase;                                         // 0x58C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             PitchRange;                                        // 0x590(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        YawRange;                                          // 0x598(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DeviationShootingRate;                             // 0x59C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DeviationShootingTargetSpeedLimit;                 // 0x5A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OuterDelayTime;                                    // 0x5A4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                LookAtTargetActor;                                 // 0x5A8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        BarrelSwirlingEffect;                              // 0x5B0(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FVector                               LookAtTargetLocation;                              // 0x5C8(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         BoneControl_IsEnable;                              // 0x5D4(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18EA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CoverSpeed;                                        // 0x5D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseCanCoverState             CoverState;                                        // 0x5DC(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseCanCoverState             CoverRequest;                                      // 0x5DD(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18EB[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFirearmInfo                       Shoot_Info;                                        // 0x5E0(0x648)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        RapidShootSpeed;                                   // 0xC28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18ED[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           NoticeLine_LineEffectAsset;                        // 0xC30(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           NoticeLine_TopEffectAsset;                         // 0xCC8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        NoticeLine_LineEffectPlayback;                     // 0xD60(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        NoticeLine_TopEffectPlayback;                      // 0xD78(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        NoticeLine_Time;                                   // 0xD90(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18EE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLDamageParameterComponent*          DamageParameter;                                   // 0xD98(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                SelfMesh;                                          // 0xDA0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBaseCannonAnimInstance*            SelfAnimInstance;                                  // 0xDA8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLCharacterInfoHUDComponent*         SelfInfoHUD;                                       // 0xDB0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLFirearmControlComponent*           SelfFirearmCtrl;                                   // 0xDB8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBasicStatusComponent*              SelfStatus;                                        // 0xDC0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18F0[0x131];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         ResistHeliCannon;                                  // 0xEF9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18F1[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseCannonPawn* GetDefaultObj();

	void Shoot(class AActor* TargetActor);
	void OnStatusBeOverriddenDelegate(class UTTLBasicStatusComponent* BasicStatus, struct FTTLEnemyParam& EnemyParam);
	void OnDestroyedDelegate(class AActor* Actor);
	void Initialize();
	bool CheckInsideShootRange(class AActor* TargetActor);
	bool CheckInsideShootAngleRange(class AActor* TargetActor);
};

// 0x10 (0x370 - 0x360)
// Class DXM.TTLBaseCarAnimInstance
class UTTLBaseCarAnimInstance : public UTTLAnimInstance
{
public:
	struct FVector                               Root_LookAtLocation;                               // 0x360(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Root_LookAtAlpha;                                  // 0x36C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLBaseCarAnimInstance* GetDefaultObj();

};

// 0x620 (0xDE0 - 0x7C0)
// Class DXM.TTLBaseCarCharacter
class ATTLBaseCarCharacter : public ATTLCharacter
{
public:
	class USkeletalMeshComponent*                SelfMesh;                                          // 0x7C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBaseCarAnimInstance*               SelfAnimInst;                                      // 0x7C8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLCharacterInfoHUDComponent*         SelfInfoHUD;                                       // 0x7D0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCapsuleComponent*                     SelfCapsuleCollide;                                // 0x7D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLSplineComponent*                   SelfSpline;                                        // 0x7E0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBasicStatusComponent*              SelfStatus;                                        // 0x7E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18FB[0xA4];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Move_PathResearchInterval;                         // 0x894(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Move_MaxSpeed;                                     // 0x898(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Move_AccelerateTime;                               // 0x89C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Move_TurnSpeed;                                    // 0x8A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18FC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           Move_MoveEffectResource;                           // 0x8A8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Move_StopEffectResource;                           // 0x940(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Move_LandingEffectResource;                        // 0x9D8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Move_HoverEffectResource;                          // 0xA70(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class FName>                          Move_HoverEffectAttachSocketNameList;              // 0xB08(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Move_MoveEffect;                                   // 0xB18(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FTTLFxPlayback>                Move_HoverEffect;                                  // 0xB30(0x10)(BlueprintVisible, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class AActor*                                Move_TargetActor;                                  // 0xB40(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLSplinePath*                        Move_TargetPath;                                   // 0xB48(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                Move_WaitActor;                                    // 0xB50(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18FE[0x80];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MicroFreeze_Time;                                  // 0xBD8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MicroFreeze_DecelerationRate;                      // 0xBDC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18FF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             Knockback_Low;                                     // 0xBE4(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             Knockback_Middle;                                  // 0xBEC(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             Knockback_High;                                    // 0xBF4(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1900[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Down_Time;                                         // 0xC14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1901[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  Death_PredictiveEffectAttachSocketName;            // 0xC20(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Death_PredictiveEffectAsset;                       // 0xC28(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLExplosionActor>        Death_ExplosionClass;                              // 0xCC0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Death_ExplodeStartTime;                            // 0xCC8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Death_ExplodeDamage;                               // 0xCCC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Death_ExplodeKnockOut;                             // 0xCD0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Death_ExplodeKnockBack;                            // 0xCD4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Death_ExplodeRadius;                               // 0xCD8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Death_ExplodeTime;                                 // 0xCDC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Death_ExplodeTmpRise;                              // 0xCE0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Death_ExplodeMinDamageScale;                       // 0xCE4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Death_MaxExplodeDamageRadius;                      // 0xCE8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Death_FriendlyFireEnable;                          // 0xCEC(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1903[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlayback                        Death_PredictiveEffect;                            // 0xCF0(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  Death_ExplosionParamName;                          // 0xD08(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1904[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AbnormalState_BurnedMoveRate;                      // 0xD24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalState_BurnedTurnRate;                      // 0xD28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalState_StunedMoveRate;                      // 0xD2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalState_StunedTurnRate;                      // 0xD30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalState_AcidedMoveRate;                      // 0xD34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalState_AcidedTurnRate;                      // 0xD38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalState_FlashedMoveRate;                     // 0xD3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalState_FlashedTurnRate;                     // 0xD40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalState_JammedMoveRate;                      // 0xD44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalState_JammedTurnRate;                      // 0xD48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1906[0x94];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseCarCharacter* GetDefaultObj();

	void OnDestroyedDelegate(class AActor* Actor);
	void Move_StartFalling();
	void Move_MultiplayStop(class AActor* TargetActor, float TargetDistance);
	void Move_MultiplayStartMoveToPath(class ATTLSplinePath* Path);
	void Move_MultiplayStartMoveToLocation(const struct FVector& TargetLocation, float Distance, bool IsInfinite, class AActor* TargetActor, float TargetDistance);
	void Move_MultiplayStartMoveToActor(class AActor* TargetActor, float Distance, bool IsInfinite);
	void Move_Landing(const struct FVector& Location, const struct FVector& Normal);
	void Initialize();
	void DamageReaction_OnTakeAnyDamageDelegate(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
};

// 0xB788 (0xBE00 - 0x678)
// Class DXM.TTLPlayerController
class ATTLPlayerController : public APlayerController
{
public:
	uint8                                        Pad_1A81[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnInputKeyboard;                                   // 0x690(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A82[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLMessageTalker*                     MessageTalker;                                     // 0x6B0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLMessageTalker>         MessageTalkerClass;                                // 0x6B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLPopUpBase>             ChatTalkerClass;                                   // 0x6C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLPopUpBase>             CanNotCommunicateOnlinePopUpClass;                 // 0x6C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEControlType                  BeforeControlTypeForChatTalkerPopUp;               // 0x6D0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A83[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnInputAction;                                     // 0x6D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnInputLongPressAction;                            // 0x6E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnInputRepeatAction;                               // 0x6F8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnInputAnalogAction;                               // 0x708(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPauseToDockMenu;                                 // 0x718(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPauseResetTraialfield;                           // 0x728(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPauseConfigChange;                               // 0x738(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPressedCaptureWeaponAction;                      // 0x748(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	struct FTimerHandle                          ChatKeyboardCloseHandle;                           // 0x758(0x8)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	enum class ETTLEControlType                  ControlType;                                       // 0x760(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A84[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLCharacter*                         OwnerCharacter;                                    // 0x768(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLArsenalMovementComponent*          ArsenalMovement;                                   // 0x770(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLArsenalCatchableActorMovement*     CatchableMovement;                                 // 0x778(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLChangeWeaponComponentBase*         ChangeWeaponBase;                                  // 0x780(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A85[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               DebugCameraOffset;                                 // 0x790(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A86[0xB4D4];                                  // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ATTLDebugMenuController>   DebugMenuClass;                                    // 0xBC70(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanProcessMove;                                    // 0xBC78(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanProcessLookUp;                                  // 0xBC79(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanProcessTurn;                                    // 0xBC7A(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         PressedAttackRight;                                // 0xBC7B(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         PressedCatch;                                      // 0xBC7C(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         PressedJump;                                       // 0xBC7D(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         PressedBoost;                                      // 0xBC7E(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsGetOffStartSpan;                                 // 0xBC7F(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APawn*                                 DebugMultiAiPawn;                                  // 0xBC80(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A87[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            TMPOuterSpawnTransform;                            // 0xBC90(0x30)(BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A88[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLCharacterCommon*                   MultiBaseCampArsenal;                              // 0xBCC8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEStatusType                   SelfStatusMulti;                                   // 0xBCD0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A89[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLGetOnOffCamera*                    GetOnOffCamera;                                    // 0xBCD8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A8A[0x2E];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         CanSetOuterGetoffCamera;                           // 0xBD0E(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A8B[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLCollectInput*                      CollectInput;                                      // 0xBD10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLReproduceInput*                    RepeatInput;                                       // 0xBD18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLInputReceiver*                     ReceiveInput;                                      // 0xBD20(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A8C[0x3C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsMiddleInputForLightningMovement;                 // 0xBD64(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A8D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TwiceAnalogInputCommon_EnabledDegree;              // 0xBD68(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TwiceAnalogInputCommon_EnabledTime;                // 0xBD6C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         TwiceAnalogInputCommon_IsEnabledDebugPrint;        // 0xBD70(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A8E[0x6B];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        MultiplayCurrentServerLevelState;                  // 0xBDDC(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A8F[0x1B];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLCommonPopup*                       NotCommunicatePopUp;                               // 0xBDF8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ATTLPlayerController* GetDefaultObj();

	void UpdateAssignmentsOptionSetting();
	void TTLEnableCheatsForRelease();
	bool TryInputArsenalReload(bool IsLeft);
	bool TryGetContinuousArsenalInfo(struct FTTLArsenalPartsInfoList* PartsInfo, struct FTTLArsenalPaintInfo* PaintInfo);
	void TractorBeam_StartCaptureWeapon(int32 Type);
	void TractorBeam_SetCanChangeWeapon(bool Enable);
	void TractorBeam_EndCaptureWeapon();
	void SwitchChatTalkerPopUp();
	void SwitchCanNotCommunicateOnlinePopUp(bool ControlCharacterControl);
	void StartMissionOnMyNpc();
	class ATTLCharacterCommon* SpawnMyNpc(class FName SelectNpcId);
	void ShowHUD();
	struct FTransform SetUpPlayerStartToMission();
	void SetTalkHudCustom(class AActor* TargetCharacter);
	void SetShootPressedForAuto(bool IsLeft, bool IsEnabled);
	void SetPlayerTransformStartMission(struct FVector& NewTransformLocation, float RotationZ, struct FVector& NewTransformScale);
	void SetPauseConfigFlag(enum class ETTLEPauseMenuRifleRangeConfig Config, enum class ETTLEPauseMenuRifleRangeOnOff Onoff);
	void SetPauseCanNotOpenFlag(bool IsNotOpen);
	void SetMultiBaseCampArsenalCharacter(class ATTLCharacterCommon* ArsenalChara);
	void SetInputAssignmentsOptionHold(enum class ETTLEActionType ActionType, enum class ETTLEInputType InputType);
	void SetInputAssignments(enum class ETTLEActionType ActionType, enum class ETTLEInputType InputType);
	void SetGetonCamera(class AActor* GetOnTarget);
	void SetGetoffCamera(float LerpTime);
	void SetEnableRepeatInput(bool IsEnable, bool IsRepeat, bool IsInitTransform, bool IsUseInitParameterAtFile, float WaitSpan);
	void SetEnableMenuControl(bool IsEnable);
	void SetEnableControlAll(bool IsEnable);
	void SetEnableControl(bool IsEnable);
	void SetEnableCollectInput(bool IsEnable);
	void SetEnableCharacterControl(bool IsEnable);
	void SetControlType(enum class ETTLEControlType NewControlType);
	enum class ETTLEStatusType ServerGetSpawnMultiplayStatus(bool FromFriendList);
	void RunOnServerTB_StartStealWeapon(class ATTLCharacterCommon* PChara, class AActor* TractorOwner, int32 Type);
	void RunOnServerTB_EndStealWeapon(class ATTLCharacterCommon* PChara);
	void RunOnServerTB_CancelStealWeapon(class ATTLCharacterCommon* PChara, bool ExecCancelSteal);
	void RunOnServerSyncStatus(class ATTLCharacterCommon* SrcCharacter, int8 PressWeaponFlag, int8 EnableWeaponFlag, int32 Hp);
	void RunOnServerSyncBulletRemain(class ATTLCharacterCommon* SrcCharacter, enum class ETTLEPartMenuIndex WeaponIndex, class FName& WeaponID, int32 NewBulletRemain);
	void RunOnServerSupportWeaponInputState(class ATTLCharacterCommon* SrcCharacter, int8 State);
	void RunOnServerStartTurnMovement(class ATTLCharacterCommon* SrcCharacter, const struct FVector& TurnDirection, float StopDuration);
	void RunOnServerStartSpinShoot(class ATTLCharacterCommon* SrcCharacter);
	void RunOnServerStartRespawn(class ATTLCharacterCommon* RespawnExecuter, class AActor* TargetToRespawn);
	void RunOnServerStartReload(class ATTLCharacterCommon* SrcCharacter, bool IsLeft, int16 BulletRemain);
	void RunOnServerStartJumpCharge(class ATTLCharacterCommon* SrcCharacter);
	void RunOnServerStartJump(class ATTLCharacterCommon* SrcCharacter, bool EnableBoost);
	void RunOnServerStartDamageReaction(class ATTLCharacterCommon* SrcCharacter, const struct FVector& DamageDirection, float KnockBack, float KnockOut, bool IsCatch, float Mass, bool IgnoreMass, bool ForceFallDown, bool IsSuccessShield);
	void RunOnServerShoulderFunnelChangeState(class ATTLCharacterCommon* SrcCharacter, int8 State, int8 FunnelIndex);
	void RunOnServerShoulderFunnelChangeHateTarget_Funnel(class ATTLCharacterCommon* SrcCharacter, class ATTLCharacterCommon* HateInstigator, int8 HateFunnelIndex, int8 FunnelIndex);
	void RunOnServerShoulderFunnelChangeHateTarget(class ATTLCharacterCommon* SrcCharacter, class AActor* HateTarget, int8 FunnelIndex);
	void RunOnServerSetWeaponSwitchEnabled(class ATTLCharacterCommon* SrcCharacter, int8 PressedFlag);
	void RunOnServerSetWeaponPressed(class ATTLCharacterCommon* SrcCharacter, int8 PressedFlag);
	void RunOnServerSetViewTarget(class AActor* TargetActor);
	void RunOnServerSetPrizeAmountVariableValue(uint8 MultiPlayerStateIndex, int32 VariableValue);
	void RunOnServerSetPrizeAmountOriginalValue(uint8 MultiPlayerStateIndex, int32 OriginalValue);
	void RunOnServerSetPartnerPrincipalId(uint64 PlayerPrincipalId);
	void RunOnServerSetOnlinePlayerInfo(uint8 MultiPlayerStateIndex, class FName& TitleID, class FName& EmblemID, int32 PrizeAmount);
	void RunOnServerSetLevelState(uint8 NewState);
	void RunOnServerSetGamePlayerInfo(uint8 MultiPlayerStateIndex, const class FString& GamePlayerName, const class FString& ArsenalName, class FName& TitleID, class FName& EmblemID, int32 PrizeAmount, uint8 DisconnectCount, bool CanCommunicate);
	void RunOnServerSetDisconnectionValue(uint8 MultiPlayerStateIndex, bool IsSync, int32 Value);
	void RunOnServerSetCommunicateOnline(uint8 MultiPlayerStateIndex, bool CanCommunicate);
	void RunOnServerSetArsenalName(uint8 MultiPlayerStateIndex, const class FString& ArsenalName);
	void RunOnServerSetActiveShield(class ATTLCharacterCommon* SrcCharacter, int8 Index, int8 NextActiveCount, bool IsBreak);
	void RunOnServerSendPlayLog(struct FTTLOtherPlayerLogInfo& LogData, uint8 RequestPlayerIndex);
	void RunOnServerSendInventoryData(const struct FTTLSurvivalMissionPartsInventoryPacket& InventoryPacket);
	void RunOnServerRespawnFinish(class ATTLCharacterCommon* RespawnExecuter, class AActor* TargetToRespawn);
	void RunOnServerRespawnAnimationFinish(class ATTLCharacterCommon* RespawnedCharacter);
	void RunOnServerRequestPlayLog(uint8 RequestPlayerIndex, uint8 TargetPlayerIndex);
	void RunOnServerRequestCoopRoomSettingUpdate();
	void RunOnServerRequestBattleRoomSettingUpdate();
	void RunOnServerRecoverSunkSurvival(class ATTLCharacterCommon* DeadActor, const struct FVector& RecoverPosition);
	void RunOnServerPvPVictoryEvent(enum class ETTLEMissionResult MissionResult, class FName EventID, int32 Player1Id, int32 Player2Id);
	void RunOnServerPvPTimeUpResult(const struct FTTLMissionPvPTimeUpResult& TimeUpResult);
	void RunOnServerPvPBattleReadyFinished();
	void RunOnServerProcessEjectStart(class ATTLCharacterCommon* SrcCharacter);
	void RunOnServerPostLogMessage(struct FTTLMessageLogPacket& MessageLogPacket);
	void RunOnServerPostChatMessage(const class FString& UserName, const class FString& Message, const class FString& PresetMessageID, const class FString& SoundPath, uint8 SendPlayerIndex);
	void RunOnServerPlayOuterEmote(int8 EmoteIndex, class FName& EmoteID);
	void RunOnServerPlayFailCatch(bool IsLeft);
	void RunOnServerPlayerInteract(enum class ETTLEInteractType InteractType);
	void RunOnServerOutOfFemtoEventForChargeLaser(class ATTLCharacterCommon* SrcCharacter, uint8 SlotType);
	void RunOnServerOuterSpecialAttack(class ATTLCharacterCommon* SrcCharacter, const struct FVector& SpawnPosition, const struct FVector& SpawnDirection);
	void RunOnServerOuterExplosion(class ATTLCharacterCommon* SrcCharacter, bool StartExplosion);
	void RunOnServerOnFemtoLevelChange(class ATTLCharacterCommon* SrcCharacter, int8 NewLevel);
	void RunOnServerNotifyWeaponShieldDamage(class ATTLCharacterCommon* SrcCharacter, enum class ETTLWeaponSlot Slot, float FinalDamage);
	void RunOnServerNotifyResetSkillOnly(TArray<class FName>& SkillList);
	void RunOnServerNotifyResetOuterPartsOnly(enum class ETTLEHumanGenderType Gender, struct FTTLHumanCustomPartsInfo& HumanCustomInfo);
	void RunOnServerNotifyResetOuterParts(enum class ETTLEHumanGenderType Gender, struct FTTLHumanCustomPartsInfo& HumanCustomInfo, TArray<class FName>& SkillList);
	void RunOnServerNotifyResetArsenalPartsInBaseCamp(struct FTTLPlayerAssembleInfo& AssembleInfo);
	void RunOnServerNotifyFemtoShieldDamage(class ATTLCharacterCommon* SrcCharacter, float FinalDamage);
	void RunOnServerNotifyDamageAndReaction(class ATTLCharacterCommon* SrcCharacter, float FinalDamage, const struct FVector& DamageCauserPos, class AActor* DamageCauserOwner, float KnockBack, float KnockOut, const struct FVector& HitDirection, enum class ETTLCloseRangeWeaponDamageReactionType ReactionType, bool ForceKnockOut);
	void RunOnServerNotifyDamage(class ATTLCharacterCommon* SrcCharacter, float FinalDamage, const struct FVector& DamageCauserPos, class AActor* DamageCauserOwner, enum class ETTLCloseRangeWeaponDamageReactionType ReactionType);
	void RunOnServerLeaveTeam2on2Room();
	void RunOnServerInputValue(float ForwardValue, float RightValue);
	void RunOnServerGoToMissionFromBaseCamp(class FName LevelName);
	void RunOnServerGetNewWeapon(class ATTLCharacterCommon* SrcCharacter, struct FTTLAssemblePartsInfoRow& PartsInfo, uint8 SlotIndex);
	void RunOnServerForceSetMineState(class ATTLCharacterCommon* SrcCharacter, uint8 bulletID, uint8 MineState);
	void RunOnServerExecuteAttack(class ATTLCharacterCommon* SrcCharacter, bool IsLeft);
	void RunOnServerExecThrowWeapon(class ATTLCharacterCommon* TargetArsenal, bool IsLeft, const struct FVector_NetQuantize& TargetPos, const struct FVector& Direction);
	void RunOnServerExecThrowSupport(class ATTLCharacterCommon* TargetArsenal, bool IsLeft, const struct FVector_NetQuantize& TargetPos, const struct FVector& Direction, enum class ETTLThrowType ThrowType);
	void RunOnServerExecCancelAim(class ATTLCharacterCommon* TargetArsenal);
	void RunOnServerEndOuterThrow(class ATTLCharacterCommon* TargetArsenal, bool IsForceCancel);
	void RunOnServerEndOuterQuickMove(class UTTLArsenalMovementComponent* MovementComp);
	void RunOnServerDetachMissile(class ATTLCharacterCommon* SrcCharacter, uint8 PotNumber, struct FTransform& CurrentTransform, struct FVector& OwnerVelocity, float SpeedRandRate, struct FVector& ImpactRandOffset, float CurrentSpeed);
	void RunOnServerDebugChangePlayerToAi();
	void RunOnServerDamageStateLoopToEnd(class ATTLCharacterCommon* SrcCharacter, enum class ETTLDamageState EndState);
	void RunOnServerCrushCaptureWeapon(class ATTLCharacterCommon* TargetArsenal, uint8 AttackType);
	void RunOnServerCreateMissile(class ATTLCharacterCommon* SrcCharacter, struct FTransform& Transform, class AActor* Target, struct FVector& OverrideVelocity, float SpeedRandRate);
	void RunOnServerCreateManyMissiles(class ATTLCharacterCommon* SrcCharacter, TArray<struct FTransform>& SpawnTransformList, struct FVector& OwnerVelocity, TArray<float>& SpeedRandRateList, TArray<class AActor*>& TargetList, TArray<struct FVector>& ImpactRandOffsetList);
	void RunOnServerCreateBulletWithID(class ATTLCharacterCommon* SrcCharacter, uint8 SlotType, struct FTransform& Transform, TSubclassOf<class ATTLProjectileBase> BulletClass, struct FVector& bulletDirection, uint8 bulletID);
	void RunOnServerChangePlayerStatus(enum class ETTLEStatusType NewStatus);
	void RunOnServerChangePartsOnPickUp(class ATTLCharacterCommon* SrcCharacter, const struct FTTLArsenalPartsInfo& PartsInfo, const struct FTTLArsenalPartsPaintInfo& PaintInfo, enum class ETTLInventoryCategory InventoryCategory);
	void RunOnServerChangeMultiplay2vs2ManagerState(uint64 PlayerPrincipalId, enum class ETTLMultiplay2vs2State ChangeState);
	void RunOnServerCancelRespawn(class ATTLCharacterCommon* SrcCharacter, class AActor* TargetCharacter, bool ForceCancel);
	void RunOnServerBossDamageNotice(class AActor* DamagedActor, float Damage);
	void RunOnServerArsenalCharacterStartGetOff(class ATTLCharacterCommon* Arsenal);
	void RunOnServerApplySurvivalMissionStartPacketData(struct FTTLSurvivalMissionInitializePacketData& PacketInfo);
	void RunOnServerActorDeathNotExplode(class AActor* DeadActor, class AActor* DamageCauserOwner, class APlayerState* InstigatedState, bool OutOfArea, bool SelfExplosion);
	void RunOnServerActorDeathInWater(class ATTLCharacterCommon* DeadActor);
	void RunOnServerActorDeathAndDestoryNotExplode(class AActor* DeadActor, class AActor* DamageCauserOwner, class APlayerState* InstigatedState, bool SelfExplosion);
	void RunOnServerActorDeathAndDestory(class AActor* DeadActor, class AActor* DamageCauserOwner, class APlayerState* InstigatedState, bool SelfExplosion);
	void RunOnServerActorDeath(class AActor* DeadActor, class AActor* DamageCauserOwner, class APlayerState* InstigatedState, bool OutOfArea, bool SelfExplosion);
	void RunOnClientTB_StartStealWeapon(class ATTLCharacterCommon* PChara, class AActor* TractorOwner, int32 Type);
	void RunOnClientTB_EndStealWeapon(class ATTLCharacterCommon* PChara);
	void RunOnClientTB_CancelStealWeapon(class ATTLCharacterCommon* PChara, bool ExecCancelSteal);
	void RunOnClientSyncBulletRemain(class ATTLCharacterCommon* SrcCharacter, enum class ETTLEPartMenuIndex WeaponIndex, class FName& WeaponID, int32 NewBulletRemain);
	void RunOnClientSupportWeaponInputState(class ATTLCharacterCommon* SrcCharacter, int8 State);
	void RunOnClientSuccessDuelRequest(class APlayerState* RequestCharacter, class APlayerState* NominateCharacter);
	void RunOnClientStartTurnMovement(class ATTLCharacterCommon* SrcCharacter, const struct FVector& TurnDirection, float StopDuration);
	void RunOnClientStartSpinShoot(class ATTLCharacterCommon* SrcCharacter);
	void RunOnClientStartRespawn(class ATTLCharacterCommon* SrcCharacter, class AActor* TargetCharacter);
	void RunOnClientStartReload(class ATTLCharacterCommon* SrcCharacter, bool IsLeft, int16 BulletRemain);
	void RunOnClientStartJumpCharge(class ATTLCharacterCommon* SrcCharacter);
	void RunOnClientStartJump(class ATTLCharacterCommon* SrcCharacter, bool EnableBoost);
	void RunOnClientStartDuelRound();
	void RunOnClientStartDuel(class ATTLCharacter* P1, class ATTLCharacter* P2, class ATTLCharacter* P3, class ATTLCharacter* P4, class ATTLCharacter* M1, class ATTLCharacter* M2, class ATTLCharacter* M3, class ATTLCharacter* M4);
	void RunOnClientStartDamageReaction(class ATTLCharacterCommon* SrcCharacter, const struct FVector& DamageDirection, float KnockBack, float KnockOut, bool IsCatch, float Mass, bool IgnoreMass, bool ForceFallDown, bool IsSuccessShield);
	void RunOnClientShoulderFunnelChangeState(class ATTLCharacterCommon* SrcCharacter, int8 State, int8 FunnelIndex);
	void RunOnClientShoulderFunnelChangeHateTarget_Funnel(class ATTLCharacterCommon* SrcCharacter, class ATTLCharacterCommon* HateInstigator, int8 HateFunnelIndex, int8 FunnelIndex);
	void RunOnClientShoulderFunnelChangeHateTarget(class ATTLCharacterCommon* SrcCharacter, class AActor* HateTarget, int8 FunnelIndex);
	void RunOnClientSetPrizeAmountVariableValue(uint8 MultiPlayerStateIndex, int32 VariableValue);
	void RunOnClientSetPrizeAmountOriginalValue(uint8 MultiPlayerStateIndex, int32 OriginalValue);
	void RunOnClientSetPartnerPrincipalIdSteamExt(uint64 PlayerPrincipalId, const class FString& JoinLobbyId);
	void RunOnClientSetPartnerPrincipalId(uint64 PlayerPrincipalId);
	void RunOnClientSetOnlinePlayerInfo(uint8 MultiPlayerStateIndex, class FName& TitleID, class FName& EmblemID, int32 PrizeAmount);
	void RunOnClientSetMapChipLevelList(TArray<struct FTTLSurvivalDungeonMapLevelInfo>& MapChipLevelList);
	void RunOnClientSetLeavePrincipalId(uint64 PlayerPrincipalId);
	void RunOnClientSetJoinClientLobbyId(const class FString& JoinLobbyId);
	void RunOnClientSetGamePlayerInfo(uint8 MultiPlayerStateIndex, const class FString& GamePlayerName, const class FString& ArsenalName, class FName& TitleID, class FName& EmblemID, int32 PrizeAmount, uint8 DisconnectCount, bool CanCommunicate);
	void RunOnClientSetDisconnectionValue(uint8 MultiPlayerStateIndex, bool IsSync, int32 Value);
	void RunOnClientSetCommunicateOnline(uint8 MultiPlayerStateIndex, bool CanCommunicate);
	void RunOnClientSetArsenalName(uint8 MultiPlayerStateIndex, const class FString& ArsenalName);
	void RunOnClientSetActiveShield(class ATTLCharacterCommon* SrcCharacter, int8 Index, int8 NextActiveCount, bool IsBreak);
	void RunOnClientSendPlayLog(struct FTTLOtherPlayerLogInfo& LogData, uint8 RequestPlayerIndex);
	void RunOnClientSendInventoryData(const struct FTTLSurvivalMissionPartsInventoryPacket& InventoryPacket);
	void RunOnClientSendAllPlayerInfo(TArray<struct FTTLMultiplayGameSendInfo>& AllPlayerInfo);
	void RunOnClientRespawnFinish(class ATTLCharacterCommon* RespawnExecuter, class AActor* TargetToRespawn);
	void RunOnClientRespawnAnimationFinish(class ATTLCharacterCommon* RespawnedCharacter);
	void RunOnClientRequestPlayLog(uint8 RequestPlayerIndex, uint8 TargetPlayerIndex);
	void RunOnClientRequestDuel(class APlayerState* RequestCharacter, class APlayerState* NominateCharacter);
	void RunOnClientRecoverSunkSurvival(class ATTLCharacterCommon* DeadActor, const struct FVector& RecoverPosition);
	void RunOnClientPvPVictoryEvent(enum class ETTLEMissionResult MissionResult);
	void RunOnClientPvPTimeUpResult();
	void RunOnClientPvPBattleStart();
	void RunOnClientProcessEjectStart(class ATTLCharacterCommon* MainArsenal, class ATTLPlayerState* LinkPlayerState);
	void RunOnClientPostLogMessage(struct FTTLMessageLogPacket& MessageLogPacket);
	void RunOnClientPostChatMessage(bool IsLocalPlayer, const class FString& UserName, const class FString& Message, const class FString& PresetMessageID, const class FString& SoundPath, uint8 SendPlayerIndex);
	void RunOnClientPlayerInteract();
	void RunOnClientOutOfFemtoEventForChargeLaser(class ATTLCharacterCommon* SrcCharacter, uint8 SlotType);
	void RunOnClientOuterSpecialAttack(class ATTLCharacterCommon* SrcCharacter, const struct FVector& SpawnPosition, const struct FVector& SpawnDirection);
	void RunOnClientOuterExplosion(class ATTLCharacterCommon* SrcCharacter, bool StartExplosion);
	void RunOnClientOnPvPMissionFinished(enum class ETTLEMissionResult MissionResult, float HpRate1, float HpRate2, float HpRate3, float HpRate4, bool IsArsenalHp1, bool IsArsenalHp2, bool IsArsenalHp3, bool IsArsenalHp4, float MissionStartTime, float MissionEndTime);
	void RunOnClientOnMissionVictoryScreenStarted(enum class ETTLEMissionResult MissionResult, class FName EventID, int32 Player1Id, int32 Player2Id);
	void RunOnClientOnMissionFinished(enum class ETTLEMissionResult MissionResult, float MissionStartTime, float MissionEndTime);
	void RunOnClientOnFemtoLevelChange(class ATTLCharacterCommon* SrcCharacter, int8 NewLevel);
	void RunOnClientNotifyInfo2on2CancelReady();
	void RunOnClientNotifyInfo(enum class ETTLOnlineNoticeHUD_Type NotifyType);
	void RunOnClientNotifyCommunicationVPReducedMessage(bool IsMidium);
	void RunOnClientNetworkErrorByTeam2on2Room();
	void RunOnClientGetNewWeapon(class ATTLCharacterCommon* SrcCharacter, struct FTTLAssemblePartsInfoRow& PartsInfo, uint8 SlotIndex);
	void RunOnClientForceSetMineState(class ATTLCharacterCommon* SrcCharacter, uint8 bulletID, uint8 MineState);
	void RunOnClientExecuteAttack(class ATTLCharacterCommon* SrcCharacter, bool IsLeft);
	void RunOnClientExecThrowWeapon(class ATTLCharacterCommon* TargetArsenal, bool IsLeft, const struct FVector_NetQuantize& TargetPos, const struct FVector& Direction);
	void RunOnClientExecThrowSupport(class ATTLCharacterCommon* TargetArsenal, bool IsLeft, const struct FVector_NetQuantize& TargetPos, const struct FVector& Direction, enum class ETTLThrowType ThrowType);
	void RunOnClientExecCancelAim(class ATTLCharacterCommon* TargetArsenal);
	void RunOnClientEndOuterThrow(class ATTLCharacterCommon* TargetArsenal, bool IsForceCancel);
	void RunOnClientEndDuel(TArray<struct FTTLRateAndPrincipalID>& RateAndPrincipalIDArray);
	void RunOnClientDetachMissile(class ATTLCharacterCommon* SrcCharacter, uint8 PotNumber, struct FTransform& CurrentTransform, struct FVector& OwnerVelocity, float SpeedRandRate, struct FVector& ImpactRandOffset, float CurrentSpeed);
	void RunOnClientDebugChangePlayerToAi();
	void RunOnClientDamageStateLoopToEnd(class ATTLCharacterCommon* SrcCharacter, enum class ETTLDamageState EndState);
	void RunOnClientCrushCaptureWeapon(class ATTLCharacterCommon* TargetArsenal, uint8 AttackType);
	void RunOnClientCreateMissile(class ATTLCharacterCommon* SrcCharacter, struct FTransform& Transform, class AActor* Target, struct FVector& OverrideVelocity, float SpeedRandRate);
	void RunOnClientCreateManyMissiles(class ATTLCharacterCommon* SrcCharacter, TArray<struct FTransform>& SpawnTransformList, struct FVector& OwnerVelocity, TArray<float>& SpeedRandRateList, TArray<class AActor*>& TargetList, TArray<struct FVector>& ImpactRandOffsetList);
	void RunOnClientCreateBulletWithID(class ATTLCharacterCommon* SrcCharacter, uint8 SlotType, struct FTransform& Transform, TSubclassOf<class ATTLProjectileBase> BulletClass, struct FVector& bulletDirection, uint8 bulletID);
	void RunOnClientChangeRoomSettingsMissionID(int32 MissionIndex);
	void RunOnClientChangePlayerStatus(class ATTLCharacterCommon* ChangeChara, enum class ETTLEStatusType NewStatus);
	void RunOnClientChangePartsOnPickUp(class ATTLCharacterCommon* SrcCharacter, const struct FTTLArsenalPartsInfo& PartsInfo, const struct FTTLArsenalPartsPaintInfo& PaintInfo, enum class ETTLInventoryCategory InventoryCategory);
	void RunOnClientChangeMultiplay2vs2ManagerState(enum class ETTLMultiplay2vs2State ChangeState);
	void RunOnClientChangeCoopRoomSetting(int32 MissionID, enum class ETTLSessionSettingTarget Target, enum class ETTLSessionSettingComment Comment);
	void RunOnClientChangeBattleRoomSetting(int32 MissionID, enum class ETTLSessionSettingTarget Target, enum class ETTLSessionSettingTimeLimit TimeLimit, int32 Regulation, enum class ETTLSessionSettingComment Comment);
	void RunOnClientCancelRespawnStart(class ATTLCharacterCommon* RespawnExecuter);
	void RunOnClientCancelRespawn(class ATTLCharacterCommon* SrcCharacter, class AActor* TargetCharacter, bool ForceCancel);
	void RunOnClientArsenalCharacterStartGetOff(class ATTLCharacterCommon* Arsenal);
	void RunOnClientApplySurvivalMissionStartPacketData(TArray<struct FTTLSurvivalMissionInitializePacketData>& PacketInfo);
	void RunOnClientActorDeathNotExplode(class AActor* DeadActor, class AActor* DamageCauserOwner, class APlayerState* InstigatedState, bool OutOfArea, bool SelfExplosion);
	void RunOnClientActorDeathInWater(class ATTLCharacterCommon* DeadActor);
	void RunOnClientActorDeath(class AActor* DeadActor, class AActor* DamageCauserOwner, class APlayerState* InstigatedState, bool OutOfArea, bool SelfExplosion);
	void ResetOnStartBaseCampInSession();
	void RefreshRader(class AActor* TargetActor);
	void PostToOuterMessage(class APawn* OuterPawn);
	void PostToArsenalMessage(class APawn* ArsenalPawn);
	void PostStealArsenalMessage(class AActor* InstigatorActor, class AActor* TargetActor);
	void PostStartDuelMessage(class AActor* RequestActor, class AActor* NominatedActor);
	bool PostSelfDeadArsenalOrOuterMessage(class AActor* ArsenalOrOuter);
	void PostRewardMessage(int32 Expense);
	void PostRespawnMessage(class AActor* InstigatorActor);
	void PostRequestDuelMessage(class AActor* RequestActor, class AActor* NominatedActor);
	void PostPickUpPartsMessage(class AActor* InstigatorActor, class FName PartsID, enum class ETTLPartsType PartsType);
	void PostLogMessage(enum class ETTLMessageLogItemType MessageLogItemType, const struct FTTLPostLogMessageArgument& ArgumentStruct);
	void PostLeavePlayerOnMissionMessage(const class FString& CharacterName, bool IsSendSelfOnly, bool IsAlly);
	void PostEscapeNpcMessage(class AActor* TargetActor);
	void PostEscapeEnemyMessage(class AActor* TargetActor);
	void PostEquipPickUpPartsMessage(class AActor* InstigatorActor, class FName PartsID, enum class ETTLPartsType PartsType);
	void PostEncountMessage(class AActor* TargetActor);
	void PostEjectMessage(class AActor* InstigatorActor);
	bool PostDefeatEnemyMessage(class AActor* InstigatorActor, class AActor* TargetActor);
	void PostDeadArsenalOrOuterMessage(class AActor* ArsenalOrOuter);
	void PauseEventBind();
	void OuterRollingCommonProcess(bool IsBladeAttack);
	void OuterEjectEndBP();
	bool OpenPauseMenu(bool IsPressed);
	void OnUIToBaseCamp();
	void OnStartArsenalGetOffFromCharaBP();
	void OnServerDebugChangePlayerToAi();
	void OnOpenedCanNotCommunicateOnlinePopUp();
	void OnMissionStarted();
	void OnMissionRetired();
	void OnMissionPreFinished(bool IsEnable);
	void OnMissionFinished(enum class ETTLEMissionResult MissionResult);
	void OnMissingMainArsenalBP();
	void OnInputLongPressActionForSkipExtensionTime(enum class ETTLEActionType ActionType, float Duration);
	void OnInputActionForChatTalkerPopUp(enum class ETTLEActionType KeyType, bool IsPressed);
	void OnIceSceneToBaseCamp();
	void OnFinishedDirectChat();
	void OnClosedInlindKeyboard();
	void OnClosedCanNotCommunicateOnlinePopUp();
	void OnClientDebugChangePlayerToAi();
	void OnChatKeyboardCloseDelayTimer();
	void OnBaseCampToUI(enum class ETTLEInteractType ConsoleType);
	void OnBaseCampToMultiCamp();
	void OnBaseCampToIceScene();
	void OnBaseCampStart();
	void OnArsenalGetOnComplete2(class ATTLCharacterCommon* TargetArsenal);
	void OnArsenalGetOffSetActionAfterCameraChange();
	void OnArsenalGetOffFromOuterBP();
	void OnArsenalGetOffAfterCameraChange();
	void NotifyResetOuterPartsInBaseCamp(enum class ETTLEHumanGenderType Gender, struct FTTLHumanCustomPartsInfo& HumanCustomInfo, TArray<class FName>& SkillList, bool ChangeCustom, bool ChangeSkill);
	void NotifyResetArsenalPartsInBaseCamp(struct FTTLPlayerAssembleInfo& AssembleInfo);
	bool NeedEjectForward();
	void MoveRaderInfos(class AActor* MoveFromActor, class AActor* MoveToActor);
	bool IsValidObjects();
	bool IsPlayerStartExist4();
	bool IsInMissionPlay();
	bool IsInMirageAction();
	bool IsHandWeaponAutoMode(bool IsLeft);
	bool IsControllableMovement();
	bool IsControllableMenuAction();
	bool IsControllableHandAttackAction(bool IsLeft);
	bool IsControllableEjectAction();
	bool IsControllableCriticalAction();
	bool IsControllableCamera();
	bool IsControlArsenal();
	bool IsAutoPlayMode();
	void InputTwice_MoveInputEnabled(bool IsInputEnabled);
	void InputTwice_CameraInputEnabled(bool IsInputEnabled);
	void InputSpectatorChangeR(bool IsPressed);
	void InputSpectatorChangeL(bool IsPressed);
	void InputRepeatMenuUp(int32 Count);
	void InputRepeatMenuRight(int32 Count);
	void InputRepeatMenuR1(int32 Count);
	void InputRepeatMenuLeft(int32 Count);
	void InputRepeatMenuL1(int32 Count);
	void InputRepeatMenuDown(int32 Count);
	void InputRepeatMenuAnalogRUp(int32 Count);
	void InputRepeatMenuAnalogRRight(int32 Count);
	void InputRepeatMenuAnalogRLeft(int32 Count);
	void InputRepeatMenuAnalogRDown(int32 Count);
	void InputRepeatMenuAnalogLUp(int32 Count);
	void InputRepeatMenuAnalogLRight(int32 Count);
	void InputRepeatMenuAnalogLLeft(int32 Count);
	void InputRepeatMenuAnalogLDown(int32 Count);
	void InputRepeatEventPadUp(int32 Count);
	void InputRepeatEventPadRight(int32 Count);
	void InputRepeatEventPadLeft(int32 Count);
	void InputRepeatEventPadDown(int32 Count);
	void InputRepeatEventB(int32 Count);
	void InputRepeatEventAnalogLUp(int32 Count);
	void InputRepeatEventAnalogLRight(int32 Count);
	void InputRepeatEventAnalogLLeft(int32 Count);
	void InputRepeatEventAnalogLDown(int32 Count);
	void InputPlayerAnalogMoveRight(float AxisValue);
	void InputPlayerAnalogMoveForward(float AxisValue);
	void InputPlayerAnalogEquipRight(float AxisValue);
	void InputPlayerAnalogEquipForward(float AxisValue);
	void InputPlayerAnalogCameraTurn(float AxisValue);
	void InputPlayerAnalogCameraLookUp(float AxisValue);
	void InputPlayerAnalogAimCameraTurn(float AxisValue);
	void InputPlayerAnalogAimCameraLookUp(float AxisValue);
	void InputMultiplayReady(float Duration);
	void InputMenuY(bool IsPressed);
	void InputMenuX(bool IsPressed);
	void InputMenuUp(bool IsPressed);
	void InputMenuStart(bool IsPressed);
	void InputMenuSelect(bool IsPressed);
	void InputMenuRight(bool IsPressed);
	void InputMenuR3(bool IsPressed);
	void InputMenuR2(bool IsPressed);
	void InputMenuR1(bool IsPressed);
	void InputMenuPause(bool IsPressed);
	void InputMenuOk(bool IsPressed);
	void InputMenuLeft(bool IsPressed);
	void InputMenuL3(bool IsPressed);
	void InputMenuL2(bool IsPressed);
	void InputMenuL1(bool IsPressed);
	void InputMenuDown(bool IsPressed);
	void InputMenuCancel(bool IsPressed);
	void InputMenuB(bool IsPressed);
	void InputMenuAnalogRY(float AxisValue);
	void InputMenuAnalogRX(float AxisValue);
	void InputMenuAnalogRUp(float AxisValue);
	void InputMenuAnalogRRight(float AxisValue);
	void InputMenuAnalogRLeft(float AxisValue);
	void InputMenuAnalogRDown(float AxisValue);
	void InputMenuAnalogLY(float AxisValue);
	void InputMenuAnalogLX(float AxisValue);
	void InputMenuAnalogLUp(float AxisValue);
	void InputMenuAnalogLRight(float AxisValue);
	void InputMenuAnalogLLeft(float AxisValue);
	void InputMenuAnalogLDown(float AxisValue);
	void InputMenuA(bool IsPressed);
	void InputLongMenuPause(float Duration);
	void InputLongHumanGetOn(float Duration);
	void InputLongArsenalPurge(float Duration);
	void InputLongArsenalGetOff(float Duration);
	void InputLoadingMenuB(bool IsPressed);
	void InputLoadingMenuA(bool IsPressed);
	void InputHumanTouch(bool IsPressed);
	void InputHumanSuicide(bool IsPressed);
	void InputHumanRepair(bool IsPressed);
	void InputHumanJump(bool IsPressed);
	void InputHumanGetOn(bool IsPressed);
	void InputHumanDodge(bool IsPressed);
	void InputHumanDash(bool IsPressed);
	void InputHumanCatch(bool IsPressed);
	void InputHumanCameraLock(bool IsPressed);
	void InputHumanAttackSpecial(bool IsPressed);
	void InputHumanAttackShoulder(bool IsPressed);
	void InputHumanAttackRight(bool IsPressed);
	void InputHumanAttackLeft(bool IsPressed);
	void InputHumanAttackBlade(bool IsPressed);
	void InputHoldHumanGetOn(float Duration);
	void InputHoldArsenalGetOff(float Duration);
	void InputEventY(bool IsPressed);
	void InputEventX(bool IsPressed);
	void InputEventStart(bool IsPressed);
	void InputEventSelect(bool IsPressed);
	void InputEventR3(bool IsPressed);
	void InputEventR2(bool IsPressed);
	void InputEventR1(bool IsPressed);
	void InputEventPadUp(bool IsPressed);
	void InputEventPadRight(bool IsPressed);
	void InputEventPadLeft(bool IsPressed);
	void InputEventPadDown(bool IsPressed);
	void InputEventL3(bool IsPressed);
	void InputEventL2(bool IsPressed);
	void InputEventL1(bool IsPressed);
	void InputEventB(bool IsPressed);
	void InputEventAnalogLUp(float AxisValue);
	void InputEventAnalogLRight(float AxisValue);
	void InputEventAnalogLLeft(float AxisValue);
	void InputEventAnalogLDown(float AxisValue);
	void InputEventA(bool IsPressed);
	void InputArsenalWeaponRackRight(bool IsPressed);
	void InputArsenalWeaponRackLeft(bool IsPressed);
	void InputArsenalThrowRelease(bool IsPressed);
	void InputArsenalThrowExecRight(bool IsPressed);
	void InputArsenalThrowExecLeft(bool IsPressed);
	void InputArsenalThrowCatch(bool IsPressed);
	void InputArsenalThrowAimCancel(bool IsPressed);
	void InputArsenalReloadRight(bool IsPressed);
	void InputArsenalReloadLeft(bool IsPressed);
	void InputArsenalQuickBoost(bool IsPressed);
	void InputArsenalPutDownExecRight(bool IsPressed);
	void InputArsenalPutDownExecLeft(bool IsPressed);
	void InputArsenalPurgeRight(bool IsPressed);
	void InputArsenalPurgeLeft(bool IsPressed);
	void InputArsenalMirage(bool IsPressed);
	void InputArsenalLigntningMove(bool IsPressed);
	void InputArsenalJump(bool IsPressed);
	void InputArsenalGuard(bool IsPressed);
	void InputArsenalGetOff(bool IsPressed);
	void InputArsenalFemtoShiftWing(bool IsPressed);
	void InputArsenalFemtoShiftShield(bool IsPressed);
	void InputArsenalFemtoShiftPrev(bool IsPressed);
	void InputArsenalFemtoShiftNext(bool IsPressed);
	void InputArsenalFemtoShiftCancel(bool IsPressed);
	void InputArsenalFemtoShiftAssult(bool IsPressed);
	void InputArsenalEquipmentUp(bool IsPressed);
	void InputArsenalEquipmentSwitch(bool IsPressed);
	void InputArsenalEquipmentRight(bool IsPressed);
	void InputArsenalEquipmentPrev(bool IsPressed);
	void InputArsenalEquipmentNext(bool IsPressed);
	void InputArsenalEquipmentLeft(bool IsPressed);
	void InputArsenalEquipmentDown(bool IsPressed);
	void InputArsenalEquipmentCancel(bool IsPressed);
	void InputArsenalEject(bool IsPressed);
	void InputArsenalCameraLock(bool IsPressed);
	void InputArsenalBoostOff(bool IsPressed);
	void InputArsenalAttackSpecial(bool IsPressed);
	void InputArsenalAttackShoulder(bool IsPressed);
	void InputArsenalAttackRight(bool IsPressed);
	void InputArsenalAttackLeft(bool IsPressed);
	void InputActionChangeFromTransport();
	void InputActionChangeForTransport();
	void Input2vs2TeamChange(bool IsPressed);
	void InitializeControlledCharacter(class APawn* ControlledCharacter);
	void Initialize(class ATTLCharacter* OwnerChara);
	void HideHUD();
	struct FTransform GetUnusedPlayerStartTransformCpp();
	float GetPlayerArsenalVPPercent();
	enum class ETTLEPauseMenuType GetPauseMenuType();
	class AActor* GetPauseMenu();
	enum class ETTLEPauseMenuRifleRangeOnOff GetPauseConfigFlag(enum class ETTLEPauseMenuRifleRangeConfig Config);
	void GetOuterStorageInfoBP(struct FTTLOuterStorageInfo* OutInfo);
	class ATTLCharacterCommon* GetMultiBaseCampArsenalCharacter();
	enum class ETTLEMissionPlayerStartType GetMissionPlayerStartType();
	class ATTLCharacterCommon* GetMainArsenal();
	class ATTLChatTalkerPopUp* GetChatTalkerPopUp();
	class UTTLDefaultCameraControlComponent* GetCameraControlComponent();
	class ATTLAutomationManager* GetAutoManagerRef();
	void EndRepeatFunc();
	void DumpSetPlayerStartTransformInfoCpp(struct FTransform& TmpTransform);
	void DestroyMultiBaseCampArsenalCharacter();
	void DestoryControlledCharacter();
	void DecideDebugMenu(struct FTTLDebugMenuFolder& Folder, int32 Index);
	void DebugSetPlayerStartTransform();
	void DebugRunOnServerSetDamageUpRate(uint8 Type, float NewRate);
	void DebugRunOnServerSet2on2PlayerNumCheckDisable(bool IsDisable);
	void DebugRunOnServerNetWorkErrorPacketLost();
	void DebugRunOnClientSetDamageUpRate(uint8 Type, float NewRate);
	void DebugRunOnClientForceExecDuel();
	void DebugRunOnClientChangeStatusType(class ATTLCharacterCommon* P1, class ATTLCharacterCommon* P2, class ATTLCharacterCommon* P3, class ATTLCharacterCommon* P4);
	bool CreateCheatManager();
	void CommonProcessAfterBecomeHuman();
	void ClosePauseMenu();
	void CloseDebugMenu(class AActor* DestroyedActor);
	void CloseChatTalkerPopUp();
	void CloseCanNotCommunicateOnlinePopUp();
	void ClearRader(class AActor* TargetActor);
	bool CheckIsInBaseCamp();
	void CheckEndSpectatorMode();
	bool CheckCanGetOn(class AActor* GetOnTarget);
	void ChangeNextSpectatorViewTarget(bool IsLeft);
	bool ChangeBaseCharacter(class AActor* BaseCharacter);
	bool ChangeArsenalHUDComponent(class AActor* ArsenalActor, bool IsChangedArsenal, bool IsFirst);
	bool CanActInputActionPlayerAnalog(enum class ETTLEActionType ActionType, bool* Result);
	bool CanActInputActionMain(enum class ETTLEActionType ActionType, bool* Result);
	void CanActInputActionBP(enum class ETTLEActionType ActionType, bool* Result);
	void CalcInputQuickMove(bool IsRestoredDirection, bool MustCalcInputVector);
	void BroadcastOnPvPMissionFinished(enum class ETTLEMissionResult MissionResult);
	void BroadcastOnMissionVictoryScreenStarted(enum class ETTLEMissionResult MissionResult, class FName EventID, int32 Player1Id, int32 Player2Id);
	void BroadcastOnMissionUpdated(class FName EncounterEventID, class FName MissionLevelName);
	void BroadcastOnMissionPreFinished(bool IsEnable);
	void BroadcastOnMissionFinished(enum class ETTLEMissionResult MissionResult);
	void BroadcastOnMenuFinished();
	void ActionOnOuterEjectEnd();
};

// 0x20 (0xBE20 - 0xBE00)
// Class DXM.TTLBaseController
class ATTLBaseController : public ATTLPlayerController
{
public:
	TWeakObjectPtr<class UTTLBaseMovementComponent> BaseMovementPtr;                                   // 0xBE00(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATTLPauseMenuBase*                     PauseMenuRef;                                      // 0xBE08(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsDebugLog;                                        // 0xBE10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A98[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseController* GetDefaultObj();

	void InputBaseQuickBoost(bool IsPressed);
	void InputBasePlayerAnalogMoveRight(float AxisValue);
	void InputBasePlayerAnalogMoveForward(float AxisValue);
	void InputBasePlayerAnalogCameraTurn(float AxisValue);
	void InputBasePlayerAnalogCameraLookUp(float AxisValue);
	void InputBaseAttackSpecial(bool IsPressed);
	void InputBaseAttackShoulder(bool IsPressed);
	void InputBaseAttackRight(bool IsPressed);
	void InputBaseAttackLeft(bool IsPressed);
	bool InitComponent();
	class UTTLBaseMovementComponent* GetBaseMovement();
};

// 0x30 (0x360 - 0x330)
// Class DXM.TTLBaseDockLevelScriptActor
class ATTLBaseDockLevelScriptActor : public ALevelScriptActor
{
public:
	uint8                                        Pad_1A9C[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseDockLevelScriptActor* GetDefaultObj();

	bool UpdateDispPlayLogConsole();
	void AddOpenLogConsoleModelActor(class AActor* ConsoleActor);
	void AddConsoleTextModelActor(class AActor* ConsoleActor);
	void AddCloseLogConsoleModelActor(class AActor* ConsoleActor);
};

// 0x38 (0x398 - 0x360)
// Class DXM.TTLBaseDroneAnimInstance
class UTTLBaseDroneAnimInstance : public UTTLAnimInstance
{
public:
	class ATTLBaseDronePawn*                     OwnerDrone;                                        // 0x360(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LookAtBodyLocation;                                // 0x368(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LookAtBodyAlpha;                                   // 0x374(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LookAtBarrelLocation;                              // 0x378(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LookAtBarrelAlpha;                                 // 0x384(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          SecurityDrone_AnimMontage;                         // 0x388(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A9D[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBaseDroneAnimInstance* GetDefaultObj();

};

// 0xA20 (0xEE0 - 0x4C0)
// Class DXM.TTLBaseDronePawn
class ATTLBaseDronePawn : public ATTLPawn
{
public:
	class USkeletalMeshComponent*                SelfMesh;                                          // 0x4C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBaseDroneAnimInstance*             SelfAnimBP;                                        // 0x4C8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                      SelfCollide;                                       // 0x4D0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                         SelfBoxCollide;                                    // 0x4D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLFirearmControlComponent*           SelfFirearmCtrl;                                   // 0x4E0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLCharacterInfoHUDComponent*         SelfInfoHUD;                                       // 0x4E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBasicStatusComponent*              SelfStatus;                                        // 0x4F0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLAIActionBaseDroneComponent*        SelfAIAct;                                         // 0x4F8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseDroneType                 Type;                                              // 0x500(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AA7[0x3B];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Move_MaxSpeed;                                     // 0x53C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Move_AccelerateTime;                               // 0x540(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AA8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           Move_MoveLoopEffectAsset;                          // 0x548(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Move_MoveLoopEffect;                               // 0x5E0(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class AActor*                                Move_TargetActor;                                  // 0x5F8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLSplinePath*                        Move_TargetPath;                                   // 0x600(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AA9[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               Move_TargetLocation;                               // 0x614(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AAB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Move_Speed;                                        // 0x624(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AAC[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Move_CannotMoveTime;                               // 0x63C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AAD[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RotationAndBone_TurnSpeed;                         // 0x658(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AAE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  RotationAndBone_BarrelSocketName;                  // 0x660(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RotationAndBone_BarrelDirection;                   // 0x668(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RotationAndBone_MuzzleOffset;                      // 0x674(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotationAndBone_BarrelSpeed;                       // 0x680(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotationAndBone_BarrelBasePitch;                   // 0x684(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             RotationAndBone_BarrelPitchRange;                  // 0x688(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotationAndBone_OuterDelayTime;                    // 0x690(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         RotationAndBone_IsFixed;                           // 0x694(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         RotationAndBone_IsLookAtTarget;                    // 0x695(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AAF[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFirearmInfo                       Shoot_Info;                                        // 0x698(0x648)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        Shoot_DeviationRate;                               // 0xCE0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Shoot_DeviationTargetSpeedLimit;                   // 0xCE4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          Shoot_DamageParameter;                             // 0xCE8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AB0[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MicroFreeze_Time;                                  // 0xD10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MicroFreeze_DecelerationRate;                      // 0xD14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MicroFreeze_Inclination;                           // 0xD18(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AB1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             Knockback_Low;                                     // 0xD28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             Knockback_Middle;                                  // 0xD30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             Knockback_High;                                    // 0xD38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Knockback_LowInclination;                          // 0xD40(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Knockback_MiddleInclination;                       // 0xD4C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Knockback_HighInclination;                         // 0xD58(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AB2[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Down_Time;                                         // 0xD7C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Down_BarrelPitch;                                  // 0xD80(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Down_Inclination;                                  // 0xD84(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AB4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsFunnel;                                          // 0xD94(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AB5[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SecurityDrone_SearchRange;                         // 0xDA4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SecurityDrone_Caution_TargetRecognitionTime;       // 0xDA8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SecurityDrone_Caution_TargetLostTime;              // 0xDAC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SecurityDrone_Warning_GenerateTime;                // 0xDB0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SecurityDrone_OnGroundDistanceRate;                // 0xDB4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SecurityDrone_OuterDistanceRate;                   // 0xDB8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          SecurityDrone_WaitColor;                           // 0xDBC(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          SecurityDrone_CautionColor;                        // 0xDCC(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          SecurityDrone_WarningColor;                        // 0xDDC(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             SecurityDrone_ColorFadeRange;                      // 0xDEC(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AB6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ATTLActorGenerator*>            SecurityDrone_GeneratorList;                       // 0xDF8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                  SecurityDrone_NotifyLevelData;                     // 0xE08(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           SecurityWarningFxResource;                         // 0xE10(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        SecurityWarningFxLoop;                             // 0xEA8(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AB7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                SecurityDrone_Perpetrator;                         // 0xEC8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AB8[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseDronePawn* GetDefaultObj();

	void SecurityDrone_Generate();
	void SecurityDrone_ChangeSecurityMode(enum class ETTLBaseDroneSecuMode Mode);
	void OnStatusBeOverriddenDelegate(class UTTLBasicStatusComponent* BasicStatus, struct FTTLEnemyParam& EnemyParam);
	void OnDestroyedDelegate(class AActor* Actor);
	void Move_SetMaxSpeed(float MaxSpeed);
	void Move_SetInertialMovement(const struct FVector& InTargetLoc, float InSpeed);
	void Initialize();
	void DamageReaction_OnTakeAnyDamageDelegate(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
};

// 0x10 (0xF10 - 0xF00)
// Class DXM.TTLSyncCannonPawn
class ATTLSyncCannonPawn : public ATTLBaseCannonPawn
{
public:
	uint8                                        Pad_1ABA[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLSyncCannonPawn* GetDefaultObj();

};

// 0x10 (0xF20 - 0xF10)
// Class DXM.TTLBaseENBossSnakCannonPawn
class ATTLBaseENBossSnakCannonPawn : public ATTLSyncCannonPawn
{
public:
	bool                                         IsUpTarget;                                        // 0xF10(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisabledAttack;                                    // 0xF11(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1ABC[0xE];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseENBossSnakCannonPawn* GetDefaultObj();

	bool CheckShootAngle();
};

// 0x260 (0x720 - 0x4C0)
// Class DXM.TTLBaseENBossSnakFin
class ATTLBaseENBossSnakFin : public ATTLPawn
{
public:
	uint8                                        Pad_1AC6[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        FinType;                                           // 0x4D0(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AC7[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           ChargeVFX;                                         // 0x4D8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class FName>                          ChargeSockets;                                     // 0x570(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FTTLFirearmInfo>               Shoot_Infos;                                       // 0x580(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UTTLMaterialParamaterAnimComp*         MaterialParamater;                                 // 0x590(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLLongRangeWeaponParameter*          WeaponParamater;                                   // 0x598(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          DamageParameter;                                   // 0x5A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLCharacterInfoHUDComponent*         CharacterInfoHUD;                                  // 0x5A8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UTTLFirearmControlComponent*>   SelfFirearmCtrls;                                  // 0x5B0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                    BreakFinClass;                                     // 0x5C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          BreakFinSockets;                                   // 0x5C8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSubclassOf<class APawn>                     ThrowFinClass;                                     // 0x5D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          ThrowFinSockets;                                   // 0x5E0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        SearchAreaOffset;                                  // 0x5F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AC9[0x44];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        SearchActors;                                      // 0x638(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FTTLFxPlayback>                ChargeVFXPlaybacks;                                // 0x648(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1ACA[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlayback                        UnexplodedLoopEffect[0x5];                         // 0x680(0x78)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1ACB[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseENBossSnakFin* GetDefaultObj();

	void StartShoot();
	void ShootAllArkGun(class AActor* Actor, class FName& WeaponName, float Time);
	void SetShootAllTarget(class AActor* Actor);
	void SetEnabledProcess(bool Enabled);
	void SetElectricActor(class ATTLENBossSnakElectricActor* Actor);
	void OpenFin();
	void OpendStart();
	void OnStatusDead();
	void OnArkGunTrace(TArray<class AActor*>* OutIgnoreActor);
	void MultiCastFirearmEndFire(int8 Index);
	void Initialize();
	class AActor* GetSearchActorsTop();
	void EndShootAll();
	void EndShoot();
	bool CheckInsideShootRange();
	void Break();
};

// 0x10 (0x370 - 0x360)
// Class DXM.TTLBaseFeryContainerAnimInstance
class UTTLBaseFeryContainerAnimInstance : public UTTLAnimInstance
{
public:
	class ATTLSpawnContainerBaseCharacter*       SelfContainer;                                     // 0x360(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsPurge;                                           // 0x368(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1ACE[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBaseFeryContainerAnimInstance* GetDefaultObj();

	void OnPurgeEnd();
};

// 0x3F0 (0x12D0 - 0xEE0)
// Class DXM.TTLBaseFunnelPawn
class ATTLBaseFunnelPawn : public ATTLBaseDronePawn
{
public:
	uint8                                        Pad_1AD2[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnFunnelReturn;                                    // 0xEF0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AD3[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GoAroundRadius;                                    // 0xF18(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GoAroundDistance;                                  // 0xF1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AD4[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ForStopTime;                                       // 0xF30(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsLaserFunnel;                                     // 0xF34(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AD5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WaitSlowDistance;                                  // 0xF38(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WaitAccelDistance;                                 // 0xF3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LookAtForwardDistance;                             // 0xF40(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UpdateWaitPointDistance;                           // 0xF44(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FirstHitDownDistancde;                             // 0xF48(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GoAround_TurnSpeed;                                // 0xF4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        Attack_TurnSpeed;                                  // 0xF50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              RotOffset;                                         // 0xF54(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class ATTLShoulderFunnelPot*                 OwnerPot;                                          // 0xF60(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1AD6[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Move_SlowAccelerateTime;                           // 0xF80(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1AD7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WarpInTime;                                        // 0xF88(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WarpOutTime;                                       // 0xF8C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1AD8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WaitPointCoolTime;                                 // 0xF94(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FirstMoveForwardTime;                              // 0xF98(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FirstMoveForwardSpeed;                             // 0xF9C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           FXThruster;                                        // 0xFA0(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           FXWarpIn;                                          // 0x1038(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           FXWarpOut;                                         // 0x10D0(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxParamWeak                       FXWarpIn_Weak;                                     // 0x1168(0x70)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           FXStartMove;                                       // 0x11D8(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        FXThrusterPlayback;                                // 0x1270(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UAnimationAsset*                       WaitMotion;                                        // 0x1288(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimationAsset*                       StopMotion;                                        // 0x1290(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1AD9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxGoAroundCount;                                  // 0x129C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MinGoAroundCount;                                  // 0x12A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        GoAroundCount;                                     // 0x12A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LaserFunnelChaseOffsetRate;                        // 0x12A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ChaseChangeDirectionTime;                          // 0x12AC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1ADA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GoAroundMaxHeight;                                 // 0x12B4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1ADB[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseFunnelPawn* GetDefaultObj();

	void SetFirstAttackRotation();
	bool RotationAndBone_Process(float DeltaSeconds);
	void ResurrectionFunnelForEnemy();
	void OnStatusDead();
};

// 0x18 (0x4D0 - 0x4B8)
// Class DXM.TTLBaseHelicopterAIController
class ATTLBaseHelicopterAIController : public ATTLAIController
{
public:
	class ATTLBaseHelicopterPawn*                MyHeli;                                            // 0x4B8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLAIActBaseHelicopterComponent*      MyHeliAIAct;                                       // 0x4C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AE8[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseHelicopterAIController* GetDefaultObj();

	void SetSupport(bool IsSupport);
	void SetHelicopterBehaviorType(enum class ETTLBaseHeliType Type);
	void SetFormationState(enum class ETTLBaseHeliFormState State);
	void SelectOptimumWeapon(class AActor* Actor);
	bool IsLeader();
	bool IsFollower();
	bool IsAliveLeader();
	bool HasAliveFollower();
	class AActor* GetSupportActor();
	float GetShortestWeaponRange();
	enum class ETTLBaseHeliType GetHelicopterBehaviorType();
	struct FVector GetFormationLocation();
	enum class ETTLBaseHeliFollowerMode GetFollowerMode();
	void GetCurrentWeaponAttackTime(float* AttackTime, float* IntervalTime);
	class AActor* GetCoverTargetActor();
	bool CurrentWeaponParallelAttack(class AActor* Target, float AttackTime, float IntervalTime);
	void ClearAttackMethod();
	bool CheckUnknownAttackMethod();
	bool CheckSearchEnemyRangeInstrusionWithFollower();
	bool CheckLockedOnWithFollower(class AActor* Actor);
	bool CheckFrontCannonCoolTime();
	bool CheckEstablishedFormationFlight();
	bool CheckDamagedWithFollower();
	bool CheckAttackInterval();
	bool CheckAttacking();
};

// 0x20 (0x380 - 0x360)
// Class DXM.TTLBaseHelicopterAnimInstance
class UTTLBaseHelicopterAnimInstance : public UTTLAnimInstance
{
public:
	class ATTLBaseHelicopterPawn*                SelfPawn;                                          // 0x360(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Initialized;                                       // 0x368(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AF2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               BodyLookAt_Location;                               // 0x36C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BodyLookAt_Alpha;                                  // 0x378(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseHeliAnimState             Animation_State;                                   // 0x37C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AF3[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBaseHelicopterAnimInstance* GetDefaultObj();

	bool Initialize(class ATTLBaseHelicopterPawn* Pawn);
	bool Animation_StartTakeoff();
	bool Animation_StartLanding();
	bool Animation_StartFalling();
	bool Animation_SetGroundWait();
	bool Animation_SetAirWait();
	void Animation_Process(float DeltaSeconds);
};

// 0x560 (0xA20 - 0x4C0)
// Class DXM.TTLBaseHelicopterPawn
class ATTLBaseHelicopterPawn : public ATTLPawn
{
public:
	enum class ETTLBaseHeliType                  Defaults_Type;                                     // 0x4C0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B02[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Deactivate_SearchEnemyRange;                       // 0x4C4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Deactivate_WarningRange;                           // 0x4C8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Activate_SearchEnemyRange;                         // 0x4CC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Activate_WarningRange;                             // 0x4D0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B03[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponent*                SelfMesh;                                          // 0x4D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCapsuleComponent*                     SelfCollision;                                     // 0x4E0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBasicStatusComponent*              SelfStatus;                                        // 0x4E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBaseHelicopterAnimInstance*        SelfAnimInst;                                      // 0x4F0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLAIActBaseHelicopterComponent*      SelfAIAct;                                         // 0x4F8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLCharacterMarkerHUD2Component*      SelfMarkerHUD;                                     // 0x500(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLCharacterMarkerHUD3Component*      SelfMarkerHUD3;                                    // 0x508(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLCharacterInfoHUDComponent*         SelfInfoHUD;                                       // 0x510(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseCannonPawn*                    FrontCannon;                                       // 0x518(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ATTLBaseCannonPawn*>            LeftCannons;                                       // 0x520(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class ATTLBaseCannonPawn*>            RightCannons;                                      // 0x530(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FVector                               Velocity;                                          // 0x540(0xC)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B04[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Move_MaxSpeed;                                     // 0x57C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Move_AccelerateTime;                               // 0x580(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B05[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           Move_EffectResource;                               // 0x588(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Move_Effect;                                       // 0x620(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        Move_MinHeight;                                    // 0x638(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B06[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Turn_Speed;                                        // 0x640(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpecialFlight_Distance;                            // 0x644(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpecialFlight_Range;                               // 0x648(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpecialFlight_Height;                              // 0x64C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FormationFlight_Radius;                            // 0x650(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         FormationFlight_CoverLeaderFlag;                   // 0x654(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B07[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FormationFlight_SpreadRadius;                      // 0x658(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B08[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLBaseHeliFollowerInfo>      FormationFlight_InfoList;                          // 0x660(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLBaseHeliCoverInfo>         FormationFlight_CoverInfoList;                     // 0x670(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B09[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ATTLBaseCannonPawn>        FrontCannon_Class;                                 // 0x688(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FrontCannon_AttachSocketName;                      // 0x690(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B0A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            FrontCannon_AttachOffset;                          // 0x6A0(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLBaseCannonPawn>        LeftCannon_Class;                                  // 0x6D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          LeftCannon_AttachSocketNames;                      // 0x6D8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B0B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            LeftCannon_AttachOffset;                           // 0x6F0(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLBaseCannonPawn>        RightCannon_Class;                                 // 0x720(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          RightCannon_AttachSocketNames;                     // 0x728(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B0D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            RightCannon_AttachOffset;                          // 0x740(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class UAnimMontage*                          Animation_Montage;                                 // 0x770(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Animation_TakeoffSectionName;                      // 0x778(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Animation_AirWaitSectionName;                      // 0x780(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Animation_LandingSectionName;                      // 0x788(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Animation_GroundWaitSectionName;                   // 0x790(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Animation_FallingSectionName;                      // 0x798(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Effect_ToLdGroundEffectResource;                   // 0x7A0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Effect_ToLdGroundEffect;                           // 0x838(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Effect_RotorEffectResource;                        // 0x850(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Effect_RotorEffect;                                // 0x8E8(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Effect_BlackSmokeEffectResource;                   // 0x900(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Effect_BlackSmokeEffect;                           // 0x998(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        MicroFreeze_Time;                                  // 0x9B0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MicroFreeze_DecelerationRate;                      // 0x9B4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             Knockback_Low;                                     // 0x9B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             Knockback_Middle;                                  // 0x9C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             Knockback_High;                                    // 0x9C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Down_Time;                                         // 0x9D0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B0E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  Death_ExplodeEffectAttachSocketName;               // 0x9D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLExplosionActor>        Death_ExplosionClass;                              // 0x9E0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Death_ExplodeStartTime;                            // 0x9E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Death_ExplodeDamage;                               // 0x9EC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Death_ExplodeKnockOut;                             // 0x9F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Death_ExplodeKnockBack;                            // 0x9F4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Death_ExplodeRadius;                               // 0x9F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Death_ExplodeTime;                                 // 0x9FC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Death_ExplodeTmpRise;                              // 0xA00(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Death_ExplodeMinDamageScale;                       // 0xA04(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Death_MaxExplodeDamageRadius;                      // 0xA08(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Death_FriendlyFireEnable;                          // 0xA0C(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B10[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  Death_ExplodeParamName;                            // 0xA10(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PathIndex;                                         // 0xA18(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B11[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseHelicopterPawn* GetDefaultObj();

	void Turn_Manual(float Yaw, const struct FVector& MoveVelocity, float Speed, const struct FVector& DamageReactionDirection, float DamageReactionTime, float OverrideRoll);
	void RightCannon_Wait();
	bool RightCannon_IsValid();
	void RightCannon_Destroy();
	bool RightCannon_Create();
	void RightCannon_Attack(class AActor* TargetActor);
	void OnTakeAnyDamageDelegate(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void Multicast_StartAttackWeaponShoulder(class AActor* TargetActor, bool IsParallelAttack);
	void Multicast_StartAttackWeaponRight(class AActor* TargetActor, bool IsParallelAttack);
	void Multicast_StartAttackWeaponLeftRight(class AActor* TargetActor, bool IsParallelAttack);
	void Multicast_StartAttackWeaponLeft(class AActor* TargetActor, bool IsParallelAttack);
	void Multicast_StartAttackWeaponAll(class AActor* TargetActor, bool IsParallelAttack);
	void Multicast_StartActionWait(class AActor* TargetActor, float Distance);
	void Multicast_StartActionSpecial(class AActor* TargetActor);
	void Multicast_StartActionPatrolTargetPoint(class AActor* TargetActor, enum class ETTLAISlot Slot);
	void Multicast_StartActionPatrolActionArea(class AActor* TargetActor);
	void Multicast_StartActionPatrol(class AActor* TargetActor);
	void Multicast_StartActionNone();
	void Multicast_StartActionKeepDistance(class AActor* TargetActor, float Distance);
	void Multicast_StartActionGoAroundSide(class AActor* TargetActor, float Distance, float Angle, bool UseCameraAngle);
	void Multicast_StartActionEscape(class AActor* TargetActor);
	void Multicast_StartActionChase(class AActor* TargetActor, float Distance, bool DoGoAroundSide);
	void Multicast_SetDeathExplosion();
	void Multicast_SetDamageAction(int32 Type, const struct FVector& Direction);
	void Multicast_FinishParallelAttack();
	void Multicast_FinishAttackWeaponShoulder();
	void Multicast_FinishAttackWeaponRight();
	void Multicast_FinishAttackWeaponLeftRight();
	void Multicast_FinishAttackWeaponLeft();
	void Multicast_FinishAttackWeaponAll();
	void Multicast_EntryFollower(int32 Index);
	void Move_SetSE(bool Enable);
	int32 Move_Manual(const struct FVector& MoveVelocity, bool IsMoveSE);
	void LeftCannon_Wait();
	bool LeftCannon_IsValid();
	void LeftCannon_Destroy();
	bool LeftCannon_Create();
	void LeftCannon_Attack(class AActor* TargetActor);
	void Initialize();
	void FrontCannon_Destroy();
	bool FrontCannon_Create();
	void FormationFlight_CalcFormation();
	void FormationFlight_CalcCover(float DeltaSeconds);
	bool Effect_Set(int32 Type, bool IsEnable, const struct FVector& Location, float Alpha);
	void Cannon_Entry(class ATTLBaseCannonPawn* Cannon);
	void BodyLookAt_SetLocation(const struct FVector& Location);
	void BodyLookAt_SetAlpha(float Alpha);
	struct FVector BodyLookAt_GetLocation();
	float BodyLookAt_GetAlpha();
};

// 0x28 (0x380 - 0x358)
// Class DXM.TTLBaseLandAnimalAnimInstance
class UTTLBaseLandAnimalAnimInstance : public UAnimInstance
{
public:
	uint8                                        Pad_1B15[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UBlendSpace*                           LandAnimalBlendSpace;                              // 0x368(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTTLBaseLandAnimalAnimInfo            AnimParameterInfo;                                 // 0x370(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B16[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBaseLandAnimalAnimInstance* GetDefaultObj();

};

// 0x40 (0x130 - 0xF0)
// Class DXM.TTLBaseMovementComponent
class UTTLBaseMovementComponent : public UActorComponent
{
public:
	uint8                                        Pad_1B1B[0x26];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsUseAnimationMoving;                              // 0x116(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B1C[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SpeedScale_CameraHorizontral;                      // 0x118(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpeedScale_CameraVertical;                         // 0x11C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpeedScale_InputVertical_Min;                      // 0x120(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpeedScale_InputVertical_Max;                      // 0x124(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Restriction_PitchValue;                            // 0x128(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDebugLog;                                        // 0x12C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B1D[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBaseMovementComponent* GetDefaultObj();

	void SetYawInputPower(float Power);
	void SetRightMovePower(float Power);
	void SetPitchInputPower(float Power);
	void SetForwardMovePower(float Power);
};

// 0x20 (0x118 - 0xF8)
// Class DXM.TTLBaseMultiCannonComponent
class UTTLBaseMultiCannonComponent : public UTTLActorComponent
{
public:
	uint8                                        Pad_1B1F[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ATTLBaseCannonPawn*>            Cannons;                                           // 0x108(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTTLBaseMultiCannonComponent* GetDefaultObj();

};

// 0x40 (0x3B0 - 0x370)
// Class DXM.TTLBaseRushCarAnimInstance
class UTTLBaseRushCarAnimInstance : public UTTLBaseCarAnimInstance
{
public:
	class UAnimMontage*                          Animation_Montage;                                 // 0x370(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Animation_IdleSectionName;                         // 0x378(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Animation_StartRushSectionName;                    // 0x380(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Animation_LoopRushSectionName;                     // 0x388(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Animation_EndRushSectionName;                      // 0x390(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Animation_StartBreakSectionName;                   // 0x398(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Animation_LoopBreakSectionName;                    // 0x3A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B21[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBaseRushCarAnimInstance* GetDefaultObj();

	bool Animation_SetMotion(enum class ETTLBaseRushCarAnimState State);
	void Animation_Process();
	enum class ETTLBaseRushCarAnimState Animation_GetState();
};

// 0xA50 (0x1830 - 0xDE0)
// Class DXM.TTLBaseRushCarCharacter
class ATTLBaseRushCarCharacter : public ATTLBaseCarCharacter
{
public:
	class FName                                  Rush_ParameterName;                                // 0xDE0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Rush_ReadyTime;                                    // 0xDE8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Rush_ReadyTurnSpeed;                               // 0xDEC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Rush_MaxSpeed;                                     // 0xDF0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Rush_AccelerateTime;                               // 0xDF4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Rush_TurnSpeed;                                    // 0xDF8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Rush_Time;                                         // 0xDFC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Rush_AfterPassageTime;                             // 0xE00(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Rush_DecelerateTime;                               // 0xE04(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Rush_AfterFixTime;                                 // 0xE08(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Rush_HitStopTime;                                  // 0xE0C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Rush_BackSpeed;                                    // 0xE10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Rush_BackAccelerateTime;                           // 0xE14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Rush_BackTime;                                     // 0xE18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B33[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  Rush_MainJetEffectAttachSocketName;                // 0xE20(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Rush_RightSubJetEffectAttachSocketName;            // 0xE28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Rush_LeftSubJetEffectAttachSocketName;             // 0xE30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Rush_RightFrontSubJetEffectAttachSocketName;       // 0xE38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Rush_LeftFrontSubJetEffectAttachSocketName;        // 0xE40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Rush_HoverEffectAttachSocketName;                  // 0xE48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Rush_HoverEffectSocketName_Center;                 // 0xE50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Rush_HoverEffectSocketName_TrailBase;              // 0xE58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Rush_MainJetIgnitionEffectAsset;                   // 0xE60(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Rush_MainJetLoopEffectAsset;                       // 0xEF8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Rush_MainJetEndEffectAsset;                        // 0xF90(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Rush_SubJetIgnitionEffectAsset;                    // 0x1028(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Rush_SubJetLoopEffectAsset;                        // 0x10C0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Rush_SubJetEndEffectAsset;                         // 0x1158(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Rush_HoverReadyEffectAsset;                        // 0x11F0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Rush_HoverReadyEffect_CenterAsset;                 // 0x1288(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Rush_HoverRushEffectAsset;                         // 0x1320(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Rush_HoverRushEffect_CenterAsset;                  // 0x13B8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Rush_HoverRushEffect_AirTrailAsset;                // 0x1450(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Rush_HoverRushEffect_GroundTrailAsset;             // 0x14E8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Rush_HoverStopEffectAsset;                         // 0x1580(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Rush_HitEffectAsset;                               // 0x1618(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Rush_HitArsenalEffectAsset;                        // 0x16B0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        Rush_AttackIntervalTime;                           // 0x1748(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B37[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLDamageParameterComponent*          Rush_DamageParameter;                              // 0x1750(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Rush_MainJetEffect;                                // 0x1758(0x18)(BlueprintVisible, BlueprintReadOnly, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Rush_RightSubJetEffect;                            // 0x1770(0x18)(BlueprintVisible, BlueprintReadOnly, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Rush_LeftSubJetEffect;                             // 0x1788(0x18)(BlueprintVisible, BlueprintReadOnly, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Rush_RightFrontSubJetEffect;                       // 0x17A0(0x18)(BlueprintVisible, BlueprintReadOnly, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Rush_LeftFrontSubJetEffect;                        // 0x17B8(0x18)(BlueprintVisible, BlueprintReadOnly, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FTTLFxPlayback>                Rush_HoverEffectList;                              // 0x17D0(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class AActor*>                        Rush_HitList;                                      // 0x17E0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B39[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AbnormalState_BurnedRushHitStopTimeRate;           // 0x1800(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalState_StunedRushHitStopTimeRate;           // 0x1804(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalState_AcidedRushHitStopTimeRate;           // 0x1808(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalState_FlashedRushHitStopTimeRate;          // 0x180C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalState_JammedRushHitStopTimeRate;           // 0x1810(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B3B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ATTLBaseRushCarWeakActor>  Weak_Class;                                        // 0x1818(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseRushCarWeakActor*              Weak_Actor;                                        // 0x1820(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B3C[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseRushCarCharacter* GetDefaultObj();

	void Weak_Destroy();
	bool Weak_Create();
	void Rush_SetHitEffect(class AActor* Act, const struct FVector& Loc, const struct FVector& Nml);
	bool Rush_InAction();
	void Rush_EffectProcess();
	void OnActorBeginOverlapDelegate(class AActor* OverlappedActor, class AActor* OtherActor);
	void MulticastRush_Start(class AActor* TargetActor);
	void MulticastRush_Cancel(bool Force);
	bool DamageReaction_Set(enum class ETTLBaseCarDamageReact Type, const struct FVector& Direction, bool IsBreak);
};

// 0x38 (0x378 - 0x340)
// Class DXM.TTLBaseRushCarWeakActor
class ATTLBaseRushCarWeakActor : public ATTLActor
{
public:
	class ATTLBaseRushCarCharacter*              OwnerCharacter;                                    // 0x340(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBasicStatusComponent*              SelfStatus;                                        // 0x348(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SelfLocation;                                      // 0x350(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SelfVelocity;                                      // 0x35C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B3E[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseRushCarWeakActor* GetDefaultObj();

};

// 0x8 (0x4C0 - 0x4B8)
// Class DXM.TTLBaseSupportDroneAIController
class ATTLBaseSupportDroneAIController : public ATTLAIController
{
public:
	class UTTLAIActionBaseDroneComponent*        SupportDroneAIAct;                                 // 0x4B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ATTLBaseSupportDroneAIController* GetDefaultObj();

	void NonCombatProcess();
	bool IsValidFollowActor();
	class AActor* GetFollowActorTarget();
	void FollowProcess();
	enum class ETTLAIActionType CombatProcess();
};

// 0x30 (0x390 - 0x360)
// Class DXM.TTLBaseTurretAnimInstance
class UTTLBaseTurretAnimInstance : public UTTLAnimInstance
{
public:
	class UAnimMontage*                          Animation_Montage;                                 // 0x360(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseTurretAnimState           Animation_State;                                   // 0x368(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B43[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               TransformBodyLocation;                             // 0x36C(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TransformBodyAlpha;                                // 0x378(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LookAtMuzzleLocation;                              // 0x37C(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LookAtMuzzleAlpha;                                 // 0x388(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B44[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBaseTurretAnimInstance* GetDefaultObj();

	void Animation_ToWait();
	void Animation_ToAttack();
};

// 0x860 (0xD20 - 0x4C0)
// Class DXM.TTLBaseTurretPawn
class ATTLBaseTurretPawn : public ATTLPawn
{
public:
	enum class ETTLBaseTurretType                Type;                                              // 0x4C0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B71[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponent*                SelfMesh;                                          // 0x4C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBaseTurretAnimInstance*            SelfAnimBP;                                        // 0x4D0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                      SelfCollide;                                       // 0x4D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLFirearmControlComponent*           SelfFirearmCtrl;                                   // 0x4E0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLCharacterInfoHUDComponent*         SelfInfoHUD;                                       // 0x4E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBasicStatusComponent*              SelfStatus;                                        // 0x4F0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLAIActionBaseTurretComponent*       SelfAIAct;                                         // 0x4F8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Floating_Range;                                    // 0x500(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Floating_Cycle;                                    // 0x504(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B73[0x3C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Move_MaxSpeed;                                     // 0x544(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Move_AccelerateTime;                               // 0x548(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B75[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           Move_MoveLoopEffectAsset;                          // 0x550(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Move_MoveLoopEffect;                               // 0x5E8(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class AActor*                                Move_TargetActor;                                  // 0x600(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLSplinePath*                        Move_TargetPath;                                   // 0x608(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B76[0x3C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RotationAndBone_TurnSpeed;                         // 0x64C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RotationAndBone_MuzzleSocketName;                  // 0x650(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RotationAndBone_MuzzleDirection;                   // 0x658(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotationAndBone_MuzzleBasePitch;                   // 0x664(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             RotationAndBone_MuzzlePitchRange;                  // 0x668(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotationAndBone_OuterDelayTime;                    // 0x670(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         RotationAndBone_IsFixed;                           // 0x674(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B77[0x1B];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFirearmInfo                       Shoot_Info;                                        // 0x690(0x648)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        Shoot_DeviationRate;                               // 0xCD8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Shoot_DeviationTargetSpeedLimit;                   // 0xCDC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          Shoot_DamageParameter;                             // 0xCE0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B78[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MicroFreeze_Time;                                  // 0xD04(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MicroFreeze_DecelerationRate;                      // 0xD08(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MicroFreeze_Inclination;                           // 0xD0C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B7A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseTurretPawn* GetDefaultObj();

	void Shoot_Shoot(class AActor* TargetActor);
	bool Shoot_CheckInsideRange(class AActor* TargetActor);
	bool Shoot_CheckInsideAngleRange(class AActor* TargetActor);
	bool RotationAndBone_Process(float DeltaSeconds);
	void OnStatusBeOverriddenDelegate(class UTTLBasicStatusComponent* BasicStatus, struct FTTLEnemyParam& EnemyParam);
	void OnDestroyedDelegate(class AActor* Actor);
	void OnActorBeginOverlapDelegate(class AActor* OverlappedActor, class AActor* OtherActor);
	void Move_Stop(class AActor* TargetActor, float TargetDistance);
	void Move_StartMoveToPath(class ATTLSplinePath* Path);
	void Move_StartMoveToLocation(const struct FVector& TargetLocation, float Distance, bool IsInfinite, class AActor* TargetActor, float TargetDistance);
	void Move_StartMoveToActor(class AActor* TargetActor, float Distance, bool IsInfinite);
	void Move_SetMoveEffect(bool IsEnable);
	bool Move_Process(float DeltaSeconds);
	bool Move_IsMoving();
	void Initialize();
	void DamageReaction_Set(const struct FVector& Direction, bool IsBreak);
	void DamageReaction_OnTakeAnyDamageDelegate(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
};

// 0x10 (0x370 - 0x360)
// Class DXM.TTLBaseWeakAnimInstance
class UTTLBaseWeakAnimInstance : public UTTLAnimInstance
{
public:
	class UAnimMontage*                          WeakMontage;                                       // 0x360(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        State;                                             // 0x368(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B7E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBaseWeakAnimInstance* GetDefaultObj();

	void StartOpen();
	void StartClose(bool Force);
	void SetOpen();
	void SetClose();
};

// 0x1B0 (0x670 - 0x4C0)
// Class DXM.TTLBaseWeakPawn
class ATTLBaseWeakPawn : public ATTLPawn
{
public:
	uint8                                        Pad_1B8D[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        WeakPointIndex;                                    // 0x4D0(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B8E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLBasicStatusComponent*              SelfStatus;                                        // 0x4D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                OwnerActor;                                        // 0x4E0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseWeakMode                  DamageMode;                                        // 0x4E8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseWeakMode                  DelayDamageMode;                                   // 0x4E9(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseWeakMode                  LockonMode;                                        // 0x4EA(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLBaseWeakState                 State;                                             // 0x4EB(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Timer;                                             // 0x4EC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DelayTimer;                                        // 0x4F0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DelayDamageModeTimer;                              // 0x4F4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           OpenEffectResource;                                // 0x4F8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Destroy_DamageEffectResource;                      // 0x590(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  Destroy_ReferenceSocketName;                       // 0x628(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Destroy_AttachSocketName;                          // 0x630(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B91[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int8                                         RewardPointIndex;                                  // 0x650(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B92[0x1F];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseWeakPawn* GetDefaultObj();

	void StartOpen(float OpenTime, float DelayTime);
	void StartClose(bool Force);
	void StartBreak();
	void SetState(enum class ETTLBaseWeakState State, float OpenTime, float DelayTime);
	void SetSharingDamageActor(class AActor* Actor);
	void SetOpen(float OpenTime);
	void SetLockonMode(enum class ETTLBaseWeakMode Mode);
	void SetHP(float Hp);
	void SetDamageMode(enum class ETTLBaseWeakMode Mode, float DelayTime);
	void SetClose();
	void OnTakeAnyDamageDelegate(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void OnStatusDead_Delegate();
	bool IsAlive();
	bool Destroy_SetEffect(int32 Type);
};

// 0x108 (0x5C0 - 0x4B8)
// Class DXM.TTLBaseWyveAIController
class ATTLBaseWyveAIController : public ATTLAIController
{
public:
	uint8                                        Pad_1B95[0x98];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<float>                                PhaseChangeHPRate;                                 // 0x550(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        AngryHPRate;                                       // 0x560(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B96[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<float>                                DistanceList;                                      // 0x568(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FTTLWyveActionPhaseInfo>       PhaseList;                                         // 0x578(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        DebugActionInterval;                               // 0x588(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DebugActionExecuteLevel;                           // 0x58C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DebugActionCheckType;                              // 0x590(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         RushCheck;                                         // 0x594(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         SpinLaserCheck;                                    // 0x595(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         MeteorCheck;                                       // 0x596(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         FemtoDrainCheck;                                   // 0x597(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         BigLaserCheck;                                     // 0x598(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         MissileCheck;                                      // 0x599(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HowlingCheck;                                      // 0x59A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AngryCheck;                                        // 0x59B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         JumpCheck;                                         // 0x59C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DashCheck;                                         // 0x59D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         StepMoveCheck;                                     // 0x59E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ChangeCheck;                                       // 0x59F(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         MoveCheck;                                         // 0x5A0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         WaitCheck;                                         // 0x5A1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ForceMoveAiStop;                                   // 0x5A2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         FlyMode;                                           // 0x5A3(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AngryStart;                                        // 0x5A4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B9A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        BigLaserFakeCount;                                 // 0x5A8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DrawMoveRange;                                     // 0x5AC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B9B[0x13];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBaseWyveAIController* GetDefaultObj();

	void OnModeChange(bool Type);
};

// 0x18 (0x40 - 0x28)
// Class DXM.TTLDamageInfo
class UTTLDamageInfo : public UObject
{
public:
	float                                        RestTime;                                          // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               CauserLocation;                                    // 0x2C(0xC)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsPlayingAnimation;                                // 0x38(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B9C[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLDamageInfo* GetDefaultObj();

};

// 0xA78 (0xB68 - 0xF0)
// Class DXM.TTLBasicStatusComponent
class UTTLBasicStatusComponent : public UActorComponent
{
public:
	UMulticastDelegateProperty_                  OnStatusBeOverridden;                              // 0xF0(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnStatusOverHeat;                                  // 0x100(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnStatusQuitOverHeat;                              // 0x110(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnAttack;                                          // 0x120(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnStatusDead;                                      // 0x130(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnStatusDeadWithActor;                             // 0x140(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnStatusUpdate;                                    // 0x150(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEnterHeatZone;                                   // 0x160(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnExitHeatZone;                                    // 0x170(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissileLockOn;                                   // 0x180(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnFemtoLevelChange;                                // 0x190(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnCalculateHP;                                     // 0x1A0(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	class AActor*                                OwnerActor;                                        // 0x1B0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsOwnerFreezed;                                    // 0x1B8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEStatusType                   Type;                                              // 0x1B9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C44[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Hp;                                                // 0x1BC(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C45[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HPMax;                                             // 0x1C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HPLimitRate;                                       // 0x1C8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDead;                                            // 0x1CC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsAutoDestroyedOnDead;                             // 0x1CD(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsWaitForEjectOuter;                               // 0x1CE(0x1)(BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C47[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        OuterEjectWaitTime;                                // 0x1D0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OuterEjectWaitTimeRemain;                          // 0x1D4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutoDestroyedDelayTime;                            // 0x1D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C49[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       PSExplosion;                                       // 0x1E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplosionScale;                                    // 0x1E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C4A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           FxExplosion;                                       // 0x1F0(0x98)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        HPHeadMax1;                                        // 0x288(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HPHeadMax2;                                        // 0x28C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HPHead;                                            // 0x290(0x4)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HPChestMax1;                                       // 0x294(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HPChestMax2;                                       // 0x298(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HPChest;                                           // 0x29C(0x4)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HPBackMax1;                                        // 0x2A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HPBackMax2;                                        // 0x2A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HPBack;                                            // 0x2A8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HPArmRMax1;                                        // 0x2AC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HPArmRMax2;                                        // 0x2B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HPArmR;                                            // 0x2B4(0x4)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HPArmLMax1;                                        // 0x2B8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HPArmLMax2;                                        // 0x2BC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HPArmL;                                            // 0x2C0(0x4)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HPLegMax1;                                         // 0x2C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HPLegMax2;                                         // 0x2C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HPLeg;                                             // 0x2CC(0x4)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Mass;                                              // 0x2D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Stealth;                                           // 0x2D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Defence;                                           // 0x2D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefenceCorrection;                                 // 0x2DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HitArmStartDegree;                                 // 0x2E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HitArmEndDegree;                                   // 0x2E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HitHeadTopHeightPercent;                           // 0x2E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HitLegBottomHeightPercent;                         // 0x2EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                PartsDefenceList;                                  // 0x2F0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C4C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Femto;                                             // 0x304(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FemtoInitial;                                      // 0x308(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FemtoMax;                                          // 0x30C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InitialFemtoMax;                                   // 0x310(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C4D[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FemtoMinValueRequiredForUse;                       // 0x354(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FemtoDecreasePerSecondOnMirage;                    // 0x358(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FemtoZoneTopZCm;                                   // 0x35C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FemtoZoneBottomZCm;                                // 0x360(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FemtoIncreasePerSecondInZoneTop;                   // 0x364(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FemtoIncreasePerSecondInZoneBottom;                // 0x368(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FemtoOffsetIncreasePerSecondInZoneTop;             // 0x36C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FemtoOffsetIncreasePerSecondInZoneBottom;          // 0x370(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FemtoReserved;                                     // 0x374(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FemtoReservedConsumed;                             // 0x378(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FemtoCoefficientOnBoost;                           // 0x37C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FemtoCoefficientOnIdle;                            // 0x380(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FemtoCoefficientOnOuter;                           // 0x384(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FemtoUpRate;                                       // 0x388(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         NoConsumeFemtoByAttack;                            // 0x38C(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C4E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Miragecount;                                       // 0x390(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BurningSpeedDownRate;                              // 0x394(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AcidSpeedDownRate;                                 // 0x398(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StunSpeedDownRate;                                 // 0x39C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BurningResist;                                     // 0x3A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StunResist;                                        // 0x3A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AcidResist;                                        // 0x3A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlashResist;                                       // 0x3AC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JammingResist;                                     // 0x3B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PhysicsResist;                                     // 0x3B4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FemtoResist;                                       // 0x3B8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KnockbackResist;                                   // 0x3BC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KnockbackRecoveryTime;                             // 0x3C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FemtoUpCorrection;                                 // 0x3C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLHeatZoneStatus                HeatZoneStatus;                                    // 0x3C8(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C4F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimePassedInHeatZone;                              // 0x3CC(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeBeforeTMPUp;                                   // 0x3D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMP;                                               // 0x3D4(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMPMin;                                            // 0x3D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMPMax;                                            // 0x3DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMPWarning;                                        // 0x3E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMPIncreasePerSocondOnQuickMoveOnLand;             // 0x3E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMPIncreaseFirstOnQuickMoveOnLand;                 // 0x3E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMPIncreasePerSocondOnQuickMoveOnBoost;            // 0x3EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMPIncreaseFirstOnQuickMoveOnBoost;                // 0x3F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMPDecreasePerSecond;                              // 0x3F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMPDecreasePerSecondOnBoost;                       // 0x3F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMPDecreasePerSecondOnOverHeat;                    // 0x3FC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMPDecreasePerSecondFromCoolingDevice;             // 0x400(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsDebugShowPartsDamageInfo;                        // 0x404(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C50[0xB];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TMPIncreaseFirstOnLightningMove;                   // 0x410(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C51[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsOverHeatFlag;                                    // 0x41C(0x1)(BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsLastTickQuickMove;                               // 0x41D(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C52[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WingShiftTMPCorrection;                            // 0x420(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpeedPenality;                                     // 0x424(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefencePenality;                                   // 0x428(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CouldFlyOnOverHeat;                                // 0x42C(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsInvincibleForOverHeat;                           // 0x42D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C53[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UClass*                                FieldFemtoSmallItemClass;                          // 0x430(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                FieldFemtoBigItemClass;                            // 0x438(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                FieldBulletItemClass;                              // 0x440(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HitSeconds;                                        // 0x448(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HitSecondsMax;                                     // 0x44C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HitWasCriticalSeconds;                             // 0x450(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HitWasCriticalSecondsMax;                          // 0x454(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UseHitEventOnMission;                              // 0x458(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEnemyDamageReactionType       ReactionType;                                      // 0x459(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C54[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UTTLDamageInfo*>                DamageLog;                                         // 0x460(0x10)(BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C55[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ETTLEInvincibleType               InvincibleType;                                    // 0x474(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEInvincibleType               PartsInvincibleType;                               // 0x475(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsUnDead;                                          // 0x476(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDisableSkill;                                    // 0x477(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHUDMode                      CurrentHUDMode;                                    // 0x478(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowMainHUD;                                       // 0x479(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowTsubazeriaiHUD;                                // 0x47A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowInstrumentHUD;                                 // 0x47B(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowSightHUD;                                      // 0x47C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C56[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  CharacterID;                                       // 0x480(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsHideHUD;                                         // 0x488(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C57[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  OverrideParameterID;                               // 0x490(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsNoDamageDebug;                                   // 0x498(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsNoHPZeroDebug;                                   // 0x499(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsInfinityDebug;                                   // 0x49A(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsHundredPowerDebug;                               // 0x49B(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsHideFemtoZone;                                   // 0x49C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C58[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CameraLag;                                         // 0x4A0(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HudMode;                                           // 0x4A4(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C59[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsTestMode;                                        // 0x4A9(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C5A[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TestModeHealingDelay;                              // 0x4AC(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentHeatzoneCount;                              // 0x4B0(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C5B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class ETTLWarningType, struct FTTLWarningInfo> WarningInfoSettings;                               // 0x4B8(0x50)(Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TMap<enum class ETTLWarningType, struct FTTLWarningInfo> WarningInfos;                                      // 0x508(0x50)(Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                         CouldDieByDot;                                     // 0x558(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C5C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                SharingDamageActor;                                // 0x560(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxKnockDownValue;                                 // 0x568(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KnockDownAttenuation;                              // 0x56C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentKnockDownValue;                             // 0x570(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsPreventedQuickBoost;                             // 0x574(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C5D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLSuperArmorParameter>       SuperArmorParams;                                  // 0x578(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        SuperArmorTimeRemaining;                           // 0x588(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEnemyDamageReactionType       PrevDamageReactionType;                            // 0x58C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C5E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        OnMissionSkillApplyRate;                           // 0x590(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OnMissionBossSkillApplyRate;                       // 0x594(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         NeedCollectLog;                                    // 0x598(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C5F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HeatZoneTMPForLog;                                 // 0x59C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMPLogTimer;                                       // 0x5A0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C61[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxStamina;                                        // 0x5A8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentStamina;                                    // 0x5AC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StaminaRecoverySpeed;                              // 0x5B0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StaminaRecoveryCoolDownTime;                       // 0x5B4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentStaminaRecoveryCoolDownTime;                // 0x5B8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsExplosionCharging;                               // 0x5BC(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C62[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CurrentExplosionChargeTime;                        // 0x5C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplosionChargeTime;                               // 0x5C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableExplosion;                                   // 0x5C8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableOuterLockOn;                                 // 0x5C9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableDoubleJump;                                  // 0x5CA(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableAirRolling;                                  // 0x5CB(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableOuterBlade;                                  // 0x5CC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableOuterRepair;                                 // 0x5CD(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableOuterPunchThrow;                             // 0x5CE(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnablePlayerLightningMove;                         // 0x5CF(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C63[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLMissionCallbackProcessor          MissionCallbackProcessor;                          // 0x5D8(0x18)(NativeAccessSpecifierPublic)
	uint8                                        Pad_1C64[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                TakenLethalDamageActor;                            // 0x5F8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ATTLFlashDummyActor*>           FlashDummyActorList;                               // 0x600(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class UTTLBasicStatusComponent*              BossOwnerStatus;                                   // 0x610(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsBossStatus;                                      // 0x618(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         BossResistCopy;                                    // 0x619(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C66[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                JammingActor;                                      // 0x620(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DropFlagItemID1;                                   // 0x628(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DropFlagItemID2;                                   // 0x630(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DropFlagItemID3;                                   // 0x638(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DropFlagItemID4;                                   // 0x640(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DropFlagItemID5;                                   // 0x648(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DropFlagItemID6;                                   // 0x650(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DropFlagItemID7;                                   // 0x658(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DropFlagItemID8;                                   // 0x660(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DropFlagItemID9;                                   // 0x668(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DropFlagItemID10;                                  // 0x670(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanDropSpecialFlagItem;                            // 0x678(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C67[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLSkillSpecialParameter>     SkillSpecialParamList;                             // 0x680(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         DefaultUseCameraLensEffect;                        // 0x690(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C68[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLInsuranceContainer                InsuranceContainer;                                // 0x698(0x30)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C69[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ATTLStandardMissile*>           MyMissiles;                                        // 0x700(0x10)(BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	int32                                        AimedMissileCount;                                 // 0x710(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C6A[0x210];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLAbnormalZoneStatus                AbnormalZoneStatus[0x6];                           // 0x924(0xF0)(NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1C6B[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UTTLImpermanentStatus*>         ImpermanentStatusList;                             // 0xA20(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UTTLSkillObject*>               SkillList;                                         // 0xA30(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        KillScore;                                         // 0xA40(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C6C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  KillLogID;                                         // 0xA48(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UForceFeedbackEffect*                  ForceFeedbackEffect;                               // 0xA50(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AEmitterCameraLensEffectBase> DamageCameraLensEffect;                            // 0xA58(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AEmitterCameraLensEffectBase*          CameraLensEffect;                                  // 0xA60(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C6E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLStatusParameterFluctuation> FluctuationList;                                   // 0xA70(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C6F[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsAddedHeatSource;                                 // 0xA81(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C71[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLSuspendEventControlStatus         SuspendEventControlStatus;                         // 0xA88(0x28)(NativeAccessSpecifierPublic)
	bool                                         IsGimmick;                                         // 0xAB0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C72[0x27];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        AbnormalBitFlag;                                   // 0xAD8(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C75[0x17];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLBossWeakDamageComponent*           BossWeakDamage_Component;                          // 0xAF0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LaserExtResist;                                    // 0xAF8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C76[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class ATTLHateDeliverActor>   HateDeliverActorPtr;                               // 0xB14(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1C77[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLNoDamageTargetForDuelStart> DuelStartNoDamageTargetList;                       // 0xB20(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1C78[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBasicStatusComponent* GetDefaultObj();

	void UpdateSuperArmor(float DeltaSeconds);
	void UpdateSkill(float DeltaSeconds);
	void UpdateImpermanentStatus(float DeltaSeconds);
	void UpdateDamageLog(float DeltaTime);
	void UpdateAbnormalStatusValue(float DeltaSeconds);
	void TryRemoveSkill(class UTTLSkillObject* Skill);
	void TryRemoveImpermanentStatusByCategores(TArray<enum class ETTLEStatusCategory>& Categories);
	bool TryRemoveImpermanentStatus(int64 UID);
	void TryAddSkill(class UTTLSkillObject* Skill, bool ChangeActivate);
	bool TryAddImpermanentStatus(class UTTLImpermanentStatus* Status);
	void StartTrapStunStatus(class AActor* Source);
	void SpecialFlagDropConditionSuccess();
	bool ShouldStartKnockDown();
	void SetOwnerFreezed(bool Value, bool IsVisibleChange);
	void SetOuterDefaultBasicStatusParameter();
	void SetFluctuationByIndex(int32 Index, float PercentValue, float PlusValue);
	void SetFemtoZoneFemto(float NewFemto);
	void SetEnemyDefaultParameter();
	void SetEnablePlayerLightningMove(bool Flag);
	void SetEnableOuterRepair(bool Flag);
	void SetEnableOuterPunchThrow(bool Flag);
	void SetEnableOuterLockOn(bool Flag);
	void SetEnableOuterFlying(bool Flag);
	void SetEnableOuterBlade(bool Flag);
	void SetEnableHumanSuicide(bool Flag);
	void SetEnableDoubleJump(bool Flag);
	void SetEnableAirRolling(bool Flag);
	void SetConsumedReservedFemto(float Value);
	void SetBossOwnerStatusForChildActor();
	void SetAbnormalValueFromAbnormalZone(int32 ZoneIndex, class AActor* DamageCauser, class UTTLDamageParameterComponent* DamageParameter, class AActor* DamageActor);
	void SetAbnormalStatusParameter(enum class ETTLEAbnormalStatusType AbnormalStatusType, const struct FTTLAbnormalStatusParameter& AbnormalStatusParam);
	void ServerPartsBreak(int16 PartsBitFlag, int16 CompleteBreakBitFlag);
	void ServerHealParts(int16 PartsBitFlag);
	void RunOnServerSyncPartsHp(float HeadVP, float ChestVP, float ArmRVP, float ArmLVP, float LegVP);
	void RunOnServerSyncOverHeat(bool OverHeatFlag);
	void RunOnServerSyncAbnormalStatus(uint8 AbnormalStatusFlag);
	void Reset();
	void ReserveFemto(float Value);
	void RemoveWarningInfo(enum class ETTLWarningType WarningType);
	void ReCalcParameters();
	void ProcessWarningInfo(float DeltaTime);
	void ProcessStamina(float DeltaSeconds);
	void ProcessNormalTMP(float DeltaSeconds);
	void ProcessInformHit(float DeltaSeconds);
	void ProcessFlagItemDrop();
	void ProcessFemto(float DeltaSeconds, class UTTLArsenalMovementComponent* ArsenalMovement);
	void ProcessDeath(class AActor* DamageCauserOwner, bool NeedExplosion, class APlayerState* InstigatedState, bool SelfExplosion);
	void ProcessDamageOnTime(float Damage, class UDamageType* DamageType, class AActor* DamageCauser);
	void ProcessArsenalTMP(float DeltaSeconds, class UTTLArsenalMovementComponent* ArsenalMovement);
	void ProcessAllArmorSlipDamage(float Damage);
	void ProcessAddValueFromAbnormalZone(int32 ZoneIndex, float DeltaSeconds);
	void OverrideParameter();
	void OnTakePointDamageDelegate(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& ShotFromDirection, class UDamageType* DamageType, class AActor* DamageCauser);
	void OnTakeAnyDamageDelegate(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void OnRep_SetHP();
	void OnRep_OverHeatFlag();
	void OnRep_AbnormalBitFlag();
	void OnExitHeatZoneDelegate(bool InBurningZone);
	void OnEnterHeatZoneDelegate(bool InBurningZone);
	void OneMyMirageWasDestroyed();
	void OneMyMirageWasAppeared();
	bool NeedsFemtoGaugeUpdate();
	void MulticastPartsBreak(int16 PartsBitFlag, int16 CompleteBreakBitFlag);
	void MulticastHealParts(int16 PartsBitFlag);
	void MulticastDeathAndDestroyNotExplode(class AActor* DamageCauserOwner, class APlayerState* InstigatedState, bool SelfExplosion);
	void MulticastDeathAndDestroy(class AActor* DamageCauserOwner, class APlayerState* InstigatedState, bool SelfExplosion);
	bool IsTrapStun();
	bool IsTMPWarning();
	bool IsTMPOverHeat();
	bool IsTagByKiller(class FName& Tag);
	bool IsShowWarningInfo(enum class ETTLWarningType WarningType, struct FTTLWarningInfo* WarningInfo);
	bool IsPlayer();
	bool IsInTestMode();
	bool IsFemtoShiftWing();
	bool IsFemtoShiftShield();
	bool IsFemtoShiftAssult();
	bool IsFemtoShift();
	bool IsFemtoEmpty();
	bool IsExistMyMirage();
	bool IsEnablePlayerLightningMove();
	bool IsEnableOuterRepair();
	bool IsEnableOuterPunchThrow();
	bool IsEnableOuterLockOn();
	bool IsEnableOuterFlying();
	bool IsEnableOuterBlade();
	bool IsEnableHumanSuicide();
	bool IsEnableDoubleJump();
	bool IsEnableAirRolling();
	bool IsCoolingDownTMP();
	bool IsCanUseFemto();
	bool IsAllyType(enum class ETTLEStatusType Type);
	bool IsAllyPlayer(enum class ETTLEStatusType CheckType);
	bool IsAllyActor(class AActor* Actor);
	bool IsAlly(class UTTLBasicStatusComponent* Component);
	bool IsAbnormalStatus(enum class ETTLEAbnormalStatusType AbnormalStatus);
	void InformHit(class AActor** DamageCauser);
	void IncrementMyMissile(class ATTLStandardMissile* Missile);
	void IncrementAimedMissile();
	bool HasSkillWithEffectType(enum class ETTLESkillEffectType SkillEffectType);
	bool HasSkill(class FName* SkillName);
	bool GetSkillSpecialParam(class FName Name, struct FTTLSkillSpecialParameter* ReturnParam);
	TArray<class UTTLSkillObject*> GetSkillList();
	enum class ETTLEAbnormalStatusType GetShortestVFXAbnormalStatusType(enum class ETTLEAbnormalStatusType ExceptionStatus);
	enum class ETTLEPartsDamagedPhase GetLegDamagedPhase();
	enum class ETTLEAbnormalStatusType GetLatestAbnormalStatusType(enum class ETTLEAbnormalStatusType ExceptionStatus);
	float GetHPLegMax();
	float GetHPLeg2();
	float GetHPLeg1();
	float GetHPHeadMax();
	float GetHPHead2();
	float GetHPHead1();
	float GetHPChestMax();
	float GetHPChest2();
	float GetHPChest1();
	float GetHPBackMax();
	float GetHPBack2();
	float GetHPBack1();
	float GetHPArmRMax();
	float GetHPArmR2();
	float GetHPArmR1();
	float GetHPArmLMax();
	float GetHPArmL2();
	float GetHPArmL1();
	enum class ETTLEPartsDamagedPhase GetHeadDamagedPhase();
	float GetFemtoCoefficient(class UTTLArsenalMovementComponent* ArsenalMovement);
	enum class ETTLEPartsDamagedPhase GetChestDamagedPhase();
	enum class ETTLEPartsDamagedPhase GetBackDamagedPhase();
	enum class ETTLEPartsDamagedPhase GetArmRDamagedPhase();
	enum class ETTLEPartsDamagedPhase GetArmLDamagedPhase();
	struct FTTLAbnormalZoneStatus GetAbnormalZoneParameter(enum class ETTLEAbnormalStatusType AbnormalStatusType);
	struct FTTLAbnormalStatusParameter GetAbnormalStatusParameter(enum class ETTLEAbnormalStatusType AbnormalStatusType);
	void ForceTMPOverHeat();
	class UTTLBasicStatusComponent* FindOwnerStatus(class AActor* Actor);
	void DestroyOwnerActor();
	void DecrementMyMissile(class ATTLStandardMissile* Missile);
	void DecrementAimedMissile();
	void DebugSetPartsVp1(enum class ETTLPartsType PartsType);
	enum class ECollisionChannel ConvertCharacterTypeToCollisionChannel(enum class ETTLEStatusType SrcStatus);
	bool ContainsImpermanentStatus(TArray<enum class ETTLEStatusCategory>& Categories);
	void ConsumeStamina(float Consume);
	void ConsumeReservedFemto(float Value);
	void ConsumeFemtoOnMirage(float DeltaSeconds);
	void ConsumeFemto(float Value);
	void ChangeStatusTypeFromActor(class AActor* SrcActor);
	bool CanSetVFXForAbnormalStatus(float TotalTime, class UTTLImpermanentStatus* ExceptionStatus);
	bool CanConsumeStamina(float Consume);
	float CalcWalkSpeedWithFluctuation(float baseSpeed);
	float CalcVPWithFluctuation(float baseVP);
	void CalcTotalParamWithSkill(struct FTTLPartsTotalParam& TotalParamIn, struct FTTLPartsTotalParam* TotalParamOut);
	float CalcRiseSpeedWithFluctuation(float baseSpeed);
	float CalcReserveStrengthWithFluctuation(float baseValue);
	float CalcReloadTimeWithFluctuation(float baseTime);
	int32 CalcParticleArmorNum();
	float CalcParameterWithFluctuation(float baseValue, int32 Index);
	float CalcOuterTrapNumWithFluctuation(float baseNum);
	float CalcOuterThrowSpeedWithFluctuation(float baseRange);
	float CalcOuterSpeedWithFluctuation(float baseSpeed);
	float CalcOuterHPWithFluctuation(float baseHP);
	float CalcOuterGranadeNumWithFluctuation(float baseNum);
	float CalcOuterFlySpeedWithFluctuation(float baseSpeed);
	float CalcOuterFemtoUpWithFluctuation(float baseUp);
	float CalcOuterDodgeSpeedWithFluctuation(float baseSpeed);
	float CalcOuterDodgeCostWithFluctuation(float baseCost);
	float CalcOuterDashCostWithFluctuation(float baseCost);
	float CalcOuterBoostSpeedWithFluctuation(float baseSpeed);
	float CalcOuterAttackWithFluctuation(float baseAttack);
	float CalcLandingDelayWithFluctuation(float baseTime);
	float CalcKnockDownResistWithFluctuation(float baseValue);
	float CalcJumpSpeedWithFluctuation(float baseSpeed);
	float CalcHateImportanceWithFluctuation(float baseValue);
	float CalcGroundSpeedWithFluctuation(float baseSpeed);
	bool CalcFlashContinuationTime(class AActor* DamageCauser, class AActor* DamageActor, enum class ETTLFlashDegree* FlashType);
	float CalcFinalDamageByDamageType(float Damage, float AttributeDamage, enum class ETTLWeaponDamageAttribute DamageAttribute, int32 DefenceIndex);
	float CalcFinalDamage(float Damage, float Defence);
	float CalcFemtoUpRateWithFluctuation(float baseUpRate);
	float CalcFemtoAtLocation(struct FVector& Location);
	float CalcDodgeRadiusWithFluctuation(float baseRadius);
	float CalcDodgeDurationWithFluctuation(float baseDuration);
	float CalcDefenceWithFluctuation(float baseSpeed);
	float CalcCloseWeaponRangeWithFluctuation(float baseRange);
	float CalcCloseWeaponKnockDownResistWithFluctuation(float baseValue);
	float CalcCloseWeaponComboRangeWithFluctuation(float baseRange);
	float CalcCloseWeaponComboNumWithFluctuation(float baseNum);
	float CalcCloseWeaponAttackWithFluctuation(float baseValue);
	float CalcBoostTMPWithFluctuation(float baseUp);
	float CalcBoostSpeedWithFluctuation(float baseSpeed);
	float CalcAttackCorrectionWithFluctuation(float baseSpeed);
	float CalcAirSpeedWithFluctuation(float baseSpeed);
	void ApplyFluctuationParameter();
	void AddWarningInfo(enum class ETTLWarningType WarningType);
	void AddTMP(float AddTMP);
	void AddKnockDownValue(float AddValue);
	void AddHeatZoneTMPLog();
	void AddHeatZoneTMP(float AddTMP);
	void AddFluctuationByIndex(int32 Index, float PercentValue, float PlusValue);
	void AddFemto(float Value);
};

// 0x0 (0x28 - 0x28)
// Class DXM.TTLBattleLogManager
class UTTLBattleLogManager : public UObject
{
public:

	static class UClass* StaticClass();
	static class UTTLBattleLogManager* GetDefaultObj();

	void UpdateSubGoalCondition(enum class ETTLEGoalType GoalType, bool Condition);
	void UpdateMainGoalIndex(int32 Index);
	void SetFreezeLog(bool* NewValue);
	void GetCurrentLog(struct FTTLMissionLog* MissionLog);
	int32 GetCurrentCriticalCount();
	void ClearCurrentLog();
	void AddWeaponUseCount(class FName WeaponID, int32 ShootNum, bool IsMatch);
	void AddWeaponHitData(class FName WeaponID, float Damage, float Time, bool IsCritical, bool IsMatch);
	void AddVPLog(float VP, float Time, class AActor* TargetActor);
	void AddTMPRiseLog(float TMP, float Time, enum class ETTLTMPRiseLogType Type, class AActor* TargetActor);
	void AddTMPLog(float TMP, float Time, class AActor* TargetActor);
	void AddScore(int32 Score);
	void AddPartsCorruptLog(const struct FTTLMissionPartsCorruptLog& NewLog);
	void AddOverHeatLog();
	void AddObjectInsuranceExpense(class FName ExpenseId, class UWorld* World, float Ratio);
	void AddMissionSpecialExpense(int32 AddValue);
	void AddMirageLog();
	void AddKnockOutLog();
	void AddKnockBackLog();
	void AddKillCount(class FName& EnemyID, bool IsSinglePlay, bool IsBoss);
	void AddDuelRequestNum(int32 Num);
	void AddDuelApprovalNum(int32 Num);
	void AddDodgeBoostCount();
	void AddDamageLog(float Damage, float Time, bool IsFemto);
};

// 0x8 (0x30 - 0x28)
// Class DXM.TTLBaseBehaviourWithHPRatio
class UTTLBaseBehaviourWithHPRatio : public UObject
{
public:
	uint8                                        Pad_1C92[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBaseBehaviourWithHPRatio* GetDefaultObj();

};

// 0x38 (0x128 - 0xF0)
// Class DXM.TTLBehaviorWithHpRatioComponent
class UTTLBehaviorWithHpRatioComponent : public UActorComponent
{
public:
	uint8                                        Pad_1C93[0x31];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsDebugLog;                                        // 0x121(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C94[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBehaviorWithHpRatioComponent* GetDefaultObj();

	void OnDamaged(float HpRatio);
};

// 0x38 (0x160 - 0x128)
// Class DXM.TTLMaterialBehaviorWithHpRatioComponent
class UTTLMaterialBehaviorWithHpRatioComponent : public UTTLBehaviorWithHpRatioComponent
{
public:
	TArray<class FName>                          MeshNameArray;                                     // 0x128(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FTTLMaterialBehavior>          MaterialBehaviorArray;                             // 0x138(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	float                                        ChangeOccursTimingByHPRatio;                       // 0x148(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C95[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLMaterialIntefaceContainer> MaterialIntefamceMap;                              // 0x150(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTTLMaterialBehaviorWithHpRatioComponent* GetDefaultObj();

};

// 0x558 (0x990 - 0x438)
// Class DXM.TTLBigLaser
class ATTLBigLaser : public ATTLProjectileBase
{
public:
	class USkeletalMeshComponent*                OwnerMesh;                                         // 0x438(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBasicStatusComponent*              OwnerStatus;                                       // 0x440(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MuzzleSocketName;                                  // 0x448(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ShootSocketName;                                   // 0x450(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ImpactSocketName;                                  // 0x458(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeaponName;                                        // 0x460(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           ExtraThickLaser_ChargeEffectResource;              // 0x468(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           ExtraThickLaser_NoticeEffectResource;              // 0x500(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           ExtraThickLaser_ShotEffectResource;                // 0x598(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           ExtraThickLaser_MuzzleEffectResource;              // 0x630(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           ExtraThickLaser_LaserEffectResource;               // 0x6C8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           ExtraThickLaser_HitEffectResource;                 // 0x760(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           ExtraThickLaser_ImpactEffectResource;              // 0x7F8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        ExtraThickLaser_ChargeEffect;                      // 0x890(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        ExtraThickLaser_NoticeEffect;                      // 0x8A8(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        ExtraThickLaser_ShotEffect;                        // 0x8C0(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        ExtraThickLaser_LaserEffect;                       // 0x8D8(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        ExtraThickLaser_HitEffect;                         // 0x8F0(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        ExtraThickLaser_ImpactEffect;                      // 0x908(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        ExtraThickLaser_MuzzleEffect;                      // 0x920(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        ExtraThickLaserRange;                              // 0x938(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExtraThickLaserRadius;                             // 0x93C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExtraThickLaserNoticeStartTime;                    // 0x940(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExtraThickLaserStartTime;                          // 0x944(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExtraThickLaserEndTime;                            // 0x948(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NoticeIrradiationTime;                             // 0x94C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IrradiationTime;                                   // 0x950(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootEffectTime;                                   // 0x954(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExtraThickLaser_PushOutSpeed;                      // 0x958(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDebugDrawCollision;                              // 0x95C(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableEndLocationOffset;                         // 0x95D(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C9A[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        EndLocationOffset;                                 // 0x960(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableLaserCheckCenterOffset;                    // 0x964(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C9B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        OffsetLaserCheckCenterLocation;                    // 0x968(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C9C[0x24];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBigLaser* GetDefaultObj();

	bool InitializeBigLaser(class USkeletalMeshComponent* Mesh);
};

// 0x98 (0x3C0 - 0x328)
// Class DXM.TTLBirdActor
class ATTLBirdActor : public AActor
{
public:
	bool                                         IsStartByLoadingFadeOut;                           // 0x328(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsStartByMissionPlaying;                           // 0x329(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsDestroyByOverLifeTime;                           // 0x32A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsDestroyAtFinalSplinePoint;                       // 0x32B(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsRandomFlapping;                                  // 0x32C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1CA8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxNumOfSpawn;                                     // 0x330(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxNumOfBird;                                      // 0x334(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETTLBirdRandomType                RandomType;                                        // 0x338(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1CA9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentSpawnNum;                                   // 0x33C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxSpeed;                                          // 0x340(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxLifetime;                                       // 0x344(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentLifeTime;                                   // 0x348(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               SpawnBoxBounds;                                    // 0x34C(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               InitBirdCoordinateLocation;                        // 0x358(0xC)(IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1CAA[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsDebugDraw;                                       // 0x365(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1CAB[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UBoxComponent*                         SpawnBoxTriggerComponent;                          // 0x368(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         SpawnPositionComponent;                            // 0x370(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       BirdAndSplineSceneComponent;                       // 0x378(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       BirdSceneCoordinateComponent;                      // 0x380(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USplineComponent*                      RouteOfSplineComponent;                            // 0x388(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       DefaultRootComponent;                              // 0x390(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1CAD[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class USkeletalMeshComponent*>        BirdArray;                                         // 0x3A0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class USkeletalMesh*                         TargetMeshAsset;                                   // 0x3B0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimationAsset*                       TargetAnimation;                                   // 0x3B8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ATTLBirdActor* GetDefaultObj();

	void RemoveAllBird();
	void PlayAnimationForBird(class USkeletalMeshComponent* Component);
	void OnBeginOverlapFunc(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void InitPosition();
	void InitializeBP();
	void InitBirdGroup();
	void InitAnimationAndPlay();
	struct FVector GetCurrentTangentFromSplineByDistance();
	struct FVector GetCurrentLocationFromSplineByDistance();
	struct FVector GetCurrentLocationFromSpline();
	struct FVector GetBirdCoordinatePivotLocation();
	class USkeletalMesh* GetBirdAsset();
	class UAnimationAsset* GetBirdAnimation();
	void EndLife();
	void EndBirdGroup();
	class USkeletalMeshComponent* CreateSkeltalMeshComponent(class FName& ComponentName);
	void CreateAndRegisterBirdGroup();
};

// 0x4F0 (0x818 - 0x328)
// Class DXM.TTLBlackLotus
class ATTLBlackLotus : public AActor
{
public:
	uint8                                        Pad_1CB2[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnShotStart;                                       // 0x348(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnShot;                                            // 0x358(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDead;                                            // 0x368(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class FName                                  BollActorTagName;                                  // 0x378(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BarrierActorTagName;                               // 0x380(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SocketHasCompoentTagNameForBarrierActor;           // 0x388(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1CB3[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ShotTimeStart;                                     // 0x3D8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ShotTime;                                          // 0x3DC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FTTLBlackLotusVPActionInfo>    VPInfoArray;                                       // 0x3E0(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UAnimationAsset*                       Animation_Close_Sail;                              // 0x3F0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DefaultAnimationRateScale;                         // 0x3F8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CloseTimeForSailCloseAnimation;                    // 0x3FC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FTTLBlackLotusSailContainer>   SailContainer;                                     // 0x400(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	float                                        BrokenEmissive_Sail;                               // 0x410(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BrokenScrollSpeed_Sail;                            // 0x414(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsChangedScrollSpeed;                              // 0x418(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1CB6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ShotEmissive_Sail;                                 // 0x41C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ShotScrollSpeed_Sail;                              // 0x420(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BrokenEmissiveChangeTime;                          // 0x424(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsChangeToBrokenByCloseEnd;                        // 0x428(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsBrokenByDead;                                    // 0x429(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsSyncEmissive;                                    // 0x42A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1CB8[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StartSyncEmissive_Sail;                            // 0x42C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EndSyncEmissive_Sail;                              // 0x430(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsChangedEmissiveAtLifeEnd;                        // 0x434(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1CB9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  LeftPanelMeshName;                                 // 0x438(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  RightPanelMeshName;                                // 0x440(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              MaterialPtr_LeftPanel;                             // 0x448(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              MaterialPtr_RightPanel;                            // 0x450(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1CBA[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaterialIndex_Panel;                               // 0x478(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1CBB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  MaterialEmissiveName_Panel;                        // 0x480(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ShotEmissiveTime_Panel;                            // 0x488(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ShotEmissive_Panel;                                // 0x48C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EmissiveEndTime_Panel;                             // 0x490(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BrokenEmissive_Panel;                              // 0x494(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EmissiveStartTime_Panel;                           // 0x498(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1CBC[0x24];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           CenterUnderExplosinoVFX;                           // 0x4C0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           CenterTopExplosinoVFX;                             // 0x558(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           PanelExplosinoVFX;                                 // 0x5F0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           PanelPillarExplosinoVFX;                           // 0x688(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        CenterUnderExplosinoVFXPlayback;                   // 0x720(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        CenterTopExplosinoVFXPlayback;                     // 0x738(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        LeftPanelExplosinoVFXPlayback;                     // 0x750(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        LeftPanelPillarVFXPlayback;                        // 0x768(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        RightPanelExplosinoVFXPlayback;                    // 0x780(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        RightPanelPillarVFXPlayback;                       // 0x798(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class FName                                  CenterUndaerExplosionSocketName;                   // 0x7B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  CenterTopExplosionSocketName;                      // 0x7B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  PanelExplosionSocketName;                          // 0x7C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  PanelPillarExplosionSocketName;                    // 0x7C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  CenterExplosionTagName;                            // 0x7D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  LeftPanelExplosionTagName;                         // 0x7D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  LeftPanelPillarExplosionTagName;                   // 0x7E0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  RightPanelExplosionTagName;                        // 0x7E8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  RightPanelPillarExplosionTagName;                  // 0x7F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ExplosionTimeForVFX;                               // 0x7F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1CBE[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsRockOn;                                          // 0x7FD(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1CBF[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  RockOnTagForCore;                                  // 0x800(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  RockOnTagForBarrier;                               // 0x808(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsValidHPVisible;                                  // 0x810(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1CC1[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBlackLotus* GetDefaultObj();

	bool Start();
	void OnCallRebornBarrier();
	void OnCalledByBreakingCore();
	void OnCallBrokenBarrier();
	bool Idle();
};

// 0xD0 (0x590 - 0x4C0)
// Class DXM.TTLBlackLotusTopBall
class ATTLBlackLotusTopBall : public ATTLPawn
{
public:
	UMulticastDelegateProperty_                  OnDeadCall;                                        // 0x4C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1CC2[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstanceDynamic*              MaterialPtr;                                       // 0x4E0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1CC3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ShotEmissiveTime;                                  // 0x4EC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BrokenEmissiveEndTime;                             // 0x4F0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1CC4[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ShotEmissiveValue;                                 // 0x4FC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShotScrollSpeed;                                   // 0x500(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsChangedEmissiveAtLifeEnd;                        // 0x504(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1CC5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BrokenEmissiveValue;                               // 0x508(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BrokenScrollSpeed;                                 // 0x50C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EmissiveStartTime;                                 // 0x510(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1CC6[0x7C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBlackLotusTopBall* GetDefaultObj();

	void OnCallByDead();
};

// 0x78 (0x698 - 0x620)
// Class DXM.TTLBlockableExplosionActor
class ATTLBlockableExplosionActor : public ATTLExplosionActor
{
public:
	uint8                                        Pad_1CC7[0x78];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBlockableExplosionActor* GetDefaultObj();

};

// 0x1E8 (0x2E0 - 0xF8)
// Class DXM.TTLBombComponent
class UTTLBombComponent : public UTTLActorComponent
{
public:
	struct FTTLFxParam                           FxGlowLoop;                                        // 0xF8(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxGlowFastLoop;                                    // 0x190(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxPreExplosion;                                    // 0x228(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        FxLoopPlayback;                                    // 0x2C0(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                         FxPreExplosion_IsEmitted;                          // 0x2D8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1CCA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FxPreExplosion_FxTimer;                            // 0x2DC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLBombComponent* GetDefaultObj();

	void StopLoopFx();
	void PlayLoopFx(struct FTTLFxParam& FxParam, class USceneComponent* AttachToComponent, class FName AttachPointName);
	void MulticastStartExplosion();
	bool IsLoopVfxPlaying();
	void GetFxAttachComponent(class USceneComponent** AttachToComponent, class FName* AttachPointName);
	void FxPreExplosion_Play();
	void FxPreExplosion_MulticastPlay();
	void CallStartExplosionFromCPP();
	void CallExecuteExplosion();
};

// 0x0 (0x28 - 0x28)
// Class DXM.TTLBossActorInterface
class ITTLBossActorInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ITTLBossActorInterface* GetDefaultObj();

	void ReflectMultiplayBossStatus();
};

// 0x0 (0xF0 - 0xF0)
// Class DXM.TTLBossBallGrenadeCtrlComponent
class UTTLBossBallGrenadeCtrlComponent : public UActorComponent
{
public:

	static class UClass* StaticClass();
	static class UTTLBossBallGrenadeCtrlComponent* GetDefaultObj();

	void OnSetCollisionSklMesh(class USkeletalMeshComponent* DestMesh);
	void OnSetCollision(class USphereComponent* DestCollision);
};

// 0x68 (0x160 - 0xF8)
// Class DXM.TTLBossCoreInfoHUDComponent
class UTTLBossCoreInfoHUDComponent : public UTTLActorComponent
{
public:
	TSubclassOf<class UUserWidget>               WidgetClass;                                       // 0xF8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           Widget;                                            // 0x100(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             WidgetLocationOffset;                              // 0x108(0x8)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                MeshName;                                          // 0x110(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SocketName;                                        // 0x120(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsShowAfterDead;                                   // 0x128(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnabledRangeCheck;                               // 0x129(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1CCE[0x36];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBossCoreInfoHUDComponent* GetDefaultObj();

	void SetForceHideState(bool IsForceHide);
};

// 0x30 (0x550 - 0x520)
// Class DXM.TTLBossFery01AIController
class ATTLBossFery01AIController : public ATTLBossAIController
{
public:
	TArray<float>                                PhaseChangeHPRate;                                 // 0x520(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class ATTLENBossFeryPawn*                    OwnerBoss;                                         // 0x530(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLAIActionFeryBoss01Component*       OwnerBossAI;                                       // 0x538(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBasicStatusComponent*              OwnerBossStatus;                                   // 0x540(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExecAngryHpRate;                                   // 0x548(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1CCF[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBossFery01AIController* GetDefaultObj();

	void Initialize();
};

// 0x288 (0x6C0 - 0x438)
// Class DXM.TTLBossFeryLaser
class ATTLBossFeryLaser : public ATTLProjectileBase
{
public:
	struct FTTLFxParam                           LaserVFX;                                          // 0x438(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           HitVFX;                                            // 0x4D0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           TopVFX;                                            // 0x568(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        ShootTime;                                         // 0x600(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1CD1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLSplinePath*                        TrailPath;                                         // 0x608(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LaserScale;                                        // 0x610(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LaserCollisionScale;                               // 0x614(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseLength;                                        // 0x618(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartLengthTime;                                   // 0x61C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        LaserVFXPlayback;                                  // 0x620(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        HitVFXPlayback;                                    // 0x638(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        TopVFXPlayback;                                    // 0x650(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1CD5[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBossFeryLaser* GetDefaultObj();

	void Finish(bool Immidiate);
};

// 0x670 (0xB30 - 0x4C0)
// Class DXM.TTLBossFishAcidTurret
class ATTLBossFishAcidTurret : public ATTLPawn
{
public:
	class UTTLLongRangeWeaponParameter*          WeaponParameter;                                   // 0x4C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          DamageParameter;                                   // 0x4C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBasicStatusComponent*              Status;                                            // 0x4D0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFirearmInfo                       AcidBulletInfo;                                    // 0x4D8(0x648)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_1CD7[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBossFishAcidTurret* GetDefaultObj();

};

// 0x28 (0x50 - 0x28)
// Class DXM.TTLBossInfoDebugDraw
class UTTLBossInfoDebugDraw : public UObject
{
public:
	uint8                                        Pad_1CDC[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBossInfoDebugDraw* GetDefaultObj();

};

// 0x78 (0x168 - 0xF0)
// Class DXM.TTLBossLastAfterImageComponent
class UTTLBossLastAfterImageComponent : public UActorComponent
{
public:
	uint8                                        Pad_1CDF[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AfterImage_CreateInterval;                         // 0x140(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AfterImage_LifeTime;                               // 0x144(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AfterImage_Distance;                               // 0x148(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AfterImage_FadeRate;                               // 0x14C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AfterImage_AlphaRate;                              // 0x150(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AfterImage_DistanceRate;                           // 0x154(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1CE2[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBossLastAfterImageComponent* GetDefaultObj();

};

// 0x10 (0x108 - 0xF8)
// Class DXM.TTLBossWeakControlComponent
class UTTLBossWeakControlComponent : public UTTLActorComponent
{
public:
	TArray<class ATTLBaseWeakPawn*>              WeakActors;                                        // 0xF8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLBossWeakControlComponent* GetDefaultObj();

};

// 0x30 (0x120 - 0xF0)
// Class DXM.TTLBossWeakDamageComponent
class UTTLBossWeakDamageComponent : public UActorComponent
{
public:
	bool                                         IsEnable;                                          // 0xF0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1CEC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LowerLimitDamage;                                  // 0xF4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UpperLimitDamage;                                  // 0xF8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LowerLimitScale;                                   // 0xFC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UpperLimitScale;                                   // 0x100(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DecayStartDistance;                                // 0x104(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DecayEndDistance;                                  // 0x108(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinimumScale;                                      // 0x10C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CameraShake_DamageParameterID;                     // 0x110(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CameraShake_DefeatParameterID;                     // 0x118(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLBossWeakDamageComponent* GetDefaultObj();

	void CameraShake_Play(class AActor* InDamageCauser, const struct FVector& InLocation, float InDamage, bool InIsDefeat);
};

// 0x290 (0x380 - 0xF0)
// Class DXM.TTLBossWeakenedVFXComponent
class UTTLBossWeakenedVFXComponent : public UActorComponent
{
public:
	struct FTTLFxParam                           FirstDischargeVFXAsset;                            // 0xF0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           FirstExplosionVFXAsset;                            // 0x188(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           SecondDischargeVFXAsset;                           // 0x220(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           SecondExplosionVFXAsset;                           // 0x2B8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FTTLBossWeakenedVFXInfo>       SettingList;                                       // 0x350(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	float                                        FirstVPRate;                                       // 0x360(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SecondVPRate;                                      // 0x364(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                OwnerActor;                                        // 0x368(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLBasicStatusComponent*              TargetStatus;                                      // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETTLBossWeakenedVFXState          State;                                             // 0x378(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsEnable;                                          // 0x379(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         Initialized;                                       // 0x37A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1CF4[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBossWeakenedVFXComponent* GetDefaultObj();

	void StopAllVFX(bool InIsDestroy);
	bool State_Set(enum class ETTLBossWeakenedVFXState InNewState, bool InIsForce, bool InIsDestroy);
	void SetTargetStatus(class UTTLBasicStatusComponent* InNewStatus);
	bool Initialize();
	bool Enable_Set(bool InNewEnable, bool InIsDestroy);
};

// 0x10 (0x370 - 0x360)
// Class DXM.TTLBossWeaponFishAnimInstance
class UTTLBossWeaponFishAnimInstance : public UTTLBaseBossWeaponAnimInstance
{
public:
	class ATTLLongRangeWeapon*                   OwnerWeapon;                                       // 0x360(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpinAnimPlayRate;                                  // 0x368(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpinAnimLerpRate;                                  // 0x36C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTTLBossWeaponFishAnimInstance* GetDefaultObj();

};

// 0x160 (0x4C0 - 0x360)
// Class DXM.TTLBossWeaponWyveAnimInstance
class UTTLBossWeaponWyveAnimInstance : public UTTLBaseBossWeaponAnimInstance
{
public:
	uint8                                        Pad_1CF7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsUsingWeapon;                                     // 0x368(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1CF8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DeployMotionTime;                                  // 0x36C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           StartSFX;                                          // 0x370(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           EndSFX;                                            // 0x408(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        StartSFXPlayback;                                  // 0x4A0(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1CF9[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBossWeaponWyveAnimInstance* GetDefaultObj();

	void AnimNotify_StopStartSFX(class UAnimNotify* Notify);
	void AnimNotify_PlayStartSFX(class UAnimNotify* Notify);
	void AnimNotify_PlayEndSFX(class UAnimNotify* Notify);
};

// 0x10 (0x370 - 0x360)
// Class DXM.TTLBossWyveArmCoverAnimInstance
class UTTLBossWyveArmCoverAnimInstance : public UTTLAnimInstance
{
public:
	class UAnimMontage*                          CoverMontage;                                      // 0x360(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1CFA[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBossWyveArmCoverAnimInstance* GetDefaultObj();

};

// 0x60 (0x520 - 0x4C0)
// Class DXM.TTLBossWyveCorePawn
class ATTLBossWyveCorePawn : public ATTLPawn
{
public:
	uint8                                        Pad_1CFE[0x58];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  AttachSocketName;                                  // 0x518(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ATTLBossWyveCorePawn* GetDefaultObj();

	void OnDeadDelegate();
};

// 0x180 (0x640 - 0x4C0)
// Class DXM.TTLBossWyveFemtoDrainPawn
class ATTLBossWyveFemtoDrainPawn : public ATTLPawn
{
public:
	bool                                         DrainTrigger;                                      // 0x4C0(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D04[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DrainPower;                                        // 0x4C4(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D05[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           VfxFemtoDrain;                                     // 0x508(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           VfxFemtoDrainArsenal;                              // 0x5A0(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLPostProcessZoneBase>   PostProcessClass;                                  // 0x638(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ATTLBossWyveFemtoDrainPawn* GetDefaultObj();

	void OnStartDrainPlayerDelegate(class AActor* Actor);
	void OnEndLayerDelegate();
	void OnEndDrainPlayerDelegate(class AActor* Actor);
	void OnChangedLayerDelegate();
};

// 0x0 (0x360 - 0x360)
// Class DXM.TTLBossWyveHandAnimInstance
class UTTLBossWyveHandAnimInstance : public UTTLAnimInstance
{
public:

	static class UClass* StaticClass();
	static class UTTLBossWyveHandAnimInstance* GetDefaultObj();

};

// 0xB0 (0x410 - 0x360)
// Class DXM.TTLBossWyvePaletAnimInstance
class UTTLBossWyvePaletAnimInstance : public UTTLAnimInstance
{
public:
	uint8                                        Pad_1D06[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          FemtoDrainMontage;                                 // 0x368(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          PhaseMontage;                                      // 0x370(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                  ForwardMontage;                                    // 0x378(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                  BackMontage;                                       // 0x388(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                  LeftMontage;                                       // 0x398(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                  RightMontage;                                      // 0x3A8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                     JumpStartAnimation;                                // 0x3B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          JumpMontage;                                       // 0x3C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                     JumpEndAnimation;                                  // 0x3C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimSequenceBase*>             RushRightAnimation;                                // 0x3D0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UAnimSequenceBase*>             RushLeftAnimation;                                 // 0x3E0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UAnimSequenceBase*>             RushComboAnimation;                                // 0x3F0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D08[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBossWyvePaletAnimInstance* GetDefaultObj();

};

// 0x10 (0x370 - 0x360)
// Class DXM.TTLBossWyveShoulderAnimInstance
class UTTLBossWyveShoulderAnimInstance : public UTTLAnimInstance
{
public:
	class UAnimMontage*                          HatchMontage;                                      // 0x360(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D0C[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBossWyveShoulderAnimInstance* GetDefaultObj();

};

// 0x10 (0x370 - 0x360)
// Class DXM.TTLBossWyveWeakAnimInstance
class UTTLBossWyveWeakAnimInstance : public UTTLAnimInstance
{
public:
	class UAnimMontage*                          OpenMontage;                                       // 0x360(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D0E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBossWyveWeakAnimInstance* GetDefaultObj();

};

// 0x150 (0x610 - 0x4C0)
// Class DXM.TTLBossWyveWeakCoverPawn
class ATTLBossWyveWeakCoverPawn : public ATTLPawn
{
public:
	uint8                                        Pad_1D14[0x70];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           Explosion;                                         // 0x530(0x98)(ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class FString                                BreakPartsName;                                    // 0x5C8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CoverPartsName;                                    // 0x5D8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AttachSocketName;                                  // 0x5E8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        WeakIndex;                                         // 0x5F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D16[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                CoverCollisionName;                                // 0x5F8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D17[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBossWyveWeakCoverPawn* GetDefaultObj();

	void OnTakeAnyDamageDelegate(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void OnDeadOwnerDelegate();
	void OnDeadDelegate();
	void OnArmorAbnormalStatusStartDelegate(enum class ETTLEAbnormalStatusType StatType, class UTTLBadStatusVFXComponent* badStatusComp, bool IsHeal);
};

// 0x1A0 (0x660 - 0x4C0)
// Class DXM.TTLBossWyveWeakPawn
class ATTLBossWyveWeakPawn : public ATTLPawn
{
public:
	uint8                                        Pad_1D1A[0x90];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                WeakPartsName;                                     // 0x550(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                BreakPartsName;                                    // 0x560(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CoverPartsName;                                    // 0x570(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AttachSocketName;                                  // 0x580(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AttachWeakSocketName;                              // 0x588(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        WeakIndex;                                         // 0x590(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D1C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                WeakCollisionName;                                 // 0x598(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CoverCollisionName;                                // 0x5A8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsAttachBaseActor;                                 // 0x5B8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D1D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           Explosion;                                         // 0x5C0(0x98)(ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D1E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBossWyveWeakPawn* GetDefaultObj();

	void OnTakeAnyDamageDelegate(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void OnDeadOwnerDelegate();
	void OnDeadDelegate();
};

// 0x38 (0x130 - 0xF8)
// Class DXM.TTLObstacleAvoidanceComponent
class UTTLObstacleAvoidanceComponent : public UTTLActorComponent
{
public:
	TArray<enum class EObjectTypeQuery>          ObjectTypes;                                       // 0xF8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        AvoidRate;                                         // 0x108(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D20[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x110(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D21[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLObstacleAvoidanceComponent* GetDefaultObj();

};

// 0x10 (0x140 - 0x130)
// Class DXM.TTLBoxAvoidanceComponent
class UTTLBoxAvoidanceComponent : public UTTLObstacleAvoidanceComponent
{
public:
	class FName                                  BoxTag;                                            // 0x130(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D22[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBoxAvoidanceComponent* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class DXM.TTLBPUtilityLibrary
class UTTLBPUtilityLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UTTLBPUtilityLibrary* GetDefaultObj();

	class UTexture2D* TextureFromWidget3(class UUserWidget* Widget, class UTexture2D* Texture, struct FVector2D& DrawSize);
	class UTexture2D* TextureFromWidget2(class UUserWidget* Widget, struct FVector2D& DrawSize);
	class UTexture2D* TextureFromWidget(class UUserWidget* Widget, struct FVector2D& DrawSize);
	void SupportWeaponParamToBaseParam(struct FTTLSupportWeaponParamRow& Source, struct FTTLWeaponParamBaseRow* Result);
	struct FVector SlowDownVelocity(const struct FVector& SourceVelocity, float SlowDownSpeed, float DeltaSeconds);
	void SetWarningIconMaterialUV(class UMaterialInstanceDynamic* MaterialInstance, enum class ETTLWarningIcon WarningIcon);
	void SetWarningIconBackgroundColor(class UImage* BackgroundImage, enum class ETTLWarningIcon WarningIcon);
	void SetupNextMercenaryRank(class UObject* WorldContextObject, int32 MercenaryRank);
	void SetTextWrapper(class UTextBlock* TextBlock, class FText InText);
	void SetPlayerTransformWithCamera(class APlayerController* PlayerController, const struct FTransform& NewTransform, bool IsSweep, bool IsTeleport);
	int32 SetPartsSlot(struct FTTLArsenalPartsInfo* PartInfo, bool RandomSlot, bool UseShopSlot, int32 MaxDropSlot);
	void SetMaterialShadowColor(class UObject* WorldContextObject, const struct FLinearColor& BackgroundShadowColor, const struct FLinearColor& ArsenalShadowColor, const struct FLinearColor& HumanShadowColor, const struct FLinearColor& EnemyShadowColor);
	void SetKeyAssignForUImage(class UImage* UImage, enum class ETTLKeyAssignIcon KeyAssign);
	void SetEndingViewed(class UObject* WorldContextObject, int32 EndingIndex);
	bool SetCollisionObjectTypeByCharacterType(class AActor* Instigator, class UPrimitiveComponent* ComponentToSet);
	bool SetCollisionByCharacterType(class AActor* Instigator, class UPrimitiveComponent* ComponentToSet);
	void SetCameraTraceVFXSpawnTimeAndNum(class UObject* WorldContext, float NewSpawnTime, int32 NewMaxNum);
	void SetCameraTraceVFXEnable(class UObject* WorldContext, bool Enable, class UParticleSystem* VFXToPlay, class USoundAtomCue* SEToPlay, int32 MaxNum, float AverageSpawnTime);
	void SetActorSpecialNoVPGauge(class AActor* Actor, bool NoVPGauge);
	void SetActorSpecialNoDamage(class AActor* Actor, bool NoDamage);
	void SetActorNoDamage(class AActor* Actor, bool NoDamage);
	struct FVector ReviseDamageDirection(class AActor* Actor, const struct FVector& Direction);
	void PlayActionVoiceWithCharacter(class ATTLCharacterCommon* Character, enum class ETTLActionVoice Type);
	void NoticeKill(class AActor* DamageCauser, class AActor* Sufferer);
	void NoticeDamageHit(class AActor* DamageCauser);
	bool MissionRankingIsOpenMission(class UObject* World, class FName MissionID);
	bool MissionRankingIsInEffect(class UObject* World, class FName MissionID);
	bool MissionRankingIsEnemySkill(class UObject* World, class FName SkillID);
	bool MissionRankingIsBossSkill(class UObject* World, class FName SkillID);
	int32 MissionRankingGetTimeLimitValue(class UObject* World);
	bool MissionRankingGetSkillData(class UObject* World, class FName SkillID, int32* OutLoopCount, float* OutEffectValue);
	int32 MissionRankingGetLoopRewardTotalCredits(class UObject* World, class FName MissionID);
	void MissionRankingGetLoopReward(class UObject* World, class FName MissionID, TArray<struct FTTLMissionRankingMissionRewardData>* OutLoopRewardArray);
	void MissionRankingGetLoopEvent(class UObject* World, class FName MissionID, TArray<struct FTTLMissionRankingEventData>* OutLoopEventArray);
	int32 MissionRankingGetLimitPlayCount(class UObject* World, class FName MissionID);
	bool MissionRankingGetIsForeverOpen(class UObject* World, class FName MissionID);
	struct FTimespan MissionRankingGetCloseTime(class UObject* World, class FName MissionID);
	void MissileParamToBaseParam(struct FTTLMissileWeaponParamRow& Source, struct FTTLWeaponParamBaseRow* Result);
	class FString MakeZeroFillStringFromInt(int32 Num, int32 Digits);
	class FString MakePartsMaterialPath(class USkeletalMeshComponent* MeshComponent, int32 MaterialIndex, bool UseCutoff);
	class FText MakeChatLogText(class FText SpeakerName, class FText Message);
	void LongRangeParamToBaseParam(struct FTTLWeaponParamRow& Source, struct FTTLWeaponParamBaseRow* Result);
	void LogPringRevisionNum(class UObject* WorldContextObject);
	class UClass* LoadWeaponClassFromAssetPtr(TSoftClassPtr<class ATTLWeaponBase> WeaponClassAsset);
	class UTexture* LoadTextureFromPath(class FName& Path);
	class UTexture2D* LoadTexture2DFromPath(class FName& Path);
	class UStaticMesh* LoadStaticMeshFromPath(class FName& Path);
	class USkeletalMesh* LoadSkeletalMeshFromPath(class FName& Path);
	class UParticleSystem* LoadParticleSystemFromPath(class FName& Path);
	class UMaterialInterface* LoadMaterialInterfaceFromPath(class FName& Path);
	class UMaterialInstance* LoadMaterialInstanceFromPath(class FName& Path);
	class UClass* LoadExplosionActorClassFromAssetPtr(TSoftClassPtr<class ATTLExplosionActor> ExplosionClassAsset);
	class UAnimationAsset* LoadAnimationAssetFromPath(class FName& Path);
	bool IsWarningIconDuel(enum class ETTLWarningIcon WarningIcon);
	bool IsValidPartsParam(class FName PartsID, enum class ETTLPartsType PartsType);
	bool IsValidPartsList(struct FTTLArsenalPartsInfoList& PartsInfoList);
	bool IsTargetRight(const struct FVector& MyLocation, const struct FVector& MyForwardVector, const struct FVector& TargetLocation);
	bool IsTargetFront(const struct FVector& MyLocation, const struct FVector& MyForwardVector, const struct FVector& TargetLocation);
	bool IsSurvivalMissionContinue(class UObject* WorldContext);
	bool IsShowDisconnectionPopup(class UObject* World);
	TArray<bool> IsSetSubGoals(class FName MissionName);
	bool IsRoomWithRegulation(class UObject* WorldContextObject);
	bool IsRifleRange(class UObject* World);
	bool IsRestrictedFriend(class FName MissionID, class FName NpcID);
	bool IsRespawnable(class AActor* Actor);
	bool IsPunchWeapon(class FName WeaponID);
	bool IsPrevRankMatch(class UObject* WorldContextObject);
	bool IsPlayingMission(class UObject* WorldContextObject);
	bool IsPlayerViewTarget(class UObject* World, class AActor* Actor);
	bool IsPlayableOgreRelation(class AActor* Actor);
	bool IsPlayableOgreCharacter(class AActor* Actor);
	bool IsPartsCanSold(struct FTTLArsenalPartsInfo& PartsInfo);
	bool IsPartsByType(enum class ETTLPartsType Type);
	bool IsPartsByPartMenuIndex(enum class ETTLEPartMenuIndex PartMenuIndex);
	bool IsOuter(class AActor* Actor);
	bool IsOpenedMenu(class UWorld* World, bool CheckPauseMenu, bool CheckTutorial);
	bool IsOnceCaught(class AActor* Actor);
	bool IsNgSkillInRegulation(class UObject* WorldContextObject, class FName& SkillID, bool InCoopRoom);
	bool IsNgPartsInRegulation(class UObject* WorldContextObject, class FName& PartsID, enum class ETTLPartsType PartType, bool InCoopRoom);
	bool IsNgAttachmentInRegulation(class UObject* WorldContextObject, class FName& AttachmentID, bool InCoopRoom);
	bool IsNeedHideHud(enum class ETTLHideCheckHudType CheckHudType, class UObject* World);
	bool IsMultiRankMatchWin(class UObject* WorldContextObject, enum class ETTLEMissionResult Result);
	bool IsMultiplayTeamRoom(class UObject* WorldContextObject);
	bool IsMultiplayTeam2on2Mission(class UObject* WorldContextObject);
	bool IsMultiplaySurvivalMision(class UObject* WorldContextObject);
	bool IsMultiplayRankMatchMission(class UObject* WorldContextObject);
	bool IsMultiplayPvPMission(class UObject* WorldContextObject);
	bool IsMultiplayPvPCustomMission(class UObject* WorldContextObject);
	bool IsMultiplayCoopMissionInSession(class UObject* WorldContextObject);
	bool IsMultiplayCoopMission(class UObject* WorldContextObject);
	bool IsMultiplayBattleMission(class UObject* WorldContextObject);
	bool IsMultiplay2on2MissionCustom(class UObject* WorldContextObject);
	bool IsMultiplay2on2Mission(class UObject* WorldContextObject);
	bool IsMultiMission(class FName MissionName);
	bool IsMissionPvP(class FName MissionName);
	bool IsMirage(class AActor* Actor);
	bool IsMercenaryRankUp(class UObject* WorldContextObject);
	bool IsLocallyControlledPlayer(class AActor* Actor);
	bool IsLastBattleDisconnection(class UObject* World);
	bool IsInSightFromPlayer(class AActor* TargetActor);
	bool IsInMultiplayMission(class UObject* WorldContextObject);
	bool IsInGameViewport(const struct FVector2D& ScreenLocation);
	bool IsInEquipMode(class UObject* World);
	bool IsInBaseCamp(class UObject* WorldContextObject);
	bool IsHitShootBullet(const struct FVector& TargetPos, float TargetRadius, const struct FVector& SourcePos, const struct FVector& bulletDirection, float BulletSpeed, float DistanceIgnoreGravity, float SlowDownSpeed, float GravityScale, float bulletRange, class UWorld* World);
	bool IsGettingRespawned(class AActor* Actor);
	bool IsGamePaused(class UWorld* World);
	bool IsGameCleared(class UObject* WorldContextObject);
	bool IsExistMissionSetting(class FName MissionName);
	bool IsEventLevelActor(class UWorld* World, class AActor* Actor);
	bool IsElementReleasedByInteractType(class UObject* WorldContextObject, enum class ETTLEInteractType CheckInteractType);
	bool IsElementReleased(class UObject* WorldContextObject, enum class ETTLEElementReleaseType CheckElement);
	bool IsDLCWeaponFromID(class FName PartsID);
	bool IsDLCPartsFromIDAndPartsType(enum class ETTLPartsType PartsType, class FName PartsID);
	bool IsDLCParts(struct FTTLArsenalPartsInfo& PartsInfo);
	bool IsDisconnectionShowError(class UObject* World);
	bool IsDeadOrBroken(class AActor* Actor);
	bool IsCurrentPlayerStatusType(class UObject* World, enum class ETTLEStatusType CheckStatus);
	bool IsChaseMission(class UWorld* World);
	bool IsCaught(class AActor* Actor);
	bool IsCanShoot(struct FTTLEnemyLongRangeWeaponShootSettings& WeaponShootSettings, class UTTLLongRangeWeaponParameter* WeaponParameter, class AActor* OwnerActor, class AActor* TargetActor, const struct FVector& bulletSourcePos, const struct FVector& bulletDirection);
	bool IsBasicAIArsenal(class AActor* Actor);
	bool IsBaseCampMenuOpened(class UObject* World);
	bool IsArsenal(class AActor* Actor);
	void InitDefaltKeyPreset(class UObject* WorldContextObject);
	bool IgnoreCollisionByCharacterType(class AActor* Instigator, class UPrimitiveComponent* ComponentToSet);
	bool HasActorBegunPlay(class AActor* Actor);
	void GrayOutWidget(class UWidget* Target, bool IsGrayOut, float GrayoutAlpha);
	class UWidget* GetWidgetFromName(class UUserWidget* TargetWidget, class FName WidgetName);
	enum class ETTLWreckWeaponMotionType GetWeaponWreckMotionType(enum class ETTLWeaponType WeaponType);
	enum class ETTLWeaponType GetWeaponTypeByWeaponID(class FName WeaponID);
	class UObject* GetWeaponSilhouetteIconObjectByPartsID(class FName PartsID, class UObject* WorldObject);
	enum class ETTLPartsType GetWeaponPartsType(class FName PartsID);
	class UTexture2D* GetWeaponOrPartsIconByPartsID(class FName PartsID, enum class ETTLPartsType PartsType);
	class UTexture2D* GetWeaponOrPartsIconByIconName(class FName IconName);
	bool GetWeaponMetadataFromPartsInfo(struct FTTLAssemblePartsInfoRow& PartsInfo, struct FTTLWeaponMetaDataRow* MetaData);
	class UTexture2D* GetWeaponIconByIconName(class FName IconName);
	class FName GetWeaponGroupID(class FName WeaponID);
	class FText GetWeaponDamageAttributeName(enum class ETTLWeaponDamageAttribute DamageAttribute);
	enum class ETTLWeaponDamageAttribute GetWeaponDamageAttribute(class FName WeaponID);
	class FText GetWeaponCategoryTextInMetaData(enum class ETTLEWeaponCategory WeaponCategory);
	class FText GetWeaponCategoryTextByWeaponID(class FName WeaponID);
	enum class ETTLEWeaponCategory GetWeaponCategory(class FName WeaponID);
	int32 GetWeaponBulletByWeaponID(class FName WeaponID);
	enum class ETTLBaseCampWaitMotionType GetWeaponBaseCampWaitType(class FName WeaponID);
	class FName GetWeaponBaseCampWaitMotionPath(class FName WeaponID);
	class APlayerController* GetViewTargetControllerSupportS(class UObject* WorldContext, class APlayerController* DstController);
	float GetValueFromCurveTable(const class FString& TablePath, class FName RowName, float XValue, bool* OutResult);
	class UUserWidget* GetUserWidget(class UWorld* World, TSubclassOf<class UUserWidget> UIClass);
	class FText GetTextFromStringTable(const class FString& TableNameSpace, const class FString& TableKey, bool IsPrintError);
	class FText GetTextFromOnlCommon(const class FString& KeyName);
	struct FLinearColor GetTextColorAfterPayment(int32 AfterCash);
	class FName GetTestLevelName();
	class FText GetTagConvertedText(class UObject* WorldContextObject, class FText Text);
	class FName GetSystemSettingNameValue(class FName& SettingID);
	int32 GetSystemSettingIntValue(class FName& SettingID);
	float GetSystemSettingFloatValue(class FName& SettingID);
	TArray<class FText> GetSubGoalTexts(class FName MissionName, bool OpenSubGoal1, bool OpenSubGoal2, bool OpenSubGoal3);
	TArray<struct FTTLMissionReward> GetSubGoalRewards(class FName MissionName);
	void GetSkillRowList(TArray<class FName>* NameList);
	class FText GetSkillName(class FName SkillName);
	bool GetSkillMetaData(class FName SkillID, struct FTTLHumanAlterationSkillRow* MetaData);
	TArray<class FName> GetSkillListFromLaboKarteLog(TArray<class FName>& KarteLogSkillList);
	class UTexture2D* GetSkillIcon(class FName IconName);
	class UObject* GetSilhouetteIconObjectByIconNameWithBasePath(class FName IconName, class UObject* WorldObject, const class FString& basePath);
	class UObject* GetSilhouetteIconObjectByIconName(class FName IconName, class UObject* WorldObject);
	TArray<class FName> GetSameGroupWeaponIDList(class FName WeaponID);
	struct FTTLMissionReward GetReward(class FName RewardID);
	int32 GetRevision(class UObject* WorldContextObject);
	TArray<class FName> GetReleasedTutorialIDList(class UObject* WorldContextObject, enum class ETTLEElementReleaseType CheckElement);
	TArray<class FName> GetReleasedDemoIDList(class UObject* WorldContextObject, enum class ETTLEElementReleaseType CheckElement);
	TArray<class FName> GetReleasedConsoleMessageIDList(class UObject* WorldContextObject, enum class ETTLEElementReleaseType CheckElement);
	TArray<class FName> GetReleasedBasecampTutorialIDList(class UObject* WorldContextObject, enum class ETTLEElementReleaseType CheckElement);
	TArray<class FText> GetReleasedBasecampNoticeText(class UObject* WorldContextObject, enum class ETTLEElementReleaseType CheckElement);
	float GetRecoverBulletRateOnAddToInvByWeaponType(enum class ETTLWeaponType WeaponType);
	float GetRaderRadiusOnOuter();
	TArray<class FString> GetPVPLevelTitleKeyArray();
	TArray<int32> GetPVPLevelIndexArray(bool IsCreate);
	class UTTLProjectileManager* GetProjectileManager(class UObject* WorldContextObject);
	class UTTLBasicStatusComponent* GetPlayerBasicStatusComponent(class UObject* World);
	class FText GetPartsTypeName(enum class ETTLPartsType PartsType, bool LongAndCloseAsSameType);
	class FName GetPartsSilhouetteIconPath(enum class ETTLPartsType PartsType, class FName PartsID);
	class UObject* GetPartsSilhouetteIconObjectByPartsID(class FName PartsID, class UObject* WorldObject, enum class ETTLPartsType PartsType);
	class UObject* GetPartsSilhouetteIconObjectByIconName(class FName IconName, class UObject* WorldObject);
	int32 GetPartsScrapAmount(struct FTTLArsenalPartsInfo& PartsInfo);
	int32 GetPartsSaleAmount(struct FTTLArsenalPartsInfo& PartsInfo);
	int32 GetPartsPurchaseAmount(struct FTTLAssemblePartsInfoRow& PartsInfo);
	class FText GetPartsNameOnly(enum class ETTLPartsType PartsType, class FName PartsID);
	class FText GetPartsName(enum class ETTLPartsType PartsType, class FName PartsID);
	bool GetPartsMetadataFromPartsInfo(struct FTTLAssemblePartsInfoRow& PartsInfo, struct FTTLPartsMetaDataRow* MetaData);
	struct FTTLArsenalPartsInfo GetPartsInfoByMenuIndex(enum class ETTLEPartMenuIndex& PartsMenuIndex, struct FTTLArsenalPartsInfoList& ArsenalPartsList);
	class FName GetPartsIDFromArsenalPartsList(struct FTTLArsenalPartsInfoList& ArsenalPartsList, enum class ETTLEPartMenuIndex& PartMenuIndex);
	class FText GetPartsIdentifyCodeOnly(enum class ETTLPartsType PartsType, class FName PartsID);
	class FName GetPartsIconPath(enum class ETTLPartsType PartsType, class FName PartsID);
	class UTexture2D* GetPartsIconByIconName(class FName IconName);
	enum class ETTLEnterpriseType GetPartsEnterpriseType(enum class ETTLPartsType PartsType, class FName PartsID);
	class FText GetPartsDescriptionText(enum class ETTLPartsType PartsType, class FName PartsID);
	class FText GetPartsCategoryName(enum class ETTLEPartMenuIndex PartMenuIndex);
	TArray<class FName> GetPartsAttachmentList(struct FTTLArsenalPartsInfo& ArsenalPartsInfo);
	class UObject* GetOuterSilhouetteIconObjectByIconName(class FName IconName, class UObject* WorldObject);
	int32 GetMultiplayRandomMissionIndex();
	class FName GetMultiplayRandomMissionID();
	class ATTLPlayerState* GetMultiDuelPlayerState(class ATTLGameState* GameState, enum class ETTLEStatusType TargetStatus);
	class FText GetMoneyText(int32 Money, bool EnablePrefix);
	class FText GetMissionTypeText(enum class ETTLEMissionType MissionType);
	class FText GetMissionTitle(class FName MissionName);
	class FText GetMissionSubTitle(class FName MissionName);
	class FName GetMissionMultiName(int32 MissionID);
	int32 GetMissionMultiID(class FName MissionName);
	int32 GetMissionIndex(class FName MissionID);
	class UTexture2D* GetMissionImage(class FName MissionName);
	class FName GetMissionID(int32 MissionIndex);
	bool GetMissionFriendRestriction(class FName ParamName, struct FTTLMissionFriendRestriction* Param);
	class FText GetMissionFailureConditionText(class FName MissionName, int32 Progress);
	class UTexture2D* GetMissionClientImage(class FName MissionName);
	class FText GetMercenaryText(enum class ETTLENPCMercenary Mercenary);
	class FText GetMercenaryRankText(int32 Rank, bool WithRankText);
	void GetMercenaryRank(class UObject* WorldContextObject, int32* OutCurrentRank, int32* OutNextRank);
	class UTexture2D* GetMercenaryEmblem(enum class ETTLENPCMercenary Mercenary);
	class FText GetMainGoalText(class FName MissionName, int32 Progress);
	struct FTTLMissionReward GetMainGoalReward(class FName MissionName);
	class FName GetLotPartID(class UObject* WorldContext, struct FTTLArsenalPartsInfo& PartInfo, bool RandomLot);
	class ATTLLevelControlActor* GetLevelController(class UObject* WorldContextObject);
	TArray<class FName> GetLaboSkillIDListFromSkillTableID(class FName& SkillTableID);
	enum class ETTLKeyAssignIcon GetKeyAssignIconTypeFromActionType(enum class ETTLEActionType ControllerActionType);
	enum class ETTLKeyAssignIcon GetKeyAssignIconType(enum class ETTLEInputType ControllerInputType);
	enum class ETTLEInputType GetInputTypeFromActionType(enum class ETTLEActionType ControllerActionType);
	enum class ETTLEInputType GetInputKeyByConfigType(enum class ETTLOptionKeyConfigKeyType KeyConfigType, class UObject* WorldContext, bool GetAssistKey);
	class FName GetGunArmWeaponIDFromArmID(class FName& ArmID, bool IsLeft);
	TArray<class FName> GetGroupWeaponIDListByGroupID(class FName GroupID);
	struct FVector2D GetGameViewportSize();
	bool GetGameServerTime(class UObject* World, struct FDateTime* OutGameServerTime);
	class FString GetGamePlayerName(class AActor* GamePlayerActor);
	class FString GetFlowUiMainMapName();
	class FText GetFlagItemName(class FName FlagItemID);
	class UTexture2D* GetFlagItemIcon();
	int32 GetFixedSlotNum(struct FTTLArsenalPartsInfo& PartInfo, bool IsShopSale);
	void GetFixationWeaponInfoFromMission(class FName MissionName, class FName* WeaponID, enum class ETTLPartsType* WeaponType);
	struct FTTLExtraAttachmentParam GetExtraAttachmentParameterFromWeaponBase(struct FTTLWeaponParamBaseRow& InWeaponRow);
	struct FTTLExtraAttachmentParam GetExtraAttachmentParameterFromRightArm(struct FTTLPartsArmRightParamRow& InRightRow);
	struct FTTLExtraAttachmentParam GetExtraAttachmentParameterFromLeg(struct FTTLPartsLegsParamRow& InLegRow);
	struct FTTLExtraAttachmentParam GetExtraAttachmentParameterFromLeftArm(struct FTTLPartsArmLeftParamRow& InLeftArmRow);
	struct FTTLExtraAttachmentParam GetExtraAttachmentParameterFromInside(struct FTTLPartsInsideParamRow& InInsideRow);
	struct FTTLExtraAttachmentParam GetExtraAttachmentParameterFromHead(struct FTTLPartsHeadParamRow& InHeadRow);
	struct FTTLExtraAttachmentParam GetExtraAttachmentParameterFromBody(struct FTTLPartsBodyParamRow& InBodyRow);
	enum class ETTLEPartMenuIndex GetEquippedPartsMenuIndex(struct FTTLArsenalPartsInfo& PartsInfo, struct FTTLArsenalPartsInfoList& ArsenalPartsList);
	enum class ETTLEnterpriseType GetEnterpriseTypeByPartsID(class FName PartsID, enum class ETTLPartsType Type);
	class FText GetEnterpriseNameByPartsID(class FName PartsID, enum class ETTLPartsType Type);
	class FText GetEnterpriseName(enum class ETTLEnterpriseType EnterpriseType);
	class UTexture2D* GetEnterpriseLogo(enum class ETTLEnterpriseType EnterpriseType);
	class UTexture2D* GetEnemyImage(class FName EnemyID);
	class FText GetEmoteName(const class FString& EmoteID);
	int32 GetDisconnectionWarningCount();
	int32 GetDisconnectionPenaltyValue(int32 DisconnectionCount);
	enum class ETTLEPaintTextureCategory GetDecorationTextureCategoryById(enum class ETTLEDecorationInfoType DecoType, class FName DecoID);
	class FName GetDecorationInfoID(class FName MissionName);
	class UTexture2D* GetDecorationIconById(enum class ETTLEDecorationInfoType DecoType, class FName DecoID);
	struct FLinearColor GetDecorationColorById(class FName DecoColorID, const struct FLinearColor& OverrideNoneColor);
	class AActor* GetDamageCauserOwnerActor(class AActor* DamageCauser);
	class FName GetCurrentMissionName(class UObject* World);
	class FText GetChatMessageByStringTableKey(const class FString& StringTableKey);
	class FText GetChatMessageByChatSettingMessageID(const class FString& ChatSettingMessageID);
	class FText GetCharacterNameById(class FString* CharacterID);
	class FText GetCharacterName(class AActor* Actor);
	class FText GetBulletItemTextByWeaponType(enum class ETTLWeaponType WeaponType);
	void GetBossDropRewardID(TArray<class FName>* OutRewardIDList, class FName& BossID, enum class ETTLBossDropType Type, int32 Index, enum class ETTLEAbnormalStatusType AbnormalStatusType);
	class UTexture2D* GetBattleDataIcon();
	float GetBaseDamage(float Damage, float Deffence);
	int32 GetAttachmentSaleMoney(class FName& AttachmentID);
	int32 GetAttachmentRemoveMoney(struct FTTLArsenalPartsInfo& PartsInfo, int32& SlotIndex);
	void GetAttachmentParameter(class FName& AttachmentID, TArray<struct FTTLAttachmentParameter>* OutParameters);
	bool GetAttachmentParam(class FName& AttachmentID, struct FTTLAttachmentParamRow* OutRow);
	class FText GetAttachmentName(class FName& AttachmentID);
	int32 GetAttachmentMoney(class FName& AttachmentID, struct FTTLAssemblePartsInfoRow& PartsInfo);
	int32 GetAttachmentListSaleMoney(TArray<class FName>& AttachmentIDList);
	class UTexture2D* GetAttachmentIconById(class FName AttachmentID);
	class FText GetAttachmentDescription(class FName& AttachmentID);
	struct FTTLPartsTotalParam GetArsenalTotalParamFromPartsList(class UObject* WorldContextObject, struct FTTLArsenalPartsInfoList& PartsInfoList, bool IgnorePunch);
	class FName GetArsenalDefaultColorId(int32 ColorArea);
	class FString GetAnimPathFromMeshPath(const class FString& MeshPath, const class FString& MeshPrefix, const class FString& AnimName);
	TArray<class FString> GetAllSubLevelNames(class UWorld* World);
	bool GetActorSpecialNoVPGauge(class AActor* Actor);
	bool GetActorSpecialNoDamage(class AActor* Actor);
	bool GetActorNoDamage(class AActor* Actor);
	void GetActorMeshBound(class AActor* Actor, struct FVector* Origin, struct FVector* BoxExtent);
	struct FVector GetActorLocationOfvfxCenter00(class AActor* TargetActor, class UMeshComponent* MeshComponent);
	void ForceReleaseMirage(class UObject* WorldContext);
	class UClass* FindWeaponClass(class FName RowName);
	struct FVector FindClosestPointOnTriangle(const struct FVector& Point, const struct FVector& TriangleA, const struct FVector& TriangleB, const struct FVector& TriangleC);
	void FindClosestLineVsTriangle(const struct FVector& LineA, const struct FVector& LineB, const struct FVector& TriangleA, const struct FVector& TriangleB, const struct FVector& TriangleC, struct FVector* LinePoint, struct FVector* TrianglePoint);
	void ExchangeActorNetRole(class AActor* TargetActor);
	void DeliveChaseSpeedAtLaunch(class AActor* TargetActor, class AActor* Instigator);
	void DebugPringRevisionNum(class UObject* WorldContextObject);
	class FText CreateUserName(bool UseUserName, const class FString& UserName, class FName NpcMetaID);
	struct FTTLMaterialInstanceDynamic CreateTTLMaterialInstance(class USkeletalMeshComponent* MeshComponent, int32 MaterialIndex, bool UseCutoff);
	int32 CreateRoomSettingTypeIndex(class UObject* WorldContextObject, enum class ETTLSessionSettingRoomType SettingType);
	TArray<class FName> CreateOnlineMissionIDList(class UObject* WorldContextObject, enum class ETTLEMissionMultiType MultiType);
	void CreateMissile(TSubclassOf<class AActor> BulletClass, class FName WeaponID, class APawn* Owner, struct FTransform& SpawnTransform, class AActor* Target);
	enum class ETTLWeaponSlot ConvertWeaponSlotFromWeaponInventoryCategory(enum class ETTLInventoryCategory InventoryCategory);
	enum class ETTLSessionSettingRoomType ConvertSettingTypeIndexToSettingComment(int32 SettingTypeIndex);
	int32 ConvertSettingTypeIndexToRevision(int32 SettingTypeIndex);
	enum class ETTLPartsType ConvertPartsTypeFromInventoryCategory(enum class ETTLInventoryCategory InventoryCategory);
	enum class ETTLSessionSettingMission ConvertMissionIndexToMission(int32 Index, bool IsCreateRoom);
	enum class ETTLEPartMenuIndex Conv_PartsTypeToPartMenuIndex(enum class ETTLPartsType& PartType);
	enum class ETTLPartsType Conv_PartMenuIndexToPartsType(enum class ETTLEPartMenuIndex& PartMenuIndex);
	void CloseRangeParamToBaseParam(struct FTTLCloseRangeWeaponParamRow& Source, struct FTTLWeaponParamBaseRow* Result);
	void ClientPlayForceFeedback(class UWorld* World, class UForceFeedbackEffect* ForceFeedbackEffect, bool bLooping, class FName Tag);
	void ClearPrevRankMath(class UObject* WorldContextObject);
	bool CheckTriangleVsAABBBox(const struct FVector& TriangleA, const struct FVector& TriangleB, const struct FVector& TriangleC, float TriangleRadius, const struct FVector& AABBBoxOrg, const struct FVector& AABBBoxExt, struct FVector* OutHitLoc);
	bool CheckPartsContainsCanSaleAttachment(struct FTTLArsenalPartsInfo& ArsenalPartsInfo);
	bool CheckPartsContainsCanNotSaleAttachment(struct FTTLArsenalPartsInfo& ArsenalPartsInfo);
	bool CheckPartsContainsAttachment(struct FTTLArsenalPartsInfo& ArsenalPartsInfo);
	bool CheckNewShopPurchaseArmorWeapon(class UObject* WorldContextObject, TArray<struct FTTLArsenalPartsInfo>& AllProductList, bool IsArmor);
	bool CheckNewPartsAttachment(class UObject* WorldContextObject, enum class ETTLEPartMenuIndex PartMenuIndex);
	bool CheckNewDevelopmentParts(class UObject* WorldContextObject, bool IsSecretDevelop, enum class ETTLEPartMenuIndex PartMenuIndex);
	bool CheckNewDevelopmentArmorWeapon(class UObject* WorldContextObject, bool IsSecretDevelop, bool IsArmor);
	bool CheckNewArmorWeaponAttachment(class UObject* WorldContextObject, bool IsArmor);
	bool CheckLastBattleDisconnection(class UObject* World);
	bool CheckHaveNewSurface(class UObject* WorldContextObject);
	bool CheckHaveNewPurchaseParts(class UObject* WorldContextObject, enum class ETTLEPartMenuIndex PartMenuIndex, TArray<struct FTTLArsenalPartsInfo>& AllProductList);
	bool CheckHaveNewParts(class UObject* WorldContextObject, enum class ETTLEPartMenuIndex PartMenuIndex);
	bool CheckHaveNewDecal(class UObject* WorldContextObject);
	bool CheckHaveNewArsenalSkin(class UObject* WorldContextObject);
	bool CheckHaveNewArmorWeapon(class UObject* WorldContextObject, bool IsArmor, TArray<enum class ETTLEPartMenuIndex>& IgnorePartMenuIndex);
	bool CheckCapsuleVsTriangle(class UCapsuleComponent* Capsule, const struct FVector& TriangleA, const struct FVector& TriangleB, const struct FVector& TriangleC, float TriangleRadius, struct FVector* CapsulePoint, struct FVector* TrianglePoint);
	bool CheckCanAccessConsoleInMultiplayReady(enum class ETTLEInteractType CheckType);
	struct FTTLArsenalPartsInfoList ChangePartsInfoListNoWeapon(struct FTTLArsenalPartsInfoList& PartsInfoList);
	struct FTTLArsenalPartsInfoList ChangePartsInfoListForMissionInfo(class UObject* World, struct FTTLArsenalPartsInfoList& PartsInfoList);
	void ChangeCultureRuntime(const class FString& Culture);
	bool CanSellAttachment(class FName& AttachmentID);
	bool CalcWeaponParameterWithAttachmentParameter(struct FTTLWeaponParamRow* OutWeaponParam, struct FTTLAttachmentParameter& AttachmentParameter, bool IsGunArmWeapon);
	bool CalcWeaponParameterWithAttachment(struct FTTLWeaponParamRow* OutWeaponParam, class FName& AttachmentID1, class FName& AttachmentID2, class FName& AttachmentID3, bool IsGunArmWeapon);
	bool CalcWeaponBaseParameterWithAttachmentParameter(struct FTTLWeaponParamBaseRow* OutWeaponParam, struct FTTLAttachmentParameter& AttachmentParameter);
	struct FTTLWeaponParamBaseRow CalcWeaponBaseParameterWithAttachment(struct FTTLWeaponParamBaseRow& InWeaponParam, class FName& AttachmentID1, class FName& AttachmentID2, class FName& AttachmentID3);
	void CalcTotalExtraAttachmentParameter(struct FTTLExtraAttachmentParam& InHeadParam, struct FTTLExtraAttachmentParam& InBodyParam, struct FTTLExtraAttachmentParam& InLeftArmParam, struct FTTLExtraAttachmentParam& InRightArmParam, struct FTTLExtraAttachmentParam& InLegsParam, struct FTTLExtraAttachmentParam& InInsideParam, struct FTTLExtraAttachmentParam& InLeftWeaponParam, struct FTTLExtraAttachmentParam& InRightWeaponParam, struct FTTLExtraAttachmentParam& InShoulderWeaponParam, struct FTTLExtraAttachmentParam& InSupportWeaponParam, struct FTTLExtraAttachmentParam& InLeftRackParam, struct FTTLExtraAttachmentParam& InRightRackParam, struct FTTLExtraAttachmentParam* OutParam);
	bool CalcScreenLocationFromActor(class AActor* TargetActor, struct FVector2D* ScreenLocation);
	struct FVector2D CalcRaderPointPosition(class UObject* World, class AActor* OwnerActor, class UCameraComponent* CameraComponent, enum class EFTTLOptionGameMiniMapType MinimapType, const struct FVector& TargetActorLocation, float Scale, float RaderRadius);
	struct FVector2D CalcRaderDotPosition(class UObject* World, class AActor* OwnerActor, class UCameraComponent* CameraComponent, const struct FVector& TargetLocation);
	void CalcNearestSoftCollisionPositionAndDistance(class AActor* Actor, class ATTLWarningArea* SoftCollision, struct FVector* NearestPosition, float* NearestDistance);
	bool CalcMissileWeaponParameterWithAttachmentParameter(struct FTTLMissileWeaponParamRow* OutWeaponParam, struct FTTLAttachmentParameter& AttachmentParameter);
	bool CalcMissileWeaponParameterWithAttachment(struct FTTLMissileWeaponParamRow* OutWeaponParam, class FName& AttachmentID1, class FName& AttachmentID2, class FName& AttachmentID3);
	struct FRotator CalcLookAtLerpRotator(const struct FRotator& LookAtRotator, const struct FRotator& SelfRotator, float LeapRate, bool RotatePitch);
	bool CalcLegsParameterWithAttachmentParameter(struct FTTLPartsLegsParamRow* OutLegsParam, struct FTTLAttachmentParameter& AttachmentParameter);
	bool CalcLegsParameterWithAttachment(struct FTTLArsenalPartsInfo& InPartsInfo, struct FTTLPartsLegsParamRow* OutParameter);
	bool CalcIntValueWithAttachment(int32* OutValue, struct FTTLAttachmentParameter& AttachmentParameter);
	struct FVector CalcInterpolationLocation(class UObject* WorldContextObject, const struct FVector& NewTargetLocation, const struct FVector& OldTargetLocation, const struct FVector& baseLocation, const struct FVector& OldBaseLocation, float Speed, int32 Mode, bool* OutIsSwirling);
	bool CalcInsideParameterWithAttachmentParameter(struct FTTLPartsInsideParamRow* OutInsideParam, struct FTTLAttachmentParameter& AttachmentParameter);
	bool CalcInsideParameterWithAttachment(struct FTTLArsenalPartsInfo& InPartsInfo, struct FTTLPartsInsideParamRow* OutParameter);
	float CalcInGameAttackCorrection(float Input, bool IsAddValue);
	bool CalcHeadParameterWithAttachmentParameter(struct FTTLPartsHeadParamRow* OutHeadParam, struct FTTLAttachmentParameter& AttachmentParameter);
	bool CalcHeadParameterWithAttachment(struct FTTLArsenalPartsInfo& InPartsInfo, struct FTTLPartsHeadParamRow* OutParameter);
	bool CalcFloatValueWithAttachment(float* OutValue, struct FTTLAttachmentParameter& AttachmentParameter);
	struct FVector CalcDeviationShootingLocation(class AActor* TargetActor, const struct FVector& MuzzleLocation, float BulletSpeed, float ClampTargetSpeed, class AActor* BulletOwner, float OuterDelayTime, float AddPredictTime);
	bool CalcCloseRangeWeaponParameterWithAttachmentParameter(struct FTTLCloseRangeWeaponParamRow* OutWeaponParam, struct FTTLAttachmentParameter& AttachmentParameter);
	bool CalcCloseRangeWeaponParameterWithAttachment(struct FTTLCloseRangeWeaponParamRow* OutWeaponParam, class FName& AttachmentID1, class FName& AttachmentID2, class FName& AttachmentID3);
	bool CalcBodyParameterWithAttachmentParameter(struct FTTLPartsBodyParamRow* OutBodyParam, struct FTTLAttachmentParameter& AttachmentParameter);
	bool CalcBodyParameterWithAttachment(struct FTTLArsenalPartsInfo& InPartsInfo, struct FTTLPartsBodyParamRow* OutParameter);
	float CalcBetweenRad(const struct FVector& MyLocation, const struct FVector& MyForwardVector, const struct FVector& TargetLocation);
	float CalcBetweenDegree3D(const struct FVector& MyForwardVector, const struct FVector& TargetVector);
	float CalcBetweenDegree(const struct FVector& MyLocation, const struct FVector& MyForwardVector, const struct FVector& TargetLocation);
	bool CalcArmRightParameterWithAttachmentParameter(struct FTTLPartsArmRightParamRow* OutArmRightParam, struct FTTLAttachmentParameter& AttachmentParameter, bool IsGunArm);
	bool CalcArmRightParameterWithAttachment(struct FTTLArsenalPartsInfo& InPartsInfo, struct FTTLPartsArmRightParamRow* OutParameter);
	bool CalcArmLeftParameterWithAttachmentParameter(struct FTTLPartsArmLeftParamRow* OutArmLeftParam, struct FTTLAttachmentParameter& AttachmentParameter, bool IsGunArm);
	bool CalcArmLeftParameterWithAttachment(struct FTTLArsenalPartsInfo& InPartsInfo, struct FTTLPartsArmLeftParamRow* OutParameter);
	bool BlockCollisionByCharacterType(class AActor* Instigator, class UPrimitiveComponent* ComponentToSet);
	void ApplyNextMercenaryRank(class UObject* WorldContextObject);
	void AddSkillFromList(TArray<class FName>& InputSkillList, class UTTLBasicStatusComponent* TargetStatus, bool UseAddValue, bool SkillActivateImmediately, bool IsDoubleIceSkill, float IceDoubleValue, bool SkipVP);
	void AddBossDropRewardToInventory(class UObject* WorldContext, class FName& BossID, enum class ETTLBossDropType Type, int32 Index, enum class ETTLEAbnormalStatusType AbnormalStatusType);
	void AddAttachmentToParts(struct FTTLArsenalPartsInfo* PartsToAdd, class FName AttachmentID, int32 Slot);
};

// 0x0 (0x28 - 0x28)
// Class DXM.TTLBreakableBrokenInterface
class ITTLBreakableBrokenInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ITTLBreakableBrokenInterface* GetDefaultObj();

};

// 0x190 (0x4D0 - 0x340)
// Class DXM.TTLBreakableObjectActor
class ATTLBreakableObjectActor : public ATTLActor
{
public:
	uint8                                        Pad_2020[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsBeginDestoryAndVisibleOff;                       // 0x350(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2021[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLLayoutSetting                     LayoutSetting;                                     // 0x358(0x30)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UTTLObjectStatusComponent*             ObjectStatus;                                      // 0x388(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          DamageParameter;                                   // 0x390(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLRaderTargetComponent*              RaderTargetComponent;                              // 0x398(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLTargetObjComponent*                TargetObjComponent;                                // 0x3A0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AfterObjDisplayTime;                               // 0x3A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsForceNoVisibleBeforeObjAtBroken;                 // 0x3AC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2025[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UNavModifierComponent*                 NavModifier;                                       // 0x3B0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsAfterObjRelevantNavMesh;                         // 0x3B8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2026[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TackleVelocityThreshold;                           // 0x3BC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  InsuranceExpenseId;                                // 0x3C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLInsuranceType                 InsuranceType;                                     // 0x3C8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsVisibleOFFImmediately;                           // 0x3C9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LockOn_Enabled;                                    // 0x3CA(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDrawAtBroken;                                    // 0x3CB(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2028[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UTTLBreakObjBeforeComponent*>   BeforeObjs;                                        // 0x3D0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UTTLBreakObjAfterComponent*>    AfterObjs;                                         // 0x3E0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UTTLBreakObjDebrisComponent*>   DebrisObjs;                                        // 0x3F0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UTTLBreakObjPhysDebrisComponent*> PhysDebrisObjs;                                    // 0x400(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UTTLBreakObjChildActorComponent*> ChildObjs;                                         // 0x410(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FTTLFxPlayback>                DebrisFxPlaybacks;                                 // 0x420(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UTTLBreakObjWeakPointComponent*> WeakObjs;                                          // 0x430(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class ATTLObjectLockonTargetActor*>   WeakTargets;                                       // 0x440(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<TWeakObjectPtr<class AActor>>         InvolvedCannons;                                   // 0x450(0x10)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                        Pad_202C[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLBreakableSpawnActorInfo>   SpawnAcorInfo;                                     // 0x480(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLBreakableObjectSpawnActorInfo> SpawnAcorInfoAtBreaking;                           // 0x490(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                  DropCharacterID;                                   // 0x4A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLFieldBulletItem>       BulletItemClass;                                   // 0x4A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTTLBreakableObjectSpawnActorInfo_Femto> SpawnAcorInfoAtBreaking_Femto;                     // 0x4B0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         IsEnableAutoHeal;                                  // 0x4C0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_202E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HealValuePerSec;                                   // 0x4C4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DisableAutoHealTimingWithHPRatio;                  // 0x4C8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDrawDisableAutoHeal;                             // 0x4CC(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsCalculationOfCenterSocket;                       // 0x4CD(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_202F[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBreakableObjectActor* GetDefaultObj();

	void RunOnServerStartBreak(class AActor* DamageCauser, const struct FVector& HitLocation);
	void OnTakePointDamageDelegate(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& ShotFromDirection, class UDamageType* DamageType, class AActor* DamageCauser);
	void OnTakeAnyDamageDelegate(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void OnStatusDeadDelegate(class AActor* DamageCauser, struct FVector& HitLocation);
	void OnActorHitDelegate(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void MulticastStartBreak(class AActor* DamageCauser, const struct FVector& HitLocation);
	void ForceBrake(bool IsVisible);
};

// 0x10 (0x600 - 0x5F0)
// Class DXM.TTLBreakObjAfterComponent
class UTTLBreakObjAfterComponent : public UStaticMeshComponent
{
public:
	bool                                         DoesShowImmediately;                               // 0x5F0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2031[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBreakObjAfterComponent* GetDefaultObj();

};

// 0xA0 (0x690 - 0x5F0)
// Class DXM.TTLBreakObjBeforeComponent
class UTTLBreakObjBeforeComponent : public UStaticMeshComponent
{
public:
	struct FTTLFxParam                           FxBreak;                                           // 0x5F0(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  SocketName;                                        // 0x688(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLBreakObjBeforeComponent* GetDefaultObj();

};

// 0x0 (0x270 - 0x270)
// Class DXM.TTLBreakObjChildActorComponent
class UTTLBreakObjChildActorComponent : public UChildActorComponent
{
public:

	static class UClass* StaticClass();
	static class UTTLBreakObjChildActorComponent* GetDefaultObj();

};

// 0x1E8 (0xD80 - 0xB98)
// Class DXM.TTLBreakObjDebrisComponent
class UTTLBreakObjDebrisComponent : public USkeletalMeshComponent
{
public:
	struct FTTLFxParam                           FxDebris;                                          // 0xB98(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxModuleParameters                FxDebrisModuleParameters;                          // 0xC30(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxGrounded;                                        // 0xC50(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxModuleParameters                FxGroundedModuleParameters;                        // 0xCE8(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         DoesCheckGround;                                   // 0xD08(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2035[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  CheckGroundSocketName;                             // 0xD10(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               CheckGroundOffset;                                 // 0xD18(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2037[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimationAsset*                       GroundedAnimation;                                 // 0xD28(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        DamagedActors;                                     // 0xD30(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                GroundedMesh;                                      // 0xD40(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2038[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBreakObjDebrisComponent* GetDefaultObj();

	void OnComponentBeginOverlapDelegate(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0xD0 (0x6C0 - 0x5F0)
// Class DXM.TTLBreakObjPhysDebrisComponent
class UTTLBreakObjPhysDebrisComponent : public UStaticMeshComponent
{
public:
	struct FTTLFxParam                           FxDebris;                                          // 0x5F0(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxModuleParameters                FxDebrisModuleParameters;                          // 0x688(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        LifeTime;                                          // 0x6A8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PhysicalPowerRatio;                                // 0x6AC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2039[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBreakObjPhysDebrisComponent* GetDefaultObj();

};

// 0x60 (0x650 - 0x5F0)
// Class DXM.TTLBreakObjWeakPointComponent
class UTTLBreakObjWeakPointComponent : public UStaticMeshComponent
{
public:
	struct FTTLLayoutSetting                     LayoutSetting;                                     // 0x5F0(0x30)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLObjectStatusParameters            ObjectStatusParameters;                            // 0x620(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLBreakObjLockonSetting             LockonSetting;                                     // 0x640(0xC)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_203B[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBreakObjWeakPointComponent* GetDefaultObj();

};

// 0x48 (0x70 - 0x28)
// Class DXM.TTLBufferReadWriter
class UTTLBufferReadWriter : public UObject
{
public:
	uint8                                        Pad_2044[0x48];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBufferReadWriter* GetDefaultObj();

	void SetTransform(const struct FTransform& Transform);
	void SetFOV(float FieldOfView);
	bool SaveToBinary(const class FString& Filename);
	bool LoadFromBinary(const class FString& Filename);
	struct FTransform GetTransform();
	float GetFOV();
};

// 0x6C0 (0xAF8 - 0x438)
// Class DXM.TTLBulletBase
class ATTLBulletBase : public ATTLProjectileBase
{
public:
	float                                        InitialSpeed;                                      // 0x438(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceIgnoreGravity;                             // 0x43C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Range;                                             // 0x440(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageAttenuate;                                   // 0x444(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GravityScale;                                      // 0x448(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CriticalStartDistance;                             // 0x44C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CriticalEndDistance;                               // 0x450(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CriticalBonusScale;                                // 0x454(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BulletSlowDownSpeedOnGravity;                      // 0x458(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2056[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           FxHitNormal;                                       // 0x460(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxHitShield;                                       // 0x4F8(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxHitMetal;                                        // 0x590(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxHitMetalPlayer;                                  // 0x628(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxHitWeaponShield;                                 // 0x6C0(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxRepelled;                                        // 0x758(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxCritical;                                        // 0x7F0(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        TravelledDistance;                                 // 0x888(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpeedZ;                                            // 0x88C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentGravityScale;                               // 0x890(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               OldPosition;                                       // 0x894(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETTLEStatusType                   Type;                                              // 0x8A0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_205A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               bulletDirection;                                   // 0x8A4(0xC)(IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_205B[0x78];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BulletLength;                                      // 0x928(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         NeedsIgnoringOwner;                                // 0x92C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_205D[0x13];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           FxTrailEffect;                                     // 0x940(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           FxLeftBehindEffect;                                // 0x9D8(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        FxTrailPlayback;                                   // 0xA70(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        FxLeftBehindlPlayback;                             // 0xA88(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTransform                            TrailOffsetTransform;                              // 0xAA0(0x30)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                         NeedsEnvironmentFx;                                // 0xAD0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsMeshRotateForced;                                // 0xAD1(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_205F[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              MeshRotate;                                        // 0xAD4(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UStaticMesh*                           ChargeMaxMesh;                                     // 0xAE0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                           DefaultMesh;                                       // 0xAE8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2060[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBulletBase* GetDefaultObj();

	void UpdateTranslateParameter(const struct FVector& TargetPos);
	void TickFirehrowerBall(float DeltaSeconds, float ExpansionRate);
	void SetFireThrowerBallSettings(float MinRandRate, float MaxRandRate, float DelayDistance);
	void OnBulletOverlap(class AActor* OverlapperdActor, class AActor* OtherActor);
	void OnBulletHit(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void MoveBullet(float DeltaSeconds);
	bool IsCritical();
	void InitializeProjectileBP();
	void FinalizeProjectileBP();
	float CalcActualDamage(float DamageBeforeCalc);
	void BulletExplode(struct FHitResult& HitResult);
};

// 0x10 (0x58 - 0x48)
// Class DXM.TTLCameraModifier
class UTTLCameraModifier : public UCameraModifier
{
public:
	uint8                                        Pad_2064[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLCameraModifier* GetDefaultObj();

};

// 0x58 (0x80 - 0x28)
// Class DXM.TTLCameraShakeManager
class UTTLCameraShakeManager : public UObject
{
public:
	TArray<struct FTTLCameraShakeInfo>           CameraShakeInfoList;                               // 0x28(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UDataTable*>                    CameraShakeDataTableList;                          // 0x38(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2091[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLCameraShakeManager* GetDefaultObj();

	void UnloadCameraShakeDataTable(const class FString& Path);
	bool StopCameraShake(int32 UniqueHandle, float Time);
	void StopAllCameraShake(float Time);
	bool SetShakeScale(int32 UniqueHandle, float Scale);
	int32 PlayWorldCameraShake(class FName DataName, const struct FVector& Epicenter, float InnerRadius, float OuterRadius, float Falloff, bool bOrientShakeTowardsEpicenter);
	bool PlayOneShotWorldCameraShake2(class FName DataName, const struct FVector& Epicenter, float InnerRadius, float OuterRadius, float UpperScale, float LowerScale, bool bOrientShakeTowardsEpicenter);
	bool PlayOneShotWorldCameraShake(class FName DataName, const struct FVector& Epicenter, float InnerRadius, float OuterRadius, float Falloff, bool bOrientShakeTowardsEpicenter);
	bool PlayOneShotCameraShake(class FName DataName, float Scale);
	int32 PlayCameraShake_WithTag(class FName DataName, class FName& TagName, float Scale);
	int32 PlayCameraShake(class FName DataName, float Scale);
	class UDataTable* LoadCameraShakeDataTable(const class FString& Path);
	bool FindCameraShakeData(class FName Name, struct FTTLCameraShakeParamRow* OutData);
};

// 0x0 (0x88 - 0x88)
// Class DXM.TTLCameraShakeParam
class UTTLCameraShakeParam : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UTTLCameraShakeParam* GetDefaultObj();

};

// 0x728 (0xFF8 - 0x8D0)
// Class DXM.TTLOuterAnimInstance
class UTTLOuterAnimInstance : public UTTLArsenalAnimInstance
{
public:
	class UAnimMontage*                          GetoffMontage;                                     // 0x8D0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsOuterSettingTrap;                                // 0x8D8(0x1)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsOuterExplosionCharging;                          // 0x8D9(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20BD[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsOuterRepairing;                                  // 0x8DB(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20BE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          RepairMontage_M;                                   // 0x8E0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          RepairMontage_W;                                   // 0x8E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          RepairMontage_Display;                             // 0x8F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20C0[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          PunchThrowMontage_M;                               // 0x908(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          PunchThrowMontage_W;                               // 0x910(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          GrenadeThrowMontage_M;                             // 0x918(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          GrenadeThrowMontage_W;                             // 0x920(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          GrenadeThrowLoopMontage_M;                         // 0x928(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          GrenadeThrowLoopMontage_W;                         // 0x930(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          AirGrenadeThrowMontage_M;                          // 0x938(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          AirGrenadeThrowMontage_W;                          // 0x940(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          AirGrenadeThrowLoopMontage_M;                      // 0x948(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          AirGrenadeThrowLoopMontage_W;                      // 0x950(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GrenadeTurnRate;                                   // 0x958(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20C6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimSequence*                         EjectMotion;                                       // 0x960(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxRunReferencePitchAngle;                         // 0x968(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxFlyReferencePitchAngle;                         // 0x96C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              MotionYawStartValue;                               // 0x970(0xC)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         OldNeedCalcMotionYaw;                              // 0x97C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20C7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               LastVelocity;                                      // 0x980(0xC)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsInBaseCamp;                                      // 0x98C(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20C9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        IsInterpMotionYaw;                                 // 0x990(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDashEnd;                                         // 0x994(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsQuickMoveTurn;                                   // 0x995(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsOuterDamageFaceUp;                               // 0x996(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsAttackingOuterBlade;                             // 0x997(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         OldIsAttackingOuterBlade;                          // 0x998(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         OuterJumpCharging;                                 // 0x999(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         NeedLandingMotion;                                 // 0x99A(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         OuterFlying;                                       // 0x99B(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLOuterFlyState                 OuterFlyState;                                     // 0x99C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20CB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  HeadID;                                            // 0x9A0(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LeftHandID;                                        // 0x9A8(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RightHandID;                                       // 0x9B0(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEOuterThrowPhase              ThrowPhase;                                        // 0x9B8(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsPunchThrow;                                      // 0x9B9(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20CC[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              OuterThrowSpineOffset;                             // 0x9BC(0xC)(BlueprintVisible, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              OuterThrowSpine1Offset;                            // 0x9C8(0xC)(BlueprintVisible, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              OuterThrowSpine2Offset;                            // 0x9D4(0xC)(BlueprintVisible, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              OuterRunHipOffset;                                 // 0x9E0(0xC)(BlueprintVisible, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_20CD[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsMale;                                            // 0x9F4(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20CF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLOuterBoneTransform>        BoneTransforms;                                    // 0x9F8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetHips;                                    // 0xA08(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetSpine;                                   // 0xA14(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetSpine1;                                  // 0xA20(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetSpine2;                                  // 0xA2C(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetNeck;                                    // 0xA38(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetHead;                                    // 0xA44(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetMouth;                                   // 0xA50(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetLid;                                     // 0xA5C(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetRightUpLeg;                              // 0xA68(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetRightLeg;                                // 0xA74(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetRightFoot;                               // 0xA80(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetRightToeBase;                            // 0xA8C(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetLeftUpLeg;                               // 0xA98(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetLeftLeg;                                 // 0xAA4(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetLeftFoot;                                // 0xAB0(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetLeftToeBase;                             // 0xABC(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetRightShoulder;                           // 0xAC8(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetRightArm;                                // 0xAD4(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetRightForeArm;                            // 0xAE0(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetRightHand;                               // 0xAEC(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetLeftShoulder;                            // 0xAF8(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetLeftArm;                                 // 0xB04(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetLeftForeArm;                             // 0xB10(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneOffsetLeftHand;                                // 0xB1C(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        OuterJumpCount;                                    // 0xB28(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageLoopBlendTime;                               // 0xB2C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsGettingOff;                                      // 0xB30(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsGetOn;                                           // 0xB31(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsOuterEjecting;                                   // 0xB32(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsOuterEjectForward;                               // 0xB33(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20D6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UAnimationAsset>        MaleLeftHandAnimationList[0x3];                    // 0xB38(0x78)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimationAsset>        FemaleLeftHandAnimationList[0x3];                  // 0xBB0(0x78)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimationAsset>        MaleRightHandAnimationList[0x3];                   // 0xC28(0x78)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimationAsset>        FemaleRightHandAnimationList[0x3];                 // 0xCA0(0x78)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LeftFootLocation;                                  // 0xD18(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RightFootLocation;                                 // 0xD24(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               HipTranslationCorrection;                          // 0xD30(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LeftFootLookAtLocation;                            // 0xD3C(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RightFootLookAtLocation;                           // 0xD48(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsNeedIK;                                          // 0xD54(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEveryTimeIK;                                     // 0xD55(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsUseIKController;                                 // 0xD56(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsUseIKControllerJustStop;                         // 0xD57(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsRayEndByMissRay;                                 // 0xD58(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20DC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        IKInterpSpeed;                                     // 0xD5C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IKInterpSpeedLookAt;                               // 0xD60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IKInterpSpeedLookAtRatio;                          // 0xD64(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IKInterpSpeedLookAtRatioTime;                      // 0xD68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IKMissRayInterpSpeed;                              // 0xD6C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSearchLengthUnique;                              // 0xD70(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20DF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        UpSearchLengthIK;                                  // 0xD74(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BottomSearchLengthIK;                              // 0xD78(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ToeOffsetPowerForRay;                              // 0xD7C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDebugDrawIK;                                     // 0xD80(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20E3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        IKDebugDrawThickness;                              // 0xD84(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IKDebugBoxSize;                                    // 0xD88(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20E6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  HipSocketName;                                     // 0xD90(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OffsetPowerFromHip;                                // 0xD98(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoxTraceHalfSize;                                  // 0xD9C(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        IKUpdateFlameNum;                                  // 0xDA8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsCapsuleRay;                                      // 0xDAC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDrawDebugCapsuleRay;                             // 0xDAD(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20E7[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CapsuleRayHeight;                                  // 0xDB0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20E8[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsDebugDrawFootCamera;                             // 0xDB5(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20EA[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UTextureRenderTarget2D> RenderTarget;                                      // 0xDB8(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTextureRenderTarget2D> RenderTarget2;                                     // 0xDE0(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>               WidgetClassPtr;                                    // 0xE08(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxFootLocationHeight;                             // 0xE10(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinFootLocationHeight;                             // 0xE14(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxHipLocationHeight;                              // 0xE18(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinHipLocationHeight;                              // 0xE1C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDebugDrawRestrictLocation;                       // 0xE20(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsInterpChange;                                    // 0xE21(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20ED[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxInterpValue;                                    // 0xE24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinInterpValue;                                    // 0xE28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinInterpLimit;                                    // 0xE2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxInterpLimit;                                    // 0xE30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnAnimationPlayRate;                             // 0xE34(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20F0[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UAnimMontage>           OuterExplosionMontageMale;                         // 0xE50(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimMontage>           OuterExplosionMontageFemale;                       // 0xE78(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimMontage>           OuterAirExplosionMontageMale;                      // 0xEA0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimMontage>           OuterAirExplosionMontageFemale;                    // 0xEC8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20F1[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsDrawBoxTrace;                                    // 0xEFC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDrawFloatHistory;                                // 0xEFD(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20F2[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FloatHistoryMax;                                   // 0xF00(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FloatHistoryMin;                                   // 0xF04(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FloatHistorySampleRange;                           // 0xF08(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BreastShakeRate;                                   // 0xF0C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDebugDrawDisplay_AnimAndMovement;                // 0xF10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20F4[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UUserWidget*                           RenderTargetWidget;                                // 0xF18(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           RenderTargetWidgetLeft;                            // 0xF20(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLIKControoler*                      IkController;                                      // 0xF28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLHistoryGraphDraw*                  GraphLeftFoot;                                     // 0xF30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLHistoryGraphDraw*                  GraphRightFoot;                                    // 0xF38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20F5[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ETTLEOuterHandAnimationState      HandAnimationState;                                // 0xF88(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20F6[0x17];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponent*                OwnerLeftHandMesh;                                 // 0xFA0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USkeletalMeshComponent*                OwnerRightHandMesh;                                // 0xFA8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimationAsset*                       LeftHandMotion;                                    // 0xFB0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimationAsset*                       RightHandMotion;                                   // 0xFB8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimationAsset*                       LeftHandMotionBeforeEmote;                         // 0xFC0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimationAsset*                       RightHandMotionBeforeEmote;                        // 0xFC8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_20FA[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLOuterAnimInstance* GetDefaultObj();

	bool UpdateGender(class AActor* Actor);
	void SetDisplayMesh(class USkeletalMeshComponent* Mesh);
	bool Rule_IsChangeStateMovingToWait();
	bool Rule_IsChangeStateEndRollingFromOuterBlade();
	bool Rule_ChangeStateLandingToMoveForCancel();
	bool Rule_ChangeStateFallingToNeutralLanding();
	bool Rule_ChangeStateFallingToLandingRun();
	bool Rule_ChangeStateFallingToLandingNoMotion();
	bool Rule_ChangeStateDashStopToWait();
	bool Rule_ChangeStateAirTurnToMove();
	void ProcessOuterBlade();
	void ProcessGetOffAnimation();
	void PlayRightHandAnimation();
	void PlayLeftHandAnimation();
	void OuterBladeSetCollide(bool IsEnabled);
	void OnFinishedDamageReaction(enum class ETTLDamageState PrevDamageStage);
	void GetOuterPartsMesh(class AActor* Actor);
	float GetInterpSpeedForLookAt();
	float GetInterpSpeed();
	void EnableFootIKOverFlow();
	void DisavleFootIKOverFlow();
	void CalcThrowingSpineOffset(class AActor* Actor);
	void AnimNotify_StartOuterBlade(class UAnimNotify* Notify);
	void AnimNotify_StartHeal(class UAnimNotify* Notify);
	void AnimNotify_PlayOuterRollingVFX(class UAnimNotify* Notify);
	void AnimNotify_PlayKnockOutVFX(class UAnimNotify* Notify);
	void AnimNotify_PlayJumpRollingLandVFX(class UAnimNotify* Notify);
	void AnimNotify_OuterJumpLaunch(class UAnimNotify* Notify);
	void AnimNotify_OuterGetOffEnd();
	void AnimNotify_EndOuterPunchUnFire(class UAnimNotify* Notify);
	void AnimNotify_EndOuterBlade(class UAnimNotify* Notify);
	void AnimNotify_EndDamage(class UAnimNotify* Notify);
};

// 0x8 (0x1000 - 0xFF8)
// Class DXM.TTLCampCharacterAnimInstance
class UTTLCampCharacterAnimInstance : public UTTLOuterAnimInstance
{
public:
	uint8                                        Pad_20FF[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLCampCharacterAnimInstance* GetDefaultObj();

};

// 0xE0 (0x820 - 0x740)
// Class DXM.TTLCampCharacterBase
class ATTLCampCharacterBase : public ACharacter
{
public:
	bool                                         HaveCustomInfo;                                    // 0x740(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEHumanGenderType              HumanCustomGender;                                 // 0x741(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2114[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLHumanCustomPartsInfo              HumanCustomPartsInfo;                              // 0x744(0x94)(Edit, BlueprintVisible, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                     AnimationToPlay;                                   // 0x7D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                     FaceAnimationToPlay;                               // 0x7E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                      PlayVoiceSphereComponent;                          // 0x7E8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                      StopVoiceSphereComponent;                          // 0x7F0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2116[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLCampNPCPlayVoiceInfo>      VoicePlayInfoList;                                 // 0x800(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2118[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLOuterHeadAnimInstance*             HeadAnimInst;                                      // 0x818(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ATTLCampCharacterBase* GetDefaultObj();

	void VoiceStopCollision_OnOverlapEnd(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void VoiceStopCollision_OnOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void VoicePlayCollision_OnOverlapEnd(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void VoicePlayCollision_OnOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x18 (0x340 - 0x328)
// Class DXM.TTLCampNPCVoiceActor
class ATTLCampNPCVoiceActor : public AActor
{
public:
	TSubclassOf<class UUserWidget>               Class_TalkWindowWidget;                            // 0x328(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           NPCTalkWindow;                                     // 0x330(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLOuterHeadAnimInstance*             SpeakingHeadAnimInstance;                          // 0x338(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ATTLCampNPCVoiceActor* GetDefaultObj();

	void OnUpdateHeadAnimInstance(class UTTLOuterHeadAnimInstance* SetanimInstance);
	void OnTalkWindowSetup();
	void OnTalkWindowSetText(class FText SetText);
	void OnTalkWindowChangeVisibility(bool IsVisible);
	void OnStopLipSync();
};

// 0x20 (0x150 - 0x130)
// Class DXM.TTLCapsuleAvoidanceComponent
class UTTLCapsuleAvoidanceComponent : public UTTLObstacleAvoidanceComponent
{
public:
	class FName                                  CapsuleTag;                                        // 0x130(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_211F[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLCapsuleAvoidanceComponent* GetDefaultObj();

};

// 0x78 (0x168 - 0xF0)
// Class DXM.TTLCaptureWeaponComponent
class UTTLCaptureWeaponComponent : public UActorComponent
{
public:
	enum class ETTLCaptureWeaponType             CptWpnType;                                        // 0xF0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2123[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  AccessPointSocketName;                             // 0xF8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AccessRange;                                       // 0x100(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2124[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UUserWidget>               AccessPoint_UIClass;                               // 0x108(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AccessPoint_DisplayRadius;                         // 0x110(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             AccessPoint_DisplayOffset;                         // 0x114(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2125[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UUserWidget*                           AccessPoint_UI;                                    // 0x120(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UWidget*>                       AccessPoint_WidgetList;                            // 0x128(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      AccessPoint_WidgetAnimation;                       // 0x138(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2126[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLCharacterCommon*                   UserChr;                                           // 0x148(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                    HUDClass;                                          // 0x150(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2127[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLCaptureWeaponComponent* GetDefaultObj();

	bool StartControl();
	void StartCheckAccessOnPressed();
	bool SetRelease();
	bool SetAccessSpeed(float Speed);
	bool Player_StartAttack();
	bool Player_StartAiming();
	void Player_StartAccess(class ATTLCharacterCommon* Player);
	void Player_Process(float DeltaSeconds);
	bool Player_EndAccess();
	void Player_CancelAccess();
	void OnMissionExtensionTimeFinished();
	struct FRotator GetMuzzleRotation();
	struct FVector GetMuzzleLocation();
	struct FVector GetAccessPointLocation();
	bool CanStartAccess(class ATTLCharacterCommon* User);
	bool Attack();
	void AccessPoint_UpdateUI(float DeltaSeconds);
	void AccessPoint_SetDraw(bool Enable);
	void AccessPoint_DestroyUI();
	bool AccessPoint_CreateUI();
};

// 0x50 (0x390 - 0x340)
// Class DXM.TTLCatchableActorBase
class ATTLCatchableActorBase : public ATTLActor
{
public:
	uint8                                        Pad_212A[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsRegisterMission;                                 // 0x368(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanOnlyDeleteFromGravityGun;                       // 0x369(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_212B[0x1E];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        ObjectType;                                        // 0x388(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_212C[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLCatchableActorBase* GetDefaultObj();

	void OnCollisionEvent(class AActor* OtherActor, struct FHitResult& HitResult);
	void OnCatchableActorHitDelegate(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void HitDelayEvent(class AActor* OtherActor, struct FHitResult& HitResult);
	bool CheckHitWater(struct FHitResult& HitResult);
};

// 0x890 (0x988 - 0xF8)
// Class DXM.TTLCatchableActorComponent
class UTTLCatchableActorComponent : public UTTLActorComponent
{
public:
	UMulticastDelegateProperty_                  OnGrenadeExtinction;                               // 0xF8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, BlueprintCallable, NativeAccessSpecifierProtected)
	uint8                                        Pad_2141[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnCaughtBy;                                        // 0x118(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnThrow;                                           // 0x128(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnSetCollision;                                    // 0x138(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnSetCollisionSklMesh;                             // 0x148(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	struct FTTLObjectStatusResistParameter       DamageResistParamter;                              // 0x158(0x10)(Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	enum class ETTCatchableActorType             CatchableType;                                     // 0x168(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2142[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  CatchSocketNameLeftForTransport;                   // 0x170(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  CatchSocketNameRightForTransport;                  // 0x178(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ForwardOffsetPowerForPutLocationForTransport;      // 0x180(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               PutLocationForTransport;                           // 0x184(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               StartLocationForTransport;                         // 0x190(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              PutRotatorForTransport;                            // 0x19C(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                              StartRotatorForTransport;                          // 0x1A8(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        RotatorOffsetForTransport;                         // 0x1B4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LocationOffsetForTransport;                        // 0x1B8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PositionTimeForTransport;                          // 0x1BC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2143[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RotatorTimeForTransport;                           // 0x1C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2144[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               OffsetLocationByPuttingStart;                      // 0x1CC(0xC)(Edit, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsPutingForTransport;                              // 0x1D8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsAddInsuranceExpense;                             // 0x1D9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2145[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  InsuranceExpenseId;                                // 0x1E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsForceExplosion;                                  // 0x1E8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsExplosionAtTransport;                            // 0x1E9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2146[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CollisionCheckCount;                               // 0x1EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CollisionCheckRadius;                              // 0x1F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsDebugDrawDetectCollision;                        // 0x1F4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2147[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsEnabled;                                         // 0x1FC(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2148[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ThrowLifeTime;                                     // 0x200(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsThrowed;                                         // 0x204(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsThrowHit;                                        // 0x205(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2149[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               ThrowVelocity;                                     // 0x208(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ThrowRotateSpeed;                                  // 0x214(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ThrowLifeTimeForCalcVelocity;                      // 0x218(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsCaught;                                          // 0x21C(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_214A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Hp;                                                // 0x220(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDestroyed;                                       // 0x224(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_214B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  CurrentCollisionProfileName;                       // 0x228(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsOnceCaught;                                      // 0x230(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsExploded;                                        // 0x231(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_214C[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LifeTimeAfterExplodeAir;                           // 0x234(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                ActorUser;                                         // 0x238(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                BreakableActor;                                    // 0x240(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  OverrideParameterID;                               // 0x248(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               DefaultGravity;                                    // 0x250(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefaultHP;                                         // 0x25C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Damage;                                            // 0x260(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxThrowLifeTime;                                  // 0x264(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Gravity;                                           // 0x268(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InitialSpinSpeed;                                  // 0x274(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeaponID;                                          // 0x278(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsGrenadeBullet;                                   // 0x280(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsWeapon;                                          // 0x281(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsPickable;                                        // 0x282(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLCatchableActorCatchMotionType CatchMotionType;                                   // 0x283(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SecondsPerFrame;                                   // 0x284(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LockOnTag;                                         // 0x288(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RefLockOnTag;                                      // 0x290(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnabledLockOn;                                   // 0x298(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_214D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  CollisionProfileNameThrown;                        // 0x2A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FrontSocketName;                                   // 0x2A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BackSocketName;                                    // 0x2B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CollisionProfileNameNormal;                        // 0x2B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CollisionProfileNameGrenameThrown;                 // 0x2C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CollisionProfileNameGrenadeNormal;                 // 0x2C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BulletSpeed;                                       // 0x2D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScaleOnDefault;                                    // 0x2D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScaleOnCatching;                                   // 0x2D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScaleOnThrown;                                     // 0x2DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxCatch;                                           // 0x2E0(0x98)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class FName>                          AttachSocketNames;                                 // 0x378(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FTTLInsuranceContainer                InsuranceContainer;                                // 0x388(0x30)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	TSoftClassPtr<class ATTLHeatSourceObject>    HeatSourceClassOnDestroyLand;                      // 0x3B8(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLHeatSourceParameter               HeatSourceParamOnDestroyLand;                      // 0x3E0(0x2C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_214E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVector>                       HeatSourceGenParamOnDestroyLand;                   // 0x410(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftClassPtr<class ATTLHeatSourceObject>    HeatSourceClassOnDestroyAir;                       // 0x420(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLHeatSourceParameter               HeatSourceParamOnDestroyAir;                       // 0x448(0x2C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_214F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVector>                       HeatSourceGenParamOnDestroyAir;                    // 0x478(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         EnableExplodeLand;                                 // 0x488(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2150[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class ATTLExplosionActor>      ExplosionClassOnLand;                              // 0x490(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEAbnormalStatusType           ExplodeAbnormalTypeLand;                           // 0x4B8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2151[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ExplodeAbnormalValueLand;                          // 0x4BC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeDamageLand;                                 // 0x4C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeKnockOutLand;                               // 0x4C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeKnockBackLand;                              // 0x4C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeRadiusLand;                                 // 0x4CC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeTimeLand;                                   // 0x4D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeTmpRiseLand;                                // 0x4D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeMinDamageScaleLand;                         // 0x4D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxExplodeDamageRadiusLand;                        // 0x4DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeExplodeAbnormalValueLand;                   // 0x4E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeWhiteOutContinuationTimeLand;               // 0x4E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableExplodeFriendlyFireOnLand;                   // 0x4E8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2152[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ExplodeTMPRiseOnAbnormalSpaceLand;                 // 0x4EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeAddValueOnAbnormalSpaceLand;                // 0x4F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeAbnormalSpaceContinuationTimeLand;          // 0x4F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeAbnormalSpaceRadiusLand;                    // 0x4F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeAbnormalSpaceAppearDelayLand;               // 0x4FC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeAbnormalSpaceAppearTimeLand;                // 0x500(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeAbnormalSpaceDisappearTimeLand;             // 0x504(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeHealVPValueLand;                            // 0x508(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeHealAbnormalStatusRateLand;                 // 0x50C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeHealPartsHPValueLand;                       // 0x510(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeWeakHealRateLand;                           // 0x514(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeWeakHealContinuationTimeLand;               // 0x518(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableExplodeAir;                                  // 0x51C(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2153[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class ATTLExplosionActor>      ExplosionClassOnAir;                               // 0x520(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEAbnormalStatusType           ExplodeAbnormalTypeAir;                            // 0x548(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2154[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ExplodeAbnormalValueAir;                           // 0x54C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeDamageAir;                                  // 0x550(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeKnockOutAir;                                // 0x554(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeKnockBackAir;                               // 0x558(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeRadiusAir;                                  // 0x55C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeTimeAir;                                    // 0x560(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeTmpRiseAir;                                 // 0x564(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeMinDamageScaleAir;                          // 0x568(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxExplodeDamageRadiusAir;                         // 0x56C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeExplodeAbnormalValueAir;                    // 0x570(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeWhiteOutContinuationTimeAir;                // 0x574(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableExplodeFriendlyFireOnAir;                    // 0x578(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2155[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ExplodeTMPRiseOnAbnormalSpaceAir;                  // 0x57C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeAddValueOnAbnormalSpaceAir;                 // 0x580(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeAbnormalSpaceContinuationTimeAir;           // 0x584(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeAbnormalSpaceRadiusAir;                     // 0x588(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeAbnormalSpaceAppearDelayAir;                // 0x58C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeAbnormalSpaceAppearTimeAir;                 // 0x590(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeAbnormalSpaceDisappearTimeAir;              // 0x594(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeHealVPValueAir;                             // 0x598(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeHealAbnormalStatusRateAir;                  // 0x59C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeHealPartsHPValueAir;                        // 0x5A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeWeakHealRateAir;                            // 0x5A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeWeakHealContinuationTimeAir;                // 0x5A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2156[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           FxGrenadeTailEffect;                               // 0x5B0(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  GrenadeTailEffectSocket;                           // 0x648(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEAbnormalStatusType           GrenadeAbnormalType;                               // 0x650(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2157[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GrenadeAbnormalValue;                              // 0x654(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLExplosionActor>        GrenadeExplosionClass;                             // 0x658(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GrenadeExplodeDamage;                              // 0x660(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GrenadeExplodeKnockOut;                            // 0x664(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GrenadeExplodeKnockBack;                           // 0x668(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GrenadeExplodeRadius;                              // 0x66C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GrenadeExplodeTime;                                // 0x670(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GrenadeExplodeTmpRise;                             // 0x674(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GrenadeExplodeMinDamageRate;                       // 0x678(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GrenadeExplodeMaxDamageRadius;                     // 0x67C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GrenadeExplodeAbnormalValue;                       // 0x680(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlashBangWhiteOutContinuationTime;                 // 0x684(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IncendiaryTMPRise;                                 // 0x688(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IncendiaryAbnormalValue;                           // 0x68C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IncendiaryContinuationTime;                        // 0x690(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IncendiaryRadius;                                  // 0x694(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalSpaceAppearDelay;                          // 0x698(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalSpaceAppearTime;                           // 0x69C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalSpaceDisappearTime;                        // 0x6A0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableSpin;                                      // 0x6A4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ExplodeFriendlyFireEnable;                         // 0x6A5(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2158[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DamageCorrection;                                  // 0x6A8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplosionDamageCorrection;                         // 0x6AC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimationAsset>        RollingAnimation;                                  // 0x6B0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           WaterSinkVFX;                                      // 0x6D8(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TSubclassOf<class ADecalActor>               HitExplosionDecal;                                 // 0x770(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsOnGround;                                        // 0x778(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2159[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               OffsetUpForGettingGroundHeight;                    // 0x77C(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RayVectorForGettingGroundHeight;                   // 0x788(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RayLengthForGettingGroundHeight;                   // 0x794(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDebugDrawForGettingGroundHeight;                 // 0x798(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_215A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DebugDrawThicknessForGettingGroundHeight;          // 0x79C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DebugDrawTimeForGettingGroundHeight;               // 0x7A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CharacterForawdPower;                              // 0x7A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsExplosionForTransport;                           // 0x7A8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsCollisionEnableByEndTransport;                   // 0x7A9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_215B[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           TransportFinishVFX;                                // 0x7B0(0x98)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLTransportRestrictInfo             TransportRestrictInfo;                             // 0x848(0xC)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         EnableActorFriendlyFire;                           // 0x854(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsNoDamaged;                                       // 0x855(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_215C[0xAA];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlayback                        FxGrenadeTailPlayBack;                             // 0x900(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FVector                               BoxTraceHalfSize;                                  // 0x918(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_215D[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLProximityFuseStatus*               ProximityFuseStatus;                               // 0x930(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_215E[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLCatchableActorComponent* GetDefaultObj();

	bool TryGetGroundInfoInOwner(class AActor* User, struct FVector* StartLocation, struct FVector* Location, struct FVector* LookVector);
	void Throw(struct FVector& SourcePosition, struct FVector& Direction, float ThrowSpeed, class AActor* UserActor, float DamageCorrection, float ExplosionDamageCorrection, float KnockOutCorrection, bool IsLeftForWeapon);
	void SpawnHitExplosionDecal(struct FHitResult& HitResult);
	void SetScaleCPP(float NewScale);
	void SetGravityGunTargetForGrenade();
	void SetEnabledLockOnCPP(bool NewEnabled);
	void SetEnableActorFriendlyFireForWeaponParam(bool CanAttackAlly);
	void SetCollisionCPP(bool IsThrown, class APawn* ThrowOwner);
	void RotateWithPivot(class USceneComponent* TargetMesh, class FName Socket, float Roll, float Pitch, float Yaw);
	bool ReleaseContainer(class AActor* User);
	void ProcessWaterCollisionEvent(struct FHitResult& HitResult);
	void PlayRollingAnimation(class USkeletalMeshComponent* Mesh);
	void PlayFxOnDestroy(bool IsAir);
	void PlayFx(struct FTTLCatchableActorFxParam* FxParam);
	void PlayActorAnimation(enum class ETTLCatchableActorAnimationState NewState);
	void OverrideParameter();
	void OnThrowDelegate(class AActor* UserActor);
	void OnTakePointDamageDelegate(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& ShotFromDirection, class UDamageType* DamageType, class AActor* DamageCauser);
	void OnTakeAnyDamage(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void OnCaughtByDelegate(class AActor* NewOwner);
	void OnBeginOverlapDettectingEnemyCollision(class AActor* Actor);
	void OnActorCollisionEvent(class AActor* OtherActor, struct FHitResult& HitResult);
	void MulticastDamagedDestroy(bool IsThrowed);
	bool IsUsedStaticMeshCPP();
	bool IsUsedSkeletalMeshCPP();
	bool IsHasOffsetMotion();
	bool IsGrenade();
	bool IsFrontNearestJoint(class USceneComponent* Arsenal, class FName ArsenalSocketName);
	void InitializeProximityFuse(class UTTLBasicStatusComponent* BasicStatus, float ExplodeRagTime, float SequenceRadius);
	struct FRotator GetRotatorOnCatch(bool IsLeft);
	class FName GetRightHandSocketName(class AActor* Character);
	class USceneComponent* GetOwnerMeshCPP();
	enum class ETTLEStatusType GetOwnerCharaType();
	class FName GetNearestJointCPP(class USceneComponent* SourceMesh, class FName SourceSocketName);
	class FName GetLeftHandSocketName(class AActor* Character);
	float GetDamage();
	void GenerateHeatSourcesCPP(TSubclassOf<class ATTLHeatSourceObject> ObjectClass, struct FTTLHeatSourceParameter& LandParameter, struct FTTLHeatSourceParameter& AirParameter, TArray<struct FVector>& GenParam, const struct FTransform& Transform);
	void GenerateHeatSourceOnDestroyCPP(bool IsAir);
	void GenerateHeatSourceCPP(TSubclassOf<class ATTLHeatSourceObject> ObjectClass, const struct FTransform& Transform, struct FTTLHeatSourceParameter& LandParameter, struct FTTLHeatSourceParameter& AirParameter);
	void GenerateExplosionOnDestroyCPP(bool IsAir);
	void GenerateExplosionCPP(bool Enable, TSubclassOf<class ATTLExplosionActor> ExplosionClass, class FName ExplosionSocket, float Damage, float KnockOut, float KnockBack, float Radius, float Time, float TmpRise, float MinDamageRate, float MaxDamageRadius, bool FriendlyFireEnabled, float ExplodeAbnormalValue, float WhiteOutContinuationTime, float TMPRiseOnAbnormalSpace, enum class ETTLEAbnormalStatusType AbnormalType, float AbnormalValue, float AddValueOnAbnormalSpace, float AbnormalSpaceContinuationTime, float AbnormalSpaceRadius, float AbnormalSpaceAppearDelay, float AbnormalSpaceAppearTime, float AbnormalSpaceDisappearTime, float HealVPValue, float HealAbnormalStatusRate, float HealPartsHPValue, float WeakHealContinuationTime, float WeakHealRate);
	void ExplodeGrenade();
	void DestroyOwnerActor();
	void CrushOnAirCPP();
	void Crush();
	void CheckHUDCollisionAndOverrideParameter();
	bool CheckHitWater(struct FHitResult& HitResult);
	void CheckCrushOnPunthThrowRelease(class AActor* UserActor);
	bool CanThrowCPP();
	void CallSetCollisionSklMeshDeligate(class USkeletalMeshComponent* DestSklMesh);
	void CallSetCollisionDeligate(class USphereComponent* DestCollision);
	void CallBroken(enum class ETTCatchableActorBrokenReasonType brokenReasonType);
	void CalcCatchOffsetCPP(class FName SocketName, struct FVector* OffsetLocation, struct FRotator* OffsetRotator);
	void ApplyVisualParamsOnCatch(class FName ParameterID, class FName JointName, bool IsLeft);
	void AddTransportInsuranceExpance();
};

// 0x50 (0x390 - 0x340)
// Class DXM.TTLCatchAimCamera
class ATTLCatchAimCamera : public ATTLActor
{
public:
	class USceneComponent*                       SceneRoot;                                         // 0x340(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USpringArmComponent*                   SpringArm;                                         // 0x348(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCameraComponent*                      Camera;                                            // 0x350(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArsenalArmLength;                                  // 0x358(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ArsenalArmOffsetOnRight;                           // 0x35C(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ArsenalArmOffsetOnLeft;                            // 0x368(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OuterArmLength;                                    // 0x374(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               OuterSocketOffset;                                 // 0x378(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2160[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLCatchAimCamera* GetDefaultObj();

	void SetOuterOffset();
	void SetArsenalThrow(bool IsLeft, class AActor* CatchTarget);
};

// 0x0 (0x38 - 0x38)
// Class DXM.TTLChangeOuterTurnPlayRateNotify
class UTTLChangeOuterTurnPlayRateNotify : public UAnimNotify
{
public:

	static class UClass* StaticClass();
	static class UTTLChangeOuterTurnPlayRateNotify* GetDefaultObj();

};

// 0x98 (0x190 - 0xF8)
// Class DXM.TTLChangePartsComponent
class UTTLChangePartsComponent : public UTTLActorComponent
{
public:
	TArray<struct FTTLMovableUnit>               MovableUnits;                                      // 0xF8(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_2176[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLArsenalPartsComponent*             ArmLMesh;                                          // 0x138(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLArsenalPartsComponent*             ArmRMesh;                                          // 0x140(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLArsenalPartsComponent*             CenterbodyMesh;                                    // 0x148(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLArsenalPartsComponent*             HeadMesh;                                          // 0x150(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLArsenalPartsComponent*             LegsMesh;                                          // 0x158(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLArsenalPartsComponent*             InsideMesh;                                        // 0x160(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                WeaponRackRMesh;                                   // 0x168(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                WeaponRackLMesh;                                   // 0x170(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                PartsPTArmorLMesh;                                 // 0x178(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                PartsPTArmorRMesh;                                 // 0x180(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         UseMemoryOptimizedParts;                           // 0x188(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2177[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLChangePartsComponent* GetDefaultObj();

	void StopMovableUnitAction(enum class ETTLEPartsMovableType Type, float DurationToStop);
	void StartMovableUnitSpecialAction(enum class ETTLEPartsMovableType Type, float DurationToStop);
	void StartMovableUnitAction(enum class ETTLEPartsMovableType Type, float DurationToStop);
	void SpawnGunArmWeapon(bool IsLeft, class FName NewGunArmID, struct FTTLArsenalPartsInfo& ArmInfo, bool UseSkin);
	void SetupMovableUnit_Legs(class USkeletalMeshComponent* ParentMeshComp, struct FTTLPartsVisualLegsParamRow& Param, bool IsParentBroken);
	void SetupMovableUnit_Head(class USkeletalMeshComponent* ParentMeshComp, struct FTTLPartsVisualHeadParamRow& Param, bool IsParentBroken);
	void SetupMovableUnit_Body(class USkeletalMeshComponent* ParentMeshComp, struct FTTLPartsVisualBodyParamRow& Param, bool IsParentBroken);
	void SetupMovableUnit_ArmR(class USkeletalMeshComponent* ParentMeshComp, struct FTTLPartsVisualArmRightParamRow& Param, bool IsParentBroken);
	void SetupMovableUnit_ArmL(class USkeletalMeshComponent* ParentMeshComp, struct FTTLPartsVisualArmLeftParamRow& Param, bool IsParentBroken);
	void SetSkeletalMeshWithMaterials(class USkeletalMeshComponent* TargetMeshComp, class USkeletalMesh* NewMesh);
	void SetMovableUnitActionPosition(enum class ETTLEPartsMovableType Type, float InPosition);
	void ProcessChangeParts(class FName RowName, enum class ETTLPartsType PartsType, struct FTTLArsenalPartsInfo& ChangePartsInfo, struct FTTLArsenalPartsPaintInfo& OverridePaintInfo, bool IsOverridePaintInfo);
	bool IsGunArmFromPartsID(class FName RowName);
	bool IsGunArmFromOwnerArm(bool IsLeft);
	bool IsCompletelyDestroyedForGunArm(bool IsLeft);
	void InitPartsMeshReference();
	void GetMovableUnits_MeshList(TArray<class USkeletalMeshComponent*>* OutArray);
	class USkeletalMeshComponent* GetHatchMeshForGetOnOff();
	void ChangeSkeletalMesh(class USkeletalMeshComponent* MeshComp, class FName Path, bool* OutIsBroken, bool WithMaterials, bool WithCheckBroken, class USceneComponent* AttachParent, class FName AttachSocketName);
	void ChangePunchFromGunArm(bool IsLeft, class FName NewArmID);
	void ChangeParts_RightArm(class UTTLArsenalPartsComponent* PartsMesh, class USkeletalMeshComponent* PartsPTArmorR, class FName PartsID, struct FTTLArsenalPartsInfo& PartsInfo, bool UsingSkin);
	void ChangeParts_Legs(class UTTLArsenalPartsComponent* PartsMesh, class FName PartsID, struct FTTLArsenalPartsInfo& PartsInfo, bool UsingSkin);
	void ChangeParts_LeftArm(class UTTLArsenalPartsComponent* PartsMesh, class USkeletalMeshComponent* PartsPTArmorL, class FName PartsID, struct FTTLArsenalPartsInfo& PartsInfo, bool UsingSkin);
	void ChangeParts_Inside(class UTTLArsenalPartsComponent* PartsMesh, class FName PartsID, struct FTTLArsenalPartsInfo& PartsInfo);
	void ChangeParts_Head(class UTTLArsenalPartsComponent* PartsMesh, class FName PartsID, struct FTTLArsenalPartsInfo& PartsInfo, bool UsingSkin);
	void ChangeParts_Body(class UTTLArsenalPartsComponent* PartsMesh, class USkeletalMeshComponent* WeaponRackLeft, class USkeletalMeshComponent* WeaponRackRight, class FName PartsID, struct FTTLArsenalPartsInfo& PartsInfo, bool UsingSkin);
	void ApplyRadarParameter(class FName PartsID);
};

// 0x68 (0x158 - 0xF0)
// Class DXM.TTLChangeWeaponComponentBase
class UTTLChangeWeaponComponentBase : public UActorComponent
{
public:
	uint8                                        Pad_217F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLWeaponBase*                        WeaponToChange;                                    // 0xF8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChangeWeaponChargeTime;                            // 0x100(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentChargeTime;                                 // 0x104(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsPreparingToChange;                               // 0x108(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2180[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               DetectBoxSize;                                     // 0x10C(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          MultiplayCurrentWeaponIDList;                      // 0x118(0x10)(Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                          MultiplayWeaponRackList;                           // 0x128(0x10)(Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<int32>                                MultiplayCurrentWeaponUIDList;                     // 0x138(0x10)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<int32>                                MultiplayWeaponRackUIDList;                        // 0x148(0x10)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTTLChangeWeaponComponentBase* GetDefaultObj();

	void RunOnServerChangeWeaponList_UID(TArray<int32>& CurrentUIDList, TArray<int32>& RackUIDList, TArray<class FName>& CurrentNameList, TArray<class FName>& RackNameList, int32 UidCount);
	void RunOnServerChangeWeaponList(TArray<class FName>& CurrentList, TArray<class FName>& RackList);
	void OnRep_WeaponList_UID();
	void OnRep_WeaponList();
	void OnMulticastChangeWeapon(enum class ETTLWeaponSlot ChangeSlot, bool DestroyOldWeapon);
	void MultiplaySetWeaponSlot(int32 SlotIndex, class ATTLWeaponBase* NewWeapon);
	void MultiplaySetSupportWeaponBP(class ATTLWeaponBase* NewWeapon);
	void MultiplaySetShoulderWeaponBP(class ATTLWeaponBase* NewWeapon);
	void MultiplaySetHandWeaponBP(enum class ETTLWeaponSlot ChangeSlot, class ATTLWeaponBase* NewWeapon);
	bool FindWeaponToChange();
	void DetachWeapon(class ATTLWeaponBase* DetachWeapon);
	void ChangeWeaponNotifyServer();
	void ChangeWeaponForMultiplay(enum class ETTLWeaponSlot ChangeSlot, bool DestroyOldWeapon);
	bool ChangeHandWeapon(bool IsLeft, class ATTLWeaponBase* WeaponToChange, class USkeletalMeshComponent* AttachMesh, class FName SocketName, bool DestroyOldWeapon);
	void CancelWeaponToChange();
	class ATTLWeaponBase* CallChangeWeaponFromBP(enum class ETTLWeaponSlot ChangeSlot, bool IsDestroyOldWeapon, bool NeedsRegisterMultiList);
	void AttachWeaponToMesh(class USkeletalMeshComponent* MeshToAttach, class FName SocketName, const struct FTransform& OffsetTransform, class ATTLWeaponBase* WeaponBeforeChange);
};

// 0x8 (0x30 - 0x28)
// Class DXM.TTLCharaCommonActionCheckObject
class UTTLCharaCommonActionCheckObject : public UObject
{
public:
	uint8                                        Pad_2181[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLCharaCommonActionCheckObject* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class DXM.TTLCharaCommonAnimControlObject
class UTTLCharaCommonAnimControlObject : public UObject
{
public:

	static class UClass* StaticClass();
	static class UTTLCharaCommonAnimControlObject* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class DXM.TTLArsenalAnimControlObject
class UTTLArsenalAnimControlObject : public UTTLCharaCommonAnimControlObject
{
public:
	uint8                                        Pad_2182[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLArsenalAnimControlObject* GetDefaultObj();

};

// 0x18 (0x110 - 0xF8)
// Class DXM.TTLCharacterChatTalkerComponent
class UTTLCharacterChatTalkerComponent : public UTTLActorComponent
{
public:
	TSubclassOf<class ATTLPopUpBase>             ChatTalkerClass;                                   // 0xF8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2183[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLChatTalkerPopUp*                   ChatTalkerPopUp;                                   // 0x108(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLCharacterChatTalkerComponent* GetDefaultObj();

	void SwitchChatTalkerPopUp();
};

// 0xA70 (0x1230 - 0x7C0)
// Class DXM.TTLCharacterCommon
class ATTLCharacterCommon : public ATTLCharacter
{
public:
	uint8                                        Pad_21BC[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLDropOnlyPartsControl*              DropOnlyPartsListControll;                         // 0x7E8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ATTLHeatSourceObject>      WreckedArsenalHeatSourceClass;                     // 0x7F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLHeatSourceObject*                  WreckedArsenalHeatSource;                          // 0x7F8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21BD[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsWreckedArsenalExecedOnce;                        // 0x802(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_21BE[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsDoUpdateReductionForWrecked;                     // 0x805(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21BF[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CheckWreckedArsenalSkeletalPerformanceTime;        // 0x80C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsForceCheckSkeletalMeshPerformance;               // 0x810(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21C0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnOuterCompleteGetOnArsenal;                       // 0x818(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	struct FTTLAISettingModule                   AISettingModule;                                   // 0x828(0x20)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_21C1[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ETTLECharacterCommonSpawnType     SpawnType;                                         // 0x84A(0x1)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEStatusType                   SpawnStatusType;                                   // 0x84B(0x1)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21C2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                SpawnLeaderActor;                                  // 0x850(0x8)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        SpawnLeaderActorMultiIndex;                        // 0x858(0x1)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21C3[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TScriptInterface<class ITTLFieldAccessedInterface> FieldAccessInterfacePtr;                           // 0x860(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	bool                                         NeedsUpdateAsHumanTypeCommon;                      // 0x870(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         NeedsUpdateAsArsenalCharacter;                     // 0x871(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         NeedsUpdateAsOuterCharacter;                       // 0x872(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsCheckHitWall;                                    // 0x873(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21C4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLOnlinePlayerInfoHUDComponent*      OnlineInfoHUDComponent;                            // 0x878(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLArsenalEquipHUD3Component*         ArsenalEquipHUD3Component;                         // 0x880(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLArsenalTargetObjHUDComponent*      ArsenalTargetObjHUDComponent;                      // 0x888(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHitResult                            HitWallResult;                                     // 0x890(0x88)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FVector                               HitWallLocation;                                   // 0x918(0xC)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               HitWallNormal;                                     // 0x924(0xC)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanGetOn;                                          // 0x930(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21C5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLOuterInArsenalCharacter*           InnerOuterCharacterCpp;                            // 0x938(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APawn*                                 CaptureWeapon_Pawn;                                // 0x940(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLCaptureWeaponComponent*            CaptureWeapon_Component;                           // 0x948(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CaptureWeapon_Phase;                               // 0x950(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21C6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLWeaponBase*                        CurrentLeftWeapon;                                 // 0x958(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLWeaponBase*                        CurrentRightWeapon;                                // 0x960(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLWeaponBase*                        CurrentShoulderWeapon;                             // 0x968(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLWeaponBase*                        CurrentSupportWeapon;                              // 0x970(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLWeaponBase*                        CurrentLeftCaughtWeapon;                           // 0x978(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLWeaponBase*                        CurrentRightCaughtWeapon;                          // 0x980(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLWeaponBase*                        CaughtWeapon;                                      // 0x988(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLArsenalPartsInfoList              ArsenalPartsList;                                  // 0x990(0x310)(BlueprintVisible, Net, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21C7[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnCharacterLanded;                                 // 0xCC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnStartCloseRangeAttackMotion;                     // 0xCD0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnStartCloseRangeShieldRepelled;                   // 0xCE0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FName                                  NpcMetaID;                                         // 0xCF0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsHideFromMemberList;                              // 0xCF8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsShieldLAfterAttack;                              // 0xCF9(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsShieldRAfterAttack;                              // 0xCFA(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21C8[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ACameraActor*                          SniperModeCamera;                                  // 0xD00(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21C9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        JundgeRadiusInsideWarningArea;                     // 0xD0C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImpulsePowerInsideWarningArea;                     // 0xD10(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21CA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ArsenalBodyIDForOuter;                             // 0xD18(0x8)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HiddenByDistanceRatio;                             // 0xD20(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21CB[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          StunAirMontage;                                    // 0xD30(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          StunGroundMontage;                                 // 0xD38(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UCameraComponent*>              CameraComponents;                                  // 0xD40(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class ATTLFlashPostProcessCollideActor*> FlashPostProcessActors;                            // 0xD50(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class ATTLOuterTrapWeapon*                   OuterTrapWeapon;                                   // 0xD60(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLWeaponBase*                        OuterCloseRangeWeapon;                             // 0xD68(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class ATTLCharacterDeathCamera> WaterSinkCameraClass;                              // 0xD70(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class ATTLConsoleActor>        ArsenalCorpseConsoleClass;                         // 0xD98(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsRespawningEndMotion;                             // 0xDC0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsRespawnStartPackageReceived;                     // 0xDC1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21CC[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsOnlyDropPartsListID;                             // 0xDC3(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsMirageCharacter;                                 // 0xDC4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSpawnInnerOuter;                                 // 0xDC5(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21CD[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLCatchAimCamera*                    AimCamera;                                         // 0xDC8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         NeedAimCamera;                                     // 0xDD0(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         NeedAimCameraOld;                                  // 0xDD1(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanAccessConsole;                                  // 0xDD2(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEInteractType                 InteractType;                                      // 0xDD3(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21CE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnConsoleAccess;                                   // 0xDD8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class AActor*                                TargetToReboot;                                    // 0xDE8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  OverrideParameterID;                               // 0xDF0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsNPCRandomSpawn;                                  // 0xDF8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21CF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLRandomPartsContainer>      RandomPartsArray;                                  // 0xE00(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         IsShowWeaponBitFlag;                               // 0xE10(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsShowWeaponShootFlag;                             // 0xE11(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsShowWeaponAttackFlag;                            // 0xE12(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21D0[0x26];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsFixedLockonDistance;                             // 0xE39(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsShowLockonLengthInfo;                            // 0xE3A(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        WeaponPressBitFlags;                               // 0xE3B(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        WeaponSwitchEnabledBitFlags;                       // 0xE3C(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_21D1[0x3B];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLConsoleActor*                      ObjectToInteract;                                  // 0xE78(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATTLConsoleActor*                      SelfCorpseConsole;                                 // 0xE80(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        RespawningTime;                                    // 0xE88(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         CanRespawn;                                        // 0xE8C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_21D2[0x43];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USplineComponent*                      RouteSpline;                                       // 0xED0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21D3[0xC0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          Arrested_Montage;                                  // 0xF98(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLExtraAttachmentParam              ExtraAttachmentParam;                              // 0xFA0(0x98)(BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLEventWeaponHiddenSetting          EventWeaponHiddenSetting;                          // 0x1038(0x6)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         IsEventVernierHidden;                              // 0x103E(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21D4[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          TractorBeam_StealWeaponMontage;                    // 0x1040(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseBossLastTrctActor*             TractorBeam_Actor;                                 // 0x1048(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TractorBeam_SaveGravityScale;                      // 0x1050(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         TractorBeam_IsInside;                              // 0x1054(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21D5[0xB];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSoftObjectPtr<class UAnimSequenceBase>> EmotePath;                                         // 0x1060(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                        Pad_21D6[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector4                              ColorOffsetTest;                                   // 0x1090(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21D7[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              ReplicatedCharacterControlRotation;                // 0x10B0(0xC)(Net, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	int32                                        CurrentEmoteIndex;                                 // 0x10BC(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_21D8[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlayback                        CurrentEmoteFxPlayback;                            // 0x1100(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_21D9[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TWeakObjectPtr<class UPrimitiveComponent>> IgnoreCollisionList;                               // 0x1120(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                        Pad_21DA[0x88];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLCharaCommonActionCheckObject*      ActionCheckObject;                                 // 0x11B8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_21DB[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLCharaCommonAnimControlObject*      AnimControlObject;                                 // 0x11E0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UTTLCharaCommonAnimControlObject> AnimControlObjectClass;                            // 0x11E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  VoiceCharaID_Internal;                             // 0x11F0(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_21DC[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLCharacterCommon* GetDefaultObj();

	void UpdateSkillOnGetOn();
	void UpdateSameAllyPlayerCharacterUi(float DeltaSeconds);
	void UpdateNpcUi(float DeltaSeconds);
	void UpdateMaterials(enum class ETTLEPartMenuIndex PartMenuIndex);
	void UpdateMaterialMesh();
	void UpdateLocalPlayerCharacterUi(float DeltaSeconds);
	bool TryStartRespawnTarget();
	void TractorBeam_StopStealWeaponAnimation();
	float TractorBeam_PlayStealWeaponAnimation(int32 Type);
	void TractorBeam_NotifyStealWeapon();
	bool TractorBeam_IsPlayingStealWeaponAnimation();
	void TakeEndWeapon(bool IsLeft);
	void SwitchCollisionAttachToCamera(bool IsCreate);
	void StopCorpseConsole();
	void StopAllUIComponentBP();
	void StartTake(bool IsLeft);
	void StartRespawn(class AActor* TargetToRespawn);
	void StartReload(bool IsLeft, bool IsManual);
	void StartReadyGetOnArsenal(class ATTLPlayerController* GetonPlayerController, class ATTLCharacterCommon* GetonOuter, class ATTLCharacterCommon* OldArsenal);
	void StartPurge(bool IsLeft);
	void StartPreReadyGetOnArsenal(class ATTLPlayerController* GetonPlayerController, class ATTLCharacterCommon* GetonOuter);
	void StartPickWeapon(bool IsLeft);
	void StartOuterThrow();
	void StartCorpseConsole();
	class ATTLWeaponBase* SpawnCharacterWeapon(class UClass* WeaponClass, struct FTTLArsenalPartsInfo& WeaponInfo);
	void ShutdownCurrentWeapons();
	bool ShouldUpdateHandWeaponByInventory(bool IsLeft);
	void SetWeaponActorBP(bool IsLeft, class ATTLWeaponBase* LongWeapon, class ATTLWeaponBase* CloseWeapon, class ATTLWeaponBase* ShiledWeapon);
	void SetVoiceCharaID(class FName CharaID);
	void SetupCurrentWeaponUniqueIDs(struct FTTLAssemblePartsInfoRow& LeftWeaponInfo, struct FTTLAssemblePartsInfoRow& RightWeaponInfo, struct FTTLAssemblePartsInfoRow& ShoulderWeaponInfo, struct FTTLAssemblePartsInfoRow& SupportWeaponInfo);
	void SetupCurrentWeapons(class ATTLWeaponBase* LeftWeapon, class ATTLWeaponBase* RightWeapon, class ATTLWeaponBase* ShoulderWeapon, class ATTLWeaponBase* SupportWeapon, class ATTLWeaponBase* LeftCaughtWeapon, class ATTLWeaponBase* RightCaughtWeapon, bool NeedsRegisterMultiList);
	bool SetupAndGetRandomPartsID(class FName* PartsID);
	void SetStunMotion(bool IsStart);
	void SetShowInnerOuter(bool IsShow);
	void SetShootFlag(bool IsLeft, bool IsEnabled);
	void SetShieldOnEndCloseRangeAttack();
	void SetPunchUID(class ATTLWeaponBase* Weapon, bool IsLeft);
	void SetPartsListIDBP(class FName PartsListID);
	void SetPaintInfo(struct FTTLArsenalPaintInfo& PaintInfo);
	bool SetOwnerFreezed(bool IsVisible);
	void SetOuterInfoFromStorageInfo(struct FTTLOuterStorageInfo& StorageInfo);
	void SetOuterGenderType(enum class ETTLEHumanGenderType Gender);
	void SetOuterCustomInfo(struct FTTLHumanCustomPartsInfo& OutInfo);
	void SetNextShootFlag(bool IsLeft, bool IsEnabled);
	void SetMinLODArsenal(int32 MinLOD);
	void SetIsOldShieldOn(bool IsLeft, bool IsOn, bool IsFirstSet);
	void SetCurrentWeaponUniqueIDsOnPartsInfo(struct FTTLArsenalPartsInfoList& PartsInfoList);
	void SetCharacterInBaseCampLocal();
	void SetCameraArray();
	void SetAttackFlag(enum class ETTLArsenalCloseRangeAttackType Type, bool IsEnabled);
	void SetAssembleInfo(struct FTTLPlayerAssembleInfo& AssembleInfo);
	void SetArsenalMeshUpdateFlagOnEvent(enum class EMeshComponentUpdateFlag UpdateFlag);
	void SetArmWeaponVisible(bool IsLeft, bool Visibility);
	void SetAllWeaponVisible(bool Visibility, bool PropageteToChildren);
	void ServerStartDisappearEvent(enum class ETTLEPartMenuIndex WeaponType);
	void ServerStartCloseRangeShieldRepelled();
	void ServerShootWithDirectionAndTarget(enum class ETTLWeaponSlot ShootWeapon, struct FVector& bulletLocation, struct FVector& ForwardVector, class AActor* TargetActor);
	void ServerShootRandSpreadLaser(enum class ETTLWeaponSlot ShootWeapon, TArray<struct FVector>& AngleList, TArray<float>& SpreadRateList);
	void ServerShootOneTarget(enum class ETTLWeaponSlot ShootWeapon, class AActor* TargetActor);
	void ServerShootManyTarget(enum class ETTLWeaponSlot ShootWeapon, TArray<class AActor*>& TargetList);
	void ServerSetControlRotation(const struct FRotator& NewControlRotation);
	void ServerSendLockonParameter(const struct FVector& ScreenLocation, struct FVector& ScreenLocation_Restrict, class AActor* TargetPawn, bool IsLockOn);
	void ServerEndCaptureWeapon();
	void ServerDebugSetHpRemaing1();
	void ServerDebugHundredPower();
	void ServerCreateBullet(enum class ETTLWeaponSlot ShootWeapon, const struct FTransform& Transform, TSubclassOf<class ATTLProjectileBase> BulletClass, const struct FVector& bulletDirection);
	void ServerCheckCaptureWeaponStartAccess(class APawn* CaptureWeapon);
	void ServerCaptureWeaponSyncRotation(class APawn* CaptureWeapon, const struct FRotator& Rotator);
	void ServerCaptureWeaponStartAttack(class APawn* CaptureWeapon, struct FVector& Parameter);
	void ServerCancelInputWeapon(enum class ETTLEMultiplayWeaponIndex CancelWeaponSlot);
	void ServerCancelCaptureWeapon();
	void ServerBreakWeapon(enum class ETTLWeaponSlot BreakWeapon);
	void RunOnServerStopBreakPartsVFX();
	void RunOnServerOnParentFinishMirage();
	void RunOnServerForceFinishMirage();
	void RunOnServerClearChildMirage();
	void RunOnServerAccessFieldInterface(class AActor* Actor);
	void RunOnClientNotifyWeaponShieldDamage(enum class ETTLWeaponSlot Slot, float FinalDamage);
	void RunOnClientNotifyFemtoShieldDamage(float FinalDamage);
	void RunOnClientNotifyDamageAndReaction(float FinalDamage, const struct FVector& DamageCauserPos, class AActor* DamageCauserOwner, float KnockBack, float KnockOut, const struct FVector& HitDirection, enum class ETTLCloseRangeWeaponDamageReactionType ReactionType, bool ForceKnockOut);
	void RunOnClientNotifyDamage(float FinalDamage, const struct FVector& DamageCauserPos, class AActor* DamageCauserOwner, enum class ETTLCloseRangeWeaponDamageReactionType ReactionType);
	void RespawnTarget();
	void ResetSkillInBaseCamp(TArray<class FName>& SkillList);
	void ResetOuterPartsInBaseCamp(enum class ETTLEHumanGenderType Gender, struct FTTLHumanCustomPartsInfo& HumanCustomInfo);
	void ResetArsenalPartsInBaseCamp(struct FTTLPlayerAssembleInfo& AssembleInfo);
	void ResetArsenalPartsBp(struct FTTLPlayerAssembleInfo& AssembleInfo);
	void RemoveHUDForConsoleHUD();
	bool ReloadEndWeaponArm(bool IsLeft);
	void PurgeCaptureWeapon(enum class ETTLArsenalCloseRangeAttackType AttackType);
	bool ProcessTake(float DeltaSeconds, bool IsLeft);
	bool ProcessPurge(float DeltaSeconds, bool IsLeft);
	void ProcessPlayerConsoleAccess();
	void ProcessLandingOnHit(struct FHitResult& HitResult, class AActor* OtherActor);
	void ProcessAttachmentRegulation();
	void OnUnFireEnd(bool IsLeft);
	void OnTakeEnd(bool IsLeft);
	void OnSuccessStartCaptureWeaponBP();
	void OnStartCloseRangeAttackMotionDelegate();
	void OnSpinShootEnd();
	void OnShieldShiftCreated(class UTTLShieldComponent* ShieldComponent);
	void OnRep_WeaponSwitchEnabledFlag();
	void OnRep_WeaponPressFlag();
	void OnPurgeEnd(bool IsLeft, bool IsSkipTakeTime);
	void OnPurgeCaughtWeaponEnd(bool IsLeft);
	void OnMissionStart();
	void OnMenuStart();
	void OnLevelStart();
	void OnInputOuterSpecialAttack(bool IsPressed);
	void OnInitializeMissionCommonBP();
	void OnChangeSpectatorModeTargetBP(bool IsStart);
	void OnChangePartsEnd(enum class ETTLPartsType Type, struct FTTLArsenalPaintInfo& PaintInfo);
	void OnCapsuleOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void NotifyRespawnCancelToServer(class AActor* TargetToRespawn, bool ForceCancel);
	void NotifyExecThrow(bool IsLeft, bool IsHandWeapon, const struct FVector& TargetPos, const struct FVector& Direction, enum class ETTLThrowType ThrowType);
	void NotifyExecCancelAim();
	void NotifyCaptureWeapon_End();
	void NotifyCaptureWeapon_Cancel();
	void MulticastStopOuterEmote();
	void MulticastStopFailCatch();
	void MulticastStopBreakPartsVFX();
	void MulticastStartDisappearEvent(enum class ETTLEPartMenuIndex WeaponType);
	void MulticastStartCloseRangeShieldRepelled();
	void MulticastStartArsenalGetOff(class ATTLPlayerController* TargetController, class ATTLPlayerState* LinkPlayerState, uint8 WeaponRemainBulletEmptyBits, float FemtoRemain);
	void MulticastShootWithDirectionAndTarget(enum class ETTLWeaponSlot ShootWeapon, struct FVector& bulletLocation, struct FVector& ForwardVector, class AActor* TargetActor);
	void MulticastShootRandSpreadLaser(enum class ETTLWeaponSlot ShootWeapon, TArray<struct FVector>& AngleList, TArray<float>& SpreadRateList);
	void MulticastShootOneTarget(enum class ETTLWeaponSlot ShootWeapon, class AActor* TargetActor);
	void MulticastShootManyTarget(enum class ETTLWeaponSlot ShootWeapon, TArray<class AActor*>& TargetList);
	void MulticastRespawnOuter();
	void MulticastPlayOuterEmote(int32& EmoteIndex, class FName& EmoteID);
	void MulticastPlayFailCatch(bool IsLeft);
	void MulticastOnParentFinishMirage();
	void MulticastNotifyResetSkillInBaseCamp(TArray<class FName>& SkillList);
	void MulticastNotifyResetOuterPartsOnlyInBaseCamp(enum class ETTLEHumanGenderType Gender, struct FTTLHumanCustomPartsInfo& HumanCustomInfo);
	void MulticastNotifyResetOuterPartsInBaseCamp(enum class ETTLEHumanGenderType Gender, struct FTTLHumanCustomPartsInfo& HumanCustomInfo, TArray<class FName>& SkillList);
	void MulticastNotifyResetArsenalPartsInBaseCamp(struct FTTLPlayerAssembleInfo& AssembleInfo);
	void MulticastEndCaptureWeapon();
	void MulticastDebugSetHpRemaing1();
	void MulticastDebugHundredPower();
	void MulticastCreateBullet(enum class ETTLWeaponSlot ShootWeapon, const struct FTransform& Transform, TSubclassOf<class ATTLProjectileBase> BulletClass, const struct FVector& bulletDirection);
	void MulticastCaptureWeaponSuccessStartAccess(class APawn* CaptureWeapon);
	void MulticastCaptureWeaponStartAttack(class APawn* CaptureWeapon, struct FVector& Parameter);
	void MulticastCancelInputWeapon(enum class ETTLEMultiplayWeaponIndex CancelWeaponSlot);
	void MulticastCancelCaptureWeapon();
	void MulticastBreakWeapon(enum class ETTLWeaponSlot BreakWeapon);
	void MulticastAccessFieldInterface(class AActor* Actor);
	void LatentActionAfterGetOnCameraWait(class ATTLPlayerController* PlayerController, TArray<class FName>& SkillList, enum class ETTLEStatusType OuterStatus);
	bool IsTaking(bool IsLeft);
	bool IsStunning();
	bool IsShoulderCannonFirstMoveStiff(bool IsOnlyRailGun);
	bool IsShoulderCannonAllMoveStiff();
	bool IsShoulderAttackOnly();
	bool IsRestrictionWeaponShield();
	bool IsRestrictionLongRangeAttack();
	bool IsRestrictionFromMovement();
	bool IsRestrictionCloseRangeAttack(bool CheckCatchableMove);
	bool IsRespawningTarget();
	bool IsRespawnable();
	bool IsReloading(bool IsLeft);
	bool IsPurging(bool IsLeft);
	bool IsOwnedByLocalPlayer();
	bool IsOuterCloseRangeAttack();
	bool IsOuter();
	bool IsNowSpectatorModeTarget();
	bool IsNeedInitializeArsenalPartsInfo();
	bool IsNeedDropOnceSetting();
	bool IsMoveStiffExceptForFemtoAndRise();
	bool IsLongRangeAllMoveStiff();
	bool IsLocalMainArsenal();
	bool IsKnockBackDamage();
	bool IsGenerateHeatSourceForWreckArsenal(class FName& PartsListID);
	bool IsExecOnceForWreckArsenal();
	bool IsEnableGrenade();
	bool IsCurrentCatchWeapon();
	bool IsCloseRangeAttack(bool IsContainPunch);
	bool IsChaseMission();
	bool IsChaseAutoRunning();
	bool IsAttackingOneSideHandWeapon(bool IsLeft);
	bool IsAttackingEitherHandWeapon();
	bool IsArsenal();
	bool IsArmWeaponVisible(bool IsLeft);
	bool IsAlreadyOnlyDropListID();
	bool IsAllMoveStiff();
	bool InputStartSupportWeapon();
	bool InputStartArmWeapon(bool IsLeft);
	void InputFieldInterface(enum class ETTLEActionType InputAction, bool IsPressed);
	bool InputEndSupportWeapon();
	bool InputEndArmWeapon(bool IsLeft);
	void InitializeWeapon_PrintClassErrorLog(class FName& WeaponID, enum class ETTLPartsType PartsType);
	void InitializeOuterMissionGetOff();
	void InitializeOuterMissionEject();
	void InitializeOuterComponent();
	void InitializeOuter();
	void InitializeNonPlayerPartsList(class FName& ListID, struct FTTLArsenalPartsInfoList* PartsList);
	void InitializeLightingMovement();
	void InitializeInventory();
	void InitializeInnerOuter();
	void InitializeHUD(bool TickEnabled);
	void InitializeCharacterInBaseCamp();
	void InitializeArsenalPaint(class UTTLArsenalPaintComponent* PaintComponent);
	void InitializeArsenal();
	bool InitDropOnceControll();
	void ImpulseToInsideAreaThanWarningArea(float Ratio);
	class FName GetVoiceCharaID();
	struct FTransform GetSocketTransformWeaponArm(bool IsLeft, class FName SocketName, enum class ERelativeTransformSpace RelativeSpace);
	enum class ETTLWeaponSlot GetSlotTypeCurrentFromWeapon(class ATTLWeaponBase* CheckWeapon);
	int32 GetSkillListFromNPCMetaID(TArray<class FName>* List);
	bool GetShootFlag(bool IsLeft);
	void GetRightWeaponRackIDandAttachment(class FName* WeaponID, class FName* Attachment1, class FName* Attachment2, class FName* Attachment3);
	class ATTLWeaponBase* GetRightWeaponRack();
	class USkeletalMeshComponent* GetRightArmMesh();
	float GetRestFemtoValue();
	class USkeletalMeshComponent* GetPartsMesh(enum class ETTLDestroyablePartsType PartsType);
	class FName GetPartsListID();
	enum class ETTLEHumanGenderType GetOuterGenderType();
	void GetOuterCustomInfo(struct FTTLHumanCustomPartsInfo* OutInfo);
	bool GetNextShootFlag(bool IsLeft);
	void GetLeftWeaponRackIDandAttachment(class FName* WeaponID, class FName* Attachment1, class FName* Attachment2, class FName* Attachment3);
	class ATTLWeaponBase* GetLeftWeaponRack();
	class USkeletalMeshComponent* GetLeftArmMesh();
	class ATTLOuterInArsenalCharacter* GetInnerOuter();
	class ATTLWeaponBase* GetCurrentWeaponFromWeaponId(class FName& WeaponID);
	class ATTLWeaponBase* GetCurrentWeapon(enum class ETTLWeaponSlot RequestSlot);
	class ATTLWeaponBase* GetCurrentSupportWeapon();
	class ATTLWeaponBase* GetCurrentShoulderWeapon();
	class ATTLWeaponBase* GetCurrentRightWeapon_CheckCaughtWeapon();
	class ATTLWeaponBase* GetCurrentRightWeapon();
	class ATTLWeaponBase* GetCurrentRightCaughtWeapon();
	class ATTLWeaponBase* GetCurrentOuterBladeWeapon();
	class ATTLWeaponBase* GetCurrentLeftWeapon_CheckCaughtWeapon();
	class ATTLWeaponBase* GetCurrentLeftWeapon();
	class ATTLWeaponBase* GetCurrentLeftCaughtWeapon();
	class ATTLWeaponBase* GetCurrentCloseRangeWeapon(bool IsLeft);
	bool GetCurrentArsenalPartsList(struct FTTLArsenalPartsInfoList* OutArsenalPartsInfoList, bool IsForce);
	class ATTLWeaponBase* GetCurrentArmWeaponWithCategory(bool IsLeft, enum class ETTLEArmWeaponCategory* WeaponCategory);
	class FName GetBodyMeshID();
	class USkeletalMeshComponent* GetBaseMesh();
	bool GetAttackFlag(enum class ETTLArsenalCloseRangeAttackType Type);
	void GetArsenalPaintInfo(struct FTTLArsenalPaintInfo* PaintInfo);
	uint8 GetAllWeaponBulletRemainBits();
	void ForceCancelRespawn(bool NeedPacket);
	bool FireWeaponArm(bool IsLeft);
	void FinishTake(bool IsLeft);
	void FinishPurge(bool IsLeft);
	void EndUnFire(bool IsLeft);
	void DoOptimizationImplementInBP(bool IsEnable);
	void DestroyOuterPostGetOn();
	void DestroyInnerOuter();
	void DestroyHeatSourceForWreckArsenal();
	void DebugChangeEquipList();
	bool CouldTake(bool IsLeft);
	bool CouldReload(bool IsLeft);
	bool CouldPurgeCaughtWeapon(bool IsLeft);
	bool CouldPurge(bool IsLeft);
	bool CouldDoWeaponAction();
	bool CouldAttackHand(bool IsLeft);
	void ClientCaptureWeaponFailedStartAccess(class APawn* CaptureWeapon);
	void ClearWeaponActorBP(bool IsLeft);
	void ClearHitWallResult();
	void ClearGetoffCameraWaitTimerForEventForceGetOn();
	struct FVector CheckWarningAreaAndGetSafetyVector();
	bool CheckNotifyArmWeaponAttack(bool IsLeft);
	bool CheckDoubleAttackCpp();
	bool CheckControllerForClientGetonfinish();
	void CheckChangeBasicStatusType(enum class ETTLEStatusType CheckStatus);
	bool CheckCannonControlInWarningArea();
	bool CheckAvoidWallAction(const struct FVector& InputDirection, struct FVector* WallLocation, struct FVector* WallNormal, struct FVector* ActionDirection, bool* IsLeft);
	void ChargeFemtoWhenGetOnArsenal(class ATTLCharacterCommon* GetonOuter);
	void ChangePostProcessValueForCollision(const struct FVector4& ColorOffset);
	void ChancelStunMotion();
	bool CaptureWeapon_StartAiming();
	void CaptureWeapon_Start(class APawn* WeaponPawn);
	bool CaptureWeapon_SetCaptureSpeedRate(float SpeedRate);
	void CaptureWeapon_Process(float DeltaSeconds);
	bool CaptureWeapon_IsGrabControl();
	bool CaptureWeapon_InAction();
	void CaptureWeapon_End();
	bool CaptureWeapon_CancelForCharacter();
	bool CaptureWeapon_Attack();
	bool CanSpawnInnerOuter();
	bool CanRespawnTarget();
	bool CanGetOnState();
	void CancelRespawnSelfAction(bool ForceCancel);
	void CancelRespawn(class AActor* TargetToRespawn, bool ForceCancel);
	void CancelCloseRangeAttack(enum class ETTLArsenalCloseRangeAttackType AttackType);
	void CancelChangeEquipMode(enum class ETTLChangeEquipMode EquipModeCheck);
	void CancelCaptureWeaponImpl();
	void CameraArm_SetTargetOffset(const struct FVector& Offset, float Time);
	void CallLatentActionOnGetOnFinish(class ATTLPlayerController* PlayerController, TArray<class FName>& SkillList, enum class ETTLEStatusType OuterStatus, class ATTLCharacterCommon* OuterCharacter);
	struct FVector CalcShootLocationCpp(const struct FVector& MuzzleLocation, float BulletSpeed, bool NeedsCalcDeviation, bool IsRestrictCloseness, bool IsOuterRandomEnabled);
	void AttachWeaponSupport(class ATTLSupportWeaponBase* SupportWeapon, class USkeletalMeshComponent* CenterBody, class USkeletalMeshComponent* Legs, class USkeletalMeshComponent* WeaponLackL, class USkeletalMeshComponent* WeaponLackR);
	void AttachWeapon(enum class ETTLPartsType PartsType, class ATTLWeaponBase* Weapon, class USkeletalMeshComponent* MeshToAttach, class FName SocketName);
	void AttachOuterToHatch(class USkeletalMeshComponent* HatchToAttach);
	void Arrested_SetAnimation(bool Enable);
	void ApplyMiscForWreckArsenal(class FName& PartsListID);
	void ApplyInvokedSkillTargetedMyself();
	void ApplyHeatSourceForWreckArsenal(class FName& PartsListID);
	void ApplyCompletelyDestroyForWreckArsenal(class FName& PartsListID);
	void ApplyCompletelyDestroyForStart(class FName& PartsListID);
	void ApplyAllWeaponBulletRemain(uint8 WeaponRemainBits, float RestFemto);
	void AddOnMissionSkillAO(bool IsPlayerOnlySkill, bool SkipVP);
	void AddActionTime();
	void ActionOnRespawnAnimationEnd();
};

// 0x18 (0x358 - 0x340)
// Class DXM.TTLCharacterDeathCamera
class ATTLCharacterDeathCamera : public ATTLActor
{
public:
	class UCameraComponent*                      DeathCamera;                                       // 0x340(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TargetArmLength;                                   // 0x348(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TargetArmOffsetZ;                                  // 0x34C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CameraAngle;                                       // 0x350(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21DE[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLCharacterDeathCamera* GetDefaultObj();

	void InitializeCamera(float NormalArmLength, struct FVector& NormalSocketOffset, struct FVector& ForwardDir, struct FVector& RightDir, struct FTransform& CameraTransform);
};

// 0x220 (0x850 - 0x630)
// Class DXM.TTLCharacterEditScene
class ATTLCharacterEditScene : public ATTLMenuSceneBase
{
public:
	TSubclassOf<class UUserWidget>               buttonClass;                                       // 0x630(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           Widget_top01_page_u00;                             // 0x638(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UUserWidget*>                   buttonList;                                        // 0x640(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UTTLCharaEditMenuComponent*            PCharaEditMenuComponent;                           // 0x650(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLUIOuterCharaCustomComponent*       PUIOuterCharaCustomComponent;                      // 0x658(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLUIColorPickerComponent*            ColorPickerComponent;                              // 0x660(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLUICharaEditItemScrComponent*       PUICharaEditItemScrComponent;                      // 0x668(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21DF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ChangeFacialBlendTime;                             // 0x678(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Tex_pallet_height;                                 // 0x67C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLActionVoiceManager*                ActionVoiceManager;                                // 0x680(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_21E0[0x170];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLCharaEditOuterFacialInfo>  FacialList;                                        // 0x7F8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class ATTLCharacter*                         PlayerOuter;                                       // 0x808(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USkeletalMeshComponent*                OuterHead;                                         // 0x810(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_21E1[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLCharacterEditScene* GetDefaultObj();

	class ATTLYesNoPopUp* SpawnPopup_YesNoBP();
	class ATTLOkPopUp* SpawnPopup_OkBP();
	class ATTLCommonPopup* SpawnPopup_CommonBP();
	void SetupStandardAnime();
	void SetupPopup_YesNo();
	void SetupPopup_Ok();
	void SetupPopup_Common();
	void SetupMenu(int32 StartCursorPos);
	void SetupHeader();
	void SetupFirstEdit();
	void SetupCheckMode();
	void SetDebugMode();
	void Popup_Yes_Selected();
	void Popup_Ok_Selected();
	void Popup_No_Selected();
	void Popup_Common_Decide();
	void Popup_Common_Cancel();
	void PlayAnimBP_EndScene();
	bool ColorPic_IsEdit();
	void ColorPic_Decide();
	void ColorPic_Cancel();
	void ChangeCharacterEditSceneState(enum class ETTLECharacterEditSceneState NewState);
};

// 0x98 (0x190 - 0xF8)
// Class DXM.TTLCharacterInfoHUDComponent
class UTTLCharacterInfoHUDComponent : public UTTLActorComponent
{
public:
	enum class ETTLCharacterInfoHUDMode          HudMode;                                           // 0xF8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21E3[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UUserWidget>               WidgetClass;                                       // 0x100(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           Widget;                                            // 0x108(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RangeFromPlayer;                                   // 0x110(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RangeFromPlayerAlly;                               // 0x114(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RangeFromPlayerOuter;                              // 0x118(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RangeFromPlayerAllyOuter;                          // 0x11C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UseTraceOnCheckSightIntervalSeconds;               // 0x120(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsCenterPosition;                                  // 0x124(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsFixedBoxExtent;                                  // 0x125(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21E4[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FixedBoxExtentX;                                   // 0x128(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FixedBoxExtentY;                                   // 0x12C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FixedBoxExtentZ;                                   // 0x130(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LastShowMode;                                      // 0x134(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21E5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LockonTargetDistance;                              // 0x138(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnabledLockonInfo;                                 // 0x13C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LastEnabledLockonInfo;                             // 0x13D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21E6[0x4A];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLMultiplayDuelControlComponent*     MultiplayDuelControlComponent;                     // 0x188(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLCharacterInfoHUDComponent* GetDefaultObj();

	void UpdateCharacterInfoHUD(float DeltaSeconds);
	void PlayAnimation();
	void NoticeLockonInfo(float Distance);
	bool IsInSightFromPlayer();
	bool IsInRangeFromPlayer();
	bool IsInGameViewport();
	class FText GetLockonTargetDistance();
	class FText GetAndSetCharacterName();
	bool CanGetOn();
	bool CalcScreenLocation(struct FVector2D* ScreenLocation);
};

// 0x0 (0xF8 - 0xF8)
// Class DXM.TTLCharacterMarkerHUD2Component
class UTTLCharacterMarkerHUD2Component : public UTTLActorComponent
{
public:

	static class UClass* StaticClass();
	static class UTTLCharacterMarkerHUD2Component* GetDefaultObj();

};

// 0x158 (0x250 - 0xF8)
// Class DXM.TTLCharacterMarkerHUD3Component
class UTTLCharacterMarkerHUD3Component : public UTTLActorComponent
{
public:
	TSubclassOf<class UUserWidget>               WidgetClass;                                       // 0xF8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           Widget;                                            // 0x100(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             Offset;                                            // 0x108(0x8)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RegionLeftOffset;                                  // 0x110(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RegionRightOffset;                                 // 0x114(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RegionTopOffset;                                   // 0x118(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RegionBottomOffset;                                // 0x11C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UseTraceOnCheckSightIntervalSeconds;               // 0x120(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          BackColorWarningOverheat;                          // 0x124(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          BackColorWarningRaderSpike;                        // 0x134(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          BackColorWarningMissile;                           // 0x144(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          BackColorStatusBurn;                               // 0x154(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          BackColorStatusStun;                               // 0x164(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          BackColorStatusFlash;                              // 0x174(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          BackColorStatusAcid;                               // 0x184(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          BackColorStatusRaderJamming;                       // 0x194(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          BackColorDuelable;                                 // 0x1A4(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          BackColorDuelDest;                                 // 0x1B4(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          BackColorDuelSrc;                                  // 0x1C4(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          BackColorInDuel;                                   // 0x1D4(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21ED[0x24];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLCharacterCommon*                   OwnerCharaCommon;                                  // 0x208(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_21EE[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLBasicStatusComponent*              BasicStatusComponent;                              // 0x220(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_21EF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLCatchableActorComponent*           CatchableActorComponent;                           // 0x230(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLMultiplayDuelControlComponent*     MultiplayDuelControlComponent;                     // 0x238(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_21F0[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLCharacterMarkerHUD3Component* GetDefaultObj();

	void SetUpStatus(enum class ETTLMarkerHUD3Status Status, enum class ETTLMarkerHUD3Status LastStatus);
	void SetUpShowMode(enum class ETTLMarkerHUD3ShowMode ShowMode, enum class ETTLMarkerHUD3ShowMode LastShowMode);
	bool IsInVisibleRegion(const struct FVector2D& Location);
	bool IsInSightFromPlayer();
	enum class ETTLWarningIcon GetStatusWarningIcon(enum class ETTLMarkerHUD3Status Status);
	class FText GetStatusText(enum class ETTLMarkerHUD3Status Status);
	struct FLinearColor GetStatusBackgroundColor(enum class ETTLMarkerHUD3Status Status);
	float GetRegionTop();
	float GetRegionRight();
	float GetRegionLeft();
	float GetRegionBottom();
	enum class ETTLMarkerHUD3Status CheckStatus();
	enum class ETTLMarkerHUD3ShowMode CheckShowMode(const struct FVector2D& ScreenLocation, bool IsInScreen, struct FVector2D* ModifiedScreenLocation);
	bool CalcScreenLocation(struct FVector2D* ScreenLocation);
};

// 0x8 (0xBA0 - 0xB98)
// Class DXM.TTLCharacterMeshComponent
class UTTLCharacterMeshComponent : public USkeletalMeshComponent
{
public:
	uint8                                        Pad_21F1[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLCharacterMeshComponent* GetDefaultObj();

};

// 0x0 (0x770 - 0x770)
// Class DXM.TTLCharacterMovementComponent
class UTTLCharacterMovementComponent : public UCharacterMovementComponent
{
public:

	static class UClass* StaticClass();
	static class UTTLCharacterMovementComponent* GetDefaultObj();

};

// 0x1E0 (0x2D0 - 0xF0)
// Class DXM.TTLCharaEditMenuComponent
class UTTLCharaEditMenuComponent : public UActorComponent
{
public:
	bool                                         IsInitialized;                                     // 0xF0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21F9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UUserWidget*                           PWidget_Menu;                                      // 0xF8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           Widget_top01_page_u00;                             // 0x100(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           Widget_top01_page_u01;                             // 0x108(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_MainButtonON;                            // 0x110(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_MainButtonOFF;                           // 0x118(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_SubButtonON;                             // 0x120(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_SubButtonOFF;                            // 0x128(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_SubChkON;                                // 0x130(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_SubChkOFF;                               // 0x138(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_EditSelectTop_ON;                        // 0x140(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_EditSelectTop_OFF;                       // 0x148(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_EditSelect00_ON;                         // 0x150(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_EditSelect00_OFF;                        // 0x158(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_EditSelect01_ON;                         // 0x160(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_EditSelect01_OFF;                        // 0x168(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_Edit_TexPal_Cursor_ON;                   // 0x170(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_Edit_TexPal_Cursor_OFF;                  // 0x178(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_Facial_In;                               // 0x180(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_Facial_Out;                              // 0x188(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_PageMove_Right;                          // 0x190(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_PageMove_Left;                           // 0x198(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_Dem_Cha_Menu00;                              // 0x1A0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_Dem_Cha_Menu01;                              // 0x1A8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_Dem_Cha_Page01;                              // 0x1B0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_Dem_Cha_ptr04;                               // 0x1B8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_Dem_Cha_plt00;                               // 0x1C0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_Hom_paint_plt01;                             // 0x1C8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_Dem_Cha_prt00;                               // 0x1D0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_Dem_Cha_btn00;                               // 0x1D8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_Hom_asb_mny00;                               // 0x1E0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_Dem_Cha_prt02;                               // 0x1E8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_Dem_Cha_title00;                             // 0x1F0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_Dem_Cha_cp00;                                // 0x1F8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_Dem_Cha_plt01;                               // 0x200(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_Dem_Cha_prt03;                               // 0x208(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_Dem_Cha_Face00;                              // 0x210(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_Dem_Cha_Title01;                             // 0x218(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_Cmn_parts_Page00;                            // 0x220(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UUserWidget*>                   MainButtonsList;                                   // 0x228(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UUserWidget*>                   SubButtonsList;                                    // 0x238(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UUserWidget*>                   EditButtonsList;                                   // 0x248(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UUserWidget*>                   HeadLineList;                                      // 0x258(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UUserWidget*                           MoneyHeadLine;                                     // 0x268(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_21FA[0x2C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentCursor_MainButtons;                         // 0x29C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        CurrentCursor_SubButtons;                          // 0x2A0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ETTLECharaEditMenuTopState        State;                                             // 0x2A4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_21FB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentCursor_EditSelect_;                         // 0x2A8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_21FC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UUserWidget*>                   FacialIconList;                                    // 0x2B0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_21FD[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLCharaEditMenuComponent* GetDefaultObj();

	void UpdateMainCursor(int32 NewCursor);
	void SwitchCheckBox_Sub(class UUserWidget* Button, bool IsOn);
	void SwitchButton_Sub(class UUserWidget* Button, bool IsOn, bool IsFix);
	void SwitchButton_Main(class UUserWidget* Button, bool IsOn, bool Fix);
	bool InitializeBP();
	void Initialize(class UUserWidget* PMenuWidget);
	void GetCurrentCursor(enum class ETTLECharaEditMenuTopState* CursorState, int32* MainCursor, int32* SubCursor);
	void EditMenu_Select_Switch_Sub(class UUserWidget* Button, class UWidgetAnimation* On, class UWidgetAnimation* Off, class FName Key, bool IsOn);
	void EditMenu_Select_Switch(class UUserWidget* Button, int32 Pos);
	void CloseSubButtons();
	bool ChangeCursor(int32 Offset, int32 RepeatCount);
};

// 0x0 (0xF8 - 0xF8)
// Class DXM.TTLChargeGaugeHUDComponent
class UTTLChargeGaugeHUDComponent : public UTTLActorComponent
{
public:

	static class UClass* StaticClass();
	static class UTTLChargeGaugeHUDComponent* GetDefaultObj();

	void UpdateHUDBP(float DeltaSeconds);
	void UpdateHUD(float DeltaSeconds);
};

// 0xD8 (0x1C8 - 0xF0)
// Class DXM.TTLChaseAutoRunComponent
class UTTLChaseAutoRunComponent : public UActorComponent
{
public:
	class ATTLSplinePath*                        AutoRunPath;                                       // 0xF0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLChaseSpeedConvertParam            GroundMoveConvert;                                 // 0xF8(0x10)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLChaseSpeedConvertParam            FlyMoveConvert;                                    // 0x108(0x10)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLChaseSpeedConvertParam            GroundBoostConvert;                                // 0x118(0x10)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLChaseSpeedConvertParam            FlyBoostConvert;                                   // 0x128(0x10)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	float                                        MoveSpeedConvertRate;                              // 0x138(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxMoveSpeed;                                      // 0x13C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxMoveFunnelSpeed;                                // 0x140(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21FF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ChcekTargetDistanceRate;                           // 0x148(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ForceSpeedAlongValue;                              // 0x14C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsReverseRun;                                      // 0x150(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2200[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LeadingSpeedRate;                                  // 0x154(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChasingSpeedRate;                                  // 0x158(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpeedAddDistance;                                  // 0x15C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpeedDownRateOfCannonAttack;                       // 0x160(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpeedDownRateOfRailGunAttack;                      // 0x164(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2201[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsBoostOffInUsingCannon;                           // 0x170(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2202[0x33];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FunnelSpeedRate;                                   // 0x1A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MissileSpeedRate;                                  // 0x1A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2203[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsStopRailGun;                                     // 0x1C4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2204[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLChaseAutoRunComponent* GetDefaultObj();

	void SetFirstSpeed(float FirstSpeed);
	bool IsMileageLargerThanActor(class AActor* Actor);
	struct FVector GetAutoRunDirection();
	void CalcSpeedParameter();
};

// 0x0 (0x28 - 0x28)
// Class DXM.TTLChatSettingDataManager
class UTTLChatSettingDataManager : public UObject
{
public:

	static class UClass* StaticClass();
	static class UTTLChatSettingDataManager* GetDefaultObj();

	TArray<struct FTTLChatSettingMessage> GetMessages(class FName CategoryID);
	TArray<struct FTTLEmoteSetting> GetEmotes();
	TArray<struct FTTLChatSettingCategory> GetCategories();
};

// 0x0 (0x88 - 0x88)
// Class DXM.TTLChatSettingParam
class UTTLChatSettingParam : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UTTLChatSettingParam* GetDefaultObj();

};

// 0x40 (0x670 - 0x630)
// Class DXM.TTLChatSettingScene
class ATTLChatSettingScene : public ATTLMenuSceneBase
{
public:
	class UTTLUIChatSettingComponent*            ChatSettingComponent;                              // 0x630(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>               BackgroundWidgetClass;                             // 0x638(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           BackgroundWidget;                                  // 0x640(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLPopUpBase>             CommonPopupClass;                                  // 0x648(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLChatSettingState              CurrentState;                                      // 0x650(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ETTLChatSettingState              LastState;                                         // 0x651(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2219[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LastCursor;                                        // 0x654(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        SwapSource;                                        // 0x658(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_221A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLCommonPopup*                       CommonPopUp;                                       // 0x660(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_221B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLChatSettingScene* GetDefaultObj();

	void UpdatePresetMessage(enum class ETTLChatMessageFor MessageFor, int32 Position, const struct FTTLChatSettingMessage& ChatSettingMessage);
	void UpdatePresetEmote(enum class ETTLChatMessageFor MessageFor, int32 Position, const struct FTTLEmoteSetting& EmoteSetting);
	void UpdatePanels();
	void UpdateHeader();
	void UpdateChatVisibility(int32 NewValue);
	void UpdateChatLogVisibilityPanel();
	void SwapPresetMessage(enum class ETTLChatMessageFor MessageFor, int32 Position1, int32 Position2);
	void ResetPresetMessage(enum class ETTLChatMessageFor MessageFor, int32 Position);
	void ResetPresetEmote(enum class ETTLChatMessageFor MessageFor, int32 Position);
	void OnInputRepeatActionSelectSwapDestination(enum class ETTLEActionType KeyType, int32 Count);
	void OnInputRepeatActionSelectResetPresetMessage(enum class ETTLEActionType KeyType, int32 Count);
	void OnInputRepeatActionSelectResetPresetEmote(enum class ETTLEActionType KeyType, int32 Count);
	void OnInputRepeatActionSelectPresetMessageItem(enum class ETTLEActionType KeyType, int32 Count);
	void OnInputRepeatActionSelectPresetMessageCategory(enum class ETTLEActionType KeyType, int32 Count);
	void OnInputRepeatActionSelectMessageSource(enum class ETTLEActionType KeyType, int32 Count);
	void OnInputRepeatActionSelectMessageChangeMethod(enum class ETTLEActionType KeyType, int32 Count);
	void OnInputRepeatActionSelectItem(enum class ETTLEActionType KeyType, int32 Count);
	void OnInputRepeatActionSelectEmote(enum class ETTLEActionType KeyType, int32 Count);
	void OnInputRepeatActionSelectChatLogVisibility2(enum class ETTLEActionType KeyType, int32 Count);
	void OnInputRepeatActionSelectChatLogVisibility1(enum class ETTLEActionType KeyType, int32 Count);
	void OnInputActionSelectSwapDestination(enum class ETTLEActionType KeyType, bool IsPressed);
	void OnInputActionSelectResetPresetMessage(enum class ETTLEActionType KeyType, bool IsPressed);
	void OnInputActionSelectResetPresetEmote(enum class ETTLEActionType KeyType, bool IsPressed);
	void OnInputActionSelectPresetMessageItem(enum class ETTLEActionType KeyType, bool IsPressed);
	void OnInputActionSelectPresetMessageCategory(enum class ETTLEActionType KeyType, bool IsPressed);
	void OnInputActionSelectMessageSource(enum class ETTLEActionType KeyType, bool IsPressed);
	void OnInputActionSelectMessageChangeMethod(enum class ETTLEActionType KeyType, bool IsPressed);
	void OnInputActionSelectItem(enum class ETTLEActionType KeyType, bool IsPressed);
	void OnInputActionSelectEmote(enum class ETTLEActionType KeyType, bool IsPressed);
	void OnInputActionSelectChatLogVisibility2(enum class ETTLEActionType KeyType, bool IsPressed);
	void OnInputActionSelectChatLogVisibility1(enum class ETTLEActionType KeyType, bool IsPressed);
	void OnDecideResetPresetMessagePopUp();
	void OnDecideResetPresetEmotePopUp();
	void OnClosedResetPresetMessagePopUp();
	void OnClosedResetPresetEmotePopUp();
	bool IsDefaultPresetMessage(enum class ETTLChatMessageFor MessageFor, int32 Position);
	bool IsDefaultPresetEmote(enum class ETTLChatMessageFor MessageFor, int32 Position);
	void Initialize(class UUserWidget* UserWidget);
	enum class ETTLChatMessageFor GetCurrentChatMessageFor();
};

// 0x8 (0x3C8 - 0x3C0)
// Class DXM.TTLChatStgCmnPopUp
class ATTLChatStgCmnPopUp : public ATTLPopUpBase
{
public:
	class UTTLChatStgCmnScrollListComponent*     ChatStgCmnScrollListComponent;                     // 0x3C0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ATTLChatStgCmnPopUp* GetDefaultObj();

	bool SetAnimationFromBP();
	void OnInputRepeatAction(enum class ETTLEActionType KeyType, int32 Count);
	void OnInputAction(enum class ETTLEActionType KeyType, bool IsPressed);
};

// 0xA8 (0x198 - 0xF0)
// Class DXM.TTLScrollListComponentBase
class UTTLScrollListComponentBase : public UActorComponent
{
public:
	TSubclassOf<class UUserWidget>               Class_ListButtonWidget;                            // 0xF0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_PartsButtonON;                           // 0xF8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_PartsButtonOFF;                          // 0x100(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UUserWidget*>                   ButtonsList;                                       // 0x108(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UUserWidget*                           Widget_TopWidget;                                  // 0x118(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UScrollBox*                            Widget_ScrollBox;                                  // 0x120(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUniformGridPanel*                     Widget_UniformGridPanel;                           // 0x128(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGridPanel*                            Widget_GridPanel;                                  // 0x130(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           AdjustButton;                                      // 0x138(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           ReferenceButton;                                   // 0x140(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_221F[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SimultaneousCreateBtnNum;                          // 0x170(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2220[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UUserWidget*>                   ButtonWidgetPool;                                  // 0x178(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2221[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLScrollListComponentBase* GetDefaultObj();

	bool MovePageToUp(int32 Count);
	bool MovePageToDown(int32 Count);
};

// 0x0 (0x198 - 0x198)
// Class DXM.TTLChatStgCmnScrollListComponent
class UTTLChatStgCmnScrollListComponent : public UTTLScrollListComponentBase
{
public:

	static class UClass* StaticClass();
	static class UTTLChatStgCmnScrollListComponent* GetDefaultObj();

	bool InitializeBP();
	void Initialize(class UUserWidget* LayoutWidget, int32 DisplayNum, int32 ListNumMax);
	class FText GetButtonText(int32 Position);
	class UUserWidget* CreateButtonWidget(int32 Position);
};

// 0x10 (0x1A8 - 0x198)
// Class DXM.TTLChatStgPSCScrollListComponent
class UTTLChatStgPSCScrollListComponent : public UTTLScrollListComponentBase
{
public:
	TArray<struct FTTLChatSettingCategory>       Categories;                                        // 0x198(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLChatStgPSCScrollListComponent* GetDefaultObj();

	void SetGrayOut(bool IsGrayOut);
	bool InitializeBP();
	void Initialize(class UUserWidget* LayoutWidget, int32 DisplayNum, int32 ListNumMax);
	class UUserWidget* CreateButtonWidget(int32 Position);
};

// 0x28 (0x1C0 - 0x198)
// Class DXM.TTLChatStgPSIScrollListComponent
class UTTLChatStgPSIScrollListComponent : public UTTLScrollListComponentBase
{
public:
	TArray<struct FTTLChatSettingMessage>        Messages;                                          // 0x198(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLEmoteSetting>              Emotes;                                            // 0x1A8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2226[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLChatStgPSIScrollListComponent* GetDefaultObj();

	void StopButtonAnimation(class UUserWidget* Button, class UWidgetAnimation* Animation);
	void PlayButtonAnimation(class UUserWidget* Button, class UWidgetAnimation* Animation);
	bool InitializeBP();
	void Initialize(class UUserWidget* LayoutWidget, int32 DisplayNum, int32 ListNumMax);
	class UUserWidget* CreateButtonWidget(int32 Position);
};

// 0x20 (0x3E0 - 0x3C0)
// Class DXM.TTLChatStgPSPopUp
class ATTLChatStgPSPopUp : public ATTLPopUpBase
{
public:
	class UTTLChatStgPSCScrollListComponent*     ChatStgPSCScrollListComponent;                     // 0x3C0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLChatStgPSIScrollListComponent*     ChatStgPSIScrollListComponent;                     // 0x3C8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLChatSettingDataManager*            ChatSettingDataManager;                            // 0x3D0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2227[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLChatStgPSPopUp* GetDefaultObj();

	void UpdateMessageScrollList();
	void SetGrayOutMessagePanel(bool IsGrayOut);
	bool SetAnimationFromBP();
	struct FTTLChatSettingMessage GetCurrentMessage();
	struct FTTLEmoteSetting GetCurrentEmote();
};

// 0x0 (0x198 - 0x198)
// Class DXM.TTLChatStgScrollListComponent
class UTTLChatStgScrollListComponent : public UTTLScrollListComponentBase
{
public:

	static class UClass* StaticClass();
	static class UTTLChatStgScrollListComponent* GetDefaultObj();

	void StopButtonAnimation(class UUserWidget* Button, class UWidgetAnimation* Animation);
	void SetGrayOut(bool IsGrayOut);
	void SetButtonText(class UUserWidget* Button, class FText Text);
	void PlayButtonAnimation(class UUserWidget* Button, class UWidgetAnimation* Animation);
	bool InitializeBP();
	void Initialize(class UUserWidget* LayoutWidget, int32 DisplayNum, int32 ListNumMax);
	class UUserWidget* CreateButtonWidget(int32 Position);
};

// 0x28 (0x1C0 - 0x198)
// Class DXM.TTLChatStgSrcScrollListComponent
class UTTLChatStgSrcScrollListComponent : public UTTLScrollListComponentBase
{
public:
	class UWidgetAnimation*                      Animation_PartsButtonHighlightON;                  // 0x198(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_PartsButtonHighlightOFF;                 // 0x1A0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_PartsButtonSwapDestinationON;            // 0x1A8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_PartsButtonSwapDestinationOFF;           // 0x1B0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsSwapping;                                        // 0x1B8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ETTLChatMessageFor                MessageFor;                                        // 0x1B9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_222C[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLChatStgSrcScrollListComponent* GetDefaultObj();

	void StopButtonAnimation(class UUserWidget* Button, class UWidgetAnimation* Animation);
	void SetSwapMode(bool IsSwap);
	void SetMessageFor(enum class ETTLChatMessageFor MessageFor);
	void SetHighlight(int32 Position, bool IsHighlight);
	void PlayButtonAnimation(class UUserWidget* Button, class UWidgetAnimation* Animation);
	bool InitializeBP();
	void Initialize(class UUserWidget* LayoutWidget, int32 DisplayNum, int32 ListNumMax);
	struct FTTLChatMessage GetChatMessage(int32 Position);
	class UUserWidget* CreateButtonWidget(int32 Position);
};

// 0x38 (0x3F8 - 0x3C0)
// Class DXM.TTLChatTalkerPopUp
class ATTLChatTalkerPopUp : public ATTLPopUpBase
{
public:
	class UWidgetAnimation*                      Animation_EnableTab;                               // 0x3C0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_DisableTab;                              // 0x3C8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_EnableFreeInputButton;                   // 0x3D0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLInlineKeyboardActor*               PInlineKeyboardActor;                              // 0x3D8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLChatTalkerScrollListComponent*     ChatTalkerScrollListComponent;                     // 0x3E0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FTTLChatMessage>               ChatMessages;                                      // 0x3E8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ATTLChatTalkerPopUp* GetDefaultObj();

	void SetUpTab(class UUserWidget* TabWidget, bool Enabled, class FText TabText);
	void SetMode(enum class ETTLChatTalkerPopUpMode NewMode);
	void SetChatItem_FreeInput(class UUserWidget* ChatItemWidget);
	bool SetAnimationFromBP();
	void OnInputRepeatActionPresetInput(enum class ETTLEActionType KeyType, int32 Count);
	void OnInputRepeatActionFreeInput(enum class ETTLEActionType KeyType, int32 Count);
	void OnInputRepeatAction(enum class ETTLEActionType KeyType, int32 Count);
	void OnInputActionPresetInput(enum class ETTLEActionType KeyType, bool IsPressed);
	void OnInputActionFreeInput(enum class ETTLEActionType KeyType, bool IsPressed);
	void OnInputAction(enum class ETTLEActionType KeyType, bool IsPressed);
	void KeyboardClosed(const class FString& InputText, bool IsCancel);
	bool IsKeyboardActive();
	bool Destroy_InlineKeyboardBP();
	void CreateKeyboard();
	bool Create_InlineKeyboardBP();
	void BeforeOpenPopUp();
};

// 0x18 (0x1B0 - 0x198)
// Class DXM.TTLChatTalkerScrollListComponent
class UTTLChatTalkerScrollListComponent : public UTTLScrollListComponentBase
{
public:
	TArray<struct FTTLChatMessage>               ChatMessages;                                      // 0x198(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	enum class ETTLChatTalkerPopUpMode           CurrentMode;                                       // 0x1A8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2233[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLChatTalkerScrollListComponent* GetDefaultObj();

	void StopButtonAnimation(class UUserWidget* Button, class UWidgetAnimation* Animation);
	void SetMode(enum class ETTLChatTalkerPopUpMode NewMode);
	void SetChatItem_PresetInput(class UUserWidget* ChatItemWidget, const struct FTTLChatMessage& ChatMessage);
	void SetChatItem_FreeInput(class UUserWidget* ChatItemWidget);
	void PlayButtonAnimation(class UUserWidget* Button, class UWidgetAnimation* Animation);
	bool InitializeBP();
	void Initialize(class UUserWidget* LayoutWidget, int32 DisplayNum, int32 ListNumMax);
	class UUserWidget* CreateButtonWidget(int32 Position);
};

// 0x60 (0xD8 - 0x78)
// Class DXM.TTLCheatManager
class UTTLCheatManager : public UCheatManager
{
public:
	class UTTLGameAutomationFactory*             GameAutomationFactory;                             // 0x78(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        PutScoreValue;                                     // 0x80(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_224A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                PlayerName;                                        // 0x88(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        GetRankingOffset;                                  // 0x98(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_224B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UUserWidget*                           DebugRaderChartWidget;                             // 0xA0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_224C[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                CheatTickActor;                                    // 0xC8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_224D[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLCheatManager* GetDefaultObj();

	void TTLUserPrivilege();
	void TTLUnLoadMapChip(const class FString& ChipName, const class FString& ChipPathRoot);
	void TTLTreasureWeaponRemove(class FName PartsListID);
	void TTLTreasureWeaponClear();
	void TTLToggleRandomDamage();
	void TTLToggleDebugWeaponStatus(uint8 WeaponSlot);
	void TTLToggleCameraLensEffect();
	void TTLTestMakeDummyWpnUseLog(float HitRatioParTotalBullet);
	void TTLTeleportSave();
	void TTLTeleportLoad();
	void TTLTeleport(float X, float Y, float Z);
	void TTLSwitchVisibleSampleRadarChart();
	void TTLSwitchSurvivalDebugPlayLastMap_CheatManager();
	void TTLSwitchSurvivalDebugPlayCompleteMap_CheatManager();
	void TTLSwitchSurvivalDebugMap_CheatManager();
	void TTLSwitchShowAllCharaEditItem();
	void TTLSwitchShowAbnormalStatus(uint8 AbnormalTypeIndex);
	void TTLSwitchLoadMapChip(const class FString& ChipName, const class FString& ChipPathRoot);
	void TTLSwitchForceFailureLoad_Trial_2_0();
	void TTLSurvivalTeleportForwardRoom_CheatManager();
	void TTLSurvivalSpawnNpcArsenal(bool bHidden);
	void TTLSurvivalSpawnCustomizedArsenal(bool bHidden);
	void TTLSurvivalRangeKillAttack_CheatManager();
	void TTLSurvivalLoadMapFromLogfile(const class FString& FilePath);
	void TTLSurvivalForceOpenThisRoom_CheatManager();
	void TTLSurvivalDungeonCreateAndLotterySimple(int32 CheckNum);
	void TTLSurvivalDungeonCreateAndLottery(int32 CheckNum);
	void TTLSurvivalDungeonCheckMapInfo(int32 CheckNum);
	void TTLSurvivalDebugMapInfoSave_CheatManager();
	void TTLSurvivalDebugMapInfoLoad_CheatManager();
	void TTLSurvivalCountPawn();
	void TTLSurvivalAllPawnDestroy();
	void TTLSurvivalAllArsenalDestroy();
	void TTLSurvivalAllActorTickLog_CheatManager();
	void TTLStopAutomation();
	void TTLStopAllAI(bool Flag);
	void TTLSteamUserStatsWrite(int32 RatingValue);
	void TTLSteamUserStatsRead();
	void TTLSteamUserAllPlayerStatsRead();
	void TTLSteamAchievementResetAll();
	void TTLSteamAchievementReset(const class FString& AchievementID);
	void TTLSteamAchievementGet(const class FString& AchievementID);
	void TTLStartTrialMode();
	void TTLStartLoggingMemoryPeak();
	void TTLStartDamageReaction(float KnockBack, float KnockOut);
	void TTLStartAutoMationInSelectMission();
	void TTLSpawnMyNPCInBattle(class FName NpcID);
	void TTLSoundDump();
	void TTLSoundDebugMode(int32 Type);
	void TTLShowSupportedFullscreenResolutions();
	void TTLShowSettingLanguage();
	void TTLShowPlayerSkillInfo();
	void TTLShowOnlineShop();
	void TTLShowMainDisplayResoluation();
	void TTLShowLastInputDevice();
	void TTLShowKeyboardInput();
	void TTLShowFlagItemState();
	void TTLShowEnemyKillCount();
	void TTLShowEnableResolutionPreset();
	void TTLShowDisconnectionCount();
	void TTLShowDesktopResolution();
	void TTLShowCurrentWindowSize();
	void TTLShowCurrentAssembleList();
	void TTLShowConvenientWindowedResolutions();
	void TTLShowAllTips();
	void TTLSetWindowScreeenMode();
	void TTLSetWarningAreaWallSubVisibility(bool Value);
	void TTLSetVisibilityBlackWall(bool NewVisibility);
	void TTLSetViewQualityMedium();
	void TTLSetViewQualityLow();
	void TTLSetViewQualityHigh();
	void TTLSetViewQualityEpic();
	void TTLSetViewQuality(int32 Quality);
	void TTLSetupMissionRankingCountData();
	void TTLSetUpdateNavMesh(bool Enable);
	void TTLSetTextureQualityMedium();
	void TTLSetTextureQualityLow();
	void TTLSetTextureQualityHigh();
	void TTLSetTextureQualityEpic();
	void TTLSetTextureQuality(int32 Quality);
	void TTLSetShadowQualityMedium();
	void TTLSetShadowQualityLow();
	void TTLSetShadowQualityHigh();
	void TTLSetShadowQualityEpic();
	void TTLSetShadowQuality(int32 Quality);
	void TTLSetResolutionScale80();
	void TTLSetResolutionScale50();
	void TTLSetResolutionScale30();
	void TTLSetResolutionScale100();
	void TTLSetResolutionScale(float Scale);
	void TTLSetResolution800x600();
	void TTLSetResolution3840x2160();
	void TTLSetResolution2560x1440();
	void TTLSetResolution2560x1080();
	void TTLSetResolution2048x1152();
	void TTLSetResolution1920x1080();
	void TTLSetResolution1680x1050();
	void TTLSetResolution1600x900();
	void TTLSetResolution1366x768();
	void TTLSetResolution1280x720();
	void TTLSetResolution(int32 Width, int32 Height);
	void TTLSetRaderRadius(float Radius);
	void TTLSetRaderAlphaCalcType(int32 Value);
	void TTLSetRadarJamming(bool Enable);
	void TTLSetPostProcessQualityMedium();
	void TTLSetPostProcessQualityLow();
	void TTLSetPostProcessQualityHigh();
	void TTLSetPostProcessQualityEpic();
	void TTLSetPostProcessQuality(int32 Quality);
	void TTLSetPlayerActionVoiceIndex(uint8 Index);
	void TTLSetPerformance(int32 Type);
	void TTLSetOveallScalabilityQualityMidium();
	void TTLSetOveallScalabilityQualityLow();
	void TTLSetOveallScalabilityQualityHigh();
	void TTLSetOveallScalabilityQualityEpic();
	void TTLSetOveallScalabilityQuality(int32 Quality);
	void TTLSetOuterShootLocationType(int32 Type);
	void TTLSetOpenRankingErrorPop();
	void TTLSetOgreCameraMovementLimit(float Value);
	void TTLSetNPCJoined(class FName& NpcID);
	void TTLSetMinimapSaturation(float Saturation);
	void TTLSetMinimapPostProcessBlendWeight(float Value);
	void TTLSetMinimapMidtoneOffset(float Offset);
	void TTLSetMinimapGlobalOffset(float Offset);
	void TTLSetMinimapGamma(float Gamma);
	void TTLSetMinimapFar(float NewFar);
	void TTLSetMinimapDropItemZRange(float Value);
	void TTLSetMinimapContrast(float Contrast);
	void TTLSetMinimapCameraZ(float ZPos);
	void TTLSetMinimapCameraXY(float XPos, float YPos);
	void TTLSetMaterialQualityMedium();
	void TTLSetMaterialQualityLow();
	void TTLSetMaterialQualityHigh();
	void TTLSetMaterialQuality(int32 Quality);
	void TTLSetHUDCustom();
	void TTLSetHideHUDWithoutRadar(int32 IsHideHUD);
	void TTLSetFullScreeenMode();
	void TTLSetForceStartSpectatorMode(bool IsStart);
	void TTLSetForceEnableSpectatorMode();
	void TTLSetFoliageQualityMedium();
	void TTLSetFoliageQualityLow();
	void TTLSetFoliageQualityHigh();
	void TTLSetFoliageQualityEpic();
	void TTLSetFoliageQuality(int32 Quality);
	void TTLSetEnableVSync(bool IsEnable);
	void TTLSetEnableVignetteAndGrainJitter(bool IsEnable);
	void TTLSetEnableSceneColorFlange(bool IsEnable);
	void TTLSetEnablePlayActionVoice(bool Flag);
	void TTLSetEnableOuterActionSkill();
	void TTLSetEnableLensFlare(bool IsEnable);
	void TTLSetEnableInputPad(bool IsEnable);
	void TTLSetEnableGotoMultiMission(bool IsEnable);
	void TTLSetEnableDepthOfField(bool IsEnable);
	void TTLSetEnableCoundDown();
	void TTLSetEnableBlur(bool IsEnable);
	void TTLSetEnableBloom(bool IsEnable);
	void TTLSetEnableArsenalActionSkill();
	void TTLSetEffectQualityMedium();
	void TTLSetEffectQualityLow();
	void TTLSetEffectQualityHigh();
	void TTLSetEffectQualityEpic();
	void TTLSetEffectQuality(int32 Quality);
	void TTLSetDesignateTargetArrowVisibility(bool NewVisibility);
	void TTLSetCountDownTimer(float Time);
	void TTLSetCharaCommonDebugWeaponFlagStatus(class FName CharaName, bool IsShowBitFlag, bool IsShowShootFlag, bool IsShowAttackFlag);
	void TTLSetCanCommunicateOnline(bool Flag);
	void TTLSetBulletTrace(bool IsComplex, bool WithPhysicalMaterial);
	void TTLSetBorderlessScreeenMode();
	void TTLSetBattleModeExistenceFlagOnly(bool HasBattleMode);
	void TTLSetBattleModeExistence(bool HasBattleMode);
	void TTLSetAutoScalabilityQualityC50G10();
	void TTLSetAutoScalabilityQualityC50G1();
	void TTLSetAutoScalabilityQualityC10G1();
	void TTLSetAutoScalabilityQualityC100G100();
	void TTLSetAutoScalabilityQuality(int32 CpuMulti, int32 GpuMulti);
	void TTLSetAudioDeviceOutputVolume(int32 Type);
	void TTLSetAspectRatio21x9();
	void TTLSetAspectRatio17();
	void TTLSetAspectRatio13();
	void TTLSetAspectRatio(float Ratio);
	void TTLSetAntialiaseQualityMedium();
	void TTLSetAntialiaseQualityLow();
	void TTLSetAntialiaseQualityHigh();
	void TTLSetAntialiaseQualityEpic();
	void TTLSetAntialiaseQuality(int32 Quality);
	void TTLSetAntiailiasingTemporalAA();
	void TTLSetAntiailiasingNone();
	void TTLSetAntiailiasingMSAA();
	void TTLSetAntiailiasingFXAA();
	void TTLSetAntiailiasing(int32 Mode);
	void TTLSetAllNPCJoined();
	void TTLScoreOffsetAdd100();
	void TTLSaveCollectInput(const class FString& Filename);
	void TTLRestartGameShoutDown();
	void TTLResetOuterCustomSkill();
	void TTLResetNPCJoinState(class FName& NpcID);
	void TTLResetMissionRankingCount();
	void TTLResetMissionNotifyNewFlag();
	void TTLRepeatInputStart(bool IsRepeat, bool IsInitTransform, bool IsUseInitParameterAtFile, float WaitSpan);
	void TTLRemoveWarningFromHUD(int32 WarningType);
	void TTLRemodelOuterCustom(class FName& DataKey);
	void TTLRefreshRader();
	void TTLReduceWeaponBullet(uint8 SlotType);
	void TTLRecoverFemto(float Ratio);
	void TTLPvPSetMissionResult(enum class ETTLEMissionResult Result);
	void TTLPutScoreValue(int32 PutValue);
	void TTLPutScore();
	void TTLPutMissionRanking();
	void TTLPutCommon();
	void TTLPutBrokenCommon();
	void TTLProgressDevelop(int32 ProgressTurn);
	void TTLProcessLaunch(class FString* Str);
	void TTLPrintWpnUseLog();
	void TTLPrintMemoryInfo();
	void TTLPrintCurrentBattleLog();
	void TTLPlayLocalizedVoice(class FName CueName, bool IsActionVoice);
	void TTLPlayEventPvP(class FName EventName);
	void TTLPlayEvent(class FName EventName);
	void TTLPlayerStatisticsInfoToLog();
	void TTLPlayerAutoBattleResearchTarget();
	void TTLPlayerAutoBattleEnable(bool Flag);
	void TTLPlayerAutoBattleDemoSkip(bool Flag);
	void TTLPlayArsenalPartsCutoff(int32 PartsTypeIndex, bool IsInverseDirection);
	void TTLPauseWarningArea();
	void TTLPauseMissionTimer();
	void TTLOverrideAllManual(bool IsOpen, bool IsReading);
	void TTLOuterExperimental();
	void TTLOpenMissionRank(int32 Rank);
	void TTLOpenManual(int32 BigIndex, int32 SmallIndex, bool IsReading);
	void TTLOpenDlc(int32 DlcIndex);
	void TTLOpenCompeMission(class FName& MissionID);
	void TTLOpenAllMessage();
	void TTLOpenAllLevel();
	void TTLOgreDamage(float Damage);
	void TTLNoHPZero();
	void TTLNoDamage();
	void TTLMissionSequenceSkip();
	void TTLMissionRankingResetReception();
	void TTLMissionRankingReception();
	void TTLMissionRankingOpenReceive(const class FString& IsOpen);
	void TTLMissionRankingNowReceptionStateDisp();
	void TTLMissionRankingLogDisp(const class FString& FilterStr);
	void TTLMissionFinishedAndGotAllDrop();
	void TTLMissionFinished(int32 Type);
	void TTLMinimizeWindow();
	void TTLMeteoriteStop();
	void TTLMeteoriteShadowEnableToggle();
	void TTLMeteoriteInitStart();
	void TTLMeteoriteEnableOutViewExplodeVFXToggle();
	void TTLMeteoriteEnableExplodeAnimToggle();
	void TTLMeteoriteDisplayMeteoNum();
	void TTLMeteoriteCollisionCheck(bool IsEnable, int32 CheckFrameNum, bool IsEnableHeight, float CollisionEnableHeight);
	void TTLMeteoriteAnimationCheck(bool IsEnable, float Height, float CheckSpan);
	void TTLMaximizeWindow();
	void TTLMakeProgressedSaveData(class FName DebugSaveDataParamID);
	void TTLLogNumLobbyMembers();
	void TTLLoadSaveGameData_Trial_2_0();
	void TTLLoadMapChip(const class FString& ChipName, const class FString& ChipPathRoot);
	void TTLLoadedMapChip();
	void TTLLoadCollectInput(const class FString& Filename);
	void TTLLastBossMissionClearAndSave();
	void TTLKillNPCInBattle(class FName& NpcMetaID);
	void TTLKillNPC(class FName& NpcID);
	void TTLInvincibleWithAllNpc();
	void TTLInvinciblePlayerAllMulti();
	void TTLInvincible();
	void TTLInitializeTutorial();
	void TTLInitializeManual();
	void TTLInfinityBullet();
	void TTLInfinity();
	void TTLIceSetMaxTokenNum();
	void TTLIceSetMaxStampNum();
	void TTLIceResetPickup();
	void TTLIceDumpInfo();
	void TTLIceAddTokenNum(int32 AddNum);
	void TTLIceAddStampNum(int32 AddNum);
	void TTLHundredPower();
	void TTLHighResShotOnDockArsenal(int32 Resolution);
	void TTLHideHUD(bool Enable);
	void TTLHideFemtoZone(bool Enable);
	void TTLGhost();
	void TTLGetStatsSub100();
	void TTLGetStats();
	void TTLGetScore();
	void TTLGetPartsWithAttachment(uint32 PartType, class FName& PartsID, class FName& AttachmentID);
	void TTLGetParts(uint32 PartType, class FName& PartsID);
	void TTLGetNPCFriendShip(class FName& NpcID);
	void TTLGetMyScore();
	void TTLGetMissionRanking();
	void TTLGetMatchmakeRefereeStats();
	void TTLGetGameServerTime();
	void TTLGetFlagItem(class FName FlagItemID);
	void TTLGetAudioDeviceOutputVolume();
	void TTLGetAllPartsWithoutDLC();
	void TTLGetAllParts();
	void TTLGetAllPaintDecoration();
	void TTLGetAllNPCActionVoiceWithoutRedDog();
	void TTLGetAllFlagItem();
	void TTLGetAllDecorationNotDLCNotBattle();
	void TTLGetAllAttachment();
	void TTLGetAllActionVoice();
	void TTLGameProcessLaunch();
	void TTLFxDump();
	void TTLFriendNPCPinch();
	void TTLForcePlayerDead(int32 PlayerId);
	void TTLForceOverHeatNPCInBattle(class FName& NpcMetaID);
	void TTLForceOpenAllCompeMission();
	void TTLForceMatchmakeDisconnectThresholdValue();
	void TTLForceLODShadowOFF();
	void TTLForceLODShadow04();
	void TTLForceLODShadow01();
	void TTLForceLODShadow(int32 Quality);
	void TTLForceKillLocalPlayer();
	void TTLForceGameClear();
	void TTLForceEncountEvent(int32 Index);
	void TTLForceCrash();
	void TTLForceAssert();
	void TTLFinishLoggingMemoryPeak();
	void TTLEventSkip();
	void TTLEventPVMode(bool Enable);
	void TTLEventPlaybackPositionDisplay();
	void TTLEntryBaseCampWeaponAll();
	void TTLEndCoundDown();
	void TTLEnableVSync();
	void TTLEnableVignetteAndGrainJitter();
	void TTLEnableSceneColorFlange();
	void TTLEnableOuterInfiniteJump();
	void TTLEnableLensFlare();
	void TTLEnableInputPad();
	void TTLEnableFemtoSunctionZone();
	void TTLEnableDepthOfField();
	void TTLEnableConstrainCameraAspect();
	void TTLEnableBorderlessWindow();
	void TTLEnableBlur();
	void TTLEnableBloom();
	void TTLEnableAutomation_TargetMission(class FString* TargetMissionID);
	void TTLEnableAutomation_RankMatchContinue();
	void TTLEnableAutomation_RankMatch();
	void TTLEnableAutomation_AutoOnlineCoopMission(const class FString& HostName);
	void TTLEnableAutomation_AutoOnlineCoopInSelectingMission();
	void TTLEnableAutomation_AutoOnlineCoopHostRoomEnterExit(const class FString& MissionName);
	void TTLEnableAutomation_AutoOnlineCoopGuestRoomEnterExit(const class FString& MissionName);
	void TTLEnableAutomation_AutoOnlineCoopCreate(const class FString& MissionName);
	void TTLEnableAutomation_AutoOnlineCoopClient(const class FString& MissionName);
	void TTLEnableAutomation_AutoOnlineCoop(bool IsHost, const class FString& MissionParam);
	void TTLEnableAutomation_AutoOnlineBattleHost(const class FString& MissionName);
	void TTLEnableAutomation_AutoOnlineBattleClient(const class FString& MissionName);
	void TTLEnableAutomation_AutoLocalCoopSearch(const class FString& MissionName);
	void TTLEnableAutomation_AutoLocalCoopCreate(const class FString& MissionName);
	void TTLEnableAutomation_AutoLocalBattleHost1VS1(const class FString& MissionName);
	void TTLEnableAutomation_AutoLocalBattleClient1VS1(const class FString& MissionName);
	void TTLEnableAutomation_AutoBattleAllStage();
	void TTLEnableAutomation();
	void TTLDumpUserAccounts();
	void TTLDumpObjectSettings(int32 Type);
	void TTLDumpIceFlavor();
	void TTLDumpAllPlayerSkill();
	void TTLDumpAllPartsVp();
	void TTLDisconnectionCountSub();
	void TTLDisconnectionCountAdd();
	void TTLDisconectNetwork();
	void TTLDisableVSync();
	void TTLDisableVignetteAndGrainJitter();
	void TTLDisableSceneColorFlange();
	void TTLDisableLensFlare();
	void TTLDisableInputPad();
	void TTLDisableDepthOfField();
	void TTLDisableConstrainCameraAspect();
	void TTLDisableBorderlessWindow();
	void TTLDisableBlur();
	void TTLDisableBloom();
	void TTLDisableAutomation_AutoOnlineCoopMission();
	void TTLDestroyAllSurvivalDungeonGate_CheatManager();
	void TTLDefaultOuterCustom();
	void TTLDebugSetEnableWriteGraphicOption(bool IsEnable);
	void TTLDebugSetEnableLogGraphicOption(bool IsEnable);
	void TTLDebugLevel(int32 Value, const class FString& Param);
	void TTLDebugEnableWriteGraphicOption();
	void TTLDebugEnableLogGraphicOption();
	void TTLDebugDrawRouteInfo();
	void TTLDebugDisableWriteGraphicOption();
	void TTLDebugDisableLogGraphicOption();
	void TTLDebugChangeArsenalEquip(int32 Index);
	void TTLDataStorePostObject();
	void TTLDamageToPlayer(float Damage, int32 PlayerId);
	void TTLDamageRightArm(float Damage);
	void TTLDamageLeftArm(float Damage);
	void TTLDamageFunnel(int8 FunnelIndex, float Damage);
	void TTLCurrentOpenedMissionClear();
	void TTLCoopTrtsLaserDebugDraw();
	void TTLCoopInfoDebugDraw();
	void TTLConstrainCameraAspect(bool IsEnable);
	void TTLCollectInputStart();
	void TTLCollectInputEnd();
	void TTLClearSolomonQuest();
	void TTLClearSolomonCondition();
	void TTLClearMission(class FName MissionID, int32 ClearSub1, int32 ClearSub2, int32 ClearSub3);
	void TTLClearMinimapIgnoreTags();
	void TTLClearMinimap();
	void TTLClearBaseCampWeaponAll();
	void TTLCheckMissionClearStatus(int32 Rank);
	void TTLCheckActionForStiffing_TriggetTick();
	void TTLCheckActionForStiffing();
	void TTLChangeSkin(class FName& SkinID);
	void TTLChangeScoreValue();
	void TTLChangeRadarChartParam(int32 Index, float Value);
	void TTLChangePlayerName();
	void TTLChangeOuterWear(int32 WearID);
	void TTLChangeMercenaryRank(int32 Rank);
	void TTLChangeLanguage(const class FString& LangCode);
	void TTLChangeHUDMode(int32 NewHUDMode);
	void TTLChangeDesignateTargetArrowMaxNum(int32 NewMaxNum);
	void TTLCaptureMinimap();
	void TTLBreakPartsAllNPCArsenals(const class FString& Type, int32 Value);
	void TTLBreakParts(const class FString& Type, int32 Value, class APawn* TargetPawn);
	void TTLBossBattleLoopMode(bool Flag);
	void TTLAutoLockonRevise();
	void TTLAuto_OnlineSurvivalHost(const class FString& MissionName);
	void TTLAuto_OnlineSurvivalGuest(const class FString& MissionName);
	void TTLAllMissionOpenAndClear();
	void TTLAddWarningToHUD(int32 WarningType);
	void TTLAddSubGoalClearCount(int32 Count);
	void TTLAddOnMissionSkill(class FName& SkillID);
	void TTLAddOnMissionPlayerSkill(class FName& SkillID);
	void TTLAddNPCKillCount(int32 Count);
	void TTLAddNPCJoinNum(int32 Count);
	void TTLAddNPCFriendShipFromMenu(class FName NpcID);
	void TTLAddNPCFriendShip(class FName NpcID, int32 Value);
	void TTLAddMoney(int32 Value);
	void TTLAddMobKillcount(int32 Count);
	void TTLAddMissionRankingCount(int32 Category);
	void TTLAddMinimapIgnoreTag(const class FString& AppendTag);
	void TTLAddEnemyBattleData(class FName EnemyID, float AddValue);
	void TTLAddDodgeBoostCount(int32 Count);
	void TTLAddDecalScanNum(int32 Value);
	void TTLAddDebugInventory();
	void TTLAddCriticalCount(int32 Count);
	void TTLAddBossKillCount(int32 Count);
	void TTLAddAllEnemyBattleData(float AddValue);
	void TTLAchievementConditions();
	void ToggleArsenalWaterAssist();
	void ShowControllerTypeByHandle();
	void SetFPSToSaveData60();
	void SetFPSToSaveData30();
	void SetFPSToSaveData200();
	void SetFPSToSaveData144();
	void SetFPSToSaveData120();
	void SetFPSToSaveData(enum class ETTLFPSMode FpsMode);
	void OnPointRanking_GetStatsCallBack(bool WasSuccessful, class UTTLRanking_PointRankingResultStats* ResultStats);
	void OnPointRanking_GetRankingCallBack(bool WasSuccessful, const TArray<class UTTLRanking_PointRankingResultScore*>& ResultArray);
	void OnMissionRanking_GetStatsCallBack(bool WasSuccessful, const TArray<class UTTLRanking_MissionRankingResultStats*>& ResultStatsArray);
	bool GetControllerTypeArray(TArray<struct FTTLCheatControllerInfo>* ControllerInfo);
	void CopyPaintInfoToClipBoard();
	void CopyOuterCustomInfo();
	void Auto_Battle2vs2TagTeamHostGuest();
	void Auto_Battle2vs2TagHost();
	void Auto_Battle2vs2TagGuest();
	void ApplyGraphicOptionInfoSettings();
};

// 0x68 (0x390 - 0x328)
// Class DXM.TTLCheatManagerTickableActor
class ATTLCheatManagerTickableActor : public AActor
{
public:
	uint8                                        Pad_224E[0x68];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLCheatManagerTickableActor* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class DXM.TTLCheckVisualDataCommandlet
class UTTLCheckVisualDataCommandlet : public UCommandlet
{
public:

	static class UClass* StaticClass();
	static class UTTLCheckVisualDataCommandlet* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class DXM.TTLClassStateMachine
class UTTLClassStateMachine : public UObject
{
public:

	static class UClass* StaticClass();
	static class UTTLClassStateMachine* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class DXM.TTLClassStateMachineObject
class UTTLClassStateMachineObject : public UObject
{
public:

	static class UClass* StaticClass();
	static class UTTLClassStateMachineObject* GetDefaultObj();

};

// 0x848 (0xD20 - 0x4D8)
// Class DXM.TTLCloseRangeWeapon
class ATTLCloseRangeWeapon : public ATTLWeaponBase
{
public:
	uint8                                        Pad_2251[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ACharacter*                            OwnerCharacter;                                    // 0x4E0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2252[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ETTLCloseRangeWeaponType          CloseRangeWeaponType;                              // 0x518(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2253[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          Animation_RightWeaponMontage;                      // 0x528(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          Animation_LeftWeaponMontage;                       // 0x530(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          Animation_RightArsenalMontage;                     // 0x538(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          Animation_LeftArsenalMontage;                      // 0x540(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimationAsset*                       StorageAnimAsset;                                  // 0x548(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2254[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsTestSlashVFX;                                    // 0x558(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2255[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           AttackEffectAsset;                                 // 0x560(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           AttackEffectTipAsset;                              // 0x5F8(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           HitEffectAsset;                                    // 0x690(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           CriticalEffectAsset;                               // 0x728(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FVector                               ShadowColorVector;                                 // 0x7C0(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2256[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           LaserThickAsset;                                   // 0x7D0(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           LaserThinAsset;                                    // 0x868(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           LaserChangeAsset;                                  // 0x900(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FVector                               ColorVector;                                       // 0x998(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               HitVFXInnerColorVector;                            // 0x9A4(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               HitVFXOuterColorVector;                            // 0x9B0(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2257[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlayback                        FxLaserPlayBack;                                   // 0x9C0(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	float                                        FlameRateLimitValue;                               // 0x9D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ForceVFXOnTime;                                    // 0x9DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2258[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstanceDynamic*              MaterialInstance;                                  // 0x9E8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaterialPutOffTime;                                // 0x9F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2259[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ThickOnTime;                                       // 0x9F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ThickOnTimer;                                      // 0x9FC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_225A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           RepelVFXAsset;                                     // 0xA08(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FTTLFxPlayback>                AttackEffectPlayback;                              // 0xAA0(0x10)(BlueprintVisible, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                BossLaserMesh;                                     // 0xAB0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                BossLaserMesh_R;                                   // 0xAB8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         EnableBreak;                                       // 0xAC0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_225B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMesh*                         BrokenMesh;                                        // 0xAC8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           BreakVFXAsset;                                     // 0xAD0(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UStaticMesh*>                   FragmentMeshes;                                    // 0xB68(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_225C[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         EnablePick;                                        // 0xB79(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_225D[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           PickVFXAsset;                                      // 0xB80(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  PickVFXSocket;                                     // 0xC18(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_225E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        AttackCollision_IgnoreList;                        // 0xC28(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_225F[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CloseRangeComboAttack_MaxMoveSpeed;                // 0xC4C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CloseRangeComboAttack_MaxTurnSpeed;                // 0xC50(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CloseRangeComboAttack_AccelerationTime;            // 0xC54(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CloseRangeComboAttack_DecelerationTime;            // 0xC58(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CloseRangeComboAttack_FirstAttackMaxMoveLength;    // 0xC5C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CloseRangeComboAttack_ComboAttackMaxMoveLength;    // 0xC60(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLCloseRangeAttackComboInputCondition CloseRangeComboAttack_InputCondition;              // 0xC64(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2260[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CloseRangeComboAttack_InputTime;                   // 0xC68(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CloseRangeComboAttack_Range;                       // 0xC6C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLCloseRangeAttackComboRotationCondition CloseRangeComboAttack_RotationCondition;           // 0xC70(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2261[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             CloseRangeComboAttack_RotationRange;               // 0xC74(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLCloseRangeAttackComboCamera   CloseRangeComboAttack_CameraMode;                  // 0xC7C(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2262[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CloseRangeComboAttack_CameraOffset;                // 0xC80(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLCloseRangeAttackComboHitCondition CloseRangeComboAttack_Condition;                   // 0xC84(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLCloseRangeAttackComboAfterRotation CloseRangeComboAttack_AfterRotation;               // 0xC85(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2263[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CloseRangeComboAttack_MaxNum;                      // 0xC88(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CloseRangeComboAttack_TargetMissile;               // 0xC8C(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CloseRangeComboAttack_TargetDestructible;          // 0xC8D(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2264[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AttackAnimTime;                                    // 0xC94(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AttackAnimTime_Both;                               // 0xC98(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StartMoveTime;                                     // 0xC9C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2265[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          BothAttackMontage;                                 // 0xCC8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          RepelledMontage;                                   // 0xCD0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CloseRangeAttack_StiffTime_Repelled;               // 0xCD8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CloseRangeAttack_RepelledEnabledDegree;            // 0xCDC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2266[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLKeenCompetitionComponent*          KeenCompetitionComponent;                          // 0xCE8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsDebugPrint_AttackTargetList;                     // 0xCF0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2267[0x2F];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLCloseRangeWeapon* GetDefaultObj();

	bool ShouldUsePunchMove();
	void SetWeaponMontageSection(bool IsBoth, enum class ETTLCloseRangeWeaponPhase ChangePhase, class UAnimMontage* Montage);
	void SetKeenCompetitionParam(const struct FVector& CameraLocOffset, const struct FRotator& CameraRotOffset, const struct FVector& EffectLocOffset, float StiffTime);
	void SetCloseRangeWeaponPhase(enum class ETTLCloseRangeWeaponPhase NewPhase, class ATTLCloseRangeWeapon* AnotherCloseRangeWeapon);
	void PlayVFXHit(const struct FVector& Location, const struct FRotator& Rotation);
	void PickWeapon();
	class ATTLCloseRangeWeapon* GetHeavierCloseRangeWeapon(class ATTLWeaponBase* WeaponA, class ATTLWeaponBase* WeaponB);
	void GetBaseParam(struct FTTLCloseRangeWeaponParamRow* Param);
	void Equipment_Set(bool Attached, bool Temp);
	void EndAttackForMontageAndVFX();
	void BreakWeapon();
	void Attack(const struct FVector& TargetPos);
};

// 0x100 (0x1F0 - 0xF0)
// Class DXM.TTLCollectedCharaComponent
class UTTLCollectedCharaComponent : public UActorComponent
{
public:
	uint8                                        Pad_2268[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ATTLCollectedLaser>        LaserRef;                                          // 0x130(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2269[0x24];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               LimitVelocity;                                     // 0x15C(0xC)(Edit, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsAttach;                                          // 0x168(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_226A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  AttachedMeshTag;                                   // 0x170(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  SocketNameForLaser;                                // 0x178(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsRotationTargetForLaser;                          // 0x180(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_226B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RotatorTime;                                       // 0x184(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_226C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LaserSpawnForwardOffset;                           // 0x18C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               LaserSize;                                         // 0x190(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_226D[0x54];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLCollectedCharaComponent* GetDefaultObj();

	void RunOnServerSpawnLaser(struct FTTLCollectInfo& Info, struct FVector& TargetLocation);
	void MulticastSpawnLaser(struct FTTLCollectInfo& Info, struct FVector& TargetLocation);
	void CallEndLaserAnim();
	void CallCancelCollecting(enum class ETTLDamageState DamageState);
};

// 0x38 (0x360 - 0x328)
// Class DXM.TTLCollectedLaser
class ATTLCollectedLaser : public AActor
{
public:
	uint8                                        Pad_226E[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  LaserMeshTag;                                      // 0x350(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LaserAnimTime;                                     // 0x358(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TargetLaserAnimTime;                               // 0x35C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ATTLCollectedLaser* GetDefaultObj();

};

// 0xA8 (0x198 - 0xF0)
// Class DXM.TTLCollectedObjectComponent
class UTTLCollectedObjectComponent : public UActorComponent
{
public:
	uint8                                        Pad_2271[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UShapeComponent>           CollisionSubClassOf;                               // 0x130(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  CollisionTag;                                      // 0x138(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsUseArea;                                         // 0x140(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsPlayerGetOnTargetTag;                            // 0x141(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2272[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  GetOnTag;                                          // 0x148(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2273[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  MeshTagName;                                       // 0x158(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  BoxTagName;                                        // 0x160(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  InformationGimmickTag;                             // 0x168(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTTLCollectInfo                       CollectInfo;                                       // 0x170(0x20)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2274[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLCollectedObjectComponent* GetDefaultObj();

	void OnInputActionInner(enum class ETTLEActionType KeyType, bool IsPressed);
	void CallGettingInformationGimmick();
	void CallEndOverrlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void CallCancelGettingInfoGimmick();
	void CallBeginOverrlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0xD0 (0xF8 - 0x28)
// Class DXM.TTLCollectInput
class UTTLCollectInput : public UObject
{
public:
	TArray<struct FTTLCommandContainer>          TicksCommand;                                      // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2275[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLCommandContainer                  CurrentTickConatienr;                              // 0x88(0x68)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2276[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLCollectInput* GetDefaultObj();

};

// 0x2218 (0x2240 - 0x28)
// Class DXM.TTLReproduceInput
class UTTLReproduceInput : public UObject
{
public:
	uint8                                        Pad_2277[0x21A0];                                  // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLCommandContainer>          TicksCommand;                                      // 0x21C8(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FTTLCommandContainer>          RetentionTickConatienr;                            // 0x21D8(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2278[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLReproduceInput* GetDefaultObj();

};

// 0x190 (0x1B8 - 0x28)
// Class DXM.TTLCommandConverter
class UTTLCommandConverter : public UObject
{
public:
	uint8                                        Pad_2279[0x190];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLCommandConverter* GetDefaultObj();

};

// 0x8 (0xBA0 - 0xB98)
// Class DXM.TTLCollisionMeshComponent
class UTTLCollisionMeshComponent : public USkeletalMeshComponent
{
public:
	uint8                                        Pad_227A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLCollisionMeshComponent* GetDefaultObj();

	void CopyPoseFromSkeletalComponent(class USkeletalMeshComponent* InComponentToCopy);
};

// 0x10 (0x58 - 0x48)
// Class DXM.TTLCommandOrder_GoLocation
class UTTLCommandOrder_GoLocation : public UTTLCommandOrder
{
public:
	class FName                                  ConsoleTag;                                        // 0x48(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_227B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLCommandOrder_GoLocation* GetDefaultObj();

};

// 0x10 (0x58 - 0x48)
// Class DXM.TTLCommandOrder_InputLongBtn
class UTTLCommandOrder_InputLongBtn : public UTTLCommandOrder
{
public:
	enum class ETTLEActionType                   ActionType;                                        // 0x48(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_227C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Duration;                                          // 0x4C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_227D[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLCommandOrder_InputLongBtn* GetDefaultObj();

};

// 0x0 (0x58 - 0x58)
// Class DXM.TTLCommandOrder_InputLongBtnForMissionReady
class UTTLCommandOrder_InputLongBtnForMissionReady : public UTTLCommandOrder_InputLongBtn
{
public:

	static class UClass* StaticClass();
	static class UTTLCommandOrder_InputLongBtnForMissionReady* GetDefaultObj();

};

// 0x20 (0x118 - 0xF8)
// Class DXM.TTLCommMainPanelComponent
class UTTLCommMainPanelComponent : public UTTLActorComponent
{
public:
	class UUserWidget*                           Widget_TopWidget;                                  // 0xF8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_227E[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLCommMainPanelComponent* GetDefaultObj();

	void Initialize(class UUserWidget* LayoutWidget);
};

// 0x30 (0x1C8 - 0x198)
// Class DXM.TTLCommMainScrollListComponent
class UTTLCommMainScrollListComponent : public UTTLScrollListComponentBase
{
public:
	class UWidgetAnimation*                      Animation_PartsButtonHighlightON;                  // 0x198(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_PartsButtonHighlightOFF;                 // 0x1A0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2280[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLCommMainScrollListComponent* GetDefaultObj();

	void StopButtonAnimation(class UUserWidget* Button, class UWidgetAnimation* Animation);
	void PlayButtonAnimation(class UUserWidget* Button, class UWidgetAnimation* Animation);
	bool InitializeBP();
	void Initialize(class UUserWidget* LayoutWidget, int32 DisplayNum, int32 ListNumMax);
	class UUserWidget* CreateButtonWidget(int32 Position);
};

// 0x18 (0x110 - 0xF8)
// Class DXM.TTLCommMainSettingsListComponent
class UTTLCommMainSettingsListComponent : public UTTLActorComponent
{
public:
	class UUserWidget*                           Widget_TopWidget;                                  // 0xF8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_HighlightON;                             // 0x100(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_HighlightOFF;                            // 0x108(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLCommMainSettingsListComponent* GetDefaultObj();

	bool InitializeBP();
};

// 0x138 (0x4F8 - 0x3C0)
// Class DXM.TTLCommonPopup
class ATTLCommonPopup : public ATTLPopUpBase
{
public:
	UMulticastDelegateProperty_                  OnDecide;                                          // 0x3C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnCancel;                                          // 0x3D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnChange;                                          // 0x3E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>               Class_TextArea;                                    // 0x3F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_IconArea;                                    // 0x3F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_MoneyArea;                                   // 0x400(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_ButtonArea;                                  // 0x408(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_Button;                                      // 0x410(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_VerticalButtonArea;                          // 0x418(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_VerticalButton;                              // 0x420(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_OptionButton;                                // 0x428(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_VerticalButtonOn;                             // 0x430(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_VerticalButtonOff;                            // 0x438(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_RareAttachment;                               // 0x440(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_OptionButtonOn;                               // 0x448(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_OptionButtonOff;                              // 0x450(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_OptionButtonRight;                            // 0x458(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_OptionButtonLeft;                             // 0x460(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UUserWidget*>                   PopupContents;                                     // 0x468(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UUserWidget*                           ButtonArea;                                        // 0x478(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2288[0x78];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLCommonPopup* GetDefaultObj();

	void SetTitle(class FText Title);
	void SetReawrdInfoButtonText(class FText Text);
	void SetIconColor(int32 Index, struct FLinearColor& Color);
	void SetEnableOwnInputAction(bool Enable);
	void SetButtonHilightIndex(int32 TargetIndex, bool IsHilight);
	void SetButtonHilight(class UUserWidget* Button, bool IsHilight);
	float OpenPopUp_Reward(class AActor* PauseActorPtr);
	void OnInputRepeatAction(enum class ETTLEActionType KeyType, int32 Count);
	void OnInputAction(enum class ETTLEActionType KeyType, bool IsPressed);
	void GrayOutButtonOff(int32 TargetIndex);
	void GrayOutButton(int32 TargetIndex);
	int32 GetButtonNum();
	class UUserWidget* CreateOneButton(class FText buttonText);
	void ChangeButtonSE(int32 TargetIndex, enum class ETTLEPopUpSEType NewSEType);
	void AddYesNoButtonArea(bool IsFocusedYes, enum class ETTLEPopUpSEType YesSE, enum class ETTLEPopUpSEType NoSE);
	void AddVerticalButtonArea(const TArray<class FText>& buttonTextList, int32 ReferenceIndex);
	void AddReawrdInfoArea_Parts(const struct FTTLArsenalPartsInfo& PartsInfo);
	void AddReawrdInfoArea_Money(int32 Money);
	void AddReawrdInfoArea_IceToken(int32 Token);
	void AddReawrdInfoArea_DLCMission(class FName MissionID);
	void AddReawrdInfoArea_Decoration(const struct FTTLEDecorationInfoTypeAndID& DecorationInfo);
	void AddReawrdInfoArea_Attachment(class FName AttachmentID);
	void AddOkButtonArea(enum class ETTLEPopUpSEType OkSE);
	void AddNumberInputButton(class FText TitleText, class FText SubTitleText, int32 DefaultNumber, int32 MaxNumber);
	void AddButtonArea(const TArray<class FText>& buttonTextList, int32 ReferenceIndex);
};

// 0x0 (0x30 - 0x30)
// Class DXM.TTLCommonRichTextImageDecorator
class UTTLCommonRichTextImageDecorator : public URichTextBlockImageDecorator
{
public:

	static class UClass* StaticClass();
	static class UTTLCommonRichTextImageDecorator* GetDefaultObj();

};

// 0x50 (0x680 - 0x630)
// Class DXM.TTLCommSettingScene
class ATTLCommSettingScene : public ATTLMenuSceneBase
{
public:
	class ATTLInlineKeyboardActor*               PInlineKeyboardActor;                              // 0x630(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLPopUpBase>             CommonPopupClass;                                  // 0x638(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2292[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLCommonPopup*                       CommonPopUp;                                       // 0x668(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2293[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLCommSettingScene* GetDefaultObj();

	void OnInputRepeatActionSelectVisibility(enum class ETTLEActionType KeyType, int32 Count);
	void OnInputRepeatActionSelectTopMenu(enum class ETTLEActionType KeyType, int32 Count);
	void OnInputRepeatActionSelectSwapDestination(enum class ETTLEActionType KeyType, int32 Count);
	void OnInputRepeatActionSelectSrcEmote(enum class ETTLEActionType KeyType, int32 Count);
	void OnInputRepeatActionSelectSrcChatMessage(enum class ETTLEActionType KeyType, int32 Count);
	void OnInputRepeatActionSelectDestEmote(enum class ETTLEActionType KeyType, int32 Count);
	void OnInputRepeatActionSelectCommVisibility(enum class ETTLEActionType KeyType, int32 Count);
	void OnInputRepeatActionEditChatMessage(enum class ETTLEActionType KeyType, int32 Count);
	void OnInputActionSelectVisibility(enum class ETTLEActionType KeyType, bool IsPressed);
	void OnInputActionSelectTopMenu(enum class ETTLEActionType KeyType, bool IsPressed);
	void OnInputActionSelectSwapDestination(enum class ETTLEActionType KeyType, bool IsPressed);
	void OnInputActionSelectSrcEmote(enum class ETTLEActionType KeyType, bool IsPressed);
	void OnInputActionSelectSrcChatMessage(enum class ETTLEActionType KeyType, bool IsPressed);
	void OnInputActionSelectDestEmote(enum class ETTLEActionType KeyType, bool IsPressed);
	void OnInputActionSelectCommVisibility(enum class ETTLEActionType KeyType, bool IsPressed);
	void OnInputActionEditChatMessage(enum class ETTLEActionType KeyType, bool IsPressed);
	void OnDecideResetPresetMessagePopUp();
	void OnDecideResetPresetEmotePopUp();
	void OnClosedResetPresetMessagePopUp();
	void OnClosedResetPresetEmotePopUp();
	void KeyboardClosed(const class FString& InputText, bool IsCancel);
	bool IsKeyboardActive();
	bool Destroy_InlineKeyboardBP();
	void CreateKeyboard();
	bool Create_InlineKeyboardBP();
};

// 0x0 (0x198 - 0x198)
// Class DXM.TTLCommTopScrollListComponent
class UTTLCommTopScrollListComponent : public UTTLScrollListComponentBase
{
public:

	static class UClass* StaticClass();
	static class UTTLCommTopScrollListComponent* GetDefaultObj();

	void StopButtonAnimation(class UUserWidget* Button, class UWidgetAnimation* Animation);
	void PlayButtonAnimation(class UUserWidget* Button, class UWidgetAnimation* Animation);
	bool InitializeBP();
	void Initialize(class UUserWidget* LayoutWidget, int32 DisplayNum, int32 ListNumMax);
	class UUserWidget* CreateButtonWidget(int32 Position);
};

// 0x78 (0x3B8 - 0x340)
// Class DXM.TTLCommunicationTalkControlActor
class ATTLCommunicationTalkControlActor : public ATTLActor
{
public:
	bool                                         IsEnableCommunicationTalkEventRequest;             // 0x340(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_229C[0x77];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLCommunicationTalkControlActor* GetDefaultObj();

	bool StartCommunicationTalkEvent(struct FTTLCommunicationTalkRequest* TalkRequest);
	bool SendCommunicationTalkEventRequest(class FName EventName, class FName MessageID, bool IsNotDestructRequest);
	bool RequestCommunicationMessage(class FName OuterName, enum class ETTLCommunicationTalkTerm TermIndex, enum class ETTLNPCBelongingType BelongingType, int32 TermPhase);
	void ProcessRequest(float DeltaTime);
	void ProcessCoolTime(float DeltaTime);
	void Initialize();
	bool GetTalkRequest(class FName OuterName, int32 TermIndex, enum class ETTLNPCBelongingType BelongingType, struct FTTLCommunicationTalkRequest* TalkRequest);
	TArray<struct FTTLCommunicationTalkRequestRejectHistory> GetRequestRejectHistoryList();
	TArray<struct FTTLCommunicationTalkRequest> GetRequestList();
	TArray<struct FTTLCommunicationTalkRequestHistory> GetRequestHistoryList();
	TArray<struct FTTLCommunicationTalkCoolTimeInfo> GetMessageSetCoolTimeList();
	TArray<struct FTTLCommunicationTalkRequest> GetMessageDataCoolTimeList();
	int32 DrawLotsRequestList();
	bool CanRequestCommunicationMessage(class FName OuterName, enum class ETTLCommunicationTalkTerm TermIndex);
};

// 0x0 (0x88 - 0x88)
// Class DXM.TTLCommunicationTalkParam
class UTTLCommunicationTalkParam : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UTTLCommunicationTalkParam* GetDefaultObj();

};

// 0x30 (0x370 - 0x340)
// Class DXM.TTLConsoleActor
class ATTLConsoleActor : public ATTLActor
{
public:
	uint8                                        Pad_229D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ETTLEInteractType                 ConsoleType;                                       // 0x348(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        ConsoleIndex;                                      // 0x349(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsForceEnableMultiCollision;                       // 0x34A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_229E[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UBoxComponent*                         ConsoleCollision;                                  // 0x350(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_229F[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLConsoleActor* GetDefaultObj();

	void StartShowInteractUI();
	void SetCollisionScale(struct FVector& NewScale);
	void EndShowInteractUI();
	void CheckSelfCollision();
};

// 0x40 (0x3B0 - 0x370)
// Class DXM.TTLConsoleActorBootEvent
class ATTLConsoleActorBootEvent : public ATTLConsoleActor
{
public:
	struct FTransform                            RetPoint;                                          // 0x370(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_22A0[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLConsoleActorBootEvent* GetDefaultObj();

	void UIActorEndOverlap(class AActor* OverlapperdActor, class AActor* OtherActor);
	void UIActorBeginOverlap(class AActor* OverlapperdActor, class AActor* OtherActor);
	void JumpConsole();
	enum class ETTLEInteractType GetInteractType();
};

// 0x58 (0x380 - 0x328)
// Class DXM.TTLConsoleMessageActor
class ATTLConsoleMessageActor : public AActor
{
public:
	class UUserWidget*                           UserWidget;                                        // 0x328(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            WidgetTextBlock;                                   // 0x330(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_22A1[0x48];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLConsoleMessageActor* GetDefaultObj();

};

// 0x30 (0x120 - 0xF0)
// Class DXM.TTLConsoleMessageComponent
class UTTLConsoleMessageComponent : public UActorComponent
{
public:
	TSubclassOf<class UUserWidget>               LayoutClass;                                       // 0xF0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           LayoutWidget;                                      // 0xF8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Anime_In;                                          // 0x100(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Anime_Out;                                         // 0x108(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Anime_CursorOn;                                    // 0x110(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Anime_CursorOff;                                   // 0x118(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLConsoleMessageComponent* GetDefaultObj();

};

// 0x50 (0x78 - 0x28)
// Class DXM.TTLConsoleMsgManager
class UTTLConsoleMsgManager : public UObject
{
public:
	UMulticastDelegateProperty_                  OnOpened;                                          // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnInputWaitOpened;                                 // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnClosed;                                          // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	uint8                                        Pad_22A2[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAtomComponent*                        SoundVoiceComponent;                               // 0x68(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATTLConsoleMessageActor*               ConsolMessageActor;                                // 0x70(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLConsoleMsgManager* GetDefaultObj();

	void OnDistroyMsgActor_(class AActor* AActor);
};

// 0x10 (0x108 - 0xF8)
// Class DXM.TTLContainerActorComponent
class UTTLContainerActorComponent : public UTTLActorComponent
{
public:
	class AActor*                                Actor;                                             // 0xF8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Index;                                             // 0x100(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22A3[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLContainerActorComponent* GetDefaultObj();

};

// 0x7A8 (0x7D0 - 0x28)
// Class DXM.TTLContinueInfoContainer
class UTTLContinueInfoContainer : public UObject
{
public:
	uint8                                        Pad_22A4[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLInheritMissionContainer>   InheritArray;                                      // 0x30(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FTTLInheritBattleInfo                 InheritBattleInfo;                                 // 0x40(0x780)(NativeAccessSpecifierPublic)
	TArray<struct FTTLSurvivalMissionInitializePacketData> SurvivalPlayerMissionStartApplyDataArray;          // 0x7C0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLContinueInfoContainer* GetDefaultObj();

};

// 0x28 (0x50 - 0x28)
// Class DXM.TTLCoopAttackCore
class UTTLCoopAttackCore : public UObject
{
public:
	uint8                                        Pad_22A5[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLCoopAttackCore* GetDefaultObj();

};

// 0xF8 (0x260 - 0x168)
// Class DXM.TTLCptWpnBaseBossOgreSwordComp
class UTTLCptWpnBaseBossOgreSwordComp : public UTTLCaptureWeaponComponent
{
public:
	class ATTLBaseBossOgreSwordPawn*             OwnerPawn;                                         // 0x168(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Captured_GrabPlayerIntpTime;                       // 0x170(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Captured_PlayerOffset;                             // 0x174(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22A7[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               Player_AttackMoveVelocity;                         // 0x190(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Player_AttackMoveTime;                             // 0x19C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22A8[0x2C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               Camera_ControlOffset;                              // 0x1CC(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              Camera_ControlOffsetRot;                           // 0x1D8(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               Camera_AttackOffset;                               // 0x1E4(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USpringArmComponent*                   Camera_SpringArmComponent;                         // 0x1F0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Camera_GrabIntpTime;                               // 0x1F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Camera_AimingSpeed;                                // 0x1FC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             Camera_PitchRange;                                 // 0x200(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Camera_AttackIntpTime;                             // 0x208(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22A9[0x44];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              Client_AimRotation;                                // 0x250(0xC)(Net, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_22AA[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLCptWpnBaseBossOgreSwordComp* GetDefaultObj();

	void CalcLocationAndRotation(bool IsAttack, struct FVector* PlayerLoc, struct FRotator* PlayerRot, struct FVector* CameraLoc, struct FRotator* CameraRot);
};

// 0x130 (0x298 - 0x168)
// Class DXM.TTLCptWpnENBossSnakFinB01Comp
class UTTLCptWpnENBossSnakFinB01Comp : public UTTLCaptureWeaponComponent
{
public:
	struct FVector2D                             PitchRange;                                        // 0x168(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GrabTime;                                          // 0x170(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               AimCameraOffset;                                   // 0x174(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimCameraTime;                                     // 0x180(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ShootCameraOffset;                                 // 0x184(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootCameraTime;                                   // 0x190(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootCameraAtDistance;                             // 0x194(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CaptureMoveSpeed;                                  // 0x198(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CaptureFloatingSpeed;                              // 0x19C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CaptureBoostScale;                                 // 0x1A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CaptureActorRoll;                                  // 0x1A4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               FinalAdjust;                                       // 0x1A8(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraChangeTime;                                  // 0x1B4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EndCameraInterp;                                   // 0x1B8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22AB[0xDC];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLCptWpnENBossSnakFinB01Comp* GetDefaultObj();

	void Release();
	void Player_ThrowEnd();
	void Player_ThrowAim();
	void CompleteThrow();
	void CompleteAccess();
};

// 0xB0 (0x218 - 0x168)
// Class DXM.TTLCptWpnENBossTrtsLaser01Comp
class UTTLCptWpnENBossTrtsLaser01Comp : public UTTLCaptureWeaponComponent
{
public:
	float                                        AimingSpeed;                                       // 0x168(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             PitchRange;                                        // 0x16C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EndAnimationLandingTime;                           // 0x174(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GrabTime;                                          // 0x178(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               AimCameraOffset;                                   // 0x17C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ShootCameraOffset;                                 // 0x188(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootCameraLookatRate;                             // 0x194(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLENBossTrtsLaser01Pawn*             OwnerPawn;                                         // 0x198(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                OwnerMesh;                                         // 0x1A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLAIActENBossTrtsLaser01Comp*        OwnerAI;                                           // 0x1A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Player_Location;                                   // 0x1B0(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              Player_Rotation;                                   // 0x1BC(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              Player_BaseRotation;                               // 0x1C8(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        Player_Timer;                                      // 0x1D4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Player_OldPressedAttackRight;                      // 0x1D8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Player_OldPressedCatch;                            // 0x1D9(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22AD[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              Camera_Rotation;                                   // 0x1DC(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              Camera_WorkRotation;                               // 0x1E8(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_22AE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USpringArmComponent*                   Camera_SpringArmComponent;                         // 0x1F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Camera_Time;                                       // 0x200(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Camera_Timer;                                      // 0x204(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              Client_AimRotation;                                // 0x208(0xC)(Net, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_22AF[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLCptWpnENBossTrtsLaser01Comp* GetDefaultObj();

	void CalcLocationAndRotation(float ShootRate, bool IsAiming, struct FVector* PlayerLoc, struct FRotator* PlayerRot, struct FVector* CameraLoc, struct FRotator* CameraRot, struct FVector* ShootLoc, struct FRotator* ShootRot);
};

// 0x0 (0x28 - 0x28)
// Class DXM.TTLDamageCauserObjectInterface
class ITTLDamageCauserObjectInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ITTLDamageCauserObjectInterface* GetDefaultObj();

	class AActor* GetDamageCauserOwner();
};

// 0x28 (0x118 - 0xF0)
// Class DXM.TTLDamageParameterComponent
class UTTLDamageParameterComponent : public UActorComponent
{
public:
	float                                        Damage;                                            // 0xF0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AttributeDamage;                                   // 0xF4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KnockOutValue;                                     // 0xF8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KnockBackValue;                                    // 0xFC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMPRiseOnDamage;                                   // 0x100(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEAbnormalStatusType           AbnormalType;                                      // 0x104(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22B0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AbnormalValue;                                     // 0x108(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLDmgDirType                    DirectionType;                                     // 0x10C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22B1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Mass;                                              // 0x110(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         KnockOutIgnoreMass;                                // 0x114(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLWeaponDamageAttribute         DamageAttribute;                                   // 0x115(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22B2[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLDamageParameterComponent* GetDefaultObj();

	void InitializeParameterByWeaponDataTable(class FName WeaponID);
	void InitializeParameterByCloseRangeWeaponDataTable(class FName WeaponID);
};

// 0x60 (0x158 - 0xF8)
// Class DXM.TTLDamagePopupControlComponent
class UTTLDamagePopupControlComponent : public UTTLActorComponent
{
public:
	TSoftClassPtr<class UUserWidget>             SpawnClass;                                        // 0xF8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLDamagePopupSettings               Settings;                                          // 0x120(0x20)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLDamagePopup>               DamagePopups;                                      // 0x140(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_22B3[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLDamagePopupControlComponent* GetDefaultObj();

};

// 0x8 (0x48 - 0x40)
// Class DXM.TTLBaseDamageType
class UTTLBaseDamageType : public UDamageType
{
public:
	int32                                        DamageNo;                                          // 0x40(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22B6[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBaseDamageType* GetDefaultObj();

	struct FVector CalcDamageActionDirection(enum class ETTLDmgDirType DamageNo, class AActor* Attacker, class AActor* Damager, float Radius, const struct FVector& HitDir);
};

// 0x0 (0x48 - 0x48)
// Class DXM.TTLDamageType0
class UTTLDamageType0 : public UTTLBaseDamageType
{
public:

	static class UClass* StaticClass();
	static class UTTLDamageType0* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class DXM.TTLDamageType1
class UTTLDamageType1 : public UTTLBaseDamageType
{
public:

	static class UClass* StaticClass();
	static class UTTLDamageType1* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class DXM.TTLDamageType2
class UTTLDamageType2 : public UTTLBaseDamageType
{
public:

	static class UClass* StaticClass();
	static class UTTLDamageType2* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class DXM.TTLDamageType3
class UTTLDamageType3 : public UTTLBaseDamageType
{
public:

	static class UClass* StaticClass();
	static class UTTLDamageType3* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class DXM.TTLDamageType4
class UTTLDamageType4 : public UTTLBaseDamageType
{
public:

	static class UClass* StaticClass();
	static class UTTLDamageType4* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class DXM.TTLDamageType5
class UTTLDamageType5 : public UTTLBaseDamageType
{
public:

	static class UClass* StaticClass();
	static class UTTLDamageType5* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class DXM.TTLDamageType6
class UTTLDamageType6 : public UTTLBaseDamageType
{
public:

	static class UClass* StaticClass();
	static class UTTLDamageType6* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class DXM.TTLDamageType7
class UTTLDamageType7 : public UTTLBaseDamageType
{
public:

	static class UClass* StaticClass();
	static class UTTLDamageType7* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class DXM.TTLDamageType8
class UTTLDamageType8 : public UTTLBaseDamageType
{
public:

	static class UClass* StaticClass();
	static class UTTLDamageType8* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class DXM.TTLDamageType9
class UTTLDamageType9 : public UTTLBaseDamageType
{
public:

	static class UClass* StaticClass();
	static class UTTLDamageType9* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class DXM.TTLDamageType10
class UTTLDamageType10 : public UTTLBaseDamageType
{
public:

	static class UClass* StaticClass();
	static class UTTLDamageType10* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class DXM.TTLDamageType11
class UTTLDamageType11 : public UTTLBaseDamageType
{
public:

	static class UClass* StaticClass();
	static class UTTLDamageType11* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class DXM.TTLDamageType12
class UTTLDamageType12 : public UTTLBaseDamageType
{
public:

	static class UClass* StaticClass();
	static class UTTLDamageType12* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class DXM.TTLDamageType13
class UTTLDamageType13 : public UTTLBaseDamageType
{
public:

	static class UClass* StaticClass();
	static class UTTLDamageType13* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class DXM.TTLDamageType14
class UTTLDamageType14 : public UTTLBaseDamageType
{
public:

	static class UClass* StaticClass();
	static class UTTLDamageType14* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class DXM.TTLDamageType15
class UTTLDamageType15 : public UTTLBaseDamageType
{
public:

	static class UClass* StaticClass();
	static class UTTLDamageType15* GetDefaultObj();

};

// 0x8 (0xF8 - 0xF0)
// Class DXM.TTLDebugHUDComponent
class UTTLDebugHUDComponent : public UActorComponent
{
public:
	uint8                                        Pad_22B7[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLDebugHUDComponent* GetDefaultObj();

	void SetShowDebugWidget(enum class ETTLDebugHUDWidgets WidgetIndex, bool IsShow);
	void SetAllDebugWidgetsShow(bool IsShow);
	bool IsShowDebugWidget(enum class ETTLDebugHUDWidgets WidgetIndex);
	TArray<struct FTTLDebugHUDHateTarget> GetHateTargets(class UTTLAIActionComponent* AiActionComp);
};

// 0xB0 (0x3F0 - 0x340)
// Class DXM.TTLDebugMenuController
class ATTLDebugMenuController : public ATTLActor
{
public:
	UMulticastDelegateProperty_                  OnMenuDecided;                                     // 0x340(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMenuUp;                                          // 0x350(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMenuDown;                                        // 0x360(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TArray<struct FTTLDebugMenuFolder>           MenuFolders;                                       // 0x370(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLDebugActorClass>           ActorClasses;                                      // 0x380(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLDebugWeaponClass>          WeaponClasses;                                     // 0x390(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TSoftClassPtr<class ATTLInlineKeyboardActor> InlineKeyboardActorClass;                          // 0x3A0(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLInlineKeyboardActor*               InlineKeyboardActor;                               // 0x3C8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsAutoOpen;                                        // 0x3D0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsAutoClose;                                       // 0x3D1(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22B9[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        KeyRepeatFirst;                                    // 0x3D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KeyRepeatInterval;                                 // 0x3D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22BA[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLDebugMenuController* GetDefaultObj();

	void SetEnableKeyRepeat(enum class ETTLEDebugMenuControllerKey Key, bool Enabled);
	void OnMenuUpRepeat(int32 RepeatCount);
	void OnMenuDownRepeat(int32 RepeatCount);
	void OnInlineKeyboardClosed(const class FString& InputText, bool IsCancel);
};

// 0x0 (0x88 - 0x88)
// Class DXM.TTLDebugParam
class UTTLDebugParam : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UTTLDebugParam* GetDefaultObj();

};

// 0x10 (0x340 - 0x330)
// Class DXM.TTLDecalActor
class ATTLDecalActor : public ADecalActor
{
public:
	class UMaterialInstanceDynamic*              MaterialInstanceDynamic;                           // 0x330(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentTime;                                       // 0x338(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22BB[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLDecalActor* GetDefaultObj();

};

// 0x1A8 (0x1D0 - 0x28)
// Class DXM.TTLDecorationDataManager
class UTTLDecorationDataManager : public UObject
{
public:
	class UDataTable*                            DecorationInfoParam;                               // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDataTable*                            DecorationConditionsParam;                         // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<int32, class FName>                     AllColorIndexNameArray;                            // 0x38(0x50)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TMap<int32, class FName>                     AllDecalIndexNameArray;                            // 0x88(0x50)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TMap<int32, class FName>                     AllSurfaceIndexNameArray;                          // 0xD8(0x50)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TMap<int32, class FName>                     AllTitleIndexNameArray;                            // 0x128(0x50)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TMap<int32, class FName>                     AllEmblemIndexNameArray;                           // 0x178(0x50)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class UTTLGameInstance*                      GameInstance;                                      // 0x1C8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLDecorationDataManager* GetDefaultObj();

	void Initialize(class UTTLGameInstance* GameInstance);
};

// 0x0 (0x88 - 0x88)
// Class DXM.TTLDecorationInfoParam
class UTTLDecorationInfoParam : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UTTLDecorationInfoParam* GetDefaultObj();

};

// 0x0 (0xEE0 - 0xEE0)
// Class DXM.TTLDecoyCarrier
class ATTLDecoyCarrier : public ATTLBaseDronePawn
{
public:

	static class UClass* StaticClass();
	static class ATTLDecoyCarrier* GetDefaultObj();

};

// 0x0 (0xEE0 - 0xEE0)
// Class DXM.TTLDecoyCarrierPawn
class ATTLDecoyCarrierPawn : public ATTLBaseDronePawn
{
public:

	static class UClass* StaticClass();
	static class ATTLDecoyCarrierPawn* GetDefaultObj();

};

// 0x188 (0x280 - 0xF8)
// Class DXM.TTLDefaultCameraControlComponent
class UTTLDefaultCameraControlComponent : public UTTLActorComponent
{
public:
	bool                                         IsLockonRevise;                                    // 0xF8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_22BC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              LockonReviseInterpolationRotation;                 // 0xFC(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        LockonReviseInterpolationTime;                     // 0x108(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsLockonInterpolation;                             // 0x10C(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETTLLockonReviseSortType          LockonReviseSortType;                              // 0x10D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLLockonReviseProcessType       LockonReviseProcessType;                           // 0x10E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLLockonReviseTimingType        LockonReviseTimingType;                            // 0x10F(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLLockonReviseControlType       LockonReviseControlType;                           // 0x110(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22BD[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<float>                                LockonReviseRateTable;                             // 0x118(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        LockonReviseCenterBiasRate;                        // 0x128(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LockonReviseInputDeadZoneRate;                     // 0x12C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCameraComponent*                      SelfCameraComponent;                               // 0x130(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OffsetCameraArmLength;                             // 0x138(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22BE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           CameraTraceFxParam;                                // 0x140(0x98)(ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_22BF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLFxPlayback>                CameraTraceVFXList;                                // 0x1E0(0x10)(ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_22C0[0x90];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLDefaultCameraControlComponent* GetDefaultObj();

	void TTLTickBP(float DeltaTime);
	void InitializeBP();
};

// 0x8 (0x1000 - 0xFF8)
// Class DXM.TTLDemoAnimInstance
class UTTLDemoAnimInstance : public UTTLOuterAnimInstance
{
public:
	bool                                         IsMessageWait;                                     // 0xFF8(0x1)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22C1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BustRotAlpha;                                      // 0xFFC(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLDemoAnimInstance* GetDefaultObj();

	void StartMessageWaitBP(class FName AnimationName);
	void StartMessageWait(class FName AnimationName);
	void EndMessageWaitBP();
	void EndMessageWait();
};

// 0x10 (0x8E0 - 0x8D0)
// Class DXM.TTLDemoArsenalAnimInstance
class UTTLDemoArsenalAnimInstance : public UTTLArsenalAnimInstance
{
public:
	bool                                         IsMessageWait;                                     // 0x8D0(0x1)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22C2[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLDemoArsenalAnimInstance* GetDefaultObj();

	void StartMessageWaitBP(class FName AnimationName);
	void StartMessageWait(class FName AnimationName);
	void EndMessageWaitBP();
	void EndMessageWait();
};

// 0x10 (0x370 - 0x360)
// Class DXM.TTLDemoHairAnimInstance
class UTTLDemoHairAnimInstance : public UTTLAnimInstance
{
public:
	bool                                         IsPause;                                           // 0x360(0x1)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22C3[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLDemoHairAnimInstance* GetDefaultObj();

};

// 0x190 (0x750 - 0x5C0)
// Class DXM.TTLDescentBooster
class ATTLDescentBooster : public ATTLSupportWeaponBase
{
public:
	class UTTLArsenalMovementComponent*          OwnerArsenalMovement;                              // 0x5C0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           FxDescentBoost;                                    // 0x5C8(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           FxDescentQuickBoost;                               // 0x660(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	float                                        SocketRotationYawOffsetR;                          // 0x6F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SocketRotationYawOffsetL;                          // 0x6FC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsLongPressBoost;                                  // 0x700(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_22C4[0x17];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLFxPlayback>                FxDescentBoost_LPlayback;                          // 0x718(0x10)(ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FTTLFxPlayback>                FxDescentBoost_RPlayback;                          // 0x728(0x10)(ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_22C5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               BoostDirection;                                    // 0x73C(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_22C6[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLDescentBooster* GetDefaultObj();

	void SetOwnerDescentSpeed();
};

// 0x50 (0x390 - 0x340)
// Class DXM.TTLDestructionOrigin
class ATTLDestructionOrigin : public ATTLActor
{
public:
	bool                                         IsDestroyed;                                       // 0x340(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22C7[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLLayoutSetting                     LayoutSetting;                                     // 0x348(0x30)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLMissionCallbackProcessor          MissionCallbackProcessor;                          // 0x378(0x18)(NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ATTLDestructionOrigin* GetDefaultObj();

	void OnDestroyOriginBP();
	void OnDestroyOrigin();
	void OnDestroyedDelegate(class AActor* DestroyedActor);
	void OnDamageOriginBP(float beforeHP, float AfterHP, float DefaultHP);
	void OnDamageOrigin(float beforeHP, float AfterHP, float DefaultHP);
};

// 0x8 (0x100 - 0xF8)
// Class DXM.TTLDestructionOriginComponent
class UTTLDestructionOriginComponent : public UTTLActorComponent
{
public:
	bool                                         IsDestroyed;                                       // 0xF8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22C8[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLDestructionOriginComponent* GetDefaultObj();

};

// 0x50 (0x390 - 0x340)
// Class DXM.TTLDestructionTarget
class ATTLDestructionTarget : public ATTLActor
{
public:
	bool                                         IsDestroyed;                                       // 0x340(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22C9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLLayoutSetting                     LayoutSetting;                                     // 0x348(0x30)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLMissionCallbackProcessor          MissionCallbackProcessor;                          // 0x378(0x18)(NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ATTLDestructionTarget* GetDefaultObj();

	void OnDestroyTargetBP();
	void OnDestroyTarget();
	void OnDamageTargetBP(float beforeHP, float AfterHP, float DefaultHP);
	void OnDamageTarget(float beforeHP, float AfterHP, float DefaultHP);
};

// 0x8 (0x100 - 0xF8)
// Class DXM.TTLDestructionTargetComponent
class UTTLDestructionTargetComponent : public UTTLActorComponent
{
public:
	bool                                         IsDestroyed;                                       // 0xF8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22CA[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLDestructionTargetComponent* GetDefaultObj();

};

// 0x0 (0x88 - 0x88)
// Class DXM.TTLDlcParam
class UTTLDlcParam : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UTTLDlcParam* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class DXM.TTLDlcUtilities
class UTTLDlcUtilities : public UObject
{
public:

	static class UClass* StaticClass();
	static class UTTLDlcUtilities* GetDefaultObj();

};

// 0x50 (0x1E8 - 0x198)
// Class DXM.TTLDockPaintScrollListComponent
class UTTLDockPaintScrollListComponent : public UTTLScrollListComponentBase
{
public:
	uint8                                        Pad_22CC[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UUserWidget>               Class_HomPaintBtn00;                               // 0x1A0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_22CD[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTextBlock*                            Widget_pallet_m00;                                 // 0x1C8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLDecorationDataManager*             DecorationDataManager;                             // 0x1D0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_22CE[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLDockPaintScrollListComponent* GetDefaultObj();

	TArray<class UUserWidget*> GetHorizontalButtonsList(int32 Position);
	class UUserWidget* CreateOneButtonWidget(struct FTTLDecorationNewFlag& buttonInfo);
};

// 0x0 (0x630 - 0x630)
// Class DXM.TTLDockScene
class ATTLDockScene : public ATTLMenuSceneBase
{
public:

	static class UClass* StaticClass();
	static class ATTLDockScene* GetDefaultObj();

};

// 0x7C0 (0xDF0 - 0x630)
// Class DXM.TTLDockScene2
class ATTLDockScene2 : public ATTLMenuSceneBase
{
public:
	float                                        ArsenalNameAutoInputInterval;                      // 0x630(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETTLEDockScene2State              DockSceneState;                                    // 0x634(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22D8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLUIPaintMenuComponent*              PaintMenuComponent;                                // 0x638(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22D9[0x650];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class UUserWidget*                           Widget_menu_u01;                                   // 0xC90(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           Widget_hed_u00;                                    // 0xC98(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           Widget_prt_u00;                                    // 0xCA0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           Widget_sys_u00;                                    // 0xCA8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           Widget_paint_u00;                                  // 0xCB0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           Widget_viewer00;                                   // 0xCB8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UUserWidget*>                   Widget_ViewerPoseButtonParts;                      // 0xCC0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UUserWidget*>                   Widget_ViewerBGButtonParts;                        // 0xCD0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UWidgetAnimation*                      Animation_Preview_Button_In;                       // 0xCE0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_Preview_Texture_Button_In;               // 0xCE8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_Preview_Button_Out;                      // 0xCF0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATTLUICameraControlActor*              UICamControlActor;                                 // 0xCF8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLGameInstance*                      GameInstance;                                      // 0xD00(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_22DA[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLUIMenuActorShadow*                 FloorShadow;                                       // 0xD18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_22DB[0x70];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            ArsenalPosition;                                   // 0xD90(0x30)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_Dem_cha_btn03;                               // 0xDC0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FTTLNgPartsNoticeInfo>         NgParts_Buffer;                                    // 0xDC8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FTTLNgAttachNoticeInfo>        NgAttach_Buffer;                                   // 0xDD8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	int32                                        MaxNumItem;                                        // 0xDE8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         PopupDecide;                                       // 0xDEC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_22DC[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLDockScene2* GetDefaultObj();

	void SwitchCategory_Assemble();
	void StartClassSelect(int32 StartCursorPos, bool IsArsenalRespawn);
	class ATTLYesNoPopUp* SpawnPopup_YesNoBP();
	class ATTLRegulationListPopUp* SpawnPopup_RegulationBP();
	class ATTLOkPopUp* SpawnPopup_OkBP();
	class ATTLCommonPopup* SpawnPopup_CommonBP();
	void SetupPopup_Regulation();
	void SetupMenuContents();
	void SaveAssemble();
	void ProcessStartArsenalPreviewMode();
	void ProcessEndArsenalPreviewMode();
	void Popup_Yes_Selected();
	void Popup_Regulation_DecideParts();
	void Popup_Regulation_DecideAttachClass();
	void Popup_Regulation_DecideAttach();
	void Popup_Regulation_Decide();
	void Popup_Regulation_Cancel();
	void Popup_Ok_Selected();
	void Popup_No_Selected();
	void Popup_Common_Decide();
	void Popup_Common_Cancel();
	void PlayAnimBP_SwitchAssembleCategory();
	void PlayAnimBP_StartTrialField();
	void PlayAnimBP_StartScene();
	void PlayAnimBP_StartPreviewMode(enum class ETTLEDockScene2State beforeSceneState);
	void PlayAnimBP_StartPaint();
	void PlayAnimBP_StartClassSelect();
	void PlayAnimBP_StartAssemble();
	void PlayAnimBP_EndScene(int32 NewState);
	void PlayAnimBP_EndPreviewMode(enum class ETTLEDockScene2State beforeSceneState);
	void PlayAnimBP_EndPaint();
	void PlayAnimBP_EndClassSelect();
	void PlayAnimBP_EndAssemble();
	void PlayAnimBP_ChangeBGInPreviewMode(class FName MatPath);
	void OpenRegulationPopUp(enum class ETTLEDockScene2RegPopupType Type);
	void OpenPopUp(enum class ETTLEDockScene2PopupState PopupReason, class FText PopupText, bool IsYesNo);
	bool IsNgPartsRoom();
	bool IsNgPartsClass(TArray<struct FTTLNgPartsNoticeInfo>* Ngparts);
	bool IsNgParts(class FName& PartsID, enum class ETTLPartsType PartType, bool IsCoop);
	bool IsNgAttachRoom();
	bool IsNgAttachClass(TArray<struct FTTLNgAttachNoticeInfo>* Ngattach);
	bool IsNgAttach(struct FTTLArsenalPartsInfo& PartsInfo, enum class ETTLEPartMenuIndex PartMenuIndex, TArray<struct FTTLNgAttachNoticeInfo>* Ngattach);
	bool IsCoop();
	bool IsBattle();
	float EndArsenalControl(bool UseCutoff);
	void DoUpdateClassName(const class FString& NewClassName);
	bool DoSaveClass();
	bool DoLoadClass();
	void DoExchangeWeapon();
	bool DoDeleteClass();
	void DoAssemblePartsChange(bool IsRemoveWeapon);
	void ChangeUserSettingPoseOnSpawnArsenalStart();
	void ChangeInitialPoseOnSpawnArsenalStart();
	void ChangeDockSceneState(enum class ETTLEDockScene2State NewState);
};

// 0x3F0 (0x588 - 0x198)
// Class DXM.TTLDockScrollListComponent
class UTTLDockScrollListComponent : public UTTLScrollListComponentBase
{
public:
	class UWidgetAnimation*                      Animation_ReducedBtnON;                            // 0x198(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_ReducedBtnOFF;                           // 0x1A0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_ExpandBtn;                               // 0x1A8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_ReduceBtn;                               // 0x1B0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_22E3[0x3B8];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLGameInstance*                      GameInstance;                                      // 0x570(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_22E4[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ButtonGrayoutOverrideAlpha;                        // 0x584(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTTLDockScrollListComponent* GetDefaultObj();

	void UpdateCurrentPartsList(struct FTTLArsenalPartsInfoList& CurrentPartsList);
	bool ShowEquippedIcon(class UUserWidget* Button, struct FTTLArsenalPartsInfo& PartsInfo);
	void ShowAttachmentIcon(class UUserWidget* Button, struct FTTLArsenalPartsInfo& PartsInfo);
	void PlayButtonReduceAnimation(bool DoForce);
	void PlayButtonExpandAnimation(bool DoForce);
	bool MoveCursorToUD(int32 Offset, int32 RepeatCount);
	bool InitializeBP();
	void InitializeBase_Parts(class UUserWidget* LayoutWidget, TArray<struct FTTLArsenalPartsInfo>& PartsInfoList, struct FTTLArsenalPartsInfoList& CurrentPartsList, enum class ETTLEDockScrollButtonType& buttonType, enum class ETTLEPartMenuIndex& PartMenuIndex, bool WithCheckBox, bool NeedCheckReguration);
	void InitializeBase_Develop(class UUserWidget* LayoutWidget, TArray<struct FTTLDevelopStatus>& DevelopInfoList, bool IsSecretDevelop);
	void InitializeBase_Attach(class UUserWidget* LayoutWidget, TArray<struct FTTLOwnedAttachmentParam>& AttachInfoList, struct FTTLArsenalPartsInfo& AttachmentPartsInfo, enum class ETTLEDockScrollButtonType& buttonType);
	void Initialize(class UUserWidget* LayoutWidget, int32 DisplayNum, int32 ListNumMax);
	struct FTTLOwnedAttachmentParam GetCursoredAttachmentParam();
	void CreateDevelopPartsList(int32 ReferenceIndex);
	class UUserWidget* CreateButtonWidget(int32 Position);
};

// 0xB0 (0xD8 - 0x28)
// Class DXM.LandAnimalEscapeEntity
class ULandAnimalEscapeEntity : public UObject
{
public:
	uint8                                        Pad_22E5[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       ScenePtr;                                          // 0x38(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                SkeletalMeshPtr;                                   // 0x40(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22E6[0x1E];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsOnTheGroundByEscape;                             // 0x66(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsUseGroundRotationByEscape;                       // 0x67(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsInterpUseGroundRotationByEscape;                 // 0x68(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22E7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        InterpSpeedForGround;                              // 0x6C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GroundCheckRayLengthOffsetPower;                   // 0x70(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GroundCheckRayLengthPower;                         // 0x74(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsBoxTraceForEscape;                               // 0x78(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22E8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               BoxTraceHalfSize;                                  // 0x7C(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RotationPower;                                     // 0x88(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDebugDrawRay;                                    // 0x94(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22E9[0x13];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsNeedUpdateAnim;                                  // 0xA8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22EA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Speed_animBP;                                      // 0xAC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Look_animBP;                                       // 0xB0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxVerticalAxisValue;                              // 0xB4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinVerticalAxisValue;                              // 0xB8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxHorizontalAxisValue;                            // 0xBC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinHorizontalAxisValue;                            // 0xC0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeForMaxIdleSpeed;                               // 0xC4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22EB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeForMaxEscapeSpeed;                             // 0xCC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22EC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeForMaxEscapeSpeedRange;                        // 0xD4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ULandAnimalEscapeEntity* GetDefaultObj();

};

// 0x8 (0xE0 - 0xD8)
// Class DXM.TTLDoeEntity
class UTTLDoeEntity : public ULandAnimalEscapeEntity
{
public:
	uint8                                        Pad_22ED[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLDoeEntity* GetDefaultObj();

};

// 0x0 (0x440 - 0x440)
// Class DXM.TTLDogAnimInstance
class UTTLDogAnimInstance : public UTTLAnimalAnimInstance
{
public:

	static class UClass* StaticClass();
	static class UTTLDogAnimInstance* GetDefaultObj();

};

// 0x0 (0x88 - 0x88)
// Class DXM.TTLDogAttackThink
class UTTLDogAttackThink : public UTTLBrainThink
{
public:

	static class UClass* StaticClass();
	static class UTTLDogAttackThink* GetDefaultObj();

};

// 0x8 (0x88 - 0x80)
// Class DXM.TTLDogAttackBehavior
class UTTLDogAttackBehavior : public UTTLBrainBehavior
{
public:
	uint8                                        Pad_22EE[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLDogAttackBehavior* GetDefaultObj();

	void OnAnimNotify_AttackEnd();
};

// 0x0 (0x830 - 0x830)
// Class DXM.TTLDogBase
class ATTLDogBase : public ATTLAnimalBase
{
public:

	static class UClass* StaticClass();
	static class ATTLDogBase* GetDefaultObj();

};

// 0x40 (0xC8 - 0x88)
// Class DXM.TTLDogCollisionThink_Base
class UTTLDogCollisionThink_Base : public UTTLBrainThink
{
public:
	float                                        SearchRadius;                                      // 0x88(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        VisionRangeAngle;                                  // 0x8C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class ATTLCharacterCommon>     SearchClass;                                       // 0x90(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsDebugDraw;                                       // 0xB8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_22EF[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLDogCollisionThink_Base* GetDefaultObj();

};

// 0x10 (0xD8 - 0xC8)
// Class DXM.TTLDogCollisionThink
class UTTLDogCollisionThink : public UTTLDogCollisionThink_Base
{
public:
	float                                        TransitionSidDownBegin;                            // 0xC8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_22F0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  NextTaskAtWaitingSuccess;                          // 0xD0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTTLDogCollisionThink* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class DXM.TTLDogCollisionBehavior
class UTTLDogCollisionBehavior : public UTTLBrainBehavior
{
public:

	static class UClass* StaticClass();
	static class UTTLDogCollisionBehavior* GetDefaultObj();

};

// 0x0 (0xC8 - 0xC8)
// Class DXM.TTLBaseCollisionThink_Sit
class UTTLBaseCollisionThink_Sit : public UTTLDogCollisionThink_Base
{
public:

	static class UClass* StaticClass();
	static class UTTLBaseCollisionThink_Sit* GetDefaultObj();

};

// 0x0 (0xD8 - 0xD8)
// Class DXM.TTLDogCollisionThink_Chase
class UTTLDogCollisionThink_Chase : public UTTLDogCollisionThink
{
public:

	static class UClass* StaticClass();
	static class UTTLDogCollisionThink_Chase* GetDefaultObj();

};

// 0x0 (0x88 - 0x88)
// Class DXM.TTLDogCrawThink
class UTTLDogCrawThink : public UTTLBrainThink
{
public:

	static class UClass* StaticClass();
	static class UTTLDogCrawThink* GetDefaultObj();

};

// 0x10 (0x90 - 0x80)
// Class DXM.TTLDogCrawBehavior
class UTTLDogCrawBehavior : public UTTLBrainBehavior
{
public:
	uint8                                        Pad_22F1[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLDogCrawBehavior* GetDefaultObj();

	void OnAnimNotify_IdleToCrawEnd();
	void OnAnimNotify_CrawToIdleEnd();
};

// 0x0 (0x88 - 0x88)
// Class DXM.TTLDogDeadThink
class UTTLDogDeadThink : public UTTLBrainThink
{
public:

	static class UClass* StaticClass();
	static class UTTLDogDeadThink* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class DXM.TTLDogDeadBehavior
class UTTLDogDeadBehavior : public UTTLBrainBehavior
{
public:

	static class UClass* StaticClass();
	static class UTTLDogDeadBehavior* GetDefaultObj();

};

// 0x0 (0x88 - 0x88)
// Class DXM.TTLDogIdleThink
class UTTLDogIdleThink : public UTTLBrainThink
{
public:

	static class UClass* StaticClass();
	static class UTTLDogIdleThink* GetDefaultObj();

};

// 0x8 (0x88 - 0x80)
// Class DXM.TTLDogIdleBehavior
class UTTLDogIdleBehavior : public UTTLBrainBehavior
{
public:
	uint8                                        Pad_22F2[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLDogIdleBehavior* GetDefaultObj();

};

// 0x0 (0x88 - 0x88)
// Class DXM.TTLDogWalkThink
class UTTLDogWalkThink : public UTTLBrainThink
{
public:

	static class UClass* StaticClass();
	static class UTTLDogWalkThink* GetDefaultObj();

};

// 0x10 (0x90 - 0x80)
// Class DXM.TTLDogWalkBehavior
class UTTLDogWalkBehavior : public UTTLBrainBehavior
{
public:
	float                                        ForawrdScale;                                      // 0x80(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RotationInterpolationRatio;                        // 0x84(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_22F3[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLDogWalkBehavior* GetDefaultObj();

};

// 0x50 (0xD0 - 0x80)
// Class DXM.TTLBaseChaseBehavior
class UTTLBaseChaseBehavior : public UTTLBrainBehavior
{
public:
	class UCurveFloat*                           CurveObjRef;                                       // 0x80(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           CurveRef;                                          // 0x88(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        NearlyDistande;                                    // 0x90(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxVelocityScale;                                  // 0x94(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WalkTimeBeforeStopping;                            // 0x98(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RotationInterp;                                    // 0x9C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETTLAnimalAnimType                StopAnimType;                                      // 0xA0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETTLAnimalAnimType                SpeedyAnimType;                                    // 0xA1(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsUseStayJudge;                                    // 0xA2(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_22F4[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLStayJudgeInfo                     StayInfo;                                          // 0xA4(0x24)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_22F5[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBaseChaseBehavior* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class DXM.TTLDPICustomScalingRule
class UTTLDPICustomScalingRule : public UDPICustomScalingRule
{
public:

	static class UClass* StaticClass();
	static class UTTLDPICustomScalingRule* GetDefaultObj();

};

// 0x48 (0x70 - 0x28)
// Class DXM.TTLHistoryGraphDraw
class UTTLHistoryGraphDraw : public UObject
{
public:
	uint8                                        Pad_22F6[0x48];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLHistoryGraphDraw* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class DXM.TTLDropOnlyPartsControl
class UTTLDropOnlyPartsControl : public UObject
{
public:
	uint8                                        Pad_22F7[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLDropOnlyPartsControl* GetDefaultObj();

	void OnPickUp();
};

// 0x0 (0x88 - 0x88)
// Class DXM.TTLDropParam
class UTTLDropParam : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UTTLDropParam* GetDefaultObj();

};

// 0x20 (0x4E0 - 0x4C0)
// Class DXM.TTLDummyBulletOwnerPawn
class ATTLDummyBulletOwnerPawn : public ATTLPawn
{
public:
	class UTTLLongRangeWeaponParameter*          WeaponParam;                                       // 0x4C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          DamageParam;                                       // 0x4C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBasicStatusComponent*              Status;                                            // 0x4D0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22F8[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLDummyBulletOwnerPawn* GetDefaultObj();

};

// 0x20 (0x580 - 0x560)
// Class DXM.TTLDynamicMeshComponent
class UTTLDynamicMeshComponent : public UPrimitiveComponent
{
public:
	class UMaterialInterface*                    Material;                                          // 0x560(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVector>                       DrawTriangles;                                     // 0x568(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_22F9[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLDynamicMeshComponent* GetDefaultObj();

};

// 0x0 (0x88 - 0x88)
// Class DXM.TTLEffectSoundParam
class UTTLEffectSoundParam : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UTTLEffectSoundParam* GetDefaultObj();

};

// 0x0 (0x88 - 0x88)
// Class DXM.TTLElementReleaseInfo
class UTTLElementReleaseInfo : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UTTLElementReleaseInfo* GetDefaultObj();

};

// 0x38 (0x470 - 0x438)
// Class DXM.TTLFlareBase
class ATTLFlareBase : public ATTLProjectileBase
{
public:
	uint8                                        Pad_22FC[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Amplitude;                                         // 0x458(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_22FD[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ExpansionScaleRate;                                // 0x468(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ReductionScaleRate;                                // 0x46C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ATTLFlareBase* GetDefaultObj();

	void OnHitDelegate(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void OnFlareHit(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x10 (0x480 - 0x470)
// Class DXM.TTLENBossFeryFlare
class ATTLENBossFeryFlare : public ATTLFlareBase
{
public:
	class USphereComponent*                      DamageCollision;                                   // 0x470(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22FE[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLENBossFeryFlare* GetDefaultObj();

};

// 0x20 (0x4E0 - 0x4C0)
// Class DXM.TTLLockonPartsPawn
class ATTLLockonPartsPawn : public ATTLPawn
{
public:
	uint8                                        Pad_22FF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               Velocity;                                          // 0x4C8(0xC)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2300[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLLockonPartsPawn* GetDefaultObj();

	void Collide_SetSphereRadius(float Radius);
	void Collide_SetCapsuleSize(float Length, float Radius);
	void Collide_SetBoxExtent(const struct FVector& Extent);
};

// 0x0 (0x4E0 - 0x4E0)
// Class DXM.TTLENBossFeryLockOnPawn
class ATTLENBossFeryLockOnPawn : public ATTLLockonPartsPawn
{
public:

	static class UClass* StaticClass();
	static class ATTLENBossFeryLockOnPawn* GetDefaultObj();

};

// 0x920 (0xDE0 - 0x4C0)
// Class DXM.TTLENFeryBasePawn
class ATTLENFeryBasePawn : public ATTLPawn
{
public:
	uint8                                        Pad_2301[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponent*                SelfMesh;                                          // 0x4C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBasicStatusComponent*              SelfBasicStatus;                                   // 0x4D0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveSpeedMax;                                      // 0x4D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveAccelerateTime;                                // 0x4DC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnSpeed;                                         // 0x4E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PitchSpeed;                                        // 0x4E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PitchMax;                                          // 0x4E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableRoll;                                        // 0x4EC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2302[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RollMax;                                           // 0x4F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RestoreRollDegree;                                 // 0x4F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RestoreRollRate;                                   // 0x4F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLENBossFeryTurnEasingFunc      MotionTurnFunc;                                    // 0x4FC(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2303[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MotionTurnExp;                                     // 0x500(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLENBossFeryTurnEasingFunc      MotionTurnRestoreFunc;                             // 0x504(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2304[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MotionTurnRestoreExp;                              // 0x508(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2305[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           ThrusterVFX;                                       // 0x510(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FlyLoopVFX;                                        // 0x5A8(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           WaitLoopVFX;                                       // 0x640(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                         IsCheckVFX;                                        // 0x6D8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDebugDrawDustVFX;                                // 0x6D9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2306[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           GroundDustVFX;                                     // 0x6E0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           StraightThrusterVFX;                               // 0x778(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           StraightThrusterEndVFX;                            // 0x810(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           RisingThrusterVFX;                                 // 0x8A8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           RisingThrusterEndVFX;                              // 0x940(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           ExplosionBeforeDeadVFX;                            // 0x9D8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  SocketNameForExplosionBeforeDeadVFX;               // 0xA70(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLFeryMultiCannonComponent*          MultiCannonComponent;                              // 0xA78(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLCapsuleAvoidanceComponent*         CapsuleAvoicance;                                  // 0xA80(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLFlareBase>             FlareBulletClass;                                  // 0xA88(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          FlareSockets;                                      // 0xA90(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        FlareSpeed;                                        // 0xAA0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlareApplyGravityTime;                             // 0xAA4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlareApplyGravityRate;                             // 0xAA8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlareLifeTime;                                     // 0xAAC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlareTargetAreaRadius;                             // 0xAB0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlareHP;                                           // 0xAB4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlareCollisionRadius;                              // 0xAB8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlareAddTmp;                                       // 0xABC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlareSensorDistance;                               // 0xAC0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlareCooldownTime;                                 // 0xAC4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlareCheckInterval;                                // 0xAC8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveSpeed;                                         // 0xACC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               TargetLocation;                                    // 0xAD0(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableMove;                                        // 0xADC(0x1)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnablePitch;                                       // 0xADD(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2307[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              DeltaRotation;                                     // 0xAE0(0xC)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         IsMotionTurn;                                      // 0xAEC(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2308[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MotionTurnBlend;                                   // 0xAF0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDead;                                            // 0xAF4(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsTurnR;                                           // 0xAF5(0x1)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2309[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        GroundRayIgnoreList;                               // 0xAF8(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_230A[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlayback                        ThrusterVFXPlaybackLeft1;                          // 0xB20(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        ThrusterVFXPlaybackLeft2;                          // 0xB38(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        ThrusterVFXPlaybackRight1;                         // 0xB50(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        ThrusterVFXPlaybackRight2;                         // 0xB68(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        GroundVFXPlayback;                                 // 0xB80(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        ThrusterVFXPlayback00;                             // 0xB98(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        ThrusterVFXPlayback01;                             // 0xBB0(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        ThrusterVFXPlayback02;                             // 0xBC8(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        ThrusterVFXPlayback03;                             // 0xBE0(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        ThrusterVFXPlayback04;                             // 0xBF8(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        ThrusterVFXPlayback05;                             // 0xC10(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        ThrusterVFXPlayback06;                             // 0xC28(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        ThrusterVFXPlayback07;                             // 0xC40(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        StraightThrusterVFXPlayback00;                     // 0xC58(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        StraightThrusterVFXPlayback01;                     // 0xC70(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        StraightThrusterVFXPlayback02;                     // 0xC88(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        StraightThrusterVFXPlayback03;                     // 0xCA0(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        StraightThrusterVFXPlayback04;                     // 0xCB8(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        StraightThrusterVFXPlayback05;                     // 0xCD0(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        StraightThrusterVFXPlayback06;                     // 0xCE8(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        StraightThrusterVFXPlayback07;                     // 0xD00(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        StraightThrusterVFXPlayback08;                     // 0xD18(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        StraightThrusterVFXPlayback09;                     // 0xD30(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        StraightThrusterVFXPlayback10;                     // 0xD48(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        StraightThrusterVFXPlayback11;                     // 0xD60(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        ExplosionBeforeDead;                               // 0xD78(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_230B[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ETTLENFeryBase_DeadAnim           DeadType;                                          // 0xDA4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_230C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ExplosionSpan;                                     // 0xDA8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ExplosionVFXMeshIndex;                             // 0xDAC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ExplosionVFXFallingMeshIndex;                      // 0xDB0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_230D[0x2C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLENFeryBasePawn* GetDefaultObj();

	void StopRisingAnimation();
	void StopGoStraightVFX();
	void StopExplosionBeforeDeadEffect(bool Force);
	void SetTurnMotionIndexBP(int32 Index);
	void SetTurnMotionDirBP(bool IsTurnR);
	bool SetNoDamage(bool IsNodamage);
	void SetDeadType(enum class ETTLENFeryBase_DeadAnim DeadType);
	void PlayRisingAnimation();
	void PlayGoStraightVFX();
	void PlayExplosionBeforeDeadEffect(class USkeletalMeshComponent* Mesh);
	void OnMissileLockOn(bool IsStart);
	bool IsMoveStoped();
	bool IsEndRotation();
	enum class ETTLENFeryBase_DeadAnim GetDeadType();
	void DestroyCannons();
};

// 0x430 (0x1210 - 0xDE0)
// Class DXM.TTLENBossFeryPawn
class ATTLENBossFeryPawn : public ATTLENFeryBasePawn
{
public:
	uint8                                        Pad_2312[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          MissileSockets;                                    // 0xDE8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UClass*                                MissileBulletClass;                                // 0xDF8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MissileName;                                       // 0xE00(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MissileNameBreakAway;                              // 0xE08(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           MissileMuzzleVFX;                                  // 0xE10(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           ChaceHitVFX;                                       // 0xEA8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  ChaseDamageName;                                   // 0xF40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          ChaseDamageParam;                                  // 0xF48(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ThrustVFXSocketName;                               // 0xF50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           ThrustVFX;                                         // 0xF58(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  FlipDamageName;                                    // 0xFF0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          FlipDamageParam;                                   // 0xFF8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLBaseWeakPawn>          WeakClass;                                         // 0x1000(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          WeakSockets;                                       // 0x1008(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<int32>                                WeakSocketsId;                                     // 0x1018(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                    LockonClass;                                       // 0x1028(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          LockonSockets;                                     // 0x1030(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         EnableAction;                                      // 0x1040(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2313[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ATargetPoint*                          WreckTargetPoint;                                  // 0x1048(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FlowThrusterVFX;                                   // 0x1050(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class FName>                          FlowThrusterSockets;                               // 0x10E8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UTTLBossCoreInfoHUDComponent*          BossCoreInfoHUD;                                   // 0x10F8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         MissionInvincible;                                 // 0x1100(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2314[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                RewardCondition;                                   // 0x1108(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        FlyLock;                                           // 0x1118(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2315[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UBoxComponent*>                 SelfCollisionComponents;                           // 0x1128(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2316[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        TargetList;                                        // 0x1140(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class ATTLProjectileBase*>            LaserList;                                         // 0x1150(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2317[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLFxPlayback>                FlowThrusters;                                     // 0x1178(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class AActor>>         LockonActors;                                      // 0x1188(0x10)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2318[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlayback                        ThrustPlay;                                        // 0x11A0(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2319[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLEnBossSnak01WeakControlComp*       WeakControl;                                       // 0x11F0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         AIDebug_FlareDraw;                                 // 0x11F8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AIDebug_MinimumHeightDraw;                         // 0x11F9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AIDebug_MachinegunStartDraw;                       // 0x11FA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AIDebug_MachinegunDraw;                            // 0x11FB(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AIDebug_ThrustRangeDraw;                           // 0x11FC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_231A[0x13];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLENBossFeryPawn* GetDefaultObj();

	void Wreck();
	void WeakDestroyCountUp(class AActor* Actor);
	bool UpdateTargetList();
	void SpawnChaceHitVFX(class AActor* Actor);
	void ShootMissile(class AActor* TargetActor, class FName SocketName, bool breakAway);
	void SetUpReinforce(class AActor* Actor);
	void OpenWeakEngine(float OpenTime);
	void OnStatusDead_Delegate();
	void OnMultiplayOpenErrorPopupDelegate(class ATTLPopUpBase* ErrorPopup);
	void OnMissionEventFinished(class FName EventName, enum class ETTLEventFinishedType EventFinishedType);
	void OnMeshComponentHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void MulticastChaseSetRep(class AActor* TargetActor, int8 Phase, int8 Type);
	void DestroyProcess();
	void CloseWeakEngine();
};

// 0x210 (0x6D0 - 0x4C0)
// Class DXM.TTLENBossFeryWeak01Pawn
class ATTLENBossFeryWeak01Pawn : public ATTLPawn
{
public:
	class UTTLBasicStatusComponent*              SelfStatus;                                        // 0x4C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                OwnerActor;                                        // 0x4C8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLENBossFeryWeak01Mode          DamageMode;                                        // 0x4D0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLENBossFeryWeak01Mode          DelayDamageMode;                                   // 0x4D1(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLENBossFeryWeak01Mode          LockonMode;                                        // 0x4D2(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLENBossFeryWeak01State         State;                                             // 0x4D3(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Timer;                                             // 0x4D4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DelayTimer;                                        // 0x4D8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DelayDamageModeTimer;                              // 0x4DC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           OpenEffectResource;                                // 0x4E0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Destroy_DamageEffectResource;                      // 0x578(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Destroy_ExplosionEffectResource;                   // 0x610(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  Destroy_ReferenceSocketName;                       // 0x6A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Destroy_AttachSocketName;                          // 0x6B0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_231E[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLENBossFeryWeak01Pawn* GetDefaultObj();

	void StartOpen(float OpenTime, float DelayTime);
	void StartClose();
	void StartBreak();
	void SetState(enum class ETTLENBossFeryWeak01State State, float OpenTime, float DelayTime);
	void SetSharingDamageActor(class AActor* Actor);
	void SetOpen(float OpenTime);
	void SetLockonMode(enum class ETTLENBossFeryWeak01Mode Mode);
	void SetHP(float Hp);
	void SetDamageMode(enum class ETTLENBossFeryWeak01Mode Mode, float DelayTime);
	void SetClose();
	bool IsAlive();
	bool Destroy_SetEffect(int32 Type);
};

// 0x20 (0x128 - 0x108)
// Class DXM.TTLEnBossFish01WeakControlComp
class UTTLEnBossFish01WeakControlComp : public UTTLBossWeakControlComponent
{
public:
	TArray<class ATTLBaseWeakPawn*>              WeakBldActors;                                     // 0x108(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FTTLBossWeakMaterialChangeList> DynamicMaterialInstanceList;                       // 0x118(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLEnBossFish01WeakControlComp* GetDefaultObj();

};

// 0x30 (0x550 - 0x520)
// Class DXM.TTLENBossSnak01AIController
class ATTLENBossSnak01AIController : public ATTLBossAIController
{
public:
	TArray<float>                                PhaseChangeHPRate;                                 // 0x520(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class ATTLENBossSnak01Pawn*                  OwnerBoss;                                         // 0x530(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLAIActionENBossSnak01Component*     OwnerBossAI;                                       // 0x538(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBasicStatusComponent*              OwnerBossStatus;                                   // 0x540(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_231F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLENBossSnak01AIController* GetDefaultObj();

};

// 0x50 (0x3B0 - 0x360)
// Class DXM.TTLENBossSnak01AnimInstance
class UTTLENBossSnak01AnimInstance : public UTTLAnimInstance
{
public:
	class ATTLENBossSnak01Pawn*                  OwnerPawn;                                         // 0x360(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLAIActionENBossSnak01Component*     OwnerAIAction;                                     // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        JointNum;                                          // 0x370(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2320[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVector>                       Translations;                                      // 0x378(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FRotator>                      Rotations;                                         // 0x388(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                Rolls;                                             // 0x398(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         IsProcedural;                                      // 0x3A8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2321[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLENBossSnak01AnimInstance* GetDefaultObj();

};

// 0xD40 (0x1200 - 0x4C0)
// Class DXM.TTLENBossSnak01Pawn
class ATTLENBossSnak01Pawn : public ATTLPawn
{
public:
	uint8                                        Pad_2324[0x2C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        UniqueBossDropTargetValue;                         // 0x4EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveSpeedFirst;                                    // 0x4F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveSpeedSecond;                                   // 0x4F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveAccelerateTime;                                // 0x4F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2325[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          JointNames;                                        // 0x500(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        CreateMovePathDistanceMin;                         // 0x510(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CreateMovePathDistanceMax;                         // 0x514(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CreateMovePathRadius;                              // 0x518(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MovePathDirectionRate;                             // 0x51C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveTargetDirectionRate;                           // 0x520(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CreateMovePathCount;                               // 0x524(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CreateMovePathCountMax;                            // 0x528(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2326[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           MoveThrusterS;                                     // 0x530(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           MoveThrusterM;                                     // 0x5C8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           MoveThrusterL;                                     // 0x660(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class FName>                          ThrusterSockets;                                   // 0x6F8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class FName>                          AddThrusterSockets;                                // 0x708(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           TrailVFX;                                          // 0x718(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<float>                                RangeFromPath;                                     // 0x7B0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        HeightPathRange;                                   // 0x7C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PathLeaveCheckRange;                               // 0x7C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           MoveLoopVFX1;                                      // 0x7C8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           MoveLoopVFX2;                                      // 0x860(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           MovePeriodicVFX;                                   // 0x8F8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        Move_PeriodicIntervalTime;                         // 0x990(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RollTime;                                          // 0x994(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RollDelayTime;                                     // 0x998(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2327[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           RollStartVFX;                                      // 0x9A0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           RollLoopVFX;                                       // 0xA38(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<float>                                SpeedRates;                                        // 0xAD0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<float>                                SpeedChangeTimes;                                  // 0xAE0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLENBossSnakGene01Pawn>  GeneratorClass;                                    // 0xAF0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLBaseWeakPawn>          WeakClass;                                         // 0xAF8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          WeakSockets;                                       // 0xB00(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLBaseENBossSnakFin>     MainFinClass;                                      // 0xB10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          MainFinSockets;                                    // 0xB18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLBaseENBossSnakFin>     SubFinClass;                                       // 0xB28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          SubFinFrontSockets;                                // 0xB30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class FName>                          SubFinBackSockets;                                 // 0xB40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           ElectricVFX;                                       // 0xB50(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           ElectricHitVFX;                                    // 0xBE8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        ElectricDamage;                                    // 0xC80(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ElectricKnockBack;                                 // 0xC84(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLENBossSnakElectricActor> ElectricHeadClass;                                 // 0xC88(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLENBossSnakElectricActor> ElectricBrdgClass;                                 // 0xC90(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLENBossSnakElectricActor> ElectricTailClass;                                 // 0xC98(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLENBossSnakMsle01Actor> MissileClass;                                      // 0xCA0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          MissileSockets;                                    // 0xCA8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           TransformVFX;                                      // 0xCB8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class FName>                          TransformVFXSockets;                               // 0xD50(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        EyeAmpRateFirst;                                   // 0xD60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          EyeColorFirst;                                     // 0xD64(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EyeAmpRateSecond;                                  // 0xD74(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          EyeColorSecond;                                    // 0xD78(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AddBlendTime;                                      // 0xD88(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChasePathDistRate;                                 // 0xD8C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           ChaseStartHeadVFX;                                 // 0xD90(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           ChaseStartBodyVFX;                                 // 0xE28(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        RemoteJointNoderInterpolateTime;                   // 0xEC0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChaseBrakeAngle;                                   // 0xEC4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChaseBrakeRate;                                    // 0xEC8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChaseBrakeDistance;                                // 0xECC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CreateMovePathDonutsCount;                         // 0xED0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CreateMovePathDonutsDistanceMin;                   // 0xED4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CreateMovePathDonutsDistanceMax;                   // 0xED8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CreateMovePathChaseDistanceMin;                    // 0xEDC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CreateMovePathChaseDistanceMax;                    // 0xEE0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLENBossSnakForm                CurrentForm;                                       // 0xEE4(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLENBossSnakDamageType          DamageType;                                        // 0xEE5(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnabledMove;                                       // 0xEE6(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2328[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AddBlendRate;                                      // 0xEE8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TotalLength;                                       // 0xEEC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TailChaseRatio;                                    // 0xEF0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TailSwingCollisionRadius;                          // 0xEF4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetChaseEnableDir;                              // 0xEF8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CirclePathDistRate;                                // 0xEFC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2329[0x58];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTSnakeBossPathData                  PathWork;                                          // 0xF58(0x18)(NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_232A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLFxPlayback>                ThrusterVFXPlaybacks;                              // 0xF78(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FTTLFxPlayback>                TrailVFXPlaybacks;                                 // 0xF88(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FTTLFxPlayback>                MoveLoopVFXPlaybacks;                              // 0xF98(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FTTLFxPlayback>                RollVFXPlaybacks;                                  // 0xFA8(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class ATTLENBossSnakGene01Pawn>> GeneratorActors;                                   // 0xFB8(0x10)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class ATTLBaseENBossSnakFin>> MainFinActors;                                     // 0xFC8(0x10)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class ATTLBaseENBossSnakFin>> SubFinFrontActors;                                 // 0xFD8(0x10)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class ATTLBaseENBossSnakFin>> SubFinBackActors;                                  // 0xFE8(0x10)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class ATTLENBossSnakMsle01Actor>> MissileActors;                                     // 0xFF8(0x10)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                        Pad_232B[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLElectric>                  Electrics;                                         // 0x1028(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_232C[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLEnBossSnak01WeakControlComp*       WeakControl;                                       // 0x1048(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLHitManageComponent*                HitManager;                                        // 0x1050(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_232D[0x24];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MoveSpeed;                                         // 0x107C(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        SpeedTypeNotify;                                   // 0x1080(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_232E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLENBossSnak_JointTransReplicator> JointTransReplicates;                              // 0x1088(0x10)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	struct FVector                               TailPosition;                                      // 0x1098(0xC)(Net, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_232F[0x24];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLSnakMultiCannonComponent*          TarretsComponent;                                  // 0x10C8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLSnakMultiCannonComponent*          CannonsComponent;                                  // 0x10D0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLSnakMultiCannonComponent*          LasersComponent;                                   // 0x10D8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLSpawnActorComponent*               SpawnActorComponent;                               // 0x10E0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLMaterialParamaterComponent*        EyeMaterialParamater;                              // 0x10E8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLBossCoreInfoHUDComponent*          TTLBossCoreInfoHUDComponent;                       // 0x10F0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATTLENBossSnakElectricActor*           HeadActor;                                         // 0x10F8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATTLENBossSnakElectricActor*           BrdgActor;                                         // 0x1100(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATTLENBossSnakElectricActor*           TailActor;                                         // 0x1108(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2330[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         MissionMode;                                       // 0x1118(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMissionSnakFlag                  MissionFlag;                                       // 0x1119(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2331[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ATargetPoint*                          MissionTarget;                                     // 0x1120(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EnemyMissionAppInterval;                           // 0x1128(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeightMin;                                         // 0x112C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeightMax;                                         // 0x1130(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CreateMovePathRadiusStage;                         // 0x1134(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CheckWallCount;                                    // 0x1138(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WallRadius;                                        // 0x113C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ToGroundLen;                                       // 0x1140(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2332[0x24];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlayback                        VFXAngryPlayback[0x2];                             // 0x1168(0x30)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	bool                                         AIDebug_StopMove;                                  // 0x1198(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AIDebug_DrawMoveTarget;                            // 0x1199(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AIDebug_DrawWandeingPath;                          // 0x119A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AIDebug_DrawPath1;                                 // 0x119B(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AIDebug_DrawPath2;                                 // 0x119C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AIDebug_DrawChaseArea;                             // 0x119D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AIDebug_DrawDonuts;                                // 0x119E(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AIDebug_DrawArkGunRange;                           // 0x119F(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2333[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  DamageParamName;                                   // 0x11C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2334[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLENBossSnak01Pawn* GetDefaultObj();

	void SetTestMoveSpeedMax(float MaxSpeed);
	void SetTestChangeAction(int32 ActionNo, int32 ExecuteLevel);
	void SetEnabledMove(bool Enabled);
	void ResetTransform(struct FTransform& Transform);
	void OnTakeAnyDamageSnakDelegate(class AActor* DamagedActor, float Damage, class UDamageType* GetDamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void OnStatusDead_Delegate();
	void OnRep_SpeedType();
	void OnRep_JointTransReplicates();
	void OnMultiplayOpenErrorPopupDelegate(class ATTLPopUpBase* ErrorPopup);
	void OnMultiplayCloseErrorPopupDelegate();
	void OnComponentHitElectric(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void InitializeMovePath();
	void InitializeJoint();
	void InitializeForm(enum class ETTLENBossSnakForm Form);
	void GetJointParam(int32 Index, struct FVector* Translation, struct FRotator* Rotation, float* Roll);
};

// 0x0 (0x108 - 0x108)
// Class DXM.TTLEnBossSnak01WeakControlComp
class UTTLEnBossSnak01WeakControlComp : public UTTLBossWeakControlComponent
{
public:

	static class UClass* StaticClass();
	static class UTTLEnBossSnak01WeakControlComp* GetDefaultObj();

};

// 0x100 (0x5C0 - 0x4C0)
// Class DXM.TTLENBossSnakElectricActor
class ATTLENBossSnakElectricActor : public ATTLPawn
{
public:
	struct FTTLFxParam                           ElectricVFX;                                       // 0x4C0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        ElectricDisabledTime;                              // 0x558(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SphereSize;                                        // 0x55C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                SelfMesh;                                          // 0x560(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2337[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlayback                        ElectricVFXPlayback;                               // 0x570(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2338[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLENBossSnakElectricActor* GetDefaultObj();

	void OnComponentEndOverlapElectric(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnComponentBeginOverlapElectric(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x20 (0x380 - 0x360)
// Class DXM.TTLENBossSnakFinB01AnimInstance
class UTTLENBossSnakFinB01AnimInstance : public UTTLAnimInstance
{
public:
	class UAnimMontage*                          AnimMontage;                                       // 0x360(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          CaptureMontage;                                    // 0x368(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2339[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLENBossSnakFinB01AnimInstance* GetDefaultObj();

};

// 0x440 (0xC00 - 0x7C0)
// Class DXM.TTLENBossSnakFinB01Character
class ATTLENBossSnakFinB01Character : public ATTLCharacter
{
public:
	uint8                                        Pad_233B[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           TrailVFX;                                          // 0x7D0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class FName>                          TrailSockets;                                      // 0x868(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           GroundVFX;                                         // 0x878(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           ShortVFX;                                          // 0x910(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  ShortSocket;                                       // 0x9A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           HitVFX;                                            // 0x9B0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  HitSocket;                                         // 0xA48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GravityScale;                                      // 0xA50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_233C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  IgnoreCollisionTag;                                // 0xA58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CapsuleHerfHeight;                                 // 0xA60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ThrowDamage;                                       // 0xA64(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ThrowLifeSpan;                                     // 0xA68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ThrowSpeed;                                        // 0xA6C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ThrowGravityScale;                                 // 0xA70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              ThrowReleaseRot;                                   // 0xA74(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        ThrowReleaseRotTime;                               // 0xA80(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ThrowLineDistance;                                 // 0xA84(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ThrowLineScale;                                    // 0xA88(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ThrowHeight;                                       // 0xA8C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ThrowSide;                                         // 0xA90(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               GrabCameraLookOffset;                              // 0xA94(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              GrabCameraRotation;                                // 0xAA0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        GrabCameraDistance;                                // 0xAAC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AttackRadius;                                      // 0xAB0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AttackDivRatio;                                    // 0xAB4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        baseHP;                                            // 0xAB8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FallForwardVelocity;                               // 0xABC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AccessPointRadius;                                 // 0xAC0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_233D[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLFxPlayback>                TrailVFXPlaybacks;                                 // 0xAD0(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_233E[0x120];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLENBossSnakFinB01Character* GetDefaultObj();

	void RunOnServerMulticastHitFinAndDamage(class AActor* HitTarget);
	void Release();
	void OnCapsuleComponentHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void MulticastHitFinAndDamage(class AActor* HitTarget);
	void MulticastHitFin();
};

// 0x10 (0x370 - 0x360)
// Class DXM.TTLENBossSnakFinL01AnimInstance
class UTTLENBossSnakFinL01AnimInstance : public UTTLAnimInstance
{
public:
	class UAnimMontage*                          AnimMontage;                                       // 0x360(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_233F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLENBossSnakFinL01AnimInstance* GetDefaultObj();

	void OpendStart();
	void OPEN();
	void Break();
};

// 0x120 (0x5E0 - 0x4C0)
// Class DXM.TTLENBossSnakGene01Pawn
class ATTLENBossSnakGene01Pawn : public ATTLPawn
{
public:
	uint8                                        Pad_2342[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponent*                SelfMesh;                                          // 0x4D0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                      SphereCollision;                                   // 0x4D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBasicStatusComponent*              BasicStatus;                                       // 0x4E0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          SocketNames;                                       // 0x4E8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        MoveTime;                                          // 0x4F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ActionMoveTime;                                    // 0x4FC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RollSpeed;                                         // 0x500(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentRoll;                                       // 0x504(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           DamageVFX;                                         // 0x508(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	int8                                         InitMoveDir;                                       // 0x5A0(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2343[0x3F];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLENBossSnakGene01Pawn* GetDefaultObj();

	void PlayDamageVFX(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void OnStatusDead();
	void OnComponentBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x200 (0x540 - 0x340)
// Class DXM.TTLENBossSnakMsle01Actor
class ATTLENBossSnakMsle01Actor : public ATTLActor
{
public:
	TArray<class FName>                          ShootMissile_MuzzleSocketName;                     // 0x340(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                  ShootMissile_ParameterName;                        // 0x350(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLStandardMissile>       ShootMissile_MissileClass;                         // 0x358(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           ShootMissile_MuzzleEffect;                         // 0x360(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	int32                                        ShootMissile_ShootNum;                             // 0x3F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootMissile_IntervalTime;                         // 0x3FC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                SelfMesh;                                          // 0x400(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLENBossSnakMsle01AnimInstance*      Animation;                                         // 0x408(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLLongRangeWeaponParameter*          ShootMissile_WeaponParameter;                      // 0x410(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          ShootMissile_DamageParameter;                      // 0x418(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2344[0x120];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLENBossSnakMsle01Actor* GetDefaultObj();

	void StartFire(class AActor* Target);
	void Initialize();
};

// 0x10 (0x370 - 0x360)
// Class DXM.TTLENBossSnakMsle01AnimInstance
class UTTLENBossSnakMsle01AnimInstance : public UTTLAnimInstance
{
public:
	class UAnimMontage*                          HatchMontage;                                      // 0x360(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2345[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLENBossSnakMsle01AnimInstance* GetDefaultObj();

	void OpenHatch();
	bool HatchOpened();
	void CloseHatch();
};

// 0x30 (0x550 - 0x520)
// Class DXM.TTLENBossTrts01AIController
class ATTLENBossTrts01AIController : public ATTLBossAIController
{
public:
	TArray<float>                                PhaseChangeHPRate;                                 // 0x520(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class ATTLENBossTrts01Character*             OwnerBoss;                                         // 0x530(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLAIActionENBossTrts01Component*     OwnerBossAI;                                       // 0x538(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBasicStatusComponent*              OwnerBossStatus;                                   // 0x540(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2346[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLENBossTrts01AIController* GetDefaultObj();

	void Initialize();
};

// 0x170 (0x4D0 - 0x360)
// Class DXM.TTLENBossTrts01AnimInstance
class UTTLENBossTrts01AnimInstance : public UTTLAnimInstance
{
public:
	class ATTLENBossTrts01Character*             SelfOwner;                                         // 0x360(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                SelfMesh;                                          // 0x368(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCapsuleComponent*                     SelfCapsule;                                       // 0x370(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLENBossTrts01AnimAct           Action_No;                                         // 0x378(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_234D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Action_Phase;                                      // 0x37C(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Action_Int;                                        // 0x380(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Action_Timer;                                      // 0x384(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Action_Float;                                      // 0x388(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               IK_EffectorLocationFR;                             // 0x38C(0xC)(Edit, BlueprintVisible, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               IK_EffectorLocationFL;                             // 0x398(0xC)(Edit, BlueprintVisible, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               IK_EffectorLocationBR;                             // 0x3A4(0xC)(Edit, BlueprintVisible, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               IK_EffectorLocationBL;                             // 0x3B0(0xC)(Edit, BlueprintVisible, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IK_AlphaFR;                                        // 0x3BC(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IK_AlphaFL;                                        // 0x3C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IK_AlphaBR;                                        // 0x3C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IK_AlphaBL;                                        // 0x3C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               IK_SaveLocationFR;                                 // 0x3CC(0xC)(Edit, BlueprintVisible, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               IK_SaveLocationFL;                                 // 0x3D8(0xC)(Edit, BlueprintVisible, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               IK_SaveLocationBR;                                 // 0x3E4(0xC)(Edit, BlueprintVisible, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               IK_SaveLocationBL;                                 // 0x3F0(0xC)(Edit, BlueprintVisible, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        IK_PhaseFR;                                        // 0x3FC(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        IK_PhaseFL;                                        // 0x400(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        IK_PhaseBR;                                        // 0x404(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        IK_PhaseBL;                                        // 0x408(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IK_ReviseTimerFR;                                  // 0x40C(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IK_ReviseTimerFL;                                  // 0x410(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IK_ReviseTimerBR;                                  // 0x414(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IK_ReviseTimerBL;                                  // 0x418(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IK_ReviseTimer;                                    // 0x41C(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLENBossTrts01ReviseFoot        IK_ReviseMode;                                     // 0x420(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IK_InitializedFR;                                  // 0x421(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IK_InitializedFL;                                  // 0x422(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IK_InitializedBR;                                  // 0x423(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IK_InitializedBL;                                  // 0x424(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_234E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               Stamp_TargetLocation;                              // 0x428(0xC)(Edit, BlueprintVisible, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_234F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                Stamp_TargetActor;                                 // 0x438(0x8)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Stamp_Foot;                                        // 0x440(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BodyTransform_Location;                            // 0x444(0xC)(Edit, BlueprintVisible, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BodyTransform_Alpha;                               // 0x450(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BodyLookAt_Location;                               // 0x454(0xC)(Edit, BlueprintVisible, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BodyLookAt_Alpha;                                  // 0x460(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2350[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          Move_AnimationMontage;                             // 0x468(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Move_Phase;                                        // 0x470(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLENBossTrts01IdleState         Move_IdleState;                                    // 0x474(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLENBossTrts01Walk              Move_WalkState;                                    // 0x475(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Move_IsEnable;                                     // 0x476(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2351[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          Turn_AnimationMontage;                             // 0x478(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Turn_StartYaw;                                     // 0x480(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Turn_TargetYaw;                                    // 0x484(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Turn_DeltaYaw;                                     // 0x488(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2352[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          Jump_AnimationMontage;                             // 0x490(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          Stamp_AnimationMontage;                            // 0x498(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          Tackle_Montage;                                    // 0x4A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2353[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          Anger_Montage;                                     // 0x4B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          DamageReaction_AnimationMontage;                   // 0x4C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          Death_AnimationMontage;                            // 0x4C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLENBossTrts01AnimInstance* GetDefaultObj();

	bool Turn_Start(float TargetYaw);
	bool Tackle_Start(float InSpeed);
	void Tackle_SetStampCollide(int32 Foot);
	void Tackle_SetEffect(int32 Type, int32 ValueA, const struct FVector& ValueB, const struct FRotator& ValueC);
	void Tackle_End();
	bool Stamp_Start(int32 FootNo, class AActor* TargetActor);
	void Move_SetEnable(bool IsEnable);
	bool Move_IsIdle();
	bool Jump_Start(int32 Type);
	void Jump_SetLanding();
	void IK_StartRevise(enum class ETTLENBossTrts01ReviseFoot Mode);
	void IK_ProcessRevise(float DeltaSeconds);
	struct FVector IK_ProcessFootFunc(int32 Foot);
	void IK_Process(float DeltaSeconds);
	void IK_CheckRevise(int32 Foot);
	void Idle_Start();
	bool Idle_InAction(bool CheckWalk);
	void Death_StartIdle();
	bool Death_Start();
	bool Death_IsIdle();
	bool DamageReaction_Start(int32 Type);
	void DamageReaction_End();
	bool Anger_Start();
	void Anger_SetEffect();
};

// 0x1FB0 (0x2770 - 0x7C0)
// Class DXM.TTLENBossTrts01Character
class ATTLENBossTrts01Character : public ATTLCharacter
{
public:
	uint8                                        Pad_2379[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponent*                SelfMesh;                                          // 0x7D0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLENBossTrts01AnimInstance*          SelfAnimBP;                                        // 0x7D8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCapsuleComponent*                     SelfCapsule;                                       // 0x7E0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBaseBossTrtsMovementComponent*     SelfMovement;                                      // 0x7E8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLEnemyPushCollideComponent*         SelfPushCollide;                                   // 0x7F0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBasicStatusComponent*              SelfStatus;                                        // 0x7F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLAIActionENBossTrts01Component*     SelfAIAct;                                         // 0x800(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            CloseRangeAttackDataTable;                         // 0x808(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTTLFxPlayback>                OneshotEffectList;                                 // 0x810(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_237A[0xC0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Difficulty_CampaignModeHPRate;                     // 0x8E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Difficulty_NetworkModeHPRate1;                     // 0x8E4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Difficulty_NetworkModeHPRate2;                     // 0x8E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Difficulty_NetworkModeHPRate3;                     // 0x8EC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Difficulty_NetworkModeHPRate4;                     // 0x8F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Difficulty_CampaignModeDamageRate;                 // 0x8F4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Difficulty_NetworkModeDamageRate1;                 // 0x8F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Difficulty_NetworkModeDamageRate2;                 // 0x8FC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Difficulty_NetworkModeDamageRate3;                 // 0x900(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Difficulty_NetworkModeDamageRate4;                 // 0x904(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Difficulty_CampaignModeTemperatureRate;            // 0x908(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Difficulty_NetworkModeTemperatureRate1;            // 0x90C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Difficulty_NetworkModeTemperatureRate2;            // 0x910(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Difficulty_NetworkModeTemperatureRate3;            // 0x914(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Difficulty_NetworkModeTemperatureRate4;            // 0x918(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_237B[0x24];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                AI_SaveTargetActor;                                // 0x940(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                AI_SaveActorValue;                                 // 0x948(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_237C[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ATTLENBossTrtsWeak01Pawn>  WeakPoint_Class;                                   // 0x968(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeakBoneName_BodyFR1;                              // 0x970(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeakBoneName_BodyFR2;                              // 0x978(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeakBoneName_BodyFL1;                              // 0x980(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeakBoneName_BodyFL2;                              // 0x988(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeakBoneName_BodyBR1;                              // 0x990(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeakBoneName_BodyBR2;                              // 0x998(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeakBoneName_BodyBL1;                              // 0x9A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeakBoneName_BodyBL2;                              // 0x9A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeakBoneName_LegFR;                                // 0x9B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeakBoneName_LegFL;                                // 0x9B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeakBoneName_LegBR;                                // 0x9C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeakBoneName_LegBL;                                // 0x9C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WeakHP_BodyFR1;                                    // 0x9D0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WeakHP_BodyFR2;                                    // 0x9D4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WeakHP_BodyFL1;                                    // 0x9D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WeakHP_BodyFL2;                                    // 0x9DC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WeakHP_BodyBR1;                                    // 0x9E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WeakHP_BodyBR2;                                    // 0x9E4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WeakHP_BodyBL1;                                    // 0x9E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WeakHP_BodyBL2;                                    // 0x9EC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WeakHP_LegFR;                                      // 0x9F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WeakHP_LegFL;                                      // 0x9F4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WeakHP_LegBR;                                      // 0x9F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WeakHP_LegBL;                                      // 0x9FC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLENBossTrtsWeak01Pawn*              Weak_BodyFR1;                                      // 0xA00(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLENBossTrtsWeak01Pawn*              Weak_BodyFR2;                                      // 0xA08(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLENBossTrtsWeak01Pawn*              Weak_BodyFL1;                                      // 0xA10(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLENBossTrtsWeak01Pawn*              Weak_BodyFL2;                                      // 0xA18(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLENBossTrtsWeak01Pawn*              Weak_BodyBR1;                                      // 0xA20(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLENBossTrtsWeak01Pawn*              Weak_BodyBR2;                                      // 0xA28(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLENBossTrtsWeak01Pawn*              Weak_BodyBL1;                                      // 0xA30(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLENBossTrtsWeak01Pawn*              Weak_BodyBL2;                                      // 0xA38(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLENBossTrtsWeak01Pawn*              Weak_LegFR;                                        // 0xA40(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLENBossTrtsWeak01Pawn*              Weak_LegFL;                                        // 0xA48(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLENBossTrtsWeak01Pawn*              Weak_LegBR;                                        // 0xA50(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLENBossTrtsWeak01Pawn*              Weak_LegBL;                                        // 0xA58(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLBaseCannonPawn>        SmallCannon_Class;                                 // 0xA60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CannonBoneName_Body_FUpR;                          // 0xA68(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CannonBoneName_Body_MUpR;                          // 0xA70(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CannonBoneName_Body_BUpR;                          // 0xA78(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CannonBoneName_Body_FUpL;                          // 0xA80(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CannonBoneName_Body_MUpL;                          // 0xA88(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CannonBoneName_Body_BUpL;                          // 0xA90(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CannonBoneName_Body_FUdR;                          // 0xA98(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CannonBoneName_Body_MUdR;                          // 0xAA0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CannonBoneName_Body_BUdR;                          // 0xAA8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CannonBoneName_Body_FUdL;                          // 0xAB0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CannonBoneName_Body_MUdL;                          // 0xAB8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CannonBoneName_Body_BUdL;                          // 0xAC0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CannonBoneName_LegFR_OUpR;                         // 0xAC8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CannonBoneName_LegFR_OUpL;                         // 0xAD0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CannonBoneName_LegFR_IUdR;                         // 0xAD8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CannonBoneName_LegFR_IUdL;                         // 0xAE0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CannonBoneName_LegFL_OUpR;                         // 0xAE8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CannonBoneName_LegFL_OUpL;                         // 0xAF0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CannonBoneName_LegFL_IUdR;                         // 0xAF8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CannonBoneName_LegFL_IUdL;                         // 0xB00(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CannonBoneName_LegBR_OUpR;                         // 0xB08(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CannonBoneName_LegBR_OUpL;                         // 0xB10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CannonBoneName_LegBR_IUdR;                         // 0xB18(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CannonBoneName_LegBR_IUdL;                         // 0xB20(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CannonBoneName_LegBL_OUpR;                         // 0xB28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CannonBoneName_LegBL_OUpL;                         // 0xB30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CannonBoneName_LegBL_IUdR;                         // 0xB38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CannonBoneName_LegBL_IUdL;                         // 0xB40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CannonFreeAttackRemain;                            // 0xB48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_237D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLENBossTrts01CannonLevel>   Cannon_Level;                                      // 0xB50(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class ATTLBaseCannonPawn*                    Cannon_Body_FUpR;                                  // 0xB60(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseCannonPawn*                    Cannon_Body_MUpR;                                  // 0xB68(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseCannonPawn*                    Cannon_Body_BUpR;                                  // 0xB70(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseCannonPawn*                    Cannon_Body_FUpL;                                  // 0xB78(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseCannonPawn*                    Cannon_Body_MUpL;                                  // 0xB80(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseCannonPawn*                    Cannon_Body_BUpL;                                  // 0xB88(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseCannonPawn*                    Cannon_Body_FUdR;                                  // 0xB90(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseCannonPawn*                    Cannon_Body_MUdR;                                  // 0xB98(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseCannonPawn*                    Cannon_Body_BUdR;                                  // 0xBA0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseCannonPawn*                    Cannon_Body_FUdL;                                  // 0xBA8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseCannonPawn*                    Cannon_Body_MUdL;                                  // 0xBB0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseCannonPawn*                    Cannon_Body_BUdL;                                  // 0xBB8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseCannonPawn*                    Cannon_LegFR_OUpR;                                 // 0xBC0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseCannonPawn*                    Cannon_LegFR_OUpL;                                 // 0xBC8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseCannonPawn*                    Cannon_LegFR_IUdR;                                 // 0xBD0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseCannonPawn*                    Cannon_LegFR_IUdL;                                 // 0xBD8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseCannonPawn*                    Cannon_LegFL_OUpR;                                 // 0xBE0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseCannonPawn*                    Cannon_LegFL_OUpL;                                 // 0xBE8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseCannonPawn*                    Cannon_LegFL_IUdR;                                 // 0xBF0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseCannonPawn*                    Cannon_LegFL_IUdL;                                 // 0xBF8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseCannonPawn*                    Cannon_LegBR_OUpR;                                 // 0xC00(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseCannonPawn*                    Cannon_LegBR_OUpL;                                 // 0xC08(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseCannonPawn*                    Cannon_LegBR_IUdR;                                 // 0xC10(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseCannonPawn*                    Cannon_LegBR_IUdL;                                 // 0xC18(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseCannonPawn*                    Cannon_LegBL_OUpR;                                 // 0xC20(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseCannonPawn*                    Cannon_LegBL_OUpL;                                 // 0xC28(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseCannonPawn*                    Cannon_LegBL_IUdR;                                 // 0xC30(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLBaseCannonPawn*                    Cannon_LegBL_IUdL;                                 // 0xC38(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AliveCannonCount;                                  // 0xC40(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_237E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLENBossTrts01MoveLevel>     Move_Level;                                        // 0xC48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        MoveSpeed;                                         // 0xC58(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_237F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           Move_SmokeEffectResource;                          // 0xC60(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  Move_StepParamID;                                  // 0xCF8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          Move_StepDamageParam;                              // 0xD00(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             StampRange;                                        // 0xD08(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StampHeight;                                       // 0xD10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             FRStampDirection;                                  // 0xD14(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             FRStampRange;                                      // 0xD1C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             FLStampDirection;                                  // 0xD24(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             FLStampRange;                                      // 0xD2C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             BRStampDirection;                                  // 0xD34(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             BRStampRange;                                      // 0xD3C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             BLStampDirection;                                  // 0xD44(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             BLStampRange;                                      // 0xD4C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StampHomingEndTime;                                // 0xD54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTTLENBossTrts01StampLevel>    Stamp_Level;                                       // 0xD58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FVector                               Stamp_RandomOffset;                                // 0xD68(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StampWaitTime;                                     // 0xD74(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StampSwingupSpeed;                                 // 0xD78(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StampDownSwingSpeed;                               // 0xD7C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StampHomingSpeed;                                  // 0xD80(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2380[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           Stamp_SandSmokeEffectResource;                     // 0xD88(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Stamp_ImpactEffectResource;                        // 0xE20(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Stamp_HitEffectResource;                           // 0xEB8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Stamp_SandSmokeEffect;                             // 0xF50(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          Stamp_SteppingDamageParam;                         // 0xF68(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          Stamp_StampDamageParam;                            // 0xF70(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           WholeBodyBarrier_ReadyBodyChargeEffectResource;    // 0xF78(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           WholeBodyBarrier_ReadyGroundChargeEffectResource;  // 0x1010(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           WholeBodyBarrier_StartEffectResource;              // 0x10A8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           WholeBodyBarrier_LoopEffectResource;               // 0x1140(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           WholeBodyBarrier_GroundEffectResource;             // 0x11D8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           WholeBodyBarrier_EndEffectResource;                // 0x1270(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           WholeBodyBarrier_HitEffectResource;                // 0x1308(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        WholeBodyBarrier_HitIntervalTime;                  // 0x13A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WholeBodyBarrier_HitEffectScale;                   // 0x13A4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        WholeBodyBarrier_ReadyBodyChargeEffect;            // 0x13A8(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        WholeBodyBarrier_ReadyGroundChargeEffect;          // 0x13C0(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        WholeBodyBarrier_LoopEffect;                       // 0x13D8(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        WholeBodyBarrier_GroundEffect;                     // 0x13F0(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        WholeBodyBarrierRange;                             // 0x1408(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WholeBodyBarrier_Height;                           // 0x140C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WholeBodyBarrier_PushOutSpeed;                     // 0x1410(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2381[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLENBossTrts01WholeBodyBarrierLevel> WholeBodyBarrier_Level;                            // 0x1418(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class ATTLCollideActor*                      WholeBodyBarrier_AttackCollide;                    // 0x1428(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          WholeBodyBarrier_DamageParam;                      // 0x1430(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           SliceLaser_StartEffectResource;                    // 0x1438(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           SliceLaser_LoopEffectResource;                     // 0x14D0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           SliceLaser_EndEffectResource;                      // 0x1568(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           SliceLaser_ShootEffectResource;                    // 0x1600(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           SliceLaser_SwirlingEffectResource;                 // 0x1698(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           SliceLaser_HitEffectResource;                      // 0x1730(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FVector2D                             SliceLaserHeightRange;                             // 0x17C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SliceLaserHeightAdjustmentTime;                    // 0x17D0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SliceLaserHeightAdjustmentSpeed;                   // 0x17D4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SliceLaserHeightDecisionTime;                      // 0x17D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SliceLaserRange;                                   // 0x17DC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SliceLaserIrradiationTime;                         // 0x17E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SliceLaserTurningWaitTime;                         // 0x17E4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SliceLaserTurningTime;                             // 0x17E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SliceLaserEndTime;                                 // 0x17EC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTTLENBossTrts01SliceLaserLevel> SliceLaser_Level;                                  // 0x17F0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        SliceLaser_StartEffect;                            // 0x1800(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        SliceLaser_LoopEffect;                             // 0x1818(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          SliceLaser_DamageParam;                            // 0x1830(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageReaction_LargeCannonDropOutFixedTime;        // 0x1838(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2382[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           DamageReaction_LaserDamageEffectResource;          // 0x1840(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                         DamageReaction_IsDisable;                          // 0x18D8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2383[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlayback                        DamageReaction_LaserDamageEffect;                  // 0x18E0(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_2384[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         Death_IsDisable;                                   // 0x18F9(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2385[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  HatchSocketName_R;                                 // 0x1900(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HatchSocketName_L;                                 // 0x1908(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SummonEnemyRange;                                  // 0x1910(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SummonEnemyAppearCount;                            // 0x1914(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SummonEnemyMax;                                    // 0x1918(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2386[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UClass*                                SummonEnemyClass;                                  // 0x1920(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SummonEnemyStartOffset;                            // 0x1928(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SummonEnemyEndOffset;                              // 0x1934(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SummonEnemyInterval;                               // 0x1940(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SummonEnemyDisposeHeight;                          // 0x1944(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SummonEnemyDisposeRadius;                          // 0x1948(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SummonEnemyDisposeTime;                            // 0x194C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           SummonEnemy_EjectEffectResource;                   // 0x1950(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        SummonEnemy_List;                                  // 0x19E8(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class UClass*                                LargeCannon_Class;                                 // 0x19F8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LargeCannon_AttachSocketName;                      // 0x1A00(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2387[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            LargeCannon_AttachOffset;                          // 0x1A10(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        LargeCannonAttitudeAngleSpeed;                     // 0x1A40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LargeCannonAttitudeHeightSpeed;                    // 0x1A44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LargeCannonMaxBodyAngle;                           // 0x1A48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             LargeCannonBodyHeight;                             // 0x1A4C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2388[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           LargeCannon_DestroyEffectResource;                 // 0x1A58(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class ATTLENBossTrtsLaser01Pawn*             LargeCannonPawn;                                   // 0x1AF0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLENBossTrtsLaser01Pawn*             LargeCannon_DropOutedPawn;                         // 0x1AF8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        LargeCannon_DestroyEffect;                         // 0x1B00(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        ExtraThickLaserRange;                              // 0x1B18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExtraThickLaserPreparationTime;                    // 0x1B1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExtraThickLaserRadius;                             // 0x1B20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExtraThickLaserNoticeStartTime;                    // 0x1B24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExtraThickLaser_ShootEffectTime;                   // 0x1B28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExtraThickLaserStartTime;                          // 0x1B2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExtraThickLaserEndTime;                            // 0x1B30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExtraThickLaserFinishTime;                         // 0x1B34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExtraThickLaserIntervalTime;                       // 0x1B38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExtraThickLaser_PushOutSpeed;                      // 0x1B3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTTLENBossTrts01ExtraThickLaserLevel> ExtraThickLaser_Level;                             // 0x1B40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class ATTLENBossTrtsBodyAttack01Actor*       AttackCollide_Body;                                // 0x1B50(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLENBossTrtsLegAttack01Actor*        AttackCollide_FR;                                  // 0x1B58(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLENBossTrtsLegAttack01Actor*        AttackCollide_FL;                                  // 0x1B60(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLENBossTrtsLegAttack01Actor*        AttackCollide_BR;                                  // 0x1B68(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLENBossTrtsLegAttack01Actor*        AttackCollide_BL;                                  // 0x1B70(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Turn_UnitAngle;                                    // 0x1B78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Turn_ConditionTime;                                // 0x1B7C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTTLENBossTrts01TurnLevel>     Turn_Level;                                        // 0x1B80(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        Turn_Speed;                                        // 0x1B90(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Turn_AnimSpeedRate;                                // 0x1B94(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Turn_FootGroundedEffectResource;                   // 0x1B98(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Turn_BodyLeftEffectResource;                       // 0x1C30(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Turn_BodyRightEffectResource;                      // 0x1CC8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Turn_BodyEffect;                                   // 0x1D60(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Turn_BoostSmokeEffectResource;                     // 0x1D78(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        Turn_BoostSmokeAngleRate;                          // 0x1E10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2389[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlayback                        Turn_BoostSmokeEffectFR;                           // 0x1E18(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Turn_BoostSmokeEffectFL;                           // 0x1E30(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Turn_BoostSmokeEffectBR;                           // 0x1E48(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Turn_BoostSmokeEffectBL;                           // 0x1E60(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FTTLENBossTrts01LongJumpLevel> LongJump_Level;                                    // 0x1E78(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          LongJump_LandingDamageParam;                       // 0x1E88(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTTLENBossTrts01ShortJumpLevel> ShortJump_Level;                                   // 0x1E90(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        ShortJump_AnimSpeedRate;                           // 0x1EA0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_238A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLDamageParameterComponent*          ShortJump_LandingDamageParam;                      // 0x1EA8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StampJump_AttackCollideTiming;                     // 0x1EB0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_238B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLENBossTrts01StampJumpLevel> StampJump_Level;                                   // 0x1EB8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          StampJump_LndDamageParam;                          // 0x1EC8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          StampJump_FalDamageParam;                          // 0x1ED0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Jump_TakeoffEffectResource;                        // 0x1ED8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Jump_BodyLandingEffectResource;                    // 0x1F70(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Jump_FootLandingEffectResource;                    // 0x2008(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Jump_HitEffectResource;                            // 0x20A0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FTTLENBossTrts01TackleLevel>   Tackle_Level;                                      // 0x2138(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Tackle_StampEffectResource;                        // 0x2148(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Tackle_HitEffectResource;                          // 0x21E0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          Tackle_TackleDamageParam;                          // 0x2278(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          Tackle_StampDamageParam;                           // 0x2280(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Anger_EffectResource;                              // 0x2288(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  Thruster_SocketNameFRUpR;                          // 0x2320(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Thruster_SocketNameFRUdR;                          // 0x2328(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Thruster_SocketNameFRUpL;                          // 0x2330(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Thruster_SocketNameFRUdL;                          // 0x2338(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Thruster_SocketNameFLUpR;                          // 0x2340(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Thruster_SocketNameFLUdR;                          // 0x2348(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Thruster_SocketNameFLUpL;                          // 0x2350(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Thruster_SocketNameFLUdL;                          // 0x2358(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Thruster_SocketNameBRUpR;                          // 0x2360(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Thruster_SocketNameBRUdR;                          // 0x2368(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Thruster_SocketNameBRUpL;                          // 0x2370(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Thruster_SocketNameBRUdL;                          // 0x2378(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Thruster_SocketNameBLUpR;                          // 0x2380(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Thruster_SocketNameBLUdR;                          // 0x2388(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Thruster_SocketNameBLUpL;                          // 0x2390(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Thruster_SocketNameBLUdL;                          // 0x2398(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Thruster_StartLoopEffectResource;                  // 0x23A0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Thruster_EndEffectResource;                        // 0x2438(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Thruster_SmokeEffectResource;                      // 0x24D0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Thruster_EffectFRR;                                // 0x2568(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_238C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlayback                        Thruster_EffectFRL;                                // 0x2588(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_238D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlayback                        Thruster_EffectFLR;                                // 0x25A8(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_238E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlayback                        Thruster_EffectFLL;                                // 0x25C8(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_238F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlayback                        Thruster_EffectBRR;                                // 0x25E8(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_2390[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlayback                        Thruster_EffectBRL;                                // 0x2608(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_2391[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlayback                        Thruster_EffectBLR;                                // 0x2628(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_2392[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlayback                        Thruster_EffectBLL;                                // 0x2648(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_2393[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UClass*                                Armor_Class;                                       // 0x2668(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Armor_SocketNameFR;                                // 0x2670(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Armor_SocketNameFL;                                // 0x2678(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Armor_SocketNameBR;                                // 0x2680(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Armor_SocketNameBL;                                // 0x2688(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLENBossTrtsCover01Pawn*             Armor_FR;                                          // 0x2690(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLENBossTrtsCover01Pawn*             Armor_FL;                                          // 0x2698(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLENBossTrtsCover01Pawn*             Armor_BR;                                          // 0x26A0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLENBossTrtsCover01Pawn*             Armor_BL;                                          // 0x26A8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTTLLockonPartsInfo>           LockonParts_List;                                  // 0x26B0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FVector                               Eye_NormalColor;                                   // 0x26C0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Eye_NormalSpeedRate;                               // 0x26CC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Eye_AngerColor;                                    // 0x26D0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Eye_AngerSpeedRate;                                // 0x26DC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Eye_ToAngerTime;                                   // 0x26E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Eye_ToDeathTime;                                   // 0x26E4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLENBossTrts01Eye               Eye_State;                                         // 0x26E8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2394[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Eye_Timer;                                         // 0x26EC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLENBossTrtsMissile01Pawn> MissileTurret_Class;                               // 0x26F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MissileTurret_AttachSocketName;                    // 0x26F8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLENBossTrtsMissile01Pawn*           MissileTurret_Pawn;                                // 0x2700(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ATTLWarningArea*>               WarningArea_List;                                  // 0x2708(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2395[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLENBossTrts01ShootMissileLevel> ShootMissile_Level;                                // 0x2720(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_2396[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLBossCoreInfoHUDComponent*          TTLBossCoreInfoHUDComponent;                       // 0x2740(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2397[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLENBossTrts01Character* GetDefaultObj();

	bool WholeBodyBarrier_SetEffect(int32 EffectNo, bool Enable, const struct FVector& Pos, float Scale);
	void WeakPoint_CreateOnLeg();
	void WeakPoint_CreateOnBody();
	class ATTLENBossTrtsWeak01Pawn* WeakPoint_Create(class FName InSocketName, enum class ETTLENBossTrts01Weak WeakType);
	void WeakPoint_AllDestroy(bool IsExplosion);
	bool Turn_SetEffect(int32 Type, bool ValueA, int32 ValueB);
	bool Thruster_SetEffect(int32 Type, bool Direction, bool Enable);
	bool Tackle_Start(float SpeedRate);
	void Tackle_SetEffect(int32 Type, int32 ValueA, const struct FVector& ValueB, const struct FRotator& ValueC);
	void Tackle_MulticastEnd();
	bool Tackle_End();
	int32 SummonEnemy_UpdateList();
	bool StartShootMissile(int32 Level, class AActor* Target);
	bool StartDeath();
	bool Stamp_SetEffect(int32 Type, bool Enable, int32 Direction, const struct FVector& Loc, const struct FRotator& Rot);
	void SmallCannon_SetAttack(bool Value, int32 Level);
	void SmallCannon_OverrideControl(bool Value, int32 Level);
	void SmallCannon_NotifyDestroyed();
	bool SmallCannon_IsExistTarget();
	class ATTLBaseCannonPawn* SmallCannon_IsAlive(enum class ETTLENBossTrts01Cannon CannonNo, bool* IsAlive);
	void SmallCannon_InitializeLeg();
	void SmallCannon_InitializeBody();
	class ATTLBaseCannonPawn* SmallCannon_Get(enum class ETTLENBossTrts01Cannon CannonNo);
	void SmallCannon_DestroyLeg(bool IsExplosion);
	void SmallCannon_DestroyBody(bool IsExplosion);
	class ATTLBaseCannonPawn* SmallCannon_Create(class FName SocketName, enum class ETTLENBossTrts01Cannon CannonNo);
	void SliceLaser_SetHitEffect(class AActor* InActor, class UCapsuleComponent* InCapsule, const struct FVector& InTriangleLoc, const struct FVector& InCapsuleLoc);
	bool SliceLaser_SetEffect(int32 EffectNo, bool Enable, float Yaw);
	void SetWeakPointState(enum class ETTLENBossTrts01WeakParts Parts, enum class ETTLENBossTrtsWeak01State State, float Time);
	bool SetSliceLaserAttackCollide(float Yaw, float Length);
	void SetLargeLaserAttackCollide(float Length, float Radius, float DeltaSeconds, float PushOutSpeed);
	void SetLargeCannonLookAtAlpha(float Alpha);
	void OnStatusDead_Delegate();
	bool Move_SetEffect(int32 Direction);
	void MissileTurret_Destroy();
	bool MissileTurret_Create();
	bool ManualMove(bool CheckLanding);
	bool LockonParts_Initialize();
	void LockonParts_Destroy();
	bool LockonParts_Create(int32 Index);
	void LockonParts_Add(class ATTLBossTrtsLockonSpherePartsPawn* LockOn);
	void LargeLaserBoneControl(class AActor* Target, float DeltaSeconds, const struct FTransform& BaseBodyTransform, const struct FVector& BarrelOffset, struct FVector* BodyTranslation, struct FVector* BodyLookAt, struct FRotator* BarrelLookAt);
	bool LargeCannon_StartDropOut();
	bool LargeCannon_SetEffect(int32 Type, bool Enable);
	bool LargeCannon_Detach();
	void LargeCannon_Destroy();
	bool LargeCannon_Create();
	bool Jump_SetEffect(int32 Type, bool ValueA, int32 ValueB, const struct FVector& ValueC, const struct FRotator& ValueD);
	bool IsWeakPointAlive(enum class ETTLENBossTrts01Weak WeakNo);
	void Initialize();
	bool Eye_SetState(enum class ETTLENBossTrts01Eye State);
	bool Eye_Set(const struct FVector& Color, float Speed);
	bool Eye_Initialize();
	bool ExtraThickLaser_SetEffect(int32 Type, float Length, float Radius);
	void ExtraThickLaser_DestroyEffect();
	void DettachSummonEnemy(class AActor* Enemy);
	bool DeathIdle_Start();
	bool DamageReaction_SetEffect(enum class ETTLENBossTrts01DmgReact No, bool ValueA);
	class AActor* CreateSummonEnemy(bool IsLeft, const struct FTransform& Offset);
	void CreateSliceLaserTargetActorList(TArray<class AActor*>* ActorList);
	float CheckLargeLaserEndLocation(float Length, float Radius, struct FVector* EndPoint);
	bool CheckDamageReaction(enum class ETTLENBossTrts01DmgReact No);
	void CancelShootMissile();
	void CancelAction(bool InIsEventStart);
	void CalcStampLocation(class AActor* Target, int32 Phase, int32 Foot, const struct FVector& AnimBase, const struct FVector& OldHoming, const struct FVector& UpLeg, float Rate, float Speed, float GHeight, float StampTime, struct FVector* NewHoming, struct FVector* NewTarget);
	bool CalcSliceLaserHeight(class AActor* Target, float OldHeight, float* NewHeight);
	bool AttackCollide_SetCollide(enum class ETTLENBossTrts01AtkCld Collide, enum class ETTLENBossTrts01AtkCldState State, bool ValueA, float ValueB);
	void AttackCollide_Destroy();
	bool AttackCollide_Create();
	void Armor_OnDestroy(enum class ETTLENBossTrts01Armor Parts);
	bool Armor_IsAlive(enum class ETTLENBossTrts01Armor Parts);
	bool Armor_Initialize();
	void Armor_Destroy(bool IsExplosion);
	class ATTLENBossTrtsCover01Pawn* Armor_Create(enum class ETTLENBossTrts01Armor Parts, class FName SocketName);
	bool Anger_Start();
	bool Anger_SetEffect();
	void AI_StartAction(const struct FVector& BossLoc, const struct FRotator& BossRot, class AActor* TargetActor, int32 ActionNo, int32 ExecuteLevel, class AActor* ActorValue, int32 IntValue, float FloatValue, const struct FVector& VectorValue, bool IsDamageDisable, bool IsDeathDisable);
	void AddSmallCannon(enum class ETTLENBossTrts01Cannon CannonType, class ATTLBaseCannonPawn* CannonPawn);
};

// 0x350 (0x690 - 0x340)
// Class DXM.TTLENBossTrtsBodyAttack01Actor
class ATTLENBossTrtsBodyAttack01Actor : public ATTLCollideActor
{
public:
	class ATTLENBossTrts01Character*             OwnerBoss;                                         // 0x340(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCapsuleComponent*                     OwnerCapsule;                                      // 0x348(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                      SelfCollide;                                       // 0x350(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            DataTable;                                         // 0x358(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLENBossTrts01AtkCldState       CollideState;                                      // 0x360(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLENBossTrts01AtkCld            CollideParts;                                      // 0x361(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_239B[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLENBossTrtsBodyHitInfo>     HitInfoList;                                       // 0x368(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_239C[0x318];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLENBossTrtsBodyAttack01Actor* GetDefaultObj();

	bool SetCollide(enum class ETTLENBossTrts01AtkCldState NewState, bool ValueA, float ValueB);
	bool Initialize(class ATTLENBossTrts01Character* Boss, enum class ETTLENBossTrts01AtkCld Parts);
};

// 0x110 (0x5D0 - 0x4C0)
// Class DXM.TTLENBossTrtsCover01Pawn
class ATTLENBossTrtsCover01Pawn : public ATTLArmorPawn
{
public:
	uint8                                        Pad_239E[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLENBossTrts01Character*             OwnerBoss;                                         // 0x4D0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLENBossTrts01Armor             Parts;                                             // 0x4D8(0x1)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_239F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           Destroy_ExplosionEffectResource;                   // 0x4E0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  Destroy_ReferenceSocketName;                       // 0x578(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          Destroy_ColorParam1;                               // 0x580(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          Destroy_ColorParam2;                               // 0x590(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Destroy_AttachSocketName;                          // 0x5A0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23A0[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLENBossTrtsCover01Pawn* GetDefaultObj();

	void Initialize();
	bool Destroy_SetEffect(int32 Type);
};

// 0x10 (0x38 - 0x28)
// Class DXM.TTLBaseWyveStateMachineObject
class UTTLBaseWyveStateMachineObject : public UTTLClassStateMachineObject
{
public:
	uint8                                        Pad_23A1[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBaseWyveStateMachineObject* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class DXM.TTLCoopWyveStateMachineObject
class UTTLCoopWyveStateMachineObject : public UTTLBaseWyveStateMachineObject
{
public:

	static class UClass* StaticClass();
	static class UTTLCoopWyveStateMachineObject* GetDefaultObj();

};

// 0xAB0 (0x1270 - 0x7C0)
// Class DXM.TTLENBossTrtsLaser01Pawn
class ATTLENBossTrtsLaser01Pawn : public ATTLCharacter
{
public:
	uint8                                        Pad_23AD[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsUseCoopAttack;                                   // 0x7D0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_23AE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLCoopAttackContainer               CoopAttackInfo;                                    // 0x7D8(0x18)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FTTLClassStateMachineContainer        LaserHitStateMachine;                              // 0x7F0(0x18)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                         IsDrawDamage;                                      // 0x808(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23AF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLENBossTrts01Character*             OwnerBoss;                                         // 0x810(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBossWeakenedVFXComponent*          SelfWeakenedVFX;                                   // 0x818(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            WeaponDataTable;                                   // 0x820(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLENBossTrtsWeak01Pawn>  WeakPoint_Class;                                   // 0x828(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeakBoneName_FR;                                   // 0x830(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeakBoneName_FL;                                   // 0x838(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeakBoneName_MR;                                   // 0x840(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeakBoneName_ML;                                   // 0x848(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeakBoneName_BR;                                   // 0x850(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeakBoneName_BL;                                   // 0x858(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WeakHP_FR;                                         // 0x860(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WeakHP_FL;                                         // 0x864(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WeakHP_MR;                                         // 0x868(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WeakHP_ML;                                         // 0x86C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WeakHP_BR;                                         // 0x870(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WeakHP_BL;                                         // 0x874(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLENBossTrtsWeak01Pawn*              Weak_FR;                                           // 0x878(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLENBossTrtsWeak01Pawn*              Weak_FL;                                           // 0x880(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLENBossTrtsWeak01Pawn*              Weak_MR;                                           // 0x888(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLENBossTrtsWeak01Pawn*              Weak_ML;                                           // 0x890(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLENBossTrtsWeak01Pawn*              Weak_BR;                                           // 0x898(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLENBossTrtsWeak01Pawn*              Weak_BL;                                           // 0x8A0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HeadBoneName;                                      // 0x8A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BarrelBoneName;                                    // 0x8B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MuzzleSocketName;                                  // 0x8B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HomingSpeed;                                       // 0x8C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             PitchRange;                                        // 0x8C4(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             YawRange;                                          // 0x8CC(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23B0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           ExtraThickLaser_ChargeEffectResource;              // 0x8D8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           ExtraThickLaser_NoticeEffectResource;              // 0x970(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           ExtraThickLaser_NoticeTopEffectResource;           // 0xA08(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           ExtraThickLaser_ShotEffectResource;                // 0xAA0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           ExtraThickLaser_MuzzleEffectResource;              // 0xB38(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           ExtraThickLaser_LaserEffectResource;               // 0xBD0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           ExtraThickLaser_HitEffectResource;                 // 0xC68(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           ExtraThickLaser_PlayerHitEffectResource;           // 0xD00(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        ExtraThickLaser_PlayHitIntervalTime;               // 0xD98(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExtraThickLaser_PlayHitEffectScale;                // 0xD9C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        ExtraThickLaser_ChargeEffect;                      // 0xDA0(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        ExtraThickLaser_NoticeEffect;                      // 0xDB8(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        ExtraThickLaser_NoticeTopEffect;                   // 0xDD0(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        ExtraThickLaser_LaserEffect;                       // 0xDE8(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        ExtraThickLaser_HitEffect;                         // 0xE00(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FTTLENBossTrtsLaserExtraThickLaserHitInfo> ExtraThickLaser_HitInfoList;                       // 0xE18(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        DropOut_Length;                                    // 0xE28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DropOut_Height;                                    // 0xE2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DropOut_AirTime;                                   // 0xE30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DropOut_YawBiasRange;                              // 0xE34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           DropOut_BreakEffectResource;                       // 0xE38(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           DropOut_BoundEffectResource;                       // 0xED0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           DropOut_LandingEffectResource;                     // 0xF68(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        DropOut_BreakEffect;                               // 0x1000(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class ATTLWarningArea*>               WarningArea_List;                                  // 0x1018(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                  PlayerUseLaser_ParamID;                            // 0x1028(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerUseLaser_Range;                              // 0x1030(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerUseLaser_Radius;                             // 0x1034(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerUseLaser_NoticeStartTime;                    // 0x1038(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerUseLaser_ChargeTime;                         // 0x103C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerUseLaser_ShootEffectTime;                    // 0x1040(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerUseLaser_StartTime;                          // 0x1044(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerUseLaser_IrradiationTime;                    // 0x1048(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerUseLaser_EndTime;                            // 0x104C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerUseLaser_FinishTime;                         // 0x1050(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerUseLaser_PushOutSpeed;                       // 0x1054(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Destroyed_DestroyEffectResource;                   // 0x1058(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Destroyed_DestroyEffect;                           // 0x10F0(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                         Initialize_DropOut;                                // 0x1108(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         State_IsBroken;                                    // 0x1109(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23B1[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLFxPlayback>                OneshotEffectList;                                 // 0x1110(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_23B2[0x58];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponent*                SelfMesh;                                          // 0x1178(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCapsuleComponent*                     SelfCapsule;                                       // 0x1180(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23B3[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLAIActENBossTrtsLaser01Comp*        SelfAIActComp;                                     // 0x11A0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLCptWpnENBossTrtsLaser01Comp*       SelfCptWpnComp;                                    // 0x11A8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCharacterMovementComponent*           SelfChrMov;                                        // 0x11B0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBaseBossTrtsLaserMovementComp*     SelfMovement;                                      // 0x11B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLEnemyPushCollideComponent*         SelfPushCollide;                                   // 0x11C0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBasicStatusComponent*              SelfStatus;                                        // 0x11C8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23B4[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLDamageParameterComponent*          Laser_DamageParam;                                 // 0x11D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23B5[0x80];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsTransInterpolation;                              // 0x1260(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23B6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TransInterpolateTime;                              // 0x1264(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23B7[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLENBossTrtsLaser01Pawn* GetDefaultObj();

	void WeakPoint_Destroy(bool IsExplosion);
	void WeakPoint_CreateAll();
	class ATTLENBossTrtsWeak01Pawn* WeakPoint_Create(class FName InSocketName, enum class ETTLENBossTrts01Weak WeakType);
	bool StartDropOut(const struct FVector& Point, float YawBias);
	void SetWeakPointState(enum class ETTLENBossTrtsWeak01State State, float Time);
	void SetLookAtLocation(const struct FVector& Location);
	void SetLookAtAlpha(float Alpha);
	bool PlayerUse_Start(float SpeedRate);
	bool PlayerUse_SetCaptureSpeedRate(float SpeedRate);
	bool PlayerUse_End();
	bool NormalIdle_Start();
	bool IsWeakPointAlive(enum class ETTLENBossTrts01Weak WeakNo);
	void Initialize();
	struct FTransform GetMuzzleSocketTransform();
	struct FRotator GetMuzzleSocketRotation();
	struct FVector GetMuzzleSocketLocation();
	struct FVector GetLookAtLocation();
	float GetLookAtAlpha();
	struct FTransform GetBarrelSocketTransform();
	struct FRotator GetBarrelSocketRotation();
	struct FVector GetBarrelSocketLocation();
	bool FindDropOutPoint(struct FVector* OutPoint, float* OutYawBias);
	bool ExtraThickLaser_SetEffect(enum class ETTLBossTrtsLaserExtraThickLaserEffect Type, float Length, float Radius);
	void ExtraThickLaser_SetAttackCollide(float Length, float Radius, float DeltaSeconds, float PushOutSpeed);
	bool EndDropOut();
	bool DropOut_Start();
	bool DropOut_SetEffect(int32 Type, bool Enable);
	bool DropOut_Landing();
	bool DropOut_Idle();
	bool Destroyed_SetEffect(int32 No, bool ValueA);
	void BoneControl(class AActor* Target, float DeltaSeconds);
};

// 0x50 (0x390 - 0x340)
// Class DXM.TTLENBossTrtsLegAttack01Actor
class ATTLENBossTrtsLegAttack01Actor : public ATTLCollideActor
{
public:
	class ATTLENBossTrts01Character*             OwnerBoss;                                         // 0x340(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCapsuleComponent*                     OwnerCapsule;                                      // 0x348(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            DataTable;                                         // 0x350(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLENBossTrts01AtkCldState       CollideState;                                      // 0x358(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLENBossTrts01AtkCld            CollideParts;                                      // 0x359(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23BB[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        HitActorList;                                      // 0x360(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_23BC[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLENBossTrtsLegAttack01Actor* GetDefaultObj();

	bool SetCollide(enum class ETTLENBossTrts01AtkCldState NewState, bool ValueA, float ValueB);
	bool Initialize(class ATTLENBossTrts01Character* Boss, enum class ETTLENBossTrts01AtkCld Parts);
};

// 0x10 (0x370 - 0x360)
// Class DXM.TTLENBossTrtsMissile01Anim
class UTTLENBossTrtsMissile01Anim : public UTTLAnimInstance
{
public:
	class ATTLENBossTrtsMissile01Pawn*           SelfPawn;                                          // 0x360(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLENBossTrtsMissileState        CurrentState;                                      // 0x368(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLENBossTrtsMissileState        RequestState;                                      // 0x369(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23BD[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLENBossTrtsMissile01Anim* GetDefaultObj();

	bool ToShoot();
	bool ToIdle();
	bool StartDead();
	bool SetIdle();
	bool SetDead();
	void Process(float DeltaSeconds);
	bool IsShoot();
	bool IsIdle();
	bool IsDead();
};

// 0x270 (0x730 - 0x4C0)
// Class DXM.TTLENBossTrtsMissile01Pawn
class ATTLENBossTrtsMissile01Pawn : public ATTLPawn
{
public:
	class ATTLENBossTrts01Character*             OwnerBoss;                                         // 0x4C0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                SelfMesh;                                          // 0x4C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLENBossTrtsMissile01Anim*           SelfAnimInst;                                      // 0x4D0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLAIActENBossTrtsMissile01Comp*      SelfAIAct;                                         // 0x4D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBasicStatusComponent*              SelfStatus;                                        // 0x4E0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLEnemyPushCollideComponent*         SelfPushCollide;                                   // 0x4E8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23BF[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          Animation_Montage;                                 // 0x510(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Animation_IdleSectionName;                         // 0x518(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Animation_ShootSectionName;                        // 0x520(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Animation_DeadSectionName;                         // 0x528(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Animation_StartShootSectionName;                   // 0x530(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Animation_StartIdleSectionName;                    // 0x538(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Animation_StartDeadSectionName;                    // 0x540(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          ShootMissile_MuzzleSocketName;                     // 0x548(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                  ShootMissile_ParameterName;                        // 0x558(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLStandardMissile>       ShootMissile_MissileClass;                         // 0x560(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           ShootMissile_MuzzleEffect;                         // 0x568(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        ShootMissile_BeforeWaitTime;                       // 0x600(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ShootMissile_ShootNum;                             // 0x604(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootMissile_IntervalTime;                         // 0x608(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootMissile_AfterWaitTime;                        // 0x60C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLLongRangeWeaponParameter*          ShootMissile_WeaponParameter;                      // 0x610(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          ShootMissile_DamageParameter;                      // 0x618(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23C0[0x110];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLENBossTrtsMissile01Pawn* GetDefaultObj();

	bool StartDead();
	bool ShootMissile_Start();
	bool ShootMissile_Shoot(class AActor* TargetActor, int32 MuzzleIndex);
	bool ShootMissile_IsShootingPosition();
	bool ShootMissile_End();
	bool SetDead();
	void Initialize();
	bool Idle_Start();
	bool Idle_InAction();
	bool Dead_Start();
	bool Dead_Set();
	bool Dead_InAction();
};

// 0x228 (0x568 - 0x340)
// Class DXM.TTLENBossTrtsWeak01Pawn
class ATTLENBossTrtsWeak01Pawn : public ATTLActor
{
public:
	uint8                                        Pad_23C4[0x11];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ETTLENBossTrts01Weak              SpawnWeakType;                                     // 0x351(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23C5[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLBasicStatusComponent*              SelfStatus;                                        // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLENBossTrtsWeak01Mode          DamageMode;                                        // 0x360(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLENBossTrtsWeak01Mode          DelayDamageMode;                                   // 0x361(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLENBossTrtsWeak01Mode          LockonMode;                                        // 0x362(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLENBossTrtsWeak01State         State;                                             // 0x363(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Timer;                                             // 0x364(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DelayTimer;                                        // 0x368(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DelayDamageModeTimer;                              // 0x36C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           OpenEffectResource;                                // 0x370(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Destroy_DamageEffectResource;                      // 0x408(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           Destroy_ExplosionEffectResource;                   // 0x4A0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  Destroy_ReferenceSocketName;                       // 0x538(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Destroy_AttachSocketName;                          // 0x540(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        WeakPointIndex;                                    // 0x548(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23C6[0x1C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLENBossTrtsWeak01Pawn* GetDefaultObj();

	void StartOpen(float OpenTime, float DelayTime);
	void StartClose();
	void StartBreak();
	void SetState(enum class ETTLENBossTrtsWeak01State State, float OpenTime, float DelayTime);
	void SetSharingDamageActor(class AActor* Actor);
	void SetOpen(float OpenTime);
	void SetLockonMode(enum class ETTLENBossTrtsWeak01Mode Mode);
	void SetHP(float Hp);
	void SetDamageMode(enum class ETTLENBossTrtsWeak01Mode Mode, float DelayTime);
	void SetClose();
	void OnStatusDead_Delegate();
	bool IsAlive();
	bool Destroy_SetEffect(int32 Type);
};

// 0x50 (0x140 - 0xF0)
// Class DXM.TTLEnemyPushCollideComponent
class UTTLEnemyPushCollideComponent : public UActorComponent
{
public:
	class AActor*                                OwnerActor;                                        // 0xF0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23C7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class APlayerController*                     LocalPlayer_Controller;                            // 0x100(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23C8[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLPushCollideInfo>           PushCollide_List;                                  // 0x110(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                         PushCollide_IsUpdateComponentTransform;            // 0x120(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23C9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        OtherActor_List;                                   // 0x128(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         OtherActor_OnlyNearest;                            // 0x138(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23CA[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLEnemyPushCollideComponent* GetDefaultObj();

};

// 0x18 (0xEC0 - 0xEA8)
// Class DXM.TTLEnemyWeaponBase
class ATTLEnemyWeaponBase : public ATTLLongRangeWeapon
{
public:
	bool                                         Initialized;                                       // 0xEA8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23CC[0x17];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLEnemyWeaponBase* GetDefaultObj();

	class ATTLEnemyWeaponBase* Spawn(class APawn* InstigatorPawn, TSubclassOf<class ATTLEnemyWeaponBase> EnemyWeaponClass, class FName EnemyWeaponID, TSubclassOf<class AActor> EnemyBulletClass, enum class ETTLWeaponType EnemyWeaponType);
};

// 0x330 (0x1110 - 0xDE0)
// Class DXM.TTLENFeryNrml01Pawn
class ATTLENFeryNrml01Pawn : public ATTLENFeryBasePawn
{
public:
	float                                        WreckFallSpeed;                                    // 0xDE0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23CE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           WreckVFX;                                          // 0xDE8(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           WreckExpLVFX;                                      // 0xE80(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           WreckExpSVFX;                                      // 0xF18(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           WreckSmokeVFX;                                     // 0xFB0(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLTransportAirplane                 TransportFuncs;                                    // 0x1048(0x68)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UTTLTargetObjComponent*                TargetObjComponent;                                // 0x10B0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23CF[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLENFeryNrml01Pawn* GetDefaultObj();

	void WreckDestroy();
	void Wreck();
	void StartMoveGoStraight(bool IsNodamage, bool IsThruster);
	void StartMove(bool IsNodamage, bool IsThruster);
	void SetVelocityForSpline(float Velocity);
	void SetAccelerationForSpline(float Acceleration);
	void PlayVFXWreckExp();
	void OnWreckComponentHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void OnCalledByDead();
	bool IsFollowTheSpline();
	float GetVelocityForSpline();
	void AlignCannonTarget(class AActor* Target);
};

// 0x7D8 (0xC98 - 0x4C0)
// Class DXM.TTLFighterPawn
class ATTLFighterPawn : public ATTLPawn
{
public:
	class USkeletalMeshComponent*                SelfMesh;                                          // 0x4C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Velocity;                                          // 0x4C8(0xC)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableRollRotation;                                // 0x4D4(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23D2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RestoreRollDegree;                                 // 0x4D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RestoreRollRate;                                   // 0x4DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RollRate;                                          // 0x4E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RollMax;                                           // 0x4E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RightWeaponID;                                     // 0x4E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLEnemyLongRangeWeapon>  RightWeaponClass;                                  // 0x4F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLProjectileBase>        RightBulletClass;                                  // 0x4F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLWeaponType                    RightWeaponType;                                   // 0x500(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23D3[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                RightWeaponMeshName;                               // 0x508(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RightWeaponSocket;                                 // 0x518(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxRightWeapon;                                     // 0x520(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        RightWeaponForwardRangeDegree;                     // 0x5B8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         RightWeaponIsReverseForwardRangeDegree;            // 0x5BC(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23D4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RightWeaponRangeTop;                               // 0x5C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightWeaponRangeBottom;                            // 0x5C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LeftWeaponID;                                      // 0x5C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLEnemyLongRangeWeapon>  LeftWeaponClass;                                   // 0x5D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLProjectileBase>        LeftBulletClass;                                   // 0x5D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLWeaponType                    LeftWeaponType;                                    // 0x5E0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23D5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                LeftWeaponMeshName;                                // 0x5E8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LeftWeaponSocket;                                  // 0x5F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxLeftWeapon;                                      // 0x600(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        LeftWeaponForwardRangeDegree;                      // 0x698(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LeftWeaponIsReverseForwardRangeDegree;             // 0x69C(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23D6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LeftWeaponRangeTop;                                // 0x6A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftWeaponRangeBottom;                             // 0x6A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CenterWeaponId;                                    // 0x6A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLEnemyLongRangeWeapon>  CenterWeaponClass;                                 // 0x6B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLProjectileBase>        CenterBulletClass;                                 // 0x6B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLWeaponType                    CenterWeaponType;                                  // 0x6C0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23D7[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                CenterWeaponMeshName;                              // 0x6C8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CenterWeaponSocket;                                // 0x6D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxCenterWeapon;                                    // 0x6E0(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        CenterWeaponPinpointRadius;                        // 0x778(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CenterWeaponRandomCmX;                             // 0x77C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CenterWeaponRandomCmY;                             // 0x780(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CenterWeaponContinueShootMax;                      // 0x784(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxWing;                                            // 0x788(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        FxLeftWingPlaybacks;                               // 0x820(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        FxRightWingPlaybacks;                              // 0x838(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UParticleSystem*                       VFXThruster;                                       // 0x850(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxAfterburner;                                     // 0x858(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  SocketWingLeft;                                    // 0x8F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SocketWingRight;                                   // 0x8F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SocketThruster1;                                   // 0x900(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SocketThruster2;                                   // 0x908(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SocketThruster3;                                   // 0x910(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SocketThruster4;                                   // 0x918(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SocketThruster5;                                   // 0x920(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SocketThruster6;                                   // 0x928(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SocketAfterburner;                                 // 0x930(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxTurn;                                            // 0x938(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  SocketTurn;                                        // 0x9D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           ChaceHitVFX;                                       // 0x9D8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UParticleSystem*                       WreckVFXAsset;                                     // 0xA70(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WreckVFXSocketName1;                               // 0xA78(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WreckVFXSocketName2;                               // 0xA80(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GravityScaleOnWreck;                               // 0xA88(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RollMaxSpeedOnWreck;                               // 0xA8C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RollAccelerationOnWreck;                           // 0xA90(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23D8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ATTLExplosionActor>        ExplosionClass;                                    // 0xA98(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeDamage;                                     // 0xAA0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeKnockOut;                                   // 0xAA4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeKnockBack;                                  // 0xAA8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeRadius;                                     // 0xAAC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeTime;                                       // 0xAB0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeTmpRise;                                    // 0xAB4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeMinDamage;                                  // 0xAB8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxExplodeDamageRadius;                            // 0xABC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ExplodeFriendlyFireEnable;                         // 0xAC0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23D9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ExplodeParamName;                                  // 0xAC8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetDamageOnTouch;                               // 0xAD0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MyDamageOnTouch;                                   // 0xAD4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KnockOutOnTouch;                                   // 0xAD8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KnockBackOnTouch;                                  // 0xADC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMPRiseOnTouch;                                    // 0xAE0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23DA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimationAsset*                       AnimationHatchOpen;                                // 0xAE8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimationAsset*                       AnimationHatchClose;                               // 0xAF0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23DB[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponent*                RightWeaponMesh;                                   // 0xB00(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                LeftWeaponMesh;                                    // 0xB08(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                CenterWeaponMesh;                                  // 0xB10(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        FxPlaybackAfterburner;                             // 0xB18(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           FxWreck;                                           // 0xB30(0x98)(ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        FxPlaybackWreck1;                                  // 0xBC8(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        FxPlaybackWreck2;                                  // 0xBE0(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class ATTLEnemyLongRangeWeapon*              RightEnemyWeapon;                                  // 0xBF8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATTLEnemyLongRangeWeapon*              LeftEnemyWeapon;                                   // 0xC00(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATTLEnemyLongRangeWeapon*              CenterEnemyWeapon;                                 // 0xC08(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*              ParticleThruster1;                                 // 0xC10(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*              ParticleThruster2;                                 // 0xC18(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*              ParticleThruster3;                                 // 0xC20(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*              ParticleThruster4;                                 // 0xC28(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*              ParticleThruster5;                                 // 0xC30(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*              ParticleThruster6;                                 // 0xC38(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_23DC[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLFighterPawn* GetDefaultObj();

	void Wreck_BP();
	void Wreck();
	void SpawnChaceHitVFX(class AActor* Actor);
	void ShootCenter(const struct FVector& TargetPos);
	void ShootBothSide(const struct FVector& TargetPos);
	void SetWingFx(bool IsEnable);
	void PlayTurnVFX();
	void OpenHatch();
	void OnTakeAnyDamageDelegate(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void OnStatusDead();
	void OnOverlapMain(class AActor* OtherActor);
	void OnCaughtByDelegate(class AActor* NewOwner);
	void OnActorHitDelegate(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void OnActorBeginOverlapDelegate(class AActor* OverlappedActor, class AActor* OtherActor);
	void ManualRotation(const struct FVector& NewDirection);
	void ManualMove(const struct FVector& MoveVelocity);
	bool IsWrecked();
	bool IsInsideSafeArea();
	void Initialize();
	void Explode();
	void CloseHatch();
};

// 0x1B8 (0xE50 - 0xC98)
// Class DXM.TTLENFightStelPawn
class ATTLENFightStelPawn : public ATTLFighterPawn
{
public:
	class UTTLAIActionHFightStelComponent*       AIActionHFightStelComponent;                       // 0xC98(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MissileWeaponID;                                   // 0xCA0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                MissileBulletClass;                                // 0xCA8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                MissileWeaponMeshName;                             // 0xCB0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MissileWeaponSocket;                               // 0xCC0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxMissileWeapon;                                   // 0xCC8(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        MissileShootIntervalSeconds;                       // 0xD60(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MissileShootCountPerSet;                           // 0xD64(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MissileSetIntervalSeconds;                         // 0xD68(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DropUseOnChase;                                    // 0xD6C(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23DD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  DropWeaponID;                                      // 0xD70(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                DropBulletClass;                                   // 0xD78(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLEnemyLongRangeWeapon>  DropWeaponClass;                                   // 0xD80(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLWeaponType                    DropWeaponType;                                    // 0xD88(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23DE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                DropWeaponMeshName;                                // 0xD90(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DropWeaponSocket;                                  // 0xDA0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DropShootCountPerSet;                              // 0xDA8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DropSetSeconds;                                    // 0xDAC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DropWeaponRandomCmX;                               // 0xDB0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DropWeaponRandomCmY;                               // 0xDB4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         PinpointUseOnChase;                                // 0xDB8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23DF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  PinpointWeaponID;                                  // 0xDC0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                PinpointBulletClass;                               // 0xDC8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLEnemyLongRangeWeapon>  PinpointWeaponClass;                               // 0xDD0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLWeaponType                    PinpointWeaponType;                                // 0xDD8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23E0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                PinpointWeaponMeshName;                            // 0xDE0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PinpointWeaponSocket;                              // 0xDF0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PinpointWeaponPinpointRadius;                      // 0xDF8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PinpointWeaponRandomCmX;                           // 0xDFC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PinpointWeaponRandomCmY;                           // 0xE00(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PinpointWeaponContinueShootMax;                    // 0xE04(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23E1[0x48];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLENFightStelPawn* GetDefaultObj();

	void ShootPinpoint(const struct FVector& TargetPos);
	void ShootMissile(class AActor* TargetActor);
	void ShootDrop();
	void SetIsChacing(bool NewChacing);
	void ResetPinpointParams();
	void ResetMissileParams();
	void ResetDropParams();
};

// 0x8 (0x338 - 0x330)
// Class DXM.TTLEventLevelScriptActor
class ATTLEventLevelScriptActor : public ALevelScriptActor
{
public:
	class ATTLMoviePlayer*                       MoviePlayerRef;                                    // 0x330(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ATTLEventLevelScriptActor* GetDefaultObj();

	void UnpauseEvent();
	void StopSequencerMessage();
	void StartSequencerWidget(TSoftClassPtr<class UUserWidget> WidgetClass, int32 ZOrder, class FName InAnimationName, class FName LoopAnimationName);
	void StartSequencerMovieByMovieAssetPtr(const struct FTTLEventMoviePlayerInitialzieAssetInfo& Info);
	void StartSequencerMovieByMovieAssetName(const struct FTTLEventMoviePlayerInitialzieNameInfo& Info);
	void StartSequencerMovieByClass(const struct FTTLEventMoviePlayerInitialzieClassInfo& Info);
	void StartSequencerMessage(class FName EventMessageParamName, bool IsLastMessage, class FName Select00JumpPositionId, class FName Select01JumpPositionId, class FName Select02JumpPositionId, class FName Select03JumpPositionId, class FName Select04JumpPositionId);
	void SetSequencerThunderSky(bool IsStopScreenEffect, class FName PostProcessName, class FName MainLightName);
	void SetSequencerPhysicsEnable(bool IsEnable);
	void SetSequencerJumpPositionID(class FName JumpPositionId);
	void SetSequencerEnvironmental(bool IsGameLightingHidden, bool IsGameFogHidden, bool IsGamePostProcessHidden, bool IsGameBoxReflectionCaptureHidden, bool IsBackgroundShadowColorSet, const struct FLinearColor& BackgroundShadowColor, bool IsArsenalShadowColorSet, const struct FLinearColor& ArsenalShadowColor, bool IsHumanShadowColorSet, const struct FLinearColor& HumanShadowColor, bool IsEnemyShadowColorSet, const struct FLinearColor& EnemyShadowColor, bool IsGameFarBgHidden);
	void SetSequencerBaseCamp(bool IsLaboDoorHidden, bool IsIceDoorHidden, bool IsStopScanAnim);
	void SetSequencerActorHidden(class FName ActorTag, bool IsHidden);
	void RegistSequencerEndChangeBGM(class FName SoundCuePath, float FadeInTime, float FadeOutTime);
	void PreloadEvent(class FName EventName);
	void PlaySequencerCharacterAnimation(class FName CharacterName1, class FName PlayAnimationPath1, class FName CharacterName2, class FName PlayAnimationPath2, class FName CharacterName3, class FName PlayAnimationPath3, class FName CharacterName4, class FName PlayAnimationPath4, class FName CharacterName5, class FName PlayAnimationPath5, class FName CharacterName6, class FName PlayAnimationPath6);
	void PlayEvent(class FName EventName, const struct FTransform& LevelTransform, TArray<struct FTTLBindingActor>& BindingActors, TArray<struct FTTLEventBranchParam>& BranchParams, const struct FLatentActionInfo& LatentInfo, bool IsFadeInAtEnd, float CameraBlendTimeAtEnd, bool IsReturnPlayerTransform);
	void PauseEvent();
	void OnEventMapStartedBP();
	void OnEventMapStarted();
	void OnEndMovieBySkipOrDemoEnd(class FName EventName, enum class ETTLEventFinishedType EventFinishedType);
	void OnEndMovie();
	void NextSequencerMessage();
	void JumpSequencerPosition(class FName JumpPositionId);
	void JumpSequencerBranchPosition(class FName BranchName, class FName JumpPositionId00, class FName JumpPositionId01, class FName JumpPositionId02, class FName JumpPositionId03, class FName JumpPositionId04);
	int32 GetEventMessageSelectIndex();
	void EndSequencerWidget(TSoftClassPtr<class UUserWidget> WidgetClass, class FName OutAnimationName, bool IsReverse);
	void EndSequencerMessage();
	void EndSequencer();
	void ChangeSequencerBGM(class FName SoundCuePath, float FadeInTime, float FadeOutTime);
	void CallSequencerEvaluationScreenStarted();
	void CallEventMapFinished();
};

// 0x318 (0x340 - 0x28)
// Class DXM.TTLEventManager
class UTTLEventManager : public UObject
{
public:
	uint8                                        Pad_241A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ULevelSequence*>                LevelSequenceList;                                 // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UDataTable*>                    EventDataTableList;                                // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UDataTable*>                    MessageDataTableList;                              // 0x50(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UDataTable*>                    SpeakerNameDataTableList;                          // 0x60(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UDataTable*>                    MissionBriefingDataTableList;                      // 0x70(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UDataTable*>                    TalkDemoDataTableList;                             // 0x80(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FTTLEvManEventSetting                 CurrentEventSetting;                               // 0x90(0xB0)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FTTLEvManEventSetting                 PreCheckEventSetting;                              // 0x140(0xB0)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class ULevelSequence*                        CurrentLevelSequence;                              // 0x1F0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CurrentLoadLevelName;                              // 0x1F8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULevelSequencePlayer*                  SequencePlayer;                                    // 0x200(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTTLEvManSequenceActorInfo>    SequenceActorInfo;                                 // 0x208(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UCurveTable*                           VoiceCurveTable;                                   // 0x218(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_241B[0x120];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLEventManager* GetDefaultObj();

	void WaitMessageEnd(class UObject* WorldContextObject);
	void WaitAllEventsFinished(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo);
	void UpdateThunderSkyActors(class UObject* WorldContextObject, class FName PostProcessName, class FName MainLightName);
	void Update(class UObject* WorldContextObject, float Delta);
	void UnpauseEvent(class UObject* WorldContextObject);
	void UnloadTalkDemoDataTable(class UObject* WorldContextObject, const class FString& Path);
	void UnloadSpeakerNameDataTable(class UObject* WorldContextObject, const class FString& Path);
	void UnloadMissionBriefingDataTable(class UObject* WorldContextObject, const class FString& Path);
	void UnloadMessageDataTable(class UObject* WorldContextObject, const class FString& Path);
	void UnloadLevelSequenceByEventName(class UObject* WorldContextObject, class FName EventName);
	void UnloadLevelSequence(class UObject* WorldContextObject, const class FString& Path);
	void UnloadEventDataTable(class UObject* WorldContextObject, const class FString& Path);
	void StartMessage(class UObject* WorldContextObject, class FName EventMessageParamName, bool IsLastMessage, TArray<class FName>* JumpPositionIdList);
	void StartEventWidget(class UObject* WorldContextObject, TSoftClassPtr<class UUserWidget> WidgetClass, int32 ZOrder, class FName InAnimationName, class FName LoopAnimationName);
	bool StartEvent(class UObject* WorldContextObject, class FName EventName, const struct FTransform& LevelTransform, TArray<struct FTTLBindingActor>& BindingActors, TArray<struct FTTLEventBranchParam>& BranchParams, bool IsFadeInAtEnd, float CameraBlendTimeAtEnd, bool IsReturnPlayerTransform);
	bool StartCommunicationEvent(class UObject* WorldContextObject, class FName EventName, class FName MessageID, float Priority, const struct FTransform& LevelTransform, TArray<struct FTTLBindingActor>& BindingActors, bool IsFadeInAtEnd, float CameraBlendTimeAtEnd, bool IsReturnPlayerTransform, bool IsNotDestructRequest);
	void SkipEvent(class UObject* WorldContextObject, enum class ETTLEventFinishedType FinishedType);
	void SetStopThunderScreenEffect(class UObject* WorldContextObject, bool IsStop);
	void SetStopBaseCampScanAnimation(class UObject* WorldContextObject, bool IsStop);
	void SetShadowColor(class UObject* WorldContextObject, class FName EventName, const struct FLinearColor& BackgroundShadowColor, const struct FLinearColor& ArsenalShadowColor, const struct FLinearColor& HumanShadowColor, const struct FLinearColor& EnemyShadowColor);
	void SetPVMode(class UObject* WorldContextObject, bool IsEnable);
	void SetPostProcessVisible(class UObject* WorldContextObject, class FName EventName, bool IsVisible);
	void SetLightingVisible(class UObject* WorldContextObject, class FName EventName, bool IsVisible);
	void SetLaboDoorVisible(class UObject* WorldContextObject, class FName EventName, bool IsVisible);
	void SetIceDoorVisible(class UObject* WorldContextObject, class FName EventName, bool IsVisible);
	void SetFogVisible(class UObject* WorldContextObject, class FName EventName, bool IsVisible);
	void SetFarBgVisible(class UObject* WorldContextObject, class FName EventName, bool IsVisible);
	void SetEventPhysicsEnable(class UObject* WorldContextObject, bool IsEnable);
	void SetDisplayPlaybackPosition(class UObject* WorldContextObject, bool IsDisplay);
	void SetBoxReflectionCaptureVisible(class UObject* WorldContextObject, class FName EventName, bool IsVisible);
	void SetActorTagVisible(class UObject* WorldContextObject, class FName EventName, class FName TagName, bool IsVisible);
	bool ResetLevelEventActor(class UObject* WorldContextObject);
	void Reset(class UObject* WorldContextObject);
	void RegistEndChangeBGM(class UObject* WorldContextObject, class FName EventName, class FName SoundCuePath, float FadeInTime, float FadeOutTime);
	void PreloadEventLevel(class UObject* WorldContextObject, class FName EventName);
	void PlayEventCharacterAnimation(class UObject* WorldContextObject, class FName CharacterName, class FName PlayAnimationPath);
	void PauseEvent(class UObject* WorldContextObject);
	void OnCameraCut(class UCameraComponent* CameraComponent);
	void NextMessage(class UObject* WorldContextObject);
	void MessageEndCallback(class UObject* WorldContextObject);
	void ManualEndCallbackFromSequencer(class UObject* WorldContextObject);
	void ManualEndCallback(class UObject* WorldContextObject, enum class ETTLEventFinishedType FinishedType);
	class UDataTable* LoadTalkDemoDataTable(class UObject* WorldContextObject, const class FString& Path);
	class UDataTable* LoadSpeakerNameDataTable(class UObject* WorldContextObject, const class FString& Path);
	class UDataTable* LoadMissionBriefingDataTable(class UObject* WorldContextObject, const class FString& Path);
	class UDataTable* LoadMessageDataTable(class UObject* WorldContextObject, const class FString& Path);
	class ULevelSequence* LoadLevelSequenceByEventName(class UObject* WorldContextObject, class FName EventName);
	class ULevelSequence* LoadLevelSequence(class UObject* WorldContextObject, const class FString& Path);
	void LoadLevelCallback_();
	class UDataTable* LoadEventDataTable(class UObject* WorldContextObject, const class FString& Path);
	void JumpPosition(class UObject* WorldContextObject, class FName JumpPositionId);
	void JumpBranchPosition(class UObject* WorldContextObject, class FName BranchName, TArray<class FName>* JumpPositionIdList);
	bool IsStopedThunderScreenEffect(class UObject* WorldContextObject);
	bool IsStopedSequencer(class UObject* WorldContextObject);
	bool IsStopedBaseCampScanAnimation(class UObject* WorldContextObject);
	bool IsPVMode(class UObject* WorldContextObject);
	bool IsFinishedAllEvents(class UObject* WorldContextObject);
	bool IsEventSkipping(class UObject* WorldContextObject);
	bool IsDisplayPlaybackPosition(class UObject* WorldContextObject);
	bool GetPreCheckEventParamName(class UObject* WorldContextObject, class FName* OutName);
	bool GetPreCheckEventParam(class UObject* WorldContextObject, struct FTTLEventParamRow* OutParam);
	enum class ETTLEventType GetPlayingEventType(class UObject* WorldContextObject);
	int32 GetMessageSelectIndex(class UObject* WorldContextObject);
	class ULevelSequencePlayer* GetLevelSequencePlayer(class UObject* WorldContextObject);
	bool GetCurrentEventParamName(class UObject* WorldContextObject, class FName* OutName);
	bool GetCurrentEventParam(class UObject* WorldContextObject, struct FTTLEventParamRow* OutParam);
	bool FindTalkDemoParam(class UObject* WorldContextObject, class FName Name, struct FTTLTalkDemoParamRow* OutParam);
	bool FindSpeakerName(class UObject* WorldContextObject, class FName Name, struct FTTLSpeakerNameParamRow* OutParam);
	bool FindMissionBriefingParam(class UObject* WorldContextObject, class FName Name, struct FTTLMissionBriefingParamRow* OutParam);
	bool FindMessageParam(class UObject* WorldContextObject, class FName Name, struct FTTLEventMessageParamRow* OutParam);
	void EndMessage(class UObject* WorldContextObject);
	void EndEventWidget(class UObject* WorldContextObject, TSoftClassPtr<class UUserWidget> WidgetClass, class FName OutAnimationName, bool IsReverse);
	void EndEvent(class UObject* WorldContextObject);
};

// 0x0 (0x88 - 0x88)
// Class DXM.TTLEventParam
class UTTLEventParam : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UTTLEventParam* GetDefaultObj();

};

// 0xF8 (0x1E8 - 0xF0)
// Class DXM.TTLEventSequencerComponent
class UTTLEventSequencerComponent : public UActorComponent
{
public:
	uint8                                        Pad_241C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsMovableAction;                                   // 0xF8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEPartsMovableType             MovableActionType;                                 // 0xF9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_241D[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MovableActionPosition;                             // 0xFC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_241E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ForcedLodModel;                                    // 0x104(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_241F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         WeaponHiddenLeftWeapon;                            // 0x10C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         WeaponHiddenRightWeapon;                           // 0x10D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         WeaponHiddenShoulderWeapon;                        // 0x10E(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         WeaponHiddenSupportWeapon;                         // 0x10F(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         WeaponHiddenLeftWeaponRack;                        // 0x110(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         WeaponHiddenRightWeaponRack;                       // 0x111(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2420[0xD];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         VernierHidden;                                     // 0x11F(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2421[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                AnimationLoopPath;                                 // 0x128(0x10)(Edit, BlueprintVisible, ZeroConstructor, Interp, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                AnimationOneShotPath;                              // 0x138(0x10)(Edit, BlueprintVisible, ZeroConstructor, Interp, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2422[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ETTLEvSeqDestroyablePartsState    DestroyablePartsHead;                              // 0x178(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DestroyablePartsHeadEnableVFXs;                    // 0x179(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEvSeqDestroyablePartsState    DestroyablePartsChest;                             // 0x17A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DestroyablePartsChestEnableVFXs;                   // 0x17B(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEvSeqDestroyablePartsState    DestroyablePartsBack;                              // 0x17C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DestroyablePartsBackEnableVFXs;                    // 0x17D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEvSeqDestroyablePartsState    DestroyablePartsLeftArm;                           // 0x17E(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DestroyablePartsLeftArmEnableVFXs;                 // 0x17F(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEvSeqDestroyablePartsState    DestroyablePartsRightArm;                          // 0x180(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DestroyablePartsRightArmEnableVFXs;                // 0x181(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEvSeqDestroyablePartsState    DestroyablePartsLegs;                              // 0x182(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DestroyablePartsLegsEnableVFXs;                    // 0x183(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2423[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         EyeWinkStop;                                       // 0x198(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2424[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         LipSyncStop;                                       // 0x19A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LipSyncBlendEnable;                                // 0x19B(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LipSyncBlendWeight;                                // 0x19C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LipSyncPatternId;                                  // 0x1A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LipSyncPlayRateEnable;                             // 0x1A4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2425[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LipSyncPlayRate;                                   // 0x1A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2426[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SuitLineColorBlendRate;                            // 0x1B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          SuitLineColorBlendColor;                           // 0x1B4(0x10)(Edit, BlueprintVisible, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SuitLineGlowValue;                                 // 0x1C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2427[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         PhysicsDisable;                                    // 0x1E4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2428[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLEventSequencerComponent* GetDefaultObj();

};

// 0x30 (0x58 - 0x28)
// Class DXM.TTLProbeEffectEntity
class UTTLProbeEffectEntity : public UObject
{
public:
	uint8                                        Pad_2429[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLProbeEffectEntity* GetDefaultObj();

};

// 0x38 (0x360 - 0x328)
// Class DXM.TTLExplorationProbe
class ATTLExplorationProbe : public AActor
{
public:
	UMulticastDelegateProperty_                  OnEffectFinishToLevel;                             // 0x328(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class UParticleSystem*>               ParticleArray;                                     // 0x338(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UTTLProbeEffectEntity*>         EntityArray;                                       // 0x348(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_242A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLExplorationProbe* GetDefaultObj();

	void SpawnEffect(const struct FTTLProbeInitInfo& Info);
	void ForceStop();
};

// 0x98 (0xB90 - 0xAF8)
// Class DXM.TTLExplosionBullet
class ATTLExplosionBullet : public ATTLBulletBase
{
public:
	float                                        ExplodeDamage;                                     // 0xAF8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeTime;                                       // 0xAFC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeRadius;                                     // 0xB00(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMPRiseOnExplode;                                  // 0xB04(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeMinDamageScale;                             // 0xB08(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxExplodeDamageRadius;                            // 0xB0C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeAbnormalValue;                              // 0xB10(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplosionNearPlayerDistance;                       // 0xB14(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLExplosionActor>        ExplosionClass;                                    // 0xB18(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LifeTime;                                          // 0xB20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Hp;                                                // 0xB24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AutoExplode;                                       // 0xB28(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_242B[0x37];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLExplosionActor*                    PExplosionActor;                                   // 0xB60(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_242C[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLExplosionBullet* GetDefaultObj();

};

// 0x20 (0x48 - 0x28)
// Class DXM.TTLSwitchExternalSaveDataLoader
class UTTLSwitchExternalSaveDataLoader : public UObject
{
public:
	uint8                                        Pad_242D[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLSwitchExternalSaveDataLoader* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class DXM.TTLGenericExternalSaveDataLoader
class UTTLGenericExternalSaveDataLoader : public UObject
{
public:
	uint8                                        Pad_242E[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLGenericExternalSaveDataLoader* GetDefaultObj();

};

// 0x28 (0x50 - 0x28)
// Class DXM.TTLExternalSaveDataLoader
class UTTLExternalSaveDataLoader : public UObject
{
public:
	class UObject*                               ExternalSaveGameLoader;                            // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_242F[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLExternalSaveDataLoader* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class DXM.TTLExternalSaveDataLoaderInterface
class ITTLExternalSaveDataLoaderInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ITTLExternalSaveDataLoaderInterface* GetDefaultObj();

};

// 0x160 (0x790 - 0x630)
// Class DXM.TTLFactoryScene
class ATTLFactoryScene : public ATTLMenuSceneBase
{
public:
	enum class ETTLEFactorySceneState            FactorySceneState;                                 // 0x630(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETTLEFactoryScenePopupState       PopupState;                                        // 0x631(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2433[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLGameInstance*                      GameInstance;                                      // 0x638(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLPartsDevelopManager*               PartsDevelopManager;                               // 0x640(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           Widget_menu_u01;                                   // 0x648(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           Widget_hed_u00;                                    // 0x650(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           Widget_prt_u00;                                    // 0x658(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2434[0x120];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLNgAttachNoticeInfo>        NgAttach_Buffer;                                   // 0x780(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ATTLFactoryScene* GetDefaultObj();

	void UpdateHeader();
	class ATTLYesNoPopUp* SpawnPopup_YesNoBP();
	class ATTLOkPopUp* SpawnPopup_OkBP();
	class ATTLCommonPopup* SpawnPopup_CommonBP();
	void SetupTopMenu();
	void SetupSortMenu();
	void SetupPopup_YesNo();
	void SetupPopup_Ok();
	void SetupPopup_Common();
	void SetupHeader();
	void Popup_Yes_Selected();
	void Popup_Regulation_Decide();
	void Popup_Ok_Selected();
	void Popup_No_Selected();
	void Popup_Common_Decide();
	void Popup_Common_Cancel();
	void PlayAnimBP_SwitchCategory(enum class ETTLEFactorySceneState CurrentSceneState);
	void PlayAnimBP_SwitchAttachmentListCategory();
	void PlayAnimBP_StartPartsMenu(enum class ETTLEFactorySceneState NextSceneState);
	void PlayAnimBP_StartAttachFromAttachmentLIst();
	void PlayAnimBP_EndScene(int32 NewState);
	void PlayAnimBP_EndPartsMenu(bool IsEndScene);
	void OpenRegulationPopUp();
	void OpenPopUp(enum class ETTLEFactoryScenePopupState PopupReason, class FText PopupText, bool IsYesNo);
	void OpenCommonPopUp(enum class ETTLEFactoryScenePopupState PopupReason);
	bool IsNgAttachRoom();
	bool IsNgAttach(TArray<struct FTTLNgAttachNoticeInfo>* Ngattach);
	bool IsBattle();
	void DevelopSwitchCategory();
	void DevelopMenuStart(enum class ETTLEAssembleTopCategory Category);
	void DevelopMenuEnd(bool IsEndScene);
	void CreatePopUpText_NgAttachment();
	void ChangeFactorySceneState(enum class ETTLEFactorySceneState NewState);
	void AttachSwitchCategory();
	void AttachStart(enum class ETTLEAssembleTopCategory Category, bool IsFromAttachmentList);
	void AttachmentListSwitchCategory();
};

// 0x0 (0x28 - 0x28)
// Class DXM.TTLFemtoAbsorptionDefenceInterface
class ITTLFemtoAbsorptionDefenceInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ITTLFemtoAbsorptionDefenceInterface* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class DXM.TTLFemtoAbsorptionDefenseCore
class UTTLFemtoAbsorptionDefenseCore : public UObject
{
public:

	static class UClass* StaticClass();
	static class UTTLFemtoAbsorptionDefenseCore* GetDefaultObj();

};

// 0x18 (0x5D8 - 0x5C0)
// Class DXM.TTLSupportEmittingDeviceBase
class ATTLSupportEmittingDeviceBase : public ATTLSupportWeaponBase
{
public:
	uint8                                        Pad_2435[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLSupportEmittingDeviceBase* GetDefaultObj();

};

// 0x38 (0x610 - 0x5D8)
// Class DXM.TTLRapidCoolingDevice
class ATTLRapidCoolingDevice : public ATTLSupportEmittingDeviceBase
{
public:
	uint8                                        Pad_2436[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UMaterialInstanceDynamic*>      MaterialInstanceList;                              // 0x5E0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2437[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLRapidCoolingDevice* GetDefaultObj();

};

// 0x0 (0x610 - 0x610)
// Class DXM.TTLFemtoAbsorptionDevice
class ATTLFemtoAbsorptionDevice : public ATTLRapidCoolingDevice
{
public:

	static class UClass* StaticClass();
	static class ATTLFemtoAbsorptionDevice* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class DXM.TTLFemtoDamageType
class UTTLFemtoDamageType : public UDamageType
{
public:

	static class UClass* StaticClass();
	static class UTTLFemtoDamageType* GetDefaultObj();

};

// 0x650 (0xA88 - 0x438)
// Class DXM.TTLFemtoLaserBase
class ATTLFemtoLaserBase : public ATTLProjectileBase
{
public:
	float                                        LaserHitVFXScale;                                  // 0x438(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_243A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           LaserEffect;                                       // 0x440(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           LaserHitEffect;                                    // 0x4D8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           LaserHitShield;                                    // 0x570(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           LaserHitMetal;                                     // 0x608(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           LaserHitMetalPlayer;                               // 0x6A0(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           LaserHitWeaponShield;                              // 0x738(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           LaserHitRepelled;                                  // 0x7D0(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           LaserHitCritical;                                  // 0x868(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        LaserHitPlayBack;                                  // 0x900(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        LaserPlayBack;                                     // 0x918(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        Range;                                             // 0x930(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_243B[0x58];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               ColorVector;                                       // 0x98C(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LaserVFXScale;                                     // 0x998(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_243C[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HitRePlayDistance;                                 // 0x9AC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_243D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  LaserParamID;                                      // 0x9B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x9C0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_243E[0xA8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bUseLineTrance;                                    // 0xA78(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseOwnerStatusCache;                              // 0xA79(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_243F[0xE];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLFemtoLaserBase* GetDefaultObj();

	void SwingCheckProcess(const struct FVector& InStartLoc, const struct FVector& InEndLoc, class AActor* InIgnoreActor, float DeltaSeconds);
	void SetSwingCheck(bool Flag);
	bool IsCritical(float Distance);
};

// 0x0 (0x88 - 0x88)
// Class DXM.TTLFemtoLaserVisualParam
class UTTLFemtoLaserVisualParam : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UTTLFemtoLaserVisualParam* GetDefaultObj();

};

// 0x8 (0x348 - 0x340)
// Class DXM.TTLFemtoShiftShield
class ATTLFemtoShiftShield : public ATTLActor
{
public:
	uint8                                        Pad_2440[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLFemtoShiftShield* GetDefaultObj();

};

// 0x40 (0x368 - 0x328)
// Class DXM.TTLFemtoZone
class ATTLFemtoZone : public AActor
{
public:
	class USceneComponent*                       SceneRoot;                                         // 0x328(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  ZoneMesh;                                          // 0x330(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  AppearanceMesh;                                    // 0x338(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnabledFemtoZone;                                  // 0x340(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2443[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FemtoIncreasePerSecondInZone;                      // 0x344(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2444[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLFemtoAbsorptionDefenseCore*        FemtoAbsorptionDefenceCore;                        // 0x358(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsEnableFemtoAbsorptionDefence;                    // 0x360(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2445[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLFemtoZone* GetDefaultObj();

	void OnendOverLap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnBeginOverLap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x30 (0x148 - 0x118)
// Class DXM.TTLSyncMultiCannonComponent
class UTTLSyncMultiCannonComponent : public UTTLBaseMultiCannonComponent
{
public:
	int32                                        SyncBits;                                          // 0x118(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CannonShootTime;                                   // 0x11C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CannonShootInterval;                               // 0x120(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CannonRapidInterval;                               // 0x124(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2446[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLSyncMultiCannonComponent* GetDefaultObj();

	void ShootMultiCast(class AActor* Target);
};

// 0x28 (0x170 - 0x148)
// Class DXM.TTLFeryMultiCannonComponent
class UTTLFeryMultiCannonComponent : public UTTLSyncMultiCannonComponent
{
public:
	TSubclassOf<class ATTLBaseCannonPawn>        CenterCannonClass;                                 // 0x148(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  CenterCannonSocket;                                // 0x150(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ATTLBaseCannonPawn>        SideCannonClass;                                   // 0x158(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class FName>                          SideCannonSockets;                                 // 0x160(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTTLFeryMultiCannonComponent* GetDefaultObj();

};

// 0x230 (0x570 - 0x340)
// Class DXM.TTLFieldAccess
class ATTLFieldAccess : public ATTLActor
{
public:
	uint8                                        Pad_2449[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstanceDynamic*              AreaMaterialPtr;                                   // 0x380(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_244A[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstanceDynamic*              ConsoleScreenMaterialPtr;                          // 0x398(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              ConsoleScreenMaterialPtr02;                        // 0x3A0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_244B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ChangedScreenParameterValue;                       // 0x3B0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ChangedScreenParameterValue02;                     // 0x3B4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_244C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ScreenChengedTime;                                 // 0x3BC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_244D[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstanceDynamic*              ConsoleBodyMaterialPtr;                            // 0x3D0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_244E[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          ChangedConsoleBodyColor;                           // 0x3E8(0x10)(Edit, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_244F[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TScriptInterface<class ITTLFieldAccesserInterface>> InterfaceArray;                                    // 0x410(0x10)(ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                        Pad_2450[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          LevelNotifyTagArray;                               // 0x428(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           AccessSE;                                          // 0x438(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           AccessSuccessSE;                                   // 0x4D0(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2451[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLFieldAccess* GetDefaultObj();

	void OnEndOverlapOuterCollision(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnBeginOverlapOuterCollision(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x0 (0x28 - 0x28)
// Class DXM.TTLFieldAccessedInterface
class ITTLFieldAccessedInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ITTLFieldAccessedInterface* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class DXM.TTLFieldAccesserInterface
class ITTLFieldAccesserInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ITTLFieldAccesserInterface* GetDefaultObj();

};

// 0x58 (0x398 - 0x340)
// Class DXM.TTLFieldItem
class ATTLFieldItem : public ATTLActor
{
public:
	uint8                                        Pad_2453[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsEnabledChase;                                    // 0x348(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2454[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ChaseStartDistance;                                // 0x34C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChaseSpeed;                                        // 0x350(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChaseSpeedRate;                                    // 0x354(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MarkerRangeRadius;                                 // 0x358(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsUseMarker;                                       // 0x35C(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsOverlapping;                                     // 0x35D(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2455[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                Consumer;                                          // 0x360(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsChasing;                                         // 0x368(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2456[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                ChaseTarget;                                       // 0x370(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        LoopFxPlayback;                                    // 0x378(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2457[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AccessHUDOffsetHeight;                             // 0x394(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ATTLFieldItem* GetDefaultObj();

	void Show();
	void ProcessChase(float DeltaSeconds);
	void OnStartChase();
	void OnEndChase();
	bool IsCanConsume(class AActor* ConsumerActor);
	void Hide();
	void GetHUDText(class FText* HudText1, class FText* HudText2);
	class AActor* CheckChase();
};

// 0x158 (0x4F0 - 0x398)
// Class DXM.TTLFieldBulletItem
class ATTLFieldBulletItem : public ATTLFieldItem
{
public:
	enum class ETTLWeaponType                    BulletType;                                        // 0x398(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_245E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        BulletNum;                                         // 0x39C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GravityScale;                                      // 0x3A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_245F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           MainFx;                                            // 0x3A8(0x98)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           ConsumeFx;                                         // 0x440(0x98)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class USphereComponent*                      SphereCollision;                                   // 0x4D8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UProjectileMovementComponent*          ProjectileMovement;                                // 0x4E0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2460[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLFieldBulletItem* GetDefaultObj();

	void RecoverBullet(class AActor* TargetActor);
	void OnendOverLap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnConsumeBP(class AActor* ConsumerActor);
	void OnBeginOverLap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	class AActor* CreateBulletItem(class UObject* WorldContextObject, TSubclassOf<class ATTLFieldBulletItem> FieldItemClass, class AActor* OwnerActor, const struct FTransform& Transform, enum class ETTLWeaponType BulletType, int32 BulletNum, float GravityScale);
};

// 0x150 (0x4E8 - 0x398)
// Class DXM.TTLFieldFemtoItem
class ATTLFieldFemtoItem : public ATTLFieldItem
{
public:
	float                                        RecoveryAmountOfFemto;                             // 0x398(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2465[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           MainFx;                                            // 0x3A0(0x98)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           ConsumeFx;                                         // 0x438(0x98)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class USceneComponent*                       SceneRoot;                                         // 0x4D0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                      SphereCollision;                                   // 0x4D8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2466[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLFieldFemtoItem* GetDefaultObj();

	void OnendOverLap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnConsumeBP(class AActor* ConsumerActor);
	void OnBeginOverLap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	class AActor* CreateFemtoItem(class UObject* WorldContextObject, class UClass* FieldItemClass, class AActor* OwnerActor, const struct FTransform& Transform, float RecoveryAmountOfFemto);
};

// 0x38 (0x378 - 0x340)
// Class DXM.TTLFieldPartsItem
class ATTLFieldPartsItem : public ATTLActor
{
public:
	uint8                                        Pad_2467[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLDropOnlyPartsControl*              DropOncePartsListIDController;                     // 0x358(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ATTLCharacterCommon>       WreckedClass;                                      // 0x360(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  PartsListID;                                       // 0x368(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsOnceGet;                                         // 0x370(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2468[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLFieldPartsItem* GetDefaultObj();

	void OnDestroyedUI();
};

// 0x30 (0xBC0 - 0xB90)
// Class DXM.TTLFighterBomb
class ATTLFighterBomb : public ATTLExplosionBullet
{
public:
	TSubclassOf<class ATTLExplosionActor>        ExplosionClassOnAir1;                              // 0xB90(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ATTLExplosionActor>        ExplosionClassOnAir2;                              // 0xB98(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ATTLExplosionActor>        ExplosionClassOnGround1;                           // 0xBA0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ATTLExplosionActor>        ExplosionClassOnGround2;                           // 0xBA8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         InitedSphereCollision;                             // 0xBB0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_246A[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLFighterBomb* GetDefaultObj();

	bool IsInAir(class AActor* OtherActor);
};

// 0x0 (0xEE0 - 0xEE0)
// Class DXM.TTLFighterEnemyLongRangeWeapon
class ATTLFighterEnemyLongRangeWeapon : public ATTLEnemyLongRangeWeapon
{
public:

	static class UClass* StaticClass();
	static class ATTLFighterEnemyLongRangeWeapon* GetDefaultObj();

};

// 0x450 (0x910 - 0x4C0)
// Class DXM.TTLFighterGimmickActor
class ATTLFighterGimmickActor : public ATTLPawn
{
public:
	float                                        MaxMoveSpeed;                                      // 0x4C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AlongValue;                                        // 0x4C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLSplinePath*                        PatrolPath;                                        // 0x4C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnablePastDestroy;                                 // 0x4D0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_246C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DestroySeconds;                                    // 0x4D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxAfterburner;                                     // 0x4D8(0x98)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  SocketAfterburner;                                 // 0x570(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableRollRotation;                                // 0x578(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_246D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RestoreRollDegree;                                 // 0x57C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RestoreRollRate;                                   // 0x580(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnablePitchRotation;                               // 0x584(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableLeftWeapon;                                // 0x585(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_246E[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                LeftWeaponTarget;                                  // 0x588(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LeftWeaponID;                                      // 0x590(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLEnemyLongRangeWeapon>  LeftWeaponClass;                                   // 0x598(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLProjectileBase>        LeftBulletClass;                                   // 0x5A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLWeaponType                    LeftWeaponType;                                    // 0x5A8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_246F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                LeftWeaponMeshName;                                // 0x5B0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LeftWeaponSocket;                                  // 0x5C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           LeftWeaponMuzzleFx;                                // 0x5C8(0x98)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLEnemyLongRangeWeaponShootSettings LeftShootSettings;                                 // 0x660(0x20)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         IsEnableRightWeapon;                               // 0x680(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2470[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                RightWeaponTarget;                                 // 0x688(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RightWeaponID;                                     // 0x690(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLEnemyLongRangeWeapon>  RightWeaponClass;                                  // 0x698(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLProjectileBase>        RightBulletClass;                                  // 0x6A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLWeaponType                    RightWeaponType;                                   // 0x6A8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2471[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                RightWeaponMeshName;                               // 0x6B0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RightWeaponSocket;                                 // 0x6C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           RightWeaponMuzzleFx;                               // 0x6C8(0x98)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLEnemyLongRangeWeaponShootSettings RightShootSettings;                                // 0x760(0x20)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         IsEnableCenterWeapon;                              // 0x780(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2472[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                CenterWeaponTarget;                                // 0x788(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CenterWeaponId;                                    // 0x790(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLEnemyLongRangeWeapon>  CenterWeaponClass;                                 // 0x798(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLProjectileBase>        CenterBulletClass;                                 // 0x7A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLWeaponType                    CenterWeaponType;                                  // 0x7A8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2473[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                CenterWeaponMeshName;                              // 0x7B0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CenterWeaponSocket;                                // 0x7C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           CenterWeaponMuzzleFx;                              // 0x7C8(0x98)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLEnemyLongRangeWeaponShootSettings CenterShootSettings;                               // 0x860(0x20)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2474[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlayback                        FxPlaybackAfterburner;                             // 0x8A0(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2475[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLFighterGimmickActor* GetDefaultObj();

	void ShootOneMuzzle(struct FTTLEnemyLongRangeWeaponShootSettings* WeaponSettings, bool IsEnableWeapon, class AActor* WeaponTarget, class USkeletalMeshComponent* WeaponMesh, class ATTLEnemyLongRangeWeapon* Weapon, class FName WeaponSocket, struct FTTLFxParam& FxParam);
	void Shoot();
	void RollRotation();
	void PitchRotation();
	void Patrol();
	void ManualRotation(const struct FVector& NewDirection);
	void ManualMove(const struct FVector& MoveVelocity);
};

// 0x9D8 (0xAC8 - 0xF0)
// Class DXM.TTLFirearmControlComponent
class UTTLFirearmControlComponent : public UActorComponent
{
public:
	class APawn*                                 OwnerPawn;                                         // 0xF0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                OwnerMesh;                                         // 0xF8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBasicStatusComponent*              OwnerStatus;                                       // 0x100(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2479[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ATTLCatchableActorBase>    GrenadeClass;                                      // 0x110(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RapidSpeed;                                        // 0x118(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxAttackTime;                                     // 0x11C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinAttackTime;                                     // 0x120(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxAttackIntervalTime;                             // 0x124(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinAttackIntervalTime;                             // 0x128(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NoticeTime;                                        // 0x12C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsResetIntervalWhenEndFire;                        // 0x130(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_247A[0x17];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnArkGunTrace;                                     // 0x148(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnShootFemtoLaser;                                 // 0x158(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFirearmInfo                       Shoot_Info;                                        // 0x168(0x648)(BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Shoot_MuzzleLoopEffect;                            // 0x7B0(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Shoot_ShootLoopEffect;                             // 0x7C8(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Shoot_UnexplodedLoopEffect;                        // 0x7E0(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Shoot_CenterChargeLoopEffect;                      // 0x7F8(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Shoot_MuzzleChargeLoopEffect;                      // 0x810(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Shoot_MuzzleMaxChargeLoopEffect;                   // 0x828(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        Shoot_ArkGunChargeLoopEffect;                      // 0x840(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class ATTLFemtoLaserBase*                    Shoot_LaserBullet;                                 // 0x858(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLArkGunLaserBase*                   Shoot_ArkGunLaserBullet;                           // 0x860(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                Shoot_TargetActor;                                 // 0x868(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                Shoot_OldTargetActor;                              // 0x870(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               bulletDirection;                                   // 0x878(0xC)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Shoot_IsAddOwnerVelocity;                          // 0x884(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_247B[0x163];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLDummyBulletOwnerPawn*              DummyOwner_Pawn;                                   // 0x9E8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_247C[0xD8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLFirearmControlComponent* GetDefaultObj();

	void StartFire(bool IsRandomInit);
	TArray<class ATTLProjectileBase*> Shoot_Shoot(class AActor* TargetActor);
	void Shoot_SetFirearmInfo(struct FTTLFirearmInfo* Info, class UTTLDamageParameterComponent* DamageParam);
	bool Shoot_CheckInsideRange(class AActor* TargetActor, const struct FVector& baseLocation, const struct FVector2D& PitchRange, float YawRange);
	bool Shoot_CheckInsideAngleRange(class AActor* TargetActor, bool IsCheckPitch);
	void SetFire();
	void ResetFire();
	void MulticastStartFire(float NextRapidTimer, float NextAttackTimer, uint8 NextMode, bool IsShootExec);
	void MulticastSetMode(uint8 Mode);
	void MulticastArkGunStart(class AActor* TargetActor);
	void MulticastArkGunDetach(uint8 Flag);
	void MulticastArkGunChangeTarget();
	bool IsInterval();
	bool IsFireMode();
	bool IsChargeLag();
	void InitializeFireMode();
	void Initialize();
	void EndFireImmediate();
	void EndFire();
	void DummyOwner_Destroy();
	bool DummyOwner_Create();
};

// 0x40 (0x600 - 0x5C0)
// Class DXM.TTLFlareWeapon
class ATTLFlareWeapon : public ATTLSupportWeaponBase
{
public:
	uint8                                        Pad_247D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ATTLFlareBase>             FlareClass;                                        // 0x5C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_247E[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLFlareWeapon* GetDefaultObj();

	void LaunchFlare();
};

// 0x28 (0x350 - 0x328)
// Class DXM.TTLFlashDummyActor
class ATTLFlashDummyActor : public AActor
{
public:
	class AActor*                                TargetActor;                                       // 0x328(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBasicStatusComponent*              BasicStatusComponent;                              // 0x330(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_247F[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLFlashDummyActor* GetDefaultObj();

};

// 0x10 (0x338 - 0x328)
// Class DXM.TTLFlashPostProcessCollideActor
class ATTLFlashPostProcessCollideActor : public AActor
{
public:
	class USphereComponent*                      Collision;                                         // 0x328(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPostProcessComponent*                 PostProcessComponent;                              // 0x330(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ATTLFlashPostProcessCollideActor* GetDefaultObj();

};

// 0x120 (0xCB0 - 0xB90)
// Class DXM.TTLMineBase
class ATTLMineBase : public ATTLExplosionBullet
{
public:
	uint8                                        Pad_2482[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               InitialDirectionVector;                            // 0xB9C(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2483[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ChargeTimer;                                       // 0xBBC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2484[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ForStopTime;                                       // 0xBC4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExcessiveExtendRate;                               // 0xBC8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2485[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               OffsetSelfPosition;                                // 0xBD8(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2486[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               MaxMeshScale;                                      // 0xBE8(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               CurrentMeshScale;                                  // 0xBF4(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2487[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RiseSpeed;                                         // 0xC04(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxRiseSpeed;                                      // 0xC08(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RiseSpeedRate;                                     // 0xC0C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpeedWeight;                                       // 0xC10(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpinSpeedRate;                                     // 0xC14(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2488[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstanceDynamic*              MaterialInstanceDynamic;                           // 0xC20(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OnBlinkRate;                                       // 0xC28(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OffBlinkRate;                                      // 0xC2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InitialBlinkRate;                                  // 0xC30(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               OnEmissionColor;                                   // 0xC34(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               OffEmissionColor;                                  // 0xC40(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               InitialEmissionColor;                              // 0xC4C(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundAtomCue*                         MaterialOnSound;                                   // 0xC58(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                      ExplodeDetectCollision;                            // 0xC60(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        IgnoreActorList;                                   // 0xC68(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<enum class EObjectTypeQuery>          ObjectTypesList;                                   // 0xC78(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2489[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MeshRadius;                                        // 0xC90(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               InitialScale;                                      // 0xC94(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_248A[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLMineBase* GetDefaultObj();

	void SelfExplode(class AActor* OtherActor);
	void OnMineTakeAnyDamageDelegate(class AActor* DamagedActor, float TakeDamage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void OnMineHit(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x10 (0xCC0 - 0xCB0)
// Class DXM.TTLFloatingDecoy
class ATTLFloatingDecoy : public ATTLMineBase
{
public:
	uint8                                        Pad_248B[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLFloatingDecoy* GetDefaultObj();

	void DeleteSelfFromList();
};

// 0x20 (0x48 - 0x28)
// Class DXM.TTLFileMapping
class UTTLFileMapping : public UObject
{
public:
	uint8                                        Pad_248C[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLFileMapping* GetDefaultObj();

};

// 0x70 (0x98 - 0x28)
// Class DXM.TTLFolderWidget
class UTTLFolderWidget : public UObject
{
public:
	uint8                                        Pad_248D[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UUserWidget>               FolderWidgetClass;                                 // 0x58(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               FolderWidgetClass_Top;                             // 0x60(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               FolderWidgetClass_List;                            // 0x68(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               FolderWidgetClass_List_Factor;                     // 0x70(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           FolderWidget;                                      // 0x78(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_248E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLExplorerListContainer>     Lists;                                             // 0x88(0x10)(ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTTLFolderWidget* GetDefaultObj();

};

// 0x20 (0x348 - 0x328)
// Class DXM.TTLFolderExplorer
class ATTLFolderExplorer : public AActor
{
public:
	TSubclassOf<class UUserWidget>               FolderMappingClass;                                // 0x328(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               FolderWidgetClass;                                 // 0x330(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLFileMapping*                       FileMapping;                                       // 0x338(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLFolderWidget*                      SelfWidget;                                        // 0x340(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ATTLFolderExplorer* GetDefaultObj();

	bool OpenFolder(const class FString& FolerRoot);
};

// 0x170 (0x7A0 - 0x630)
// Class DXM.TTLForceSaveScene
class ATTLForceSaveScene : public ATTLMenuSceneBase
{
public:
	class UTTLUISaveLoadComponent*               SaveLoadComponent;                                 // 0x630(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2490[0x118];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLSaveGameObject*                    SaveData;                                          // 0x750(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLSaveGameObject*                    AutoSaveData;                                      // 0x758(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class AActor>                    CommonPopupClass;                                  // 0x760(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        OpeningAnimWaitTime;                               // 0x768(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        OpenPopupWaitTime;                                 // 0x76C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2491[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLForceSaveScene* GetDefaultObj();

};

// 0x28 (0x118 - 0xF0)
// Class DXM.TTLFriendListComponent
class UTTLFriendListComponent : public UActorComponent
{
public:
	class UUserWidget*                           Widget_TopWidget;                                  // 0xF0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UUserWidget*>                   PartsIconWidgets;                                  // 0xF8(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UUserWidget*>                   WeaponIconWidgets;                                 // 0x108(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLFriendListComponent* GetDefaultObj();

	void SetVisible(enum class ESlateVisibility Visible);
	bool InitializeBP();
	void Initialize(class UUserWidget* LayoutWidget);
};

// 0x90 (0x6C0 - 0x630)
// Class DXM.TTLFriendListScene
class ATTLFriendListScene : public ATTLMenuSceneBase
{
public:
	uint8                                        Pad_2495[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UTTLRanking_PointRankingResultScore*> RankingArray;                                      // 0x650(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class UWidgetAnimation*                      Anim_FriendTop_In;                                 // 0x660(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_FriendTop_Out;                                // 0x668(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLFriendListComponent*               FriendListComponent;                               // 0x670(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLFriendListScrollListComponent*     FriendListScrollListComponent;                     // 0x678(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2496[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLRankingManager*                    RankingManager;                                    // 0x6B0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2497[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLFriendListScene* GetDefaultObj();

	void Tick(float DeltaSeconds);
	void SearchOnlineFriendSessions(int32 LocalPlayer, const class FString& ListName);
	void Popup_Ok_Selected();
	void OnSearchSessionsCompleteFromGameSession(bool WasSuccessful, TArray<struct FBlueprintSessionResult>& SessionSearchResults);
	void OnJoinSessionComplete(bool WasSuccessful);
	void OnGetRankingCallBack(bool WasSuccessful, const TArray<class UTTLRanking_PointRankingResultScore*>& ResultArray);
	void OnEndShowPlayLog();
	class ATTLPlaylogPopup* CreatePlayLogPopUp();
	class ATTLOkPopUp* CreateOkPopUp();
};

// 0x40 (0x1D8 - 0x198)
// Class DXM.TTLFriendListScrollListComponent
class UTTLFriendListScrollListComponent : public UTTLScrollListComponentBase
{
public:
	uint8                                        Pad_2499[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UWidgetAnimation*                      Animation_IconOnline;                              // 0x1B8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_IconOnline_CanJoin;                      // 0x1C0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_IconOffline;                             // 0x1C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_249A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLFriendListScrollListComponent* GetDefaultObj();

	void Initialize(class UUserWidget* LayoutWidget, int32 DisplayNum, int32 ListNumMax);
	class UUserWidget* CreateButtonWidget(int32 Position);
};

// 0x8 (0x50 - 0x48)
// Class DXM.TTLCheckStopAndResetCommand
class UTTLCheckStopAndResetCommand : public UTTLCommandOrder
{
public:
	uint8                                        Pad_249B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLCheckStopAndResetCommand* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class DXM.TTLOutputLogCurrentRoomInfo
class UTTLOutputLogCurrentRoomInfo : public UTTLCommandOrder
{
public:

	static class UClass* StaticClass();
	static class UTTLOutputLogCurrentRoomInfo* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class DXM.TTLGameAutomationFactory
class UTTLGameAutomationFactory : public UObject
{
public:
	TArray<struct FTTLGameAutoStateContainer>    AutomationStateArray;                              // 0x28(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTTLGameAutomationFactory* GetDefaultObj();

};

// 0x0 (0xCD0 - 0xCD0)
// Class DXM.TTLGameEngine
class UTTLGameEngine : public UGameEngine
{
public:

	static class UClass* StaticClass();
	static class UTTLGameEngine* GetDefaultObj();

};

// 0xA90 (0xB30 - 0xA0)
// Class DXM.TTLGameInstance
class UTTLGameInstance : public UGameInstance
{
public:
	uint8                                        Pad_24C3[0xE0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ETTLEBootMode                     BootMode;                                          // 0x180(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         NeedsToPackageAsTrial;                             // 0x181(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         NeedsToPackageAsJapan;                             // 0x182(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         NeedsToPackageAsEFIGS;                             // 0x183(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24C4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int32, class FString>                   DlcAppIds;                                         // 0x188(0x50)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>           DlcAppIdsEOS;                                      // 0x1D8(0x50)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	class FName                                  CurrentMissionName;                                // 0x228(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24C5[0x58];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLAssemblePartsInfoRow>      PartsList;                                         // 0x288(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UTTLSaveGameObject*                    CurrentGameData;                                   // 0x298(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLSaveOnlineObject*                  CurrentOnlineData;                                 // 0x2A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLSaveSurvivalObject*                CurrentSurvivalData;                               // 0x2A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLSaveOptionObject*                  CurrentOptionData;                                 // 0x2B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24C6[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLEventManager*                      EventManagerInstance;                              // 0x2C8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLCameraShakeManager*                CameraShakeManagerInstance;                        // 0x2D0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLSoundManager*                      SoundManagerInstance;                              // 0x2D8(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLMissionProgressManager*            MissionProgressManager;                            // 0x2E0(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLInventoryManager*                  InventoryManager;                                  // 0x2E8(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLLoader*                            Loader;                                            // 0x2F0(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLUICursorStorageManager*            UICursorStorageManager;                            // 0x2F8(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSupplyRecovery;                                  // 0x300(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24C7[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnChangeOptionSetting;                             // 0x308(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class UTTLIceDataManager*                    IceDataManager;                                    // 0x318(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLDecorationDataManager*             DecorationDataManager;                             // 0x320(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLPartsDevelopManager*               PartsDevelopManager;                               // 0x328(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          DlcPartsIdList;                                    // 0x330(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<class FName>                          DlcWeaponIdList;                                   // 0x340(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<class FName>                          OnMissionSkillList;                                // 0x350(0x10)(BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<class FName>                          OnMissionPlayerSkillList;                          // 0x360(0x10)(BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_24C8[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLParameterCalculator*               ParameterCalculator;                               // 0x378(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UTTLParameterCalculator> ParameterCalculatorClass;                          // 0x380(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLActionVoiceManager*                ActionVoiceManager;                                // 0x3A8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnLoginUserComplete;                               // 0x3B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLogoutUserComplete;                              // 0x3C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMultiplayOpenErrorPopup;                         // 0x3D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMultiplayCloseErrorPopup;                        // 0x3E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMultiplayPressedErrorPopup;                      // 0x3F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	struct FTTLCreateRoomSetting                 CurrentRoomSetting;                                // 0x400(0x18)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLMultiplayCondition                LastMultiplayCondition;                            // 0x418(0x20)(NativeAccessSpecifierPublic)
	bool                                         IsJoinRoomFromFriendList;                          // 0x438(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDebugMultiPlayGame;                              // 0x439(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24C9[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLOnlineStatusDataManager*           OnlineStatusDataManager;                           // 0x440(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLNgPartsDataManager*                NgPartsDataManager;                                // 0x448(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLRankingManager*                    RankingManager;                                    // 0x450(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLMissionRankingDataManager*         MissionRankingDataManager;                         // 0x458(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLMatchmakeRefereeManager*           MatchmakeRefereeManager;                           // 0x460(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLLineChatDataManager*               LineChatManager;                                   // 0x468(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLHudCustomDataManager*              HudCustomManager;                                  // 0x470(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLNpcSetDataManager*                 NpcSetManager;                                     // 0x478(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLSortIdDataManager*                 SortIdManager;                                     // 0x480(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLMultiplay2vs2Manager*              Multiplay2vs2Manager;                              // 0x488(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLSteamUserStatsManager*             SteamUserStatsManager;                             // 0x490(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24CA[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsShowDesignateTargetArrow;                        // 0x499(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24CB[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        DesignateTargetArrowMax;                           // 0x49C(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DesignateTargetArrowFarDistance;                   // 0x4A0(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DesignateTargetArrowShowAll;                       // 0x4A4(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLRaderAlphaCalcType            RaderAlphaCalcType;                                // 0x4A5(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24CC[0x12];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnPostChatMessage;                                 // 0x4B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnAddMessageLogItem;                               // 0x4C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDeleteMessageLogItem;                            // 0x4D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TArray<struct FTTLMessageLogItem>            MessageLogs;                                       // 0x4E8(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class UAtomComponent*                        SoundChatVoiceComponent;                           // 0x4F8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanCommunicateOnline;                              // 0x500(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24CD[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLProjectileManager*                 ProjectileManager;                                 // 0x508(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_24CE[0x130];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MultiplayPvpDamageUpRate;                          // 0x640(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24CF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          PlayTimeCountupTimerHandle;                        // 0x648(0x8)(NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_24D0[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          RequestHomeStartedEventNames;                      // 0x658(0x10)(BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	bool                                         IsStartHomeStartedEventStopBGM;                    // 0x668(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24D1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLConsoleMsgManager*                 ConsoleMsgManagerInstance;                         // 0x670(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLContinueInfoContainer*             ContinueosInfo;                                    // 0x678(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLArsenalPartsInfoList              PartsInfoAtFinishingMission;                       // 0x680(0x310)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24D2[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnStartSave;                                       // 0x9E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnFinishSave;                                      // 0x9F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnFinishSaveAnimation;                             // 0xA00(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class UTTLExternalSaveDataLoader*            ExternalSaveDataLoader;                            // 0xA10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLAutomation_MissionSelectHistoryData* MissionSelectData;                                 // 0xA18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UTTLGameAutomationFactory> GameAutomationFactoryClass;                        // 0xA20(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24D3[0x44];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ForceDiconnectTimerMax;                            // 0xA8C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ForceDiconnectTimerMin;                            // 0xA90(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24D4[0x64];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ATTLYesNoPopUp>            YesNoPopClass;                                     // 0xAF8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_24D5[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnChangedInputDevice;                              // 0xB18(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	uint8                                        Pad_24D6[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLGameInstance* GetDefaultObj();

	void TTLUiChangeDisplayStringKey();
	void TTLSwitchSurvivalDebugPlayLastMap();
	void TTLSwitchSurvivalDebugPlayCompMap3_3();
	void TTLSwitchSurvivalDebugPlayCompMap2_3();
	void TTLSwitchSurvivalDebugPlayCompMap1_3();
	void TTLSwitchSurvivalDebugPlayCompleteMap();
	void TTLSwitchSurvivalDebugMap();
	void TTLSurvivalTeleportForwardRoom();
	void TTLSurvivalRangeKillAttack();
	void TTLSurvivalForceOpenThisRoom();
	void TTLSurvivalDebugMapInfoSave();
	void TTLSurvivalDebugMapInfoLoad();
	void TTLSurvivalCheatSkillPack();
	void TTLSurvivalAllActorTickLog();
	void TTLSimulateRankMatch(int32 StartRate, int32 WinPer, int32 battleCount);
	void TTLSetReturnFromRankmatch();
	void TTLSetHPRemaing1();
	void TTLSetForceMultiplayDuel();
	void TTLSetEnableInput();
	void TTLSetConfigNetPktLagLossClear();
	void TTLSetConfigNetPktLag1000Loss30();
	void TTLSetCalcRatingDispLog(bool IsOutputLog);
	void TTLSetBossLocationOffsetZ(float LocationZ);
	void TTLSetBossLocationOffsetXY(float LocationX, float LocationY);
	void TTLSetBossHpRemaing1();
	void TTLSetBossHpPer(int32 Per);
	void TTLSetBossDamageSendInterval(float Time);
	void TTLSetAllLogCategoryToError();
	void TTLPrintMultiplayDebugLog();
	void TTLNoTalkDemo();
	void TTLNoLoadingUI();
	void TTLNetPktLagLossClear();
	void TTLNetPktLag1000Loss30();
	void TTLLogAILocation();
	void TTLListupPrizeAmount(int32 DispStep);
	void TTLInvinciblePlayerMulti();
	void TTLForceSetRatingValue(int64 NextScoreNum);
	void TTLForceSetNamaRatingValue(int32 NextRatingValue);
	void TTLForceKillBoss();
	void TTLEnablePrintScreenResultRate();
	void TTLEnableMultiplayHitDebugLog(bool IsEnable);
	void TTLEnableMultiplayDebugLog(bool IsEnable);
	void TTLDumpMultplayPlayerInfo();
	void TTLDispMultiMissionToOrderSelect();
	void TTLDestroyAllSurvivalDungeonGate();
	void TTLDebugSimulateLogout();
	void TTLDebugSetMultiplayDuelDamageUpRate(float NewRate);
	void TTLDebugSetMultiplayBattleDamageUpRate(float NewRate);
	void TTLDebugPrintPlayerMovableParameter();
	void TTLDebugMultiNetWorkErrorPacketLost();
	void TTLDebugMultiNetWorkErrorConnectionLost();
	void TTLDebugMultiErrorCheck(bool IsOn, float DelaySec);
	void TTLDebugGotoDebugLevelMulti2();
	void TTLDebugGotoDebugLevelMulti1();
	void TTLDebugForceGC();
	void TTLDebugForceExecDuel();
	void TTLDebugEnableDamageHitInfoDetailLog(bool IsEnable);
	void TTLDebugEnableCheckBattleResultMethod2();
	void TTLDebugDumpAllPlayerMainSelf();
	void TTLConvertScoreNumToRatingValue(int64 ScoreNum);
	void TTLConvertRatingValueToScoreNum(int32 RateValue);
	void TTLClearMultiplayDebugLog(bool IsEnable);
	void TTLChangeStatusType(int32 StatusTypeNo);
	void TTLChangePlayerToAiAll();
	void TTLChangePlayerToAi();
	void TTLChangeDisplayRatingValue();
	void TTLChangeControllerID(int32 NewId);
	void TTLCalcRateRankMatch(uint32 SelfRate, uint32 OtherRate, bool IsWin, uint32 MyDisconnectCount, int32 OtherDisconnectCount);
	void TTLCalcRateDuel(uint32 SelfRate, uint32 OtherRate, bool IsWin);
	void TTLBossNoDamage();
	void TTLBossDamageSync(bool IsOn);
	float TTLApplyPointDamage(class AActor* DamagedActor, float BaseDamage, struct FVector& HitFromDirection, struct FHitResult& HitInfo, class AController* EventInstigator, class AActor* DamageCauser, TSubclassOf<class UDamageType> DamageTypeClass);
	float TTLApplyDamage(class AActor* DamagedActor, float BaseDamage, class AController* EventInstigator, class AActor* DamageCauser, TSubclassOf<class UDamageType> DamageTypeClass);
	void TTL2on2PlayerNumCheckDisable(bool IsDisable);
	bool TryGetPrevArsenalPartsInfo(struct FTTLArsenalPartsInfoList* PartsInfo, struct FTTLArsenalPaintInfo* PaintInfo);
	void TravelToRoom(const class FString& Option);
	void TravelToReturnHomeByRankmatch(class FName LevelName);
	void TravelToReturnHome(class FName LevelName);
	void TravelToMission(class FName LevelName);
	void StopChatVoice(float FadeOutSeconds);
	void StartMultiplayErrorState();
	void SetErrorPopupState(class ATTLOkPopUp* ErrorPopup, enum class ETTLNetwarkFailureType FailureType);
	void SetCommunicateOnline(bool NewValue);
	void SetChatMessage_LifeSeconds(float LifeSeconds);
	void SetChatMessage(enum class ETTLChatMessageFor ChatMessageFor, int32 Position, const struct FTTLChatMessage& NewChatMessage);
	bool SaveOnlineData(int32 UserIndex);
	bool SaveGameData(const class FString& SlotName, int32 UserIndex);
	bool ResolveDelayedSaveGameData();
	bool RankMatchmaking(class APlayerController* PlayerController, class FName LevelName);
	void ProcessLogMessage(float DeltaSeconds);
	void PrintLogBlueprintCallstack();
	void PostLogMessage(struct FTTLMessageLogPacket& MessageLogPacket);
	void PostErrorPopup();
	void PostChatMessage_HudCustom(const class FString& UserName, class FText ChatMessage);
	void PostChatMessage(bool IsLocalPlayer, const class FString& UserName, class FText ChatMessage, const class FString& PresetMessageID, const class FString& SoundPath, uint8 SendPlayerIndex);
	void PlayTimeCountup();
	void PlayChatVoice(const class FString& VoicePath);
	void OptionSetting(struct FTTLOptionInfo& OptionInfo);
	void OnYesCloseWindowsCloseNoticePopUp();
	void OnToggleFullscreen(bool IsFullscreen);
	void OnStartMatchmakeRoundComplete(bool WasSuccessful);
	void OnStartMatchmakeDuelRoundComplete(bool WasSuccessful);
	void OnSearchSessionsComplete(bool WasSuccessful, TArray<struct FBlueprintSessionResult>& SessionSearchResults);
	void OnRespawnOuterBP(class ATTLCharacterCommon* RespawnOuter);
	void OnRankingFirstRegistrationComplete(bool WasSuccessful);
	void OnNoCloseWindowsCloseNoticePopUp();
	void OnMatchmakingComplete(bool WasSuccessful);
	void OnJoinSessionComplete(bool WasSuccessful);
	void OnInputWindowCloseEvent(enum class ETTLEActionType InputType, bool IsPressed);
	void OnInputRepeatWindowCloseEvent(enum class ETTLEActionType InputType, int32 Count);
	void OnGetAftorStatsComplete(bool WasSuccessful, int32 RatingValue, int32 DisconnectionRate);
	void OnDestroySessionsComplete(class FName SessionName, bool WasSuccessful);
	void OnCreateSessionComplete(class FName SessionName, bool WasSuccessful);
	void OnCloseErrorPopup();
	void OnCancelMatchmakingComplete(bool WasSuccessful);
	bool NewGameData(bool IsFixClear);
	bool LoginUser(class APlayerController* PlayerController, const class FString& UserID, const class FString& UserToken);
	void LoadParameterCalculator();
	bool LoadOnlineData(int32 UserIndex);
	bool LoadGameData(const class FString& SlotName, int32 UserIndex);
	bool LeaveRoomClient(class APlayerController* PlayerController);
	bool LeaveRoom(class APlayerController* PlayerController);
	bool JoinRoomByIndex(class APlayerController* PlayerController, int32 SessionIndexInSearchResults, bool FromFriendList);
	bool JoinRoom(class APlayerController* PlayerController, struct FBlueprintSessionResult& SearchResult, bool FormFriendList);
	bool IsSpawnErrorPopupEnable(enum class ETTLNetwarkFailureType FailureType);
	bool IsSessionRankMatch();
	bool IsSessionLocalNetwork();
	bool IsSessionHost();
	bool IsOpenSecretPartsDevelopment();
	bool IsOpenNetworkErrorPopup();
	bool IsOkWindowsCloseConditionAndNotice();
	bool IsLoggedInUser();
	bool IsInSession();
	bool IsExistDuelPlayer();
	bool IsCurrentMissionContinuos();
	bool IsBossBattleLoopMode();
	bool IsBootTrial();
	bool IsBootE3();
	bool IsArsenalStartOfSurvivalInheritData();
	void InternalTravelToRoom(class FName& SessionName, const class FString& Option);
	void InternalServerTravel(class FName& LevelName);
	void InitializeRaderParams();
	void InitializeChatMessages(enum class ETTLChatMessageFor ChatMessageFor);
	bool HostRoom(class APlayerController* PlayerController, const struct FTTLCreateRoomSetting& RoomSetting, class FName LevelName, bool IsUseLAN, int32 MaxNumPlayers);
	void HandleTtlNetworkFailure(enum class ETTLNetwarkFailureType FailureType);
	class FText GetTagText(class FText& Text);
	enum class ETTLSurvivalSpawnType GetSurvaivalSpawnType(class ATTLPlayerController* PC, enum class ETTLECharacterCommonSpawnType SpawnType);
	class UTTLProjectileManager* GetProjectileManager();
	TArray<class FName> GetOnMissionSkillList();
	class FText GetMultiplayErrorPopupTextFromTtl(enum class ETTLNetwarkFailureType FailureType);
	class FText GetMultiplayErrorPopupText(enum class ENetworkFailure FailureType);
	TArray<class FName> GetMissionPlayerSkillList(class UWorld* World);
	class ATTLGameSession* GetGameSession();
	void GetEmotesForCommSetting(TArray<struct FTTLChatMessage>* Out);
	struct FTransform GetControllerPlayerBaseCampArsenalPos(class APlayerController* CheckController);
	TArray<struct FTTLChatMessage> GetChatMessagesOriginal(enum class ETTLChatMessageFor ChatMessageFor);
	TArray<struct FTTLChatMessage> GetChatMessages(enum class ETTLChatMessageFor ChatMessageFor);
	struct FTTLChatMessage GetChatMessage(enum class ETTLChatMessageFor ChatMessageFor, int32 Position);
	class UTTLActionVoiceManager* GetActionVoiceManager();
	bool FindRooms(class APlayerController* PlayerController, const struct FTTLFindRoomSetting& RoomSetting, int32 MaxResults, bool IsUseLAN, int32 PlayerNum, bool IsOwnerFriendOnly);
	void DelayInitGameInstance();
	void DelayedInternalTravelToRoom(class FName& SessionName, const class FString& Option);
	void DebugSetMultiplayRoomStatus(enum class ETTLSessionSettingRoomType RoomType);
	void DebugChangeAllPlayerStatus();
	void DeactiveWindowEvent();
	bool CurrentMultiplayErrorSeqStateIsNone();
	void CreateParameterCalculator();
	void CreateDuelResultHUDParameter(struct FTTLHUDDuelResultParams* Params);
	void CreateDuelFinishedParameter(struct FTTLDuelFinishedParams* Params);
	enum class ETTLNetwarkFailureType ConvertTtlNetworkFailureType(enum class ENetworkFailure DstType, bool* OutConvertSuccess);
	void ClearLogMessage();
	void ClearChatMessages(enum class ETTLChatMessageFor ChatMessageFor);
	void CheckNewGameData();
	bool CheckHandleNetworkError(enum class ENetworkFailure CheckType);
	void ChangeRoomSetting(struct FTTLCreateRoomSetting& NewRoomSetting);
	void ChangeRoomMissionID(int32 MissionIndex, enum class ETTLSessionSettingMission MissionType);
	void ChangeControllerPlayerBaseCampArsenalPos(class APlayerController* CheckController);
	void ChangeAllowJoinRoom(bool IsAllow);
	bool CanExecMultiplayDuel();
	bool CancelRankMatchmaking(class APlayerController* PlayerController, bool IsForceDestroy);
	void CalcTotalParam(struct FTTLPartsHeadParamRow& HeadParam, struct FTTLPartsBodyParamRow& BodyParam, struct FTTLPartsInsideParamRow& InsideParam, struct FTTLPartsArmRightParamRow& ArmRightParam, struct FTTLPartsArmLeftParamRow& ArmLeftParam, struct FTTLPartsLegsParamRow& LegsParam, struct FTTLPartsTotalParam* TotalParam, struct FTTLWeaponParamBaseRow& LeftWeapon, struct FTTLWeaponParamBaseRow& RightWeapon, struct FTTLWeaponParamBaseRow& ShoulderWeapon, struct FTTLWeaponParamBaseRow& SupportWeapon, struct FTTLWeaponParamBaseRow& LeftRackWeapon, struct FTTLWeaponParamBaseRow& RightRackWeapon);
	void CalcBasicStatus(struct FTTLPartsTotalParam& TotalParam, class UTTLBasicStatusComponent* BasicStatusIn, class UTTLBasicStatusComponent** BasicStatus);
	void CalcAssembleGrade(struct FTTLPartsTotalParam& TotalParam, struct FTTLArsenaltotalGradeRow* Grade);
	void CalcArsenalTotalParam(class ACharacter* Arsenal, struct FTTLPartsHeadParamRow& HeadParam, struct FTTLPartsBodyParamRow& BodyParam, struct FTTLPartsInsideParamRow& InsideParam, struct FTTLPartsArmRightParamRow& ArmRightParam, struct FTTLPartsArmLeftParamRow& ArmLeftParam, struct FTTLPartsLegsParamRow& LegsParam, struct FTTLPartsTotalParam* TotalParam, struct FTTLWeaponParamBaseRow& LeftWeapon, struct FTTLWeaponParamBaseRow& RightWeapon, struct FTTLWeaponParamBaseRow& ShoulderWeapon, struct FTTLWeaponParamBaseRow& SupportWeapon, struct FTTLWeaponParamBaseRow& LeftRackWeapon, struct FTTLWeaponParamBaseRow& RightRackWeapon);
	void ApplyArsenalStatusToInventory(class AActor* TargetArsenalActor);
	void AddInitializePartsToInventoryBP();
	bool AddDynamicWindowsCloseDelegate();
	void AddDynamicOnToggleFullscreenFunction();
	void AddChatMessages(enum class ETTLChatMessageFor ChatMessageFor);
	void ActiveWindowEvent();
};

// 0x0 (0x410 - 0x410)
// Class DXM.TTLGameMode
class ATTLGameMode : public AGameMode
{
public:

	static class UClass* StaticClass();
	static class ATTLGameMode* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class DXM.TTLSaveEditorConverter
class UTTLSaveEditorConverter : public UObject
{
public:

	static class UClass* StaticClass();
	static class UTTLSaveEditorConverter* GetDefaultObj();

};

// 0xC0 (0xE8 - 0x28)
// Class DXM.TTLSaveEditorModel
class UTTLSaveEditorModel : public UObject
{
public:
	uint8                                        Pad_24D7[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLGameDataSection>           SectionDataArray;                                  // 0x50(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TMap<class FString, int32>                   OriginalPartsNumMap;                               // 0x60(0x50)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_24D8[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLSaveGameObject*                    SaveData;                                          // 0xD0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FTTLVariableNameBySectionData> SectionVariableArray;                              // 0xD8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTTLSaveEditorModel* GetDefaultObj();

};

// 0x28 (0x1C0 - 0x198)
// Class DXM.TTLSaveEditorScrollListComponent
class UTTLSaveEditorScrollListComponent : public UTTLScrollListComponentBase
{
public:
	uint8                                        Pad_24D9[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UUserWidget>               ScrollItemFactorClass;                             // 0x1A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ScrollBoxWidgetName;                               // 0x1A8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  GridPanelWidgetName;                               // 0x1B0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ScrollBoxChildWidgetName;                          // 0x1B8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTTLSaveEditorScrollListComponent* GetDefaultObj();

	void Initialize(class UUserWidget* LayoutWidget, int32 DisplayNum, int32 ListNumMax);
};

// 0x80 (0xA8 - 0x28)
// Class DXM.TTLSaveEditorContent
class UTTLSaveEditorContent : public UObject
{
public:
	uint8                                        Pad_24DA[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UUserWidget>               ContentPrimitiveBool;                              // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               ContentPrimitiveInt32;                             // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               ContentPrimitiveInt64;                             // 0x50(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               ContentPrimitiveUInt64;                            // 0x58(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               ContentPrimitiveFloat;                             // 0x60(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               ContentPrimitiveString;                            // 0x68(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               ContentPrimitiveName;                              // 0x70(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               ContentPrimitiveFDateTime;                         // 0x78(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               PageWidgetForWidgetSwitcher;                       // 0x80(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FTTLSaveEditorPageContent>     PageArray;                                         // 0x88(0x10)(ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_24DB[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLSaveEditorContent* GetDefaultObj();

};

// 0x38 (0x360 - 0x328)
// Class DXM.TTLDebugSaveEditorUI
class ATTLDebugSaveEditorUI : public AActor
{
public:
	class UUserWidget*                           SelfWidget;                                        // 0x328(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLSaveEditorContent*                 SelfContent;                                       // 0x330(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_24DD[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UObject>                   ContentUISubClsass;                                // 0x348(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxDisplayNum;                                     // 0x350(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxListNum;                                        // 0x354(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_24DE[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLDebugSaveEditorUI* GetDefaultObj();

	void OnRepeatInputAction(enum class ETTLEActionType KeyType, int32 Count);
	void OnInputAction(enum class ETTLEActionType KeyType, bool IsPressed);
	void InitializeBP();
};

// 0x60 (0x388 - 0x328)
// Class DXM.TTLGameSaveEditor
class ATTLGameSaveEditor : public AActor
{
public:
	uint8                                        Pad_24DF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLSaveEditorModel*                   SelfModel;                                         // 0x330(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_24E0[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLGameSaveEditor* GetDefaultObj();

};

// 0x318 (0x658 - 0x340)
// Class DXM.TTLGameSession
class ATTLGameSession : public AGameSession
{
public:
	UMulticastDelegateProperty_                  OnCreateSessionComplete;                           // 0x340(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnJoinSessionComplete;                             // 0x350(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnFindSessionsComplete;                            // 0x360(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDestroySessionComplete;                          // 0x370(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnUpdateSessionComplete;                           // 0x380(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMatchmakingComplete;                             // 0x390(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnCancelMatchmakingComplete;                       // 0x3A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	uint8                                        Pad_24E5[0x2A8];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLGameSession* GetDefaultObj();

	void OnGetMatchmakeRefereeStatsCompleteCallback(bool WasSuccessful, int32 RatingValue, int32 DisconnectionRate);
	bool IsRankMatch();
	bool IsHost();
	enum class ETTLSessionSettingSearchResult GetSessionPropertyString(struct FBlueprintSessionResult& SessionResult, class FName SettingName, class FString* SettingValue);
	enum class ETTLSessionSettingSearchResult GetSessionPropertyInt(struct FBlueprintSessionResult& SessionResult, class FName SettingName, int32* SettingValue);
	enum class ETTLSessionSettingSearchResult GetSessionPropertyBool(struct FBlueprintSessionResult& SessionResult, class FName SettingName, bool* SettingValue);
	struct FTTLSessionErrorResult GetSessionLastErrorInSession(class UObject* WorldContext);
	int32 GetRegisteredPlayerNum();
};

// 0x1898 (0x1C20 - 0x388)
// Class DXM.TTLGameState
class ATTLGameState : public AGameState
{
public:
	uint8                                        Pad_24EC[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnFieldAccess;                                     // 0x390(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnSetupLevel;                                      // 0x3A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLevelLoadStarted;                                // 0x3B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLevelLoadFinished;                               // 0x3C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLevelVisibleFinished;                            // 0x3D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLevelStarted;                                    // 0x3E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionStarted;                                  // 0x3F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionUpdated;                                  // 0x400(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionPreFinished;                              // 0x410(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionFinished;                                 // 0x420(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionFailed;                                   // 0x430(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionRetired;                                  // 0x440(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionExtensionTimeStarted;                     // 0x450(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionExtensionTimeFinished;                    // 0x460(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionBeginningScreenFinished;                  // 0x470(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionEndingScreenFinished;                     // 0x480(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionVictoryScreenStarted;                     // 0x490(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionVictoryScreenFinished;                    // 0x4A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionEvaluationScreenStarted;                  // 0x4B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionEvaluationScreenFinished;                 // 0x4C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionDuelTimeStarted;                          // 0x4D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionDuelEvaluationScreenStarted;              // 0x4E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionDuelEvaluationScreenFinished;             // 0x4F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionAddSuccessDuelRequest;                    // 0x500(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionFadeOutScreenStarted;                     // 0x510(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionFadeOutScreenFinished;                    // 0x520(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionEndingEventStarted;                       // 0x530(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionEndingEventFinished;                      // 0x540(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	uint8                                        Pad_24ED[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnLevelFinished;                                   // 0x560(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnResultLoadStarted;                               // 0x570(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnResultLoadFinished;                              // 0x580(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnResultStarted;                                   // 0x590(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnResultFinished;                                  // 0x5A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMenuLoadStarted;                                 // 0x5B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMenuLoadFinished;                                // 0x5C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMenuStarted;                                     // 0x5D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMenuFinished;                                    // 0x5E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnBaseCampMapLoadStarted;                          // 0x5F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnBaseCampMapLoadFinished;                         // 0x600(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEventMapLoadStarted;                             // 0x610(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEventMapLoadFinished;                            // 0x620(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEventMapStarted;                                 // 0x630(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEventMapFinished;                                // 0x640(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionPlayerChanged;                            // 0x650(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionEventPreSuspendGame;                      // 0x660(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionEventPreStarted;                          // 0x670(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionEventStarted;                             // 0x680(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionEventFinished;                            // 0x690(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionPlayersDead;                              // 0x6A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionPlayerDamaged;                            // 0x6B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionGameover;                                 // 0x6C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionAreaWarning;                              // 0x6D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionAreaForceControlled;                      // 0x6E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionPauseMenuStarted;                         // 0x6F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionPauseMenuFinished;                        // 0x700(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnOptionMenuStarted;                               // 0x710(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnOptionMenuFinished;                              // 0x720(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionGroupActorDestroyed;                      // 0x730(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnUnregisterTargetArea;                            // 0x740(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionDestructibleActorDestroyed;               // 0x750(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionCatchableActorDestroyed;                  // 0x760(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionActorHPPercentageLessThan;                // 0x770(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionActorCatchObject;                         // 0x780(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionActorReleaseObject;                       // 0x790(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionPickUppedParts;                           // 0x7A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionAddScore;                                 // 0x7B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionTimerChanged;                             // 0x7C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionSubGoalGroupActorDestroyed;               // 0x7D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionSubGoalDestructibleActorDestroyed;        // 0x7E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionBreakableObjectStartBreak;                // 0x7F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionNotifyGeneralData;                        // 0x800(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionResultSceneCountdownFinished;             // 0x810(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnResultEventStarted;                              // 0x820(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnResultEventFinished;                             // 0x830(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnBaseCampToMenu;                                  // 0x840(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMenuToBaseCamp;                                  // 0x850(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnBaseCampToMultiCamp;                             // 0x860(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMultiCampToBaseCamp;                             // 0x870(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMultiCampToMultiCamp;                            // 0x880(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMultiCampToMultiCampByClientOnly;                // 0x890(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  StartLoadingUI;                                    // 0x8A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  ContinueLoadingUI;                                 // 0x8B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  FinishLoadingUI;                                   // 0x8C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  GameInitializeStep;                                // 0x8D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  ResetUILevelCamera;                                // 0x8E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnBaseCampToIceScene;                              // 0x8F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnIceSceneToBaseCamp;                              // 0x900(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnSecretPartsSceneToBaseCamp;                      // 0x910(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	uint8                                        Pad_24EE[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnGettingInformationGimmick;                       // 0x930(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLeavePlayerState;                                // 0x940(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnStartTsubazeriai;                                // 0x950(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnSetupNPCVoiceTalkHud;                            // 0x960(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnChangeVisibleNPCVoiceTalkHud;                    // 0x970(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnSetTextNPCVoiceTalkHud;                          // 0x980(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnUpdateCampNPCVoiceHeadAnimInstance;              // 0x990(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnStopCampNPCLipSync;                              // 0x9A0(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnShieldShiftCreated;                              // 0x9B0(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	enum class ETTLDevelopmentState              DevState;                                          // 0x9C0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24EF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        DebugLevel;                                        // 0x9C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DebugLevelParam;                                   // 0x9C8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24F0[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLMultiplayCondition                LastMultiplayCondition;                            // 0x9E0(0x20)(NativeAccessSpecifierPublic)
	struct FTTLMissionSettingsRow                CurrentMissionSetting;                             // 0xA00(0x188)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FTTLMissionInformation                CurrentMissionInfomation;                          // 0xB88(0x250)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FTTLStageSettingsRow                  CurrentStageSetting;                               // 0xDD8(0x1B8)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FTTLStageConditionsRow                CurrentStageCondition;                             // 0xF90(0x30)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         IsPlayingLevelSequence;                            // 0xFC0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24F1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        AllLockonActors;                                   // 0xFC8(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        AllPawns;                                          // 0xFD8(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        AllProjectiles;                                    // 0xFE8(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        AllHeatSources;                                    // 0xFF8(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        AllTargetsForGravityGun;                           // 0x1008(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        AllWarningArea;                                    // 0x1018(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLHateTargetActor>           AllAllyNPCTargets;                                 // 0x1028(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        AllBreakableObjects;                               // 0x1038(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLHateTargetActor>           HateTargetCandidates;                              // 0x1048(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        HateTargetCharacterCommons;                        // 0x1058(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        AllShieldShiftActors;                              // 0x1068(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_24F2[0xB8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLKeepOutArea>               KeepOutAreaList;                                   // 0x1130(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FTTLMissionGroup>              MissionGroups;                                     // 0x1140(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        MissionDestructibleActors;                         // 0x1150(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        MissionCatchableActors;                            // 0x1160(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLGeneralGroup>              GeneralGroups;                                     // 0x1170(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLGeneralGroup>              InsuranceGroups;                                   // 0x1180(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLTargetAreaGroup>           TargetAreaActors;                                  // 0x1190(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class ATTLCommunicationTalkControlActor*     CommunicationTalkControlActor;                     // 0x11A0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          SpecialJoinNPCIDList;                              // 0x11A8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FTTLFader                             LoadingFader;                                      // 0x11B8(0x58)(NativeAccessSpecifierPublic)
	struct FTTLFader                             PauseMenuFader;                                    // 0x1210(0x58)(NativeAccessSpecifierPublic)
	struct FTTLFader                             DemoFader;                                         // 0x1268(0x58)(NativeAccessSpecifierPublic)
	struct FTTLFader                             PlayerArsenalFader;                                // 0x12C0(0x58)(NativeAccessSpecifierPublic)
	struct FTTLFader                             RetryMenuFader;                                    // 0x1318(0x58)(NativeAccessSpecifierPublic)
	class UMaterialParameterCollection*          LeafMaterialParameter;                             // 0x1370(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFader                             BgmDistanceFader;                                  // 0x1378(0x58)(NativeAccessSpecifierPublic)
	bool                                         IsEnableMissionPreFinished;                        // 0x13D0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24F3[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsMissionFinished;                                 // 0x13D2(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24F4[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        BaseCampArsenalActors;                             // 0x13D8(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         IsOptionMenu;                                      // 0x13E8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24F5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        HudCustomSelectItem;                               // 0x13EC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24F6[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RemainingTime;                                     // 0x13F8(0x4)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24F7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ETTLELevelState                   CurrentState;                                      // 0x1404(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24F8[0x2B];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLArsenalPartsInfoList              ArsenalPartsInfoAtFinishingMission;                // 0x1430(0x310)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLArsenalAllWeaponInfo              ArsenalWeaponInfoAtFinishingMission;               // 0x1740(0x130)(NativeAccessSpecifierPublic)
	struct FTTLArsenalPaintInfo                  ArsenalPaintInfoAtFinishingMission;                // 0x1870(0x310)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24F9[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLPVPEventArsenalParam>      PvPVictoryEventArsenalParams;                      // 0x1B90(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FTTLMissionResultInfo                 MissionResultInfo;                                 // 0x1BA0(0x7)(BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_24FA[0x31];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnCoopAtkIncrese;                                  // 0x1BD8(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnCoopAtkDecrease;                                 // 0x1BE8(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	class UTTLCoopAttackCore*                    CoopAttackDirector;                                // 0x1BF8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_24FB[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLGameState* GetDefaultObj();

	void UpdateRankingScoreData(int32 RatingValue);
	void UpdateRankingCommonData();
	void UpdateMissionRankingScore();
	void UnregisterMissionDestructibleActor(class AActor* DestroyedActor);
	void SetTerminalTopOnlineMode(bool OnlineMode);
	void RegisterMissionDestructibleActor(class AActor* SpawnedActor);
	void RefreshReservedSubGoals();
	void OnSetupLevelToRanking(class FName LevelName);
	void OnPointRanking_UpdateScoreComplete(bool WasSuccessful);
	void OnPointRanking_UpdateCommonDataComplete(bool WasSuccessful);
	void OnPauseMenuOpened();
	void OnPauseMenuClosed();
	void OnOptionMenuOpened();
	void OnOptionMenuClosed();
	void OnMissionStartedFromDelegate();
	void OnMissionRanking_UpdateScoreComplete(bool WasSuccessful);
	void OnMissionFinishedToRanking(enum class ETTLEMissionResult MissionResult);
	void OnMissionExtensionTimeStart();
	void OnMissionExtensionTimeEnd();
	void OnMissionEvaluationScreenEnd();
	void OnLoadingStarted();
	void OnLoadingFinished();
	void OnLightLoadingStarted();
	void OnLightLoadingFinished();
	void OnGetAftorStatsComplete(bool WasSuccessful, int32 RatingValue, int32 DisconnectionRate);
	void OnEndMatchmakeRoundComplete(bool WasSuccessful, int32 RatingValue, int32 DisconnectionRate);
	void OnDebugSetPrizeAmountComplete(bool WasSuccessful, int32 RatingValue, int32 DisconnectionRate);
	void OnCalledMissionStart();
	void NeedRaderRefreshState();
	void MulticastSetMissionGroupVisible(class FName GroupTag, bool IsVisible);
	void MulticastSetLevelState(enum class ETTLELevelState NewLevelState);
	void MulticastSetEventState(enum class ETTLEvManState NewEventState);
	void MulticastGoToMissionFromBaseCamp(class FName LevelName);
	bool GetTerminalTopOnlineMode();
	struct FTTLPVPResultParam GetPVPResultParam();
	struct FTransform GetEmptyBaseCampPlayerStartTransform(class APlayerController* TargetPlayerControl);
	class APlayerStart* GetEmptyBaseCampPlayerStart(class APlayerController* TargetPlayerControl);
	void EndMatchmakeRound(enum class ETTLEMissionResult MissionResult);
	void EndDuelRound(TArray<struct FTTLRateAndPrincipalID>& RateAndPrincipalIDArray);
	void ClearLog();
	void ChangeAutoMultiplayStateInit(bool RetBaseCamp);
	bool CanBulletFriendFire();
	void BroadcastOnMissionUpdated(class FName EncounterEventID, class FName MissionLevelName);
	void BroadcastOnMissionTimerChanged(float CurrentTimer, bool IsVisibleHUD);
	void BroadcastOnMissionResultSceneCountdownFinished();
	void BroadcastOnMissionPreFinished(bool IsEnable);
	void BroadcastOnMissionPlayersDead();
	void BroadcastOnMissionEvaluationScreenFinished();
	void BroadcastOnMissionDuelEvaluationScreenFinished();
	void BroadcastOnMenuFinished();
};

// 0x38 (0x378 - 0x340)
// Class DXM.TTLGetOnOffCamera
class ATTLGetOnOffCamera : public ATTLActor
{
public:
	float                                        CameraRotationSpeed;                               // 0x340(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24FC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCameraComponent*                      CameraComponent;                                   // 0x348(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                TargetMesh;                                        // 0x350(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               TargetPoint;                                       // 0x358(0xC)(IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_24FD[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLGetOnOffCamera* GetDefaultObj();

	void SetTargetMesh(class USkeletalMeshComponent* TargetMesh);
	void SetLookTargetPoint(struct FVector& TargetPoint);
};

// 0x338 (0xE30 - 0xAF8)
// Class DXM.TTLGravityGunBullet
class ATTLGravityGunBullet : public ATTLBulletBase
{
public:
	class AActor*                                TargetActor;                                       // 0xAF8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_24FE[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           BulletVFX;                                         // 0xB08(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           EndVFX;                                            // 0xBA0(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           SwallowUpVFX;                                      // 0xC38(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           DamageVFX;                                         // 0xCD0(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        BulletVFXPlayBack;                                 // 0xD68(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_24FF[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HitRadius;                                         // 0xD9C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MeshRadius;                                        // 0xDA0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SequenceRadius;                                    // 0xDA4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SwallowUpRate;                                     // 0xDA8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CollisionStartTime;                                // 0xDAC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2500[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLGravityTargetList>         DamageTargetList;                                  // 0xDE8(0x10)(ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class AActor*>                        SwallowUpList;                                     // 0xDF8(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         IsSpeedFixOn;                                      // 0xE08(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2501[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SpeedFixDifferenceRate;                            // 0xE0C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsForwardFixOn;                                    // 0xE10(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2502[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLTickHomingCalculator*              HomingCalculator;                                  // 0xE18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2503[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLGravityGunBullet* GetDefaultObj();

	void InitDynamicGravityBulletList(class UObject* WorldContextObject);
	void FiniteDynamicGravityBulletList();
};

// 0x20 (0x5E0 - 0x5C0)
// Class DXM.TTLGrenade
class ATTLGrenade : public ATTLSupportWeaponBase
{
public:
	TSubclassOf<class AActor>                    GrenadeClass;                                      // 0x5C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              PodMaterial;                                       // 0x5C8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          PodMaterialColor;                                  // 0x5D0(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ATTLGrenade* GetDefaultObj();

	class AActor* SpawnGrenade();
};

// 0x10 (0xEF0 - 0xEE0)
// Class DXM.TTLGuardDronePawn
class ATTLGuardDronePawn : public ATTLBaseDronePawn
{
public:
	TSubclassOf<class ATTLWeaponShield>          ShieldClass;                                       // 0xEE0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2504[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLGuardDronePawn* GetDefaultObj();

	void MulticastBreakShield();
};

// 0x70 (0x4A8 - 0x438)
// Class DXM.TTLHandGrenade
class ATTLHandGrenade : public ATTLProjectileBase
{
public:
	class UProjectileMovementComponent*          ProjectileMovement;                                // 0x438(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                GrenadeMesh;                                       // 0x440(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLExplosionActor>        ExplosionClass;                                    // 0x448(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeDamage;                                     // 0x450(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeTime;                                       // 0x454(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeRadius;                                     // 0x458(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMPRiseOnExplode;                                  // 0x45C(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeMinDamageScale;                             // 0x460(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxExplodeDamageRadius;                            // 0x464(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeAbnormalValue;                              // 0x468(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GrenadeSpeed;                                      // 0x46C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2506[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UAnimationAsset>        RollingAnimation;                                  // 0x478(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimationAsset*                       IdleAnimation;                                     // 0x4A0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ATTLHandGrenade* GetDefaultObj();

	void PlayRollingAnimation();
	void PlayIdleMotion();
	void OnGrenadeHit(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void LaunchGrenade(struct FVector& Direction);
};

// 0x18 (0x340 - 0x328)
// Class DXM.TTLHateDeliverActor
class ATTLHateDeliverActor : public AActor
{
public:
	TArray<struct FTTLHateDeliverSetting>        HateDeliverSettings;                               // 0x328(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	uint8                                        Pad_2507[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLHateDeliverActor* GetDefaultObj();

	void DeliverHate(class AActor* InstigatedActor, class AActor* DamagedActor);
	void AddHateDeliverSetting(const struct FTTLHateDeliverSetting& Setting);
};

// 0xD0 (0xC60 - 0xB90)
// Class DXM.TTLHealBullet
class ATTLHealBullet : public ATTLExplosionBullet
{
public:
	float                                        SpinSpeedRate;                                     // 0xB90(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2509[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ForStopTime;                                       // 0xBB4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_250A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           FxDestroyEffect;                                   // 0xBC0(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_250B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLHealBullet* GetDefaultObj();

	void OnBulletDamage(class AActor* DamagedActor, float DamageValue, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
};

// 0xB8 (0x778 - 0x6C0)
// Class DXM.TTLHealSpaceActor
class ATTLHealSpaceActor : public ATTLFiniteExplosionActorBase
{
public:
	struct FTTLFxParam                           FxFinish;                                          // 0x6C0(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_250C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UMaterialInstanceDynamic*>      ExplosionMaterial;                                 // 0x760(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_250D[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLHealSpaceActor* GetDefaultObj();

	void InitializeDynamicHealSpaceList(class UObject* WorldContextObject);
	void FinalizeDynamicHealSpaceList();
};

// 0x2E0 (0x620 - 0x340)
// Class DXM.TTLHeatSourceObject
class ATTLHeatSourceObject : public ATTLActor
{
public:
	class UStaticMeshComponent*                  WreckMesh;                                         // 0x340(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                SkeletalWreckMesh;                                 // 0x348(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  HeatCollision;                                     // 0x350(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  BurnCollision;                                     // 0x358(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              HeatEffect;                                        // 0x360(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       HeatEffectOnAir;                                   // 0x368(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       HeatEffectOnLand;                                  // 0x370(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           HeatFXOnLand;                                      // 0x378(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           HeatFXOnAir;                                       // 0x410(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           HeatExplosionFX;                                   // 0x4A8(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class FName>                          ExplosionSockets;                                  // 0x540(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        DisappearDelay;                                    // 0x550(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VFXSpawnRate;                                      // 0x554(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               VFXScaleOnLand;                                    // 0x558(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2513[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlayback                        HeatFxPlayback;                                    // 0x568(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UAnimationAsset*                       DestroyAnimation;                                  // 0x580(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLHeatSourceParameter               HeatParameterOnLand;                               // 0x588(0x2C)(Edit, BlueprintVisible, Net, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLHeatSourceParameter               HeatParameterOnAir;                                // 0x5B4(0x2C)(Edit, BlueprintVisible, Net, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         HasWreck;                                          // 0x5E0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsLanded;                                          // 0x5E1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2514[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               HeatSourceVelocity;                                // 0x5E4(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Gravity;                                           // 0x5F0(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2515[0x24];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLHeatSourceObject* GetDefaultObj();

	void PlayHeatVFXForArsenal(class AActor* ArsenalToPlay);
	void OnLanded();
	void OnHeatSphereEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnHeatSphereBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnDamaged(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void OnBurnSphereEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnBurnSphereBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void MulticastExplosionOnDisappear();
	void InitializeDynamicHeatSourceList(class UObject* WorldContextObject);
	void FinalizeDynamicHeatSourceList();
	void DestroySelf();
	class ATTLHeatSourceObject* CreateDynamicHeatSource(class UObject* WorldContextObject, TSubclassOf<class ATTLHeatSourceObject> ObjectClass, const struct FTransform& Transform, struct FTTLHeatSourceParameter& LandParameter, struct FTTLHeatSourceParameter& AirParameter);
};

// 0x0 (0x28 - 0x28)
// Class DXM.TTLHitEffectInterface
class ITTLHitEffectInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ITTLHitEffectInterface* GetDefaultObj();

	void PlayHitVFXNormally(struct FVector& HitLocation, struct FVector& HitDirection, float FinalDamage, class UPrimitiveComponent* HitComponent);
	void PlayEnviromentHitVFX(struct FHitResult& HitResult);
};

// 0x18 (0x110 - 0xF8)
// Class DXM.TTLHitManageComponent
class UTTLHitManageComponent : public UTTLActorComponent
{
public:
	uint8                                        ReleaseFrame;                                      // 0xF8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2517[0x17];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLHitManageComponent* GetDefaultObj();

};

// 0x10 (0x218 - 0x208)
// Class DXM.TTLHUDAreaWarning
class UTTLHUDAreaWarning : public UUserWidget
{
public:
	uint8                                        Pad_2518[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLHUDAreaWarning* GetDefaultObj();

	void StopAnimationLoop();
	void SetWidgetVisibility(enum class ESlateVisibility NewVisibility);
	void SetUpWarningInfo(struct FTTLWarningInfo& WarningInfo, class FText& WarningText);
	void PlayAnimationLoop();
	void OnOutAnimationFinished();
};

// 0xB0 (0x2B8 - 0x208)
// Class DXM.TTLHUDGaugeWidget
class UTTLHUDGaugeWidget : public UUserWidget
{
public:
	float                                        EffectIncreaseSpeed;                               // 0x208(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EffectHoldSeconds;                                 // 0x20C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HeaderTextName;                                    // 0x210(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ValueGaugeName;                                    // 0x218(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  IncreaseGaugeName;                                 // 0x220(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DecreaseGaugeName;                                 // 0x228(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableGaugeColorChange;                          // 0x230(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_251A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          GaugeNormalColor;                                  // 0x234(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          GaugeNearDestroyColor;                             // 0x244(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NearDestroyBorder;                                 // 0x254(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_251B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UProgressBar*                          ValueGauge;                                        // 0x260(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProgressBar*                          IncreaseGauge;                                     // 0x268(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProgressBar*                          DecreaseGauge;                                     // 0x270(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                BlindImage;                                        // 0x278(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            HeaderTextBlock;                                   // 0x280(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            CurrentValueTextBlock;                             // 0x288(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            MaxValueTextBlock;                                 // 0x290(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_251C[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLHUDGaugeWidget* GetDefaultObj();

	void SetValuesText(int32 CurrentValue, int32 MaxValue);
	void SetValue(float NewValue, bool UseIncreaseEffect, bool UseDecreaseEffect);
	void SetHeaderText(class FText HeaderText);
	void ResetGaugeEffect();
};

// 0x30 (0x2E8 - 0x2B8)
// Class DXM.TTLHUDArsenalHPGauge
class UTTLHUDArsenalHPGauge : public UTTLHUDGaugeWidget
{
public:
	class FName                                  TitleTextName;                                     // 0x2B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CurrentValueTextName;                              // 0x2C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MaxValueTextName;                                  // 0x2C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            CurrentHPValueTextBlock;                           // 0x2D0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            MaxHPValueTextBlock;                               // 0x2D8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_251D[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLHUDArsenalHPGauge* GetDefaultObj();

	void SetValues(int32 NewCurrentValue, int32 NewMaxValue);
	class UTextBlock* GetMaxValueTextWidget();
	class UTextBlock* GetCurrentValueTextWidget();
};

// 0x98 (0x2A0 - 0x208)
// Class DXM.TTLHUDArsenalRackWeapon
class UTTLHUDArsenalRackWeapon : public UUserWidget
{
public:
	TSubclassOf<class UUserWidget>               UIClass;                                           // 0x208(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_UseRight;                                // 0x210(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_UseLeft;                                 // 0x218(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_ChangeRight;                             // 0x220(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_ChangeLeft;                              // 0x228(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2522[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTextBlock*                            NameTextBlock;                                     // 0x238(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                IconImageRight;                                    // 0x240(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                IconImageLeft;                                     // 0x248(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            PartNameRightTextBlock;                            // 0x250(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            PartNameLeftTextBlock;                             // 0x258(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                KayAssignIconImageRight;                           // 0x260(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                KayAssignIconImageLeft;                            // 0x268(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHorizontalBox*                        ValuesHorizontalBox;                               // 0x270(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            CurrentValueTextBlock;                             // 0x278(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            MaxValueTextBlock;                                 // 0x280(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            SeparatorTextBlock;                                // 0x288(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UProgressBar*                          ValueGauge;                                        // 0x290(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                SeparatorImage;                                    // 0x298(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLHUDArsenalRackWeapon* GetDefaultObj();

	void SetNameText(class FText NewText);
	void SetKeyAssign(enum class ETTLKeyAssignIcon KeyAssign, bool IsLeftRack);
	void SetIconImage(class UObject* IconImage, bool IsLeftRack);
	void SetEquipState(bool IsEquipped);
	void PlayWidgetAnimation(enum class ETTLEHUDArsenalRackWeaponAnimation WeaponAnimation);
	class UHorizontalBox* GetValuesHorizontalBox();
	class UProgressBar* GetValueGauge();
	class UTextBlock* GetSeparatorTextBlock();
	class UImage* GetSeparatorImage();
	class UTextBlock* GetPartNameTextBlock(bool IsLeftRack);
	class UTextBlock* GetNameTextBlock();
	class UTextBlock* GetMaxValueTextBlock();
	class UImage* GetKeyAssignImage(bool IsLeftRack);
	class UImage* GetIconImage(bool IsLeftRack);
	class UTextBlock* GetCurrentValueTextBlock();
};

// 0x10 (0x218 - 0x208)
// Class DXM.TTLHUDArsenalThrowAwayWeapon
class UTTLHUDArsenalThrowAwayWeapon : public UUserWidget
{
public:
	class UTextBlock*                            TitleTextBlock;                                    // 0x208(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                KeyAssignImage;                                    // 0x210(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLHUDArsenalThrowAwayWeapon* GetDefaultObj();

	void SetTitleText(class FText NewText);
	void SetKeyAssign(enum class ETTLKeyAssignIcon KeyAssign);
};

// 0x40 (0x248 - 0x208)
// Class DXM.TTLHUDArsenalTMPGauge
class UTTLHUDArsenalTMPGauge : public UUserWidget
{
public:
	uint8                                        Pad_2525[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTextBlock*                            HeaderTextBlock;                                   // 0x210(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            CurrentValueTextBlock;                             // 0x218(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            MaxValueTextBlock;                                 // 0x220(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProgressBar*                          NormalProgressBar;                                 // 0x228(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProgressBar*                          DamageProgressBar;                                 // 0x230(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProgressBar*                          RecoverProgressBar;                                // 0x238(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2526[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLHUDArsenalTMPGauge* GetDefaultObj();

	void SetValues(int32 NewCurrentValue, int32 NewMaxValue);
	void SetPointImagePosition(int32 Index, bool IsVisible, float Position);
	class UProgressBar* GetRecoverProgressBar();
	class UImage* GetPointImage(int32 Index);
	class UProgressBar* GetNormalProgressBar();
	class UTextBlock* GetMaxValueTextWidget();
	class UTextBlock* GetHeaderTextWidget();
	class UProgressBar* GetDamageProgressBar();
	class UTextBlock* GetCurrentValueTextWidget();
};

// 0x68 (0x270 - 0x208)
// Class DXM.TTLHUDArsenalWeapon
class UTTLHUDArsenalWeapon : public UUserWidget
{
public:
	TSubclassOf<class UUserWidget>               UIClass;                                           // 0x208(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_Ammo00;                                  // 0x210(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_Ammo01;                                  // 0x218(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_In;                                      // 0x220(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_ChangeRight;                             // 0x228(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_ChangeLeft;                              // 0x230(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShowFailedMessageRestSeconds;                      // 0x238(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2528[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLHUDArsenalRackWeapon*              RackWeaponWidgetLeft;                              // 0x240(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLHUDArsenalRackWeapon*              RackWeaponWidgetRight;                             // 0x248(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLHUDArsenalThrowAwayWeapon*         ThrowAwayWeaponWidget;                             // 0x250(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            WeaponNameTextBlock;                               // 0x258(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            FailedMessageTextBlock;                            // 0x260(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                IconImage;                                         // 0x268(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLHUDArsenalWeapon* GetDefaultObj();

	void ShowFailedMessage(enum class ETTLFailedChangeWeaponReason Reason);
	void PlayWidgetAnimation(enum class ETTLEHUDArsenalWeaponAnimation WeaponAnimation);
	class UTextBlock* GetWeaponNameWidget();
	class UTTLHUDArsenalThrowAwayWeapon* GetThrowAwayWeaponWidget();
	class UTTLHUDArsenalRackWeapon* GetRackWeaponWidget(bool IsLeft);
	class UImage* GetIconImageWidget();
	class UTextBlock* GetFailedMessageWidget();
};

// 0x90 (0x298 - 0x208)
// Class DXM.TTLHUDCharacterInfo
class UTTLHUDCharacterInfo : public UUserWidget
{
public:
	class UWidgetAnimation*                      Animation_AllyArsenal;                             // 0x208(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_EnemyArsenal;                            // 0x210(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_OtherCharacter;                          // 0x218(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_AllyArsenal_AppendText;                  // 0x220(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_EnemyArsenal_AppendText;                 // 0x228(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_OtherCharacter_AppendText;               // 0x230(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_EnemyArsenal_AppendGauge;                // 0x238(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_EnemyArsenal_AppendPrize;                // 0x240(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_EnemyArsenal_AppendPrizeAndGauge;        // 0x248(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLHUDGaugeWidget*                    GaugeWidget;                                       // 0x250(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            Text1Widget_Black;                                 // 0x258(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            Text1Widget_Red;                                   // 0x260(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                              BulletWidget_Black;                                // 0x268(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                              BulletWidget_Red;                                  // 0x270(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                Text2HeadWidget;                                   // 0x278(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            Text2Widget;                                       // 0x280(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            Text3Widget;                                       // 0x288(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            PrizeTextWidget;                                   // 0x290(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLHUDCharacterInfo* GetDefaultObj();

	void SetText3(class FText NewText);
	void SetText2(class FText NewText);
	void SetText1OutlineColor(enum class ETTLHUDCharacterInfoOutlineColor NewColor);
	void SetText1(class FText NewText);
	void SetPrizeText(class FText NewText);
	void PlayWidgetAnimation(enum class ETTLHUDCharacterInfoAnimation NewAnimation);
	class UTextBlock* GetText3Widget();
	class UTextBlock* GetText2Widget();
	class UImage* GetText2Head();
	class UTextBlock* GetPrizeTextWidget();
	class UTTLHUDGaugeWidget* GetGaugeWidget();
};

// 0x10 (0x38 - 0x28)
// Class DXM.TTLHudCustomDataManager
class UTTLHudCustomDataManager : public UObject
{
public:
	TArray<struct FTTLHudCustomParamRow>         HudCustomParamArray;                               // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLHudCustomDataManager* GetDefaultObj();

	void Initialize();
	int32 GetHudCustom(int32 Num);
};

// 0x0 (0x208 - 0x208)
// Class DXM.TTLHUDDamaged
class UTTLHUDDamaged : public UUserWidget
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDDamaged* GetDefaultObj();

};

// 0x18 (0x220 - 0x208)
// Class DXM.TTLHUDDuelMember
class UTTLHUDDuelMember : public UUserWidget
{
public:
	class UWidgetAnimation*                      Animation_On;                                      // 0x208(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_Off0;                                    // 0x210(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_Off1;                                    // 0x218(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLHUDDuelMember* GetDefaultObj();

};

// 0x20 (0x348 - 0x328)
// Class DXM.TTLHUDEntity
class ATTLHUDEntity : public AActor
{
public:
	uint8                                        Pad_2529[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLHUDEntity* GetDefaultObj();

};

// 0x38 (0x240 - 0x208)
// Class DXM.TTLHUDFemtoShiftGauge
class UTTLHUDFemtoShiftGauge : public UUserWidget
{
public:
	class UWidgetAnimation*                      Animation_Loop;                                    // 0x208(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_Out;                                     // 0x210(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_252A[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UImage*                                GaugeImage;                                        // 0x228(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                GaugeFullImage;                                    // 0x230(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                BaseImage;                                         // 0x238(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLHUDFemtoShiftGauge* GetDefaultObj();

};

// 0x8 (0x210 - 0x208)
// Class DXM.TTLHUDGoalItem
class UTTLHUDGoalItem : public UUserWidget
{
public:
	class UWidgetAnimation*                      Animation_In;                                      // 0x208(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLHUDGoalItem* GetDefaultObj();

	void SetTitleText(class FText NewText);
	void SetIcon2(enum class ETTLResultIconType NewIconType);
	void SetIcon1(enum class ETTLResultIconType NewIconType);
	void SetBackground(enum class ETTLGoalItemBackgroundType NewBackgroundType);
	void PlayWidgetAnimation(enum class ETTLHUDGoalItemAnimation Animation);
};

// 0x40 (0x248 - 0x208)
// Class DXM.TTLHUDJostle
class UTTLHUDJostle : public UUserWidget
{
public:
	class UWidgetAnimation*                      Animation_In;                                      // 0x208(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_Loop;                                    // 0x210(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_Push;                                    // 0x218(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_ColorWhite;                              // 0x220(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_ColorRed;                                // 0x228(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                GaugeImage;                                        // 0x230(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                KeyAssignImage;                                    // 0x238(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_252B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLHUDJostle* GetDefaultObj();

	void OnInAnimationFinished();
};

// 0x50 (0x258 - 0x208)
// Class DXM.TTLHUDLog
class UTTLHUDLog : public UUserWidget
{
public:
	class UWidgetAnimation*                      Animation_ChatIn;                                  // 0x208(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UTTLHUDLogItem>            ItemClass;                                         // 0x210(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_252E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UTTLHUDLogItem*>                LogItems;                                          // 0x220(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UWidget*                               ItemsWidget;                                       // 0x230(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidget*                               KeyAssignWidget;                                   // 0x238(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UTTLHUDLogItem*>                ItemBuffer;                                        // 0x240(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_252F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLHUDLog* GetDefaultObj();

	void SetText(class FText NewText);
	void SetKeyAssignVisibility(enum class ESlateVisibility NewVisibility);
	void SetKeyAssignText(class FText NewText);
	void SetKeyAssignIcon(enum class ETTLKeyAssignIcon KeyAssign);
	void SetItemsVisibility(enum class ESlateVisibility NewVisibility);
	void SetHeaderVisibility(enum class ESlateVisibility NewVisibility);
	int32 ItemNum();
	class UTTLHUDLogItem* GetItem(int32 Index);
	void DeleteItem(class UTTLHUDLogItem* LogItem);
	class UTTLHUDLogItem* AddItem(bool IsBack);
};

// 0x78 (0x280 - 0x208)
// Class DXM.TTLHUDLogItem
class UTTLHUDLogItem : public UUserWidget
{
public:
	int32                                        SortNumber;                                        // 0x208(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2530[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWidgetAnimation*                      Animation_NearDeath;                               // 0x210(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_GettingRespawned;                        // 0x218(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_CommonLogIn;                             // 0x220(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_ChatLogIn;                               // 0x228(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2531[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UImage*                                WarningBaseImage;                                  // 0x238(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLUICustomRichTextBlock*             TextBlock;                                         // 0x240(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                WarningIconImage;                                  // 0x248(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           DuelWarningIconWidget;                             // 0x250(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                DuelWarningIconBackImage;                          // 0x258(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                DuelWarningIconMainImage;                          // 0x260(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                              PrizeTop;                                          // 0x268(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLUICustomRichTextBlock*             PrizeTextBlock;                                    // 0x270(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBorder*                               TopBorderWidget;                                   // 0x278(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLHUDLogItem* GetDefaultObj();

	void StopWidgetAnimation(enum class ETTLHUDLogItemAnimation Animation);
	void SetWarningVisibility(enum class ESlateVisibility NewVisibility);
	void SetWarning(enum class ETTLWarningIcon NewWarningIcon, bool IsDuel);
	void SetText(class FText NewText);
	void SetMode(enum class ETTLHUDLogItemMode NewMode);
	void SetMineColor(bool IsMine);
	void PlayWidgetAnimation(enum class ETTLHUDLogItemAnimation Animation);
};

// 0x10 (0x218 - 0x208)
// Class DXM.TTLHUDMarker3
class UTTLHUDMarker3 : public UUserWidget
{
public:
	class UWidgetAnimation*                      Animation_In;                                      // 0x208(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_Direction;                               // 0x210(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLHUDMarker3* GetDefaultObj();

	void SetText(class FText NewText);
	void SetIcon(enum class ETTLWarningIcon NewIcon);
	void SetBackgroundColor(const struct FLinearColor& NewColor);
	void PlayWidgetAnimation(enum class EUTTLHUDMarker3Animation NewAnimation);
};

// 0x20 (0x228 - 0x208)
// Class DXM.TTLHUDMember
class UTTLHUDMember : public UUserWidget
{
public:
	TSubclassOf<class UTTLHUDLogItem>            ItemClass;                                         // 0x208(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2534[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UTTLHUDLogItem*>                LogItems;                                          // 0x218(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLHUDMember* GetDefaultObj();

	void SetItemsVisibility(enum class ESlateVisibility NewVisibility);
	int32 ItemNum();
	class UTTLHUDLogItem* GetItem(int32 Index);
	void DeleteItem(class UTTLHUDLogItem* LogItem);
	class UTTLHUDLogItem* AddItem(enum class ESlateVisibility DefaultVisibility);
};

// 0x8 (0x210 - 0x208)
// Class DXM.TTLHUDMinimap
class UTTLHUDMinimap : public UUserWidget
{
public:
	uint8                                        Pad_2535[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLHUDMinimap* GetDefaultObj();

};

// 0xB0 (0x4C8 - 0x418)
// Class DXM.TTLHUDMission
class ATTLHUDMission : public AHUD
{
public:
	TSubclassOf<class UBlueprint>                NoticeGeneralClass;                                // 0x418(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class ATTLNoticeMissionExtensionTime> NoticeMissionExtensionTimeActor;                   // 0x420(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class ATTLNoticeGeneral>      NoticeInvalidBattleTimeActor;                      // 0x428(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2539[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UUserWidget*                           FadeOutWidget;                                     // 0x438(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSkipMissionCompleteAnim;                         // 0x440(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_253A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UUserWidget>               ItemMakerHUDClass;                                 // 0x448(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_253B[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UUserWidget*>                   OwnedWidgets;                                      // 0x470(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                         IsHideHUDOnMissionFinished;                        // 0x480(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_253C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLDamagePopupControlComponent*       DamagePopupControl;                                // 0x488(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           HudTop00Widget;                                    // 0x490(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UUserWidget>             BlackFadeClass;                                    // 0x498(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           BlackFadePtr;                                      // 0x4C0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ATTLHUDMission* GetDefaultObj();

	void SetVisibilityAllOwnedWidgetsForCallBP(enum class ESlateVisibility Visibility);
	bool PlayBlackFadeOut();
	float PlayBlackFadeIn(float StartAtTime);
	void OnResultEventStarted(enum class ETTLEMissionResult MissionResult);
	void OnResultEventFinished();
	void OnOpenedRetrySelectPopUp();
	void OnMissionStarted();
	void OnMissionPlayerChanged();
	void OnMissionGameover();
	void OnMissionFinished(enum class ETTLEMissionResult MissionResult);
	void OnMissionFadeOutScreenFinished();
	void OnMissionExtensionTimeStarted();
	void OnMissionExtensionTimeFinished();
	void OnMissionEventStarted(class FName EventName);
	void OnMissionEventFinished(class FName EventName, enum class ETTLEventFinishedType EventFinishedType);
	void OnMissionEvaluationScreenFinished();
	void OnMissionEndingEventStarted(enum class ETTLEMissionResult MissionResult);
	void OnMissionEndingEventFinished();
	void OnMissionDuelEvaluationScreenStarted();
	void OnMissionDuelEvaluationScreenFinished();
	void OnMenuStarted();
	void OnMenuFinished();
	void OnLongInputForMissionExtensionTime(enum class ETTLEActionType ActionType, float Duration);
	void OnLevelStarted();
	void OnLevelLoadStarted();
	void OnLevelFinished();
	void OnEndAnim_PlayBlackFade();
	void OnClosedRetrySelectPopUp();
	void OnClosedNoticeActorInvalidBattle();
	void OnClosedNoticeActor();
	bool IsSessionHost();
	class FText GetMissionCompleteTextPvpWinLose(enum class ETTLEMissionResult Result);
	void FinishedMissionLevelProcess();
};

// 0x170 (0x378 - 0x208)
// Class DXM.TTLHUDMissionMain
class UTTLHUDMissionMain : public UUserWidget
{
public:
	bool                                         IsInited;                                          // 0x208(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsArsenalMode;                                     // 0x209(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableShowMissionProgress;                       // 0x20A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2545[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UTTLHUDRestTarget>         HUDMissionProgressClass;                           // 0x210(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2546[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        WarningHUDMax;                                     // 0x238(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2547[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UUserWidget>               WarningHUDItemClass;                               // 0x240(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      WarningHUDStartAnimation;                          // 0x248(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTTLWarningHUD>                WarningHUDs;                                       // 0x250(0x10)(Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_2548[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLHUDMissionMainCommandExecutor*     HUDCommandExecuterForHUDModeControll;              // 0x298(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLHUDMissionMainCommandExecutor*     HUDCommandExecuterForArsenalWeaponHUD;             // 0x2A0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLHUDMissionMainCommandExecutor*     HUDCommandExecuterForMissionProgress;              // 0x2A8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLMultiplayDuelControlComponent*     MultiplayDuelControlComponent;                     // 0x2B0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2549[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLHUDMember*                         HudMembers;                                        // 0x2C0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLHUDLog*                            HUDLog;                                            // 0x2C8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLHUDArsenalHPGauge*                 HUDArsenalHPGauge;                                 // 0x2D0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLHUDArsenalTMPGauge*                HUDArsenalTMPGauge;                                // 0x2D8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLHUDArsenalTMPGauge*                HUDArsenalFemtoGauge;                              // 0x2E0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLHUDJostle*                         HUDJostle;                                         // 0x2E8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UTTLHUDRestTarget*>             HUDMissionProgresses;                              // 0x2F0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UTTLHUDAreaWarning*                    HUDAreaWarning;                                    // 0x300(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLHUDPartsGauge*                     LegsPartsGauge;                                    // 0x308(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLHUDPartsGauge*                     ArmRightPartsGauge;                                // 0x310(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLHUDPartsGauge*                     ChestPartsGauge;                                   // 0x318(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLHUDPartsGauge*                     ArmLeftPartsGauge;                                 // 0x320(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLHUDPartsGauge*                     HeadPartsGauge;                                    // 0x328(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLHUDFemtoShiftGauge*                AssultFemtoShiftGauge;                             // 0x330(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLHUDFemtoShiftGauge*                WingFemtoShiftGauge;                               // 0x338(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLHUDFemtoShiftGauge*                ShieldFemtoShiftGauge;                             // 0x340(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                WeaponSideBar;                                     // 0x348(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLHUDArsenalWeapon*                  ShoulderWeaponHUD;                                 // 0x350(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLHUDArsenalWeapon*                  LeftWeaponHUD;                                     // 0x358(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLHUDArsenalWeapon*                  RightWeaponHUD;                                    // 0x360(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLHUDArsenalWeapon*                  AuxiliaryWeaponHUD;                                // 0x368(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVerticalBox*                          WarningTopWidget;                                  // 0x370(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLHUDMissionMain* GetDefaultObj();

	void TTLHUD_Destroy_DummyMembers(class UTTLHUDMember* HudMembers);
	void TTLHUD_Create_DummyMembers(class UTTLHUDMember* HudMembers);
	void SetWeaponID(enum class ETTLArsenalHUDWeaponKind WeaponKind, class ATTLWeaponBase* WeaponBase);
	void RemoveWarning(enum class ETTLWarningTypeForArsenalHUD WarningType, bool ForceRemove);
	void OnMissionAddSuccessDuelRequest(class ATTLPlayerState* RequestState, class ATTLPlayerState* NominatedState, TArray<class ATTLPlayerState*>& PlayerStates);
	void OnDeleteMessageLogItem(const struct FTTLMessageLogItem& MessageLogItem);
	void OnChangedInputDevice(enum class ETTLEInputDeviceType NewInputDeviceType);
	void OnAddMessageLogItem(const struct FTTLMessageLogItem& MessageLogItem);
	bool IsOptionMenu();
	bool IsFriendInfoDisp();
	bool IsChatDisp();
	bool IsChangedWeaponID(enum class ETTLArsenalHUDWeaponKind WeaponKind, class ATTLWeaponBase* WeaponBase);
	void InitializeWidgetBP();
	void InitializeWidget();
	void InitializeWeaponHUDs();
	void InitializeWarning();
	void InitializePartsGauges();
	void InitializeFemtoShiftGauges();
	class UTTLHUDFemtoShiftGauge* GetWingFemtoShiftGauge();
	class UImage* GetWeaponSideBar();
	class UVerticalBox* GetWarningTopWidget();
	class FText GetWarningText(enum class ETTLWarningTypeForArsenalHUD WarningType);
	class UTTLHUDArsenalWeapon* GetShoulderWeaponHUD();
	class UTTLHUDFemtoShiftGauge* GetShieldFemtoShiftGauge();
	class UTTLHUDArsenalWeapon* GetRightWeaponHUD();
	class UTTLHUDRestTarget* GetMissionProgressWidget(int32 Index);
	class UTTLHUDPartsGauge* GetLegsPartsGauge();
	class UTTLHUDArsenalWeapon* GetLeftWeaponHUD();
	class UTTLHUDJostle* GetJostleWidget();
	int32 GetHudCustomSelectItem();
	class UTTLHUDAreaWarning* GetHUDAreaWarning();
	class UTTLHUDPartsGauge* GetHeadPartsGauge();
	class UTTLHUDPartsGauge* GetChestPartsGauge();
	class UTTLHUDArsenalWeapon* GetAuxiliaryWeaponHUD();
	class UTTLHUDFemtoShiftGauge* GetAssultFemtoShiftGauge();
	class UTTLHUDArsenalTMPGauge* GetArsenalTMPGaugeWidget();
	class UTTLHUDArsenalHPGauge* GetArsenalHPGaugeWidget();
	class UTTLHUDArsenalTMPGauge* GetArsenalFemtoGaugeWidget();
	class UTTLHUDPartsGauge* GetArmRightPartsGauge();
	class UTTLHUDPartsGauge* GetArmLeftPartsGauge();
	bool CheckLogVisibility();
	bool CheckLogKeyAssignVisibility();
	bool CheckLogItemsVisibility();
	void ApplyWarningToHUD(enum class ETTLWarningTypeForArsenalHUD WarningType, bool Enable);
	void AddWarning(enum class ETTLWarningTypeForArsenalHUD WarningType);
	void AddHUDCommandForMissionProgress(enum class ETTLHUDMissionMainCommandKind CommandKind, float DelaySeconds, const struct FTTLHUDMissionCommandParams& Params);
	void AddHUDCommandForHUDModeControll(enum class ETTLHUDMissionMainCommandKind CommandKind, float DelaySeconds, const struct FTTLHUDMissionCommandParams& Params);
	void AddHUDCommandForArsenalWeaponHUD(enum class ETTLHUDMissionMainCommandKind CommandKind, float DelaySeconds, const struct FTTLHUDMissionCommandParams& Params);
};

// 0x58 (0x80 - 0x28)
// Class DXM.TTLHUDMissionMainCommandBase
class UTTLHUDMissionMainCommandBase : public UObject
{
public:
	float                                        RestSeconds;                                       // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_254A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLHUDMissionCommandParams           CommandParams;                                     // 0x30(0x50)(NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLHUDMissionMainCommandBase* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class DXM.TTLHUDMissionMainCommand_ShowHUD
class UTTLHUDMissionMainCommand_ShowHUD : public UTTLHUDMissionMainCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDMissionMainCommand_ShowHUD* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class DXM.TTLHUDMissionMainCommand_HideHUD
class UTTLHUDMissionMainCommand_HideHUD : public UTTLHUDMissionMainCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDMissionMainCommand_HideHUD* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class DXM.TTLHUDMissionMainCommand_PlayInArsenalHUD
class UTTLHUDMissionMainCommand_PlayInArsenalHUD : public UTTLHUDMissionMainCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDMissionMainCommand_PlayInArsenalHUD* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class DXM.TTLHUDMissionMainCommand_PlayOutArsenalHUD
class UTTLHUDMissionMainCommand_PlayOutArsenalHUD : public UTTLHUDMissionMainCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDMissionMainCommand_PlayOutArsenalHUD* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class DXM.TTLHUDMissionMainCommand_PlayInOuterHUD
class UTTLHUDMissionMainCommand_PlayInOuterHUD : public UTTLHUDMissionMainCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDMissionMainCommand_PlayInOuterHUD* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class DXM.TTLHUDMissionMainCommand_PlayOutOuterHUD
class UTTLHUDMissionMainCommand_PlayOutOuterHUD : public UTTLHUDMissionMainCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDMissionMainCommand_PlayOutOuterHUD* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class DXM.TTLHUDMissionMainCommand_ShowOuterHUD
class UTTLHUDMissionMainCommand_ShowOuterHUD : public UTTLHUDMissionMainCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDMissionMainCommand_ShowOuterHUD* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class DXM.TTLHUDMissionMainCommand_HideOuterHUD
class UTTLHUDMissionMainCommand_HideOuterHUD : public UTTLHUDMissionMainCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDMissionMainCommand_HideOuterHUD* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class DXM.TTLHUDMissionMainCommand_SetUpMissionProgressHUD
class UTTLHUDMissionMainCommand_SetUpMissionProgressHUD : public UTTLHUDMissionMainCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDMissionMainCommand_SetUpMissionProgressHUD* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class DXM.TTLHUDMissionMainCommand_PlayInMissionProgressHUD
class UTTLHUDMissionMainCommand_PlayInMissionProgressHUD : public UTTLHUDMissionMainCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDMissionMainCommand_PlayInMissionProgressHUD* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class DXM.TTLHUDMissionMainCommand_PlayOutMissionProgressHUD
class UTTLHUDMissionMainCommand_PlayOutMissionProgressHUD : public UTTLHUDMissionMainCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDMissionMainCommand_PlayOutMissionProgressHUD* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class DXM.TTLHUDMissionMainCommand_ShowMissionProgressHUD
class UTTLHUDMissionMainCommand_ShowMissionProgressHUD : public UTTLHUDMissionMainCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDMissionMainCommand_ShowMissionProgressHUD* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class DXM.TTLHUDMissionMainCommand_HideMissionProgressHUD
class UTTLHUDMissionMainCommand_HideMissionProgressHUD : public UTTLHUDMissionMainCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDMissionMainCommand_HideMissionProgressHUD* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class DXM.TTLHUDMissionMainCommand_PlaySubGoalMissionProgressHUD
class UTTLHUDMissionMainCommand_PlaySubGoalMissionProgressHUD : public UTTLHUDMissionMainCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDMissionMainCommand_PlaySubGoalMissionProgressHUD* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class DXM.TTLHUDMissionMainCommand_OpenWeaponEquipHUD
class UTTLHUDMissionMainCommand_OpenWeaponEquipHUD : public UTTLHUDMissionMainCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDMissionMainCommand_OpenWeaponEquipHUD* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class DXM.TTLHUDMissionMainCommand_CloseWeaponEquipHUD
class UTTLHUDMissionMainCommand_CloseWeaponEquipHUD : public UTTLHUDMissionMainCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDMissionMainCommand_CloseWeaponEquipHUD* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class DXM.TTLHUDMissionMainCommand_Change1WeaponEquipHUD
class UTTLHUDMissionMainCommand_Change1WeaponEquipHUD : public UTTLHUDMissionMainCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDMissionMainCommand_Change1WeaponEquipHUD* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class DXM.TTLHUDMissionMainCommand_Change2WeaponEquipHUD
class UTTLHUDMissionMainCommand_Change2WeaponEquipHUD : public UTTLHUDMissionMainCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDMissionMainCommand_Change2WeaponEquipHUD* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class DXM.TTLHUDMissionMainCommand_ApplyArsenalHUDCustom
class UTTLHUDMissionMainCommand_ApplyArsenalHUDCustom : public UTTLHUDMissionMainCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDMissionMainCommand_ApplyArsenalHUDCustom* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class DXM.TTLHUDMissionMainCommand_ApplyHUDCustom
class UTTLHUDMissionMainCommand_ApplyHUDCustom : public UTTLHUDMissionMainCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDMissionMainCommand_ApplyHUDCustom* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class DXM.TTLHUDMissionMainCommand_WaitOnly
class UTTLHUDMissionMainCommand_WaitOnly : public UTTLHUDMissionMainCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDMissionMainCommand_WaitOnly* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class DXM.TTLHUDMissionMainCommandExecutor
class UTTLHUDMissionMainCommandExecutor : public UObject
{
public:
	TArray<class UTTLHUDMissionMainCommandBase*> HUDCommands;                                       // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLHUDMissionMainCommandExecutor* GetDefaultObj();

};

// 0x80 (0x288 - 0x208)
// Class DXM.TTLHUDMissionOuter
class UTTLHUDMissionOuter : public UUserWidget
{
public:
	uint8                                        Pad_254B[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLHUDGaugeWidget*                    HPGauge;                                           // 0x230(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            CurrentHPText;                                     // 0x238(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            MaxHPText;                                         // 0x240(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLHUDGaugeWidget*                    StaminaGauge;                                      // 0x248(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLHUDGaugeWidget*                    FemtoGauge;                                        // 0x250(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLHUDOuterWeapon2*                   ShotWeaponHUD;                                     // 0x258(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLHUDOuterWeapon2*                   TrapWeaponHUD;                                     // 0x260(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLHUDOuterWeapon2*                   GrenadeWeaponHUD;                                  // 0x268(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLHUDGaugeWidget*                    ArsenalHPGauge;                                    // 0x270(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLHUDGaugeWidget*                    ArsenalStaminaGauge;                               // 0x278(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLHUDGaugeWidget*                    ArsenalFemtoGauge;                                 // 0x280(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLHUDMissionOuter* GetDefaultObj();

};

// 0x10 (0x218 - 0x208)
// Class DXM.TTLHUDMissionProgress
class UTTLHUDMissionProgress : public UUserWidget
{
public:
	class UWidgetAnimation*                      Animation_In;                                      // 0x208(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        GoalItemCountMax;                                  // 0x210(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_254E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLHUDMissionProgress* GetDefaultObj();

	void SetTitle(class FText NewTitle);
	void SetSubTitleVisibility(bool IsVisible);
	void SetSubTitle(class FText NewSubTitle);
	void PlayWidgetAnimation(enum class ETTLHUDMissionProgressAnimation Animation);
	class UTTLHUDGoalItem* GetGoalItem(int32 Index);
	void ClearGoalItems();
	void AddGoalItem(class FText TitleText, enum class ETTLResultIconType Icon1, enum class ETTLResultIconType Icon2, enum class ETTLGoalItemBackgroundType background);
};

// 0x60 (0x268 - 0x208)
// Class DXM.TTLHUDMissionRadarOverlay
class UTTLHUDMissionRadarOverlay : public UUserWidget
{
public:
	struct FVector2D                             RaderSize;                                         // 0x208(0x8)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             PointOffset;                                       // 0x210(0x8)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_254F[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVector2D>                     AreaBorderPoints;                                  // 0x230(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2550[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVector2D>                     AreaWarningPoints;                                 // 0x250(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2551[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLHUDMissionRadarOverlay* GetDefaultObj();

	void UpdateAreaPoints();
	void SetRaderRadius(float Radius);
	float GetRaderRadius();
	void ClearAreaWarningPositions();
	void ClearAreaBorderPositions();
	void AddAreaWarningPosition(const struct FVector& AppendPosition);
	void AddAreaBorderPosition(const struct FVector& AppendPosition);
};

// 0x28 (0x230 - 0x208)
// Class DXM.TTLHUDMissionRader
class UTTLHUDMissionRader : public UUserWidget
{
public:
	uint8                                        Pad_2552[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLHUDMissionRader* GetDefaultObj();

};

// 0x40 (0x248 - 0x208)
// Class DXM.TTLHUDNotice
class UTTLHUDNotice : public UUserWidget
{
public:
	class UWidgetAnimation*                      Animation_In;                                      // 0x208(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_Out;                                     // 0x210(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_Red;                                     // 0x218(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            TitleTextBlcok;                                    // 0x220(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            RestTimeTextBlock;                                 // 0x228(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                CircleGaugeImage;                                  // 0x230(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                              TimerOverlay;                                      // 0x238(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2553[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLHUDNotice* GetDefaultObj();

};

// 0x38 (0x240 - 0x208)
// Class DXM.TTLHUDOuterWeapon
class UTTLHUDOuterWeapon : public UUserWidget
{
public:
	class FName                                  NameTextName;                                      // 0x208(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CurrentValueTextName;                              // 0x210(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MaxValueTextName;                                  // 0x218(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SeparatorTextName;                                 // 0x220(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            CurrentValueTextBlock;                             // 0x228(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            MaxValueTextBlock;                                 // 0x230(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            SeparatorValueTextBlock;                           // 0x238(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLHUDOuterWeapon* GetDefaultObj();

	void SetValues(int32 CurrentValue, int32 MaxValue, bool IsEnableBulletNum, bool IsEnableMagazine, enum class ETTLEBulletCondition ConditionCurrentValue, enum class ETTLEBulletCondition ConditionMaxValue, enum class ETTLEBulletCondition ConditionSeparator);
	void SetValue(int32 CurrentValue, int32 MaxValue);
	void SetNameText(class FText NameText);
	void SetIconImage(class UObject* IconImage);
	struct FSlateColor GetConditionColor(enum class ETTLEBulletCondition Condition);
};

// 0x50 (0x258 - 0x208)
// Class DXM.TTLHUDOuterWeapon2
class UTTLHUDOuterWeapon2 : public UUserWidget
{
public:
	class UTextBlock*                            NameText;                                          // 0x208(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                IconImage;                                         // 0x210(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHorizontalBox*                        ValuesTopHorizontalBox;                            // 0x218(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            CurrentValueTextBlock;                             // 0x220(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            MaxValueTextBlock;                                 // 0x228(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            SeparatorTextBlock;                                // 0x230(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UProgressBar*                          GrayProgressBar;                                   // 0x238(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UProgressBar*                          RedProgressBar;                                    // 0x240(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2556[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLHUDOuterWeapon2* GetDefaultObj();

};

// 0x30 (0x238 - 0x208)
// Class DXM.TTLHUDPartsGauge
class UTTLHUDPartsGauge : public UUserWidget
{
public:
	class UWidgetAnimation*                      Animation_BlinkGauge;                              // 0x208(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2557[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLHUDPartsGauge* GetDefaultObj();

	void SetBlinkGauge(bool Enable);
};

// 0x110 (0x200 - 0xF0)
// Class DXM.TTLHUDPopTriggerComponent
class UTTLHUDPopTriggerComponent : public UActorComponent
{
public:
	class FText                                  DisplayText;                                       // 0xF0(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                        Pad_255A[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsTransportGimmick;                                // 0x138(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_255B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               HUDDisplayOffset;                                  // 0x13C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                TableNameSpace;                                    // 0x148(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                TableKey;                                          // 0x158(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                NoAccessTableKey;                                  // 0x168(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                DataTableName_Description;                         // 0x178(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                KeyName_Description;                               // 0x188(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsDisplayForOuter;                                 // 0x198(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsBaseCamp;                                        // 0x199(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsInitEnable;                                      // 0x19A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsNoVisibleAtWreckedArm;                           // 0x19B(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETTLArsenalItemMarkerHUD_DisplayType DisplayType;                                       // 0x19C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_255C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  CollisionTag;                                      // 0x1A0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UShapeComponent>         CollisionType;                                     // 0x1A8(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsUseAccessImage;                                  // 0x1D0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETTLERaderObjectType              OutSideIconType;                                   // 0x1D1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_255D[0x16];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TScriptInterface<class ITTLArsenalHUDMakerInterface> SelfParentPtr;                                     // 0x1E8(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                        Pad_255E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLHUDPopTriggerComponent* GetDefaultObj();

	void OnMenuToBaseCamp();
	void OnendOverLap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnBeginOverLap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnBaseCampToMenu(enum class ETTLEInteractType ConsoelType);
};

// 0x0 (0x208 - 0x208)
// Class DXM.TTLHUDPVPResult
class UTTLHUDPVPResult : public UUserWidget
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDPVPResult* GetDefaultObj();

};

// 0x100 (0x128 - 0x28)
// Class DXM.TTLHUDPVPResultCommandBase
class UTTLHUDPVPResultCommandBase : public UObject
{
public:
	float                                        RestSeconds;                                       // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_255F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLHUDPVPResultCommandParams         CommandParams;                                     // 0x30(0xF8)(ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLHUDPVPResultCommandBase* GetDefaultObj();

};

// 0x0 (0x128 - 0x128)
// Class DXM.TTLHUDPVPResultCommand_None
class UTTLHUDPVPResultCommand_None : public UTTLHUDPVPResultCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDPVPResultCommand_None* GetDefaultObj();

};

// 0x0 (0x128 - 0x128)
// Class DXM.TTLHUDPVPResultCommand_Show
class UTTLHUDPVPResultCommand_Show : public UTTLHUDPVPResultCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDPVPResultCommand_Show* GetDefaultObj();

};

// 0x0 (0x128 - 0x128)
// Class DXM.TTLHUDPVPResultCommand_Hide
class UTTLHUDPVPResultCommand_Hide : public UTTLHUDPVPResultCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDPVPResultCommand_Hide* GetDefaultObj();

};

// 0x0 (0x128 - 0x128)
// Class DXM.TTLHUDPVPResultCommand_SetStatusText
class UTTLHUDPVPResultCommand_SetStatusText : public UTTLHUDPVPResultCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDPVPResultCommand_SetStatusText* GetDefaultObj();

};

// 0x0 (0x128 - 0x128)
// Class DXM.TTLHUDPVPResultCommand_PlayResultAnimation
class UTTLHUDPVPResultCommand_PlayResultAnimation : public UTTLHUDPVPResultCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDPVPResultCommand_PlayResultAnimation* GetDefaultObj();

};

// 0x8 (0x130 - 0x128)
// Class DXM.TTLHUDPVPResultCommand_SetMoneyWithAnimation
class UTTLHUDPVPResultCommand_SetMoneyWithAnimation : public UTTLHUDPVPResultCommandBase
{
public:
	uint8                                        Pad_2560[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLHUDPVPResultCommand_SetMoneyWithAnimation* GetDefaultObj();

};

// 0x0 (0x128 - 0x128)
// Class DXM.TTLHUDPVPResultCommand_HiddenMoney
class UTTLHUDPVPResultCommand_HiddenMoney : public UTTLHUDPVPResultCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDPVPResultCommand_HiddenMoney* GetDefaultObj();

};

// 0x0 (0x128 - 0x128)
// Class DXM.TTLHUDPVPResultCommand_SetWinCount
class UTTLHUDPVPResultCommand_SetWinCount : public UTTLHUDPVPResultCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDPVPResultCommand_SetWinCount* GetDefaultObj();

};

// 0x0 (0x128 - 0x128)
// Class DXM.TTLHUDPVPResultCommand_AddPvPItem
class UTTLHUDPVPResultCommand_AddPvPItem : public UTTLHUDPVPResultCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDPVPResultCommand_AddPvPItem* GetDefaultObj();

};

// 0x0 (0x128 - 0x128)
// Class DXM.TTLHUDPVPResultCommand_AddDuelItem
class UTTLHUDPVPResultCommand_AddDuelItem : public UTTLHUDPVPResultCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDPVPResultCommand_AddDuelItem* GetDefaultObj();

};

// 0xD8 (0x100 - 0x28)
// Class DXM.TTLHUDPVPResultCommandExecuter
class UTTLHUDPVPResultCommandExecuter : public UObject
{
public:
	class UWidgetAnimation*                      Animation_PvP_Victory;                             // 0x28(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_PvP_Win;                                 // 0x30(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_PvP_Lose;                                // 0x38(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_PvP_Bg_In;                               // 0x40(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_PvP_Player_Red_Left;                     // 0x48(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_PvP_Player_Red_Right;                    // 0x50(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_PvP_Player_Blue_Left;                    // 0x58(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_PvP_Player_Blue_Right;                   // 0x60(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_PvP_MyPlayer_Red;                        // 0x68(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_PvP_MyPlayer_Blue;                       // 0x70(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_Duel_Top_In;                             // 0x78(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_Duel_Bg_In;                              // 0x80(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_Duel_Player_On;                          // 0x88(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_Duel_Player_Off;                         // 0x90(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Widget_PvP_Top;                                    // 0x98(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Widget_Duel_Top;                                   // 0xA0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UTTLHUDPVPResultCommandBase*>   HUDCommands;                                       // 0xA8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2565[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UUserWidget*                           TopWidget;                                         // 0xC0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        LoopSEPlayback;                                    // 0xC8(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          LoopSEPlaybackTimer;                               // 0xE0(0x8)(NoDestructor, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          LoopSEStopTimer;                                   // 0xE8(0x8)(NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2566[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLHUDPVPResultCommandExecuter* GetDefaultObj();

	void PlayPVPVictoryAnim(enum class ETTLEMissionResult MissionResult, const TArray<struct FTTLPVPResultPlayerParams>& PlayerParams);
	void InitializePVPWidget(class UUserWidget* HUD);
	class UUserWidget* InitializePVP();
	void InitializeDuelWidget(class UUserWidget* HUD);
	class UUserWidget* InitializeDuel();
	void ExecCommand(float DeltaSeconds, class UUserWidget* HUD);
	void ClearTimer(class UObject* WorldContext);
	void AddPVPResultCommands(enum class ETTLEMissionResult MissionResult, const TArray<struct FTTLPVPResultPlayerParams>& PlayerParams);
	void AddDuelResultCommands(const struct FTTLHUDDuelResultParams& DuelResultParams);
	void AddCommand(enum class ETTLHUDPVPResultCommandKind CommandKind, float DelaySeconds, struct FTTLHUDPVPResultCommandParams& Params);
};

// 0x70 (0x278 - 0x208)
// Class DXM.TTLHUDPVPResultGauge
class UTTLHUDPVPResultGauge : public UUserWidget
{
public:
	class FName                                  ValueGaugeName;                                    // 0x208(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  IncreaseGaugeName;                                 // 0x210(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DecreaseGaugeName;                                 // 0x218(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2569[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLHUDPVPResultGauge* GetDefaultObj();

	void SetValue(float NewValue, bool EnableAnimation, float Duration1, float Duration2, float Duration3, enum class ETTLHUDPVPResultGaugeEaseType EaseType, float EaseExp);
};

// 0x20 (0x228 - 0x208)
// Class DXM.TTLHUDPVPResultItem
class UTTLHUDPVPResultItem : public UUserWidget
{
public:
	class UWidgetAnimation*                      Animation_In;                                      // 0x208(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_Add;                                     // 0x210(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_Sub;                                     // 0x218(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_Defeated;                                // 0x220(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLHUDPVPResultItem* GetDefaultObj();

	void SetText3(class FText NewText);
	void SetText2(class FText NewText);
	void SetText1(class FText NewText);
	void SetPoint(int32 Point);
	void SetIsDefeated(bool IsDefeated);
	void PlayWidgetAnimation(enum class ETTLHUDPVPResultItemAnimation Animation);
};

// 0x10 (0x218 - 0x208)
// Class DXM.TTLHUDRaderIcon
class UTTLHUDRaderIcon : public UUserWidget
{
public:
	class UWidget*                               IconWidget;                                        // 0x208(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                IconImage;                                         // 0x210(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLHUDRaderIcon* GetDefaultObj();

};

// 0x38 (0x240 - 0x208)
// Class DXM.TTLHUDRestTarget
class UTTLHUDRestTarget : public UUserWidget
{
public:
	class UWidgetAnimation*                      Animation_In;                                      // 0x208(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<enum class ETTLTTLHUDRestTargetAnimation> AnimationStack;                                    // 0x210(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_256B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTextBlock*                            Text1Widget;                                       // 0x228(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            Text2Widget;                                       // 0x230(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            Text3Widget;                                       // 0x238(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLHUDRestTarget* GetDefaultObj();

	void SetText2(class FText NewText);
	void SetText1(class FText NewText);
	void SetIconVisibility(enum class ESlateVisibility NewVisibility);
	void SetIcon(enum class ETTLResultIconType NewIconType);
	void SetDetailVisibility(bool NewVisibility);
	void SetCount(int32 CurrentValue, int32 MaxValue, bool IsVisible, bool IsFraction);
	void PlayWidgetAnimation(enum class ETTLTTLHUDRestTargetAnimation Animation);
	void OnOutAnimationFinished();
	class UTextBlock* GetText3Widget();
	class UTextBlock* GetText2Widget();
	class UTextBlock* GetText1Widget();
};

// 0x0 (0x208 - 0x208)
// Class DXM.TTLHUDResultIcon
class UTTLHUDResultIcon : public UUserWidget
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDResultIcon* GetDefaultObj();

	void SetIcon(enum class ETTLResultIconType NewIconType);
};

// 0x80 (0x288 - 0x208)
// Class DXM.TTLHUDStartDuel
class UTTLHUDStartDuel : public UUserWidget
{
public:
	class UWidgetAnimation*                      Animation_InTitle;                                 // 0x208(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_InMain1;                                 // 0x210(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_InMain2;                                 // 0x218(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_Out1;                                    // 0x220(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_Out2;                                    // 0x228(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_DuelIn1a;                                // 0x230(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_DuelIn1b;                                // 0x238(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_DuelIn2a;                                // 0x240(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_DuelIn2b;                                // 0x248(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_DuelIn3a;                                // 0x250(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_DuelIn3b;                                // 0x258(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_DuelOut;                                 // 0x260(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ATTLPlayerState*>               PlayerStates;                                      // 0x268(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class UTTLHUDStartDuelCommandExecuter*       HUDCommandExecuter;                                // 0x278(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_256E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLHUDStartDuel* GetDefaultObj();

	void SetTitleText(class FText NewText);
	void SetPrizeMoney(int32 Prize, int32 PlayerNumber);
	void SetPlayerName(class FText PlayerName, int32 PlayerNumber);
	void SetCenterText(class FText NewText);
	void PlayWidgetAnimation(enum class ETTLHUDStartDuelAnimation Animation);
	void PlayAnimationDuelIn3b();
	void PlayAnimationDuelIn2b();
	void PlayAnimationDuelIn1b();
	void AddHUDCommand(enum class ETTLHUDStartDuelCommandKind CommandKind, float DelaySeconds, const struct FTTLHUDStartDuelCommandParams& Params);
};

// 0x58 (0x80 - 0x28)
// Class DXM.TTLHUDStartDuelCommandBase
class UTTLHUDStartDuelCommandBase : public UObject
{
public:
	uint8                                        Pad_256F[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLHUDStartDuelCommandBase* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class DXM.TTLHUDStartDuelCommand_None
class UTTLHUDStartDuelCommand_None : public UTTLHUDStartDuelCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDStartDuelCommand_None* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class DXM.TTLHUDStartDuelCommand_SetUp
class UTTLHUDStartDuelCommand_SetUp : public UTTLHUDStartDuelCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDStartDuelCommand_SetUp* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class DXM.TTLHUDStartDuelCommand_PlayInTitle
class UTTLHUDStartDuelCommand_PlayInTitle : public UTTLHUDStartDuelCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDStartDuelCommand_PlayInTitle* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class DXM.TTLHUDStartDuelCommand_PlayInMain1
class UTTLHUDStartDuelCommand_PlayInMain1 : public UTTLHUDStartDuelCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDStartDuelCommand_PlayInMain1* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class DXM.TTLHUDStartDuelCommand_PlayInMain2
class UTTLHUDStartDuelCommand_PlayInMain2 : public UTTLHUDStartDuelCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDStartDuelCommand_PlayInMain2* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class DXM.TTLHUDStartDuelCommand_PlayOutMain1
class UTTLHUDStartDuelCommand_PlayOutMain1 : public UTTLHUDStartDuelCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDStartDuelCommand_PlayOutMain1* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class DXM.TTLHUDStartDuelCommand_PlayOutMain2
class UTTLHUDStartDuelCommand_PlayOutMain2 : public UTTLHUDStartDuelCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDStartDuelCommand_PlayOutMain2* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class DXM.TTLHUDStartDuelCommand_PlayDuelIn1
class UTTLHUDStartDuelCommand_PlayDuelIn1 : public UTTLHUDStartDuelCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDStartDuelCommand_PlayDuelIn1* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class DXM.TTLHUDStartDuelCommand_PlayDuelIn2
class UTTLHUDStartDuelCommand_PlayDuelIn2 : public UTTLHUDStartDuelCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDStartDuelCommand_PlayDuelIn2* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class DXM.TTLHUDStartDuelCommand_PlayDuelIn3
class UTTLHUDStartDuelCommand_PlayDuelIn3 : public UTTLHUDStartDuelCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDStartDuelCommand_PlayDuelIn3* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class DXM.TTLHUDStartDuelCommand_PlayDuelIn1B
class UTTLHUDStartDuelCommand_PlayDuelIn1B : public UTTLHUDStartDuelCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDStartDuelCommand_PlayDuelIn1B* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class DXM.TTLHUDStartDuelCommand_PlayDuelIn2B
class UTTLHUDStartDuelCommand_PlayDuelIn2B : public UTTLHUDStartDuelCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDStartDuelCommand_PlayDuelIn2B* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class DXM.TTLHUDStartDuelCommand_PlayDuelIn3B
class UTTLHUDStartDuelCommand_PlayDuelIn3B : public UTTLHUDStartDuelCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDStartDuelCommand_PlayDuelIn3B* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class DXM.TTLHUDStartDuelCommand_PlayDuelOut
class UTTLHUDStartDuelCommand_PlayDuelOut : public UTTLHUDStartDuelCommandBase
{
public:

	static class UClass* StaticClass();
	static class UTTLHUDStartDuelCommand_PlayDuelOut* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class DXM.TTLHUDStartDuelCommandExecuter
class UTTLHUDStartDuelCommandExecuter : public UObject
{
public:
	TArray<class UTTLHUDStartDuelCommandBase*>   HUDCommands;                                       // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLHUDStartDuelCommandExecuter* GetDefaultObj();

};

// 0x38 (0x240 - 0x208)
// Class DXM.TTLHUDTargetObjectInfo
class UTTLHUDTargetObjectInfo : public UUserWidget
{
public:
	uint8                                        Pad_2570[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTextBlock*                            NameTextWidget_Black;                              // 0x210(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            NameTextWidget_Red;                                // 0x218(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                              Bullet_Red;                                        // 0x220(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            DistanceTextWidget;                                // 0x228(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHorizontalBox*                        DistanceHorizontalBox;                             // 0x230(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLHUDGaugeWidget*                    GaugeWidget;                                       // 0x238(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLHUDTargetObjectInfo* GetDefaultObj();

};

// 0x28 (0x230 - 0x208)
// Class DXM.TTLHUDTime
class UTTLHUDTime : public UUserWidget
{
public:
	class UWidget*                               ContentsTop;                                       // 0x208(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            MinutesText;                                       // 0x210(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            SecondsText;                                       // 0x218(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2571[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLHUDTime* GetDefaultObj();

	void SetTime(float TimeSeconds);
	void SetContentsVisibility(bool NewVisibility);
};

// 0x8 (0x210 - 0x208)
// Class DXM.TTLHUDWarningPopup
class UTTLHUDWarningPopup : public UUserWidget
{
public:
	uint8                                        Pad_2573[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLHUDWarningPopup* GetDefaultObj();

	void SetUpWarning(enum class ETTLWarningType& WarningType, struct FTTLWarningInfo& WarningInfo);
	void SetNewVisibility(enum class ESlateVisibility NewVisibility);
	void PlayHUDAnimation();
	bool IsMode0();
};

// 0x18 (0x220 - 0x208)
// Class DXM.TTLHUDWarningScreen
class UTTLHUDWarningScreen : public UUserWidget
{
public:
	class UWidgetAnimation*                      Animation_In;                                      // 0x208(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_Loop;                                    // 0x210(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2574[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLHUDWarningScreen* GetDefaultObj();

	void SetMode(enum class ETTLHUDWarningScreenMode NewMode);
};

// 0x0 (0x88 - 0x88)
// Class DXM.TTLHumanAlterationParam
class UTTLHumanAlterationParam : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UTTLHumanAlterationParam* GetDefaultObj();

};

// 0xE48 (0xF40 - 0xF8)
// Class DXM.TTLHumanEditComponent
class UTTLHumanEditComponent : public UTTLActorComponent
{
public:
	class USkeletalMeshComponent*                BaseMesh;                                          // 0xF8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_257F[0xA0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstanceDynamic*              SkinMaterials[0x14];                               // 0x1A0(0xA0)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2580[0x1C0];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLHumanEditSettings                 Settings;                                          // 0x400(0xB10)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	uint8                                        Pad_2581[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLHumanEditComponent* GetDefaultObj();

	void SetTextureDecal(enum class ETTLEHumanDecalType Type, const class FString& Path);
	void SetSexType(enum class ETTLEHumanGenderType Value);
	void SetPartsInfo(enum class ETTLEHumanGenderType Gender, struct FTTLHumanCustomPartsInfo& PartsInfo);
	void SetParameterDecalType(enum class ETTLEHumanDecalType Type, const struct FVector4& Value);
	void SetParameterDecal(const struct FVector4& Value);
	void GetParameterDecalType(enum class ETTLEHumanDecalType Type, struct FVector4* OutValue);
	void EditModel2(enum class ETTLEHumanPartsType Type, const class FString& Path, const class FString& SubPath, bool IsMale, bool IsHide);
	void EditModel(enum class ETTLEHumanPartsType Type, const class FString& Path, bool IsHide);
	void EditMaterialColor(enum class ETTLEHumanMaterialType Type, const struct FLinearColor& Color, float EmissivePower);
	void EditMaterial(enum class ETTLEHumanMaterialType Type, const class FString& Path);
	void ApplySetting();
};

// 0x0 (0x88 - 0x88)
// Class DXM.TTLIceCreamParam
class UTTLIceCreamParam : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UTTLIceCreamParam* GetDefaultObj();

};

// 0x0 (0x328 - 0x328)
// Class DXM.TTLIceCreamShop
class ATTLIceCreamShop : public AActor
{
public:

	static class UClass* StaticClass();
	static class ATTLIceCreamShop* GetDefaultObj();

};

// 0x380 (0x9B0 - 0x630)
// Class DXM.TTLIceCreamShopScene
class ATTLIceCreamShopScene : public ATTLMenuSceneBase
{
public:
	uint8                                        Pad_258A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UUserWidget*                           Widget_TopWidget;                                  // 0x638(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLIceScrollListComponent*            IceScrollListComponent;                            // 0x640(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLUIIceCreamShopComponent*           IceCreamShopComponent;                             // 0x648(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           IceBackGround_Widget;                              // 0x650(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_BackGround_In;                           // 0x658(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_BackGround_In_01;                        // 0x660(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_BackGround_Loop;                         // 0x668(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTTLIceDialogContainer                IceDialogContainer;                                // 0x670(0xB8)(BlueprintVisible, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLIceBuyListContainer               BuyListContainer;                                  // 0x728(0x38)(BlueprintVisible, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_258B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLIceDataManager*                    IceDataManager;                                    // 0x768(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLSaveGameObject*                    CurrentGameData;                                   // 0x770(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_258C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLIceFlavorParamRow                 SelectFlavorParam;                                 // 0x780(0x60)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_258D[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLIceCornParamRow                   SelectCornParam;                                   // 0x840(0x60)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_258E[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UUserWidget*                           TopMenuWidget;                                     // 0x8C0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_258F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            BackTransform;                                     // 0x8D0(0x30)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	int32                                        OneStampByMoney;                                   // 0x900(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         IsDebugChangePurchase;                             // 0x904(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         IsDebugDrawSingleSkillName;                        // 0x905(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         IsDebugDrawDoubleSkillName;                        // 0x906(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         IsDebugDrawProperty;                               // 0x907(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2590[0xA8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLIceCreamShopScene* GetDefaultObj();

	void PlayCharaAnime();
	void PauseCharaAnime();
	void OnTopMenuOut();
	void OnTopMenuInAnimFinish();
	void OnTopListOutAnimeFinish();
	void OnTopListInAnimeFinish();
	void OnTopCharaInAnimeFinish();
	void OnTimerAtPurchase();
	void OnStampWindowInAnimeFinish();
	void OnStampPushAnimeFinish();
	void OnPushingDecideBtnByIceCreamIn();
	void OnPushingBySelectingToken();
	void OnPushingBySelectingNo();
	void OnPushingBySelectingCredit();
	void OnInputRepeatForPurchaseingSkillDialog(enum class ETTLEActionType KeyType, int32 Count);
	void OnInputRepeatActionForTopMenu(enum class ETTLEActionType KeyType, int32 Count);
	void OnInputRepeatActionForFlavor02(enum class ETTLEActionType KeyType, int32 Count);
	void OnInputForPurchaseingSkillDialog(enum class ETTLEActionType KeyType, bool IsPressed);
	void OnInputActionForTopMenu(enum class ETTLEActionType KeyType, bool IsPressed);
	void OnInputActionForFlavor02(enum class ETTLEActionType KeyType, bool IsPressed);
	void OnFinishedFlavorFadeOut_Double();
	void OnFinishedFlavorFadeOut();
	void OnFinishedFadeOutIceSkillDialog_PurchaseCancel();
	void OnFinishedFadeOutIceSkillDialog_PurchaseBuy();
	void OnFinishedFadeOutIceSkillDialog_Purchase();
	void OnFinishedFadeOutIceSkillDialog_IceCreamIn();
	void OnFinishedFadeInIceSkillDialog_Purchase();
	void OnFinishedFadeInIceSkillDialog_IceCreamIn();
	void OnFinishedFadeInDouble();
	void OnFinishedDecideIceSkillDialog_Purchase();
	void OnFinishedDecideIceSkillDialog_IceCreamDecide();
	void OnFinishedConrFadeOut();
	void OnFinishedConrFadeIn();
	void OnFadeOutAllCornAndFlavor();
	void OnFadeInFinish_PlayerMessage();
	void OnDecideCommonPopUp_Double();
	void OnDecideCommonPopUp();
	void OnCloseTokenPopUp();
	void OnCloseOkPopUp();
	void OnCharaFlavorSingleOutAnime_Double();
	void OnCharaFlavorOutAnimeFinish_Double();
	void OnCharaFlavorOutAnimeFinish();
	void OnCharaFlavorInAnimeFinish_Double();
	void OnCharaFlavorInAnimeFinish();
	void OnCharaCornOutAnimeFinish();
	void OnCharaCornInAnimeFinish();
	void OnCancelCommonPopUp_Double();
	void OnCancelCommonPopUp();
	void OnCancelBySelectingPurchaseBtn();
	void OnBackGroundInAnimFinish02();
	void OnBackGroundInAnimFinish();
	void InputRepeatActionFlavorList(enum class ETTLEActionType KeyType, int32 Count, bool IsSingle);
	void InputRepeatActionCornList(enum class ETTLEActionType KeyType, int32 Count);
	void InputRepeatActionBuyDialog(enum class ETTLEActionType KeyType, int32 Count);
	void InputActionFlavorList(enum class ETTLEActionType KeyType, bool IsPressed);
	void InputActionCornList(enum class ETTLEActionType KeyType, bool IsPressed);
	void Initialize();
	void GotoLabSceneForFirst();
	void GotoLabSceneBP();
	void GotoLabScene();
	void ExitIceCreamSceneBP();
	class ATTLOkPopUp* CreateOkPopUpBP();
	void CreateListBP(enum class EUTTLIceScrollListMode Mode, int32 ListMax);
	class ATTLCommonPopup* CreateCommonPopUpBP();
};

// 0x68 (0x90 - 0x28)
// Class DXM.TTLIceDataManager
class UTTLIceDataManager : public UObject
{
public:
	uint8                                        Pad_2592[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLIceFlavorParamRow>         AllIceFlavorParamArray;                            // 0x38(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLIceCornParamRow>           AllIceCornParamRow;                                // 0x48(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLIceComboParamRow>          AllIceComboParamRow;                               // 0x58(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class UDataTable*                            AllIceEffectParamTable;                            // 0x68(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FlavorRandomChoiceValue;                           // 0x70(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        GetStampEatLimitNum;                               // 0x74(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         EnableStampEatLimit;                               // 0x78(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2593[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ContinuousEatTimes;                                // 0x7C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FTTLFlavorPickupContainer>     PickUpIceFlavorParamArray;                         // 0x80(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLIceDataManager* GetDefaultObj();

	void ResetContinuousEatTimes();
	void PickUpFlavor();
	void OnMissionStarted();
	void OnMissionFinished(enum class ETTLEMissionResult MissionResult);
	bool IsErrorData();
	void Initialize();
	class FText GetResultText(struct FTTLIceCornParamRow& CornParam, struct FTTLIceFlavorParamRow& FlavorParam_00, struct FTTLIceFlavorParamRow& FlavorParam_01);
	int32 GetFlavorRandomChoiceNum();
	int32 GetCornIndex(struct FTTLIceCornParamRow& CornParam);
	int32 GetContinuousEatTimes();
	bool CanGetStamp();
	void AddContinuousEatTimes();
};

// 0x10 (0x1A8 - 0x198)
// Class DXM.TTLIceScrollListComponent
class UTTLIceScrollListComponent : public UTTLScrollListComponentBase
{
public:
	class UTTLIceDataManager*                    IceDataManager;                                    // 0x198(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EUTTLIceScrollListMode            ScrollListMode;                                    // 0x1A0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2595[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ButtonOffsetValue;                                 // 0x1A4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLIceScrollListComponent* GetDefaultObj();

	void SetScrollListMode(enum class EUTTLIceScrollListMode Mode);
	bool InitializeBP();
	void Initialize(class UUserWidget* LayoutWidget, int32 DisplayNum, int32 ListNumMax);
	class UUserWidget* CreateButtonWidget(int32 Position);
};

// 0x40 (0x68 - 0x28)
// Class DXM.TTLImpermanentStatus
class UTTLImpermanentStatus : public UObject
{
public:
	int64                                        UID;                                               // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<enum class ETTLEStatusCategory>       Categories;                                        // 0x30(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UTTLBasicStatusComponent*              TargetStatus;                                      // 0x40(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                StatusSource;                                      // 0x48(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TotalTime;                                         // 0x50(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2597[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                OwnerActor;                                        // 0x60(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLImpermanentStatus* GetDefaultObj();

	void UpdateStatus(float DeltaSeconds);
	void OnStatusEnd();
	void OnStatusBegin();
	int64 GetUID();
	TArray<enum class ETTLEStatusCategory> GetCategories();
	bool ContainsCategories(TArray<enum class ETTLEStatusCategory>& Categories);
};

// 0x8 (0x70 - 0x68)
// Class DXM.TTLContinuousDamage
class UTTLContinuousDamage : public UTTLImpermanentStatus
{
public:
	uint8                                        Pad_2598[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLContinuousDamage* GetDefaultObj();

};

// 0x10 (0x78 - 0x68)
// Class DXM.TTLBaseAbnormalStatus
class UTTLBaseAbnormalStatus : public UTTLImpermanentStatus
{
public:
	class ATTLCharacter*                         PTTLCharacter;                                     // 0x68(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATTLPawn*                              PTTLPawn;                                          // 0x70(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTTLBaseAbnormalStatus* GetDefaultObj();

};

// 0x10 (0x88 - 0x78)
// Class DXM.TTLBurningStatus
class UTTLBurningStatus : public UTTLBaseAbnormalStatus
{
public:
	uint8                                        Pad_2599[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLBurningStatus* GetDefaultObj();

};

// 0x8 (0x80 - 0x78)
// Class DXM.TTLAcidStatus
class UTTLAcidStatus : public UTTLBaseAbnormalStatus
{
public:
	uint8                                        Pad_259A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAcidStatus* GetDefaultObj();

};

// 0x8 (0x80 - 0x78)
// Class DXM.TTLStunStatus
class UTTLStunStatus : public UTTLBaseAbnormalStatus
{
public:
	class UTTLAIActionComponent*                 AiActionComp;                                      // 0x78(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTTLStunStatus* GetDefaultObj();

};

// 0x58 (0xD0 - 0x78)
// Class DXM.TTLFlashStatus
class UTTLFlashStatus : public UTTLBaseAbnormalStatus
{
public:
	class ATTLCharacterCommon*                   OwnerCharacter;                                    // 0x78(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATTLFlashDummyActor*                   DummyActor_Act;                                    // 0x80(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATTLFlashDummyActor*                   DummyActor_Attack;                                 // 0x88(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLAIActionComponent*                 AiActionComp;                                      // 0x90(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                InitialActTarget;                                  // 0x98(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                InitialActAttackTarget;                            // 0xA0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_259B[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLFlashStatus* GetDefaultObj();

};

// 0x8 (0x80 - 0x78)
// Class DXM.TTLJammingStatus
class UTTLJammingStatus : public UTTLBaseAbnormalStatus
{
public:
	class AActor*                                DummyActor_Act;                                    // 0x78(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTTLJammingStatus* GetDefaultObj();

};

// 0x28 (0x90 - 0x68)
// Class DXM.TTLFemtoShiftStatus
class UTTLFemtoShiftStatus : public UTTLImpermanentStatus
{
public:
	uint8                                        Pad_259C[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLFemtoShiftStatus* GetDefaultObj();

};

// 0x0 (0x68 - 0x68)
// Class DXM.TTLTrapStunStatus
class UTTLTrapStunStatus : public UTTLImpermanentStatus
{
public:

	static class UClass* StaticClass();
	static class UTTLTrapStunStatus* GetDefaultObj();

};

// 0x10 (0x78 - 0x68)
// Class DXM.TTLReaperDebuffStatus
class UTTLReaperDebuffStatus : public UTTLImpermanentStatus
{
public:
	uint8                                        Pad_259D[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLReaperDebuffStatus* GetDefaultObj();

};

// 0x18 (0x80 - 0x68)
// Class DXM.TTLAbyssStatus
class UTTLAbyssStatus : public UTTLImpermanentStatus
{
public:
	uint8                                        Pad_259E[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLAbyssStatus* GetDefaultObj();

};

// 0x30 (0x98 - 0x68)
// Class DXM.TTLHealRateStatus
class UTTLHealRateStatus : public UTTLImpermanentStatus
{
public:
	uint8                                        Pad_259F[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLHealRateStatus* GetDefaultObj();

};

// 0x8 (0x80 - 0x78)
// Class DXM.TTLSeriousBoostStatus
class UTTLSeriousBoostStatus : public UTTLBaseAbnormalStatus
{
public:
	uint8                                        Pad_25A0[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLSeriousBoostStatus* GetDefaultObj();

};

// 0x18 (0x6D8 - 0x6C0)
// Class DXM.TTLIncendiarySpaceActor
class ATTLIncendiarySpaceActor : public ATTLFiniteExplosionActorBase
{
public:
	uint8                                        Pad_25A3[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USphereComponent*                      BurningCollision;                                  // 0x6D0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ATTLIncendiarySpaceActor* GetDefaultObj();

	void OnBurnigCollisionEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnBurnigCollisionBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void InitializeDynamicIncendiarySpaceList(class UObject* WorldContextObject);
	void FinalizeDynamicIncendiarySpaceList();
};

// 0x6D0 (0xB08 - 0x438)
// Class DXM.TTLStandardMissile
class ATTLStandardMissile : public ATTLProjectileBase
{
public:
	struct FTTLFxParam                           FxTailEffect;                                      // 0x438(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           PreTailEffect1;                                    // 0x4D0(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  PreTailEffect1SocketName;                          // 0x568(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           PreTailEffect2;                                    // 0x570(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  PreTailEffect2SocketName;                          // 0x608(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25A8[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                Target;                                            // 0x620(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMeshComponent*                        TargetMesh;                                        // 0x628(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25A9[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           HitVFXNormal;                                      // 0x638(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           HitVFXShield;                                      // 0x6D0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           HitVFXWeaponShield;                                // 0x768(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           RepelVFX;                                          // 0x800(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	enum class ETTLEStatusType                   MissileType;                                       // 0x898(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25AA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ATTLExplosionActor>        ExplosionClass;                                    // 0x8A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25AB[0x2C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               RestVelocityOfOwner;                               // 0x8D4(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        OwnerVelocityRate;                                 // 0x8E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsCuttingBackOwnerVelocity;                        // 0x8E4(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25AC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        OwnerVelocityAffectTime;                           // 0x8E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25AD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                LastTarget;                                        // 0x8F0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UForceFeedbackEffect*                  ForceFeedbackEffect;                               // 0x8F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25AE[0x88];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlayback                        FxTailPlayBack1;                                   // 0x988(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        FxTailPlayBack2;                                   // 0x9A0(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_25AF[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsChaseAutoRunAffect;                              // 0x9C4(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25B0[0x1F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ETTLMissileExplosionVFXType       MissileExplosionVFXType;                           // 0x9E4(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25B1[0x10B];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLProximityFuseStatus*               ProximityFuseStatus;                               // 0xAF0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLTickHomingCalculator*              HomingCalculator;                                  // 0xAF8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25B2[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLStandardMissile* GetDefaultObj();

	void TakeAnyDamageDelegate(class AActor* DamagedActor, float DamageValue, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void PlayPhaseVFX(int32 Phase);
	void OnMissileOverlap(class AActor* OverlapperdActor, class AActor* OtherActor);
	void OnMissileMeshOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnMissileHitFlare(class AActor* OtherActor);
	void OnMissileHit(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void MoveMissile(float DeltaSeconds);
	void MissileHitCameraShake(class AActor* OtherActor, const struct FTransform& HitTransform);
	void MissileExplode(const struct FTransform& Transform);
};

// 0x20 (0xB28 - 0xB08)
// Class DXM.TTLInfraredHomingMissile
class ATTLInfraredHomingMissile : public ATTLStandardMissile
{
public:
	float                                        TargetListUpdateInterval;                          // 0xB08(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25B3[0x1C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLInfraredHomingMissile* GetDefaultObj();

	void UpdateTargetList();
	void UpdateHomingState();
	class AActor* SearchHomingTarget();
};

// 0x98 (0x3C0 - 0x328)
// Class DXM.TTLInlineKeyboardActor
class ATTLInlineKeyboardActor : public AActor
{
public:
	TSubclassOf<class UUserWidget>               WidgetClass;                                       // 0x328(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           CurrentWidget;                                     // 0x330(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            KeyboardTex;                                       // 0x338(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnClosed;                                          // 0x340(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	uint8                                        Pad_25B6[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLCommonPopup*                       Popup_Common;                                      // 0x3B0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UEditableText*                         TestEditableTextForPC;                             // 0x3B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ATTLInlineKeyboardActor* GetDefaultObj();

	void Windows_OnEditableTextCommitted(class FText& Text, enum class ETextCommit CommitMethod);
	void Windows_OnEditableTextChanged(class FText& Text);
	class ATTLCommonPopup* SpawnPopup_CommonBP();
	void SetupPopup_Common();
	void SetText_Popup_Common(int32 Error);
	void SetName(class FName& Widget_name, const class FString& Name_string, bool Hidden);
	void ProcessButtonB();
	void ProcessButtonA();
	void Popup_Common_Closed();
	void ChangeMenuWidget(TSubclassOf<class UUserWidget> NewWidgetClass);
};

// 0x0 (0x28 - 0x28)
// Class DXM.TTLInputInterface
class ITTLInputInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ITTLInputInterface* GetDefaultObj();

	void InputOuterAttackRight(bool IsPressed);
	void InputOuterAttackLeft(bool IsPressed);
	void InputMenuOk(bool IsPressed);
	void InputMenuCancel(bool IsPressed);
	void InputArsenalAttackShoulder(bool IsPressed);
	void InputArsenalAttackRight(bool IsPressed);
	void InputArsenalAttackLeft(bool IsPressed);
};

// 0x38 (0x60 - 0x28)
// Class DXM.TTLInputReceiver
class UTTLInputReceiver : public UObject
{
public:
	uint8                                        Pad_25B7[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLInputReceiver* GetDefaultObj();

};

// 0x58 (0x148 - 0xF0)
// Class DXM.TTLInstallationAreaComponent
class UTTLInstallationAreaComponent : public UActorComponent
{
public:
	uint8                                        Pad_25BA[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  MeshTagName;                                       // 0x128(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  BoxTagName;                                        // 0x130(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  InformationTag;                                    // 0x138(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsClearByPushingButton;                            // 0x140(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25BB[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLInstallationAreaComponent* GetDefaultObj();

	void OnInputActionInner(enum class ETTLEActionType KeyType, bool IsPressed);
	void CallEndOverrlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void CallBeginOverrlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x48 (0x138 - 0xF0)
// Class DXM.TTLInstallationMovementComponent
class UTTLInstallationMovementComponent : public UActorComponent
{
public:
	uint8                                        Pad_25BC[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               LimitVelicity;                                     // 0x110(0xC)(Edit, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25BD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ATTLInstallationObject>    InstalledObjectClass;                              // 0x120(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ForwardCheckPowerFromArsenal;                      // 0x128(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ForwardBackowerFromArsenal;                        // 0x12C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ForwardPowerFromArsenal;                           // 0x130(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsDebugDrawCheckFront;                             // 0x134(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25BE[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLInstallationMovementComponent* GetDefaultObj();

};

// 0x20 (0x348 - 0x328)
// Class DXM.TTLInstallationObject
class ATTLInstallationObject : public AActor
{
public:
	uint8                                        Pad_25BF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimationAsset*                       TransformAnim;                                     // 0x330(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StartTime;                                         // 0x338(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25C0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LaserLengthPower;                                  // 0x340(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25C1[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLInstallationObject* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class DXM.TTLInsuranceSourceInterface
class ITTLInsuranceSourceInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ITTLInsuranceSourceInterface* GetDefaultObj();

};

// 0xF0 (0x418 - 0x328)
// Class DXM.TTLInteractDecal
class ATTLInteractDecal : public AActor
{
public:
	uint8                                        Pad_25C7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  InnerCollisionTag;                                 // 0x330(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  OuterCollisionTag;                                 // 0x338(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  InnerCollisionTag_Outer;                           // 0x340(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEDecorationInfoType           DecalType;                                         // 0x348(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25C8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  DecolationTableKey;                                // 0x350(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    BaseMaterial;                                      // 0x358(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TextureParameterName;                              // 0x360(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDeleteByCatching;                                // 0x368(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsAngleLimit;                                      // 0x369(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25C9[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AngleLimit;                                        // 0x36C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsAngleLimitDraw;                                  // 0x370(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25CA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        AngleCheckRate;                                    // 0x374(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25CB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AngleLimitLength;                                  // 0x37C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DataTableName_Description;                         // 0x380(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DatatableKeyName_Description;                      // 0x390(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25CC[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsCamp;                                            // 0x3D0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsOuterGet;                                        // 0x3D1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25CD[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UUserWidget*                           ItemHUD;                                           // 0x3D8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25CE[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLInteractDecal* GetDefaultObj();

	void OnInputActionAtGetZone(enum class ETTLEActionType KeyType, bool IsPressed);
	void OnGettingActionSuccess();
	void OnGettingActionCancel();
	void OnEndOverlapOuterCollision(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnEndOverlapInnerCollision(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnBeginOverlapOuterCollision(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnBeginOverlapInnerCollision(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	bool IsInnerAngleFromArrow(class AActor* Actor, float* Angle);
	bool IsExitParamter_Surface();
	bool IsExitParamter_Color();
	class UTexture2D* GetTextureFromDataTable_DecalTable();
};

// 0x40 (0x138 - 0xF8)
// Class DXM.TTLInteractUIComponent
class UTTLInteractUIComponent : public UTTLActorComponent
{
public:
	uint8                                        Pad_25CF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class UUserWidget>             WidgetClass;                                       // 0x100(0x28)(Edit, BlueprintVisible, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           UiWidget;                                          // 0x128(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             WidgetPositionOffset;                              // 0x130(0x8)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTTLInteractUIComponent* GetDefaultObj();

	void SetVisibility(bool NewVisibility);
	void SetContentFromConsole(enum class ETTLEInteractType ConsoleType);
	void PlayStartAnimation();
	void Play2DStartAnimation();
	void ChangeWidgetVisibility(bool NewVisibility);
};

// 0x150 (0x178 - 0x28)
// Class DXM.TTLInventoryManager
class UTTLInventoryManager : public UObject
{
public:
	TArray<struct FTTLSurvivalMissionPartsInventoryData> SurvivalInventoryPartsList;                        // 0x28(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                          JoinNPCs;                                          // 0x38(0x10)(BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<struct FTTLMissionPartsInventory>     MissionPartsInventory;                             // 0x48(0x10)(BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<struct FTTLMissionFlagItemInventory>  MissionFlagItemInventory;                          // 0x58(0x10)(BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<struct FTTLMissionDecalItemInventory> MissionDecalInventory;                             // 0x68(0x10)(BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<struct FTTLBossBattleData>            BossBattleDataInventory;                           // 0x78(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<struct FTTLMissionAttachmentInventory> MissionAttachmentInventory;                        // 0x88(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<struct FTTLInventoryItem>             HeadChangeList;                                    // 0x98(0x10)(BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<struct FTTLInventoryItem>             LegsChangeList;                                    // 0xA8(0x10)(BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<struct FTTLInventoryItem>             ArmLeftChangeList;                                 // 0xB8(0x10)(BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<struct FTTLInventoryItem>             ArmRightChangeList;                                // 0xC8(0x10)(BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<struct FTTLInventoryItem>             BodyChangeList;                                    // 0xD8(0x10)(BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<struct FTTLInventoryItem>             HandWeaponChangeList;                              // 0xE8(0x10)(BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<struct FTTLInventoryItem>             ShoulderWeaponChangeList;                          // 0xF8(0x10)(BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<struct FTTLInventoryItem>             OptionPartsChangeList;                             // 0x108(0x10)(BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	int32                                        MaxHandWeaponChangeSize;                           // 0x118(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxPartsChangeSize;                                // 0x11C(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxShoulderWeaponSize;                             // 0x120(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxSupportWeaponSize;                              // 0x124(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25EA[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        NPCRarePartsGetRate;                               // 0x138(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        NPCFindPartsRate;                                  // 0x13C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25EB[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLInventoryManager* GetDefaultObj();

	void SortMissionPartsInventory(class UObject* WorldContext);
	void SortDecalInventory();
	void SortAttachmentInventory();
	void SetPartUID(struct FTTLAssemblePartsInfoRow& Parts);
	void SetInventoryIndex(enum class ETTLInventoryCategory Category, int32 Index);
	void RemovePartsFromInventory(enum class ETTLPartsType PartsType);
	void RemoveItemFromInventory(class AActor* UserActor, enum class ETTLInventoryCategory Category, struct FTTLInventoryItem& ItemToRemove);
	void RecoverBulletFromDroppedParts(struct FTTLArsenalDroppedPartsInfo* DroppedPartsInfo);
	void ReceiveOnlineEventRepeatReward(class UTTLGameInstance* GameInstance, class FName& RewardID, int32 RepeatCount);
	void ReceiveMissionReward(class UTTLGameInstance* GameInstance, class FName& MissionID, bool SubGoal1, bool SubGoal2, bool SubGoal3);
	void PurgeCurrentItem(class AActor* UserActor, enum class ETTLInventoryCategory Category);
	void MoveInventoryIndexFromUID(enum class ETTLInventoryCategory& Category, int32 UID);
	void MoveInventoryIndex(enum class ETTLInventoryCategory& Category, int32 Diff);
	bool IsPunchOrGunArm(class FName PartsID);
	bool IsExitDecalToInventory(enum class ETTLEDecorationInfoType DecalType, class FName TableKey);
	bool IsExistParts(class FName& PartsID);
	void GetPartsInfoFromCurrentItem(enum class ETTLInventoryCategory Category, struct FTTLArsenalPartsInfo* OutPartsInfo);
	void GetPagerInfoByCategory(enum class ETTLInventoryCategory Category, int32* CurrentPage, int32* MaxPage);
	void GetItem(enum class ETTLInventoryCategory Category, int32 UID, struct FTTLInventoryItem* OutItem);
	bool GetInventoryPartsPaintInfoByPartsInfo(struct FTTLArsenalPartsInfo& TargetPartsInfo, struct FTTLArsenalPartsPaintInfo* OutPaintInfo);
	int32 GetInventoryIndices(enum class ETTLInventoryCategory Category);
	int32 GetInventoryIndexFromUID(enum class ETTLInventoryCategory Category, int32 UID);
	void GetCurrentItem(enum class ETTLInventoryCategory Category, struct FTTLInventoryItem* OutItem);
	int32 GetChangeListItemNum(enum class ETTLInventoryCategory Category);
	struct FTTLInventoryItem CreateInventoryItemFromDroppedParts(struct FTTLArsenalDroppedPartsInfo& NewPartsInfo);
	struct FTTLInventoryItem CreateInventoryItem(struct FTTLArsenalPartsInfo& NewPartsInfo);
	void ClearMissionInventory(class UObject* WorldContext);
	bool CanAddToChangeList(enum class ETTLPartsType& PartsType);
	int32 AddItemToInventoryInMissionFromPartsInfo(struct FTTLArsenalPartsInfo& PartsInfo, enum class ETTLReasonForObtaining Reason, int32 SubGoalIndex, class FName bossTextID, bool ForceEquip);
	void AddItemToInventoryFromPartsInfo(struct FTTLArsenalPartsInfo& Item, struct FTTLArsenalPartsPaintInfo& ItemPaintInfo);
	void AddItemToInventoryFromEnemy(TArray<struct FTTLArsenalDroppedPartsInfo>& PartsList, int32 Index, TArray<struct FTTLPickUpPartsResult>* ResultList);
	int32 AddItemToInventory(struct FTTLInventoryItem& Item);
	void AddInitializePartsToInventory();
	void AddFlagItemToInventory(class FName& ItemId);
	bool AddDecalToInventory(enum class ETTLEDecorationInfoType DecalType, class FName TableKey, enum class ETTLReasonForObtaining Reason, int32 SubGoalIndex);
	void AddBossDropToInventory(class UObject* WorldContext, class FName& bossDropID, class FName& BossID);
};

// 0x50 (0x140 - 0xF0)
// Class DXM.TTLItemDropComponent
class UTTLItemDropComponent : public UActorComponent
{
public:
	TArray<struct FTTLArsenalDroppedPartsInfo>   PartsDropResult;                                   // 0xF0(0x10)(BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	int32                                        FixedDropPartsNum;                                 // 0x100(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        DropSlotNum;                                       // 0x104(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class FName>                          PartDropAttachmentID;                              // 0x108(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                          WeaponDropAttachmentID;                            // 0x118(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class FName                                  Slot1UnlockMissionID;                              // 0x128(0x8)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  Slot2UnlockMissionID;                              // 0x130(0x8)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  Slot3UnlockMissionID;                              // 0x138(0x8)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTTLItemDropComponent* GetDefaultObj();

	void CreatePartsDrop(class FName& DropID, struct FTTLPlayerAssembleInfo& AssembleInfo);
	void CreateMobDrop(class FName& DropID, struct FTTLDropItem* DropResult);
};

// 0x18 (0x3B0 - 0x398)
// Class DXM.TTLJammerDroneAnimInstance
class UTTLJammerDroneAnimInstance : public UTTLBaseDroneAnimInstance
{
public:
	class UAnimMontage*                          JammerMontage;                                     // 0x398(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsJammerOpendFlag;                                 // 0x3A0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25EC[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLJammerDroneAnimInstance* GetDefaultObj();

};

// 0x0 (0xEE0 - 0xEE0)
// Class DXM.TTLJammerDronePawn
class ATTLJammerDronePawn : public ATTLBaseDronePawn
{
public:

	static class UClass* StaticClass();
	static class ATTLJammerDronePawn* GetDefaultObj();

};

// 0x0 (0x88 - 0x88)
// Class DXM.TTLKarteTable
class UTTLKarteTable : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UTTLKarteTable* GetDefaultObj();

};

// 0x1C0 (0x2B8 - 0xF8)
// Class DXM.TTLKeenCompetitionComponent
class UTTLKeenCompetitionComponent : public UTTLActorComponent
{
public:
	class ACameraActor*                          KeenCompetitionCamera;                             // 0xF8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_25ED[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           FxCompetingEffect;                                 // 0x138(0x98)(ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        FxCompetingPlayBack;                               // 0x1D0(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxParam                           FxFinishEffect;                                    // 0x1E8(0x98)(ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_25EE[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLKeenCompetitionComponent* GetDefaultObj();

};

// 0x0 (0x198 - 0x198)
// Class DXM.TTLLabKarteScrollList
class UTTLLabKarteScrollList : public UTTLScrollListComponentBase
{
public:

	static class UClass* StaticClass();
	static class UTTLLabKarteScrollList* GetDefaultObj();

};

// 0x0 (0x630 - 0x630)
// Class DXM.TTLLaboratoryScene
class ATTLLaboratoryScene : public ATTLMenuSceneBase
{
public:

	static class UClass* StaticClass();
	static class ATTLLaboratoryScene* GetDefaultObj();

};

// 0x4C0 (0xAF0 - 0x630)
// Class DXM.TTLLaboratoryScene2
class ATTLLaboratoryScene2 : public ATTLMenuSceneBase
{
public:
	class UUserWidget*                           Widget_MenuTop;                                    // 0x630(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      WgtAnim_TopMenu_In;                                // 0x638(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      WgtAnim_TopMenu_Out;                               // 0x640(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      WgtAnim_PartsSelect_In;                            // 0x648(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      WgtAnim_PartsSelect_Out;                           // 0x650(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      WgtAnim_Karte_Scr_00;                              // 0x658(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      WgtAnim_Karte_Scr_01;                              // 0x660(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      WgtAnim_Karte_Scr_02;                              // 0x668(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      WgtAnim_SklIcn_Act;                                // 0x670(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      WgtAnim_SklIcn_Deact;                              // 0x678(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      WgtAnim_TreeSklIcn_Act00;                          // 0x680(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      WgtAnim_TreeSklIcn_Act01;                          // 0x688(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      WgtAnim_TreeSklIcn_Deact;                          // 0x690(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      WgtAnim_TreeSklIcn_Opn;                            // 0x698(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      WgtAnim_TreeSklIcn_Imp;                            // 0x6A0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      WgtAnim_TreeSklIcn_Slot00;                         // 0x6A8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      WgtAnim_TreeSklIcn_Get;                            // 0x6B0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      WgtAnim_TreeIcn_Txt00;                             // 0x6B8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      WgtAnim_TreeIcn_Txt01;                             // 0x6C0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      WgtAnim_TreeIcn_Link;                              // 0x6C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      WgtAnim_SkillTypeGuide_In;                         // 0x6D0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      WgtAnim_SkillTypeGuide_Out;                        // 0x6D8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>               Class_Hom_lab_sts04;                               // 0x6E0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>               Class_Hom_lab_sts05;                               // 0x6E8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLCharaEditMenuComponent*            PCharaEditMenuComponent;                           // 0x6F0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLUIOuterCharaCustomComponent*       PUIOuterCharaCustomComponent;                      // 0x6F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25EF[0x220];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLSkillTreeWidgetList>       SkillTreeWgtList;                                  // 0x920(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_25F0[0x1C0];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLLaboratoryScene2* GetDefaultObj();

	class ATTLYesNoPopUp* SpawnPopup_YesNoBP();
	class ATTLOkPopUp* SpawnPopup_OkBP();
	class ATTLCommonPopup* SpawnPopup_CommonBP();
	void SpawnOuterBP();
	void SetupTopMenu();
	void SetupPopup_YesNo();
	void SetupPopup_Ok();
	void SetupPopup_Common();
	void SetupHeader();
	void Popup_Yes_Selected();
	void Popup_Ok_Selected();
	void Popup_No_Selected();
	void Popup_Common_Decide();
	void Popup_Common_Cancel();
	void PlayAnimBP_EndScene();
	void OnTopMenuInAnimFinish();
	void EventMode_ChangeWidgetDisp();
	void DestroyOuterBP();
	void ChangeSceneState(enum class ETTLELaboratoryScene2State NewState);
};

// 0xD0 (0x3F8 - 0x328)
// Class DXM.TTLLandAnimalsEscape
class ATTLLandAnimalsEscape : public AActor
{
public:
	TArray<struct FTTLLandAnimalInfo>            AnimalInfoArray;                                   // 0x328(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class ULandAnimalEscapeEntity*>       EntityArray;                                       // 0x338(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_25F3[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ULandAnimalEscapeEntity>   EntityClass;                                       // 0x378(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  AnimalSceneTag;                                    // 0x380(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  CollisionBoxTag;                                   // 0x388(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  SpawnBoxTag;                                       // 0x390(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  BulletCollisionBoxTag;                             // 0x398(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              RelativeRotationForMesh;                           // 0x3A0(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        SpawnDistanceOffset;                               // 0x3AC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        SpawnTryNum;                                       // 0x3B0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsRandomStart;                                     // 0x3B4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsOnTheGroundByEscape;                             // 0x3B5(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsUseGroundRotationByEscape;                       // 0x3B6(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsInterpUseGroundRotationByEscape;                 // 0x3B7(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InterpSpeedForGround;                              // 0x3B8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GroundCheckRayLengthOffsetPower;                   // 0x3BC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GroundCheckRayLengthPower;                         // 0x3C0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsBoxTraceForEscape;                               // 0x3C4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25F4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               BoxTraceHalfSize;                                  // 0x3C8(0xC)(Edit, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               RotationPower;                                     // 0x3D4(0xC)(Edit, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsDebugDrawRay;                                    // 0x3E0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25F5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DisappearTimeByEscape;                             // 0x3E4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25F6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DisappearSpanTimeByEscape;                         // 0x3EC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsStartByLoadingFadeOut;                           // 0x3F0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsStartByMissionPlaying;                           // 0x3F1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25F7[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLLandAnimalsEscape* GetDefaultObj();

	void OnBeginOverlapFuncForBullet(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void OnBeginOverlapFunc(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x58 (0x550 - 0x4F8)
// Class DXM.TTLLanguagePopup
class ATTLLanguagePopup : public ATTLCommonPopup
{
public:
	TArray<class UUserWidget*>                   ButtonAreaExtra;                                   // 0x4F8(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_25F9[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLLanguageInfomation>        TextLangInfomations;                               // 0x530(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FTTLLanguageInfomation>        VoiceLangInfomations;                              // 0x540(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ATTLLanguagePopup* GetDefaultObj();

	void ResetContentsExtra();
	void OnDecidedDelegate();
	void GrayOutButtonExtraOff(int32 TargetIndex);
	void GrayOutButtonExtra(int32 TargetIndex);
	int32 GetButtonNumExtra();
	void AddButtonAreaExtra(const TArray<class FText>& buttonTextList, int32 ReferenceIndex);
};

// 0x0 (0xCB0 - 0xCB0)
// Class DXM.TTLLayingMine
class ATTLLayingMine : public ATTLMineBase
{
public:

	static class UClass* StaticClass();
	static class ATTLLayingMine* GetDefaultObj();

};

// 0x1F8 (0x538 - 0x340)
// Class DXM.TTLLevelControlActor
class ATTLLevelControlActor : public ATTLActor
{
public:
	uint8                                        Pad_2602[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ETTLELevelState                   CurrentState;                                      // 0x341(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLELevelState                   OldState;                                          // 0x342(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsNavMeshDynamic;                                  // 0x343(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsNavMeshSafety;                                   // 0x344(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2603[0x2F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BgmDistanceFadeUnit;                               // 0x374(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundAtomCue*                         OverriddenDefaultEnvSFX;                           // 0x378(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2604[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsBaseCampToBaseCamp;                              // 0x381(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2605[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ACharacter*                            PlayerCharacter;                                   // 0x388(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundAtomCue*                         BGMBattle;                                         // 0x390(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundAtomCue*                         BGMResult;                                         // 0x398(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundAtomCue*                         BGMMenu;                                           // 0x3A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          LevelNamesForMission;                              // 0x3A8(0x10)(BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_2606[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          ManualLoadLevelNamesForMission;                    // 0x3C8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2607[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          LevelNamesForResult;                               // 0x3E8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2608[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          LevelNamesForUI;                                   // 0x420(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          LevelNamesForBaseCamp;                             // 0x430(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          LevelNamesForNextCamp;                             // 0x440(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         DoesOpenLevelForMission;                           // 0x450(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DoesOpenLevelForUI;                                // 0x451(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSkipResult;                                      // 0x452(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsPreloadEnabled;                                  // 0x453(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2609[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          PreloadNames;                                      // 0x458(0x10)(Edit, BlueprintVisible, ZeroConstructor, AdvancedDisplay, NativeAccessSpecifierPublic)
	bool                                         IsLevelSetVisibleFinished;                         // 0x468(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_260A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                MinimapA;                                          // 0x470(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                MinimapB;                                          // 0x478(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                MinimapC;                                          // 0x480(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                MinimapD;                                          // 0x488(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                MinimapE;                                          // 0x490(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                MinimapF;                                          // 0x498(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          MinimapIgnoreTags;                                 // 0x4A0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_260B[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         DoesBootAsProduction;                              // 0x4C0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DoesBootAsTrial;                                   // 0x4C1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DoesBootAsEvent;                                   // 0x4C2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_260C[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class APostProcessVolume*                    PostProcessVolume;                                 // 0x4C8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLLoadingScreen*                     LoadingScreen;                                     // 0x4D0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLELoadingType                  InitLoadingType;                                   // 0x4D8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLELoadingType                  EndLoadingType;                                    // 0x4D9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLELoadingType                  InitLoadingTypeAtRoadingEventMap;                  // 0x4DA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSkipResultAtBattle;                              // 0x4DB(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_260D[0x5C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLLevelControlActor* GetDefaultObj();

	void UpdateNavmesh();
	void StartSavingUI();
	void StartOrContinueLoadingUIOnStartSurvival();
	void StartMissionOnMyNpc();
	void StartLoadingUIDelegate();
	float StartLoadingUI(enum class ETTLELoadingType LoadingType);
	void StartHomeStartedEvent();
	void SpawnPlayerCharacterBP(enum class ETTLECharacterCommonSpawnType SpawnType);
	void SetupMissionRetry();
	void SetupContinuousMissionOrEvent();
	void SetUiResultToClientVisibleOnly();
	void SetMinimapFar(float NewFar);
	void SetMinimapCameraZ(float NewCameraZ);
	void SetMinimapCameraXY(float NewCameraX, float NewCameraY);
	void SetLevelState(enum class ETTLELevelState NewState);
	void SetFreezeRandomSpawnNPC();
	void ReturnToLevelTitle(class UObject* WorldContext, const class FString& Operation);
	void ReserveCaptureMinimap();
	void RequestSpawnPlayerArsenal();
	void PreloadingFinished();
	void OnSecretPartSceneToBaseCamp();
	void OnResultFinishedStateTick();
	void OnRequestSpawnArsenalWithNpcBP(class FName SelectNpcId);
	void OnRequestSpawnArsenalBP();
	void OnNetworkErrorPopupOpen(class ATTLPopUpBase* ErrorPopup);
	void OnMultiCampToMultiCampByClientOnly();
	void OnMultiCampToMultiCamp();
	void OnMultiCampToBaseCamp();
	void OnMenuToBaseCampStarted();
	void OnMenuToBaseCampFinished();
	void OnMenuLoadStartFromOpenLevelForUi();
	void OnLoadingFadeOut();
	void OnLevelLoadedWeatherVfx();
	void OnLevelLoadedWeatherSky();
	void OnLevelLoadedWeatherLighting();
	void OnLevelFinished();
	void OnLeavePlayerFromMission(class ATTLPlayerState* LeavePlayerState);
	void OnLeaveClientMultiplayPvpBp();
	void OnIceSceneToBaseCamp();
	void OnChangeOptionSetting(struct FTTLOptionInfo& OptionInfo);
	void OnBaseCampToMultiCamp();
	void OnBaseCampToMenu(enum class ETTLEInteractType ConsoleType);
	void OnBaseCampToIceScene();
	bool IsSurvivalReadyToMission();
	bool IsRunningLoadingUI();
	bool IsPrevRankMatch();
	bool IsPrevLevelTestMode();
	bool IsOpenMenuSceneOnReturnBaseCamep();
	bool IsNeedLoadingAtMissionEnd();
	bool IsInProgressUpdateNavmesh();
	bool IsInBaseCamp();
	bool IsEnableStartHomePlayBgm();
	bool IsDebugBattleFlowCondition();
	void GetPlayerCharacterSpawnInfo(struct FTTLPlayerAssembleInfo* Info, TArray<class FName>* SkillList, class FName* VoiceCharaID);
	class FName GetNextLevelNameAfterMission();
	enum class ETTLELoadingType GetLoadingTypeAtMissionRelease();
	void FinishSavingUI();
	void FinishLoadingUIDelegate(bool Immediate);
	float FinishLoadingUI(bool Immediate);
	void DestroyPlayerActorOnMultiplay();
	void DebugSpawnPlayerCharacterBP(enum class ETTLECharacterCommonSpawnType SpawnType, int32 PlayerIndex);
	void DebugSpawnArsenalImpl_(struct FTTLArsenalPartsInfoList& PartsList, enum class ETTLECharacterCommonSpawnType SpawnType, const struct FTransform& Transform);
	void DebugSetPlayersStartTransform();
	void DebugInitSingleMultiFlow();
	void CreateSurvivalDungeonSubLevel();
	void CreateSubLevelInstance(class FName LevelName, bool* OutSuccess, class ULevelStreamingKismet** SubLevel);
	void ContinueLoadingUI();
	void ClearMinimapIgnoreTags();
	void ClearMinimap();
	bool CheckSyncPlayerLevelState(enum class ETTLELevelState SyncState);
	void CheckSurvivalContinueAndHost(bool* IsHost, bool* IsSurvivalContinue);
	bool CheckStartLevelStateLevelLoading();
	bool CheckRankingAvailable();
	bool CheckOnlinePlayerStateNum();
	bool CheckMissionRetry();
	bool CheckHostPlayerLevelState(enum class ETTLELevelState CheckStateMin, enum class ETTLELevelState CheckStateMax);
	bool CheckDataAndDoOnceSendSurvivalInheritDataArrayToAllPlayer();
	bool CheckContinuousMissionOrEvent();
	bool CheckContinuousMission();
	bool ChangeEnvSE(class USoundAtomCue* Sound, float FadeInTime, float FadeOutTime, bool OverrideDefault);
	bool ChangeBGM(class USoundAtomCue* Sound, float FadeInTime, float FadeOutTime);
	void CaptureMinimap();
	bool AreReadyAllSurvivalSubLevels();
	bool AreLevelsVisibleCPP(TArray<class FName>& Levels, bool IsLastLevelTestMode);
	void ApplyMinimapSettings();
	void AddMinimapIgnoreTag(class FName AppendTag);
};

// 0x100 (0x438 - 0x338)
// Class DXM.TTLLevelScriptActor
class ATTLLevelScriptActor : public ATTLEventLevelScriptActor
{
public:
	class ATTLLevelControlActor*                 LevelController;                                   // 0x338(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2652[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UClass*>                        NPCClassList;                                      // 0x348(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class ATTLProjectileBase>> PoolingBulletClass;                                // 0x358(0x10)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	int32                                        MissionFirstSuccessfulEventMapDemoIndex;           // 0x368(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2653[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLSurvivalInfoDebugDraw*             SurvivalDebugDraw;                                 // 0x370(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MainMissionSequence;                               // 0x378(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        SubMissionSequence;                                // 0x37C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsEncounterEventHappen;                            // 0x380(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsCalledPreMissionFinished;                        // 0x381(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsProcessedMissionPlayersDead;                     // 0x382(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsCalledMissionFinished;                           // 0x383(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2654[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLLevelScriptActor*                  SubLevelScriptActor;                               // 0x388(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETTLEMissionResult                MissionFinishedResult;                             // 0x390(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2655[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CurrentTimer;                                      // 0x394(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TimerStart;                                        // 0x398(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TimerFinish;                                       // 0x39C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<float>                                TimerCallbackThresholds;                           // 0x3A0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	float                                        MulticastTimer;                                    // 0x3B0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsVisibleTimerHUD;                                 // 0x3B4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsPauseTimer;                                      // 0x3B5(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsCountDownTimer;                                  // 0x3B6(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2656[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MissionTotalTimer;                                 // 0x3B8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2657[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsOnceSubGoalCheck;                                // 0x3D0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2658[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<bool>                                 MissionPvPBattleReadyFinished;                     // 0x3D8(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FTTLMissionPvPTimeUpResult>    MissionPvPTimeUpResult;                            // 0x3E8(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2659[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLManualPopUpLatentActor*            TutorialRef;                                       // 0x420(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_265A[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLLevelScriptActor* GetDefaultObj();

	void UpdateGoal(enum class ETTLEGoalType Type, enum class ETTLEGoalControl Control, class FName Value, bool IsShowOnMissionExtensionTimeStarted);
	bool TryGetTargetArea(class FName Tag, TArray<class ATTLTargetArea*>* TargetAreaArray);
	bool TryGetFriendShipNPCOuterID(class FName& NpcID, int32* FriendValue, bool IsIncludedAddValuesDuringMission);
	bool TryGetFriendShipNPC(class AActor* TargetActor, int32* FriendValue, bool IsIncludedAddValuesDuringMission);
	bool TryAddFriendShipNPCOuterID(class FName& NpcID, int32 FriendValue);
	bool TryAddFriendShipNPC(class AActor* TargetActor, int32 FriendValue);
	void StartRepeatInput(bool IsRepeat, bool IsInitTransform, bool IsUseInitParameterAtFile);
	void StartPvPVictoryEvent(enum class ETTLEMissionResult MissionResult);
	void StartPvPTimeUpResultSending();
	void StartPvPBattleReady();
	void StartPvPBattle();
	void StartNPCFriendshipEvents(const TArray<class FName>& Events);
	void StartMissionTimerForMissionRanking(int32 StartTime, int32 EndTime, const TArray<int32>& CallbackTimes, bool IsVisibleHUD);
	void StartMissionTimer(int32 StartTime, int32 EndTime, const TArray<int32>& CallbackTimes, bool IsVisibleHUD);
	void StartCollectInput();
	void StartActorsForFinishedMissionSuddenlyFade();
	class AActor* SpawnNPC(class FName NpcID, struct FTransform& Transform, enum class ETTLNPCBelongingType Type);
	void SpawnFriendNPC();
	class AActor* SpawnEncounterNPC(class FName NpcID, class FName PartsListID, class FName& OverrideParameterID, struct FTransform& Transform, float SurrenderVPPercent, float HalfwayEventVPPercent);
	void ShowMissionProgress(enum class ETTLEMissionProgressType ProgressType, bool ShowDetail, class FName DetailTitle, class FName TargetTag, enum class ETTLEMissionProgressValueShowType ValueShowType, enum class ETTLEMissionProgressValueCountType ValueCountType, enum class ETTLEMissionProgressValueUnitType ValueUnitType, int32 DefaultCurrentValue, int32 DefaultMaxValue);
	void SetVisibilityCharacterFromMemberList(class AActor* Character, bool IsVisible);
	void SetUnDead(class AActor* TargetActor, bool IsUnDead);
	void SetOverrideCharacterName(class AActor* Character, class FName NameKey);
	void SetNPCSeriousBoost(class AActor* TargetActor, bool Flag);
	void SetNPCBelongingType(class AActor* TargetActor, enum class ETTLNPCBelongingType Type);
	void SetNPCAIFriendParam(class AActor* TargetActor, enum class ETTLAIFriendParamType Type, float Value);
	void SetNoConsumeFemtoByAttack(class AActor* TargetActor, bool NoConsumeFemto);
	void SetMissionProgressValueDirect(enum class ETTLEMissionProgressType ProgressType, int32 CurrentValue, int32 MaxValue);
	void SetMissionGroupVisible(class FName GroupTag, bool IsVisible);
	void SetMinimapFar(float NewFar);
	void SetMinimapEnableUpdateWhileMission(bool EnableUpdate);
	void SetMinimapDropItemZRange(float ZRange);
	void SetMinimapCameraZ(float NewCameraZ);
	void SetMinimapCameraXY(float NewCameraX, float NewCameraY);
	bool SetLevelVisible(class FName LevelName, bool Visible);
	void SetHideHUDWithoutRadar(bool IsHideHUD);
	void SetHideFromRadarWithTag(class FName Tag, bool IsHide);
	void SetHideFromRadar(class AActor* TargetActor, bool IsHide);
	void SetHateIncreasePerTime(bool Onoff, class AActor* TargetActor, class AActor* AttackTargetActor, float Rate);
	void SetHasNoHate(class AActor* TargetActor, bool Flag);
	void SetEncounterEventHappen(bool IsHappen);
	void SetEnableCommandRepeat(bool IsEnable, bool IsRepeat, bool IsInitTransform, bool IsUseInitParameterAtFile);
	void SetEnableCollectInput(bool IsEnable);
	void SetEnableCharacterControl(bool IsEnable);
	void SetContinuousMission(class FName MissionName);
	void SetCommunicationTalkRequestEnableOnTerm(enum class ETTLCommunicationTalkEnableTerm Term);
	void SetCommunicationTalkRequestEnable(bool IsEnable);
	void SetCalledMissionPreFinished(bool IsCalled);
	void SetBattleRange(class AActor* TargetActor, float Range);
	void SetAILeaderActor(class AActor* TargetActor, class AActor* LeaderActor);
	void SetAIIncomingTargetPoint(class AActor* TargetActor, class ATargetPoint* TargetPoint);
	void SetActorAIFlag(class AActor* TargetActor, enum class ETTLAIFlag Flag, bool Value);
	void RetireEncounterEventFriendNpc(class FName RetireFriendNpcID);
	class AActor* RespawnEnemy(class AActor* ActorToReSpawn, class AActor* SubLevelOwner);
	void ResetOuterSkillAndSetNewSkillsSafety(TArray<class FName>& Skills, const class FString& MissinoID);
	void ResetOuterSkillAndSetNewSkills(TArray<class FName>& Skills);
	void RequestFriendNPCMissionSuccessMessage();
	void RequestFriendNPCCommunicationMessage(enum class ETTLCommunicationTalkTerm TalkTerm);
	void RepairActorStatus(class AActor* TargetActor, float RepairVPPercent, bool IsRepairBadStatus);
	void RemoveTutorialKeyAssignment(enum class ETTLOptionKeyConfigKeyType KeyType);
	void RemoveStayAfterBrokenToRaderWithTag(class FName Tag);
	void RemoveStayAfterBrokenFromRader(class AActor* TargetActor);
	void RemoveOverrideCharacterName(class AActor* Character);
	void RemoveMissionTarget(class AActor* TargetActor, class AActor* RemoveActor);
	void RemoveHighlightToRaderWithTag(class FName Tag);
	void RemoveHighlightFromRader(class AActor* TargetActor);
	void RegisterMissionPlayerCallbacks(TArray<struct FTTLMissionCallbackSetting>& CallbackSettings);
	void RecoverFemto(class AActor* TargetActor, float RecoverFemtoPercent);
	void PlayTutorialByTitle(class UObject* WorldContextObject_, const struct FLatentActionInfo& LatentInfo_, TSubclassOf<class ATTLManualPopUp> SubClass, class FName Title);
	void PlayTutorial(class UObject* WorldContextObject_, const struct FLatentActionInfo& LatentInfo_, TSubclassOf<class ATTLManualPopUp> SubClass, int32 BigIndex, int32 SmallIndex, bool IsManualOpen);
	void PauseMissionTimer(bool IsPause, bool IsVisibleHUD);
	void OpenManualPage(int32 BigIndex, int32 SmallIndex, bool IsOpen, bool IsReading);
	void OnUnregisterTargetArea(class FName GroupTag);
	void OnResultEventStartedBP(enum class ETTLEMissionResult MissionResult);
	void OnResultEventStarted(enum class ETTLEMissionResult MissionResult);
	void OnPlayingEventStartedBP(class FName EventName);
	void OnPlayingEventStarted(class FName EventName);
	void OnPlayingEventPreStartedBP(class FName EventName);
	void OnPlayingEventPreStarted(class FName EventName);
	void OnPlayingEventFinishedBP(class FName EventName, enum class ETTLEventFinishedType EventFinishedType);
	void OnPlayingEventFinished(class FName EventName, enum class ETTLEventFinishedType EventFinishedType);
	void OnMissionVictoryScreenStarted(enum class ETTLEMissionResult MissionResult, class FName EventID, int32 Player1Id, int32 Player2Id);
	void OnMissionVictoryScreenFinished();
	void OnMissionUpdatedBP(class FName EncounterEventID, class FName MissionLevelName);
	void OnMissionUpdated(class FName EncounterEventID, class FName MissionLevelName);
	void OnMissionTimerCallbackBP(int32 CurrentTime, int32 RemainingTime);
	void OnMissionSubGoalGroupActorDestroyedBP(const struct FTTLMissionSubGoalActorDestroyedParam& Param);
	void OnMissionSubGoalGroupActorDestroyed(const struct FTTLMissionSubGoalActorDestroyedParam& Param);
	void OnMissionSubGoalDestructibleActorDestroyedBP(const struct FTTLMissionSubGoalActorDestroyedParam& Param);
	void OnMissionSubGoalDestructibleActorDestroyed(const struct FTTLMissionSubGoalActorDestroyedParam& Param);
	void OnMissionStartedBP();
	void OnMissionStarted();
	void OnMissionRetiredBP();
	void OnMissionRetired();
	void OnMissionPreFinishedBP(bool IsEnable);
	void OnMissionPreFinished(bool IsEnable);
	void OnMissionPlayersDeadBP();
	void OnMissionPlayersDead();
	void OnMissionPlayerDamagedBP(class AActor* DamageInstigator);
	void OnMissionPlayerDamaged(class AActor* DamageInstigator);
	void OnMissionPlayerChanged();
	void OnMissionPickUppedPartsBP(class FName GroupTag);
	void OnMissionPickUppedParts(class FName GroupTag);
	void OnMissionGroupActorDestroyedBP(class FName GroupTag, int32 Num, class AActor* DestroyedActor, class AActor* DamageCauserActor);
	void OnMissionGroupActorDestroyed(class FName GroupTag, int32 Num, class AActor* DestroyedActor, class AActor* DamageCauserActor);
	void OnMissionFinishedBP();
	void OnMissionFinished(enum class ETTLEMissionResult MissionResult);
	void OnMissionFailed();
	void OnMissionFadeOutScreenStarted();
	void OnMissionFadeOutScreenFinished();
	void OnMissionExtensionTimeStartedBP();
	void OnMissionExtensionTimeStarted();
	void OnMissionExtensionTimeFinishedBP();
	void OnMissionExtensionTimeFinished();
	void OnMissionEvaluationScreenStarted();
	void OnMissionEvaluationScreenFinished();
	void OnMissionEndingScreenFinished(enum class ETTLEMissionResult MissionResult);
	void OnMissionEndingEventStarted(enum class ETTLEMissionResult MissionResult);
	void OnMissionEndingEventFinished();
	void OnMissionDuelEvaluationScreenStarted();
	void OnMissionDuelEvaluationScreenFinished();
	void OnMissionDestructibleActorDestroyedBP(class FName GroupTag, int32 Num, class AActor* DestroyedActor);
	void OnMissionDestructibleActorDestroyed(class FName GroupTag, int32 Num, class AActor* DestroyedActor);
	void OnMissionCatchableActorDestroyedBP(int32 Num, class AActor* DestroyedActor);
	void OnMissionCatchableActorDestroyed(int32 Num, class AActor* DestroyedActor);
	void OnMissionBreakableObjectStartBreakBP(class AActor* TargetActor);
	void OnMissionBreakableObjectStartBreak(class AActor* TargetActor);
	void OnMissionAddScoreBP(class AActor* TargetActor, int32 Score, int32 TotalScore);
	void OnMissionAddScore(class AActor* TargetActor, int32 Score);
	void OnMissionActorReleaseObjectBP(class AActor* TargetActor, class AActor* CaughtObject);
	void OnMissionActorReleaseObject(class AActor* TargetActor, class AActor* CaughtObject);
	void OnMissionActorHPPercentageLessThanBP(class AActor* TargetActor, float Percentage);
	void OnMissionActorHPPercentageLessThan(class AActor* TargetActor, float Percentage);
	void OnMissionActorCatchObjectBP(class AActor* TargetActor, class AActor* CaughtObject);
	void OnMissionActorCatchObject(class AActor* TargetActor, class AActor* CaughtObject);
	void OnMissionActorArsenalGotOnBP(class AActor* Actor);
	void OnMissionActorArsenalGotOffBP(class AActor* Actor);
	void OnLevelVisibleFinished();
	void OnLevelLoadFinished();
	void OnLevelLoadedPvpResult();
	void OnLevelLoadedDuelResult();
	void OnLevelFinished();
	void OnGoalTransportGimmickBP(TArray<class FName>& Tag);
	void OnGoalTransportGimmick(TArray<class FName>& Tag);
	void OnGettingInformationGimmickBP(class FName Tag);
	void OnGettingInformationGimmick(class FName Tag);
	void OnDeadPlayerArsenalBP();
	void OnDeadPlayerArsenal();
	void NPCJoinNormalConditionFail(class FName& NpcID);
	void NPCJoinEncounterConditionComplete(class FName& NpcID);
	void NotifiedGeneralDataFromGameBP(struct FTTLGeneralNotificationData& NotificationData);
	void NotifiedGeneralDataFromGame(struct FTTLGeneralNotificationData& NotificationData);
	void NextMissionSequence();
	void MissionSolomonAction(class ATTLCharacterCommon* SolomonActor, class UAnimMontage* AnimMontage, class FName SectionName, bool IsLeft);
	void JudgePvPTimeUp();
	bool IsPlayerArsenalDead();
	bool IsMissionTrialMode();
	bool IsMissionTimerPaused();
	bool IsMissionTimerHUDVisible();
	bool IsMissionPreFinished();
	bool IsMissionFinished();
	bool IsMissionE3Mode();
	bool IsHireMissionFriendNPCClass();
	void IsBossBattleLoopMode(enum class ETTLAIYesNoEnum* OutputYesNo);
	bool IsArsenalCatchActorHasTag(class AActor* Actor, class FName Tag);
	void InitializeMissionSettings(class FName MissionName);
	void IgnitionMirage(class AActor* TargetActor);
	void HideMissionProgress(enum class ETTLEMissionProgressType ProgressType);
	class ACharacter* GetPvPVictoryCharacter(enum class ETTLEMissionResult MissionResult);
	bool GetNPCSwitchValue(class AActor* TargetActor, enum class ETTLAIControllerSwitch SwitchIndex);
	class ATTLCharacterCommon* GetNPCFromClass(TSubclassOf<class ATTLCharacterCommon> Class, enum class ETTLEFunctionResult* OutResult);
	void GetNPCFriendshipEventList(enum class ETTLEMissionResult MissionResult, TArray<class FName>* FriendShipUpEvents, TArray<class FName>* FriendEvents);
	bool GetNPCBelongingType(class AActor* TargetActor, enum class ETTLNPCBelongingType* Type);
	float GetMissionTotalTime();
	float GetMissionStartTime();
	enum class ETTLEMissionResult GetMissionResult();
	enum class ETTLMissionProgressState GetMissionProgressState();
	int32 GetMissionGroupRemainingActorNum(class FName GroupTag);
	int32 GetMissionGroupActorPlayerDestroyedNum(class FName GroupTag);
	int32 GetMissionGroupActorMaxNum(class FName GroupTag);
	float GetMissionEndTime();
	float GetMissionElapsedTime();
	float GetMissionCurrentTime();
	class AActor* GetMissionActorByAssetClass(TSoftClassPtr<class AActor> AssetReference, enum class ETTLEFunctionResult* OutResult);
	class FString GetLevelNameNormalized(class ULevelStreamingKismet* Level);
	void GetEncountNPCPartsInfo(struct FTTLNPCEncounterParamRow& EncountParam, int32 Index, class FName* OutNPCID, class FName* OutPartsListID, class FName* OutOverrideParameterID);
	class FName GetEncounterEventToHappen(class FName* OutTalkEventID);
	bool GetEncounterEventData(class FName& EncounterID, struct FTTLNPCEncounterParamRow* OutEncounterParam, TArray<class FName>* OutSpecialTalkEventID, TMap<class FName, class FName>* SkillInvokeList, struct FTTLEncountAdditionalEvents* OutAdditionalEvent);
	void ForceNPCDeath(class AActor* TargetActor);
	void ForceGetOnArsenal(class ATTLCharacterCommon* GetOnArsenal);
	void FinishMissionTimer();
	void FinishedPvPBattleReady();
	void EndRepeatInput();
	void EndCollectInput();
	void DestroyArsenalPartsFromMission(class AActor* TargetActor, enum class ETTLPartsType PartsType, bool IsCompleteDestroy);
	void DebugForceContinueMissionSettings(class FName MissionName);
	class ULevelStreamingKismet* CreateDynamicSubLevel(const class FString& LevelNameToAdd);
	void CommandEnableAIAndUnRegister(class FName Tag, bool IsEnable);
	void ClearTutorialKeyAssignment();
	void ClearMinimapIgnoreTags();
	void ClearMinimap();
	bool CheckSyncPvPTimeUpResult();
	bool CheckSyncPvPBattleReadyFinished();
	void CheckPvPMissionContinuable();
	bool CheckPvPBattleReady();
	void ChangeWarningAreas(const TArray<class AActor*>& DisableWarningAreas, const TArray<class AActor*>& EnableWarningAreas);
	void ChangeMissionSequenceBP(int32 MainSequence, int32 SubSequence);
	void ChangeMissionSequence(int32 MainSequence, int32 SubSequence);
	void ChangeMissionProgressState(enum class ETTLMissionProgressState ChangeState);
	bool ChangeEnvSE(class USoundAtomCue* Sound, float FadeInTime, float FadeOutTime);
	bool ChangeBGM(class USoundAtomCue* Sound, float FadeInTime, float FadeOutTime);
	void ChangeAIControllerToIntrusion(class AActor* TargetActor, enum class ETTLEAITypeForIntrusion AIType);
	void ChangeAIController(class AActor* TargetActor, TSubclassOf<class AController> ControllerClass);
	void CaptureMinimap();
	void CallSubGoalUpdateBP();
	void CallSubGoalUpdate();
	void CallResultEventFinished();
	void CallMissionUpdated(class FName EncounterEventID, class FName MissionLevelName);
	void CallMissionRetired();
	void CallMissionPreFinished(bool IsEnable);
	void CallMissionFinished(enum class ETTLEMissionResult MissionResult);
	void CallMissionFadeOutScreenFinished();
	void CallMissionEvaluationScreenStarted();
	void CallMissionEndingEventFinished(enum class ETTLEMissionResult MissionResult, bool IsSkipExtensionTime);
	void AddTutorialKeyAssignment(enum class ETTLOptionKeyConfigKeyType KeyType, const class FString& OverwriteText);
	void AddStayAfterBrokenToRaderWithTag(class FName Tag);
	void AddStayAfterBrokenToRader(class AActor* TargetActor);
	void AddPvPTimeUpResult(struct FTTLMissionPvPTimeUpResult& TimeUpResult);
	void AddPvPBattleReadyFinished();
	void AddMissionTarget(class AActor* TargetActor, class AActor* AddActor);
	void AddMissionSpecialExpense(int32 AddMoney);
	void AddMinimapIgnoreTag(class FName AppendTag);
	void AddHighlightToRaderWithTag(class FName Tag, bool IsAllyOnHighlight);
	void AddBossTargetToRader(class AActor* TargetActor, bool IsAllyOnHighlight);
};

// 0x1A8 (0x1D0 - 0x28)
// Class DXM.TTLLightningMoveObject
class UTTLLightningMoveObject : public UObject
{
public:
	UMulticastDelegateProperty_                  OnStartLightningMove;                              // 0x28(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxMoveStart;                                       // 0x38(0x98)(ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxParam                           FxMoveLoop;                                        // 0xD0(0x98)(ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_265B[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlayback                        VFXMoveLoopL;                                      // 0x188(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        VFXMoveLoopR;                                      // 0x1A0(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_265C[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLLightningMoveObject* GetDefaultObj();

};

// 0xA0 (0xC8 - 0x28)
// Class DXM.TTLLineChatDataManager
class UTTLLineChatDataManager : public UObject
{
public:
	TArray<struct FTTLLineChatParamRow>          LineChatArray;                                     // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class FName>                          LineChatSerifKey;                                  // 0x38(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FTTLLineChatManagerParamRow>   LineChatManageArray;                               // 0x48(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FTTLLineChatFrameTypeParamRow> LineChatFrameTypeArray;                            // 0x58(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class FName>                          LineChatFrameTypeArray_SpeakerName;                // 0x68(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FTTLLineChatTagParamRow>       LineChatTagArray;                                  // 0x78(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FTTLLineChatDispParam>         LineChatDispArray;                                 // 0x88(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class FName>                          NpcIDList;                                         // 0x98(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class FName>                          SpeakerNameParamNameList;                          // 0xA8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FTTLLineChatManageInfo>        LineChatManageInfo;                                // 0xB8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLLineChatDataManager* GetDefaultObj();

	void SetUnread(int32 Target, bool Unread);
	void SetMessageCount(int32 Target, int32 MessageCount);
	bool IsTalk(int32 Talk);
	bool IsNpc(class UTTLSaveGameObject* CurrentGameData, class FName& NpcID);
	bool IsNotice(class UTTLSaveGameObject* CurrentGameData, class UObject* WorldContextObject);
	bool IsNewChat(class UTTLSaveGameObject* CurrentGameData, class FName& MissionID, class UObject* WorldContextObject);
	bool IsMissionClear(class UTTLSaveGameObject* CurrentGameData, class FName& MissionID, class FName& MissionID2, class FName& MissionID3);
	void Initialize(class UTTLSaveGameObject* CurrentGameData);
	float GetWaitTime(int32 Talk, int32 Num);
	class FName GetTitleName(int32 Talk);
	class FString GetTitle(int32 Talk, const class FString& PlayerName);
	int32 GetTextMax(int32 Talk);
	class FText GetText(int32 Talk, int32 Num, const class FString& PlayerName);
	int32 GetTalkMax();
	class FText GetTagText(class FText& Text);
	class FString GetString(int32 Talk, int32 Num, const class FString& PlayerName, class UObject* WorldContextObject);
	int32 GetStartTalkIndex(class FName& Start_talk_id);
	class FName GetSpeakerName(int32 Talk, int32 Num);
	bool GetRightTalk(int32 Talk, int32 Num);
	int32 GetInfoMax();
	bool GetInfo(int32 Target, struct FTTLLineChatManageInfo* OutInfo);
	int32 GetFrameType(class FName& SpeakerNameParamName);
	int32 GetChatCount(class UTTLSaveGameObject* CurrentGameData);
	class FName GenNpcID(class FName& Name);
	void AddInfo(struct FTTLLineChatManageInfo& Info);
};

// 0x68 (0x428 - 0x3C0)
// Class DXM.TTLLineChatPopUp
class ATTLLineChatPopUp : public ATTLPopUpBase
{
public:
	class UTTLUIHeaderComponent*                 HeaderMenuComponent;                               // 0x3C0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLUILineChatComponent*               LineChatComponent;                                 // 0x3C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLUILineChatListComponent*           LineChatListComponent;                             // 0x3D0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           HeaderWidget;                                      // 0x3D8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ETTLLineChatState                 LineChatState;                                     // 0x3E0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_266A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WaitDeltaTime;                                     // 0x3E4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_266B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         TalkEnd;                                           // 0x3EC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_266C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TalkNo;                                            // 0x3F0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        MessageCount;                                      // 0x3F4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        StartMessageCount;                                 // 0x3F8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_266D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLLineChatListInfo>          LineChatListInfo;                                  // 0x400(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class UUserWidget*                           WritingTalkWidget;                                 // 0x410(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_266E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WriteStartWaitTime;                                // 0x41C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLAutoTextInputComponent*            AutoTextInputComp;                                 // 0x420(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ATTLLineChatPopUp* GetDefaultObj();

	void OpenLineChatPopup(bool UseHeader);
	void Initialize();
	void EndContents();
	float CloseLineChatPopUp();
	void AddTalk(int32 Talk);
	void AddProc2();
	void AddProc();
};

// 0x0 (0x630 - 0x630)
// Class DXM.TTLLineChatScene
class ATTLLineChatScene : public ATTLMenuSceneBase
{
public:

	static class UClass* StaticClass();
	static class ATTLLineChatScene* GetDefaultObj();

	void FinalizeScene();
};

// 0x40 (0x68 - 0x28)
// Class DXM.TTLLoadAsyncAction
class UTTLLoadAsyncAction : public UObject
{
public:
	TArray<struct FSoftObjectPath>               AssetReferences;                                   // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UObject*>                       AssetRawObjects;                                   // 0x38(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class UTTLLoadAsyncAction*                   SiblingAction;                                     // 0x48(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_266F[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLLoadAsyncAction* GetDefaultObj();

	void ReleaseInternal();
	void LoadInternal();
	void Finish();
};

// 0x18 (0x40 - 0x28)
// Class DXM.TTLLoader
class UTTLLoader : public UObject
{
public:
	TArray<struct FTTLLoadAsyncRequest>          LoadRequests;                                      // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        CurrentState;                                      // 0x38(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2670[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLLoader* GetDefaultObj();

	void LoadPrimaryWidgetClasses(const TArray<TSoftClassPtr<class UUserWidget>>& Classes);
	void LoadPrimaryActorClasses(const TArray<TSoftClassPtr<class AActor>>& Classes);
	bool Initialize();
	bool Finalize();
};

// 0x1D8 (0x500 - 0x328)
// Class DXM.TTLLoadingScreen
class ATTLLoadingScreen : public AActor
{
public:
	uint8                                        Pad_2672[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UUserWidget>               WidgetClass;                                       // 0x330(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           LoadingScreenWidget;                               // 0x338(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           LoadingIconWidget;                                 // 0x340(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           PVPLoadingScreenWidget;                            // 0x348(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2673[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ETTLELoadingScreenState           State;                                             // 0x360(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETTLELoadingType                  LoadingType;                                       // 0x361(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2674[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LoadingWaitFrameCount;                             // 0x364(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      StartAnimation;                                    // 0x368(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      FinishAnimation;                                   // 0x370(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      LoadingAnimation;                                  // 0x378(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      LoadingIconStartAnimation;                         // 0x380(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      LoadingIconAnimation;                              // 0x388(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      SavingAnimation;                                   // 0x390(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      FadeInAnimation;                                   // 0x398(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      NextTipsAnimation;                                 // 0x3A0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      PVPStartAnimation;                                 // 0x3A8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      PVPFinishAnimation;                                // 0x3B0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      PVPBgAnimation;                                    // 0x3B8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      PVPMyAnimation_Red;                                // 0x3C0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      PVPMyAnimation_Blue;                               // 0x3C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      PVPAllyAnimation_Red;                              // 0x3D0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      PVPAllyAnimation_Blue;                             // 0x3D8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      PVPEnemyAnimation_Red;                             // 0x3E0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      PVPEnemyAnimation_Blue;                            // 0x3E8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      ChangeWhiteAnimation;                              // 0x3F0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      ChangeBlackAnimation;                              // 0x3F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      MoveIconToCenterAnimation;                         // 0x400(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      MoveIconToRightAnimation;                          // 0x408(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      WhiteAnimIn;                                       // 0x410(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      WhiteAnimOut;                                      // 0x418(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      WhiteAnimLoop;                                     // 0x420(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2675[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UDataTable*                            TipsDataTable;                                     // 0x438(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2676[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLPlayerController*                  CurrentController;                                 // 0x468(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2677[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SavingAnimMaxWait;                                 // 0x480(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2678[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLAutoTextInputComponent*            AutoTextInputComp;                                 // 0x488(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidget*                               Widget_SavingTextArea;                             // 0x490(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        LoopSE_ASStandby;                                  // 0x498(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FTTLLoadBackgroundParam>       LoadingBackgroundParams;                           // 0x4B0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class AActor*                                LoadingBackgroundActor;                            // 0x4C0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class AActor>                    LoadingBackgroundActorClass;                       // 0x4C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTransform                            LoadingBackgroundTransform;                        // 0x4D0(0x30)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ATTLLoadingScreen* GetDefaultObj();

	void StartSaving();
	float StartLoading(enum class ETTLELoadingType LoadingType);
	void StartAutoSaving();
	void SetupTipsList(TArray<enum class ETTLETipsCategory>& TipsCategoryList);
	void SetupContents();
	void SetItemVisibility(enum class ETTLELoadingType LoadingType);
	void PlayLoadIconLoopAnimation();
	void PlayClosingAnimation();
	void OnLoadingScreenFinished();
	void OnInputAction(enum class ETTLEActionType KeyType, bool IsPressed);
	void NowLoading();
	bool IsRunningLoadingScreen();
	void ForceFinishLoading();
	void FinishSavingRequest(bool IsSuccess);
	void FinishSaving();
	float FinishLoading();
};

// 0x48 (0x70 - 0x28)
// Class DXM.TTLLocalLoadAsyncAction
class UTTLLocalLoadAsyncAction : public UObject
{
public:
	class ATTLLocalClassLoader*                  ParentLoader;                                      // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AActor>                  ClassToLoad;                                       // 0x30(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          NextActions;                                       // 0x58(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2679[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLLocalLoadAsyncAction* GetDefaultObj();

	void Finish();
};

// 0x30 (0x358 - 0x328)
// Class DXM.TTLLocalClassLoader
class ATTLLocalClassLoader : public AActor
{
public:
	UMulticastDelegateProperty_                  OnLocalClassLoaded;                                // 0x328(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TArray<class UTTLLocalLoadAsyncAction*>      LoadActions;                                       // 0x338(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<TSoftClassPtr<class AActor>>          PersistentClasses;                                 // 0x348(0x10)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ATTLLocalClassLoader* GetDefaultObj();

	void WaitLoading();
	void SetPersistentClasses(TArray<TSoftClassPtr<class AActor>>& Classes);
	void LoadActorClass(TSoftClassPtr<class AActor> ActorClass, class FName NextAction);
	bool IsActorClassLoading(TSoftClassPtr<class AActor>& ActorClass);
};

// 0x0 (0x1C8 - 0x1C8)
// Class DXM.TTLLocalPlayer
class UTTLLocalPlayer : public ULocalPlayer
{
public:

	static class UClass* StaticClass();
	static class UTTLLocalPlayer* GetDefaultObj();

};

// 0x148 (0x238 - 0xF0)
// Class DXM.TTLLockonComponent
class UTTLLockonComponent : public UActorComponent
{
public:
	enum class ETTLLockonSightType               LockonSightType;                                   // 0xF0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2687[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             LockonSightOffset;                                 // 0xF4(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             LockonSightSize;                                   // 0xFC(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DoubleLockonTime;                                  // 0x104(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxLockonDistance;                                 // 0x108(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2688[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                OverrideTargetCharacter;                           // 0x110(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                AttackTargetPawn;                                  // 0x118(0x8)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OuterAttackDelayTime;                              // 0x120(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2689[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        AimingPawnList;                                    // 0x128(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        MissileAimingTargetList;                           // 0x138(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FBox2D>                        AimingBoxList;                                     // 0x148(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                AimingTimerList;                                   // 0x158(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                AimingScoreList;                                   // 0x168(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                AimingOutTimerList;                                // 0x178(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                AimingNotSelectedTimeList;                         // 0x188(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class APawn*                                 OwnerPawn;                                         // 0x198(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBasicStatusComponent*              OwnerStatus;                                       // 0x1A0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                OldTargetPawn;                                     // 0x1A8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         StickTrigger;                                      // 0x1B0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_268A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         ChangeTarget;                                      // 0x1B8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CancelLockon;                                      // 0x1B9(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ResetTarget;                                       // 0x1BA(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_268B[0x19];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         UseLockonRevise;                                   // 0x1D4(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_268C[0xB];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                RemoteCharacterTarget;                             // 0x1E0(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsRemoteTargetLockon;                              // 0x1E8(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_268D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               RemoteCharacterScreenLocation;                     // 0x1EC(0xC)(Net, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               RemoteCharacterScreenLoc_RestrictClose;            // 0x1F8(0xC)(Net, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              CameraCenterOffsetRotator;                         // 0x204(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_268E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ShotBlurUpperLimit;                                // 0x214(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ShotBlurLowerLimit;                                // 0x218(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_268F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLBasicStatusComponent*              BasicStatusComponent;                              // 0x220(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2690[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLLockonComponent* GetDefaultObj();

	void ResetLockonArray();
	void ProcessUpdateAimingList(int32 PriorityIndex, const TArray<class AActor*>& NewAimingPawnList, const TArray<struct FBox2D>& NewAimingBoxList, const TArray<float>& NewAimingTimerList, const TArray<float>& NewAimingScoreList, const TArray<float>& NewAimingOutTimerList, const TArray<int32>& NewAimingNotSelectedTimeList, bool IsChange);
	void ProcessInputLockonCamera(bool IsPress);
	bool ProcessFindPriorityCharacter(const TArray<class AActor*>& NewAimingPawnList, int32* Index);
	bool PreListupAimingCharacter(float LockOnRange, float MissileLockonRange, TArray<struct FTTLLockonTargetUnit>* OutTargetUnits);
	void NotifyLockonParameter();
	bool LockonRevise_TargetSwitching(const TArray<class AActor*>& NewAimingCharacterList, const TArray<float>& NewAimingScoreList, const TArray<int32>& NewAimingNotSelectedTimeList, bool IsPlayer);
	void LockonRevise_CheckTargetSwitching(bool IsPlayer);
	bool ListupAimingCharacter(float LockOnRange, float MissileLockonRange);
	void Initialize();
	void GetTargetParams(struct FTTLLockonTargetUnit& TargetUnit, class AActor** Actor, float* DistanceToTarget, float* Score, float* OutTimer, struct FBox2D* ScreenBox);
	float GetModifiedDoubleLockonTime(class AActor* TargetActor);
	float GetModifiedAimingDeltaTime(class AActor* TargetActor, float OriginalDeltaTime);
	void GetLockOnTarget(class AActor** Target);
	void ChangeSightCallFromCPlus();
	void ChangeLockOnReviseState(bool NewLockonRevise);
	void CalcShootLocation(const struct FVector& MuzzleLocation, float BulletSpeed, struct FVector* ShootLocation, bool NeedsCalcDeviation, bool NeedsRange, float Range, bool IsRestrictCloseness, bool IsOuterRandomEnabled);
	void CalcScreenCenterLocation_RestrictCloseness(struct FVector* ShootLocation, bool NeedsRange, float Range);
	void CalcScreenCenterLocation(struct FVector* ShootLocation, bool NeedsRange, float Range);
	int32 CalcInsertIndex(class AActor* Target, float DeltaSeconds, float Score, TArray<float>& NewAimingTimerList, TArray<float>& NewAimingScoreList, int32* OldIndex, float* OldTime);
};

// 0xB8 (0x1B0 - 0xF8)
// Class DXM.TTLLockonHUDComponent
class UTTLLockonHUDComponent : public UTTLActorComponent
{
public:
	TSubclassOf<class ATTLActor>                 UIClass;                                           // 0xF8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          DefaultColor1;                                     // 0x100(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          DefaultColor2;                                     // 0x110(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          MainLockonColor1;                                  // 0x120(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          MainLockonColor2;                                  // 0x130(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          SubLockonColor1;                                   // 0x140(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          SubLockonColor2;                                   // 0x150(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundAtomCue*                         LockonSE;                                          // 0x160(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LockonStartScale;                                  // 0x168(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2691[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ATTLActor*>                     UIList;                                            // 0x170(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        ActorList;                                         // 0x180(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class ATTLCharacterCommon*                   PlayerCharacter;                                   // 0x190(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLLockonComponent*                   LockonComponent;                                   // 0x198(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDraw;                                            // 0x1A0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2692[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLLockonHUDComponent* GetDefaultObj();

	void ProcessLockonHUD(const TArray<class AActor*>& AimingActorList, const TArray<float>& TimerList, float DoubleLockonTime, float DeltaSeconds);
	void InitializeFromPlayer(class ATTLCharacterCommon* Player);
	void Initialize();
	void Finalize();
	void DestroyLockonHUD(const TArray<class AActor*>& AimingActorList);
};

// 0x8 (0x4E8 - 0x4E0)
// Class DXM.TTLLockonSpherePartsPawn
class ATTLLockonSpherePartsPawn : public ATTLLockonPartsPawn
{
public:
	class USphereComponent*                      SelfCollide;                                       // 0x4E0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ATTLLockonSpherePartsPawn* GetDefaultObj();

};

// 0x10 (0x4F0 - 0x4E0)
// Class DXM.TTLLockonCapsulePartsPawn
class ATTLLockonCapsulePartsPawn : public ATTLLockonPartsPawn
{
public:
	class UCapsuleComponent*                     SelfCollide;                                       // 0x4E0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2693[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLLockonCapsulePartsPawn* GetDefaultObj();

};

// 0x10 (0x4F0 - 0x4E0)
// Class DXM.TTLLockonBoxPartsPawn
class ATTLLockonBoxPartsPawn : public ATTLLockonPartsPawn
{
public:
	class UBoxComponent*                         SelfCollide;                                       // 0x4E0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2694[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLLockonBoxPartsPawn* GetDefaultObj();

};

// 0x18 (0x500 - 0x4E8)
// Class DXM.TTLBossTrtsLockonSpherePartsPawn
class ATTLBossTrtsLockonSpherePartsPawn : public ATTLLockonSpherePartsPawn
{
public:
	class ATTLENBossTrts01Character*             OwnerBoss;                                         // 0x4E8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LockonIndex;                                       // 0x4F0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2695[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLBossTrtsLockonSpherePartsPawn* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class DXM.TTLMessageLogLibrary
class UTTLMessageLogLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UTTLMessageLogLibrary* GetDefaultObj();

	void SetUpPacketFromActor(class AActor* Actor, bool* EnableOverrideID, class FString* OverrideID, bool* EnableUserName, class FString* UserName, bool* EnableNPCMetaID, class FString* NpcMetaID, bool* EnableEnemyID, class FString* EnemyID);
};

// 0x0 (0x28 - 0x28)
// Class DXM.TTLLogMessage
class UTTLLogMessage : public UObject
{
public:

	static class UClass* StaticClass();
	static class UTTLLogMessage* GetDefaultObj();

};

// 0x0 (0x88 - 0x88)
// Class DXM.TTLLogMessageParam
class UTTLLogMessageParam : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UTTLLogMessageParam* GetDefaultObj();

};

// 0x100 (0x730 - 0x630)
// Class DXM.TTLLogoScene
class ATTLLogoScene : public ATTLMenuSceneBase
{
public:
	uint8                                        Pad_269A[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UTexture2D*>                    LogoTextures;                                      // 0x658(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_269B[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class AActor>                  NowLoadingClass;                                   // 0x6A8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class AActor>                  CommonPopupClass;                                  // 0x6D0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class AActor>                  LanguagePopupClass;                                // 0x6F8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_269C[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLLogoScene* GetDefaultObj();

	void InitializeScene_Implementation();
};

// 0x0 (0x990 - 0x990)
// Class DXM.TTLLongRangeBigLaser
class ATTLLongRangeBigLaser : public ATTLBigLaser
{
public:

	static class UClass* StaticClass();
	static class ATTLLongRangeBigLaser* GetDefaultObj();

};

// 0x920 (0xDE0 - 0x4C0)
// Class DXM.TTLLongRangeLaserCannon
class ATTLLongRangeLaserCannon : public ATTLPawn
{
public:
	float                                        DetectRange_radius;                                // 0x4C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DetectRange_length;                                // 0x4C4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDebugDraw;                                       // 0x4C8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_269F[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsAttackEvery;                                     // 0x4CA(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsStartIsStop;                                     // 0x4CB(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26A0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ATTLProjectileBase>        BulletClass;                                       // 0x4D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  MuzzleSocketName;                                  // 0x4D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  Save_LaserSocketName;                              // 0x4E0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimationAsset*                       Anim_Idle;                                         // 0x4E8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimationAsset*                       Anim_ShotStart;                                    // 0x4F0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimationAsset*                       Anim_ShotEnd;                                      // 0x4F8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              DefaultRotation;                                   // 0x500(0xC)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	enum class ETTLLongRageLaserCannon_AnimType  CurrentAnimType;                                   // 0x50C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26A1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFirearmInfo                       Shoot_Info;                                        // 0x510(0x648)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_26A2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              BoneRotate;                                        // 0xB5C(0xC)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                               TargetLocation;                                    // 0xB68(0xC)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26A3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       DefaultRootComponent;                              // 0xB78(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                BodyMeshComponent;                                 // 0xB80(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26A4[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  BrokenSkeltalMeshTag;                              // 0xBA0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  DevrisStaticMeshTag;                               // 0xBA8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLAIActionLRangeLaserComponent*      AILRangeComponent;                                 // 0xBB0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLTargetObjComponent*                TargetObjComponent;                                // 0xBB8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26A5[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FlipTimeLivintToDead;                              // 0xBC8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26A6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LockOnTargetTimeLimit;                             // 0xBD0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxNumOfShot;                                      // 0xBD4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ShotInterval;                                      // 0xBD8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StartAttackInterval;                               // 0xBDC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EndAttackInterval;                                 // 0xBE0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ExtraThickLaserRange;                              // 0xBE4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ExtraThickLaserRadius;                             // 0xBE8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ExtraThickLaserNoticeStartTime;                    // 0xBEC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ExtraThickLaserStartTime;                          // 0xBF0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ExtraThickLaserEndTime;                            // 0xBF4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        NoticeIrradiationTime;                             // 0xBF8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        IrradiationTime;                                   // 0xBFC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTTLongRangeLaserCannonL_LaserParam   LaserParam;                                        // 0xC00(0x3C)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_26A7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlayback                        LaserEffectResource_ChargeEffect;                  // 0xC40(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class ATTLBigLaser*                          LaserRef;                                          // 0xC58(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           LaserEffectResource;                               // 0xC60(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class FName                                  EffectAttachSocket;                                // 0xCF8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimationAsset*                       BrokenAnimationForClosed;                          // 0xD00(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimationAsset*                       BrokenAnimationForOpening;                         // 0xD08(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           BrokenExplosionVFX;                                // 0xD10(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        BrokenExplosionVFXPlayback;                        // 0xDA8(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class FName                                  ExplosionVFXSocketName;                            // 0xDC0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              ExplosionVFXRotation;                              // 0xDC8(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_26A8[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLLongRangeLaserCannon* GetDefaultObj();

	void StopThinking();
	void StartThinking();
	void Shoot(class AActor* TargetActor);
	void SetNoDadamage(bool IsNodamage);
	void SetHateImportance(float HateRatio);
	void SetAllAttackSetting(bool IsEnable);
	void OnStatusDead();
	void MulticastShoot(class AActor* Target);
	void MulticastChangeLRLState(enum class ETTLAILRangeLaser_State State);
	void LookAtTargetDelta(class AActor* TargetActor, float Speed);
	bool IsCaptureMinimapTiming();
	bool IsBoneRotate();
	void InitializeBP();
	class UTTLBasicStatusComponent* GetStatusComponent();
	struct FTransform GetMuzzleSocketTransform();
	struct FTTLongRangeLaserCannonL_LaserParam GetLaserParam();
	struct FRotator GetBoneRotator();
	void DamageReaction_OnTakeAnyDamageDelegate(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
};

// 0x168 (0x258 - 0xF0)
// Class DXM.TTLLongRangeWeaponParameter
class UTTLLongRangeWeaponParameter : public UActorComponent
{
public:
	class FName                                  WeaponName;                                        // 0xF0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Range;                                             // 0xF8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Damage;                                            // 0xFC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AttributeDamage;                                   // 0x100(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLWeaponDamageAttribute         DamageAttributeType;                               // 0x104(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26A9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LifeSeconds;                                       // 0x108(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SequenceRadius;                                    // 0x10C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MagazineSize;                                      // 0x110(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxBulletNum;                                      // 0x114(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceIgnoreGravity;                             // 0x118(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BulletSpeed;                                       // 0x11C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BulletSpeedRandomizer;                             // 0x120(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinSpreadAngle;                                    // 0x124(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSpreadAngle;                                    // 0x128(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GroupingRate;                                      // 0x12C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CouldRapidFire;                                    // 0x130(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26AA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ReloadTime;                                        // 0x134(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UnFireTime;                                        // 0x138(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChargeTime;                                        // 0x13C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageBonusScale;                                  // 0x140(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageBonusTime;                                   // 0x144(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LaserMaxTime;                                      // 0x148(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxChargeLaserTime;                                // 0x14C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StayTime;                                          // 0x150(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxChargeBonusScale;                               // 0x154(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChargeBonusScale;                                  // 0x158(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EnergizationRange;                                 // 0x15C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxEnergizationEnemy;                              // 0x160(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EnergizationDamageAttenuate;                       // 0x164(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalAttenuate;                                 // 0x168(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EnergizationAbnormalAttenuate;                     // 0x16C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootPreparationTime;                              // 0x170(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StiffTime;                                         // 0x174(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NoLockOnTime;                                      // 0x178(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraControlRate;                                 // 0x17C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DeployRailGunSecondAnimTime;                       // 0x180(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DecreaseDamageRatio;                               // 0x184(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AddMinSpreadAngleRatio;                            // 0x188(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AddMaxSpreadAngleRatio;                            // 0x18C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanAttackAlly;                                     // 0x190(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanSwallowUpAllyBullet;                            // 0x191(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26AB[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FirstSpeed;                                        // 0x194(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Acceleration;                                      // 0x198(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurningDegree;                                     // 0x19C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HomingStartTime;                                   // 0x1A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExpansionTime;                                     // 0x1A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ShootRate;                                         // 0x1A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SameTimeShootNum;                                  // 0x1AC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageAttenuate;                                   // 0x1B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootCoolTime;                                     // 0x1B4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMPRiseOnUse;                                      // 0x1B8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ConsumeFemto;                                      // 0x1BC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinFemtoValue;                                     // 0x1C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BulletGravityScale;                                // 0x1C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BulletSlowDownSpeedOnGravity;                      // 0x1C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ShotNum;                                           // 0x1CC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShotSpreadAngle;                                   // 0x1D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CriticalStartDistance;                             // 0x1D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CriticalEndDistance;                               // 0x1D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CriticalBonusScale;                                // 0x1DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeDamage;                                     // 0x1E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeTime;                                       // 0x1E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeRadius;                                     // 0x1E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMPRiseOnExplode;                                  // 0x1EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeKnockOut;                                   // 0x1F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeKnockBack;                                  // 0x1F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeMinDamageScale;                             // 0x1F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxExplodeDamageRadius;                            // 0x1FC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeAbnormalValue;                              // 0x200(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ProximityFuseExplodeRagTime;                       // 0x204(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WhiteOutContinuationTime;                          // 0x208(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Hp;                                                // 0x20C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TMPRiseOnAbnormalSpace;                            // 0x210(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AddValueOnAbnormalSpace;                           // 0x214(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalSpaceContinuationTime;                     // 0x218(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalSpaceRadius;                               // 0x21C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalSpaceAppearDelay;                          // 0x220(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalSpaceAppearTime;                           // 0x224(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbnormalSpaceDisappearTime;                        // 0x228(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplosionNearPlayerDistance;                       // 0x22C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FirstWaitTime;                                     // 0x230(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DetonateTime;                                      // 0x234(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxLayingNum;                                      // 0x238(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlowScale;                                         // 0x23C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlowInterval;                                      // 0x240(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HealVPValue;                                       // 0x244(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HealAbnormalStatusRate;                            // 0x248(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HealPartsHPValue;                                  // 0x24C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WeakHealRate;                                      // 0x250(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WeakHealContinuationTime;                          // 0x254(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLLongRangeWeaponParameter* GetDefaultObj();

	void InitializeParameter();
};

// 0x0 (0x340 - 0x340)
// Class DXM.TTLMainMenu3DWidget
class ATTLMainMenu3DWidget : public ATTLActor
{
public:

	static class UClass* StaticClass();
	static class ATTLMainMenu3DWidget* GetDefaultObj();

};

// 0x0 (0x88 - 0x88)
// Class DXM.TTLMainMenuNotificationParam
class UTTLMainMenuNotificationParam : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UTTLMainMenuNotificationParam* GetDefaultObj();

};

// 0x70 (0x6A0 - 0x630)
// Class DXM.TTLMainMenuScene
class ATTLMainMenuScene : public ATTLMenuSceneBase
{
public:
	enum class ETTLEMainMenuSceneState           MainMenuState;                                     // 0x630(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26AE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLMainMenu3DWidget*                  WidgetActor;                                       // 0x638(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           MenuWidget;                                        // 0x640(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MenuDepth;                                         // 0x648(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26AF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FIntVector>                    CursorList;                                        // 0x650(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FIntVector                            MaxCursorIndex;                                    // 0x660(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FIntVector                            BeforeCursor;                                      // 0x66C(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                NotificationAreaClass;                             // 0x678(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                NotificationClass;                                 // 0x680(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTTLMainMenuNotificationArea>  NotificationAreaList;                              // 0x688(0x10)(BlueprintVisible, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_26B0[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLMainMenuScene* GetDefaultObj();

	void UpdateArrowIndex();
	void SetupMainMenu();
	void SetNewNotificationCount(int32 AreaIndex, class UVerticalBox* buttonList);
	void SetMaxCursorIndex_SelectMenu();
	void RemoveNewIcon(int32 AreaIndex, int32 NotificationIndex);
	void MoveCursor(int32 OffsetX, int32 OffsetY, int32 OffsetZ, int32 RepeatCount);
	void MakeTestNotification(int32 AreaIndex, const class FString& NotificationIndexString);
	int32 GetUnopenFacilityCount();
	class UTexture2D* GetTexture2dFromRenderTarget(class UTextureRenderTarget2D* RenderTarget);
	int32 GetNotificationCount(int32 AreaIndex);
};

// 0x160 (0x790 - 0x630)
// Class DXM.TTLMainTitleScene
class ATTLMainTitleScene : public ATTLMenuSceneBase
{
public:
	class ATTLLoadingScreen*                     LoadingScreen;                                     // 0x630(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26B1[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UUserWidget>               Class_Dem_title_btn00;                             // 0x668(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AActor>                    NowLoadingClass;                                   // 0x670(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class AActor>                  YesNoPopupClass;                                   // 0x678(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class AActor>                  CommonPopupClass;                                  // 0x6A0(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class AActor>                  LanguagePopupClass;                                // 0x6C8(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_Cmn_parts_fade00;                            // 0x6F0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UManaComponent*                        MovieControl;                                      // 0x6F8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSoftObjectPtr<class UManaTexture>>   MovieTextures;                                     // 0x700(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TSoftObjectPtr<class UMaterialInterface>> MovieMaterials;                                    // 0x710(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class FName                                  MovieRenderWidgetName;                             // 0x720(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26B2[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                SaveDataSlotForContinue;                           // 0x768(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_26B3[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UUserWidget*                           OptionBGWidget;                                    // 0x780(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATTLOptionMenuActor*                   OptionMenuActor;                                   // 0x788(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ATTLMainTitleScene* GetDefaultObj();

	class ATTLRewardPopUp* SpawnRewardPopupBP();
	void SpawnAndSettingOptionMenuActor(TSubclassOf<class ATTLOptionMenuActor> MenuClass);
	void OpenOptionMenuBP();
	void OnOpenOptionExit();
	void OnLoadMovieFinished();
};

// 0x108 (0x4C8 - 0x3C0)
// Class DXM.TTLManualPopUp
class ATTLManualPopUp : public ATTLPopUpBase
{
public:
	uint8                                        Pad_26B5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MMaxNumBigIndexFromDataTable;                      // 0x3C4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MMaxNumSmallIndexFromDataTable;                    // 0x3C8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MMaxNumPageIndexFromDataTable;                     // 0x3CC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                MTitleFromStringTable;                             // 0x3D0(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ScrollListNum;                                     // 0x3E0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        DisplayNumScrollItems;                             // 0x3E4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26B6[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsCreateFromSaveData;                              // 0x3F0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsUseIconForRichText;                              // 0x3F1(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         MIsLoop_PageIndex;                                 // 0x3F2(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDebugLog;                                        // 0x3F3(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26B7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLManualScrollListComponent*         MManualScrollComponent;                            // 0x3F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           MPageWidget;                                       // 0x400(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26B8[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UUserWidget*>                   PageIndexWidgetArray;                              // 0x428(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      MWidgetAnimFocus_RightArrow;                       // 0x438(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      MWidgetAnimFocus_leftArrow;                        // 0x440(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UWidgetAnimation>       PageAnimIn;                                        // 0x448(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      PageSlideAnim_CenterToLeft;                        // 0x450(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      PageSlideAnim_RightToCenter;                       // 0x458(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UWidgetAnimation>       PageIndexAnimIn;                                   // 0x460(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UWidgetAnimation>       PageIndexAnimOut;                                  // 0x468(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                PageIndexClass;                                    // 0x470(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      FadeIn_TutorialStart;                              // 0x478(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      MWidgetAnim_Bg_loop;                               // 0x480(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      MWidgetAnim_Bg_out;                                // 0x488(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsGamePause;                                       // 0x490(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnabledControl;                                  // 0x491(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26B9[0x17];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsLatentDoing;                                     // 0x4A9(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26BA[0x1E];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLManualPopUp* GetDefaultObj();

	void SetScrollProperty(int32 DisplayNum, int32 MaxItemNum);
	void SetCloseTutorialToGameState();
	void SetBGVisible(enum class ESlateVisibility Visible);
	bool SetAnimationFromBP();
	void PlayTutorialLatent();
	void PlayTutorial(bool PauseGame);
	void OnRepeatInputAction(enum class ETTLEActionType KeyType, int32 Count);
	void OnInputAction(enum class ETTLEActionType KeyType, bool IsPressed);
	void OnEndSlideIn_RightToCenter();
	void OnEndSlideIn_LeftToCenter();
	void OnEndSlideIn_CenterToRight();
	void OnEndSlideIn_CenterToLeft();
	void OnEnd_PlayAnimBGIn();
	void InitGamePause(bool IsGamePause);
	void Init();
	void FinalizeGamePause();
	void FinalizeDisableMenuControl();
	void ClearLatent();
};

// 0x38 (0x360 - 0x328)
// Class DXM.TTLManualPopUpLatentActor
class ATTLManualPopUpLatentActor : public AActor
{
public:
	uint8                                        Pad_26BB[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLManualPopUp*                       ManualRef;                                         // 0x350(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsLatentDoing;                                     // 0x358(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26BC[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLManualPopUpLatentActor* GetDefaultObj();

	void PlayTutorialLatentByTitle(class UObject* WorldContextObject_, const struct FLatentActionInfo& LatentInfo_, TSubclassOf<class ATTLManualPopUp> SubClass, class FName TutorialTitle);
	void PlayTutorialLatent(class UObject* WorldContextObject_, const struct FLatentActionInfo& LatentInfo_, TSubclassOf<class ATTLManualPopUp> SubClass, int32 BigIndex, int32 SmallIndex);
	void ClearLatent();
};

// 0xA8 (0x240 - 0x198)
// Class DXM.TTLManualScrollListComponent
class UTTLManualScrollListComponent : public UTTLScrollListComponentBase
{
public:
	bool                                         IsUseSaveData;                                     // 0x198(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsUseScrollItemFromManualInfo;                     // 0x199(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26C2[0x16];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FText>                          MBigItemArray;                                     // 0x1B0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FTTLSmallItem>                 MSmallItemArray;                                   // 0x1C0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UScrollBox*                            MWidget_ScrollHelpWidget;                          // 0x1D0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           MWidget_ScrollBigItem;                             // 0x1D8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           MWidget_ScrollSmallItem;                           // 0x1E0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               BigItem_PrimitiveClass;                            // 0x1E8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               MWidgetBigItemClassType;                           // 0x1F0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               MWidgetSmallItemClassType;                         // 0x1F8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                               MScrollWidget;                                     // 0x200(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      MWidgetAnim_Open;                                  // 0x208(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      MBigItemWidgetAnim_Open;                           // 0x210(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      MBigItemWidgetAnim_ON;                             // 0x218(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      MBigItemWidgetAnim_OFF;                            // 0x220(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      MSmallItemWidgetAnim_ON;                           // 0x228(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      MSmallItemWidgetAnim_OFF;                          // 0x230(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETTLManualScroll_StateType        MState;                                            // 0x238(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         MIsLoop_SelectSmallItems;                          // 0x239(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsCreateByFocusing;                                // 0x23A(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26C3[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLManualScrollListComponent* GetDefaultObj();

	bool SetTextToScrollBigItem(int32 Index, class FText& Text);
	void SetBigItemListNum(int32 DisplayNum);
	bool RemoveItem(class UUserWidget* Widget, enum class ETTLManualScrollItemType ItemType);
	bool InitializeBP();
	void Initialize(class UUserWidget* LayoutWidget, int32 DisplayNum, int32 ListNumMax);
	void InitBigItemList();
	class UUserWidget* AddItem(class FText Text, int32 Index, enum class ETTLManualScrollItemType ItemType, int32 SmallIndex);
};

// 0x28 (0x350 - 0x328)
// Class DXM.TTLMapPinActor
class ATTLMapPinActor : public AActor
{
public:
	uint8                                        Pad_26C4[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLAutoTextInputComponent*            AutoTextInputComp;                                 // 0x340(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        InputInterval;                                     // 0x348(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26C5[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLMapPinActor* GetDefaultObj();

	void StartAutoInputAreaText();
	void PlayPinAnim();
};

// 0x98 (0xC0 - 0x28)
// Class DXM.TTLMatchmakeRefereeManager
class UTTLMatchmakeRefereeManager : public UObject
{
public:
	uint8                                        Pad_26C8[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnGetMatchmakeRefereeStatsComplete;                // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnStartMatchmakeRoundStarted;                      // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnStartMatchmakeRoundComplete;                     // 0x58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEndMatchmakeRoundComplete;                       // 0x68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	uint8                                        Pad_26C9[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsRoundStarted;                                    // 0xA0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26CA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLGameInstance*                      GameInstance;                                      // 0xA8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26CB[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLMatchmakeRefereeManager* GetDefaultObj();

	void UpdateMatchmakeWaitingRoom(class UObject* WorldContextObject, bool IsHost);
	void StartDuelRound();
	void RegisterDuelSessionNotification();
	void OnStartMatchmakeRoundCompleteCallback(bool WasSuccessful);
	bool IsHost();
	void InitMatchmakeWaitingRoom(class UObject* WorldContextObject);
	void GetMatchmakeRefereeStats();
	void EndMatchmakeRoundWithoutReport();
	bool EndMatchmakeRound(enum class ETTLEMissionResult MissionResult);
	bool EndDuelRound(TArray<struct FTTLRateAndPrincipalID>& RateAndPrincipalIDArray);
};

// 0x28 (0xE8 - 0xC0)
// Class DXM.TTLMatchmakeRefereeManagerEos
class UTTLMatchmakeRefereeManagerEos : public UTTLMatchmakeRefereeManager
{
public:
	uint8                                        Pad_26CC[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLMatchmakeRefereeManagerEos* GetDefaultObj();

};

// 0x50 (0x148 - 0xF8)
// Class DXM.TTLMaterialParamaterComponent
class UTTLMaterialParamaterComponent : public UTTLActorComponent
{
public:
	TArray<int32>                                MaterialIndices;                                   // 0xF8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FTTLMaterialVectorParameterValue> VectorParameters;                                  // 0x108(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FTTLMaterialScalarParameterValue> ScalerParameters;                                  // 0x118(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FTTLMaterialTextureParameterValue> TextureParamaters;                                 // 0x128(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_26CD[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLMaterialParamaterComponent* GetDefaultObj();

};

// 0x20 (0x168 - 0x148)
// Class DXM.TTLMaterialParamaterAnimComp
class UTTLMaterialParamaterAnimComp : public UTTLMaterialParamaterComponent
{
public:
	uint8                                        Pad_26CE[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLMaterialParamaterAnimComp* GetDefaultObj();

};

// 0x28 (0x3E8 - 0x3C0)
// Class DXM.TTLMemberMenuPopUp
class ATTLMemberMenuPopUp : public ATTLPopUpBase
{
public:
	class UWidgetAnimation*                      Animation_PartsButtonON;                           // 0x3C0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_PartsButtonOFF;                          // 0x3C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UUserWidget*>                   ButtonsList;                                       // 0x3D0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	int32                                        CurrentCursor;                                     // 0x3E0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_26CF[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLMemberMenuPopUp* GetDefaultObj();

};

// 0x118 (0x440 - 0x328)
// Class DXM.TTLCommonPopupControlActor
class ATTLCommonPopupControlActor : public AActor
{
public:
	class ATTLCommonPopup*                       PopupActor;                                        // 0x328(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                    PopupClass;                                        // 0x330(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class ATTLMenuSceneBase>      ParentScene;                                       // 0x338(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26D0[0x100];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLCommonPopupControlActor* GetDefaultObj();

	void OnPopupDecided();
	void OnPopupCancelled();
};

// 0x118 (0x440 - 0x328)
// Class DXM.TTLYesNoPopupControlActor
class ATTLYesNoPopupControlActor : public AActor
{
public:
	class ATTLYesNoPopUp*                        PopupActor;                                        // 0x328(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                    PopupClass;                                        // 0x330(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class ATTLMenuSceneBase>      ParentScene;                                       // 0x338(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26D1[0x100];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLYesNoPopupControlActor* GetDefaultObj();

	void OnPopupYes();
	void OnPopupNo();
};

// 0x1A0 (0x4C8 - 0x328)
// Class DXM.TTLNoticeListPopupControlActor
class ATTLNoticeListPopupControlActor : public AActor
{
public:
	class ATTLNoticeListPopUp*                   PopupActor;                                        // 0x328(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26D2[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AActor>                    PopupClass;                                        // 0x338(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class ATTLMenuSceneBase>      ParentScene;                                       // 0x340(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26D3[0x180];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLNoticeListPopupControlActor* GetDefaultObj();

	void OnPopupDecided();
	void OnPopupCancelled();
};

// 0x0 (0x28 - 0x28)
// Class DXM.TTLMeshComponentsSearchInterface
class ITTLMeshComponentsSearchInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ITTLMeshComponentsSearchInterface* GetDefaultObj();

};

// 0x50 (0x390 - 0x340)
// Class DXM.TTLMessageTalker
class ATTLMessageTalker : public ATTLActor
{
public:
	class UWidgetAnimation*                      Animation_EnableFreeInputButton;                   // 0x340(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26D6[0x48];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLMessageTalker* GetDefaultObj();

	void SetChatItem_FreeInput(class UUserWidget* ChatItemWidget);
	void OnInputRepeatAction(enum class ETTLEActionType KeyType, int32 Count);
	void OnInputAction(enum class ETTLEActionType KeyType, bool IsPressed);
	void KeyboardClosed(const class FString& InputText, bool IsCancel);
	bool IsKeyboardActive();
	void CreateKeyboard();
};

// 0x10 (0x218 - 0x208)
// Class DXM.TTLMessageTalkerTab
class UTTLMessageTalkerTab : public UUserWidget
{
public:
	class UWidgetAnimation*                      Animation_EnableTab;                               // 0x208(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_DisableTab;                              // 0x210(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLMessageTalkerTab* GetDefaultObj();

};

// 0x18 (0x1B0 - 0x198)
// Class DXM.TTLMessageTkrScrollListComponent
class UTTLMessageTkrScrollListComponent : public UTTLScrollListComponentBase
{
public:
	uint8                                        Pad_26D8[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLMessageTkrScrollListComponent* GetDefaultObj();

	bool InitializeBP();
	void Initialize(class UUserWidget* LayoutWidget, int32 DisplayNum, int32 ListNumMax);
	class UUserWidget* CreateButtonWidget(int32 Position);
};

// 0x38 (0x60 - 0x28)
// Class DXM.TTLMeteoriteMove
class UTTLMeteoriteMove : public UObject
{
public:
	uint8                                        Pad_26D9[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               StartPosition;                                     // 0x40(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               EndPosition;                                       // 0x4C(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLMeteorite*                         Self;                                              // 0x58(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLMeteoriteMove* GetDefaultObj();

};

// 0x340 (0x680 - 0x340)
// Class DXM.TTLMeteorite
class ATTLMeteorite : public ATTLActor
{
public:
	uint8                                        Pad_26E2[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class AActor>>            IgnoreTakeAnyDamage;                               // 0x348(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                        Pad_26E3[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsEnableFallPointShadow;                           // 0x380(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26E4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ShadowMeshRotationRatio;                           // 0x384(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           DistanceCurveScale;                                // 0x388(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsChangedShsdowScale;                              // 0x390(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsDrawShadowEndLocation;                           // 0x391(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26E5[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsIgnoreVFXEnd;                                    // 0x393(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26E6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponent*                BodyMeshComponent;                                 // 0x398(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                BroekenBodyMeshComponent;                          // 0x3A0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLObjectStatusComponent*             ObjStatusComponent;                                // 0x3A8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          DamageParamComponent;                              // 0x3B0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26E7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimationAsset*                       RotateAnimation;                                   // 0x3C0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimationAsset*                       BrokenAnimation;                                   // 0x3C8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLMeteoriteMove*                     MoveController;                                    // 0x3D0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLMeteoriteMoveType             MoveType;                                          // 0x3D8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLMeteoriteStateType            CurrentState;                                      // 0x3D9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26E8[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MeteoriteDamage;                                   // 0x3DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26E9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Velocity;                                          // 0x3E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DeadHeight;                                        // 0x3E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26EA[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        InitMeteoriteScaleRatio;                           // 0x40C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MeteoriteScaleRatio;                               // 0x410(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScalingTime;                                       // 0x414(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlipTimeForBrokern;                                // 0x418(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotateSpeed;                                       // 0x41C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DecalScale;                                        // 0x420(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsNoBrokenWithMeteorite;                           // 0x424(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26EB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        FlameCountForCheckLandscape;                       // 0x428(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LayDistanceForLandscape;                           // 0x42C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TraceRadius;                                       // 0x430(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDebugDrawSphereTrace;                            // 0x434(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26EC[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsCheckGround;                                     // 0x43C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDebugDraw;                                       // 0x43D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsCheckGround_PlayAnim;                            // 0x43E(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26ED[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AnimEnableHeight;                                  // 0x440(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AnimEnableCheckFrame;                              // 0x444(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26EE[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsDebugDumpHitInfo;                                // 0x44D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26EF[0xB];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsCollisionCheckHeight;                            // 0x459(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26F0[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CollisionCheckFrameNum;                            // 0x45C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26F1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CollisionCheckHeight;                              // 0x464(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           ExplosionVFX;                                      // 0x468(0x98)(Edit, BlueprintVisible, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           TracingVFX;                                        // 0x500(0x98)(Edit, BlueprintVisible, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           OutViewExplosionVFX;                               // 0x598(0x98)(Edit, BlueprintVisible, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        TracingVFX_Playback;                               // 0x630(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        ExplosionVFX_Playback;                             // 0x648(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class FName                                  TracingSocketName;                                 // 0x660(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ADecalActor>               HitDecal;                                          // 0x668(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DecalRayOffset;                                    // 0x670(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26F2[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLMeteorite* GetDefaultObj();

	void StopVFXTracing();
	void StartMove();
	void StartExplosion();
	void StartEvent(class FName EventName);
	void RunServerInitBroken();
	void PlayVFXTracing();
	void PlayVFXExplosion();
	void PlayAnimation_Explosion();
	void OnTakePointDamageDelegate(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& ShotFromDirection, class UDamageType* DamageType, class AActor* DamageCauser);
	void OnTakeAnyDamageDelegate(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void OnStatusDeadDelegate(class AActor* DamageCauser, struct FVector& HitLocation);
	void OnBeginOverlapFunc(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void FlipMeteoriteMesh(bool IsVisibleNormalMesh);
	void EndEvent(class FName EventName, enum class ETTLEventFinishedType EventFinishedType);
	void DebugDrawBP();
	void AsyncDeadBP(bool IsVisibleNormalMesh, float DelayTime);
};

// 0x0 (0x60 - 0x60)
// Class DXM.TTLMeteoriteMoveStraight_Controlled
class UTTLMeteoriteMoveStraight_Controlled : public UTTLMeteoriteMove
{
public:

	static class UClass* StaticClass();
	static class UTTLMeteoriteMoveStraight_Controlled* GetDefaultObj();

};

// 0x170 (0x498 - 0x328)
// Class DXM.TTLMeteoriteController
class ATTLMeteoriteController : public AActor
{
public:
	uint8                                        Pad_26F5[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsEnableFallPointShadow;                           // 0x348(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsEnableOutViewExplosionVFX;                       // 0x349(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsEnableBrokenAnim;                                // 0x34A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26F6[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       DefaultRootComponent;                              // 0x350(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                         StartBoxComponent;                                 // 0x358(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                         EndBoxComponent;                                   // 0x360(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UChildActorComponent*                  ChildComponent;                                    // 0x368(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                    MeteoriteActor;                                    // 0x370(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MinNumOfMeteorite;                                 // 0x378(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxNumOfMeteorite;                                 // 0x37C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MinSpawnTimeMeteorite;                             // 0x380(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxSpawnTimeMeteorite;                             // 0x384(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinMeteoriteDamage;                                // 0x388(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxMeteoriteDamage;                                // 0x38C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxMeteoriteVP;                                    // 0x390(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinMeteoriteVP;                                    // 0x394(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxMeteoriteScale;                                 // 0x398(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinMeteoriteScale;                                 // 0x39C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InitMeteoriteScale;                                // 0x3A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinVelocity;                                       // 0x3A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxVelocity;                                       // 0x3A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinRotatorSpeed;                                   // 0x3AC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxRotatorSpeed;                                   // 0x3B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MeteoriteScalingTime;                              // 0x3B4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DisapearHeight;                                    // 0x3B8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26F7[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ETTLMeteoriteController_MeteoriteMoveType MeteoriteMoveType;                                 // 0x3BD(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsStartChange;                                     // 0x3BE(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26F8[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StartSecondsTime;                                  // 0x3C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsEnableCollisionByPlayerDistance;                 // 0x3C4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsEnableCollisionCheckByCharaDistance;             // 0x3C5(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26F9[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLMeteoriteHitTargetInfo>    CollisionEnableActorArray;                         // 0x3C8(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	int32                                        CollisionCheckFrameCheckNum;                       // 0x3D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsEnableCollisionCheckByHeight;                    // 0x3DC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26FA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CollisionCheckHeight;                              // 0x3E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsDebugShowCheckCollision;                         // 0x3E4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsEnableAnimCheck;                                 // 0x3E5(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26FB[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AnimEnableHeight;                                  // 0x3E8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AnimEnableCheckFlame;                              // 0x3EC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsDebugDraw;                                       // 0x3F0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsDebugDrawForSphere;                              // 0x3F1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26FC[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MeteoTargetHitIndex;                               // 0x3F4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsNeedTargetHitMeteorite;                          // 0x3F8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsOverrideTargetParameter;                         // 0x3F9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26FD[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TargetMeteoriteDamage;                             // 0x3FC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TargetMeteoriteScale;                              // 0x400(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TargetVelocity;                                    // 0x404(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TargetVP;                                          // 0x408(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TargetRotatorSpeed;                                // 0x40C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26FE[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class AActor>>            IgnoreTakeAnyDamage;                               // 0x418(0x10)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	bool                                         IsUseMulti;                                        // 0x428(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26FF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SpawnSpanMulti;                                    // 0x42C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsOverrideTargetParameterAtMulti;                  // 0x430(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2700[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MultiMeteoDamage;                                  // 0x434(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MultiMeteoScale;                                   // 0x438(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MultiMeteoDeadHeight;                              // 0x43C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MultiMeteoHP;                                      // 0x440(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MultiMeteoSpeed;                                   // 0x444(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MultiMeteoRotatorRate;                             // 0x448(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsNoScaleVFX;                                      // 0x44C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2701[0x4B];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLMeteoriteController* GetDefaultObj();

	void StopMeteorite();
	void StartMeteorite();
	class ATTLMeteorite* SpawnMeteoriteToTarget(enum class ETTLMeteoriteController_MeteoriteMoveType MoveType);
	void SpawnMeteoriteAll();
	class ATTLMeteorite* SpawnMeteorite(enum class ETTLMeteoriteController_MeteoriteMoveType MoveType);
	void OverrideTargetParameter(class ATTLMeteorite* Meteorite, float Damage, float Scale, float DeadHeight, float Hp, float Velocity, float RotatorSpeed);
	void MulticastCreateMeteorite(int32 Index);
	void InitStart();
	float GetMeteoriteSpawnTimeInRange();
	int32 GetMeteoriteSpawnNumInRange();
	float GetMeteoriteDamageInRange();
	void DebugPrintStartLocation();
	void DebugPrintEndLocation();
	void AsyncSpawnMeteoriteAllBP(float Delay, int32 Index);
};

// 0xB0 (0x670 - 0x5C0)
// Class DXM.TTLMinelayerWeapon
class ATTLMinelayerWeapon : public ATTLSupportWeaponBase
{
public:
	TSubclassOf<class ATTLProjectileBase>        MineClass;                                         // 0x5C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2702[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           ShootFailedFx;                                     // 0x5D0(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_2703[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLMinelayerWeapon* GetDefaultObj();

};

// 0x8 (0xAD0 - 0xAC8)
// Class DXM.TTLMineThrowerFirearmControlComp
class UTTLMineThrowerFirearmControlComp : public UTTLFirearmControlComponent
{
public:
	uint8                                        Pad_2704[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLMineThrowerFirearmControlComp* GetDefaultObj();

};

// 0x3B0 (0x4A0 - 0xF0)
// Class DXM.TTLMirageComponent
class UTTLMirageComponent : public UActorComponent
{
public:
	class ACharacter*                            OwnerCharacter;                                    // 0xF0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_270B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USkinnedMeshComponent*                 ArmLMesh;                                          // 0x100(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkinnedMeshComponent*                 ArmRMesh;                                          // 0x108(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkinnedMeshComponent*                 CenterbodyMesh;                                    // 0x110(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkinnedMeshComponent*                 HeadMesh;                                          // 0x118(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkinnedMeshComponent*                 LegsMesh;                                          // 0x120(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkinnedMeshComponent*                 WeaponRackLMesh;                                   // 0x128(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkinnedMeshComponent*                 WeaponRackRMesh;                                   // 0x130(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UTTLBadStatusVFXComponent> BadStatusVFXComp;                                  // 0x138(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMaterialInstanceDynamic*>      CommonMaterialInstances;                           // 0x140(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UMaterialInstanceDynamic*>      HeadMaterialInstances;                             // 0x150(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UMaterialInstanceDynamic*>      BodyMaterialInstances;                             // 0x160(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UMaterialInstanceDynamic*>      ArmLMaterialInstances;                             // 0x170(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UMaterialInstanceDynamic*>      ArmRMaterialInstances;                             // 0x180(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UMaterialInstanceDynamic*>      LegsMaterialInstances;                             // 0x190(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UMaterialInstanceDynamic*>      WeaponsMaterialInstances;                          // 0x1A0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         MiragePressed;                                     // 0x1B0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_270C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Miragecount;                                       // 0x1B4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                SpawnTimers;                                       // 0x1B8(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        SpawnDelayTime;                                    // 0x1C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_270D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ATTLAIController>          DefaultAIController;                               // 0x1D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLAIController*                      ChildeAIController;                                // 0x1D8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsControlledAsChild;                               // 0x1E0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_270E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ACharacter*>                    SpawnChildCharacters;                              // 0x1E8(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        ReserveStrengthFlashPower;                         // 0x1F8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_270F[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           FxBackpack;                                        // 0x210(0x98)(ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxParam                           FxSpawnParent;                                     // 0x2A8(0x98)(ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxParam                           FxSpawnChild;                                      // 0x340(0x98)(ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxParam                           FxDestroyChild;                                    // 0x3D8(0x98)(ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        VFXBackpack;                                       // 0x470(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          ChildVFXTimer;                                     // 0x488(0x8)(NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2710[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLMirageComponent* GetDefaultObj();

	void UpdateWeaponMaterials();
	void UpdateMirageMaterial(enum class ETTLPartsType Type);
	bool SpawnMirageBP(TSubclassOf<class ATTLAIController> MirageController, bool TriggeredLeft, bool TriggeredRight, float Femto);
	void SetWeaponMaterials();
	void SetMaterialFlashValue(float Value);
	void SetEnableVFXBackpack(bool Enable);
	void ProcessSpawn(int32 ControllerIndex);
	bool ProcessMirageInput(TSubclassOf<class ATTLAIController> MirageController, bool SpawnMirage, bool TriggeredLeft, bool TriggeredRight, float Femto);
	bool ProcessChild(float DeltaSeconds);
	void PlayVFXSpawnParent();
	void PlayVFXSpawnChild();
	void PlayVFXDestroyChild();
	void OnStartParent(float Femto);
	void OnStartChild();
	void OnSpawnChild();
	void OnMissionDuelTimeStarted();
	void OnFinishParent();
	void OnFinishChild();
	void OnEndPlayOwner(class AActor* Actor, enum class EEndPlayReason EndPlayReason);
	void MulticastForceFinishMirage();
	void MulticastClearChildMirage();
	void InitializeWeaponRack();
	void Initialize(class ACharacter* Owner);
	void ForceFinishParent();
	bool CanMirage();
};

// 0x18 (0x4D0 - 0x4B8)
// Class DXM.TTLMirageController
class ATTLMirageController : public ATTLAIController
{
public:
	class APawn*                                 OwnerPawn;                                         // 0x4B8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                TargetPawn;                                        // 0x4C0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         TriggeredLeft;                                     // 0x4C8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         TriggeredRight;                                    // 0x4C9(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2711[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MirageMode;                                        // 0x4CC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ATTLMirageController* GetDefaultObj();

	void Initialize();
};

// 0x0 (0x160 - 0x160)
// Class DXM.TTLMissileCameraShake
class UTTLMissileCameraShake : public UCameraShake
{
public:

	static class UClass* StaticClass();
	static class UTTLMissileCameraShake* GetDefaultObj();

};

// 0x0 (0x3B0 - 0x3B0)
// Class DXM.TTLMissilerTankAnimInstance
class UTTLMissilerTankAnimInstance : public UTTLStrongTankAnimInstance
{
public:

	static class UClass* StaticClass();
	static class UTTLMissilerTankAnimInstance* GetDefaultObj();

	struct FVector CalcMainWeaponLookAtLocation();
	float CalcMainWeaponLookAtAlpha();
};

// 0x278 (0x18C0 - 0x1648)
// Class DXM.TTLMissilerTankPawn
class ATTLMissilerTankPawn : public ATTLStrongTankPawn
{
public:
	class UClass*                                MissileBulletClass;                                // 0x1648(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MissileWeaponID;                                   // 0x1650(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           MissileMuzzleFX;                                   // 0x1658(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class FName>                          MissileMuzzleSocketNames1;                         // 0x16F0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class FName>                          MissileMuzzleSocketNames2;                         // 0x1700(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           BackFireFX;                                        // 0x1710(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class FName>                          BackFireSocketNames1;                              // 0x17A8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class FName>                          BackFireSocketNames2;                              // 0x17B8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        MissileRandomDelay;                                // 0x17C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2712[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  NormalBulletWeaponID;                              // 0x17D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLEnemyLongRangeWeapon>  NormalBulletWeaponClass;                           // 0x17D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLProjectileBase>        NormalBulletClass;                                 // 0x17E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLWeaponType                    NormalBulletWeaponType;                            // 0x17E8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2713[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           NormalBulletMuzzleFX;                              // 0x17F0(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  NormalBulletMuzzleSocketName;                      // 0x1888(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxMoveSpeedRunAway;                               // 0x1890(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsRunAway;                                         // 0x1894(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2714[0xB];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLEnemyLongRangeWeapon*              LongRangeWeapon;                                   // 0x18A0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2715[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLMissilerTankPawn* GetDefaultObj();

	void StartShootMissile_BP(class AActor* TargetActor);
	void StartShootMissile(class AActor* TargetActor);
	void ShootNormalBullet(class AActor* TargetActor);
	void ShootMissile(int32 Pod);
};

// 0x0 (0x88 - 0x88)
// Class DXM.TTLMissionInfo
class UTTLMissionInfo : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UTTLMissionInfo* GetDefaultObj();

};

// 0x78 (0x168 - 0xF0)
// Class DXM.TTLMissionInfoMenuComponent
class UTTLMissionInfoMenuComponent : public UActorComponent
{
public:
	TSubclassOf<class UUserWidget>               Class_MsnSelectMember00;                           // 0xF0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_MsnSelectSts00;                              // 0xF8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_MsnSelectSts01;                              // 0x100(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           LayoutWidget;                                      // 0x108(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UUserWidget*>                   MemberListWidget;                                  // 0x110(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UUserWidget*>                   NPCArsenalInfoList;                                // 0x120(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UUserWidget*>                   EnemyAppearanceInfoList;                           // 0x130(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UTTLGameInstance*                      GameInstance;                                      // 0x140(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLMissionProgressManager*            MissionProgressManager;                            // 0x148(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2716[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLMissionInfoMenuComponent* GetDefaultObj();

	void Initialize(class UUserWidget* LayoutWidget);
};

// 0x38 (0x170 - 0x138)
// Class DXM.TTLMissionInteractUIComponent
class UTTLMissionInteractUIComponent : public UTTLInteractUIComponent
{
public:
	class UTextBlock*                            InformationTextBlock;                              // 0x138(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            PercentageTextBlock;                               // 0x140(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLHUDGaugeWidget*                    PercentageGaugeWidget;                             // 0x148(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                KeyIconImage;                                      // 0x150(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                AssistKeyIconImage;                                // 0x158(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            PlusTextBlock;                                     // 0x160(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2717[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLMissionInteractUIComponent* GetDefaultObj();

	void StopNotAccessibleAnimation();
	void SetSuccessContent(enum class ETTLEInteractType ConsoleType);
	void SetSuccess(bool Success);
	void SetProgressPercentage(float Percentage);
	void SetErrorText(enum class ETTLEInteractType ConsoleType);
	void SetAccessible(bool CanAccess);
	void PlaySuccessAnimation();
	void PlayNotAccessibleAnimation();
	void PlayDefaultAnimation();
	bool IsPlayingStartAnimation();
	void ChangeShowMode(bool ToProgressMode);
};

// 0x68 (0x200 - 0x198)
// Class DXM.TTLMissionMemberListComponent
class UTTLMissionMemberListComponent : public UTTLScrollListComponentBase
{
public:
	TSubclassOf<class UUserWidget>               Class_MsnSelectBtn02;                              // 0x198(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2719[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLGameInstance*                      GameInstance;                                      // 0x1D0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_271A[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ScrollListItemWidthMax;                            // 0x1F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ScrollListItemHeightMax;                           // 0x1F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_271B[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLMissionMemberListComponent* GetDefaultObj();

	bool InitializeBP();
	TArray<class UUserWidget*> GetHorizontalButtonsList(int32 Position);
};

// 0x98 (0xC0 - 0x28)
// Class DXM.TTLMissionProgressManager
class UTTLMissionProgressManager : public UObject
{
public:
	TArray<class FName>                          SolomonEncouterConditionMissionIDs;                // 0x28(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	class FName                                  ActiveCompeMissionAppendMissionID1;                // 0x38(0x8)(ZeroConstructor, Transient, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ActiveCompeMissionAppendMissionID2;                // 0x40(0x8)(ZeroConstructor, Transient, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            MissionOpenTable;                                  // 0x48(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDataTable*                            MissionOpenConditionTable;                         // 0x50(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDataTable*                            MissionCloseTable;                                 // 0x58(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDataTable*                            MissionCloseConditionTable;                        // 0x60(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDataTable*                            MissionInfoTable;                                  // 0x68(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDataTable*                            CompeMissionNPCTable;                              // 0x70(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLGameInstance*                      GameInstance;                                      // 0x78(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_272A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SolomonEncountSubGoalNum;                          // 0x84(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        SolomonEncountBossKillNum;                         // 0x88(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        SolomonEncountNPCKillNum;                          // 0x8C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        SolomonEncountNPCJoinNum;                          // 0x90(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        SolomonEncountMobKillNum;                          // 0x94(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        SolomonEncountCriticalNum;                         // 0x98(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        SolomonEncountDodgeBoostNum;                       // 0x9C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        DefaultActiveCompeMissionNum;                      // 0xA0(0x4)(ZeroConstructor, Transient, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        FirstAppendedActiveCompeMissionNum;                // 0xA4(0x4)(ZeroConstructor, Transient, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        SecondAppendedActiveCompeMissionNum;               // 0xA8(0x4)(ZeroConstructor, Transient, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        CompeMissionNPCResetCount;                         // 0xAC(0x4)(ZeroConstructor, Transient, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        CompeMissionCoolDownMin;                           // 0xB0(0x4)(ZeroConstructor, Transient, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        CompeMissionCoolDownMax;                           // 0xB4(0x4)(ZeroConstructor, Transient, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_272B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLMissionProgressManager* GetDefaultObj();

	void UpdateMissionProgress();
	void UpdateCompMissionProgress(class FName& ClearedMissionID, enum class ETTLEMissionResult& Result);
	void UpdateActivatedCompMissionList();
	bool TryOpenMission(class FName& MissionID, bool ForceOpen);
	bool TryCloseMission(class FName& MissionID, bool ForceClose);
	void ProcessOnCompMissionActivated(class FName& MissionID);
	void MakeNotificationShopNewParts(class FName MissionID, enum class ETTLEMissionResult Result);
	void MakeNotificationNPCJoinCompe(struct FTTLCompMissionActivateInfo* Mission);
	bool IsReleasedElement(enum class ETTLEElementReleaseType TargetType);
	bool IsOpenConditionFinished(class FName& ConditionID, class UTTLGameInstance* GameInstance, class FName& SelfMissionID);
	bool IsNewMission(class FName& MissionID);
	bool IsMissionOpened(class FName& MissionID);
	bool IsMissionClear(class FName MissionID);
	bool IsCloseConditionFinished(class FName& ConditionID, class UTTLGameInstance* GameInstance);
	void Initialize(class UTTLGameInstance* GameInstance);
	bool HaveEverParticipatedMission(class FName MissionID);
	enum class ETTLEMissionType GetMissionType(class FName& MissionID);
	void GetMissionIDList(TArray<class FName>* NameList);
	void ConfirmedMissionInfo(class FName& MissionID);
	bool CanOpenMission(class FName& MissionID);
	bool CanLotCompeMissionNPC(class FName& NpcID);
	bool CanCloseMission(class FName& MissionID, struct FTTLMissionProgressInfo& SelfProgress);
};

// 0x18 (0x108 - 0xF0)
// Class DXM.TTLMissionRankingComponent
class UTTLMissionRankingComponent : public UActorComponent
{
public:
	class UUserWidget*                           Widget_TopWidget;                                  // 0xF0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UUserWidget*>                   Widget_EffectListArray;                            // 0xF8(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLMissionRankingComponent* GetDefaultObj();

	void Initialize(class UUserWidget* LayoutWidget);
};

// 0xC0 (0xE8 - 0x28)
// Class DXM.TTLMissionRankingDataManager
class UTTLMissionRankingDataManager : public UObject
{
public:
	class UTTLGameInstance*                      GameInstance;                                      // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_272C[0xB8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLMissionRankingDataManager* GetDefaultObj();

};

// 0x0 (0x88 - 0x88)
// Class DXM.TTLMissionRankingParam
class UTTLMissionRankingParam : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UTTLMissionRankingParam* GetDefaultObj();

};

// 0x0 (0x630 - 0x630)
// Class DXM.TTLMissionResultScene
class ATTLMissionResultScene : public ATTLMenuSceneBase
{
public:

	static class UClass* StaticClass();
	static class ATTLMissionResultScene* GetDefaultObj();

};

// 0x270 (0x8A0 - 0x630)
// Class DXM.TTLMissionResultScene2
class ATTLMissionResultScene2 : public ATTLMenuSceneBase
{
public:
	uint8                                        Pad_272E[0x230];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLUIResultBattleLogComponent*        ResultBattleLogComp;                               // 0x860(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLUIFooterPageIndexComponent*        FooterPageIndexComp;                               // 0x868(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLMResultScrollListComponent*        ResultScrollListComp;                              // 0x870(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class AActor>                    CommonPopupClass;                                  // 0x878(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ATTLNoticeResultFinishTime> NoticeGeneral;                                     // 0x880(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_272F[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLMissionResultScene2* GetDefaultObj();

	void ResultEvent_OnFinished();
	void MakeDebugPvP(int32 Result);
	void MakeDebugNPCJoin(class FName NpcID);
	void MakeDebugMissionInventory();
	void MakeDebugBossDropLog(class FName BossID);
	void MakeDebugBattleLog(class FName MissionID, bool ClearMain, bool ClearSub1, bool ClearSub2, bool ClearSub3);
	void Countdown_Finish();
	void BroadcastOnCountdownFinished();
};

// 0x30 (0x3F0 - 0x3C0)
// Class DXM.TTLMissionRetryPopup
class ATTLMissionRetryPopup : public ATTLPopUpBase
{
public:
	TSubclassOf<class UUserWidget>               BgWidgetClass;                                     // 0x3C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           BgWidget;                                          // 0x3C8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2731[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLMissionRetryPopup* GetDefaultObj();

	void OnInputRepeatAction(enum class ETTLEActionType KeyType, int32 Count);
	void OnInputAction(enum class ETTLEActionType KeyType, bool IsPressed);
};

// 0x58 (0x1F0 - 0x198)
// Class DXM.TTLMissionScrollListComponent
class UTTLMissionScrollListComponent : public UTTLScrollListComponentBase
{
public:
	class UWidgetAnimation*                      Anim_MissionClosed;                                // 0x198(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_CheckmarkOn;                                  // 0x1A0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_CheckmarkOff;                                 // 0x1A8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2732[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLGameInstance*                      GameInstance;                                      // 0x1D8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLMissionProgressManager*            MissionProgressManager;                            // 0x1E0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        ScrollListItemDisplayMax;                          // 0x1E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2733[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLMissionScrollListComponent* GetDefaultObj();

	bool InitializeBP();
};

// 0x100 (0x1F0 - 0xF0)
// Class DXM.TTLMissionSelectCharaComponent
class UTTLMissionSelectCharaComponent : public UActorComponent
{
public:
	TSubclassOf<class ATTLCharacter>             LoadedArsenalClass;                                // 0xF0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class ATTLCharacter>             LoadedOuterClass;                                  // 0xF8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATTLCharacter*                         NPCArsenal;                                        // 0x100(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATTLCharacter*                         NPCOuter;                                          // 0x108(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2734[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLUIMenuActorShadow*                 ShadowActor;                                       // 0x130(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2735[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            ArsenalTransform;                                  // 0x140(0x30)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FTransform                            OuterTransform;                                    // 0x170(0x30)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        SpawnTimerThreshold;                               // 0x1A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WaitMotionThreshold;                               // 0x1A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ATTLUIMenuActorShadow>     ShadowActorClass;                                  // 0x1A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTransform                            ShadowTransform;                                   // 0x1B0(0x30)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                               TmpPos;                                            // 0x1E0(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        GarbageCollectionThreshold_SpawnNum;               // 0x1EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTTLMissionSelectCharaComponent* GetDefaultObj();

};

// 0x70 (0x160 - 0xF0)
// Class DXM.TTLMissionSelectMapComponent
class UTTLMissionSelectMapComponent : public UActorComponent
{
public:
	TSubclassOf<class AActor>                    MissionSelectMapClass;                             // 0xF0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                MissionSelectMap;                                  // 0xF8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AActor>                    MissionAreaPinClass;                               // 0x100(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATTLMapPinActor*                       MissionAreaPin;                                    // 0x108(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  Comp_ST_Map01_LandA_500;                           // 0x110(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UStaticMeshComponent*>          OutsideStaticMeshCompList;                         // 0x118(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_273A[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DissolveTime;                                      // 0x150(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DissolveStartValue;                                // 0x154(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DissolveEndValue;                                  // 0x158(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_273B[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLMissionSelectMapComponent* GetDefaultObj();

	void StopDissolveIn();
	void StartControlMap();
	void ShowAreaPin(class FName AreaID);
	void ResetHighlight();
	void PlayDissolveIn();
	bool IsValidMapArea(class FName AreaID);
	bool IsPlayingDissolveIn();
	bool IsMapLoading();
	void Initialize();
	void HighlightArea(class FName AreaID, enum class ETTLEAreaHighlightMode HighlightMode);
	void HideAreaPin();
	struct FRotator GetMapSocketRotation(class FName AreaID);
	struct FVector GetMapSocketPosition(class FName AreaID);
	float GetDissolveProgress();
};

// 0x0 (0x630 - 0x630)
// Class DXM.TTLMissionSelectScene
class ATTLMissionSelectScene : public ATTLMenuSceneBase
{
public:

	static class UClass* StaticClass();
	static class ATTLMissionSelectScene* GetDefaultObj();

};

// 0x130 (0x760 - 0x630)
// Class DXM.TTLMissionSelectScene2
class ATTLMissionSelectScene2 : public ATTLMenuSceneBase
{
public:
	class UTTLMissionSelectMapComponent*         MissionSelectMapComp;                              // 0x630(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLMissionScrollListComponent*        MissionScrollListComponent;                        // 0x638(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLMissionInfoMenuComponent*          MissionInfoMenuComponent;                          // 0x640(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLMissionMemberListComponent*        MissionMemberListComp;                             // 0x648(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLMissionSelectCharaComponent*       MissionSelectCharaComp;                            // 0x650(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETTLEMissionSelectScene2State     MissionSelectSceneState;                           // 0x658(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2740[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StartSceneDissolveInValue;                         // 0x65C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLGameInstance*                      GameInstance;                                      // 0x660(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATTLUICameraControlActor*              UICamControlActor;                                 // 0x668(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLMissionProgressManager*            MissionProgressManager;                            // 0x670(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2741[0x74];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MapZoomLength;                                     // 0x6EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               MapZoomShift;                                      // 0x6F0(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2742[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          MissionIDListInE3;                                 // 0x700(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSoftClassPtr<class ATTLCommonPopup>         CommonPopupClass;                                  // 0x710(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2743[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLMissionSelectScene2* GetDefaultObj();

	void SwitchBackgroundVisibility(bool VisibleMissionMap);
	class ATTLOkPopUp* SpawnPopup_OkBP();
	void PlaySEMissionStartEffect();
	void PlaySEMapDissolveIn();
	bool PlayDemoOnBasecamp(class FName EventName);
	void PlayAnimBP_StartScene(enum class ETTLEMissionSelectScene2State StartState);
	void PlayAnimBP_StartMission();
	void PlayAnimBP_StartBriefing(class FName BriefingID);
	void PlayAnimBP_RestartScene();
	void PlayAnimBP_PlayPuppetShowDemo(class FName PuppetShowDemoPath);
	void PlayAnimBP_OpenLineChat();
	void PlayAnimBP_OpenCloseDetail(enum class ETTLEMissionSelectScene2State NextState);
	void PlayAnimBP_FinishBriefing(enum class ETTLEMissionSelectScene2State NextState);
	void PlayAnimBP_EndScene();
	void PlayAnimBP_CloseLineChat();
	void PlayAnimBP_AfterBriefingEvent(TArray<class FName>& EventPathList);
	void OnPuppetShowDemoStartedBP(class FName BriefingID);
	void OnPuppetShowDemoFinishedBP(class FName BriefingID, enum class ETTLEventFinishedType EventFinishedType);
	void OnBriefingEventFinished(class FName BriefingID, enum class ETTLEventFinishedType EventFinishedType);
	void OnBrefingEventStarted(class FName BriefingID);
	void OnAfterBriefingEventFinished(class FName BriefingID, enum class ETTLEventFinishedType EventFinishedType);
	void OnAfterBrefingEventStarted(class FName BriefingID);
	void ChangeMissionSelectSceneState(enum class ETTLEMissionSelectScene2State NewState);
};

// 0x38 (0x130 - 0xF8)
// Class DXM.TTLMissionTutorialHUDComponent
class UTTLMissionTutorialHUDComponent : public UTTLActorComponent
{
public:
	TSubclassOf<class UUserWidget>               Class_CmnTutorialTop01;                            // 0xF8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_CmnTutorialTop03;                            // 0x100(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_KeyAssignLoop;                                // 0x108(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           TopLayout;                                         // 0x110(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FTTLMissionTutorialKeyAssignWidget> KeyAssignWidgetList;                               // 0x118(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UTTLGameInstance*                      GameInstance;                                      // 0x128(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLMissionTutorialHUDComponent* GetDefaultObj();

	void ShowKeyAssignHUD();
	void ShowHUDForControlCharacter();
	void ResetKeyAssign();
	void RemoveKeyAssign(enum class ETTLOptionKeyConfigKeyType KeyType);
	void HideKeyAssignHUD();
	void GetAllAnimationBP();
	void AddKeyAssign(enum class ETTLOptionKeyConfigKeyType KeyType, const class FString& OverwriteTextKey);
};

// 0x20 (0x4E0 - 0x4C0)
// Class DXM.TTLMovablePawn
class ATTLMovablePawn : public ATTLPawn
{
public:
	uint8                                        Pad_2745[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLMovablePawn* GetDefaultObj();

};

// 0x58 (0x380 - 0x328)
// Class DXM.TTLMoviePlayer
class ATTLMoviePlayer : public AActor
{
public:
	UMulticastDelegateProperty_                  OnEndMovie;                                        // 0x328(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2748[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsAutoPlay;                                        // 0x340(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2749[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UManaComponent*                        MovieComponent;                                    // 0x348(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               MovieWidgetClass;                                  // 0x350(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           MovieWidgetPtr;                                    // 0x358(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class FName>                          ScreenTargetWidgetStepArray;                       // 0x360(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    MovieMaterial;                                     // 0x370(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsSkipByInput;                                     // 0x378(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETTLEActionType                   SkipType;                                          // 0x379(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_274A[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLMoviePlayer* GetDefaultObj();

	bool PlayMovie();
	void OnPushSkipBtn(enum class ETTLEActionType ActionType);
	void OnLongInputAction(enum class ETTLEActionType ActionType, float Duration);
	bool InitBySequencerInfoMovieAssetData(struct FTTLEventMoviePlayerInitialzieAssetInfo& Info, bool IsAutoEnd);
	bool Init();
};

// 0x8 (0x1A0 - 0x198)
// Class DXM.TTLMResultBRScrollListComponent
class UTTLMResultBRScrollListComponent : public UTTLScrollListComponentBase
{
public:
	uint8                                        Pad_274C[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLMResultBRScrollListComponent* GetDefaultObj();

	bool InitializeBP();
	void Initialize(class UUserWidget* LayoutWidget, int32 DisplayNum, int32 ListNumMax);
	class UUserWidget* CreateButtonWidget(int32 Position);
};

// 0x8 (0x1A0 - 0x198)
// Class DXM.TTLMResultScrollListComponent
class UTTLMResultScrollListComponent : public UTTLScrollListComponentBase
{
public:
	class UWidgetAnimation*                      Animation_AttachmentRareIcon;                      // 0x198(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLMResultScrollListComponent* GetDefaultObj();

	bool MoveUp(int32 RepeatCount);
	bool MoveDown(int32 RepeatCount);
	bool InitializeBP();
	void Initialize(class UUserWidget* LayoutWidget, int32 DisplayNum, int32 ListNumMax);
	class UUserWidget* CreateButtonWidget(int32 Position);
};

// 0x18 (0x130 - 0x118)
// Class DXM.TTLMultiCannonComponent
class UTTLMultiCannonComponent : public UTTLBaseMultiCannonComponent
{
public:
	TSubclassOf<class ATTLBaseCannonPawn>        CannonClass;                                       // 0x118(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class FName>                          CannonSockets;                                     // 0x120(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTTLMultiCannonComponent* GetDefaultObj();

};

// 0x220 (0x318 - 0xF8)
// Class DXM.TTLMultiLaserComponent
class UTTLMultiLaserComponent : public UTTLActorComponent
{
public:
	TSubclassOf<class ATTLProjectileBase>        LaserBulletClass;                                  // 0xF8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTTLMultiLaserPath>            LaserPaths;                                        // 0x100(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           LaserChargeVFX;                                    // 0x110(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  LaserSocket;                                       // 0x1A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LaserChargeTime;                                   // 0x1B0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LaserChargeIntervalTime;                           // 0x1B4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LaserShootTime;                                    // 0x1B8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LaserShootIntervalTime;                            // 0x1BC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LaserCooldownTime;                                 // 0x1C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSkipCharge;                                      // 0x1C4(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSetPathLocation;                                 // 0x1C5(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2750[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               LaserOffset;                                       // 0x1C8(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2751[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  LaserMuzzleSocket;                                 // 0x1D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           LaserMuzzleVFX;                                    // 0x1E0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FRotator                              OffsetRotate;                                      // 0x278(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2752[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class APawn*                                 OwnerPawn;                                         // 0x288(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USkeletalMeshComponent*                OwnerMesh;                                         // 0x290(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2753[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlayback                        VFXMuzzle;                                         // 0x2C8(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        VFXCharge;                                         // 0x2E0(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2754[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLMultiLaserComponent* GetDefaultObj();

};

// 0x18 (0x358 - 0x340)
// Class DXM.TTLSplinePath
class ATTLSplinePath : public ATTLActor
{
public:
	class USplineComponent*                      Path;                                              // 0x340(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Name;                                              // 0x348(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEscapePath;                                      // 0x350(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2755[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLSplinePath* GetDefaultObj();

	struct FVector GetEndPointLocation();
};

// 0x28 (0x380 - 0x358)
// Class DXM.TTLMultiLaserSpline
class ATTLMultiLaserSpline : public ATTLSplinePath
{
public:
	bool                                         IsTrace;                                           // 0x358(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2756[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MoveSpeedMax;                                      // 0x35C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AcceleTime;                                        // 0x360(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsTraceDirect;                                     // 0x364(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2757[0x1B];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLMultiLaserSpline* GetDefaultObj();

};

// 0x138 (0x160 - 0x28)
// Class DXM.TTLMultiplay2vs2Manager
class UTTLMultiplay2vs2Manager : public UObject
{
public:
	uint8                                        Pad_275B[0x138];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLMultiplay2vs2Manager* GetDefaultObj();

	void OnPostLoadMapWithWorld(class UWorld* LoadedWorld);
	void OnOpenedErrorPopUp();
	void OnLogoutUserComplete(bool WasSuccessful);
	void OnLoginUserComplete(bool WasSuccessful);
	void OnJoinSessionComplete(bool WasSuccessful);
	void OnFindSessionsComplete(bool WasSuccessful, TArray<struct FBlueprintSessionResult>& SessionSearchResults);
	void OnDestroySessionComplete(class FName SessionName, bool WasSuccessful);
	void OnCreateSessionComplete(class FName SessionName, bool WasSuccessful);
	void OnClosedErrorPopUp();
};

// 0x48 (0x138 - 0xF0)
// Class DXM.TTLMultiplayDuelControlComponent
class UTTLMultiplayDuelControlComponent : public UActorComponent
{
public:
	int32                                        DuelTime;                                          // 0xF0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        DuelAttackDamageUpRate;                            // 0xF4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_275D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLDuelMatchParam>            DuelMatchList;                                     // 0x100(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FTTLDuelServerDuelLogParam>    DuelLogList;                                       // 0x110(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_275E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLGameState*                         ExecGameState;                                     // 0x128(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          FirstExecDuelTimer;                                // 0x130(0x8)(NoDestructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLMultiplayDuelControlComponent* GetDefaultObj();

	void StartDuelOnExtendTime();
	void OnStartDuelExtendTimeBP();
	void NotifyStartDuelOnExtendTime();
	int32 GetDuelTime();
	void DebugSetForceExecDuel();
	void CreateDuelResultHUDParameter(struct FTTLHUDDuelResultParams* Params);
	void CreateDuelFinishedParameter(struct FTTLDuelFinishedParams* Params);
	bool CheckSetExecDuel(class AGameStateBase* GameState);
	bool CanExecDuel();
};

// 0x20 (0x650 - 0x630)
// Class DXM.TTLNameEntryScene
class ATTLNameEntryScene : public ATTLMenuSceneBase
{
public:
	class FText                                  InputName;                                         // 0x630(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)
	uint8                                        Pad_275F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLNameEntryScene* GetDefaultObj();

	class ATTLYesNoPopUp* SpawnPopup_YesNoBP();
	void SetupPopup_YesNo();
	void Popup_Yes_Selected();
	void Popup_No_Selected();
	void Popup_Closed();
	void OnTextChanged(class FText& Name);
	void OnShowTestNameEntryBP();
	void Initialize();
};

// 0x80 (0xA8 - 0x28)
// Class DXM.TTLNgPartsDataManager
class UTTLNgPartsDataManager : public UObject
{
public:
	TArray<struct FTTLNgPartsNoticeInfo>         NgPartsArray;                                      // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FTTLNgAttachNoticeInfo>        NgAttachmentArray;                                 // 0x38(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FTTLNgSkillNoticeInfo>         NgSkillArray;                                      // 0x48(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2760[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLNgPartsDataManager* GetDefaultObj();

};

// 0x88 (0x448 - 0x3C0)
// Class DXM.TTLNoticeGeneral
class ATTLNoticeGeneral : public ATTLPopUpBase
{
public:
	struct FTTLNoticeGeneralInfo                 MInfo;                                             // 0x3C0(0x40)(BlueprintVisible, Net, ExposeOnSpawn, NativeAccessSpecifierPublic)
	bool                                         MIsPlayAfterBeginPlay;                             // 0x400(0x1)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2761[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWidgetAnimation*                      CountDownAnimation;                                // 0x408(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      ExtensionTimeAnimation;                            // 0x410(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      MultiPlayAnimation;                                // 0x418(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      ResultAnimation;                                   // 0x420(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      CommonAnimation;                                   // 0x428(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2762[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MDisplayTimer;                                     // 0x434(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2763[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLNoticeGeneral* GetDefaultObj();

	void Play(struct FTTLNoticeGeneralInfo& Info);
	void End();
};

// 0x40 (0x400 - 0x3C0)
// Class DXM.TTLNoticeListPopUp
class ATTLNoticeListPopUp : public ATTLPopUpBase
{
public:
	UMulticastDelegateProperty_                  OnDecide;                                          // 0x3C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnCancel;                                          // 0x3D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnChange;                                          // 0x3E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class UTTLNoticeScrollListComponent*         PNoticeScrollListComponent;                        // 0x3F0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ListCount;                                         // 0x3F8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LRCursor;                                          // 0x3FC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ATTLNoticeListPopUp* GetDefaultObj();

	void SetupListCount(int32 Count);
	void SetupButton(TArray<struct FTTLNoticeListInfo>& List, int32 Dispmax);
	void SetTitle(class FText Title);
	void SetScalePopUp();
	void SetOkButton(class FText Text);
	bool IsClosed();
	void InitializeComponentsBP();
	class UTTLNoticeScrollListComponent* GetComponents();
};

// 0x0 (0x448 - 0x448)
// Class DXM.TTLNoticeMissionExtensionTime
class ATTLNoticeMissionExtensionTime : public ATTLNoticeGeneral
{
public:

	static class UClass* StaticClass();
	static class ATTLNoticeMissionExtensionTime* GetDefaultObj();

};

// 0x0 (0x448 - 0x448)
// Class DXM.TTLNoticeResultFinishTime
class ATTLNoticeResultFinishTime : public ATTLNoticeGeneral
{
public:

	static class UClass* StaticClass();
	static class ATTLNoticeResultFinishTime* GetDefaultObj();

};

// 0x18 (0x1B0 - 0x198)
// Class DXM.TTLNoticeScrollListComponent
class UTTLNoticeScrollListComponent : public UTTLScrollListComponentBase
{
public:
	class UUserWidget*                           Widget_RootWidget;                                 // 0x198(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FTTLNoticeListInfo>            NoticeList;                                        // 0x1A0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLNoticeScrollListComponent* GetDefaultObj();

	void SetTitleAlignment(enum class ETextJustify Align);
	void SetTitle(class FText Title);
	void SetOkButton(class FText Text, int32 btn_no);
	void SetListButtonMax(int32 ListNumMax);
	void SetDisplayButtonNum(int32 DispNumMax);
	void SetCursol(bool Enable, int32 btn_no);
	bool IsEnableOkButton(int32 btn_no);
	bool InitializeBP();
	void Initialize(class UUserWidget* LayoutWidget, int32 DisplayNum, int32 ListNumMax);
	void EnableOkButton(bool Enable, int32 btn_no);
};

// 0xD8 (0x1C8 - 0xF0)
// Class DXM.TTLNotifyHUDComponentBase
class UTTLNotifyHUDComponentBase : public UActorComponent
{
public:
	TSubclassOf<class UUserWidget>               ListHUDClass;                                      // 0xF0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               ListItemClass;                                     // 0xF8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           ListHUD;                                           // 0x100(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      InAnimation;                                       // 0x108(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      UpAnimation01To02;                                 // 0x110(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      UpAnimation02To03;                                 // 0x118(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxNum;                                            // 0x120(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETTLNoticeHUD_StateType           MaxDisplayNum;                                     // 0x124(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_276B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MCurrentTargetAnimationIndex;                      // 0x128(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_276C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WaitTime;                                          // 0x130(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        NextTime;                                          // 0x134(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WaitTimeForSingleNotify;                           // 0x138(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WaitTimeForMultiNotify;                            // 0x13C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         MIsInAnimationExit;                                // 0x140(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         MIsOutAnimationExit;                               // 0x141(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_276D[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint64                                       MOrder;                                            // 0x148(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETTLNoticeHUD_State               MState;                                            // 0x150(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_276E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLNotifyInfo                        MNextNotifyInfo;                                   // 0x158(0x48)(Protected, NativeAccessSpecifierProtected)
	TArray<struct FTTLNotifyContainer>           ListItemArray;                                     // 0x1A0(0x10)(ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FTTLNotifyInfo>                NotifyInfoList;                                    // 0x1B0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_276F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLNotifyHUDComponentBase* GetDefaultObj();

	void RemoveHUDFromViewPort();
	void PlayAnimationForSlide(class UUserWidget* Widget, class UWidgetAnimation* Animation, bool IsReverse, float StartTime);
	void InitializeBP();
	bool AddViewPortForHUD();
	bool AddInfo(struct FTTLNotifyInfo& Info);
};

// 0x0 (0x330 - 0x330)
// Class DXM.TTLNotReplicateLevelScriptActor
class ATTLNotReplicateLevelScriptActor : public ALevelScriptActor
{
public:

	static class UClass* StaticClass();
	static class ATTLNotReplicateLevelScriptActor* GetDefaultObj();

};

// 0x0 (0x88 - 0x88)
// Class DXM.TTLNPCFlagParam
class UTTLNPCFlagParam : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UTTLNPCFlagParam* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class DXM.TTLNPCLibrary
class UTTLNPCLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UTTLNPCLibrary* GetDefaultObj();

	bool TryGetFriendshipValue(class UObject* WorldContext, class FName& OuterID, int32* FriendValue);
	bool TryFriendshipParamIncrease(class UObject* WorldContext, class FName& NpcID, class FName* UpEventID, class FName* FriendEventID, int32 Value);
	bool SetNPCJoinFlagState(class UObject* WorldContext, class FName& NpcID, enum class ETTLNPCFlagState NewState);
	void SetEncounterSkillToNPC(class UObject* WorldContext, TMap<class FName, class FName>& SkillList);
	bool IsNPCOuterJoined(class UObject* WorldContext, class FName& OuterID);
	bool IsNPCJoined(class UObject* WorldContext, class FName& NpcID);
	bool IsNPCFriendPatternClear(class UObject* WorldContext, class FName& PatternID);
	bool IsNPCConditionFinishedForSpecialCheck(class UTTLGameInstance* GameInstance, class FName& MissionID, class FName& CheckCondition);
	bool IsNPCConditionFinished(class UObject* WorldContext, class FName CheckCondition);
	bool IsDecalEquipped(class UObject* WorldContext, class FName& DecalID);
	void GetOuterIDList(TArray<class FName>* NameList);
	class FName GetOuterIDFromNPCID(class FName NpcID);
	TSubclassOf<class ATTLCharacter> GetOuterClass(class FName OuterID);
	int32 GetNPCTotalNum();
	TArray<class FName> GetNPCIDList();
	TSubclassOf<class ATTLCharacter> GetNPCClass(class FName NpcID);
	TArray<class FName> GetJoinedNPCArsenalIDList(class UObject* WorldContext);
	int32 GetJoindNPCNum(class UObject* WorldContext);
	bool CheckDestroyedNPCEncounterCondition(class AActor* DestroyedNPC, struct FTTLNPCEncounterParamRow& EncounterParam);
	bool CanNPCJoin(class UObject* WorldContext, class FName& NpcID);
	bool CanNPCEncounter(class UObject* WorldContext, class FName& NpcID);
};

// 0x20 (0x48 - 0x28)
// Class DXM.TTLNpcSetDataManager
class UTTLNpcSetDataManager : public UObject
{
public:
	TArray<struct FTTLNpcSetParamRow>            NpcSetArray;                                       // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class FString                                LastSelectedRandomPath;                            // 0x38(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLNpcSetDataManager* GetDefaultObj();

};

// 0x48 (0x380 - 0x338)
// Class DXM.TTLObjectLockonTargetActor
class ATTLObjectLockonTargetActor : public AStaticMeshActor
{
public:
	struct FTTLLayoutSetting                     LayoutSetting;                                     // 0x338(0x30)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UTTLObjectStatusComponent*             ObjectStatus;                                      // 0x368(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLBreakObjLockonSetting             LockonSetting;                                     // 0x370(0xC)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_277D[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLObjectLockonTargetActor* GetDefaultObj();

};

// 0xA0 (0x198 - 0xF8)
// Class DXM.TTLObjectStatusComponent
class UTTLObjectStatusComponent : public UTTLActorComponent
{
public:
	UMulticastDelegateProperty_                  OnStatusDead;                                      // 0xF8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	struct FTTLObjectStatusParameters            Parameters;                                        // 0x108(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLMissionCallbackProcessor          MissionCallbackProcessor;                          // 0x128(0x18)(NativeAccessSpecifierPublic)
	struct FTTLInsuranceContainer                InsuranceContainer;                                // 0x140(0x30)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2780[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLObjectStatusResistParameter       DamageResistParamter;                              // 0x180(0x10)(Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	enum class ETTLEInvincibleType               InvincibleType;                                    // 0x190(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2781[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLObjectStatusComponent* GetDefaultObj();

	void SetInvincibleType(enum class ETTLEInvincibleType Type);
	void SetDead(class AActor* DamagedActor, class AActor* DamageCauser, struct FVector& HitLocation);
	void ProcessDamageEvent(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, struct FVector& HitDirection, class UPrimitiveComponent* FHitComponent);
	bool IsDead();
};

// 0x40 (0xBE60 - 0xBE20)
// Class DXM.TTLOgreController
class ATTLOgreController : public ATTLBaseController
{
public:
	uint8                                        Pad_2782[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class ETTLEActionType>           RemoveInputAssignmentArray;                        // 0xBE28(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSoftClassPtr<class ATTLBaseBossOgreCharacter> PlayerOgreCharaRef;                                // 0xBE38(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ATTLOgreController* GetDefaultObj();

	class ACharacter* SpawnPlayerOgreCharacter();
};

// 0x230 (0x668 - 0x438)
// Class DXM.TTLOgreSwordSlashWave
class ATTLOgreSwordSlashWave : public ATTLProjectileBase
{
public:
	class FName                                  WeaponParameterID;                                 // 0x438(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLLongRangeWeaponParameter*          WeaponParameter;                                   // 0x440(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           StartLoopEffectAsset;                              // 0x448(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           EndEffectAsset;                                    // 0x4E0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           HitEffectAsset;                                    // 0x578(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class ATTLBaseBossOgreCharacter*             OwnerBoss;                                         // 0x610(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        EffectPlayback;                                    // 0x618(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FVector                               BaseScale;                                         // 0x630(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Direction;                                         // 0x63C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        HitActorList;                                      // 0x648(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2783[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLOgreSwordSlashWave* GetDefaultObj();

};

// 0x88 (0x448 - 0x3C0)
// Class DXM.TTLOkPopUp
class ATTLOkPopUp : public ATTLPopUpBase
{
public:
	UMulticastDelegateProperty_                  OnOkSelected;                                      // 0x3C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	bool                                         InputSelf;                                         // 0x3D0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CloseAutoDestory;                                  // 0x3D1(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2784[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  InitDialogText;                                    // 0x3D8(0x18)(BlueprintVisible, ExposeOnSpawn, NativeAccessSpecifierPublic)
	class FText                                  InitButtonText;                                    // 0x3F0(0x18)(BlueprintVisible, ExposeOnSpawn, NativeAccessSpecifierPublic)
	bool                                         IsEnableCancel;                                    // 0x408(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2785[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  DialogText;                                        // 0x410(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  buttonText;                                        // 0x428(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2786[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLOkPopUp* GetDefaultObj();

	void TTLOkPopUpWaitPressed(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo);
	void SetDialogText(class FText DialogText);
	void SetButtonText(class FText buttonText);
	void OnInputAction(enum class ETTLEActionType KeyType, bool IsPressed);
	bool CheckPressedAnyButton();
};

// 0x40 (0x670 - 0x630)
// Class DXM.TTLOnlineRoomSceneBase
class ATTLOnlineRoomSceneBase : public ATTLMenuSceneBase
{
public:
	TArray<struct FTTLNgPartsNoticeInfo>         NgParts_Buffer;                                    // 0x630(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FTTLNgAttachNoticeInfo>        NgAttach_Buffer;                                   // 0x640(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FTTLNgSkillNoticeInfo>         NgSkill_Buffer;                                    // 0x650(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UTTLOnlRoomSelectorComponent*          OnlRoomSelectorComponent;                          // 0x660(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2787[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLOnlineRoomSceneBase* GetDefaultObj();

	void DebugOnTestUpdateFailed(float DelaySec);
	void DebugOnTestJoinFailed(float DelaySec);
	void DebugOnTestCreateFailed(float DelaySec);
};

// 0x30 (0x6A0 - 0x670)
// Class DXM.TTLOnlineBattleRoomCreateScene
class ATTLOnlineBattleRoomCreateScene : public ATTLOnlineRoomSceneBase
{
public:
	enum class ETTLOnlineBattleRoomType          RoomType;                                          // 0x670(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2789[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UUserWidget*                           Widget_TopWidget;                                  // 0x678(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                PVPLevelIndexArray;                                // 0x680(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         IsCreate;                                          // 0x690(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_278A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SelectRoomID;                                      // 0x694(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_278B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLOnlineBattleRoomCreateScene* GetDefaultObj();

	void OnCreateSessionComplete(class FName SessionName, bool WasSuccessful);
	void DebugOnCreateComplete(bool IsSuccess);
	void CreateRoom();
	void CheckMovePopup();
};

// 0x90 (0x700 - 0x670)
// Class DXM.TTLOnlineBattleRoomSearchScene
class ATTLOnlineBattleRoomSearchScene : public ATTLOnlineRoomSceneBase
{
public:
	enum class ETTLOnlineBattleRoomType          RoomType;                                          // 0x670(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2790[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UUserWidget*                           Widget_RoomListTopWidget;                          // 0x678(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLUIOnlRoomSearchCommponent*         OnlRoomSearchCommponent;                           // 0x680(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLOnlineRoomScrollListComponent*     OnlineRoomScrollListComponent;                     // 0x688(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATTLOkPopUp*                           OkPopUp;                                           // 0x690(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FTTLOnlineRoomSearchItemParamRow> AllRoomSearchItemParamArray;                       // 0x698(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<int32>                                CurrentRoomSearchButtonCursor;                     // 0x6A8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	int32                                        CurrentRoomSearchItemCursor;                       // 0x6B8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2791[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FBlueprintSessionResult>       TmpSessionSearchResult;                            // 0x6C0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	enum class ETTLEOnlineBattleRoomSearchState  OnlineBattleRoomSearchState;                       // 0x6D0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2792[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                PVPLevelIndexArray;                                // 0x6D8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2793[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SelectRoomID;                                      // 0x6F8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2794[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLOnlineBattleRoomSearchScene* GetDefaultObj();

	void OnJoinSessionComplete(bool WasSuccessful);
	void OnInputRoomListAction(enum class ETTLEActionType KeyType, int32 Count);
	void OnInputRepeatRoomListAction(enum class ETTLEActionType KeyType, int32 Count);
	void OnInputRepeatActionSearchWindowItem(enum class ETTLEActionType KeyType, int32 Count);
	void OnInputActionSearchWindowItem(enum class ETTLEActionType KeyType, bool IsPressed);
	void OnFindSessionsComplete(bool WasSuccessful, TArray<struct FBlueprintSessionResult>& SessionSearchResults);
	void DebugOnJoinComplete(bool IsSuccess);
};

// 0x40 (0x6B0 - 0x670)
// Class DXM.TTLOnlineBattleRoomSettingScene
class ATTLOnlineBattleRoomSettingScene : public ATTLOnlineRoomSceneBase
{
public:
	enum class ETTLOnlineBattleRoomType          RoomType;                                          // 0x670(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2795[0x3F];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLOnlineBattleRoomSettingScene* GetDefaultObj();

	void OnUpdateSessionComplete(bool bWasSuccessful);
	void DebugOnUpdateComplete(bool IsSuccess);
};

// 0x40 (0x6B0 - 0x670)
// Class DXM.TTLOnlineCoopRoomCreateScene
class ATTLOnlineCoopRoomCreateScene : public ATTLOnlineRoomSceneBase
{
public:
	class UUserWidget*                           Widget_TopWidget;                                  // 0x670(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLMissionScrollListComponent*        MissionScrollListComponent;                        // 0x678(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLMissionInfoMenuComponent*          MissionInfoMenuComponent;                          // 0x680(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLMissionRankingComponent*           MissionRankingComponent;                           // 0x688(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEOnlineCoopRoomCreateState    OnlineCoopRoomCreateState;                         // 0x690(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2797[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SelectMissionID;                                   // 0x698(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        SelectCursorIndex;                                 // 0x6A0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ETTLMissionInfoViewMode           MissionInfoViewMode;                               // 0x6A4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2798[0xB];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLOnlineCoopRoomCreateScene* GetDefaultObj();

	void PlayAnim_OpenMissionListBP();
	void PlayAnim_CloseMissionListBP();
	void OnCreateSessionComplete(class FName SessionName, bool WasSuccessful);
	void DebugOnCreateComplete(bool IsSuccess);
	void ChangeSceneState(enum class ETTLEOnlineCoopRoomCreateState NewState);
};

// 0xA0 (0x710 - 0x670)
// Class DXM.TTLOnlineCoopRoomSearchScene
class ATTLOnlineCoopRoomSearchScene : public ATTLOnlineRoomSceneBase
{
public:
	class UUserWidget*                           Widget_RoomListTopWidget;                          // 0x670(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLUIOnlRoomSearchCommponent*         OnlRoomSearchCommponent;                           // 0x678(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLOnlineRoomScrollListComponent*     OnlineRoomScrollListComponent;                     // 0x680(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLMissionScrollListComponent*        MissionScrollListComponent;                        // 0x688(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLMissionInfoMenuComponent*          MissionInfoMenuComponent;                          // 0x690(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ETTLEOnlineCoopRoomSearchState    OnlineCoopRoomSearchState;                         // 0x698(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_279A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLOnlineRoomSearchItemParamRow> AllRoomSearchItemParamArray;                       // 0x6A0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_279B[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FBlueprintSessionResult>       TmpSessionSearchResult;                            // 0x6D8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FBlueprintSessionResult>       FilteredSessionSearchResult;                       // 0x6E8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	int32                                        Test_LoadingCount;                                 // 0x6F8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         Test_IsLoading;                                    // 0x6FC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_279C[0x13];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLOnlineCoopRoomSearchScene* GetDefaultObj();

	void Test_StartLoading();
	void SetSelectMissionIDList(TArray<class FName>& MissionIDList);
	void PlayAnim_OpenMissionListBP();
	void PlayAnim_CloseMissionListBP();
	void OpenMissionListBP();
	void OnJoinSessionComplete(bool WasSuccessful);
	void OnFindSessionsComplete(bool WasSuccessful, TArray<struct FBlueprintSessionResult>& SessionSearchResults);
	void ExitOnlineCoopRoomSearchSceneBP();
	void DebugOnJoinComplete(bool IsSuccess);
	void ChangeSceneState(enum class ETTLEOnlineCoopRoomSearchState NewState);
};

// 0x50 (0x6C0 - 0x670)
// Class DXM.TTLOnlineCoopRoomSettingScene
class ATTLOnlineCoopRoomSettingScene : public ATTLOnlineRoomSceneBase
{
public:
	class UUserWidget*                           Widget_TopWidget;                                  // 0x670(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLMissionScrollListComponent*        MissionScrollListComponent;                        // 0x678(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLMissionInfoMenuComponent*          MissionInfoMenuComponent;                          // 0x680(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLMissionRankingComponent*           MissionRankingComponent;                           // 0x688(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEOnlineCoopRoomSettingState   OnlineCoopRoomCreateState;                         // 0x690(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_279D[0x2F];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLOnlineCoopRoomSettingScene* GetDefaultObj();

	void PlayAnim_OpenMissionListBP();
	void PlayAnim_CloseMissionListBP();
	void OnUpdateSessionComplete(bool bWasSuccessful);
	void ChangeSceneState(enum class ETTLEOnlineCoopRoomSettingState NewState);
};

// 0x30 (0x660 - 0x630)
// Class DXM.TTLOnlineMissionSelectScene
class ATTLOnlineMissionSelectScene : public ATTLMenuSceneBase
{
public:
	class FName                                  SelectMissionID;                                   // 0x630(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ETTLOnlineMissionSelectState      SceneState;                                        // 0x638(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ETTLMissionInfoViewMode           MissionInfoViewMode;                               // 0x639(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_279E[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLMissionScrollListComponent*        MissionScrollListComponent;                        // 0x640(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLMissionInfoMenuComponent*          MissionInfoMenuComponent;                          // 0x648(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLMissionRankingComponent*           MissionRankingInfoComponent;                       // 0x650(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_279F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLOnlineMissionSelectScene* GetDefaultObj();

	void PlayAnim_OpenMissionListBP();
	void PlayAnim_CloseMissionListBP();
};

// 0x180 (0x7B0 - 0x630)
// Class DXM.TTLOnlineMyNpcSelectScene
class ATTLOnlineMyNpcSelectScene : public ATTLMenuSceneBase
{
public:
	uint8                                        Pad_27A0[0x150];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AActor>                    CommonPopupClass;                                  // 0x780(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLMissionInfoMenuComponent*          MissionInfoMenuComponent;                          // 0x788(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLMissionMemberListComponent*        MissionMemberListComp;                             // 0x790(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLMissionSelectCharaComponent*       MissionSelectCharaComp;                            // 0x798(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_27A1[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLOnlineMyNpcSelectScene* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class DXM.GetStoreData
class UGetStoreData : public UObject
{
public:

	static class UClass* StaticClass();
	static class UGetStoreData* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class DXM.TTLOnlineNEXRankingStats
class UTTLOnlineNEXRankingStats : public UObject
{
public:
	uint8                                        Pad_27A2[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLOnlineNEXRankingStats* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class DXM.GetRankData
class UGetRankData : public UObject
{
public:
	uint8                                        Pad_27A3[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGetRankData* GetDefaultObj();

};

// 0x38 (0x360 - 0x328)
// Class DXM.TTLOnlineNotifyHUD
class ATTLOnlineNotifyHUD : public AActor
{
public:
	class UTTLNotifyHUDComponentBase*            MNotifyHUDComponent;                               // 0x328(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FTTLOnlineNotify_PlayerInfo>   PlayerInfoArray;                                   // 0x330(0x10)(BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         IsNotifyAllMissionReady;                           // 0x340(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsAutoViewportAtMultiCamps;                        // 0x341(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsCheckOffline;                                    // 0x342(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETTLOnlineNoticeHUD_ReadyType     MReadyState;                                       // 0x343(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MMissionID;                                        // 0x344(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MPastMissionID;                                    // 0x348(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27A5[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLOnlineNotifyHUD* GetDefaultObj();

	void RemoveViewPortHUD();
	void ReciveChatInfo(const struct FTTLPostedChatMessage& PostedChatMessage);
	void OnMultiTerminalToMultiBasecamp();
	void OnMenuStarted();
	void OnGotoMission(class FName NextLevelName);
	void InitializeBP();
	void AddViewPortHUD();
	bool AddInfo(struct FTTLOnlineNotifyInfo& TextInfo, enum class ETTLOnlineNoticeHUD_Type NotifyType);
};

// 0x40 (0x138 - 0xF8)
// Class DXM.TTLOnlinePlayerInfoHUDComponent
class UTTLOnlinePlayerInfoHUDComponent : public UTTLActorComponent
{
public:
	TSoftClassPtr<class UUserWidget>             WidgetClass;                                       // 0xF8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           Widget;                                            // 0x120(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DisplayRange;                                      // 0x128(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PositionOffsetZ;                                   // 0x12C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FemalePositionOffsetZ;                             // 0x130(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27A6[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLOnlinePlayerInfoHUDComponent* GetDefaultObj();

	void UpdateHUD(float DeltTime);
};

// 0x10 (0x1A8 - 0x198)
// Class DXM.TTLOnlineRoomScrollListComponent
class UTTLOnlineRoomScrollListComponent : public UTTLScrollListComponentBase
{
public:
	uint8                                        Pad_27A8[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLOnlineRoomScrollListComponent* GetDefaultObj();

	void SetTestRoomList(const TArray<struct FTTLTestRoomListData>& RoomListArray);
	bool InitializeBP();
	void Initialize(class UUserWidget* LayoutWidget, int32 DisplayNum, int32 ListNumMax);
	class UUserWidget* CreateButtonWidget(int32 Position);
};

// 0x0 (0x88 - 0x88)
// Class DXM.TTLOnlineRoomSearchParam
class UTTLOnlineRoomSearchParam : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UTTLOnlineRoomSearchParam* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class DXM.TTLOnlineStatusDataManager
class UTTLOnlineStatusDataManager : public UObject
{
public:

	static class UClass* StaticClass();
	static class UTTLOnlineStatusDataManager* GetDefaultObj();

};

// 0x0 (0x88 - 0x88)
// Class DXM.TTLOnlineStatusParam
class UTTLOnlineStatusParam : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UTTLOnlineStatusParam* GetDefaultObj();

};

// 0x0 (0x630 - 0x630)
// Class DXM.TTLOnlineStatusSettingScene
class ATTLOnlineStatusSettingScene : public ATTLMenuSceneBase
{
public:

	static class UClass* StaticClass();
	static class ATTLOnlineStatusSettingScene* GetDefaultObj();

};

// 0x80 (0x6B0 - 0x630)
// Class DXM.TTLOnlineTerminalTopScene
class ATTLOnlineTerminalTopScene : public ATTLMenuSceneBase
{
public:
	TArray<class UTTLRanking_MissionRankingResultStats*> ResultStatsArray;                                  // 0x630(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         IsShowDisconnectionsError;                         // 0x640(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27AC[0x3F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class ATTLCommonPopup>         CommonPopupClass;                                  // 0x680(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27AD[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLOnlineTerminalTopScene* GetDefaultObj();

	bool StartInOnline();
	class ATTLYesNoPopUp* SpawnPopup_YesNoBP();
	class ATTLRewardPopUp* SpawnPopup_RewardBP();
	class ATTLOkPopUp* SpawnPopup_OkBP();
	class ATTLNoticeGeneral* SpawnPopup_NoticeBP();
	void PlayAnimBP_StartScene();
	void PlayAnimBP_EndScene(bool UseLoading);
	void OnStartMatchmakeRoundStarted();
	void OnStartMatchmakeRoundComplete(bool WasSuccessful);
	void OnMissionRanking_GetStatsCallBack(bool WasSuccessful, const TArray<class UTTLRanking_MissionRankingResultStats*>& ResultStatsArray);
	void OnMatchmakingComplete(bool WasSuccessful);
	void OnLoginUserComplete(bool WasSuccessful);
	void OnJoinSessionComplete(bool WasSuccessful);
	void OnFindSessionsComplete(bool WasSuccessful, TArray<struct FBlueprintSessionResult>& SessionSearchResults);
	void OnDestroySessionComplete(class FName SessionName, bool WasSuccessful);
	void OnChangeReadyToMissionComplete(enum class ETTLEReadyToMissionErrorType ErrorType, bool IsReadyToMission);
	void OnCancelMatchmakingComplete(bool WasSuccessful);
	void LeaveTheRoom();
	void ChangeSceneState(enum class ETTLEOnlTerminalTopSceneState NextState);
	void ChangeSceneBP(int32 Value);
};

// 0x88 (0x178 - 0xF0)
// Class DXM.TTLOnlRoomSelectorComponent
class UTTLOnlRoomSelectorComponent : public UActorComponent
{
public:
	TSubclassOf<class UUserWidget>               Class_SearchItemButtonWidget;                      // 0xF0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           Widget_TopWidget;                                  // 0xF8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            Widget_RoomSearchHeadlineText;                     // 0x100(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           Widget_RoomSearchDecisionButton;                   // 0x108(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UUserWidget*>                   Widget_RoomSearchItemArray;                        // 0x110(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UWidgetAnimation*                      Animation_RoomWindowButton00InAnimation;           // 0x120(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_RoomWindowButton00OutAnimation;          // 0x128(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_RoomWindowButton00LArrowAnimation;       // 0x130(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_RoomWindowButton00RArrowAnimation;       // 0x138(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_RoomWindowButton01InAnimation;           // 0x140(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_RoomWindowButton01OutAnimation;          // 0x148(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTTLOnlineRoomSearchItemParamRow> AllRoomSearchItemParamArray;                       // 0x150(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<int32>                                CurrentRoomSearchButtonCursor;                     // 0x160(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	int32                                        CurrentRoomSearchItemCursor;                       // 0x170(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_27B5[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLOnlRoomSelectorComponent* GetDefaultObj();

	void SetWindowHeadlineText(class FText HeadlineText);
	void SetDecisionButtonText(class FText buttonText);
	void SetDecisionButtonEnable(bool IsEnable);
	void SetButtonHeadlineText(int32 Index, class FText HeadlineText);
	void SetButtonButtonText(int32 Index, class FText buttonText);
	bool IsCursorOnDecision();
	bool InitializeBP();
	void Initialize(class UUserWidget* LayoutWidget);
	int32 GetCursorValue(int32 Select);
	void GetCurrentCursor(int32* OutCurrentCursor, int32* OutCurrentSelector);
	class FText CreateTextFormatAndValue(class FText Format, int32 Value);
	void CreateRoomSearchItemParamArray(bool IsLocalMultiplay, const class FString& DataPath, const TArray<class FString>& PvpLevelTitleKeyArray, bool IsCreate);
	void CreateButton(bool IsMultiplayLocal, const class FString& DataPath, const TArray<class FString>& PvpLevelTitleKeyArray, bool IsCreate, const struct FTTLOnlRoomSelectorInitialValues& InitialValues);
};

// 0x10 (0x1A8 - 0x198)
// Class DXM.TTLOnlTitleScrollListComponent
class UTTLOnlTitleScrollListComponent : public UTTLScrollListComponentBase
{
public:
	uint8                                        Pad_27B6[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLOnlTitleScrollListComponent* GetDefaultObj();

	bool InitializeBP();
};

// 0x0 (0x180 - 0x180)
// Class DXM.TTLOptionCategoryMenuComponent
class UTTLOptionCategoryMenuComponent : public UTTLAssembleCategoryMenuComponent
{
public:

	static class UClass* StaticClass();
	static class UTTLOptionCategoryMenuComponent* GetDefaultObj();

};

// 0x38 (0x60 - 0x28)
// Class DXM.TTLOptionButton00
class UTTLOptionButton00 : public UObject
{
public:
	class UUserWidget*                           TopWidget;                                         // 0x28(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLUIButtonIcon*                      ButtonIconA;                                       // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLUIButtonIcon*                      ButtonIconB;                                       // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                               PlusWidget;                                        // 0x40(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                               CursorWidget;                                      // 0x48(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                               BackgroundWidget;                                  // 0x50(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            TextWidget;                                        // 0x58(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTTLOptionButton00* GetDefaultObj();

	void SetVisible(enum class ESlateVisibility Visible);
	void SetText(class FText Text);
	void SetKeyIcon(enum class ETTLUIButtonIconType IconType_1, enum class ETTLUIButtonIconType IconType_2);
	void SetHorizontal(enum class EHorizontalAlignment Horizontal);
	void SetCursorVisible(enum class ESlateVisibility Visible);
	void SetColor(enum class EUTTLOptionList01Color ColorType);
	void SetAutoSize(bool Value);
	void InitializeWidget(class UUserWidget* UserWidget);
	void Initialize(class UUserWidget* UserWidget, class FName WidgetName);
	class UUserWidget* GetTopWidget();
	enum class ETTLUIButtonIconType GetButtonIconTypeB();
	enum class ETTLUIButtonIconType GetButtonIconTypeA();
};

// 0x0 (0x60 - 0x60)
// Class DXM.TTLOptionButton01
class UTTLOptionButton01 : public UTTLOptionButton00
{
public:

	static class UClass* StaticClass();
	static class UTTLOptionButton01* GetDefaultObj();

};

// 0x20 (0x48 - 0x28)
// Class DXM.TTLOptionButton02
class UTTLOptionButton02 : public UObject
{
public:
	class UUserWidget*                           TopWidget;                                         // 0x28(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            TextWidget;                                        // 0x30(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidget*                               CursorWidgetA;                                     // 0x38(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidget*                               CursorWidgetB;                                     // 0x40(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLOptionButton02* GetDefaultObj();

	void SetText(class FText Text);
	void SetCursorVisible(enum class ESlateVisibility Visible);
	void Initialize(class UUserWidget* UserWidget, class FName WidgetName);
};

// 0x38 (0x60 - 0x28)
// Class DXM.TTLOptionList00
class UTTLOptionList00 : public UObject
{
public:
	class UUserWidget*                           TopWidget;                                         // 0x28(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLOptionButton00*                    Button00A;                                         // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLOptionButton00*                    Button00B;                                         // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLOptionButton01*                    Button01;                                          // 0x40(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                               SliderTop;                                         // 0x48(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USlider*                               Slider;                                            // 0x50(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            NumText;                                           // 0x58(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTTLOptionList00* GetDefaultObj();

	void SetVisible(enum class ESlateVisibility Visible);
	void SetColor(enum class EUTTLOptionList01Color ColorType);
	void Initialize(class UUserWidget* UserWidget);
	class UUserWidget* GetTopWidget();
	class UWidget* GetSliderTop();
	class USlider* GetSlider();
	class UTextBlock* GetNumText();
	class UTTLOptionButton01* GetButton01();
	class UTTLOptionButton00* GetButton00B();
	class UTTLOptionButton00* GetButton00A();
};

// 0x28 (0x50 - 0x28)
// Class DXM.TTLOptionList01
class UTTLOptionList01 : public UObject
{
public:
	class UUserWidget*                           TopWidget;                                         // 0x28(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLUIButtonIcon*                      ButtonIconA;                                       // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLUIButtonIcon*                      ButtonIconB;                                       // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                               PlusWidget;                                        // 0x40(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            buttonText;                                        // 0x48(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLOptionList01* GetDefaultObj();

	void SetVisible(enum class ESlateVisibility Visible);
	void SetText(class FText Text);
	void SetKeyIcon(enum class ETTLUIButtonIconType IconType_1, enum class ETTLUIButtonIconType IconType_2);
	void Initialize(class UUserWidget* UserWidget);
	class UUserWidget* GetTopWidget();
};

// 0x78 (0xA0 - 0x28)
// Class DXM.TTLOptionPad00
class UTTLOptionPad00 : public UObject
{
public:
	class UUserWidget*                           TopWidget;                                         // 0x28(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidget*                               ButtonImage[0xE];                                  // 0x30(0x70)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLOptionPad00* GetDefaultObj();

	void SetVisibleKey(const TArray<enum class EUTTLOptionPadType>& KeyArray);
	void Initialize(class UUserWidget* UserWidget, class FName WidgetName);
};

// 0x30 (0x58 - 0x28)
// Class DXM.TTLOptionSelectPreset
class UTTLOptionSelectPreset : public UObject
{
public:
	class UWidget*                               TopWidget;                                         // 0x28(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidget*                               ButtonTop;                                         // 0x30(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            TextWidget;                                        // 0x38(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UTTLOptionButton02*>            ButtonArray;                                       // 0x40(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_27B7[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLOptionSelectPreset* GetDefaultObj();

	void SetWindowType(enum class EUTTLOptionSelectPresetWindowType Type);
	void SetVisible(enum class ESlateVisibility Visible);
	void SetCursor(int32 Index);
	void Initialize(class UUserWidget* UserWidget, class FName WidgetName);
};

// 0x0 (0x28 - 0x28)
// Class DXM.TTLOptionCommonWidget
class UTTLOptionCommonWidget : public UObject
{
public:

	static class UClass* StaticClass();
	static class UTTLOptionCommonWidget* GetDefaultObj();

};

// 0x58 (0x148 - 0xF0)
// Class DXM.TTLOptionHUDCustomComponent
class UTTLOptionHUDCustomComponent : public UActorComponent
{
public:
	class UUserWidget*                           Widget_RootWidget;                                 // 0xF0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           Widget_TalkWidget;                                 // 0xF8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UWidget*>                       Widget_hud_root;                                   // 0x100(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UWidget*>                       Widget_hud_u;                                      // 0x110(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UWidget*>                       Widget_csr_t00;                                    // 0x120(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UWidget*>                       Widget_Warning;                                    // 0x130(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_27C8[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLOptionHUDCustomComponent* GetDefaultObj();

	void ZOrderHud(enum class ETTLOptionHUDCustomType Type, int32 ZOrder);
	void SetWidgetDisp(class UUserWidget* Widget, class FName Name, enum class ESlateVisibility Visible);
	void SetWidgetAlphaSub(class UWidget* Widget, float Alpha);
	void SetWeaponIcon(struct FTTLAssemblePartsInfoRow& PartsInfo, int32 Type);
	void SetWarningTextMain();
	void SetWarningText(class UWidget* Widget, class FText& Text);
	void SetWarningDispSub(bool Disp, enum class ETTLEOptionHUDCustomWarning Index);
	void SetWarningAlphaSub(enum class ETTLEOptionHUDCustomWarning Index, float Alpha);
	void SetHudZOrderSub(enum class ETTLEOptionHUDCustomWidget Index, int32 ZOrder);
	void SetHudScaleSub(enum class ETTLEOptionHUDCustomWidget Index, float X, float Y);
	struct FVector2D SetHudMoveSub(enum class ETTLEOptionHUDCustomWidget Index, float X, float Y, bool Chaton);
	void SetHudDispSub(bool Disp, enum class ETTLEOptionHUDCustomWidget Index);
	void SetHudDisp(bool Disp, enum class ETTLOptionHUDCustomType Type);
	void SetHudCursorSub(bool Disp, enum class ETTLEOptionHUDCustomWidget Index);
	void SetHudCursor(bool Disp, enum class ETTLOptionHUDCustomType Type);
	void SetHudAlphaSub(enum class ETTLEOptionHUDCustomWidget Index, float Alpha);
	void SetHudAlpha(enum class ETTLOptionHUDCustomType Type, float Alpha);
	void SetDisp(bool Disp);
	void ScaleHud(enum class ETTLOptionHUDCustomType Type, float X, float Y);
	void PlayOuterAreaAlert(bool Disp);
	struct FVector2D MoveHud(enum class ETTLOptionHUDCustomType Type, float X, float Y, bool Chaton);
	void InitializeBP(class UUserWidget* LayoutWidget);
	void Initialize(class UUserWidget* LayoutWidget, class UUserWidget* LayoutWidget2);
	struct FVector4 GetWidgetXYWHSub(enum class ETTLEOptionHUDCustomWidget Index);
	struct FVector4 GetWidgetXYWH(enum class ETTLOptionHUDCustomType Type);
	class UTexture2D* GetPartsIconByIconName(class FName IconName);
	void EnableTick(bool Enable);
	void CreateWarningWidget(class UUserWidget* Widget);
};

// 0x90 (0x228 - 0x198)
// Class DXM.TTLOptionHUDCustomListComponent
class UTTLOptionHUDCustomListComponent : public UTTLScrollListComponentBase
{
public:
	UMulticastDelegateProperty_                  OnOpened;                                          // 0x198(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnClosed;                                          // 0x1A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class UUserWidget*                           Widget_RootWidget;                                 // 0x1B8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      OpenAnimation;                                     // 0x1C0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27CA[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLHUDCustomListInfo>         List;                                              // 0x1D0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_27CB[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWidgetAnimation*                      List_Animation_PartsButtonON;                      // 0x1E8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      List_Animation_PartsButtonOFF;                     // 0x1F0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Change_Animation_PartsButtonON;                    // 0x1F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Change_Animation_PartsButtonOFF;                   // 0x200(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Select_Animation_PartsButtonON;                    // 0x208(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Select_Animation_PartsButtonOFF;                   // 0x210(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Select_Animation_LeftON;                           // 0x218(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Select_Animation_RightON;                          // 0x220(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLOptionHUDCustomListComponent* GetDefaultObj();

	void UpdateList(TArray<struct FTTLHUDCustomListInfo>& ListInfo, int32 ReferenceIndex);
	void SetButton(class FText& Header, TArray<struct FTTLHUDCustomListInfo>& ListInfo, int32 ReferenceIndex, int32 Max);
	float OpenWindow();
	bool InitializeBP();
	void Initialize(class UUserWidget* LayoutWidget, int32 DisplayNum, int32 ListNumMax);
	float CloseWindow();
};

// 0x38 (0x128 - 0xF0)
// Class DXM.TTLOptionHUDCustomOuterComponent
class UTTLOptionHUDCustomOuterComponent : public UActorComponent
{
public:
	class UUserWidget*                           Widget_RootWidget;                                 // 0xF0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UWidget*>                       Widget_hud_root;                                   // 0xF8(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UWidget*>                       Widget_hud_u;                                      // 0x108(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UWidget*>                       Widget_csr_t00;                                    // 0x118(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTTLOptionHUDCustomOuterComponent* GetDefaultObj();

	void Initialize(class UUserWidget* LayoutWidget);
};

// 0xA8 (0x468 - 0x3C0)
// Class DXM.TTLOptionHudCustomPopUp
class ATTLOptionHudCustomPopUp : public ATTLPopUpBase
{
public:
	uint8                                        Pad_27CC[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLYesNoPopUp*                        YesNoPop;                                          // 0x3C8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLUIHeaderComponent*                 HeaderMenuComponent;                               // 0x3D0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLOptionHUDCustomListComponent*      HudCustomList;                                     // 0x3D8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLOptionHUDCustomComponent*          HudCustom;                                         // 0x3E0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLOptionHUDCustomOuterComponent*     HudCustomOuter;                                    // 0x3E8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           HeaderWidget;                                      // 0x3F0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           EditMenuWidget;                                    // 0x3F8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_27CD[0x58];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLHUDCustomListInfo>         ListInfo;                                          // 0x458(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ATTLOptionHudCustomPopUp* GetDefaultObj();

	class ATTLYesNoPopUp* SpawnPopup_YesNoBP();
	void OnYesSettingReset();
	void OnOpenedHudCustomList();
};

// 0x58 (0x1F0 - 0x198)
// Class DXM.TTLOptionKeyConfigListComponent
class UTTLOptionKeyConfigListComponent : public UTTLScrollListComponentBase
{
public:
	UMulticastDelegateProperty_                  OnFinishKeyInput;                                  // 0x198(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_LArrow;                                  // 0x1A8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_RArrow;                                  // 0x1B0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27CF[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLOptionKeyConfigListComponent* GetDefaultObj();

	void OnInputKeyboardForCancelInput(const struct FKey& InputKey, bool IsPressed);
	void OnInputAction_2nd(enum class ETTLEActionType KeyType, bool IsPressed);
	void OnInputAction_1st(enum class ETTLEActionType KeyType, bool IsPressed);
	bool InitializeBP();
	void Initialize(class UUserWidget* LayoutWidget, int32 DisplayNum, int32 ListNumMax);
};

// 0x28 (0x218 - 0x1F0)
// Class DXM.TTLOptionKeyboardConfigComponent
class UTTLOptionKeyboardConfigComponent : public UTTLOptionKeyConfigListComponent
{
public:
	UMulticastDelegateProperty_                  OnFinishKeyboardInput;                             // 0x1F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	uint8                                        Pad_27D1[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLOptionKeyboardConfigComponent* GetDefaultObj();

	void OnInputKeyboard(const struct FKey& InputKey, bool IsPressed);
	void OnInputActionForCancelInput(enum class ETTLEActionType KeyType, bool IsPressed);
};

// 0xA0 (0x190 - 0xF0)
// Class DXM.TTLOptionKeyConfigComponent
class UTTLOptionKeyConfigComponent : public UActorComponent
{
public:
	class UUserWidget*                           Widget_TopWidget;                                  // 0xF0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            Widget_AssistKeyDisabledText;                      // 0xF8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            Widget_AssistKeyText_1;                            // 0x100(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            Widget_AssistKeyText_2;                            // 0x108(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            Widget_AssistKeyHypheText_1;                       // 0x110(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            Widget_AssistKeyHypheText_2;                       // 0x118(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                Widget_AssistKeyIcon_1;                            // 0x120(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                Widget_AssistKeyIcon_2;                            // 0x128(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           Widget_PadHeadlineTopWidget;                       // 0x130(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           Widget_ListHeadlineTopWidget;                      // 0x138(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           Widget_PadTopWidget;                               // 0x140(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UWidget*>                       Widget_PadButtonWidget;                            // 0x148(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UWidget*                               Widget_AllocationTopWidget;                        // 0x158(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            Widget_AllocationOperationText;                    // 0x160(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            Widget_AllocationHelpText;                         // 0x168(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           Widget_HelpTopWidget;                              // 0x170(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            Widget_HelpText;                                   // 0x178(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_27D2[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLOptionKeyConfigComponent* GetDefaultObj();

	void SetVisibility(enum class ESlateVisibility Visible);
	void SetupWidget();
	void SetPadButtonVisible(enum class ETTLKeyAssignIcon Key, enum class ESlateVisibility Visible);
	void SetHelpText(class FText Text);
	void SetAllPadButtonHidden();
	void SetAllocationOperationVisible(enum class ESlateVisibility Visible);
	void SetAllocationOperationTextForIndex(int32 ListCursorIndex);
	void SetAllocationOperationText(class FText Text);
	void SetAllocationHelpText(class FText Text);
	void OpenComponent(bool IsGamePad);
	bool InitializeBP();
	void Initialize(class UUserWidget* LayoutWidget);
	void Finalize();
	void CloseComponent();
};

// 0x180 (0x7B0 - 0x630)
// Class DXM.TTLOptionMenuActor
class ATTLOptionMenuActor : public ATTLMenuSceneBase
{
public:
	TSubclassOf<class UUserWidget>               WidgetClass;                                       // 0x630(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           CurrentWidget;                                     // 0x638(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class ATTLYesNoPopUp>          YesNoPopupClass;                                   // 0x640(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class ATTLOkPopUp>             OkPopupClass;                                      // 0x668(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class ATTLCommonPopup>         CommonPopupClass;                                  // 0x690(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class ATTLOptionHudCustomPopUp> HudCustomPopupClass;                               // 0x6B8(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLOptionMenuComponent*               POptionMenuComponent;                              // 0x6E0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLOptionKeyConfigComponent*          POptionKeyConfigComponent;                         // 0x6E8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLOptionKeyConfigListComponent*      POptionKeyConfigListComponent;                     // 0x6F0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLOptionKeyboardConfigComponent*     POptionKeyboardConfigComp;                         // 0x6F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27D3[0x98];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnOptionMenuActorExit;                             // 0x798(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	uint8                                        Pad_27D4[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLOptionMenuActor* GetDefaultObj();

	void OnFinishKeyInput(enum class ETTLEInputType InputType);
	void OnFinishKeyboardInput(const struct FKey& InputKey);
	void OnDecideCommonPopUp();
	void OnClosedSettingReset();
	void OnClosedKeyConfigReset();
	void OnClosedDiscardKeyConfig();
	void OnClosedConfirmApplyOrRestoreGraphicSettingsPopup();
	void OnClosedConfirmApplyGraphicSettingsPopup();
	void OnCancelCommonPopUp();
	bool IsEnd();
	void Initialize(bool IsOptionScene);
	void HudCustomEnd();
};

// 0xC8 (0x1B8 - 0xF0)
// Class DXM.TTLOptionMenuComponent
class UTTLOptionMenuComponent : public UActorComponent
{
public:
	class UUserWidget*                           Widget_RootWidget;                                 // 0xF0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           Widget_menu_u00;                                   // 0xF8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                          Widget_RMenu_Parent;                               // 0x100(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                               Widget_RMenu_Child;                                // 0x108(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           Widget_KeyListTopWidget;                           // 0x110(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           Widget_KeyboradListTopWidget;                      // 0x118(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UUserWidget*>                   LMenu_Widget;                                      // 0x120(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UUserWidget*>                   RMenu_Widget;                                      // 0x130(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UUserWidget*>                   Widget_KeyListArray;                               // 0x140(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UUserWidget*>                   Widget_KeyboardListArray;                          // 0x150(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_27DE[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UWidgetAnimation*                      LMenu_Animation_ON;                                // 0x180(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      LMenu_Animation_OFF;                               // 0x188(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      RMenu_Animation_ON;                                // 0x190(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      RMenu_Animation_OFF;                               // 0x198(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      RMenu_Animation_LArrow;                            // 0x1A0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      RMenu_Animation_RArrow;                            // 0x1A8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27DF[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLOptionMenuComponent* GetDefaultObj();

	void UpdateKeyList(int32 Index, bool IsGamePad);
	void SetVisibility(class FName& Widget_name, enum class ESlateVisibility Visible);
	void SetupKeyListText();
	void SetupKeyConfigMenuParam();
	void SetRMenuValueText(class FText& Text, int32 Num);
	void SetRMenuText(class FText& Text, int32 Num);
	void SetRMenuSliderValue(float Value, int32 Num, bool ActiveSliderOnly);
	void SetRMenuSliderText(class FText& Text, int32 Num);
	void SetRMenuLight(bool Light);
	void SetRMenuCursor(int32 Curpos);
	void SetRMenuArrow(int32 Curpos, bool Left);
	void SetRHeaderText(class FText& Text);
	void SetLMenuLight(int32 Curpos, bool Light);
	void SetLMenuCursor(int32 Curpos);
	void SetLHeaderText(class FText& Text);
	void SetHelpText(class FText& Text);
	void RMenuCreate(TArray<struct FTTLInitTblData2>& Data);
	void MenuCreate(TArray<struct FTTLInitTblLeftMenu>& List);
	void KeyListSetHeadlineText();
	void InitKeyListWidget();
	bool InitializeBP();
	void Initialize(class UUserWidget* LayoutWidget);
	struct FTTLOptionKeyConfigPresetParam GetKeyConfigPreset(int32 Index);
	void Finalize();
	void CreateKeyList(class UUserWidget* KeyListTopWidget, TArray<class UUserWidget*>* KeyWidgetArray, TArray<struct FTTLOptionKeyConfigMenuParam>& KeyConfigMenuParamList);
	void AdjustRMenu(int32 Type, int32 Num);
};

// 0x0 (0x88 - 0x88)
// Class DXM.TTLOptionMenuParam
class UTTLOptionMenuParam : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UTTLOptionMenuParam* GetDefaultObj();

};

// 0x0 (0x630 - 0x630)
// Class DXM.TTLOptionScene
class ATTLOptionScene : public ATTLMenuSceneBase
{
public:

	static class UClass* StaticClass();
	static class ATTLOptionScene* GetDefaultObj();

};

// 0x10 (0x640 - 0x630)
// Class DXM.TTLOptionScene2
class ATTLOptionScene2 : public ATTLMenuSceneBase
{
public:
	class ATTLOptionMenuActor*                   POptionMenuActor;                                  // 0x630(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27E0[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLOptionScene2* GetDefaultObj();

	bool Destoroy_OptionMenuBP();
	bool Create_OptionMenuBP();
};

// 0x78 (0xA0 - 0x28)
// Class DXM.TTLIKControoler
class UTTLIKControoler : public UObject
{
public:
	uint8                                        Pad_27E1[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLOuterAnimInstance*                 SelfAnim;                                          // 0x40(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27E2[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLIKControoler* GetDefaultObj();

};

// 0x58 (0xF8 - 0xA0)
// Class DXM.TTLIKControlerJustStop
class UTTLIKControlerJustStop : public UTTLIKControoler
{
public:
	uint8                                        Pad_27E3[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLIKControlerJustStop* GetDefaultObj();

};

// 0x20 (0xD40 - 0xD20)
// Class DXM.TTLOuterCloseRangeWeapon
class ATTLOuterCloseRangeWeapon : public ATTLCloseRangeWeapon
{
public:
	class UAnimMontage*                          Animation_WomanOuterMontage;                       // 0xD20(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          Animation_WomanOuterMontage_Air;                   // 0xD28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          PCurrentOuterMontage;                              // 0xD30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_27E4[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLOuterCloseRangeWeapon* GetDefaultObj();

};

// 0x10 (0x5F0 - 0x5E0)
// Class DXM.TTLOuterGrenade
class ATTLOuterGrenade : public ATTLGrenade
{
public:
	uint8                                        Pad_27E5[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLOuterGrenade* GetDefaultObj();

};

// 0x1A0 (0x500 - 0x360)
// Class DXM.TTLOuterHeadAnimInstance
class UTTLOuterHeadAnimInstance : public UTTLAnimInstance
{
public:
	class UAnimSequenceBase*                     CharaEditAnimAsset;                                // 0x360(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                     Old_CharaEditAnimAsset;                            // 0x368(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AnimBlendTime;                                     // 0x370(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27E7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimSequenceBase*                     DefaultCampFaceAnimation;                          // 0x378(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsKnockBackDamage;                                 // 0x380(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSwordColliding;                                  // 0x381(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsMale;                                            // 0x382(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsStopEyeWink;                                     // 0x383(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsStopLipSync;                                     // 0x384(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsEnableLipSync;                                   // 0x385(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsPlayingLipSyncMontage;                           // 0x386(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27E8[0x19];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UAnimMontage>           LeftWinkMotionAssetMale;                           // 0x3A0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UAnimMontage>           RightWinkMotionAssetMale;                          // 0x3C8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UAnimMontage>           LeftWinkMotionAssetFemale;                         // 0x3F0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UAnimMontage>           RightWinkMotionAssetFemale;                        // 0x418(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EyeWinkWaitTime;                                   // 0x440(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EyeWinkWaitMinTime;                                // 0x444(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EyeWinkWaitMaxTime;                                // 0x448(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27E9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLLipSyncPattern>            LipSyncPatternMale;                                // 0x450(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UAnimMontage>           LipSyncEndMotionAssetMale;                         // 0x460(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FTTLLipSyncPattern>            LipSyncPatternFemale;                              // 0x488(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UAnimMontage>           LipSyncEndMotionAssetFemale;                       // 0x498(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DefaultLipSyncBlendWeight;                         // 0x4C0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EventLipSyncBlendWeight;                           // 0x4C4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsEnableEventLipSyncBlend;                         // 0x4C8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27EA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LipSyncPatternId;                                  // 0x4CC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DefaultLipSyncPlayRate;                            // 0x4D0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EventLipSyncPlayRate;                              // 0x4D4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsEnableEventLipSyncPlayRate;                      // 0x4D8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27EB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LipSyncBlendWeight;                                // 0x4DC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsInBaseCamp;                                      // 0x4E0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27EC[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          LeftEyeWinkMotion;                                 // 0x4E8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                          RightEyeWinkMotion;                                // 0x4F0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                          LipSyncMotion;                                     // 0x4F8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLOuterHeadAnimInstance* GetDefaultObj();

	bool UpdateGender(class AActor* Actor);
	void SetLipSyncStop(bool IsStop);
	void SetLipSyncEnable(bool IsEnable);
	void SetEyeWinkStop(bool IsStop);
	void SetEventLipSyncPlayRate(float PlayRate);
	void SetEventLipSyncPatternId(int32 PatternID);
	void SetEventLipSyncBlendWeight(float BlendWeight);
	void SetDefaultLipSyncPlayRate(float PlayRate);
	void SetDefaultLipSyncBlendWeight(float BlendWeight);
	void ResetEventLipSyncPlayRate();
	void ResetEventLipSyncBlendWeight();
	void ProcessLipSync(float DeltaSeconds);
	void ProcessEyeWink(float DeltaSeconds);
	float GetLipSyncPlayRate();
};

// 0x30 (0x370 - 0x340)
// Class DXM.TTLOuterInArsenalCharacter
class ATTLOuterInArsenalCharacter : public ATTLActor
{
public:
	uint8                                        Pad_27ED[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLOuterInArsenalCharacter* GetDefaultObj();

	void Setup(class USceneComponent* Parent, class FName SocketName);
	void SetShowHeadMesh(bool IsShow);
	void SetShow(bool IsShow);
	void InitializeBP();
};

// 0x0 (0x88 - 0x88)
// Class DXM.TTLOuterPartsParam
class UTTLOuterPartsParam : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UTTLOuterPartsParam* GetDefaultObj();

};

// 0xB8 (0xF80 - 0xEC8)
// Class DXM.TTLOuterSubWeapon
class ATTLOuterSubWeapon : public ATTLShoulderWeaponBase
{
public:
	struct FTTLFxParam                           ChargeFXParam;                                     // 0xEC8(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        ChargeFXPlayback;                                  // 0xF60(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class ATTLLongRangeWeapon*                   MainWeapon;                                        // 0xF78(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ATTLOuterSubWeapon* GetDefaultObj();

	void StopChargeFX();
	void PlayChargeFX();
	void InitializeOuterSubWeapon(enum class ETTLWeaponType& Type, class ATTLLongRangeWeapon* MainWeapon);
	void CalcParameterWithSkill(class UTTLBasicStatusComponent* BasicStatus);
	void ActionOnInputStart();
};

// 0x348 (0x688 - 0x340)
// Class DXM.TTLOuterTrap
class ATTLOuterTrap : public ATTLActor
{
public:
	class USkeletalMeshComponent*                TrapMesh;                                          // 0x340(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  TrapCollision;                                     // 0x348(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           TrapLoopFX;                                        // 0x350(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        TrapLoopPlayback;                                  // 0x3E8(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           TrapAttackLoopFX;                                  // 0x400(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        TrapAttackLoopPlayback;                            // 0x498(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           TrapAttackEndFX;                                   // 0x4B0(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           TrapDestroyedFX;                                   // 0x548(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UAnimMontage*                          TrapMontage;                                       // 0x5E0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AreaRadius;                                        // 0x5E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AreaHeight;                                        // 0x5EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimerHandle                          AttackVFXHandle;                                   // 0x5F0(0x8)(NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_27F0[0x90];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLOuterTrap* GetDefaultObj();

	void StartTrap();
	void StartSet();
	void OnTrapDestroyed(class AActor* DestroyedActor);
	void OnDuelTimeStart();
	void OnCollisionOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void CalcSetRotation(struct FVector& NormalVector);
};

// 0x40 (0x600 - 0x5C0)
// Class DXM.TTLOuterTrapWeapon
class ATTLOuterTrapWeapon : public ATTLSupportWeaponBase
{
public:
	TSubclassOf<class ATTLOuterTrap>             TrapClass;                                         // 0x5C0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ATTLOuterTrap*>                 SpawnedOuterTrapList;                              // 0x5C8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_27F2[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLOuterTrapWeapon* GetDefaultObj();

	class AActor* SpawnOuterTrap();
	bool CanSetTrapAtLocation(struct FVector& Location, struct FVector& Direction);
};

// 0x0 (0x88 - 0x88)
// Class DXM.TTLOuterVisualParam
class UTTLOuterVisualParam : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UTTLOuterVisualParam* GetDefaultObj();

};

// 0x10 (0x370 - 0x360)
// Class DXM.TTLOuterWeaponAnimInstance
class UTTLOuterWeaponAnimInstance : public UTTLAnimInstance
{
public:
	class ATTLLongRangeWeapon*                   OwnerWeapon;                                       // 0x360(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEOuterFunnelState             FunnelState;                                       // 0x368(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsChargeAttack;                                    // 0x369(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsCharacterFlying;                                 // 0x36A(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27F3[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLOuterWeaponAnimInstance* GetDefaultObj();

};

// 0x8 (0x100 - 0xF8)
// Class DXM.TTLOuterWeaponComponent
class UTTLOuterWeaponComponent : public UTTLActorComponent
{
public:
	float                                        GrenadeCoolTime;                                   // 0xF8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GrenadeCoolTimeRemaining;                          // 0xFC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLOuterWeaponComponent* GetDefaultObj();

	void StartThrowGrenade();
	bool CanThrowGrenade();
};

// 0x10 (0x100 - 0xF0)
// Class DXM.TTLOuterWeaponMovement
class UTTLOuterWeaponMovement : public UActorComponent
{
public:
	struct FVector                               BoundingBoxSize;                                   // 0xF0(0xC)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveSpeed;                                         // 0xFC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLOuterWeaponMovement* GetDefaultObj();

	void SetBoundSize(class USkeletalMeshComponent* Mesh);
	void CalcFinalPosition(struct FVector* Result, struct FVector& TargetPosition, float DeltaTime);
};

// 0x38 (0x60 - 0x28)
// Class DXM.TTLParameterCalculator
class UTTLParameterCalculator : public UObject
{
public:
	float                                        BodyParameterRateOnDestroyed;                      // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LegsParameterRateOnDestroyed;                      // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BodyParameterRateOnHalfDestroyed;                  // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LegsParameterRateOnHalfDestroyed;                  // 0x34(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LArmParameterRateOnHalfDestroyed;                  // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RArmParameterRateOnHalfDestroyed;                  // 0x3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeadParameterRateOnHalfDestroyed;                  // 0x40(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InsideParameterRateOnHalfDestroyed;                // 0x44(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GradeArmorMax;                                     // 0x48(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GradeMobilityMax;                                  // 0x4C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GradeSearchMax;                                    // 0x50(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GradeAttackMax;                                    // 0x54(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GradeBulletMax;                                    // 0x58(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27F4[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLParameterCalculator* GetDefaultObj();

	void CalcTotalParam(struct FTTLPartsHeadParamRow& HeadParam, struct FTTLPartsBodyParamRow& BodyParam, struct FTTLPartsInsideParamRow& InsideParam, struct FTTLPartsArmRightParamRow& ArmRightParam, struct FTTLPartsArmLeftParamRow& ArmLeftParam, struct FTTLPartsLegsParamRow& LegsParam, struct FTTLPartsTotalParam* TotalParam, struct FTTLWeaponParamBaseRow& LeftWeapon, struct FTTLWeaponParamBaseRow& RightWeapon, struct FTTLWeaponParamBaseRow& ShoulderWeapon, struct FTTLWeaponParamBaseRow& SupportWeapon, struct FTTLWeaponParamBaseRow& LeftRackWeapon, struct FTTLWeaponParamBaseRow& RightRackWeapon);
	void CalcBasicStatus(struct FTTLPartsTotalParam& TotalParam, class UTTLBasicStatusComponent* BasicStatusIn, class UTTLBasicStatusComponent** BasicStatus);
	void CalcAssembleGrade(struct FTTLPartsTotalParam& TotalParam, struct FTTLArsenaltotalGradeRow* Grade);
	void CalcArsenalTotalParam(class ACharacter* Arsenal, struct FTTLPartsHeadParamRow& HeadParam, struct FTTLPartsBodyParamRow& BodyParam, struct FTTLPartsInsideParamRow& InsideParam, struct FTTLPartsArmRightParamRow& ArmRightParam, struct FTTLPartsArmLeftParamRow& ArmLeftParam, struct FTTLPartsLegsParamRow& LegsParam, struct FTTLPartsTotalParam* TotalParam, struct FTTLWeaponParamBaseRow& LeftWeapon, struct FTTLWeaponParamBaseRow& RightWeapon, struct FTTLWeaponParamBaseRow& ShoulderWeapon, struct FTTLWeaponParamBaseRow& SupportWeapon, struct FTTLWeaponParamBaseRow& LeftRackWeapon, struct FTTLWeaponParamBaseRow& RightRackWeapon);
	void ApplyExtraAttachmentParameterToRightArm(struct FTTLPartsArmRightParamRow& InRightArmParam, struct FTTLExtraAttachmentParam& InAttachmentParam, struct FTTLPartsArmRightParamRow* OutRightArmParam);
	void ApplyExtraAttachmentParameterToLegs(struct FTTLPartsLegsParamRow& InLegsParam, struct FTTLExtraAttachmentParam& InAttachmentParam, struct FTTLPartsLegsParamRow* OutLegsParam);
	void ApplyExtraAttachmentParameterToLeftArm(struct FTTLPartsArmLeftParamRow& InLeftArmParam, struct FTTLExtraAttachmentParam& InAttachmentParam, struct FTTLPartsArmLeftParamRow* OutLeftArmParam);
	void ApplyExtraAttachmentParameterToInside(struct FTTLPartsInsideParamRow& InInsideParam, struct FTTLExtraAttachmentParam& InAttachmentParam, struct FTTLPartsInsideParamRow* OutInsideParam);
	void ApplyExtraAttachmentParameterToHead(struct FTTLPartsHeadParamRow& InHeadParam, struct FTTLExtraAttachmentParam& InAttachmentParam, struct FTTLPartsHeadParamRow* OutHeadParam);
	void ApplyExtraAttachmentParameterToBody(struct FTTLPartsBodyParamRow& InBodyParam, struct FTTLExtraAttachmentParam& InAttachmentParam, struct FTTLPartsBodyParamRow* OutBodyParam);
	void ApplyArsenalStatusToInventory(class UTTLGameInstance* GameInstance, class AActor* TargetArsenalActor);
};

// 0x18 (0x108 - 0xF0)
// Class DXM.TTLParticleOverridePrmComponent
class UTTLParticleOverridePrmComponent : public UActorComponent
{
public:
	class AActor*                                VertSurfaceActor;                                  // 0xF0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                VertSurfaceMeshName;                               // 0xF8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLParticleOverridePrmComponent* GetDefaultObj();

};

// 0x38 (0x60 - 0x28)
// Class DXM.TTLPartsDevelopManager
class UTTLPartsDevelopManager : public UObject
{
public:
	class UTTLGameInstance*                      GameInstance;                                      // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_27F7[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLPartsDevelopManager* GetDefaultObj();

	void ObtainFlagItem(class FName FlagItemID);
	TArray<struct FTTLDevelopStatus> GetEnterpriseSecretDevelopableList(enum class ETTLEnterpriseType EnterpriseType);
	TArray<struct FTTLDevelopStatus> GetEnterpriseDevelopableList(enum class ETTLEnterpriseType EnterpriseType);
};

// 0x0 (0x88 - 0x88)
// Class DXM.TTLPartsDevelopParam
class UTTLPartsDevelopParam : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UTTLPartsDevelopParam* GetDefaultObj();

};

// 0x0 (0x88 - 0x88)
// Class DXM.TTLPartsHeadParam
class UTTLPartsHeadParam : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UTTLPartsHeadParam* GetDefaultObj();

};

// 0x0 (0x88 - 0x88)
// Class DXM.TTLPartsBodyParam
class UTTLPartsBodyParam : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UTTLPartsBodyParam* GetDefaultObj();

};

// 0x0 (0x88 - 0x88)
// Class DXM.TTLPartsInsideParam
class UTTLPartsInsideParam : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UTTLPartsInsideParam* GetDefaultObj();

};

// 0x0 (0x88 - 0x88)
// Class DXM.TTLPartsArmRightParam
class UTTLPartsArmRightParam : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UTTLPartsArmRightParam* GetDefaultObj();

};

// 0x0 (0x88 - 0x88)
// Class DXM.TTLPartsArmLeftParam
class UTTLPartsArmLeftParam : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UTTLPartsArmLeftParam* GetDefaultObj();

};

// 0x0 (0x88 - 0x88)
// Class DXM.TTLPartsLegsParam
class UTTLPartsLegsParam : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UTTLPartsLegsParam* GetDefaultObj();

};

// 0x90 (0x180 - 0xF0)
// Class DXM.TTLPartsParameterMenu
class UTTLPartsParameterMenu : public UActorComponent
{
public:
	class UUserWidget*                           MenuLayout;                                        // 0xF0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>               MenuTextClass_Category;                            // 0xF8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>               MenuTextClass_Parameter;                           // 0x100(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>               MenuTextClass_Detail;                              // 0x108(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEPartMenuIndex                CurrentCategory;                                   // 0x110(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27FB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UUserWidget*>                   MenuTextUICategoryList;                            // 0x118(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UUserWidget*>                   MenuTextUIParameterList;                           // 0x128(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UUserWidget*>                   MenuTextUIDetailList;                              // 0x138(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	enum class ETTLETradingMode                  TradingMode;                                       // 0x148(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27FC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PurchaseAmount;                                    // 0x14C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27FD[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLPartsParameterMenu* GetDefaultObj();

	void SetWeaponText_Sword(class FName& PartsID, class FName& CurrentPartsID);
	void SetWeaponText_ShoulderCannon(class FName& PartsID, class FName& CurrentPartsID);
	void SetWeaponText_Shield(class FName& PartsID, class FName& CurrentPartsID);
	void SetWeaponText_RailGun(class FName& PartsID, class FName& CurrentPartsID);
	void SetWeaponText_Laser(class FName& PartsID, class FName& CurrentPartsID);
	void SetWeaponText_HeatInducedMissile(class FName& PartsID, class FName& CurrentPartsID);
	void SetWeaponText_Gun(class FName& PartsID, class FName& CurrentPartsID);
	void SetWeaponText_Flamethrower(class FName& PartsID, class FName& CurrentPartsID);
	void SetWeaponText_Bazooka(class FName& PartsID, class FName& CurrentPartsID);
	void SetWeaponText_ArkGun(class FName& PartsID, class FName& CurrentPartsID);
	void SetWeaponText_ActiveMissile(class FName& PartsID, class FName& CurrentPartsID);
	void SetWeaponText_AcidGun(class FName& PartsID, class FName& CurrentPartsID);
	void SetupCompareDetailSpec(class UVerticalBox* Area0, class UVerticalBox* Area1);
	void SetupCategory(enum class ETTLEPartMenuIndex Category);
	void SetTmpMetaData(class FName& PartsID);
	void SetPartsText(class FName& PartsID, class FName& CurrentPartsID, enum class ETTLETradingMode TradingMode);
	void SetPartsMetaData(const class FString& DatatablePath, class FName RowName, class FName PartsDebugName);
	void Initialize(class UUserWidget* SceneLayout, class UGameInstance* GameInstance);
	enum class ETTLEWeaponCategory GetWeaponCategory(class FName& WeaponID);
	struct FSlateColor GetNewParameterTextColor(float NewParameter, float CurrentParameter, bool IsSmallBetter);
	bool CheckSameWeaponCategory(enum class ETTLEWeaponCategory Category1, enum class ETTLEWeaponCategory Category2);
};

// 0x0 (0x28 - 0x28)
// Class DXM.TTLPartsSortUtilities
class UTTLPartsSortUtilities : public UObject
{
public:

	static class UClass* StaticClass();
	static class UTTLPartsSortUtilities* GetDefaultObj();

	void SortPlayLogPartsList(int32 Sorttype, bool Sortorder, TArray<struct FTTLAssemblePartsInfoRow>* Sortlist, class UObject* World, int32 ParentCategory, bool IsParts);
	void SortPlayLogMissionList(int32 Sorttype, bool Sortorder, TArray<struct FTTLMissionProgressInfo>* Sortlist);
	void SortPaintList(int32 Sorttype, bool Sortorder, TArray<struct FTTLDecorationNewFlag>* Sortlist);
	void SortNPCList(int32 Sorttype, bool Sortorder, TArray<class FName>* Sortlist, class UObject* World);
	void SortCurrentCategoryWeaponList(int32 Sorttype, bool Sortorder, TArray<struct FTTLArsenalPartsInfo>* Sortlist, class UObject* World);
	void SortCurrentCategoryPartsList(int32 Sorttype, bool Sortorder, TArray<struct FTTLArsenalPartsInfo>* Sortlist, class UObject* World, enum class ETTLEPartMenuIndex CurrentCategory);
	void SortAttachList(int32 Sorttype, bool Sortorder, TArray<struct FTTLOwnedAttachmentParam>* Sortlist, struct FTTLArsenalPartsInfo& AttachmentPartsInfo, class UObject* World);
};

// 0xB8 (0x1A8 - 0xF0)
// Class DXM.TTLPauseMenuComponent
class UTTLPauseMenuComponent : public UActorComponent
{
public:
	class UUserWidget*                           Widget_TopWidget;                                  // 0xF0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           Widget_InfoTop;                                    // 0xF8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           Widget_ShadowTop;                                  // 0x100(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           Widget_BGTop;                                      // 0x108(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UUserWidget*>                   MissionContentsArray;                              // 0x110(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FTTLPauseMenuMissionContentesParts> MissionContentsPartsArray;                         // 0x120(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UUserWidget*>                   RifleRangeInfoArray;                               // 0x130(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_TopInAnime;                              // 0x140(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_TopOutAnime;                             // 0x148(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_ShadowInAnime;                           // 0x150(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_ShadowLoopAnime;                         // 0x158(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_ShadowOutAnime;                          // 0x160(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_BGInAnime;                               // 0x168(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_BGOutAnime;                              // 0x170(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_PlayerInfoInAnime;                       // 0x178(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>               Class_OnlPoseSts01;                                // 0x180(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2808[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLPauseMenuComponent* GetDefaultObj();

	void OnTopInAnimeFinish();
	void OnShadowInInAnimeFinish();
	bool InitializeBP();
	void Initialize(class UUserWidget* PauseMenuWidget, enum class ETTLEPauseMenuViewMode ViewMode, class UObject* World);
};

// 0x68 (0x3A0 - 0x338)
// Class DXM.TTLPauseMenuRifleRange
class ATTLPauseMenuRifleRange : public ATTLPauseMenuBase
{
public:
	class ATTLPopUpBase*                         ActorYesNoPop;                                     // 0x338(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEPauseMenuRifleRangeItem      SelectItme;                                        // 0x340(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_280A[0x47];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLUITopMenuComponent*                TopMenuComponent;                                  // 0x388(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLPauseMenuComponent*                PauseMenuComponent;                                // 0x390(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsTopMenuAnimation;                                // 0x398(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSelectPopup;                                     // 0x399(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_280B[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLPauseMenuRifleRange* GetDefaultObj();

	void SetIsOpenOptionMenu(bool IsOpen);
	void OpenYesNoPopBP();
	void OpenYesNoPop(class ATTLPopUpBase* YesNoPop);
	void OpenOptionMenuBP();
	void OpenManualMenuBP();
	void OpenedOtherWindowPopup();
	void OnTopMenuOutAnimeEnd();
	void OnTopMenuInAnimeEnd();
	void OnPauseMenuInfoOutAnimeEnd();
	void OnMissionFinished(enum class ETTLEMissionResult MissionResult);
	void OnInputRepeatAction(enum class ETTLEActionType KeyType, int32 Count);
	void OnInputAction(enum class ETTLEActionType KeyType, bool IsPressed);
	void Initialize(class UUserWidget* Widget, class UUserWidget* List);
	void GetKeyMove(enum class ETTLEActionType KeyType);
	void Finalize();
	void ContinueMisisonBP();
	void CloseYesNoPopUpBP();
	void ClosedOtherWindowPopup();
};

// 0x28 (0x1C0 - 0x198)
// Class DXM.TTLPauseMenuScrollListComponent
class UTTLPauseMenuScrollListComponent : public UTTLScrollListComponentBase
{
public:
	class UWidgetAnimation*                      Animation_ListInAnime;                             // 0x198(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_RArrow;                                  // 0x1A0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_LArrow;                                  // 0x1A8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           Widget_RootWidget;                                 // 0x1B0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        OnOffCusror[0x2];                                  // 0x1B8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLPauseMenuScrollListComponent* GetDefaultObj();

	bool InitializeBP();
	void Initialize(class UUserWidget* LayoutWidget, int32 DisplayNum, int32 ListNumMax);
};

// 0x0 (0xBE00 - 0xBE00)
// Class DXM.TTLPendingLevelPlayerController
class ATTLPendingLevelPlayerController : public ATTLPlayerController
{
public:

	static class UClass* StaticClass();
	static class ATTLPendingLevelPlayerController* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class DXM.TTLPhysicalMaterial
class UTTLPhysicalMaterial : public UPhysicalMaterial
{
public:

	static class UClass* StaticClass();
	static class UTTLPhysicalMaterial* GetDefaultObj();

};

// 0xA0 (0x20E0 - 0x2040)
// Class DXM.TTLPlayableBaseOgreCharacter
class ATTLPlayableBaseOgreCharacter : public ATTLBaseBossOgreCharacter
{
public:
	bool                                         IsDeadAnimation;                                   // 0x2040(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_280C[0x2B];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MoveVelocityIs;                                    // 0x206C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LimitBackMoveVelocityIs;                           // 0x2070(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RotatePowerIs;                                     // 0x2074(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETTLBaseBossOgreChrActNo          LeftAttackAction;                                  // 0x2078(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETTLBaseBossOgreChrActNo          RightAttackAction;                                 // 0x2079(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETTLBaseBossOgreChrActNo          ShoulderAttackAction;                              // 0x207A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETTLBaseBossOgreChrActNo          SpecialAttackAction;                               // 0x207B(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETTLBaseBossOgreChrActNo          QuickBoostAttackAction;                            // 0x207C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_280D[0x27];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StartCameraPitch;                                  // 0x20A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CameraRotatorInterpTime;                           // 0x20A8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_280E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CameraRotatorInterp;                               // 0x20B0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CameraPitch_Missile;                               // 0x20B4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CameraPitch_SwordSlash;                            // 0x20B8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CameraPitch_SwordStamp;                            // 0x20BC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SlightlyBeforeCameraMoveStopTime_SworldStamp;      // 0x20C0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SlightlyBeforeCameraMoveStopTime_Missile;          // 0x20C4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  HeadPartsID;                                       // 0x20C8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_280F[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLPlayableBaseOgreCharacter* GetDefaultObj();

	void OnMissionStart();
	struct FRotator GetEaseRotator(float Delta, float RotationInterp, struct FRotator& CurrentRotation, struct FRotator& TargetRotation);
};

// 0x0 (0x25F0 - 0x25F0)
// Class DXM.TTLPlayerCameraManager
class ATTLPlayerCameraManager : public APlayerCameraManager
{
public:

	static class UClass* StaticClass();
	static class ATTLPlayerCameraManager* GetDefaultObj();

};

// 0x0 (0x3A8 - 0x3A8)
// Class DXM.TTLPlayerInput
class UTTLPlayerInput : public UPlayerInput
{
public:

	static class UClass* StaticClass();
	static class UTTLPlayerInput* GetDefaultObj();

};

// 0x158 (0x248 - 0xF0)
// Class DXM.TTLPlayerLightningMoveComponent
class UTTLPlayerLightningMoveComponent : public UActorComponent
{
public:
	struct FTTLLightningMoveParam                LightningParam;                                    // 0xF0(0x148)(Edit, BlueprintVisible, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2810[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLLightningMoveObject*               LightningMoveObject;                               // 0x240(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLPlayerLightningMoveComponent* GetDefaultObj();

};

// 0x38 (0x428 - 0x3F0)
// Class DXM.TTLPlayerState
class ATTLPlayerState : public APlayerState
{
public:
	bool                                         IsSurvivalReadyToMissionCondition;                 // 0x3F0(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        MultiPlayerIndex;                                  // 0x3F1(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2812[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  CurrentEventName;                                  // 0x3F8(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLEvManState                    CurrentEventState;                                 // 0x400(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsReadyToMission;                                  // 0x401(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2813[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnChangeReadyToMissionComplete;                    // 0x408(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2814[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLPlayerState* GetDefaultObj();

	void SetReadyToMissionForcedCancel();
	void SetEventState(class FName EventName, enum class ETTLEvManState NewState);
	void RunOnServerSetReadyToMission(bool IsReady);
	void RunOnServerEnableReadySurvival();
	void RunOnClientSetReadyToMissionForcedCancel();
	void RunOnClientSetReadyToMission(enum class ETTLEReadyToMissionErrorType ErrorType, bool IsReady);
	void AddForcedCancelInfo();
};

// 0x320 (0x6E0 - 0x3C0)
// Class DXM.TTLPlaylogPopup
class ATTLPlaylogPopup : public ATTLPopUpBase
{
public:
	class UWidgetAnimation*                      Anim_HomPlaylogList01_In;                          // 0x3C0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_HomPlaylogList01_Out;                         // 0x3C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_MatchGraph_GrayoutStart;                      // 0x3D0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_MatchGraph_GrayoutEnd;                        // 0x3D8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_MatchGraphText_GrayoutStart;                  // 0x3E0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_MatchGraphText_GrayoutEnd;                    // 0x3E8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_HomPlaylogPage03_In;                          // 0x3F0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_HomPlaylogPage03_Out;                         // 0x3F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_ChildPageIn;                                  // 0x400(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_ChildPageOut;                                 // 0x408(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_HomPlaylogPage00;                            // 0x410(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_HomPlaylogPage08;                            // 0x418(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_HomPlaylogPage02;                            // 0x420(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_HomPlaylogPage03;                            // 0x428(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_HomPlaylogPage04;                            // 0x430(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_HomPlaylogPage07;                            // 0x438(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_HomPlaylogPage09;                            // 0x440(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UUserWidget>             Class_HomPlaylogPage09_Soft;                       // 0x448(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_HomPlaylogList00;                            // 0x470(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_HomPlaylogList01;                            // 0x478(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnPlayLogFinished;                                 // 0x480(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class UUserWidget*                           Widget_Header;                                     // 0x490(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           Widget_Contents;                                   // 0x498(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           Widget_Category;                                   // 0x4A0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FTTLPlayLogTopPanelInfo>       TopPanelInfo;                                      // 0x4A8(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<enum class ETTLEPlayLogPanelType>     CurrentTopPanelList;                               // 0x4B8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class UHorizontalBox*                        Widget_Parent_log_h00;                             // 0x4C8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVerticalBox*                          Widget_Panel_log_v00;                              // 0x4D0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVerticalBox*                          Widget_Panel_log_v01;                              // 0x4D8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVerticalBox*                          Widget_Panel_log_v02;                              // 0x4E0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           Widget_ChildPage;                                  // 0x4E8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ETTLEPlayLogParentCategory        ParentCategory;                                    // 0x4F0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETTLEPlayLogPopUpState            PopupState;                                        // 0x4F1(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2816[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLPlayLogScrollListComponent*        PlayLogScrollComp;                                 // 0x4F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLUIHeaderComponent*                 HeaderComp;                                        // 0x500(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLSortMenuComponent*                 SortMenuComponent;                                 // 0x508(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLUIFooterPageIndexComponent*        FooterPageIndexComp;                               // 0x510(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2817[0x78];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLGameInstance*                      GameInstance;                                      // 0x590(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLDecorationDataManager*             DecorationDataManager;                             // 0x598(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2818[0x138];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLAutoTextInputComponent*            AutoTextInputComp;                                 // 0x6D8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ATTLPlaylogPopup* GetDefaultObj();

	void OpenPlayLogPopUpFromOterPlayerInfo(const struct FTTLOtherPlayerLogInfo& OtherPlayerInfo);
	void OpenPlayLogPopUp(enum class ETTLEPlayLogParentCategory StartCategory);
	class UPanelWidget* GetPanelWidgetForAddParent(int32 Column);
	float ClosePlayLogPopUp();
};

// 0x150 (0x780 - 0x630)
// Class DXM.TTLPlayLogScene
class ATTLPlayLogScene : public ATTLMenuSceneBase
{
public:
	bool                                         UseOther;                                          // 0x630(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         UseOnlineBaseCamp;                                 // 0x631(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2819[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLOtherPlayerLogInfoReceiveData     OtherPlaylogData;                                  // 0x638(0x138)(Protected, NativeAccessSpecifierProtected)
	bool                                         IsOpenDirectFromBase;                              // 0x770(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_281A[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLPlayLogScene* GetDefaultObj();

	void PlayAnimBP_EndScene(float AnimationWait);
	void FinalizeScene();
	class ATTLPlaylogPopup* CreatePlayLogPopUp();
};

// 0xC8 (0x260 - 0x198)
// Class DXM.TTLPlayLogScrollListComponent
class UTTLPlayLogScrollListComponent : public UTTLScrollListComponentBase
{
public:
	uint8                                        Pad_281D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLLogChildBtnInfo>           CurrentButtonInfoList;                             // 0x1A0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TSubclassOf<class UUserWidget>               Class_HomPlaylogList03;                            // 0x1B0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_HomPlaylogList04;                            // 0x1B8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_HomPlaylogList05;                            // 0x1C0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_HomPlaylogList06;                            // 0x1C8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_HomPlaylogList07;                            // 0x1D0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_HomPlaylogList08;                            // 0x1D8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_HomPlaylogList09;                            // 0x1E0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_BossOn;                                       // 0x1E8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_BossOff;                                      // 0x1F0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_MatchOn;                                      // 0x1F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_MatchOff;                                     // 0x200(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_MissionOn;                                    // 0x208(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_MissionOff;                                   // 0x210(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_DevelopOn;                                    // 0x218(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_DevelopOff;                                   // 0x220(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_PartsOn;                                      // 0x228(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_PartsOff;                                     // 0x230(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_WeaponOn;                                     // 0x238(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_WeaponOff;                                    // 0x240(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_SkillOn;                                      // 0x248(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_SkillOff;                                     // 0x250(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           Widget_HomPlaylogPage06;                           // 0x258(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLPlayLogScrollListComponent* GetDefaultObj();

	void Initialize(class UUserWidget* LayoutWidget, int32 DisplayNum, int32 ListNumMax);
	void CreateList(int32 ReferenceIndex, bool CreateAtOnce);
	class UUserWidget* CreateButtonWidget(int32 Position);
};

// 0x100 (0x428 - 0x328)
// Class DXM.TTLPostProcessZoneBase
class ATTLPostProcessZoneBase : public AActor
{
public:
	bool                                         IsVisibleWait;                                     // 0x328(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2820[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnScaleChangeToChange;                             // 0x330(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnScaleChangeToInit;                               // 0x340(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	bool                                         IsChangeScale;                                     // 0x350(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2821[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLShapeScaleInfo                    ScaleChangeCurveToChange;                          // 0x358(0x20)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FTTLShapeScaleInfo                    ScaleChangeCurveToInit;                            // 0x378(0x20)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2822[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnStartBeginOverlapDelegate;                       // 0x3B0(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEndOverlapDelegate;                              // 0x3C0(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	struct FTTLPostProcessScaleInfo              ScalePPBlendInfoToChange;                          // 0x3D0(0x18)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FTTLPostProcessScaleInfo              ScalePPBlendInfoToInit;                            // 0x3E8(0x18)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2823[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLPostProcessZoneBase* GetDefaultObj();

	void OnEndShapeOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnBeginShapeOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void DebugStartScaleChange();
	void DebugEndScaleChange();
	void DebugDestoryImmediately();
	void DebugDestory();
};

// 0x8 (0x430 - 0x428)
// Class DXM.TTLPostProcessZoneAntiSuction
class ATTLPostProcessZoneAntiSuction : public ATTLPostProcessZoneBase
{
public:
	class UTTLFemtoAbsorptionDefenseCore*        FemtoAbsorptionDefenceCore;                        // 0x428(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ATTLPostProcessZoneAntiSuction* GetDefaultObj();

};

// 0x0 (0x428 - 0x428)
// Class DXM.TTLPostProcessZoneSuction
class ATTLPostProcessZoneSuction : public ATTLPostProcessZoneBase
{
public:

	static class UClass* StaticClass();
	static class ATTLPostProcessZoneSuction* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class DXM.TTLPrintRowNamesCommandlet
class UTTLPrintRowNamesCommandlet : public UCommandlet
{
public:

	static class UClass* StaticClass();
	static class UTTLPrintRowNamesCommandlet* GetDefaultObj();

};

// 0x170 (0x7A0 - 0x630)
// Class DXM.TTLProfileSettingScene
class ATTLProfileSettingScene : public ATTLMenuSceneBase
{
public:
	uint8                                        Pad_2824[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLOnlTitleScrollListComponent*       OnlTitleScrollListComponent;                       // 0x650(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLDockPaintScrollListComponent*      DockPaintScrollListComponent;                      // 0x658(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2825[0x140];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLProfileSettingScene* GetDefaultObj();

};

// 0x90 (0xB8 - 0x28)
// Class DXM.TTLProjectileManager
class UTTLProjectileManager : public UObject
{
public:
	TArray<TSubclassOf<class ATTLProjectileBase>> ProjectileClasses;                                 // 0x28(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                        Pad_2826[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ATTLProjectileBase*>            UnusePool;                                         // 0x40(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class ATTLProjectileBase*>            InUsingPool;                                       // 0x50(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2827[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLFxParam>                   FxHitNormalPool;                                   // 0x88(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FTTLFxParam>                   FxHitRepelledPool;                                 // 0x98(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FTTLFxParam>                   FxHitCriticalPool;                                 // 0xA8(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLProjectileManager* GetDefaultObj();

	void OnPostLoadMap(class UWorld* LoadedWorld);
	void InitializeProjectilePool(class UObject* ContextObject, TArray<TSubclassOf<class ATTLProjectileBase>>& ClassList);
	void FinalizeProjectilePool();
	void EnableProjectile(class ATTLProjectileBase* Projectile);
	void DisableProjectile(class ATTLProjectileBase* Projectile);
	void DestroyProjectile(class ATTLProjectileBase* ProjectileToDestroy);
	class ATTLProjectileBase* CreateProjectile(class UObject* ContextObject, TSubclassOf<class ATTLProjectileBase>& ProjectileClass, struct FTransform& SpawnTransform, class AActor* Owner);
};

// 0x10 (0x5E0 - 0x5D0)
// Class DXM.TTLPropellantTank
class ATTLPropellantTank : public ATTLSupportOneActionWeapon
{
public:
	uint8                                        Pad_2828[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLPropellantTank* GetDefaultObj();

};

// 0x38 (0x60 - 0x28)
// Class DXM.TTLPushSourceBase
class UTTLPushSourceBase : public UObject
{
public:
	uint8                                        Pad_2829[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class AActor>>            IgnoreClassArray;                                  // 0x50(0x10)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLPushSourceBase* GetDefaultObj();

};

// 0x10 (0x70 - 0x60)
// Class DXM.TTLPushSourceBox
class UTTLPushSourceBox : public UTTLPushSourceBase
{
public:
	uint8                                        Pad_282A[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLPushSourceBox* GetDefaultObj();

};

// 0x48 (0x138 - 0xF0)
// Class DXM.TTLPushOhterComponent
class UTTLPushOhterComponent : public UActorComponent
{
public:
	TArray<struct FTTLCollisionSourceInfo>       SourceArray;                                       // 0xF0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class ATTLCharacterCommon>       OuterClass;                                        // 0x100(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ATTLCharacterCommon>       ArsenalClass;                                      // 0x108(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsCollisionToZeroVelocity;                         // 0x110(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_282B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UTTLPushSourceBase*>            SourceObjArray;                                    // 0x118(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         IsCollisionDebugDraw;                              // 0x128(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_282C[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLPushOhterComponent* GetDefaultObj();

};

// 0x0 (0x328 - 0x328)
// Class DXM.TTLPvPEventTransActor
class ATTLPvPEventTransActor : public AActor
{
public:

	static class UClass* StaticClass();
	static class ATTLPvPEventTransActor* GetDefaultObj();

};

// 0x128 (0x700 - 0x5D8)
// Class DXM.TTLRadarJammingWeapon
class ATTLRadarJammingWeapon : public ATTLSupportEmittingDeviceBase
{
public:
	class ATTLExplosionActor*                    PExplosionActor;                                   // 0x5D8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           ShootReactionLoopFx;                               // 0x5E0(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        ShootLoopFxPlayBack;                               // 0x678(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        ShootLoopFxPlayBack_R;                             // 0x690(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	float                                        LoopVFXPlayTime;                                   // 0x6A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_282D[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLJammerControl                     JammerControl;                                     // 0x6B8(0x40)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_282E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLRadarJammingWeapon* GetDefaultObj();

};

// 0x8 (0x100 - 0xF8)
// Class DXM.TTLRaderTargetComponent
class UTTLRaderTargetComponent : public UTTLActorComponent
{
public:
	enum class ETTLERaderTargetType              RaderTargetType;                                   // 0xF8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsHighlight;                                       // 0xF9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsAllyOnHighlight;                                 // 0xFA(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsStayAfterBroken;                                 // 0xFB(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsIconView;                                        // 0xFC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_282F[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLRaderTargetComponent* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class DXM.TTLRanking_PointRankingGetRankingParam
class UTTLRanking_PointRankingGetRankingParam : public UObject
{
public:
	uint8                                        Pad_2830[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLRanking_PointRankingGetRankingParam* GetDefaultObj();

};

// 0x850 (0x878 - 0x28)
// Class DXM.TTLRanking_PointRankingResultScore
class UTTLRanking_PointRankingResultScore : public UObject
{
public:
	uint8                                        Pad_2831[0x850];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLRanking_PointRankingResultScore* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class DXM.TTLRanking_PointRankingGetStatsParam
class UTTLRanking_PointRankingGetStatsParam : public UObject
{
public:
	uint8                                        Pad_2832[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLRanking_PointRankingGetStatsParam* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class DXM.TTLRanking_PointRankingResultStats
class UTTLRanking_PointRankingResultStats : public UObject
{
public:
	uint8                                        Pad_2833[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLRanking_PointRankingResultStats* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class DXM.TTLRanking_MissionRankingResultStats
class UTTLRanking_MissionRankingResultStats : public UObject
{
public:
	uint8                                        Pad_2834[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLRanking_MissionRankingResultStats* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class DXM.TTLRanking_PointRankingPutCommonDataParam
class UTTLRanking_PointRankingPutCommonDataParam : public UObject
{
public:
	class FString                                PlayerName;                                        // 0x28(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLRanking_PointRankingPutCommonDataParam* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class DXM.TTLRanking_PointRankingPutScoreParam
class UTTLRanking_PointRankingPutScoreParam : public UObject
{
public:
	uint8                                        Pad_2835[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLRanking_PointRankingPutScoreParam* GetDefaultObj();

};

// 0x1B8 (0x1E0 - 0x28)
// Class DXM.TTLRankingManager
class UTTLRankingManager : public UObject
{
public:
	uint8                                        Pad_2836[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnPointRanking_FirstRegistrationComplete;          // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPointRanking_UpdateCommonDataComplete;           // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPointRanking_UpdateScoreComplete;                // 0x50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPointRanking_GetRankingComplete;                 // 0x60(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPointRanking_GetRankingByPIDListComplete;        // 0x70(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPointRanking_GetStatsComplete;                   // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionRanking_UpdateScoreComplete;              // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionRanking_GetStatsComplete;                 // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class UTTLGameInstance*                      GameInstance;                                      // 0xB0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2837[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UTTLRanking_MissionRankingResultStats*> MissionRankingScoreArray;                          // 0xC0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2838[0x110];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLRankingManager* GetDefaultObj();

	void OnSetupLevel(class FName LevelName);
};

// 0x8 (0x330 - 0x328)
// Class DXM.TTLRankingFirstRegistrationActor
class ATTLRankingFirstRegistrationActor : public AActor
{
public:
	uint8                                        Pad_2839[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLRankingFirstRegistrationActor* GetDefaultObj();

};

// 0x0 (0x88 - 0x88)
// Class DXM.TTLRankingRankParam
class UTTLRankingRankParam : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UTTLRankingRankParam* GetDefaultObj();

};

// 0x40 (0x68 - 0x28)
// Class DXM.TTLUIRankingInitAndCursor
class UTTLUIRankingInitAndCursor : public UObject
{
public:
	class UTTLUIRankingInitData*                 MyScoreData;                                       // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UTTLUIRankingInitData*>         TopRankingDataArray;                               // 0x30(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UTTLUIRankingInitData*>         NearRankingDataArray;                              // 0x40(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_283A[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLUIRankingInitAndCursor* GetDefaultObj();

};

// 0x80 (0x6B0 - 0x630)
// Class DXM.TTLRankingScene
class ATTLRankingScene : public ATTLMenuSceneBase
{
public:
	uint8                                        Pad_283E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLRankingManager*                    RankingManager;                                    // 0x638(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_283F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UTTLUIRankingInitAndCursor*>    RankingInitAndCursorArray;                         // 0x648(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class UTTLUIRankingComponent*                RankingComponent;                                  // 0x658(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLUIOuterCharaCustomComponent*       OuterCharaCustomComponent;                         // 0x660(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLUIFooterPageIndexComponent*        FooterPageIndexComponent;                          // 0x668(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                            PreviewOuterTransform;                             // 0x670(0x30)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2840[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLRankingScene* GetDefaultObj();

	void OnListInAnimeFinish();
	void OnGetRankingCallBack(bool WasSuccessful, const TArray<class UTTLRanking_PointRankingResultScore*>& ResultArray);
	void OnGetMyScoreAndNearRankingCallBack(bool WasSuccessful, const TArray<class UTTLRanking_PointRankingResultScore*>& ResultArray);
	void OnClosedOtherPlayerPlaylog();
	void OnAdditionalGetRankingCallBack(bool WasSuccessful, const TArray<class UTTLRanking_PointRankingResultScore*>& ResultArray);
	class ATTLPlaylogPopup* CreatePlayLogPopUp();
};

// 0x18 (0x148 - 0x130)
// Class DXM.TTLRayAvoidanceComponent
class UTTLRayAvoidanceComponent : public UTTLObstacleAvoidanceComponent
{
public:
	int32                                        RayCount;                                          // 0x130(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RayLength;                                         // 0x134(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RayRotInterval;                                    // 0x138(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2841[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  RaySocket;                                         // 0x140(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTTLRayAvoidanceComponent* GetDefaultObj();

};

// 0x10 (0x410 - 0x400)
// Class DXM.TTLRegulationListPopUp
class ATTLRegulationListPopUp : public ATTLNoticeListPopUp
{
public:
	TArray<struct FTTLNoticeListInfo>            NoticeList_Buffer;                                 // 0x400(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ATTLRegulationListPopUp* GetDefaultObj();

	void Setup_NgSkill(TArray<struct FTTLNgSkillNoticeInfo>& NgSkill_Buffer);
	void Setup_NgParts(TArray<struct FTTLNgPartsNoticeInfo>& NgParts_Buffer, bool IsCoop, bool IsDock);
	void Setup_NgAttach(TArray<struct FTTLNgAttachNoticeInfo>& NgAttach_Buffer, bool IsDock);
};

// 0x0 (0x88 - 0x88)
// Class DXM.TTLRegulationParam
class UTTLRegulationParam : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UTTLRegulationParam* GetDefaultObj();

};

// 0x10 (0x108 - 0xF8)
// Class DXM.TTLReticleHUDComponent
class UTTLReticleHUDComponent : public UTTLActorComponent
{
public:
	TSubclassOf<class UUserWidget>               UIClass;                                           // 0xF8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           ArsenalHUD;                                        // 0x100(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLReticleHUDComponent* GetDefaultObj();

	class UUserWidget* GetHUD(class UObject* World);
};

// 0x0 (0x4F8 - 0x4F8)
// Class DXM.TTLRewardPopUp
class ATTLRewardPopUp : public ATTLCommonPopup
{
public:

	static class UClass* StaticClass();
	static class ATTLRewardPopUp* GetDefaultObj();

};

// 0x0 (0xDF0 - 0xDF0)
// Class DXM.TTLRifleRangeDockScene
class ATTLRifleRangeDockScene : public ATTLDockScene2
{
public:

	static class UClass* StaticClass();
	static class ATTLRifleRangeDockScene* GetDefaultObj();

};

// 0x70 (0x4A8 - 0x438)
// Class DXM.TTLRifleRangeLevelScriptActor
class ATTLRifleRangeLevelScriptActor : public ATTLLevelScriptActor
{
public:
	uint8                                        Pad_2846[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class ATTLRifleRangeDockScene> RifleRangeDockSceneClassSoft;                      // 0x440(0x28)(Edit, BlueprintVisible, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class ATTLUICameraControlActor> UICameraClassSoft;                                 // 0x468(0x28)(Edit, BlueprintVisible, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATTLRifleRangeDockScene*               RifleRangeDockScene;                               // 0x490(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATTLUICameraControlActor*              UICamera;                                          // 0x498(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATTLLevelControlActor*                 TTLLevelControlActor;                              // 0x4A0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ATTLRifleRangeLevelScriptActor* GetDefaultObj();

	void StartDockSceneBP();
	void SetPlayerCameraControllTickEnabledBP(bool IsEnabled);
	void RestartTrialfieldBP();
	void OnStartDockScene();
	void OnRestartTrialField();
	void OnPauseConfigChange(enum class ETTLEPauseMenuRifleRangeConfig ConfigType, enum class ETTLEPauseMenuRifleRangeOnOff OnOffType);
	void OnInputRepeatActionToDock(enum class ETTLEActionType ActionType, int32 RepeatCount);
	void OnInputAnalogActionToDock(enum class ETTLEActionType ActionType, float AxisValue);
	void OnInputActionToDock(enum class ETTLEActionType ActionType, bool IsPressed);
	void DestroyMirageCharacterBP();
	void ChangeRifleRangeState(enum class ETTLERifleRangeState NewState);
	void BindController_Playable();
	void BindController_InDockScene();
};

// 0x100 (0x1F0 - 0xF0)
// Class DXM.TTLRoomInfoHUDComponent
class UTTLRoomInfoHUDComponent : public UActorComponent
{
public:
	uint8                                        Pad_2848[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             MemberNameBGSizeInNoBattleMode;                    // 0x100(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           Widget_RoomDetailsTopWidget;                       // 0x108(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class FString, class UUserWidget*>      Widget_RoomInfoList;                               // 0x110(0x50)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UUserWidget*>                   Widget_PlayerInfoList;                             // 0x160(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TSubclassOf<class AActor>                    OkPopupClass;                                      // 0x170(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2849[0x78];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLRoomInfoHUDComponent* GetDefaultObj();

	void OnPressMultiplayReady(enum class ETTLEActionType ActionType, float Duration);
	void OnMenuToBaseCamp();
	void OnIceToBaseCamp();
	void OnDecideOkPopup();
	void OnChangeReadyToMissionComplete(enum class ETTLEReadyToMissionErrorType ErrorType, bool IsReadyToMission);
	void OnChange2vs2Team(enum class ETTLEActionType ActionType, bool IsPressed);
	void OnBaseCampToMenu(enum class ETTLEInteractType ItneractType);
	void OnBaseCampToIce();
	void OnBasecampStarted();
	class UUserWidget* FindHUD_OnlCoopPage00(class AHUD* HUDMission);
};

// 0xFA8 (0xFD0 - 0x28)
// Class DXM.TTLSaveGameObject
class UTTLSaveGameObject : public USaveGame
{
public:
	TArray<struct FTTLChatMessage>               ChatMessagesForBaseCamp;                           // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLChatMessage>               ChatMessagesForMissionCoop;                        // 0x38(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLChatMessage>               ChatMessagesForMissionPVP;                         // 0x48(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLChatMessage>               ChatMessageForEmote;                               // 0x58(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                SaveSlotName;                                      // 0x68(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        UserIndex;                                         // 0x78(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2874[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLPlayerBasicInfo                   PlayerBasicInfo;                                   // 0x80(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FTTLPlayerOnlineInfo                  PlayerOnlineInfo;                                  // 0x118(0x90)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FTTLPlayerKarteInfo                   PlayerKarteInfo;                                   // 0x1A8(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLPlayerStatisticsInfo              PlayerStatisticsInfo;                              // 0x1B8(0x138)(NativeAccessSpecifierPublic)
	TArray<struct FTTLPlayerAssembleInfo>        PlayerAssembleClassInfo;                           // 0x2F0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        CurrentClassIndex;                                 // 0x300(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2875[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLPlayerAssembleInfo                CurrentPlayerAssembleInfo;                         // 0x308(0x640)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FTTLPlayerAssembleParamMenuState> AssembleParamMenuStateList;                        // 0x948(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FTTLNPCJoinInfo>               NPCJoinFlags;                                      // 0x958(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FTTLMyNPCInfo                         MyNpcInfo;                                         // 0x968(0x18)(BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLMissionProgressInfo>       MissionProgressList;                               // 0x980(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLCompMissionCoolDownInfo>   CoolDownCompMissionList;                           // 0x990(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLCompMissionActivateInfo>   ActivateCompMissionList;                           // 0x9A0(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLArsenalPartsInfo>          OwnedPartsList;                                    // 0x9B0(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLOwnedAttachmentParam>      OwnedAttachmentList;                               // 0x9C0(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLDevelopStatus>             PartsDevelopStatusList;                            // 0x9D0(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLDevelopFlagItemOwnedInfo>  OwnedDevelopFlagItemList;                          // 0x9E0(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLBossBattleData>            OwnedBossBattleDataList;                           // 0x9F0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLMainMenuFacilityInfo>      MainMenuFacilityInfo;                              // 0xA00(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FTTLMainMenuNotifications             MainMenuNotification;                              // 0xA10(0x80)(BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLOptionInfo                        OptionInfo;                                        // 0xA90(0x1D0)(BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<struct FTTLNewPartsFlags>             AllPartsNewFlagList;                               // 0xC60(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FTTLDecorationNewFlagList             AllDecorationNewFlag;                              // 0xC70(0x60)(BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLOuterCustomInfo                   OuterCustomInfo;                                   // 0xCD0(0xD0)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLDlcInfo                           DlcInfo;                                           // 0xDA0(0x100)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLOnlineInfo                        OnlineInfo;                                        // 0xEA0(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	int32                                        ChatVisibility;                                    // 0xEB0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLPlayerIceCreamLogInfo             PlayerIceCreamLogInfo;                             // 0xEB4(0x1)(BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2876[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLLineChatInfo                      LineChatInfo;                                      // 0xEB8(0x20)(BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTTLBaseCampWeaponInfo>        BaseCampWeaponInfoList;                            // 0xED8(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLElementReleaseData>        ElementReleaseData;                                // 0xEE8(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<class FName, bool>                      EventViewList;                                     // 0xEF8(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FTTLManualDataInfo                    ManualInfo;                                        // 0xF48(0x10)(BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLTutorialDataInfo                  TutorialInfo;                                      // 0xF58(0x10)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        OuterEmoteIndices[0x4];                            // 0xF68(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTTLSortTypeInfo>              SortInfoList;                                      // 0xF78(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLTreasureWeaponInfo>        TreasureArray;                                     // 0xF88(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLCharaEditFlagInfo>         CharaEditFlagList;                                 // 0xF98(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        HangarArsenalPoseIndex;                            // 0xFA8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2877[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          StrongMobIDList;                                   // 0xFB0(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	TArray<class FName>                          BossIDList;                                        // 0xFC0(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLSaveGameObject* GetDefaultObj();

	void UpdateStatisticsInfo(bool IsMatch, class FName& MissionID);
	void UpdateMissionClearCount(class FName& MissionID, float ClearTime, enum class ETTLEMissionResult Result, bool SubGoal1, bool SubGoal2, bool SubGoal3);
	bool TryGetFriendshipValue(class FName& OuterID, int32* FriendValue);
	bool ToggleNewFlagInAllPartsNewFlagList(struct FTTLAssemblePartsInfoRow& PartsInfo, enum class ETTLENewPartsBitFlags bitFlagEnum);
	bool SubMoney(int32 Amount);
	void SetOwnFlagItem(class FName& ItemId);
	bool SetNPCJoinFlagState(class FName& NpcID, enum class ETTLNPCFlagState NewState, class UTTLGameInstance* GameInstance);
	bool SetNewFlagInOwnedPartsList(struct FTTLAssemblePartsInfoRow& PartsInfo, enum class ETTLEPartsNewState PartsNewState);
	void SetMissionProgress(struct FTTLMissionProgressInfo& NewProgress);
	void SetCurrentAssembleClass(const struct FTTLPlayerAssembleInfo& NewClass);
	struct FTTLArsenalPartsInfo SetAttachmentFromUID(class FName AttachmentID, int32 Slot, int32 PartsUniqueID);
	bool SetAssembleClass(int32 Index, const struct FTTLPlayerAssembleInfo& NewClass);
	bool ResetPlayerAssembleClassInfo(int32 Index);
	bool RemovePartsFromOwnedPartsList(int32 PartsUniqueID, bool IsSkipEquipCheck);
	void RegisterInPictureBook(struct FTTLAssemblePartsInfoRow& PartsInfo, bool UnderInitializing);
	void ReceiveMissionInventoryReward(class UTTLGameInstance* GameInstance, bool IsInludingContiueosData);
	void MakeNotification_Shop(class FName NotificationID, class FName PartsID, enum class ETTLPartsType PartsType);
	void MakeNotification_OpenFacility(class FName NotificationID, enum class ETTLEElementReleaseType ElementType);
	void MakeNotification_Online();
	void MakeNotification_Mission(class FName MissionID, class FName NotificationID, class FName NPCName, int32 Counter);
	void MakeNotification_LineChat(class FName NotificationID, int32 Counter, class FName Name, const class FString& Msg);
	void MakeNotification_Factory(class FName NotificationID, class FName PartsID, enum class ETTLPartsType PartsType);
	void MakeNotification_Dock(class FName NotificationID, class FName PartsID, int32 Counter);
	bool IsNewParts(class FName& PartsID);
	bool IsNewFlagOnInOwnedPartsList(struct FTTLAssemblePartsInfoRow& PartsInfo);
	bool IsNewFlagOnInAllPartsNewFlagList(struct FTTLAssemblePartsInfoRow& PartsInfo, enum class ETTLENewPartsBitFlags bitFlagEnum);
	bool IsEnteredFacility(enum class ETTLEMainMenuFacilityType Facility);
	bool IsEmptyClass(int32 Index);
	TArray<int32> IsClassUsingParts(struct FTTLArsenalPartsInfo& PartsInfo);
	void InitializeChatSettings();
	void InitializeAssemblePartsInfoForFirstTime(class UTTLGameInstance* GameInstance);
	int32 GetSubGoalClearCount();
	TArray<class FName> GetSkillList(bool FromLaboKarteLog);
	float GetPictureBookRegisterRate(enum class ETTLPartsType PartsType);
	int32 GetPartsRegisteredNumInPictureBook(enum class ETTLPartsType PartsType);
	int32 GetPartsPictureBookTotalNum(enum class ETTLPartsType PartsType);
	struct FTTLHumanCustomPartsInfo GetOuterCustomPartsInfo(enum class ETTLEHumanGenderType GenderType);
	void GetNPCJoinInfo(class FName& NpcID, struct FTTLNPCJoinInfo* OutInfo);
	TArray<struct FTTLMainMenuNotificationInfo> GetNotificationInfoList(enum class ETTLEMainMenuFacilityType Facility);
	bool GetNotificationInfo(enum class ETTLEMainMenuFacilityType Facility, int32 Index, struct FTTLMainMenuNotificationInfo* OutNotificationInfo);
	void GetMissionProgress(class FName& MissionID, struct FTTLMissionProgressInfo* OutInfo);
	struct FTTLMainMenuNotifications GetMainMenuNotification();
	enum class ETTLEFacilityState GetFacilityOpneState(enum class ETTLEMainMenuFacilityType Facility);
	int32 GetEnemyKillCount(class FName& EnemyID);
	struct FTTLHumanCustomPartsInfo GetCurrentOuterCustomParts(enum class ETTLEHumanGenderType* GenderType);
	TArray<struct FTTLKarteLog> GetCurrentKarteLog();
	int32 GetCurrentIceCreamToken();
	int32 GetCurrentCash();
	int32 GetCurrentAssembleClassIndex();
	struct FTTLPlayerAssembleInfo GetCurrentAssembleClass();
	float GetBossBattleData(class FName& BossID);
	class FText GetAssembleClassName(int32 Index);
	struct FTTLPlayerAssembleInfo GetAssembleClass(int32 Index);
	class FName GetActionVoiceCharaID(class UTTLGameInstance* GameInstance);
	bool FindPartsFromOwnedPartsList(int32 PartsUniqueID, struct FTTLArsenalPartsInfo* OutInfo);
	void EnterdFacilityFirstTime(enum class ETTLEMainMenuFacilityType Facility);
	void DetachAttachment(class FName RemoveAttachmentID);
	void CheckAndUpdateDiff(class UTTLGameInstance* GameInstance);
	void ChangeCurrentClass(int32 NewClassIndex);
	void AddNPCFriendshipValue(class FName& NpcID, int32 Value);
	int32 AddNewPartsForOwnedPartsList(struct FTTLArsenalPartsInfo& NewPartsInfo, class UTTLGameInstance* GameInstance, bool UnderInitializing);
	void AddNewAttachmentForOwnedAttachmentList(TArray<class FName>& AttachmentIDList);
	bool AddMoney(int32 Amount);
	void AddMissionEnemyKillCount(TArray<struct FTTLMissionKillCountLog>& KillCounts, int32 NpcKillCount, int32 bossKillCount);
	void AddMainMenuNotification(const struct FTTLMainMenuNotificationInfo& NewNotification);
	void AddIceCreamToken(int32 AddNum);
	void AddBossBattleData(class FName& BossID, float ProgressValue);
};

// 0x70 (0x6A0 - 0x630)
// Class DXM.TTLSaveLoadScene
class ATTLSaveLoadScene : public ATTLMenuSceneBase
{
public:
	class UTTLUISaveLoadComponent*               SaveLoadComponent;                                 // 0x630(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2878[0x68];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLSaveLoadScene* GetDefaultObj();

	void StartTransitionSceneBP(int32 NewState);
	float StartFadeOut();
	class ATTLYesNoPopUp* SpawnPopup_YesNoBP();
	class ATTLOkPopUp* SpawnPopup_OkBP();
	void SetupPopup();
	void Popup_Yes_Selected();
	void OnFinishedSaveAnimation();
	void FinishSavingRequest(bool IsSuccess);
};

// 0x18 (0x40 - 0x28)
// Class DXM.TTLSaveOnlineObject
class UTTLSaveOnlineObject : public USaveGame
{
public:
	struct FTTLOnlineDisconectData               DisconectData;                                     // 0x28(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FTTLOnlineInfo                        PermanentOnlineInfo;                               // 0x30(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLSaveOnlineObject* GetDefaultObj();

};

// 0x20 (0x48 - 0x28)
// Class DXM.TTLSaveOptionObject
class UTTLSaveOptionObject : public USaveGame
{
public:
	struct FTTLGraphicOptionInfo                 GraphicInfo;                                       // 0x28(0x1C)(NoDestructor, NativeAccessSpecifierPublic)
	enum class ETTLFPSMode                       FpsMode;                                           // 0x44(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2879[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLSaveOptionObject* GetDefaultObj();

};

// 0x28 (0x50 - 0x28)
// Class DXM.TTLSaveSurvivalObject
class UTTLSaveSurvivalObject : public USaveGame
{
public:
	TArray<struct FTTLSurvivalDungeonMapLevelInfo> MapInfoList;                                       // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTTLSurvivalDebugRandomNPCSpawnInfo> RandomNPCSpawnList;                                // 0x38(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         IsHostPlaying;                                     // 0x48(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_287A[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLSaveSurvivalObject* GetDefaultObj();

};

// 0x58 (0x148 - 0xF0)
// Class DXM.TTLSearchTargetComponent
class UTTLSearchTargetComponent : public UActorComponent
{
public:
	float                                        SearchLength;                                      // 0xF0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              LookDirection;                                     // 0xF4(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              LookDirectionRange;                                // 0x100(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        LookLength;                                        // 0x10C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        IsRayCheck;                                        // 0x110(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutoSearchIntervalTime;                            // 0x114(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableAutoSearch;                                  // 0x118(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_287E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class APawn*                                 OwnerCharacter;                                    // 0x120(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBasicStatusComponent*              OwnerStatus;                                       // 0x128(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class APawn*>                         CandidateList;                                     // 0x130(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        AutoSearchIntervalTimer;                           // 0x140(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Initialized;                                       // 0x144(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_287F[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLSearchTargetComponent* GetDefaultObj();

	class APawn* SelectTargetCharacter();
	bool ListupCandidateCharacter();
	bool IsAlive(class APawn* CheckPawn);
	void Initialize();
	bool HasList();
	bool FindCandidateList(class APawn* CheckPawn);
	bool CheckPawn(class APawn* CheckPawn);
	struct FVector CalcInterpolationLocation(const struct FVector& NewTargetLocation, const struct FVector& OldTargetLocation, const struct FVector& baseLocation, const struct FVector& OldBaseLocation, float Speed, int32 Mode);
};

// 0x48 (0x138 - 0xF0)
// Class DXM.TTLSearchTransportGimkComponent
class UTTLSearchTransportGimkComponent : public UActorComponent
{
public:
	TSubclassOf<class ATTLCatchableActorBase>    SearchTargetSubClassOf;                            // 0xF0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UShapeComponent>           CollisionType;                                     // 0xF8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  CollisionTag;                                      // 0x100(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxNumOfPutting;                                   // 0x108(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2882[0x2C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLSearchTransportGimkComponent* GetDefaultObj();

	void OnEndOverlapForContainer(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnCallByTransportPutting(class UTTLCatchableActorComponent* CallActor);
	void OnCallByReleaseing();
	void OnBeginOverlapForContainer(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnArsenalCatching(class AActor* Instigator, class AActor* CatchActor);
};

// 0x0 (0x790 - 0x790)
// Class DXM.TTLSecretPartsDevelopmentScene
class ATTLSecretPartsDevelopmentScene : public ATTLFactoryScene
{
public:

	static class UClass* StaticClass();
	static class ATTLSecretPartsDevelopmentScene* GetDefaultObj();

};

// 0x38 (0x378 - 0x340)
// Class DXM.TTLSequencerEventWidget
class ATTLSequencerEventWidget : public ATTLActor
{
public:
	class FName                                  WidgetPath;                                        // 0x340(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                WidgetClass;                                       // 0x348(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           UserWidget;                                        // 0x350(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      InAnimation;                                       // 0x358(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      LoopAnimation;                                     // 0x360(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      OutAnimation;                                      // 0x368(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLSequencerEventWidgetMode      Mode;                                              // 0x370(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2885[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLSequencerEventWidget* GetDefaultObj();

	void Update(float DeltaSeconds);
	void Outro(class FName OutAnimationName, bool IsReverse);
	void Intro(class FName InAnimationName, class FName LoopAnimationName);
	void DestroyEventWidget();
	bool CreateEventWidget(TSoftClassPtr<class UUserWidget> UserWidgetClass, int32 ZOrder);
};

// 0x900 (0x9F0 - 0xF0)
// Class DXM.TTLShieldComponent
class UTTLShieldComponent : public UActorComponent
{
public:
	uint8                                        Pad_288B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       ShieldLocator;                                     // 0xF8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        Shields;                                           // 0x100(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                ShieldHPs;                                         // 0x110(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                ShieldMaxHPs;                                      // 0x120(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class USkinnedMeshComponent*                 CenterbodyMesh;                                    // 0x130(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                ShieldClass;                                       // 0x138(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpawnHP;                                           // 0x140(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShieldHPRate;                                      // 0x144(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SpawnOffset;                                       // 0x148(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SpawnSize;                                         // 0x154(0xC)(Edit, BlueprintVisible, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LocationOffset;                                    // 0x160(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpawnCost;                                         // 0x16C(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SpawnedNum;                                        // 0x170(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SpawnMaxNum;                                       // 0x174(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShieldRestartTime;                                 // 0x178(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         RotationAttachedToCamera;                          // 0x17C(0x1)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_288C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           FxShieldStart;                                     // 0x180(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxShieldLoop;                                      // 0x218(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        FxShieldLoopPlayback;                              // 0x2B0(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxShieldHit;                                       // 0x2C8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxShieldRipple;                                    // 0x360(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxShieldFinish;                                    // 0x3F8(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxShieldBreak;                                     // 0x490(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxShieldMeshStart;                                 // 0x528(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxShieldStartFromCenter[0x3];                      // 0x5C0(0x1C8)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           FxShieldMeshFinish;                                // 0x788(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  AttachSocketName;                                  // 0x820(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USkeletalMesh>          ShieldFxMeshAsset[0x3];                            // 0x828(0x78)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimationAsset>        ShieldFxAnimation[0x3];                            // 0x8A0(0x78)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                ShieldFxMeshComponent[0x3];                        // 0x918(0x18)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HitVFXShowTime;                                    // 0x930(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HitVFXFadeTime;                                    // 0x934(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          VFXStartColor;                                     // 0x938(0x10)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          VFXEndColor;                                       // 0x948(0x10)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_288D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstanceDynamic*              ShieldFxMeshMaterialInstanceDynamics[0x3];         // 0x960(0x18)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              ShieldHitVFXMaterialInstanceDynamic;               // 0x978(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimerHandle                          StartVFXTimer;                                     // 0x980(0x8)(NoDestructor, NativeAccessSpecifierPublic)
	struct FTimerHandle                          EndVFXTimer;                                       // 0x988(0x8)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_288E[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxPlayback                        HitVFXPlayback;                                    // 0x9B8(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_288F[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLShieldComponent* GetDefaultObj();

	bool StartShield();
	void OverrideCollisionSetting(class AActor* OwnerActor, class UPrimitiveComponent* PrimitiveComponent);
	void OnTakePointDamageDelegate(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& ShotFromDirection, class UDamageType* DamageType, class AActor* DamageCauser);
	void OnTakeAnyDamageDelegate(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void OnFemtoLevelChange(int32 NewLevel, bool Initialized);
	void OnDuelTimeStart();
	int32 GetShieldNum();
	bool EndShield();
};

// 0x0 (0x630 - 0x630)
// Class DXM.TTLShopScene
class ATTLShopScene : public ATTLMenuSceneBase
{
public:

	static class UClass* StaticClass();
	static class ATTLShopScene* GetDefaultObj();

};

// 0x90 (0x6C0 - 0x630)
// Class DXM.TTLShopScene2
class ATTLShopScene2 : public ATTLMenuSceneBase
{
public:
	class UTTLDockScrollListComponent*           CheckedPartsScrollComponent;                       // 0x630(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ETTLEShopScene2State              ShopSceneState;                                    // 0x638(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2892[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLGameInstance*                      GameInstance;                                      // 0x640(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2893[0x78];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLShopScene2* GetDefaultObj();

	class ATTLCommonPopup* SpawnPopup_CommonBP();
	void ShopMenu_SwitchCategory();
	void SaleAttachmentMenu_SwitchCategory();
	void Popup_NgParts(struct FTTLArsenalPartsInfo& PartsInfo, bool IsCoop);
	void Popup_Common_Decide();
	void Popup_Common_Cancel();
	void PlayAnimBP_SwitchCategory();
	void PlayAnimBP_SwitchAttachmentListCategory();
	void PlayAnimBP_StartScene();
	void PlayAnimBP_PurchaseOrSaleStart(enum class ETTLEShopScene2State NextState);
	void PlayAnimBP_PurchaseOrSaleEnd();
	void PlayAnimBP_EndScene();
	bool IsNgPartsRoom();
	bool IsNgParts(class FName& PartsID, enum class ETTLPartsType PartType, bool IsCoop);
	TArray<class UTTLDockScrollListComponent*> GetDockPartsScrollListComponentsBP();
	void ChangeShopSceneState(enum class ETTLEShopScene2State NewState);
};

// 0x4D8 (0x13A0 - 0xEC8)
// Class DXM.TTLShoulderCannon
class ATTLShoulderCannon : public ATTLShoulderWeaponBase
{
public:
	uint8                                        Pad_2894[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ETTLShoulderCannonStatus          ShoulderCannonStatus;                              // 0xEF8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2895[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RailGunFootVFXStopTime;                            // 0xF00(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FallCliffHeight;                                   // 0xF04(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsMotionStopForLaserCannon;                        // 0xF08(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2896[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RotationScale;                                     // 0xF0C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Hip_Sus_PitchOffset;                               // 0xF10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Hip_Sus_YawOffset;                                 // 0xF14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2897[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           FxRailGunSecondCharge;                             // 0xF30(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           FxCoolingSmoke;                                    // 0xFC8(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        RailGunFirstChargePlayBack;                        // 0x1060(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        RailGunSecondChargePlayBack;                       // 0x1078(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        MuzzleLoopEffectPlayBack_R;                        // 0x1090(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        FxLoopEffectPlayBack_R;                            // 0x10A8(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2898[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               DirectionVector;                                   // 0x10C4(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DirectionVectorScale;                              // 0x10D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        IndivisualHealTotalTime;                           // 0x10D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         CanTestOwnerRotate;                                // 0x10D8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2899[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DeployAnimPlayTime;                                // 0x10DC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           FxDeployReaction;                                  // 0x10E0(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           FxChargeReaction;                                  // 0x1178(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           FxStorageReaction;                                 // 0x1210(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           FxCancelReaction;                                  // 0x12A8(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        FxReactionPlayback;                                // 0x1340(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UAnimMontage*                          WeaponMontage_R;                                   // 0x1358(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_289A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MultiLaserRoundTripRate;                           // 0x1364(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MultiLaserRoundTripAttribute;                      // 0x1368(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MultiLaserRoundTripAdjustment;                     // 0x136C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  MultiLaserOtherSocketName;                         // 0x1370(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_289B[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLShoulderCannon* GetDefaultObj();

	struct FTransform GetMuzzleTransform_R();
	void ChangeReactionFalling();
	bool CanLockOn();
};

// 0x88 (0xF50 - 0xEC8)
// Class DXM.TTLShoulderFunnelPot
class ATTLShoulderFunnelPot : public ATTLShoulderWeaponBase
{
public:
	TSubclassOf<class ATTLBaseFunnelPawn>        FunnelClass;                                       // 0xEC8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               TestOffset;                                        // 0xED0(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_289C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVector>                       FunnelWaitOffset;                                  // 0xEE0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        MaxChargeTime;                                     // 0xEF0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsFemtoComsumingOnAttack;                          // 0xEF4(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_289D[0x23];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  FunnelParameterName;                               // 0xF18(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_289E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                MuzzleSocketNameBase;                              // 0xF28(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FTTLFunnelStatusForPot>        FunnelList;                                        // 0xF38(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_289F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLShoulderFunnelPot* GetDefaultObj();

	void StartReturnFunnel(class ATTLBaseFunnelPawn* Funnel);
	void ProcessChargeTimer(float DeltaSeconds);
	void OnDestroyPot(class AActor* DestroyedActor);
	bool IsNextAttack();
	void EndReturnFunnel(class ATTLBaseFunnelPawn* Funnel);
	void DestroyFunnel(class AActor* DestroyedActor);
};

// 0x38 (0x60 - 0x28)
// Class DXM.TTLSkillEffect
class UTTLSkillEffect : public UObject
{
public:
	struct FTTLSkillEffectParameter              SkillParameter;                                    // 0x28(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        EffectTarget;                                      // 0x48(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class AActor*                                MasterActor;                                       // 0x58(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLSkillEffect* GetDefaultObj();

	void StopSkillEffect(class UTTLBasicStatusComponent* BasicStatus);
	void InvokeSkillEffect(class UTTLBasicStatusComponent* BasicStatus);
	void InitializeSkillEffect(struct FTTLSkillEffectRow& Parameter, float EffectValueRate, float AddValueBase, int32 AddCount, float AddSkillParameterValue);
};

// 0x28 (0x50 - 0x28)
// Class DXM.TTLSkillObject
class UTTLSkillObject : public UObject
{
public:
	class FName                                  SkillID;                                           // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UTTLSkillEffect*>               SkillEffects;                                      // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_28A4[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLSkillObject* GetDefaultObj();

	void StopSkill(class UTTLBasicStatusComponent* BasicStatus);
	void InvokeSkill(class UTTLBasicStatusComponent* BasicStatus);
	void InitializeSkill(class FName& SkillName, float EffectValueRate, float AddValueBase, int32 AddCount, float AddSkillParameterValue, bool SkipVP);
	bool HasSkillEffectType(enum class ETTLESkillEffectType SkillEffectType);
	bool CouldActiveSkill(class UTTLBasicStatusComponent* BasicStatus);
	bool CheckSkillActive();
	void ChangeSkillState(bool NewState, class UTTLBasicStatusComponent* BasicStatus, bool SkipInvokeOrStop);
};

// 0x220 (0x310 - 0xF0)
// Class DXM.TTLSmokeVFXComponent
class UTTLSmokeVFXComponent : public UActorComponent
{
public:
	uint8                                        Pad_28AB[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           WhiteVFX;                                          // 0x108(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxModuleParameters                WhiteVFXModuleParameters;                          // 0x1A0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           BlackVFX;                                          // 0x1C0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxModuleParameters                BlackVFXModuleParameters;                          // 0x258(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TArray<struct FTTLSmokeVFXColorContainer>    OhterSmokeArray;                                   // 0x278(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FTTLSmokeVFXContainer>         SMokeArray;                                        // 0x288(0x10)(ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FTTLSmokeVFXBlendContainer>    SmokeEndArray;                                     // 0x298(0x10)(ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class FName                                  TargetMeshTag;                                     // 0x2A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BlendTime;                                         // 0x2B0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_28AC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          SmokeSocketArray;                                  // 0x2B8(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FTTLSmokeSpawnParam>           SmokeSpawnSettingsArray;                           // 0x2C8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         IsDeleteWhenHPZero;                                // 0x2D8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsUsingSocketScale;                                // 0x2D9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsChangeColorAll;                                  // 0x2DA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_28AD[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxModuleParameters                ColorParameterByVPZero;                            // 0x2E0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	float                                        ParameterChangeTime;                               // 0x300(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_28AE[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLSmokeVFXComponent* GetDefaultObj();

	bool StopEffect(class FName SocketName);
	void StopAllSmokeEffectBlendContainer();
	bool StopAllSmokeEffect(bool Force);
	void SetAutoDeleteSmokeWhenHpZero(bool IsDelete);
	void PlayVFXByHpRatio(float HpRatio);
	bool PlaySmokeEffect(class FName SocketName, struct FTTLFxParam* Param, struct FTTLFxModuleParameters& ModuleParams);
	bool PlayEffectIndex(int32 Index, enum class ETTLSmokeVFX VfxType);
	bool PlayEffect(class FName SocketName, enum class ETTLSmokeVFX VfxType);
	void OnDeadForObjectStatus(class AActor* DamageCauser, struct FVector& HitLocation);
	void OnDeadForBasicStatus();
	bool CheckSocketAndStopEffect(class FName SocketName);
};

// 0x20 (0x168 - 0x148)
// Class DXM.TTLSnakMultiCannonComponent
class UTTLSnakMultiCannonComponent : public UTTLSyncMultiCannonComponent
{
public:
	TSubclassOf<class ATTLBaseCannonPawn>        CannonClass;                                       // 0x148(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class FName>                          CannonSockets;                                     // 0x150(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_28AF[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLSnakMultiCannonComponent* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class DXM.TTLSortIdDataManager
class UTTLSortIdDataManager : public UObject
{
public:
	class UDataTable*                            SortAttachmentParam;                               // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDataTable*                            SortPartsParam;                                    // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDataTable*                            SortWeaponParam;                                   // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLSortIdDataManager* GetDefaultObj();

	void Initialize();
	int32 GetSortID_Weapon(class FName& ID);
	int32 GetSortID_Parts(class FName& ID);
	int32 GetSortID_Attach(class FName& ID);
};

// 0x68 (0x158 - 0xF0)
// Class DXM.TTLSortMenuComponent
class UTTLSortMenuComponent : public UActorComponent
{
public:
	class UUserWidget*                           MenuLayout;                                        // 0xF0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UUserWidget*>                   SortMenuButtons;                                   // 0xF8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                         IsOpen;                                            // 0x108(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsClosing;                                         // 0x109(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28B4[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentCursorIndex;                                // 0x10C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>               Class_SortMenu;                                    // 0x110(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>               Class_Hom_parts_btn_04;                            // 0x118(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_MenuOpen;                                // 0x120(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_ButtonOn;                                // 0x128(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLGameInstance*                      CurrentGameInstance;                               // 0x130(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_28B5[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLSortMenuComponent* GetDefaultObj();

	void SetupSortMenu(class FText& MenuTitleText, TArray<class FText>& buttonsText);
	void OpenSortMenu(int32 Start_cursor_pos);
	void Initialize();
	int32 DecideSortMenu();
	void CloseSortMenuFinished();
	void CloseSortMenu();
	bool ChangeCursor(int32 Offset, int32 RepeatCount);
};

// 0x68 (0x90 - 0x28)
// Class DXM.TTLSoundManager
class UTTLSoundManager : public UObject
{
public:
	class UAtomComponent*                        ControlBGMComponent;                               // 0x28(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28B8[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAtomComponent*                        ControlEnvSEComponent;                             // 0x38(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28B9[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAtomComponent*                        ControlSEComponent;                                // 0x48(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundAtomCueSheet*                    PersistentBank;                                    // 0x50(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28BA[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundAtomCueSheet*                    LocalizedVoiceBank;                                // 0x60(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundAtomCueSheet*                    ActionVoiceBank;                                   // 0x68(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAtomComponent*>                PoolSEComponents;                                  // 0x70(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_28BB[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLSoundManager* GetDefaultObj();

	bool PauseEnvSE(bool Value);
	void OnPostLoadMap(class UWorld* LoadedWorld);
	bool ChangeEnvSE(class USoundAtomCue* Sound, float FadeInTime, float FadeOutTime);
	bool ChangeBGM(class USoundAtomCue* Sound, float FadeInTime, float FadeOutTime);
};

// 0x78 (0x170 - 0xF8)
// Class DXM.TTLSpawnActorComponent
class UTTLSpawnActorComponent : public UTTLActorComponent
{
public:
	TArray<TSubclassOf<class APawn>>             SpawnClasses;                                      // 0xF8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class AAIController>>     SpawnControllers;                                  // 0x108(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class FName>                          SpawnSockets;                                      // 0x118(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        SpawnMax;                                          // 0x128(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28BC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLSpawnHateTarget>           HateTargets;                                       // 0x130(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        MissionTargets;                                    // 0x140(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_28BD[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLSpawnActorComponent* GetDefaultObj();

	void OnDestoryedActor(class AActor* Actor);
};

// 0x220 (0x9E0 - 0x7C0)
// Class DXM.TTLSpawnContainerBaseCharacter
class ATTLSpawnContainerBaseCharacter : public ATTLCharacter
{
public:
	class USkeletalMeshComponent*                SelfMesh;                                          // 0x7C0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                         BoxComponent;                                      // 0x7C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBaseFeryContainerAnimInstance*     SelfAnim;                                          // 0x7D0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLDamageParameterComponent*          BreakDamage;                                       // 0x7D8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBasicStatusComponent*              SelfStatus;                                        // 0x7E0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class APawn>>             SpawnPawns;                                        // 0x7E8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class AAIController>>     SpawnControllers;                                  // 0x7F8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                        GravityScale;                                      // 0x808(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OpenDistance;                                      // 0x80C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Damage;                                            // 0x810(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28BE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           TrailVFX;                                          // 0x818(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           OpenVFX;                                           // 0x8B0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UTTLSpawnActorComponent*               SpawnActorComponent;                               // 0x948(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                LeaderActor;                                       // 0x950(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnSpawnActor;                                      // 0x958(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	bool                                         IsDetach;                                          // 0x968(0x1)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSpawn;                                           // 0x969(0x1)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28BF[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        OwnerIndex;                                        // 0x96C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        TrailVFXPlayback00;                                // 0x970(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTTLFxPlayback                        TrailVFXPlayback01;                                // 0x988(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_28C0[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLSpawnContainerBaseCharacter* GetDefaultObj();

	void SpawnTrailVFX();
	void SpawnActorBP(class AActor* Actor);
	void ReleaseContainer();
	TArray<class AActor*> OpenContainer();
	void DestroyTrailVFX();
	void Break();
};

// 0x28 (0x120 - 0xF8)
// Class DXM.TTLSpectatorModeControlComponent
class UTTLSpectatorModeControlComponent : public UTTLActorComponent
{
public:
	bool                                         ForceEnable;                                       // 0xF8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_28C1[0x27];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLSpectatorModeControlComponent* GetDefaultObj();

	void DebugSetForceEnable(bool IsEnable);
};

// 0x38 (0x128 - 0xF0)
// Class DXM.TTLSplineComponent
class UTTLSplineComponent : public UActorComponent
{
public:
	TArray<struct FVector>                       SplinePoint;                                       // 0xF0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FVector>                       IntPoint;                                          // 0x100(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                SplineLength;                                      // 0x110(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         IsDirty;                                           // 0x120(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28C2[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLSplineComponent* GetDefaultObj();

	void UpdateSpline(bool IsForce);
	void SetPoint(int32 PointIndex, const struct FVector& Point);
	int32 GetPointNum();
	float GetLength();
	float FindClosestDistance(const struct FVector& Location, struct FVector* ClosestPoint);
	void Clear();
	struct FVector CalcLocationByTime(float Time);
	struct FVector CalcLocationByLength(float Length);
	int32 AddPoint(const struct FVector& Point);
};

// 0x290 (0x8C0 - 0x630)
// Class DXM.TTLStaffRollScene
class ATTLStaffRollScene : public ATTLMenuSceneBase
{
public:
	TSubclassOf<class UUserWidget>               Class_RowWidget;                                   // 0x630(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_TextBox00;                                   // 0x638(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_TextBox01;                                   // 0x640(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_TextBox02;                                   // 0x648(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_ImageBox;                                    // 0x650(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      TextBlockCenterAlign00;                            // 0x658(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      TextBlockRightAlign00;                             // 0x660(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      TextBlockLeftAlign00;                              // 0x668(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      TextBlockCenterAlign01;                            // 0x670(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      TextBlockRightAlign01;                             // 0x678(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      TextBlockLeftAlign01;                              // 0x680(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      ImageBoxCenterAlign;                               // 0x688(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      ImageBoxRightAlign;                                // 0x690(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      ImageBoxLeftAlign;                                 // 0x698(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      PartWidgetCenterAlign;                             // 0x6A0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      PartWidgetRightAlign;                              // 0x6A8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      PartWidgetLeftAlign;                               // 0x6B0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      TopWidgetCenterAnim;                               // 0x6B8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      TopWidgetRightInAnim;                              // 0x6C0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      TopWidgetRightOutAnim;                             // 0x6C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      TopWidgetLeftInAnim;                               // 0x6D0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      TopWidgetLeftOutAnim;                              // 0x6D8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      TopWidgetInAnim;                                   // 0x6E0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      TopWidgetOutAnim;                                  // 0x6E8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATTLLoadingScreen*                     LoadingScreen;                                     // 0x6F0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FTTLWidgetWithType>            GroupWidgetList;                                   // 0x6F8(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FTTLWidgetWithType>            EscapeGroupWidgetList;                             // 0x708(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_28C3[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLWidgetWithType>            SlideWidget;                                       // 0x730(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_28C4[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UWidgetAnimation*                      LatestTopWidgetAnim;                               // 0x750(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FTTLTextBlockInfo>             AutoInputTextList;                                 // 0x758(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FTTLTextBlockInfo>             CreatedScrollTextBoxList;                          // 0x768(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FTTLTextBlockInfo>             CreatedSlideTextBoxList;                           // 0x778(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_28C5[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLUICustomRichTextBlock*             EndMessageWidget;                                  // 0x7A8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_28C6[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UUserWidget*                           HeaderWidget;                                      // 0x7B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ScrollSpeed;                                       // 0x7C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        Constant_ScrollSpeedUpRate;                        // 0x7C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AutoInputDelayTime;                                // 0x7C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AutoInputIntervalTime;                             // 0x7CC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AutoInputColumnDelayTime;                          // 0x7D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TextAppearHeightRatio;                             // 0x7D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        InitialWidgetX;                                    // 0x7D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InitialWidgetY;                                    // 0x7DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EraseWidgetY;                                      // 0x7E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        SlideDelayStringNum;                               // 0x7E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StartGrayScaling;                                  // 0x7E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FinishGrayScaling;                                 // 0x7EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EndMessageAutoInputStartTime;                      // 0x7F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EndMessageEndTime;                                 // 0x7F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EndMessageAutoInputIntervalTime;                   // 0x7F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_28C7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDataTable*                            RollDataTable;                                     // 0x800(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_28C8[0x5C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HiddenGuideTime;                                   // 0x864(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  StaffRollEnd;                                      // 0x868(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	uint8                                        Pad_28C9[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                StaffRollBGMPath;                                  // 0x898(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_28CA[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLStaffRollScene* GetDefaultObj();

	void OnFinishedAtSaveIconAnim();
	void GetTopWidgetAnimation(class UUserWidget* TargetWidget);
	void GetTextBoxAnimation01(class UUserWidget* TargetWidget);
	void GetTextBoxAnimation00(class UUserWidget* TargetWidget);
	void GetPartWidgetAnimation(class UUserWidget* TargetWidget);
	void GetImageBoxAnimation(class UUserWidget* TargetWidget);
	void AnyKeyInput();
};

// 0x30 (0x58 - 0x28)
// Class DXM.TTLProximityFuseStatus
class UTTLProximityFuseStatus : public UObject
{
public:
	uint8                                        Pad_28CB[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLProximityFuseStatus* GetDefaultObj();

};

// 0x28 (0x50 - 0x28)
// Class DXM.TTLTickHomingCalculator
class UTTLTickHomingCalculator : public UObject
{
public:
	uint8                                        Pad_28CC[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLTickHomingCalculator* GetDefaultObj();

};

// 0x78 (0xA0 - 0x28)
// Class DXM.TTLSteamUserStatsManager
class UTTLSteamUserStatsManager : public UObject
{
public:
	uint8                                        Pad_28CE[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnWriteStatsComplete;                              // 0x30(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnFlushStatsComplete;                              // 0x40(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnReadStatsComplete;                               // 0x50(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_28CF[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLSteamUserStatsManager* GetDefaultObj();

	void OnFlushComplete(class FName SessionName, bool WasSuccessful);
};

// 0x0 (0x438 - 0x438)
// Class DXM.TTLSubLevelScriptActor
class ATTLSubLevelScriptActor : public ATTLLevelScriptActor
{
public:

	static class UClass* StaticClass();
	static class ATTLSubLevelScriptActor* GetDefaultObj();

	class ATTLLevelControlActor* GetLevelControlActor();
};

// 0x728 (0xA58 - 0x330)
// Class DXM.TTLSubMultiCampLevelScriptActor
class ATTLSubMultiCampLevelScriptActor : public ALevelScriptActor
{
public:
	uint8                                        Pad_28D6[0x725];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsForcePlaylogCollision;                           // 0xA55(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_28D7[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLSubMultiCampLevelScriptActor* GetDefaultObj();

	void NotifyChangeCustomInfo();
	void MulticastStartReady2vs2Countdown();
	void MulticastStartCountDownToMission();
	void MulticastEndReady2vs2Countdown();
	void GoToMission();
	void EndReady2vs2Countdown();
	bool CheckChangeSkill(TArray<class FName>& NewSkill);
	bool CheckChangeOuterCustomInfo(enum class ETTLEHumanGenderType NewGender, struct FTTLHumanCustomPartsInfo& NewInfo);
	bool CheckChangeArsenalAssembleInfo(struct FTTLPlayerAssembleInfo& NewInfo);
	bool CanStartConsoleAccess(enum class ETTLEInteractType ConsoleType, class ATTLOnlineNotifyHUD* NotifyHud);
	void AddPlayLogConsole(class ATTLConsoleActor* ConsoleActor);
	void AddAccessHUDConsole(class ATTLConsoleActor* ConsoleActor);
};

// 0x8 (0x338 - 0x330)
// Class DXM.TTLSubUiSceneLevelScriptActor
class ATTLSubUiSceneLevelScriptActor : public ATTLNotReplicateLevelScriptActor
{
public:
	uint8                                        Pad_28D8[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ETTLEOpenMenuMode                 OpenMenuMode;                                      // 0x331(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_28D9[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLSubUiSceneLevelScriptActor* GetDefaultObj();

	void SetOpenMenuModeByInteractType(enum class ETTLEInteractType InteractType);
	bool IsOpenPlayLogFromBaseCamp();
	enum class ETTLEInteractType GetLocalPlayerInteractTypeOnBeginPlay();
	class ATTLMenuSceneBase* GetCurrentSceneFromCPlus();
	void DoGarbageCollection();
};

// 0x130 (0x458 - 0x328)
// Class DXM.TTLSurvivalGateActor
class ATTLSurvivalGateActor : public AActor
{
public:
	struct FTTLFxParam                           OpenGateSE;                                        // 0x328(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           UnLockGateSE;                                      // 0x3C0(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ATTLSurvivalGateActor* GetDefaultObj();

	void PlayUnLockGateSE();
	bool PlayOpenGateSE();
	void OpenGateBP();
	void ChangeMobilityToStatic(class UStaticMeshComponent* TargetMeshComponent);
	void ChangeMobilityToMovable(class UStaticMeshComponent* TargetMeshComponent);
};

// 0x0 (0x28 - 0x28)
// Class DXM.TTLSurvivalInfoDebugDraw
class UTTLSurvivalInfoDebugDraw : public UObject
{
public:

	static class UClass* StaticClass();
	static class UTTLSurvivalInfoDebugDraw* GetDefaultObj();

};

// 0x8 (0xF8 - 0xF0)
// Class DXM.TTLSurvivalMapUIComponent
class UTTLSurvivalMapUIComponent : public UActorComponent
{
public:
	class UUserWidget*                           TopWidget;                                         // 0xF0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLSurvivalMapUIComponent* GetDefaultObj();

};

// 0x0 (0x88 - 0x88)
// Class DXM.TTLSurvivalParam
class UTTLSurvivalParam : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UTTLSurvivalParam* GetDefaultObj();

};

// 0x88 (0x3B8 - 0x330)
// Class DXM.TTLSurvivalSubLevelScriptActor
class ATTLSurvivalSubLevelScriptActor : public ALevelScriptActor
{
public:
	uint8                                        Pad_28DF[0x58];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        OpenGateList;                                      // 0x388(0x10)(BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class AActor*>                        OpenOuterThroughGateList;                          // 0x398(0x10)(BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_28E0[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLSurvivalSubLevelScriptActor* GetDefaultObj();

	void SetMissionGroupVisibleForSurvival(class FName GroupTag, bool IsVisible);
	void RemoveHighlightFromRader(class AActor* TargetActor);
	void OpenOuterThroughGate();
	void OpenGate();
	void OnOpenGoalRoomBP();
	void OnMissionPickUppedParts(class FName GroupTag);
	void OnMissionPickUppedArrangedPartsBP();
	void OnMissionGroupActorDestroyedBP(class FName GroupTag, int32 Num, class AActor* DestroyedActor, class AActor* DamageCauserActor);
	void OnMissionGroupActorDestroyed(class FName GroupTag, int32 Num, class AActor* DestroyedActor, class AActor* DamageCauserActor);
	void OnFieldAccessBP(class ATTLFieldAccess* FieldPtr, TArray<class FName>& NotifyTags);
	void OnFieldAccess(class ATTLFieldAccess* FieldPtr, const TArray<class FName>& NotifyTags);
	void MulticastOpenGate();
	bool IsExtinctionTaggedActor(class FName RefTag, class FName CheckTag, int32 RemainingNum);
	class FName GetConvertedTagName(class FName SrcTag);
	void ExecOpenRoomFunctionExitLinkRoom();
	void DeleteExitGate();
	void CaptureMinimap();
	void AddHighlightToRader(class AActor* TargetActor, bool IsAllyOnHighlight);
};

// 0x0 (0x88 - 0x88)
// Class DXM.TTLSystemParam
class UTTLSystemParam : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UTTLSystemParam* GetDefaultObj();

};

// 0x50 (0x680 - 0x630)
// Class DXM.TTLSystemScene
class ATTLSystemScene : public ATTLMenuSceneBase
{
public:
	enum class ETTLESystemSceneState             SystemSceneState;                                  // 0x630(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28E2[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UUserWidget*                           Widget_menu_u01;                                   // 0x638(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           Widget_hed_u00;                                    // 0x640(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           Widget_prt_u00;                                    // 0x648(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           Widget_sys_u00;                                    // 0x650(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           Widget_paint_u00;                                  // 0x658(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_28E3[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLSystemScene* GetDefaultObj();

	void StartTransitionSceneBP(int32 NewState);
	class ATTLPopUpBase* SpawnYesNoPopUp(enum class ETTLEManagedPopUpType Type);
	void SetupTopMenu();
	void SetupHeader();
	bool IsFadeOut();
	bool IsBgmFadeOut();
	void DecideReturnToTitle();
	void Decide_TopMenu();
	void ChangeSystemSceneState(enum class ETTLESystemSceneState NewState);
	void ChangeCursor_TopMenu(int32 Offset, int32 RepeatCount);
	void Cancel_TopMenu();
	void BgmFadeOut(float FadeTime);
};

// 0x9A8 (0xAA0 - 0xF8)
// Class DXM.TTLTalkHUDComponent
class UTTLTalkHUDComponent : public UTTLActorComponent
{
public:
	TSubclassOf<class ATTLTalkSelectPopUp>       TalkSelectPopUpClass;                              // 0xF8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UUserWidget>             BriefingUI00ClassSoft;                             // 0x100(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UUserWidget>             WhiteLoadingBgClassSoft;                           // 0x128(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BriefingTitleDisplaySpeed;                         // 0x150(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BriefingValueDisplaySpeed;                         // 0x154(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BriefingValueTextDisplaySpeed;                     // 0x158(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28E6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UUserWidget*                           TalkUI;                                            // 0x160(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           TalkDemoUI;                                        // 0x168(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           KeyHelpUI;                                         // 0x170(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           BriefingUI;                                        // 0x178(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           FadeUI;                                            // 0x180(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           WhiteLoadingBgUI;                                  // 0x188(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLTalkMode                      Mode;                                              // 0x190(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28E7[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLEventParamRow                     CurrentTalkEventParam;                             // 0x198(0x40)(BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLEventMessageParamRow              CurrentMessageParam;                               // 0x1D8(0x40)(BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLSpeakerNameParamRow               CurrentSpeakerNameParam;                           // 0x218(0x40)(BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLMissionBriefingParamRow           CurrentMissionBriefingParam;                       // 0x258(0x110)(BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTTLTalkDemoParamRow                  CurrentTalkDemoParam;                              // 0x368(0x88)(BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                        EventMessageIndex;                                 // 0x3F0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Timer;                                             // 0x3F4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OldTimer;                                          // 0x3F8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsPause;                                           // 0x3FC(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSkipMessage;                                     // 0x3FD(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSendingMessage;                                  // 0x3FE(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDisplayCursor;                                   // 0x3FF(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28E8[0x6A0];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLTalkHUDComponent* GetDefaultObj();

	bool StartTalkUI();
	void StartSkipFade(bool IsFadeIn);
	bool StartKeyHelpUI();
	bool StartFadeUI();
	bool StartEventMessage(class FName EventMessageParamName);
	void StartEvent();
	bool Start();
	void SkipMessage();
	void SkipEventToBack();
	void SkipEvent();
	void ShowEventKeyHelp(enum class ETTLEActionType KeyType);
	void SetPause(bool Pause);
	void SendingMessage();
	void RequestEventMessage(class FName EventMessageParamName);
	void Process(float DeltaTime);
	bool PreCheck();
	void OnInputRepeatAction(enum class ETTLEActionType KeyType, int32 Count);
	void OnInputAction(enum class ETTLEActionType KeyType, bool IsPressed);
	void NextEventMessage();
	bool IsSkipFading();
	bool IsInEvent();
	bool IsDisplayKeyHelp();
	void Initialize();
	int32 GetSelectCursor();
	void ForceEndTalkEvent();
	void ForceEndEventMessage();
	void EndTalkUI();
	void EndKeyHelpUI();
	void EndFadeUI();
	void EndEventMessage();
	void EndEvent();
	void ChangeMode(enum class ETTLTalkMode NewMode);
};

// 0x10 (0x3D0 - 0x3C0)
// Class DXM.TTLTalkSelectPopUp
class ATTLTalkSelectPopUp : public ATTLPopUpBase
{
public:
	class UTTLTalkSelectScrollListComponent*     TTLTalkSelectScrollList;                           // 0x3C0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentCursor;                                     // 0x3C8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28EB[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLTalkSelectPopUp* GetDefaultObj();

	void OnInputRepeatAction(enum class ETTLEActionType KeyType, int32 Count);
	void OnInputAction(enum class ETTLEActionType KeyType, bool IsPressed);
	void Initialize(const TArray<class FText>& TextList, bool IsEndingSelect);
};

// 0x18 (0x1B0 - 0x198)
// Class DXM.TTLTalkSelectScrollListComponent
class UTTLTalkSelectScrollListComponent : public UTTLScrollListComponentBase
{
public:
	uint8                                        Pad_28ED[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLTalkSelectScrollListComponent* GetDefaultObj();

	void SetButtonText(const TArray<class FText>& TextList);
	void Initialize(class UUserWidget* LayoutWidget, int32 DisplayNum, int32 ListNumMax);
	class UUserWidget* CreateButtonWidget(int32 Position);
};

// 0x78 (0x3A0 - 0x328)
// Class DXM.TTLTargetArea
class ATTLTargetArea : public AActor
{
public:
	uint8                                        Pad_28EE[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstanceDynamic*              AreaMaterialPtr;                                   // 0x340(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  MeshTagName;                                       // 0x348(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        AreaMaterialIndex;                                 // 0x350(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FadeInTime;                                        // 0x354(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FadeOutTime;                                       // 0x358(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TargetFadeInValue;                                 // 0x35C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TargetFadeOutValue;                                // 0x360(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_28EF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  FadeOutMaterialVariableName;                       // 0x368(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_28F0[0x9];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsClear;                                           // 0x379(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsRemoveRaderByFadingout;                          // 0x37A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsRefFromLevelBP;                                  // 0x37B(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_28F1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  RefTagFromLevelBP;                                 // 0x380(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_28F2[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLTargetArea* GetDefaultObj();

	bool RemoveFromRader();
	void FadeOut();
	void FadeIn();
};

// 0x18 (0x3B8 - 0x3A0)
// Class DXM.TTLCollectArea
class ATTLCollectArea : public ATTLTargetArea
{
public:
	uint8                                        Pad_28F3[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsNoCollisionToTargetMesh;                         // 0x3B0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_28F4[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLCollectArea* GetDefaultObj();

};

// 0x8 (0x3A8 - 0x3A0)
// Class DXM.TTLInstallationArea
class ATTLInstallationArea : public ATTLTargetArea
{
public:
	uint8                                        Pad_28F5[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLInstallationArea* GetDefaultObj();

};

// 0x8 (0x3A8 - 0x3A0)
// Class DXM.TTLTransportGoalArea
class ATTLTransportGoalArea : public ATTLTargetArea
{
public:
	uint8                                        Pad_28F6[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLTransportGoalArea* GetDefaultObj();

};

// 0x20 (0x118 - 0xF8)
// Class DXM.TTLTargetObjComponent
class UTTLTargetObjComponent : public UTTLActorComponent
{
public:
	class FString                                MeshName;                                          // 0xF8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SocketName;                                        // 0x108(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TargetName;                                        // 0x110(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLTargetObjComponent* GetDefaultObj();

	bool CalcHUDLocation(struct FVector* HudLocation);
};

// 0x88 (0x220 - 0x198)
// Class DXM.TTLTerminalTopMenuComponent
class UTTLTerminalTopMenuComponent : public UTTLScrollListComponentBase
{
public:
	class UUserWidget*                           Widget_TopLayoutWidget;                            // 0x198(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UScrollBox*                            Widget_NotificationAreaScroll;                     // 0x1A0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FTTLNotificationAreaInfo>      NotificationAreaInfoList;                          // 0x1A8(0x10)(ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FTTLMainMenuNotificationInfo>  CurrentNotificationInfoList;                       // 0x1B8(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_InfoInAnime;                             // 0x1C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_InfoSlideIn;                             // 0x1D0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_InfoSlideOut;                            // 0x1D8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_InfoFocusIn;                             // 0x1E0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_InfoFocusOut;                            // 0x1E8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_HomTopList03;                                // 0x1F0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_HomTopList02;                                // 0x1F8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_28FB[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLTerminalTopMenuComponent* GetDefaultObj();

	float StopAnim_InOutNotificationArea();
	float PlayFirstAnim_InOutNotificationArea(bool IsIn);
	void PlayAnim_SlideNotificationArea(bool IsUp);
	float PlayAnim_InOutNotificationArea(bool IsIn);
	bool MoveCursorToUD(int32 Offset, int32 RepeatCount);
	bool InitializeBP();
	void Initialize_SoloMode(class UUserWidget* LayoutWidget);
	void Initialize_OnlineMode(class UUserWidget* LayoutWidget);
	void CreateNotifications();
};

// 0x60 (0x690 - 0x630)
// Class DXM.TTLTerminalTopScene
class ATTLTerminalTopScene : public ATTLMenuSceneBase
{
public:
	enum class ETTLETerminalTopSceneState        TerminalTopSceneState;                             // 0x630(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_28FC[0x27];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ATTLRewardPopUp>           RewardPopupClass;                                  // 0x658(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_28FD[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLTerminalTopScene* GetDefaultObj();

	void TopMenu_UpdateNewIcon();
	bool TopMenu_IsNewIcon();
	bool TopMenu_IsNew(enum class ETTLEMainMenuFacilityType Facility);
	void TopMenu_ClearNewIcon(enum class ETTLEMainMenuFacilityType Facility);
	void PlayAnimBP_StartScene(bool StartCheckNotice);
	void PlayAnimBP_EndScene(bool UseLoading);
	void CheckDecorationConditions();
	void ChangeSceneState(enum class ETTLETerminalTopSceneState NextState);
	void ChangeSceneBP(int32 Value);
};

// 0x10 (0x640 - 0x630)
// Class DXM.TTLTestColorPickerScene
class ATTLTestColorPickerScene : public ATTLMenuSceneBase
{
public:
	class UTTLUIColorPickerComponent*            ColorPickerComponent;                              // 0x630(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ETTLETestColorPickerSceneState    SceneState;                                        // 0x638(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_28FE[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLTestColorPickerScene* GetDefaultObj();

	void ColorPicker_Decide();
	void ColorPicker_Cancel();
};

// 0x28 (0x3B0 - 0x388)
// Class DXM.TTLTestEffectPawn
class ATTLTestEffectPawn : public APawn
{
public:
	TArray<class UParticleSystem*>               VFX_List;                                          // 0x388(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	float                                        OffsetRadius;                                      // 0x398(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RotationalSpeed;                                   // 0x39C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               VFXScale;                                          // 0x3A0(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CurrentVFXNum;                                     // 0x3AC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ATTLTestEffectPawn* GetDefaultObj();

	bool IsLoop(class UParticleSystem* VFX);
	bool IsImmortal(class UParticleSystem* VFX);
	class FString GetDebugText(class UParticleSystemComponent* Component);
};

// 0x388 (0x6B0 - 0x328)
// Class DXM.TTLTestHumanAnimationPlayer
class ATTLTestHumanAnimationPlayer : public AActor
{
public:
	class ATTLDebugMenuController*               DebugMenuActor;                                    // 0x328(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ATTLDebugMenuController>   Class_DebugMenu;                                   // 0x330(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_Widget;                                      // 0x338(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_GuideWidget;                                 // 0x340(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           TopWidget;                                         // 0x348(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UUserWidget*>                   GuideWidget;                                       // 0x350(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	float                                        CameraTurnRate;                                    // 0x360(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2903[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                DefaultCamera;                                     // 0x368(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATTLUICameraControlActor*              FreeMoveCamera;                                    // 0x370(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETTLECameraOperationMode          CameraMode;                                        // 0x378(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2904[0x27];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ATTLCharacterCommon>       Class_OuterCharacter;                              // 0x3A0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsOperationNPC;                                   // 0x3A8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2905[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                TargetOuter;                                       // 0x3B0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                DefaultOuter;                                      // 0x3B8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                NPCOuter;                                          // 0x3C0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USkeletalMeshComponent*                TargetHeadComponent;                               // 0x3C8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USkeletalMeshComponent*                DefaultHeadComponent;                              // 0x3D0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USkeletalMeshComponent*                NPCHeadComponent;                                  // 0x3D8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2906[0x80];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimSequenceBase*                     CurrentFaceAnimation;                              // 0x460(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                     CurrentBodyAnimation;                              // 0x468(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2907[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UUserWidget*                           SelectedFaceAnimWidget;                            // 0x478(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           SelectedBodyAnimWidget;                            // 0x480(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           ContinuousPlayAnimGuideWidget;                     // 0x488(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2908[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLHumanViewerAdditionalNPC>  AdditionalNPCList;                                 // 0x4D8(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class AActor>                    Class_CharaEditScene;                              // 0x4E8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2909[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLHumanEditComponent*                HumanEditComponent;                                // 0x508(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATTLCharacterEditScene*                CharaEditScene;                                    // 0x510(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_290A[0x42];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsMoveOuterMode;                                  // 0x55A(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_290B[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLStageNameAndReadLevel>     StageNameAndReadLevel;                             // 0x560(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_290C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMeshComponent*                  BGImage;                                           // 0x578(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_290D[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ULevelStreamingKismet*                 CurrentLoadLevel;                                  // 0x5E0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class ULevelStreamingKismet*>         LoadLevelPointerList;                              // 0x5E8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_290E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLUICameraControllBase*              CameraControllComponent;                           // 0x600(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_290F[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<float>                                MoveSpeedArray;                                    // 0x628(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<float>                                AnimSpeedArray;                                    // 0x638(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	float                                        AnimBlendTime;                                     // 0x648(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          BGColor1;                                          // 0x64C(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          BGColor2;                                          // 0x65C(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BGWallScaleRate;                                   // 0x66C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               InitialBGWallLocation;                             // 0x670(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ScreenShotRate_MAX;                                // 0x67C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2910[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AStaticMeshActor*                      BGWall;                                            // 0x690(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                  BGWallMesh;                                        // 0x698(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2911[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLTestHumanAnimationPlayer* GetDefaultObj();

	void TurnCamera(float AxisValue);
	void SetCameraMode(enum class ETTLECameraOperationMode SetMode);
	void RotateNPC(float AxisValue);
	void ResetBackLevel();
	void OpenHumanAnimation();
	void MoveUpOuter(float AxisValue);
	void MoveUpCamera(float AxisValue);
	void MoveRightOuter(float AxisValue);
	void MoveRightCamera(float AxisValue);
	void MoveForwardOuter(float AxisValue);
	void MoveForwardCamera(float AxisValue);
	void LookUpCamera(float AxisValue);
	void InitAtSceneReset();
	void GetContinuousPlayMode(enum class ETTLEContinuousPlayMode* OutMode);
	void GetCameraMode(enum class ETTLECameraOperationMode* OutMode);
	void FaceUpdateCheck();
	void DecideDebugMenu(struct FTTLDebugMenuFolder& Folder, int32 Index);
	void CreateSubLevelInstance(class FName LevelName, bool* OutSuccess, class ULevelStreamingKismet** SubLevel);
	void ChangeMoveSpeed(int32 AddIndex);
	void ChangeMoveOuterMode();
	void ChangeGenderCheck();
	void BodyUpdateCheck();
	void AnimationPauseAndRestart();
	void AdjustNPCPosition();
	void AdjustCameraPosition();
};

// 0x10 (0x640 - 0x630)
// Class DXM.TTLTestKeyboardScene
class ATTLTestKeyboardScene : public ATTLMenuSceneBase
{
public:
	class ATTLInlineKeyboardActor*               PInlineKeyboardActor;                              // 0x630(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2913[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLTestKeyboardScene* GetDefaultObj();

	void KeyboardClosed(const class FString& InputText, bool IsCancel);
	bool Destoroy_InlineKeyboardBP();
	void CreateKeyboard();
	bool Create_InlineKeyboardBP();
};

// 0x7F0 (0xF30 - 0x740)
// Class DXM.TTLTestModelShootCamera2Pawn
class ATTLTestModelShootCamera2Pawn : public ACharacter
{
public:
	float                                        CameraMoveSpeed;                                   // 0x740(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraTurnRate;                                    // 0x744(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraFOV;                                         // 0x748(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              ModelRotationOverwrite;                            // 0x74C(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TArray<class UAnimSequenceBase*>             AnimationList;                                     // 0x758(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        SaveDataNum;                                       // 0x768(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2916[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ATTLCharacterCommon>       Class_Outer;                                       // 0x770(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETTLETestModelShootActorType      CurrenModelType;                                   // 0x778(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2917[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLDebugMenuController*               DebugMenuActor;                                    // 0x780(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ATTLDebugMenuController>   Class_DebugMenu;                                   // 0x788(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           UiWidget;                                          // 0x790(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                ModelActor;                                        // 0x798(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsTurnCamera;                                      // 0x7A0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2918[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCameraComponent*                      UICamera;                                          // 0x7A8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLUIArsenalAssembleComponent*        ArsenalAssembleComponent;                          // 0x7B0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2919[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            StartTransform;                                    // 0x7C0(0x30)(BlueprintVisible, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FTransform                            SpawnActorTransform;                               // 0x7F0(0x30)(BlueprintVisible, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FTTLPlayerAssembleInfo                CurrentAssembleInfo;                               // 0x820(0x640)(BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FTransform                            CurrentModelTransform;                             // 0xE60(0x30)(BlueprintVisible, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UAnimMontage*                          OuterWaitMontage;                                  // 0xE90(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class FString>                        EnemyPathList;                                     // 0xE98(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class FString>                        EnemyScalingWithRespawnExclusionList;              // 0xEA8(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UTTLBufferReadWriter*                  BufferRW;                                          // 0xEB8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_291A[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                FloorActor;                                        // 0xED8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                PreviousModelActor;                                // 0xEE0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_291B[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               SpawnModelVector;                                  // 0xF00(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_291C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<float>                                EnemyScaleArray;                                   // 0xF10(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_291D[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLTestModelShootCamera2Pawn* GetDefaultObj();

	void StopOuterAnimBP();
	class ATTLCharacterCommon* SpawnOuterCharacterBP(enum class ETTLEHumanGenderType Gender, struct FTTLHumanCustomPartsInfo& OuterCustomInfo);
	void SpawnActor(enum class ETTLETestModelShootActorType Type);
	void ShowDebugText(class FText Text);
	void SetEnemyCustomDepth();
	void RotateModel(float AxisValue);
	void ReSpawnArsenal();
	void PlayOuterAnimBP(class UAnimSequenceBase* Animation);
	void DecideDebugMenu(struct FTTLDebugMenuFolder& Folder, int32 Index);
	void CreateDebugMenu();
	void ChangeTurnMode();
	void CameraTurn(float AxisValue);
	void CameraMove(const struct FVector& MoveDirection, float AxisValue);
	void CameraLookUp(float AxisValue);
};

// 0x10 (0x398 - 0x388)
// Class DXM.TTLTestModelShootCameraPawn
class ATTLTestModelShootCameraPawn : public APawn
{
public:
	TArray<class UAnimationAsset*>               AnimationList;                                     // 0x388(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ATTLTestModelShootCameraPawn* GetDefaultObj();

};

// 0x10 (0x338 - 0x328)
// Class DXM.TTLTestModeObserver
class ATTLTestModeObserver : public AActor
{
public:
	TArray<struct FTTLActorWaitRespawn>          WaitActorList;                                     // 0x328(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ATTLTestModeObserver* GetDefaultObj();

	void AddActorToWaitList(class AActor* Actor);
};

// 0x70 (0x6A0 - 0x630)
// Class DXM.TTLTestPointRankingScene
class ATTLTestPointRankingScene : public ATTLMenuSceneBase
{
public:
	UMulticastDelegateProperty_                  OnTestPointRankingSceneGetScore;                   // 0x630(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	uint8                                        Pad_291F[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLTestPointRankingScene* GetDefaultObj();

	void PutScore(const class FString& Score);
	void OnGetScore(bool IsSuccee, class UGetRankData* RankDataContainer);
	void InitializeAndLogin(class UUserWidget* Widget);
	void GetRanking(const class FString& Value);
	void GetMyScore();
};

// 0x110 (0x740 - 0x630)
// Class DXM.TTLTestSerifScene
class ATTLTestSerifScene : public ATTLMenuSceneBase
{
public:
	class UTTLUILineChatListComponent*           LineChatListComponent;                             // 0x630(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           MissionBriefingWidget;                             // 0x638(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           TalkDemoWidget;                                    // 0x640(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           DemoWidget;                                        // 0x648(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           NPCWidget;                                         // 0x650(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           CurrenrtWidget;                                    // 0x658(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           BriefingWidget;                                    // 0x660(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           ConsoleWidget;                                     // 0x668(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           ListWidget;                                        // 0x670(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FTTLLineChatListInfo>          LineChatListInfo;                                  // 0x678(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2920[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLConsoleMsgParamRow>        ConsoleMsgParamArray;                              // 0x690(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FTTLMissionBriefingParamRow>   MissionBriefingParamArray;                         // 0x6A0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FTTLTalkDemoParamRow>          TalkDemoParamArray;                                // 0x6B0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FTTLEventMessageParamRow>      NPCParamArray;                                     // 0x6C0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FTTLEventParamRow>             EventParamArray;                                   // 0x6D0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FTTLEventMessageParamRow>      EventMessageParamArray;                            // 0x6E0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FTTLEventMessageParamRow>      DemoParamArray;                                    // 0x6F0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FTTLTestSerifMainMenuElement>  MainMenuArray;                                     // 0x700(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	enum class ETTLTestSerifShowTextType         CurrentListShowTextType;                           // 0x710(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2921[0x2F];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLTestSerifScene* GetDefaultObj();

	void RemoveWidgetFromViewport(class UUserWidget* Widget);
	void RemoveWidget(class UUserWidget* CurrentWidget);
	class UUserWidget* AddWidgetToViewport(TSubclassOf<class UUserWidget> NewWidgetClass);
	class UUserWidget* AddWidget(TSubclassOf<class UUserWidget> NewWidgetClass);
};

// 0x0 (0xF0 - 0xF0)
// Class DXM.TTLTestWeaponCheatComponent
class UTTLTestWeaponCheatComponent : public UActorComponent
{
public:

	static class UClass* StaticClass();
	static class UTTLTestWeaponCheatComponent* GetDefaultObj();

	void ChangeInfinity(class UTTLBasicStatusComponent* StatusComponent);
};

// 0x70 (0x3B0 - 0x340)
// Class DXM.TTLThrowLine
class ATTLThrowLine : public ATTLActor
{
public:
	TArray<class UStaticMeshComponent*>          Meshes;                                            // 0x340(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_2923[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLThrowLine* GetDefaultObj();

	void ShowThrowLine(const struct FVector& SourcePosition, const struct FVector& Direction, const struct FVector& GravityVec, float ThrowSpeed, float ShowDuration, bool IsOuter, bool UseCustomParam, float CustomIntervalDistance, float CustomMeshScale);
};

// 0x8 (0x348 - 0x340)
// Class DXM.TTLThunderSky
class ATTLThunderSky : public ATTLActor
{
public:
	bool                                         IsThunderAnimationPlayingState;                    // 0x340(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2926[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLThunderSky* GetDefaultObj();

	void UnregisterCallbackChangedOptionSetting();
	bool ResetPostProcessAndLightBP();
	void RegisterCallbackChangedOptionSetting();
	void OnChangedOptionSetting(struct FTTLOptionInfo& OptionInfo);
	bool IsThunderAnimationPlaying();
	int32 GetOptionSettingScreenBrightness();
	bool ChangeEventPostProcessBP(class APostProcessVolume* PostProcess);
	bool ChangeEventMainLightBP(class ALight* MainLight);
};

// 0x0 (0x328 - 0x328)
// Class DXM.TTLTitleScreen
class ATTLTitleScreen : public AActor
{
public:

	static class UClass* StaticClass();
	static class ATTLTitleScreen* GetDefaultObj();

};

// 0x48 (0x138 - 0xF0)
// Class DXM.TTLTotalParameterMenu
class UTTLTotalParameterMenu : public UActorComponent
{
public:
	TSubclassOf<class UUserWidget>               MenuTextClass;                                     // 0xF0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>               MenuGraphClass;                                    // 0xF8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UUserWidget*>                   MenuTextTotalSpeckList;                            // 0x100(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UUserWidget*>                   MenuTextPartsNameList;                             // 0x110(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_2928[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLTotalParameterMenu* GetDefaultObj();

	void ShowCompareTotalSpec(class UVerticalBox* MainSpecsArea, class UVerticalBox* DetailedSpecsArea, struct FTTLPartsTotalParam& CurrentParam, struct FTTLPartsTotalParam& NewParam);
	void SetupTotalSpec(class UVerticalBox* MainSpecsArea, class UVerticalBox* DetailedSpecsArea, const TArray<class FText>& CurrentArsenalTotalSpec);
	void SetupSpecGraph(class UTextBlock* GraphTitleArea, class UUserWidget* GraphArea, struct FTTLArsenaltotalGradeRow& Grade);
	void SetupPartsName(class UVerticalBox* PartsNameArea, const TArray<class FText>& CurrentArsenalPartsNames);
	void Initialize(class UGameInstance* GameInstance);
	struct FSlateColor GetNewParameterTextColor(float NewParameter, float CurrentParameter, bool IsSmallBetter);
	void GetCurrentPartsNameList(struct FTTLArsenalPartsInfoList& CurrentPartsList, TArray<class FText>* PartsNameList);
	void ConvertTotalParamToFText(struct FTTLPartsTotalParam& TotalParam, TArray<class FText>* TotalParamText);
};

// 0x120 (0x5E0 - 0x4C0)
// Class DXM.TTLTrainCargo
class ATTLTrainCargo : public ATTLPawn
{
public:
	class AActor*                                TargetActort;                                      // 0x4C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2929[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLTrainVFX                          TrainVFXContainer;                                 // 0x4E0(0xD0)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_292A[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               RotateLimit;                                       // 0x5BC(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CargoNumber;                                       // 0x5C8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_292B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLTrainCargo_Container>      ContainerArray;                                    // 0x5D0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ATTLTrainCargo* GetDefaultObj();

	void UpdateInfoByTrain(class ATTLTrainPawn* TrainHead);
	void StartMove(class ATTLTrainPawn* TrainHead);
	void InitCondition(class ATTLTrainPawn* TrainHead);
};

// 0x18 (0x340 - 0x328)
// Class DXM.TTLTrainContainer
class ATTLTrainContainer : public AActor
{
public:
	uint8                                        Pad_292C[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLTrainContainer* GetDefaultObj();

};

// 0x380 (0x840 - 0x4C0)
// Class DXM.TTLTrainPawn
class ATTLTrainPawn : public ATTLPawn
{
public:
	uint8                                        Pad_292F[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           ExplosionVFX;                                      // 0x4D8(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        ExplosionVFX_Playback;                             // 0x570(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class FName                                  ExplosionVFXSocketName;                            // 0x588(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  EyeMaterialParameterName;                          // 0x590(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTTLTrainVFX                          TrainVFXContainer;                                 // 0x598(0xD0)(Edit, BlueprintVisible, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLThrusterContainer                 ThrusterContainer;                                 // 0x668(0x180)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2930[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       DefaultRootComponent;                              // 0x7F0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class USkeletalMeshComponent> SkeltalMeshComponent;                              // 0x7F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLAlongSplinePathComponent*          AlongSPathComponent;                               // 0x800(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLBasicStatusComponent*              TrainBasicStatusComponent;                         // 0x808(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLAIActionComponent*                 AIComponent;                                       // 0x810(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLSmokeVFXComponent*                 SmokeVFXComponent;                                 // 0x818(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CargoLength;                                       // 0x820(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AccelerationForDead;                               // 0x824(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplosinoTimeByDead;                               // 0x828(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2931[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLTargetObjComponent*                TargetObjComponent;                                // 0x830(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2932[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLTrainPawn* GetDefaultObj();

	void StopThruster();
	void StopExplosionBeforeDeadEffect();
	void StartThruster();
	bool StartMove();
	void SetEyeEmissive(float Param);
	void SetAccelerationForThisAndChildren(float Accel);
	void PlayExplosionBeforeDeadEffect(class USkeletalMeshComponent* Mesh, int32 Index);
	void InitCondition();
	class UTTLAlongSplinePathComponent* GetSplinePathReference();
	void DoneDeadBP();
	void DoneDead();
	bool AddCargo(class ATTLTrainCargo* Child);
};

// 0x5B0 (0xA70 - 0x4C0)
// Class DXM.TTLTransportBase
class ATTLTransportBase : public ATTLPawn
{
public:
	uint8                                        Pad_2935[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLAIActionComponent*                 AIComponent;                                       // 0x4F0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimationAsset*                       AccelAnimation;                                    // 0x4F8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimationAsset*                       MoveAnimation;                                     // 0x500(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  MeshTag;                                           // 0x508(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETTLTransportStateType            InitTransportType;                                 // 0x510(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsGroundVFXInit;                                   // 0x511(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsGroundVFX;                                       // 0x512(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsDrawGroundVFX;                                   // 0x513(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2936[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           GroundVFX;                                         // 0x518(0x98)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        GroundVFXPlayback;                                 // 0x5B0(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	bool                                         IsUseAttachedGroundVFX;                            // 0x5C8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2937[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLTransportVFXContainer             GroundVFXContainer;                                // 0x5D0(0xE8)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	float                                        GroundCheckRayLengthToGround;                      // 0x6B8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2938[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLTransportVFXContainer             RotorVFX;                                          // 0x6C0(0xE8)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	float                                        RotatorStartTime;                                  // 0x7A8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2939[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RotatorStartTimeSpan;                              // 0x7B0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsDebugDrawRotor;                                  // 0x7B4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsExplosionActorSpawn;                             // 0x7B5(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_293A[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ATTLExplosionActor>        Death_ExplosionClass;                              // 0x7B8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsExplosionVFX;                                    // 0x7C0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_293B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLTransportVFXContainer>     ExplosionVFXArray;                                 // 0x7C8(0x10)(Edit, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	float                                        TimeForDeadInVisible;                              // 0x7D8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_293C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsExplosionByColliding;                            // 0x7E0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_293D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class AActor>>            HitActorArray;                                     // 0x7E8(0x10)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class AActor>>            NoHitActorArray;                                   // 0x7F8(0x10)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class AActor>>            NoHitActorParentArray;                             // 0x808(0x10)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	bool                                         IsAllyNoHit;                                       // 0x818(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsHitPlayerArsenal;                                // 0x819(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_293E[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AActor>                    PlayerArsenalClass;                                // 0x820(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTTLTransportVFXContainer             SurfaceVFXContainer;                               // 0x828(0xE8)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           MovingVFX;                                         // 0x910(0x98)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxPlayback                        MovingVFXPlayback;                                 // 0x9A8(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	bool                                         IsStopAtDead;                                      // 0x9C0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsUsedCheckHitEveryFrame;                          // 0x9C1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_293F[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SearchHitSpanFrame;                                // 0x9C4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SearchRadiusForHit;                                // 0x9C8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsDebugDrawSearchHit;                              // 0x9CC(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2940[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  Death_ExplodeParamName;                            // 0x9D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2941[0x98];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLTransportBase* GetDefaultObj();

	void StopSurfaceVFX();
	bool StartTransport(enum class ETTLTransportStartType StartType);
	void SetVFXEnable(enum class ETTLTransportVFXType VfxType, bool IsEnable);
	void SetRotateEnable(bool IsEnable);
	void SetNoDamage(bool IsEnable);
	bool SetAccleration(float Accel);
	void PlaySurfaceVFX(class USkeletalMeshComponent* Mesh);
	void OnDead();
	void OnComponentHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void InitUpdate_DeadBP();
};

// 0x0 (0x330 - 0x330)
// Class DXM.TTLTriggerBox
class ATTLTriggerBox : public ATriggerBox
{
public:

	static class UClass* StaticClass();
	static class ATTLTriggerBox* GetDefaultObj();

	void ShowCollision();
	void HideCollision();
};

// 0x0 (0x330 - 0x330)
// Class DXM.TTLTriggerSphere
class ATTLTriggerSphere : public ATriggerSphere
{
public:

	static class UClass* StaticClass();
	static class ATTLTriggerSphere* GetDefaultObj();

	void ShowCollision();
	void HideCollision();
};

// 0x17A0 (0x1890 - 0xF0)
// Class DXM.TTLUIArsenalAssembleComponent
class UTTLUIArsenalAssembleComponent : public UActorComponent
{
public:
	UMulticastDelegateProperty_                  OnStartArsenalSpawn;                               // 0xF0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         IsInitialized;                                     // 0x100(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2954[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLCharacter*                         ArsenalCharacter;                                  // 0x108(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLWeaponBase*                        PreviewWeapon;                                     // 0x110(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                PreviewWeaponRotateActor;                          // 0x118(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                     ArsenalAnim_DockWait;                              // 0x120(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLArsenalPartsInfoList              CurrentPartsList;                                  // 0x128(0x310)(BlueprintVisible, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTTLArsenalPartsInfoList              PreviewPartsList;                                  // 0x438(0x310)(BlueprintVisible, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTTLArsenalPaintInfo                  CurrentPaintInfo;                                  // 0x748(0x310)(BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTTLArsenalPaintInfo                  PreviewPaintInfo;                                  // 0xA58(0x310)(BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTTLArsenalPaintInfo                  StartPaintInfo;                                    // 0xD68(0x310)(BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ModelRotateSpeed;                                  // 0x1078(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2955[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLArsenalPaintComponent*             ArsenalPaintComponent;                             // 0x1088(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class ATTLUIMenuActorShadow>     ShadowActorClass;                                  // 0x1090(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2956[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            ArsenalShadowPosition;                             // 0x10A0(0x30)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class ATTLUIMenuActorShadow*                 ShadowActor;                                       // 0x10D0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                              PreviewWeaponRotation;                             // 0x10D8(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2957[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            WeaponSpawnPosition;                               // 0x10F0(0x30)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2958[0x740];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PartsChangeTimerThreshold;                         // 0x1860(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpawnCutoffDelay;                                  // 0x1864(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PreviewClassTimerThreshold;                        // 0x1868(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2959[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ArsenalWaitPauseSectionName;                       // 0x1870(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_295A[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLUIArsenalAssembleComponent* GetDefaultObj();

	void UpdatePartsPaintInfo_Coloring(int32 Area, class FName& ColorID, struct FLinearColor& OverrideNoneColor, struct FTTLArsenalPartsPaintInfo* UpdatePaintInfo);
	void UpdateCurrentPartsInfo(struct FTTLArsenalPartsInfo& ChangePartsInfo, enum class ETTLEPartMenuIndex PartMenuIndex);
	void UpdateCurrentPaintInfo();
	void UpdateCurrentAssemble(struct FTTLPlayerAssembleInfo& ClassInfo);
	void UpdateArsenalRotationForGazingParts(enum class ETTLEPartMenuIndex GazingPart);
	class ATTLWeaponBase* StartPreviewWeapon(struct FTTLArsenalPartsInfo& WeaponInfo);
	bool StartHighlightPartsBP(enum class ETTLEPartMenuIndex PartMenuIndex);
	class AActor* SpawnPreviewWeaponRotateActorBP(struct FTransform& Transform);
	class ATTLCharacter* SpawnArsenalCharacterBP(struct FTTLPlayerAssembleInfo& AssembleInfo);
	class ATTLCharacter* SpawnArsenalCharacter(struct FTransform& SpawnTransform, struct FTTLPlayerAssembleInfo& AssembleInfo, bool IsPaintPreview);
	void SetWeaponVisibility(bool IsVisible);
	void SetWeaponRackMeshVisibility(bool IsVisible);
	void SetPartsMeshVisibility(enum class ETTLEPartMenuIndex PartMenuIndex, bool IsVisible);
	void SaveStartPaintInfo();
	void RotateArsenal(float AxisValue);
	bool RestoreParts(enum class ETTLEPartMenuIndex PartMenuIndex);
	void RestorePaintInfo(bool IsRestoreStartPaintInfo, bool UseCutoff);
	void RestorePaintAlphaInfo();
	void ResetPaintInfo();
	void ResetArsenalMotion();
	bool RemoveWeapon(enum class ETTLEPartMenuIndex PartMenuIndex);
	void PreviewSurface(class FName& SurfaceName);
	void PreviewPartsColoringAll(int32 Area, class FName& ColorID, struct FLinearColor& OverrideNoneColor);
	void PreviewPartsColoring(enum class ETTLEPartMenuIndex Parts, int32 Area, class FName& ColorID, struct FLinearColor& OverrideNoneColor);
	void PreviewClassInfo(struct FTTLPlayerAssembleInfo& ClassInfo, bool IsPaintPreview, bool NoWait);
	void PreviewChangeDecal(enum class ETTLEPartMenuIndex Parts, class FName& DecalName);
	void OnFinishedCutoffAllSpawn(class AActor* TargetArsenal);
	void OnFinishedCutoffAllDestroy(class AActor* TargetArsenal);
	struct FTTLArsenalPartsInfo MakePunchInfo(struct FTTLArsenalPartsInfo& ArmInfo);
	bool IsGunArm(struct FTTLArsenalPartsInfo& ChangePartsInfo);
	bool InitializeBP();
	void Initialize(class FName UiArsenalSettingsRowName);
	void HighlightPartsDecalPlace(enum class ETTLEPartMenuIndex PartMenuIndex, bool IsHighlight);
	struct FTTLArsenalPaintInfo GetPreviewPaintInfo();
	TArray<class UMeshComponent*> GetPartsMeshList(enum class ETTLEPartMenuIndex PartMenuIndex, class ATTLCharacterCommon* Target);
	struct FTTLArsenalPartsInfoList GetCurrentPartsList();
	struct FTTLArsenalPartsInfo GetCurrentPartsInfo(enum class ETTLEPartMenuIndex Part);
	struct FTTLArsenalPaintInfo GetCurrentPaintInfo();
	struct FTransform GetArsenalSpawnTransform();
	void GetAndAssignArsenalPaintComponent();
	bool ExchangeWeapon(enum class ETTLEPartMenuIndex WeaponMenuIndex1, enum class ETTLEPartMenuIndex WeaponMenuIndex2);
	void EndPreviewWeapon();
	bool EndHighlightPartsBP();
	void DoRotateModel(float DeltaSeconds);
	float DestroyArsenalCharacter(bool UseCutoff);
	bool ChangeWeaponRackMesh(struct FTTLArsenalPartsInfo& ChangePartsInfo, int32 WeaponRackSlot, bool IsRemove);
	bool ChangeWeaponMeshBP(struct FTTLArsenalPartsInfo& ChangePartsInfom, enum class ETTLWeaponSlot WeaponSlot, bool IsRemove);
	void ChangePartsPaintInfo_Decal(struct FTTLArsenalPartsPaintInfo* UpdatePaintInfo, class FName& NewDecalID, class FName& PasteDecalPartsID, struct FTTLArsenalPartsPaintInfo& CurrentPaintInfo);
	bool ChangePartsMeshBP(struct FTTLArsenalPartsInfo& ChangePartsInfo);
	bool ChangeParts(struct FTTLArsenalPartsInfo& ChangePartsInfo, enum class ETTLEPartMenuIndex PartMenuIndex, int32 RepeatCount, bool Quick);
	void ChangeArsenalMotion(struct FTTLUIPreviewArsenalPoseRow& MotionInfo);
	enum class ETTLEUpdateAssembleCheckResult CanUpdateCurrentPartsInfo(struct FTTLArsenalPartsInfo& ChangePartsInfo, enum class ETTLEPartMenuIndex PartMenuIndex);
	void ArsenalPartsDisplay(enum class ETTLEPartMenuIndex Parts, bool IsDisplayAll);
};

// 0x7F0 (0x8E0 - 0xF0)
// Class DXM.TTLUIArsenalParamMenuComponent
class UTTLUIArsenalParamMenuComponent : public UActorComponent
{
public:
	bool                                         IsInitialized;                                     // 0xF0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_295F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWidgetAnimation*                      Anim_arrow_loop;                                   // 0xF8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_AttachmentCursorOn;                           // 0x100(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_AttachmentCursorOff;                          // 0x108(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           Widget_TopLayout;                                  // 0x110(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                          Widget_page_v01;                                   // 0x118(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           Widget_AttachmentGuide;                            // 0x120(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           Widget_PartsParam;                                 // 0x128(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                          Widget_page_v02;                                   // 0x130(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           Widget_Param_1;                                    // 0x138(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           Widget_prt_u00;                                    // 0x140(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           Widget_prt_u01;                                    // 0x148(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           Widget_prt_u02;                                    // 0x150(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_HomAsbSts01;                                 // 0x158(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_HomAsbSts02;                                 // 0x160(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_HomAsbSts00;                                 // 0x168(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2960[0x630];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UUserWidget*>                   Param1List;                                        // 0x7A0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UUserWidget*>                   Param2List;                                        // 0x7B0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UUserWidget*>                   TotalSimpleParamList;                              // 0x7C0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UUserWidget*>                   GradeParamList;                                    // 0x7D0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UUserWidget*>                   MetaDataTextList;                                  // 0x7E0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UUserWidget*>                   CurrentMetaDataTextList;                           // 0x7F0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UUserWidget*>                   PartsFeatureParamAreaList;                         // 0x800(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FTTLPartsParamArea>            PartsParamAreaList;                                // 0x810(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FTTLPartsParamArea>            CurrentPartsParamAreaList;                         // 0x820(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UImage*>                        AttachmentCursorList;                              // 0x830(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2961[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AutoInputParamInterval;                            // 0x860(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AutoInputTextInterval;                             // 0x864(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         UseParamAutoTextInput;                             // 0x868(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2962[0x27];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTTLProgressParamArea>         CurrentTotalParamProgressAreaList;                 // 0x890(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FTTLProgressParamArea>         CurrentCostParamProgressAreaList;                  // 0x8A0(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FLinearColor                          CostGaugeColorBase;                                // 0x8B0(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          CostGaugeColorRed;                                 // 0x8C0(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CostGaugeMaxRatio;                                 // 0x8D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TotalParamGaugeAlpha;                              // 0x8D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         UseTotalParamProgressBar;                          // 0x8D8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2963[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLUIArsenalParamMenuComponent* GetDefaultObj();

	void ShowMoneyTextArea(int32 PlayerCash, int32 CostCash, bool IsCompare, bool IsPayment);
	void ShowIceTokenTextArea(int32 PlayerToken, int32 CostToken, bool IsCompare);
	void ShowDevelopRequiredItem(class FName& DevelopPartsID);
	void SetupSecondaryParamArea(class UUserWidget* ParamArea, class FText& DividerText, class FText& Param1, class FText& Param2, struct FLinearColor& CompareColor, enum class ETTLEParamCompareDisplayType CompDisplayType, bool CanCompare);
	void SetupSecondaryFloatParamArea(class UUserWidget* ParamArea, class FText& DividerText, float Param1, float Param2, int32 FractionalDigits, enum class ETTLEParamCompareMode CompareMode, enum class ETTLEParamCompareDisplayType CompDisplayType, bool CanCompare, bool ShowZeroOrLess);
	void SetupOneParamArea(class UUserWidget* ParamArea, class FText& Text, class FText& Param1, class FText& Param2, struct FLinearColor& CompareColor, enum class ETTLEParamCompareDisplayType CompDisplayType, bool CanCompare);
	void SetupOneFloatParamArea(class UUserWidget* ParamArea, class FText& Title, float Param1, float Param2, int32 FractionalDigits, enum class ETTLEParamCompareMode CompareMode, enum class ETTLEParamCompareDisplayType CompDisplayType, bool CanCompare, bool ShowZeroOrLess);
	void SetParamTopTitleText(class UUserWidget* ParamArea, class FText& Title);
	void PlayAnimBP_ParamSlide();
	enum class ETTLEArsenalParamMenuState GetParamMenuState();
	class UUserWidget* CreateOneParamArea();
	void ChangeParamMenuState(enum class ETTLEArsenalParamMenuState NewState, bool IsCompare, bool WithOpenAnim);
};

// 0x90 (0x3D0 - 0x340)
// Class DXM.TTLUICameraControlActor
class ATTLUICameraControlActor : public ATTLActor
{
public:
	class UCameraComponent*                      CameraComp;                                        // 0x340(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USpringArmComponent*                   SpringArmComp;                                     // 0x348(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  StaticMeshComp;                                    // 0x350(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetComponent*                      BGWidgetComp;                                      // 0x358(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLAutoTextInputComponent*            AutoTextInputComp;                                 // 0x360(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_ArsenalName_IN;                          // 0x368(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2965[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInterface*                    DefaultBackgroundMaterial;                         // 0x380(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2966[0x48];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLUICameraControlActor* GetDefaultObj();

	void UpdateCameraRotation(const struct FRotator& Rotation, bool IsSmoothing);
	void UpdateBackgroundTransform(struct FTransform& NewTransform);
	void ShowBackgroundWidget(bool IsFirstShow, bool UseBlackBack);
	void ShowBackground();
	void ShowArsenalParameter(struct FTTLArsenalPartsInfoList& PartsInfoList);
	void SetArsenalShadowVisibility(bool IsVisible);
	void ResetBackgroundMaterial();
	void PreviouslyCameraSetting(class FName SceneName);
	void PlayBackgroundAnimation_Loop();
	void HideBackgroundWidget();
	void HideBackground();
	void HideArsenalParameter();
	void ChangeBackgroundUI(enum class ETTLEDockPreviewBGType BGType);
	void ChangeBackgroundMaterial(class FName MaterialPath);
};

// 0x1A0 (0x290 - 0xF0)
// Class DXM.TTLUICameraControllBase
class UTTLUICameraControllBase : public UActorComponent
{
public:
	class AActor*                                UICameraActor;                                     // 0xF0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USpringArmComponent*                   SpringArmComp;                                     // 0xF8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentCameraZoomScale;                            // 0x100(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               CurrentCameraShift;                                // 0x104(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_296B[0x174];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MoveGazingDelay;                                   // 0x284(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_296C[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLUICameraControllBase* GetDefaultObj();

	void UpdateGazingPoint(const struct FVector& NewPosition, float NewZoomLength, float NewZoomMin, float NewZoomMax);
	void StartUICameraControl(class AActor* CameraActor, bool IsUseBackground, bool IsFirstScene);
	void ShowBackgroundArsenalParam(struct FTTLArsenalPartsInfoList& PartsInfoList);
	void RotateCamera(const struct FRotator& Rotation, bool IsSmoothing);
	void ResetShift(bool IsSmoothing);
	void ResetGazingPoint();
	void ResetBackgroundMaterial();
	void InputZoomBP(bool IsZoomIn, bool IsTwice);
	void InputZoom(float AxisValue);
	void InputShift(const struct FVector& ShiftValue);
	void InputRotate(const struct FRotator& RotationValue);
	void Initialize(class FName& SceneName);
	void HideBackgroundArsenalParam();
	void GazeOuterPoint(const struct FTransform& OuterPosition, class FName DataKey);
	void GazeArsenalParts(const struct FTransform& ArsenalPosition, enum class ETTLEPartMenuIndex GazingPart, bool IsRotateCamera);
	void EndUICameraControl();
	void ChangeBackgroundUI(enum class ETTLEDockPreviewBGType BGType);
	void ChangeBackgroundMaterial(class FName MaterialPath);
	void CameraRotateReferenceGazePoint(const struct FRotator& RotationValue);
	void CalcCameraZoomScale(bool IsZoomIn);
};

// 0x28 (0x1C0 - 0x198)
// Class DXM.TTLUICharaEditItemScrComponent
class UTTLUICharaEditItemScrComponent : public UTTLScrollListComponentBase
{
public:
	uint8                                        Pad_296F[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UWidgetAnimation*                      Anim_CursorOn;                                     // 0x1A8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_CursorOff;                                    // 0x1B0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2970[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLUICharaEditItemScrComponent* GetDefaultObj();

	bool InitializeBP();
	void Initialize(class UUserWidget* LayoutWidget, int32 DisplayNum, int32 ListNumMax);
	void CreateList(int32 ReferenceIndex, bool CreateAtOnce);
	class UUserWidget* CreateButtonWidget(int32 Position);
};

// 0xA8 (0x1A0 - 0xF8)
// Class DXM.TTLUIChatSettingComponent
class UTTLUIChatSettingComponent : public UTTLActorComponent
{
public:
	class UUserWidget*                           Widget_Background;                                 // 0xF8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           Widget_Header;                                     // 0x100(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           Widget_Page0;                                      // 0x108(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           Widget_Page1;                                      // 0x110(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           Widget_Page2;                                      // 0x118(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           Widget_Page3;                                      // 0x120(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           Widget_Page4;                                      // 0x128(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           Widget_HUDCustom;                                  // 0x130(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           Widget_ChatDialog;                                 // 0x138(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           Widget_ChatLogVisibility_RectButton;               // 0x140(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           Widget_ChatLogVisibility_LRButton;                 // 0x148(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_ItemSelectButton00InAnimation;           // 0x150(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_ItemSelectButton00OutAnimation;          // 0x158(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_ItemSelectButton01InAnimation;           // 0x160(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_ItemSelectButton01OutAnimation;          // 0x168(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLPopUpBase>             ChatStgCmnPopUpClass;                              // 0x170(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLChatStgCmnPopUp*                   ChatStgCmnPopUp;                                   // 0x178(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATTLPopUpBase>             ChatStgPSPopUpclass;                               // 0x180(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATTLChatStgPSPopUp*                    ChatStgPSPopUp;                                    // 0x188(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLChatStgScrollListComponent*        ChatStgScrollListComponent;                        // 0x190(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLChatStgSrcScrollListComponent*     ChatStgSrcScrollListComponent;                     // 0x198(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLUIChatSettingComponent* GetDefaultObj();

	void UpdateSelectMessageSource(int32 Position);
	void ShowSelectPresetMessage(enum class ETTLChatMessageFor MessageFor);
	void ShowSelectMessageChangeMethod();
	void SetVisibilitySelectPresetMessage(enum class ESlateVisibility Visibility);
	void SetVisibilitySelectMessageSource(enum class ESlateVisibility Visibility);
	void SetVisibilitySelectChatLogVisibility(enum class ESlateVisibility Visibility);
	void SetValueSelectChatLogVisibility(int32 NewValue);
	void SetUpSelectMessageSource(enum class ETTLChatMessageFor MessageFor);
	void SetUpSelectChatLogVisibility();
	void SetModeSelectChatLogVisibility(int32 Mode);
	void SetGrayOutSelectMessageSource(bool IsGrayOut);
	void SetGrayOutSelectChatLogVisibility(bool IsGrayOut);
	bool InitializeBP(class UUserWidget* LayoutWidget);
	void Initialize(class UUserWidget* LayoutWidget);
	void HideSelectPresetMessage();
	void HideSelectMessageChangeMethod();
};

// 0x100A8 (0x10198 - 0xF0)
// Class DXM.TTLUIColorPickerComponent
class UTTLUIColorPickerComponent : public UActorComponent
{
public:
	uint8                                        Pad_2975[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnDecide;                                          // 0xF8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnCancel;                                          // 0x108(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnSEOk;                                            // 0x118(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnSECancel;                                        // 0x128(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnSESelect;                                        // 0x138(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2976[0x10010];                                 // Fixing Size After Last Property  [ Dumper-7 ]
	class UTexture2D*                            GradationTex;                                      // 0x10158(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                bg_t00_image;                                      // 0x10160(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                             DispTexArea;                                       // 0x10168(0x8)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                             MoveArea;                                          // 0x10170(0x8)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2977[0x15];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ETTLEColorPickerState             ColorPickerState;                                  // 0x1018D(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2978[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UUserWidget*                           RootWidget;                                        // 0x10190(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLUIColorPickerComponent* GetDefaultObj();

	void SetTitleText(class FText& Text);
	void SetState(enum class ETTLEColorPickerState State);
	void SetSliderBar(float Value, bool Active, bool Select);
	void SetSelectedCursorPos(struct FVector2D& Pos, bool Disp);
	void SetCursorPos(struct FVector2D& Pos, bool Disp);
	void Initialize(class UUserWidget* RootWidget);
	enum class ETTLEColorPickerState GetState();
	void Finalize();
};

// 0x10 (0x38 - 0x28)
// Class DXM.TTLUIButtonIcon
class UTTLUIButtonIcon : public UObject
{
public:
	class UImage*                                IconImage;                                         // 0x28(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2979[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLUIButtonIcon* GetDefaultObj();

	void SetVisible(enum class ESlateVisibility Visible);
	void SetKeyType(enum class ETTLUIButtonIconType buttonIconType);
	void Initialize(class UUserWidget* UserWidget, class FName IconWidgetName);
	class UImage* GetImage();
	enum class ETTLUIButtonIconType GetButtonIconType();
};

// 0x20 (0x48 - 0x28)
// Class DXM.TTLUIHomPartsBtn01
class UTTLUIHomPartsBtn01 : public UObject
{
public:
	class UUserWidget*                           TopUserWidget;                                     // 0x28(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UTTLUIButtonIcon*>              ButtonIconArray;                                   // 0x30(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class UTextBlock*                            TextBlock;                                         // 0x40(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLUIHomPartsBtn01* GetDefaultObj();

	void SetVisible(enum class ESlateVisibility Visible);
	void SetText(class FText Text);
	void SetKeyVisible(enum class ETTLUIHomPartsBtn01BtnType buttonType, enum class ESlateVisibility Visible);
	void SetKeyType(enum class ETTLUIHomPartsBtn01BtnType buttonType, enum class ETTLUIButtonIconType IconType);
	void Initialize(class UUserWidget* UserWidget, class FName btnWidgetName);
	class UUserWidget* GetUserWidget();
	class UTextBlock* GetTextBlock();
	class UTTLUIButtonIcon* GetButtonIcon(enum class ETTLUIButtonIconType buttonType);
};

// 0x40 (0x68 - 0x28)
// Class DXM.TTLUIHomPartsTop00
class UTTLUIHomPartsTop00 : public UObject
{
public:
	class UUserWidget*                           TopWidget;                                         // 0x28(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UTTLUIHomPartsBtn01*>           ButtonArray;                                       // 0x30(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class UTextBlock*                            TitleText;                                         // 0x40(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            HeadlineText;                                      // 0x48(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidget*                               Headline;                                          // 0x50(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidget*                               Arrow0;                                            // 0x58(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidget*                               Arrow1;                                            // 0x60(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLUIHomPartsTop00* GetDefaultObj();

	void SetVisible(enum class ESlateVisibility Visible);
	void SetTitleText(class FText Text);
	void SetHeadlineText(class FText Text);
	void SetButtonParamArray(const TArray<struct FTTLUIHomPartsTop00_ButtonParam>& buttonParamArray);
	void SetButtonParam(enum class ETTLUIButtonIconType IconType, class FText Text);
	void Initialize(class UUserWidget* UserWidget, class FName WidgetName);
};

// 0x0 (0x28 - 0x28)
// Class DXM.TTLUICommonWidget
class UTTLUICommonWidget : public UObject
{
public:

	static class UClass* StaticClass();
	static class UTTLUICommonWidget* GetDefaultObj();

};

// 0x78 (0xA0 - 0x28)
// Class DXM.TTLUICursorStorageManager
class UTTLUICursorStorageManager : public UObject
{
public:
	uint8                                        Pad_297C[0x78];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLUICursorStorageManager* GetDefaultObj();

	void SetSceneIndexBeforeShop(int32 SceneIndex);
	void SetSceneIndexBeforeDock(int32 SceneIndex);
	void SetPlayerCharacterTransformBeforeTestMode(struct FTransform& Transform);
	void SetInfoForMissionSelect2Reproduction(struct FTTLMissionSelect2ReproductionInfo& Info);
	void OpenMissionSelect();
	void OpenDockFromMissionSelect();
	bool IsOpenDockFromMissionSelect();
	int32 GetSceneIndexBeforeShop();
	int32 GetSceneIndexBeforeDock();
	struct FTransform GetPlayerCharacterTransformBeforeTestMode();
	struct FTTLMissionSelect2ReproductionInfo GetInfoForMissionSelect2Reproduction();
};

// 0x0 (0x360 - 0x360)
// Class DXM.TTLUICustomRichTextBlock
class UTTLUICustomRichTextBlock : public URichTextBlock
{
public:

	static class UClass* StaticClass();
	static class UTTLUICustomRichTextBlock* GetDefaultObj();

	class FText GetText();
};

// 0x18 (0x220 - 0x208)
// Class DXM.TTLUIDrawLinesWidget
class UTTLUIDrawLinesWidget : public UUserWidget
{
public:
	uint8                                        Pad_297D[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LineThickness;                                     // 0x218(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_297E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLUIDrawLinesWidget* GetDefaultObj();

};

// 0x48 (0x250 - 0x208)
// Class DXM.TTLUIDrawPolygonWidget
class UTTLUIDrawPolygonWidget : public UUserWidget
{
public:
	TArray<float>                                VerticesValue;                                     // 0x208(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        MinPolygonSize;                                    // 0x218(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsVisibleSurface;                                  // 0x21C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_297F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          PolygonColor;                                      // 0x220(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsVisibleEdgeLines;                                // 0x230(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2980[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        EdgeLineThickness;                                 // 0x234(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          EdgeColor;                                         // 0x238(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLUIDrawPolygonWidget*               PThisCopy;                                         // 0x248(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLUIDrawPolygonWidget* GetDefaultObj();

	void UpdateVertexValueList(TArray<float>& VertexValueList);
	void SetVertexValue(int32 VertexIndex, float VertexValue);
};

// 0x20 (0x110 - 0xF0)
// Class DXM.TTLUIFooterPageIndexComponent
class UTTLUIFooterPageIndexComponent : public UActorComponent
{
public:
	class UUserWidget*                           WidgetCmnPartsPc00;                                // 0xF0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UUserWidget*>                   WidgetCmnPartsPc01List;                            // 0xF8(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2981[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLUIFooterPageIndexComponent* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class DXM.TTLUIFunctionLibrary
class UTTLUIFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UTTLUIFunctionLibrary* GetDefaultObj();

	struct FVector2D TransformPointFromPaintContext(struct FPaintContext& Context, struct FVector2D& Point);
	void StopWidgetAnimation(class UUserWidget* Widget, const class FString& AnimationName);
	void ShowAttachmentSlotCursot(class UUserWidget* Widget_HomAsbIcon00, int32 Cursor, class UWidgetAnimation* InAnim, class UWidgetAnimation* OutAnim);
	void SetWidgetVisibility(class FName& TargetName, class UUserWidget* ParentWidget, enum class ESlateVisibility& NewVisibility);
	void SetWidget_TimeLimit(class UUserWidget* Widget_MsnSelectCount00, const struct FTimespan& CloseTime);
	void SetWidget_RankTextureAndName(class FName& RankID, class UUserWidget* TargetWidget, class FName& UImageName, class FName& UTextBlockName);
	void SetWidget_Parts(enum class ETTLPartsType& PartsType, class FName& PartsID, class UUserWidget* TargetWidget, class FName& UImageName, class FName& UTextBlockName, class FName& UImageNewIconName, bool& IsNew);
	void SetWidget_MsnSelectCount00(class UUserWidget* Widget_MsnSelectCount00, bool IsInEffect, const struct FTimespan& CloseTime, int32 LimitPlayCount);
	void SetWidget_MsnResultIcon00(class UUserWidget* Widget_MsnResultIcon00, enum class ETTLEMissionGoalIconType IconType);
	void SetWidget_MsnMainParts00(class UUserWidget* Widget_MsnMainParts00, bool IsMain, bool IsClear, class FText& Text);
	void SetWidget_MissionGoalIcon(class UUserWidget* ParentWidget, class FName CheckIconName, class FName IconName, bool IsFinished, bool IsMainGoal);
	void SetWidget_LimitPlayCount(class UUserWidget* Widget_MsnSelectCount00, int32 Count);
	void SetWidget_HomAsbTitle00(class UUserWidget* Widget_HomAsbTitle00, class FText& Title, class FText& Subtitle);
	void SetWidget_HomAsbMny00(class UUserWidget* Widget_HomAsbMny00, class FText& Title, int32 Money, bool IsIceToken, bool UseCompareColor, int32 CurrentMoney);
	void SetWidget_HomAsbGauge00(class UUserWidget* Widget_HomAsbGauge00, class FText Title, float PercentageValue);
	void SetWidget_Headline(class UUserWidget* HeadlineArea, class FText& HeadlineText);
	void SetWidget_Decoration(enum class ETTLEDecorationInfoType& DecoType, struct FTTLDecorationNewFlag& DecoNewFlagInfo, class UUserWidget* TargetWidget, class FName& UImageName, class FName& UTextBlockName, class FName& UImageNewIconName, bool IsTrialMode);
	void SetWidget_AttachmentSlotByPartsInfo(class UUserWidget* Widget_HomAsbIcon00, struct FTTLArsenalPartsInfo& ArsenalPartsInfo);
	void SetWidget_AttachmentSlot(class UUserWidget* Widget_HomAsbIcon00, const TArray<class FName>& AttachmentIDList);
	void SetWidget_AttachmentIcon(class UUserWidget* Widget_HomAsbIcon05, class FName AttachmentID, bool IsGrayOut);
	void SetWidget_AllGoalIcons(class UUserWidget* WMainGoal, class UUserWidget* WSubGoal1, class UUserWidget* WSubGoal2, class UUserWidget* WSubGoal3, struct FTTLMissionProgressInfo& MissionProgressInfo);
	void SetTextForUTextBlock(class FName& UTextBlockName, class UUserWidget* ParentWidget, class FText Text, enum class ETTLEEmptyTextMode EmptyMode, bool IsUseIconImage);
	void SetSliderValue(class FName& USliderName, class UUserWidget* ParentWidget, int32 CurrentValue, int32 MaxValue);
	void SetSliderCursorActiveState(class FName& USliderName, class UUserWidget* ParentWidget, bool IsActive);
	void SetProgressBarValue(class FName& UProgressBarName, class UUserWidget* ParentWidget, float ProgressValue);
	void SetObjectForUImage(class FName& UImageName, class UUserWidget* ParentWidget, class UObject* Object, enum class ESlateVisibility& NullImgVisibility);
	void SetMaterialForUImage(class FName& UImageName, class UUserWidget* ParentWidget, class UMaterialInterface* Material, enum class ESlateVisibility& NullImgVisibility);
	void SetImageSizeForUImage(class FName& UImageName, class UUserWidget* ParentWidget, struct FVector2D& ImageSize);
	void SetImageMaterialVectorParam(class FName& UImageName, class UUserWidget* ParentWidget, class FName& VectorParamName, struct FLinearColor& Value);
	void SetImageMaterialTextureParam(class FName& UImageName, class UUserWidget* ParentWidget, class FName& TextureParamName, class UTexture2D* SourceTexture);
	void SetImageMaterialScalarParam(class FName& UImageName, class UUserWidget* ParentWidget, class FName& ScalarParamName, float Value);
	void SetImageForUImage(class FName& UImageName, class UUserWidget* ParentWidget, class UTexture2D* Texture, enum class ESlateVisibility& NullImgVisibility);
	void RemoveWidgetFromViewport(class UUserWidget* Widget);
	float PlayWidgetAnimation(class UUserWidget* Widget, const class FString& AnimationName, bool IsLoop, bool IsReverse);
	void LogDateTime(const struct FDateTime& DateTime, bool IsShowLog);
	bool IsWidgetVisible(class FName& TargetName, class UUserWidget* ParentWidget);
	bool IsWidgetInViewport(class UUserWidget* Widget);
	bool IsPIEMode(class UObject* WorldContextObj);
	void InitializeNotifyListItem(class UUserWidget* Widget, struct FTTLMainMenuNotificationInfo& Notify);
	struct FVector2D GetWidgetViewportPosition(class UObject* WorldContextObj, class UWidget* Widget);
	class UWidgetAnimation* GetWidgetAnimation(TSubclassOf<class UUserWidget> WidgetClass, class FName Name);
	struct FDateTime GetUTCTokyoTime(const struct FDateTime& ServerTime);
	class UClass* GetUserWidgetClass(class UUserWidget* SourceWidget);
	class FText GetUnknownText();
	class FString GetUISettingStringValue(class FName& SettingID);
	int32 GetUISettingIntValue(class FName& SettingID);
	float GetUISettingFloatValue(class FName& SettingID);
	struct FTTLUITopMenuParamRow GetTopMenuParam();
	class FText GetTextFromUTextBlock(class FName& UTextBlockName, class UUserWidget* ParentWidget);
	float GetSliderValue(class FName& USliderName, class UUserWidget* ParentWidget);
	class FName GetRankIDFromPoint(int32 PointValue);
	struct FLinearColor GetProgressBarColor(class FName& UProgressBarName, class UUserWidget* ParentWidget);
	class FText GetPlayerTitle(class FName TitleID);
	class UTexture2D* GetPlayerRankTexture(class FName RankID);
	class FText GetPlayerRankName(class FName RankID);
	class FText GetPlayerName(class UObject* World);
	class UTexture2D* GetPlayerEmblem(class FName EmblemID);
	class FText GetPercentageText2(float& DividedNum, float& DivideNum, bool WithUnit);
	class FText GetPercentageText(float& Decimal, bool WithUnit);
	class FText GetPartsMenuIndexText(enum class ETTLEPartMenuIndex MenuIndex);
	class UTexture2D* GetPartsCategoryIconForPlaylog(enum class ETTLPartsType& Category, bool IsLeft, bool IsRack);
	class UTexture2D* GetPartsCategoryIcon(enum class ETTLPartsType& Category);
	class UTexture2D* GetPartsCategoryBlackIcon(enum class ETTLPartsType& Category);
	struct FVector2D GetLocalSizeFromPaintContext(struct FPaintContext& Context);
	class UTexture2D* GetLaboratoryCategoryIcon(enum class ETTLEHumanSurgeryPoint& Category);
	class FText GetKeyTypeActionText(enum class ETTLOptionKeyConfigKeyType KeyType);
	class FText GetKeyTextByKeyConfig(enum class ETTLOptionKeyConfigKeyType KeyType, class UObject* WorldContext, bool IsUseIconImage);
	class FText GetKeyInputText(enum class ETTLEInputType KeyType);
	class UMaterialInstanceDynamic* GetImageMaterialInstanceDynamic(class FName& UImageName, class UUserWidget* ParentWidget);
	class FText GetIceFlavorText(class FName IceFlavorID);
	class FString GetHighResTransparencyShotCommand(int32 Resolution);
	enum class ESlateVisibility GetHiddenInE3Mode(class UObject* WorldContextObj, enum class ESlateVisibility HiddenType);
	class FText GetFacilityNameText(enum class ETTLEMainMenuFacilityType Facility);
	class FText GetEmptyText();
	class FText GetDifficultyText(enum class ETTLEMissionDifficulty Difficulty);
	uint32 GetDataTableItemIndex(const class FString& Path, class FName ID);
	class FName GetDataTableItemID(const class FString& Path, int32 Index);
	class FText GetCombinedText(class FText& Text1, class FText& Text2);
	class FText GetBattleStageName(class FName StageID);
	class FText GetAttachmentParameterText(enum class ETTLEAttachmentParameterCategory& ParameterCategory);
	class FText FormatTextKeyInputTagTable(class FText& SourceText, class UObject* WorldContext, bool IsUseIconImage);
	class FText FormatTextByRichTextTagTable(class FText& SourceText);
	class UWidgetAnimation* FindWidgetAnimtaion(class UUserWidget* Widget, const class FString& AnimationName);
	class UUserWidget* DuplicateUUserWidget(class UUserWidget* SourceWidget);
	uint8 ConvertTitleIDForIndex(class FName TitleID);
	uint64 ConvertPointValueToScoreNum(int32 PointValue);
	uint16 ConvertPartIDForIndex(class FName PartsID, enum class ETTLPartsType PartsType);
	class FName ConvertLevelNameToMissionID(class FName LevelName);
	class FName ConvertIndexForTitleID(uint8 Index);
	class FName ConvertIndexForPartID(uint16 Index, enum class ETTLPartsType PartsType);
	class FName ConvertIndexForDecalID(uint8 Index);
	class FName ConvertIndexForColorID(uint16 Index);
	class FName ConvertIndexForAttachmentID(uint8 Index, enum class ETTLPartsType PartsType);
	uint8 ConvertDecalIDForIndex(class FName DecalID);
	uint16 ConvertColorIDForIndex(class FName ColorID);
	uint8 ConvertAttachmentIDForIndex(class FName AttachmentID, enum class ETTLPartsType PartsType);
	void ChangeTextColorForUTextBlock(class FName& UTextBlockName, class UUserWidget* ParentWidget, struct FLinearColor& Color);
	void ChangeProgressBarColor(class FName& UProgressBarName, class UUserWidget* ParentWidget, struct FLinearColor& Color);
	void ChangeImageTintColorForUImage(class FName& UImageName, class UUserWidget* ParentWidget, struct FLinearColor& Color);
	void ChangeImageColorForUImage(class FName& UImageName, class UUserWidget* ParentWidget, struct FLinearColor& Color);
	int32 Calc_NewCursor(int32 CurrentCursor, int32 CursorMax, int32 Offset, int32 RepeatCount);
	void AddWidgetToViewport(class UUserWidget* Widget, enum class ETTLUIPriority Priority);
	class FText AddPercentageText(class FText& SourceText);
	class UPanelSlot* AddChildForUPanelWidget(class FName& UPanelWidgetName, class UUserWidget* PanelParentWidget, class UWidget* ChildWidget);
};

// 0x40 (0x130 - 0xF0)
// Class DXM.TTLUIHeaderComponent
class UTTLUIHeaderComponent : public UActorComponent
{
public:
	bool                                         IsInitialized;                                     // 0xF0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_29C5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UUserWidget>               Class_KeyAssign;                                   // 0xF8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           Widget_HeaderTop;                                  // 0x100(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UUserWidget*>                   Widget_KeyAssignList;                              // 0x108(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UUserWidget*>                   Widget_CreatedKAList;                              // 0x118(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_29C6[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLUIHeaderComponent* GetDefaultObj();

	void SwitchKeyAssignVisibility(enum class ETTLEKeyAssignArea Area, bool IsVisible);
	void SwitchHeaderVisibility(bool IsVisible);
	void SetText_Title(class FText TitleText);
	void SetText_SubTitle(class FText SubTitleText);
	void SetText_HelpText(class FText HelpText);
	void SetKeyAssign(enum class ETTLEKeyAssignArea Area, class FText Description, enum class ETTLKeyAssignIcon KeyAssign1, enum class ETTLKeyAssignIcon KeyAssign2, bool IsVisiblePlus);
	void ResetKeyAssign();
	void Initialize(class UUserWidget* HeaderWidget);
	void AddKeyAssign(class FText Description, enum class ETTLKeyAssignIcon KeyAssign1, enum class ETTLKeyAssignIcon KeyAssign2, bool IsVisiblePlus);
};

// 0x170 (0x260 - 0xF0)
// Class DXM.TTLUIIceCreamShopComponent
class UTTLUIIceCreamShopComponent : public UActorComponent
{
public:
	class UUserWidget*                           Widget_TopWidget;                                  // 0xF0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            Widget_TopComboHeadlineText;                       // 0xF8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                Widget_TopCornImage;                               // 0x100(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            Widget_TopCornDescriptionText;                     // 0x108(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            Widget_TopCornHeadlineText;                        // 0x110(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                Widget_TopFlavorImage;                             // 0x118(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            Widget_TopFlavorDescriptionText;                   // 0x120(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            Widget_TopFlavorHeadlineText;                      // 0x128(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            Widget_TopNowCashText;                             // 0x130(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            Widget_TopResultCashText;                          // 0x138(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                Widget_TopCashIcon;                                // 0x140(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                Widget_TopResultCashIcon;                          // 0x148(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            Widget_TopNowTokenText;                            // 0x150(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            Widget_TopResultTokenText;                         // 0x158(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            Widget_TopNoTokenText;                             // 0x160(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                Widget_TopTokenIcon;                               // 0x168(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                Widget_TopResultTokenIcon;                         // 0x170(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           Widget_ListTopWidget;                              // 0x178(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           Widget_CharaTopWidget;                             // 0x180(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                Widget_CharaCornImage;                             // 0x188(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                Widget_CharaFlavorImage;                           // 0x190(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                Widget_CharaFlavorImage_Double;                    // 0x198(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            Widget_CharaMessageText;                           // 0x1A0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           Widget_StampTopWidget;                             // 0x1A8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UUserWidget*>                   Widget_StampStampWidgetArray;                      // 0x1B0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UTextBlock*                            Widget_StampHeadlineText;                          // 0x1C0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            Widget_StampCommentText;                           // 0x1C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           Widget_DialogTopWidget;                            // 0x1D0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_TopCharaInAnime;                         // 0x1D8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_TopListInAnime;                          // 0x1E0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_TopListOutAnime;                         // 0x1E8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_StampWindowIn;                           // 0x1F0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_StampPushStamp;                          // 0x1F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_CharaFlavorInAnime_01;                   // 0x200(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_CharaFlavorInAnime_02;                   // 0x208(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_CharaFlavorInAnime_03;                   // 0x210(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_CharaFlavorOutAnime;                     // 0x218(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_CharaFlavorInAnime_Double;               // 0x220(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_CharaFlavorOutAnime_Double;              // 0x228(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_CharaMessageAnime;                       // 0x230(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_CharaMessageAnime_In;                    // 0x238(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_CharaCornInAnime;                        // 0x240(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_CharaCornOutAnime;                       // 0x248(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_CharaLoopAnime;                          // 0x250(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_DialogInAnime;                           // 0x258(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLUIIceCreamShopComponent* GetDefaultObj();

	void StampDialogPressStamp(int32 StumpNum);
	void SetEnableTokenBuyButton(bool IsEnable);
	void SetEnableCashBuyButton(bool IsEnable);
	void SetDialogText(class UWidget* TextWidget, class FText Text);
	void SelectCursorBuyDialog(int32 Index);
	void PlayListOutAnime();
	void PlayListInAnime();
	void PlayCharaLoopAnime();
	void PlayCharaInAnime();
	void PlayCharaFlavorOutAnime();
	void PlayCharaFlavorInAnime(enum class EFTTLIceFlavorInAnime InAnime);
	void PlayCharaCornOutAnime();
	void PlayCharaCornInAnime();
	void PauseCharaLoopAnime();
	void OpenStampDialog(int32 StumpNum);
	void OpenBuyDialog(const struct FTTLIceCornParamRow& CornParam, const struct FTTLIceFlavorParamRow& FlavorParam);
	bool InitializeBP();
	void Initialize(class UUserWidget* LayoutWidget);
	void CloseStampDialog();
	void CloseDialog();
};

// 0xD8 (0x1C8 - 0xF0)
// Class DXM.TTLUILineChatComponent
class UTTLUILineChatComponent : public UActorComponent
{
public:
	class UWidgetAnimation*                      Animation_LeftIn;                                  // 0xF0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_LeftIn2;                                 // 0xF8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_RightIn;                                 // 0x100(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_RightIn2;                                // 0x108(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_SlideIn;                                 // 0x110(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_SlideOut;                                // 0x118(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_LeftWriteStart;                          // 0x120(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_LeftWriting;                             // 0x128(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_RightWriteStart;                         // 0x130(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_RightWriting;                            // 0x138(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           Widget_Top;                                        // 0x140(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           Widget_Left;                                       // 0x148(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           Widget_Right;                                      // 0x150(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           Widget_Root;                                       // 0x158(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidget*                               Widget_TabA;                                       // 0x160(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidget*                               Widget_TabB;                                       // 0x168(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UScrollBox*                            Widget_ScrollBox;                                  // 0x170(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUniformGridPanel*                     Widget_UniformGridPanel;                           // 0x178(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVerticalBox*                          Wideget_VerticalBox;                               // 0x180(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UWidget*>                       Widget_ChildArray;                                 // 0x188(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UWidget*>                       Widget_ChildArray2;                                // 0x198(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FTTLLineChatStruct>            ChildArray2;                                       // 0x1A8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	int32                                        CurrentCursor;                                     // 0x1B8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_29CC[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLUILineChatComponent* GetDefaultObj();

	void UpDownCursor(int32 Offset, int32 Count);
	bool UpDown(float Value);
	void SlideAnime(bool Slide_in);
	void SetTitleText(class FText Text);
	void SetDisp(enum class ESlateVisibility Visibile);
	void ScrollToEnd();
	void RemoveText3(bool Remove, int32 Index);
	void RemoveText2(int32 Index);
	void RemoveText(bool Remove);
	void Remove();
	bool IsSlideAnime();
	bool IsScrollEnd();
	bool IsDisp();
	bool InitializeBP();
	void Initialize(class UUserWidget* WidgetRoot);
	void InAnime(class UUserWidget* Widget, bool Right);
	void Finalize();
	void AddWidgetToGridSlot(int32 Position, class UUserWidget* Widget);
	class UUserWidget* AddText(class FText Text, class FName Speaker, bool RightTalk, bool InAnime, bool IsWriting);
};

// 0x20 (0x1B8 - 0x198)
// Class DXM.TTLUILineChatListComponent
class UTTLUILineChatListComponent : public UTTLScrollListComponentBase
{
public:
	class UUserWidget*                           Widget_RootWidget;                                 // 0x198(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FTTLLineChatListInfo>          List;                                              // 0x1A0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	int32                                        ListMax;                                           // 0x1B0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_29D3[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLUILineChatListComponent* GetDefaultObj();

	void UpdateList(TArray<struct FTTLLineChatListInfo>& ListInfo, int32 ReferenceIndex);
	void SetTitleText(class FText Text);
	void SetReadIcon_Sub(class UUserWidget* Widget, bool Disp);
	void SetReadIcon(int32 Target, bool Disp);
	void SetListCursor(int32 Target, bool Dispon);
	void SetButtonText(class UUserWidget* Widget, class FName& Speaker, const class FString& Msg);
	void SetButtonAlpha_Sub(class UUserWidget* Widget, float Alpha);
	void SetButtonAlpha(int32 Target, bool Dark);
	void SetButton(class FText& Header, TArray<struct FTTLLineChatListInfo>& ListInfo, int32 ReferenceIndex, int32 Max);
	bool InitializeBP();
	void Initialize(class UUserWidget* LayoutWidget, int32 DisplayNum, int32 ListNumMax);
};

// 0x8 (0x330 - 0x328)
// Class DXM.TTLUIMenuActorShadow
class ATTLUIMenuActorShadow : public AActor
{
public:
	class UWidgetComponent*                      ShadowWidgetComp;                                  // 0x328(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ATTLUIMenuActorShadow* GetDefaultObj();

	void ShowOuterShadow();
	void ShowArsenalShadow();
	void HideShadow();
};

// 0x40 (0x130 - 0xF0)
// Class DXM.TTLUIOnlRoomSearchCommponent
class UTTLUIOnlRoomSearchCommponent : public UActorComponent
{
public:
	TSubclassOf<class UUserWidget>               Class_SearchItemButtonWidget;                      // 0xF0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           Widget_CoopTopWidget;                              // 0xF8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           Widget_RoomListTopWidget;                          // 0x100(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            Widget_RoomListHeadlineText;                       // 0x108(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                Widget_CoopTopBackgroundImage;                     // 0x110(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           Widget_RoomDetailsTopWidget;                       // 0x118(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetAnimation*                      Animation_RoomWindowInAnime;                       // 0x120(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_RoomWindowOutAnime;                      // 0x128(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLUIOnlRoomSearchCommponent* GetDefaultObj();

	void SetBackgroundTexture(class FName FilePath);
	void PlayTopOutAnimation();
	void PlayTopInAnimation();
	void PlayRoomListOutAnimation();
	void PlayRoomListInAnimation(bool IsInit);
	bool InitializeBP();
	void Initialize(class UUserWidget* LayoutWidget, bool IsBGImageChange);
};

// 0x0 (0xF0 - 0xF0)
// Class DXM.TTLUIOnlStatusSettingComponent
class UTTLUIOnlStatusSettingComponent : public UActorComponent
{
public:

	static class UClass* StaticClass();
	static class UTTLUIOnlStatusSettingComponent* GetDefaultObj();

};

// 0x100 (0x1F0 - 0xF0)
// Class DXM.TTLUIOuterCharaCustomComponent
class UTTLUIOuterCharaCustomComponent : public UActorComponent
{
public:
	bool                                         IsInitialized;                                     // 0xF0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_29E0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLCharacter*                         OuterCharacter;                                    // 0xF8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTTLHumanEditComponent*                PHumanEditComponent;                               // 0x100(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ModelRotateSpeed;                                  // 0x108(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_29E1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimSequenceBase*                     HeadAnimeAssetMale;                                // 0x110(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimSequenceBase*                     HeadAnimeAssetFemale;                              // 0x118(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_29E2[0xAC];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ChangeHumanTimerThreshold;                         // 0x1CC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ATTLUIMenuActorShadow>     ShadowActorClass;                                  // 0x1D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               OuterShadowOffset;                                 // 0x1D8(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_29E3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ATTLUIMenuActorShadow*                 ShadowActor;                                       // 0x1E8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLUIOuterCharaCustomComponent* GetDefaultObj();

	class ATTLCharacter* SpawnOuterCharacterBP();
	class ATTLCharacter* SpawnOuterCharacter(enum class EUTTLUIOuterCharaSpawnType Type);
	void SetHidden(bool IsHidden);
	void InputRotateOuterCharacterBP(bool IsRight, bool IsTwice);
	void InputRotateOuterCharacter(bool IsRight);
	void InputAnalogRotateOuterCharacter(float AxisValue);
	bool InitializeBP();
	void Initialize();
	struct FTransform GetTransform(enum class ETTLEHumanGenderType Gender);
	void GetDecalParam(enum class ETTLEHumanDecalType Type, struct FVector4* OutValue);
	void DoRotateOuterCharacter(float DeltaSeconds, float InitialRotation);
	void DestroyOuterCharacter();
	void ChangeSexCharaEdit(enum class ETTLEHumanGenderType Gender, struct FTTLHumanCustomPartsInfo* EditPartsInfo, struct FTTLHumanCustomPartsInfo* RemodelPartsInfo);
	void ChangeModel(enum class ETTLEHumanPartsType Type, const class FString& Path, struct FTTLHumanCustomPartsInfo& PartsInfo);
	void ChangeMaterial(enum class ETTLEHumanMaterialType Type, const class FString& Path);
	void ChangeHuman(enum class ETTLEHumanGenderType Gender, struct FTTLHumanCustomPartsInfo& PartsInfo, bool WithDelayToChange);
	void ChangeDecalParam(enum class ETTLEHumanDecalType Type, const struct FVector4& Value);
	void ChangeDecal(enum class ETTLEHumanDecalType Type, const class FString& Path);
};

// 0x10 (0x218 - 0x208)
// Class DXM.TTLUIPage
class UTTLUIPage : public UUserWidget
{
public:
	class UTextBlock*                            CurrentPageTextBlock;                              // 0x208(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            MaxPageTextBlock;                                  // 0x210(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLUIPage* GetDefaultObj();

};

// 0x4D8 (0x5C8 - 0xF0)
// Class DXM.TTLUIPaintMenuComponent
class UTTLUIPaintMenuComponent : public UActorComponent
{
public:
	class UUserWidget*                           Widget_PaintTop;                                   // 0xF0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTTLArsenalPaintInfo                  CurrentPaintInfo;                                  // 0xF8(0x310)(BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_MainButtonON;                            // 0x408(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_MainButtonOFF;                           // 0x410(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_SubButtonOpen;                           // 0x418(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_SubButtonON;                             // 0x420(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_SubButtonOFF;                            // 0x428(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_ColorPickerBtnOn;                        // 0x430(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_ColorPickerBtnOff;                       // 0x438(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_HomDockBtn00;                                // 0x440(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_HomDockBtn01;                                // 0x448(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_HomPaintPlt01;                               // 0x450(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTTLDecorationDataManager*             DecorationDataManager;                             // 0x458(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_29F2[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLDockPaintScrollListComponent*      ScrollListComponent;                               // 0x468(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UTTLUIColorPickerComponent> ColorPickerComponent;                              // 0x470(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_29F3[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UUserWidget*>                   MainButtonsList;                                   // 0x488(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UUserWidget*>                   SubButtonsList;                                    // 0x498(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UUserWidget*>                   ColorPaletteButtonsList;                           // 0x4A8(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UUserWidget*>                   DecalEditMenuButtonsList;                          // 0x4B8(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_29F4[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UUserWidget*                           Widget_list_u00;                                   // 0x518(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           Widget_list_u01;                                   // 0x520(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           Widget_page_u00;                                   // 0x528(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVerticalBox*                          Widget_menu_v00;                                   // 0x530(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            Widget_txt_m00;                                    // 0x538(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           Widget_ka_u00;                                     // 0x540(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           Widget_ka_u01;                                     // 0x548(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           Widget_ka_u02;                                     // 0x550(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           Widget_ka_u03;                                     // 0x558(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_29F5[0x68];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLUIPaintMenuComponent* GetDefaultObj();

	enum class ETTLEPaintMenuInputAction YButton();
	enum class ETTLEPaintMenuInputAction XButton();
	void UpdateListMenu();
	void UpdateCursor_DefaultColor();
	void UpdateCurrentPartsPaintInfo(struct FTTLArsenalPartsPaintInfo& PartsPaintInfo);
	void UpdateCurrentPaintInfo(struct FTTLArsenalPaintInfo& PaintInfo);
	void SwitchButton_SubCategory(class UUserWidget* Button, bool IsOn);
	void SwitchButton_MainCategory(class UUserWidget* Button, bool IsOn);
	void SwitchButton_ColorPalette(const struct FIntVector& buttonIndexVector, bool IsOn);
	void StartPaintMenu(enum class ETTLEPaintTopCategory TopCategory);
	void SetSortType(int32 Cursor_pos);
	void OnColorPickerDecidedColor();
	void OnColorPickerCanceled();
	enum class ETTLEPaintMenuInputAction LR2Button(int32 Offset, int32 RepeatCount);
	enum class ETTLEPaintMenuInputAction LR1Button(int32 Offset, int32 RepeatCount);
	void HighlightButton_ColorPalette(bool IsAllOff);
	class FText GetSubCategoryText(enum class ETTLEPaintSubCategory SubCategory);
	class FText GetMainCategoryText(enum class ETTLEPaintMainCategory MainCategory);
	class FName GetIDCurrentCursoredScrollList();
	enum class ETTLEPaintTopCategory GetCurrentTopCategory();
	enum class ETTLEPaintMenuComponentState GetCurrentPaintMenuState();
	class FName GetCurrentCursoredColorID();
	void EndOwnerScene();
	enum class ETTLEPaintMenuInputAction DecideButton();
	void CreateDecalListMenu(bool Is_defparts, class FName Defparts, int32 DefId);
	TArray<struct FTTLDecorationNewFlag> CreateDecalCategoryList(enum class ETTLEPaintSubCategory SubCategory);
	void ChangePaintMenuState(enum class ETTLEPaintMenuComponentState NewState);
	bool ChangeCursorUD(int32 Offset, int32 RepeatCount);
	bool ChangeCursorLStickUD(int32 Offset, int32 RepeatCount);
	bool ChangeCursorLStickLR(int32 Offset, int32 RepeatCount);
	bool ChangeCursorLR(int32 Offset, int32 RepeatCount);
	enum class ETTLEPaintMenuInputAction CancelButton();
	int32 Calc_NewCursor(int32 CurrentCursor, int32 CursorMax, int32 Offset, int32 RepeatCount, int32 CursorMin);
};

// 0x40 (0x68 - 0x28)
// Class DXM.TTLUIRankingButton00
class UTTLUIRankingButton00 : public UObject
{
public:
	class UUserWidget*                           Widget_TopWidget;                                  // 0x28(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            Widget_RankNumText;                                // 0x30(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                Widget_ClassIconImage;                             // 0x38(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                Widget_FaceImage;                                  // 0x40(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                Widget_RankIconImage;                              // 0x48(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                Widget_FriendIconImage;                            // 0x50(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            Widget_PlayerNameText;                             // 0x58(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            Widget_ScoreNumText;                               // 0x60(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLUIRankingButton00* GetDefaultObj();

};

// 0x38 (0x60 - 0x28)
// Class DXM.TTLUIRankingButton01
class UTTLUIRankingButton01 : public UObject
{
public:
	class UUserWidget*                           Widget_TopWidget;                                  // 0x28(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            Widget_RankNumText;                                // 0x30(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                Widget_ClassIconImage;                             // 0x38(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                Widget_FaceImage;                                  // 0x40(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                Widget_FriendIconImage;                            // 0x48(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            Widget_PlayerNameText;                             // 0x50(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            Widget_ScoreNumText;                               // 0x58(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLUIRankingButton01* GetDefaultObj();

};

// 0x848 (0x870 - 0x28)
// Class DXM.TTLUIRankingInitData
class UTTLUIRankingInitData : public UObject
{
public:
	uint8                                        Pad_29F6[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  RankID;                                            // 0x40(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  PlayerName;                                        // 0x48(0x18)(NativeAccessSpecifierPublic)
	class FName                                  EmblemID;                                          // 0x60(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLOtherPlayerLogInfo                PlayerLogInfo;                                     // 0x68(0x130)(NativeAccessSpecifierPublic)
	struct FTTLPlayerAssembleInfo                PlayerAssembleInfo;                                // 0x198(0x640)(NativeAccessSpecifierPublic)
	uint8                                        Pad_29F7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLHumanCustomPartsInfo              HumanCustomPartsInfo;                              // 0x7DC(0x94)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLUIRankingInitData* GetDefaultObj();

};

// 0x200 (0x2F0 - 0xF0)
// Class DXM.TTLUIRankingComponent
class UTTLUIRankingComponent : public UActorComponent
{
public:
	class UUserWidget*                           Widget_TopWidget;                                  // 0xF0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            Widget_TitleTitleText;                             // 0xF8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           Widget_PlayerTopWidget;                            // 0x100(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLUIRankingButton01*                 RankingPlayerInfo;                                 // 0x108(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                              Widget_ListOverlayWidget;                          // 0x110(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           Widget_TabTopWidget;                               // 0x118(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            Widget_TabTitleText;                               // 0x120(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            Widget_TabGlobalText;                              // 0x128(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            Widget_TabInternalText;                            // 0x130(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            Widget_TabFriendText;                              // 0x138(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                Widget_TabLIcon;                                   // 0x140(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                Widget_TabRIcon;                                   // 0x148(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           Widget_ListTopWidget;                              // 0x150(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UTTLUIRankingButton00*>         RankingButton00Array;                              // 0x158(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UTTLUIRankingButton01*>         RankingButton01Array;                              // 0x168(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class UTextBlock*                            Widget_ListNoData;                                 // 0x178(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           Widget_PageArrowUp;                                // 0x180(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           Widget_PageArrowDown;                              // 0x188(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetAnimation*                      Animation_PageArrowUp;                             // 0x190(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetAnimation*                      Animation_PageArrowDown;                           // 0x198(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_29F8[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UTTLUIRankingInitData*>         RankingDataArray;                                  // 0x1A8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_29F9[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class UTexture2D*, class FName>         RankTextureMapArray;                               // 0x1C0(0x50)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TMap<class UTexture2D*, class FName>         EmblemTextureMapArray;                             // 0x210(0x50)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UTexture2D*>                    OrderTextureArray;                                 // 0x260(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_29FA[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWidgetAnimation*                      Animation_TopInAnime;                              // 0x278(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_ListInAnime;                             // 0x280(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_Button00InAnime;                         // 0x288(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_Button00OutAnime;                        // 0x290(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_Button00WhiteAnime;                      // 0x298(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_Button00BlackAnime;                      // 0x2A0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_Button01InAnime;                         // 0x2A8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_Button01OutAnime;                        // 0x2B0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_Button01WhiteAnime;                      // 0x2B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_Button01BlackAnime;                      // 0x2C0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_TabGlobal;                               // 0x2C8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_TabInternal;                             // 0x2D0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_TabFriend;                               // 0x2D8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PaddingLeftOfLargeRanking;                         // 0x2E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PaddingLeftOfSmallRanking;                         // 0x2E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_29FB[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLUIRankingComponent* GetDefaultObj();

	void OnTopInAnimeFinish();
	bool InitializeBP();
	void Initialize(class UUserWidget* LayoutWidget);
	void HiddenUpArrowWidget();
	void HiddenDownArrowWidget();
};

// 0x0 (0x208 - 0x208)
// Class DXM.TTLUIResultAcquiredItems
class UTTLUIResultAcquiredItems : public UUserWidget
{
public:

	static class UClass* StaticClass();
	static class UTTLUIResultAcquiredItems* GetDefaultObj();

	void SetIsNoAquire(bool IsNoAquire);
};

// 0x1A0 (0x290 - 0xF0)
// Class DXM.TTLUIResultBattleLogComponent
class UTTLUIResultBattleLogComponent : public UActorComponent
{
public:
	class UUserWidget*                           WidgetMsnResultTop00;                              // 0xF0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_29FC[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class ETTLPartsType, class UUserWidget*> WidgetListMsnResultGraph02;                        // 0x110(0x50)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FTTLResultPartsCorruptLogTimeLineInfo> PartsCorruptLogTimeLineInfo;                       // 0x160(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_29FD[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BattleLogUnitTime;                                 // 0x178(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MissionMaxTimeMinute;                              // 0x17C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_29FE[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FLinearColor>                  WeaponLogColorList;                                // 0x1A0(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	int32                                        VisibleWeaponUsageLogNum;                          // 0x1B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WeaponUsageLogBarGraphMaxHeight;                   // 0x1B4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        VpAndStmLogBarGraphMaxHeight;                      // 0x1B8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          LineGraphColorVP;                                  // 0x1BC(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          LineGraphColorSTM;                                 // 0x1CC(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          BarGraphColorBullet;                               // 0x1DC(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          BarGraphColorLaser;                                // 0x1EC(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          BarGraphColorDamaged;                              // 0x1FC(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          BarGraphColorAttack;                               // 0x20C(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          BarGraphColorBoost;                                // 0x21C(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_29FF[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class ETTLPartsType, struct FLinearColor> PartsTypeColorList;                                // 0x240(0x50)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTTLUIResultBattleLogComponent* GetDefaultObj();

	void StartUpdateBattleData();
	void PlayBackgroundAnimLoop();
};

// 0x8 (0x210 - 0x208)
// Class DXM.TTLUIResultBG
class UTTLUIResultBG : public UUserWidget
{
public:
	class UWidgetAnimation*                      Animation_Loop;                                    // 0x208(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLUIResultBG* GetDefaultObj();

	void PlayWidgetAnimation();
};

// 0xB0 (0x2B8 - 0x208)
// Class DXM.TTLUIResultItem
class UTTLUIResultItem : public UUserWidget
{
public:
	class FName                                  Icon1Name;                                         // 0x208(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Icon2Name;                                         // 0x210(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Text1Name;                                         // 0x218(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Text2Name;                                         // 0x220(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TitleTextName;                                     // 0x228(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          WhiteTextColorActive;                              // 0x230(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          RedTextColorActive;                                // 0x240(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          BlueTextColorActive;                               // 0x250(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          YellowTextColorActive;                             // 0x260(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          WhiteTextColorInActive;                            // 0x270(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          RedTextColorInActive;                              // 0x280(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          BlueTextColorInActive;                             // 0x290(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          YellowTextColorInActive;                           // 0x2A0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETTLUIResultItemTextColor         TextColor1;                                        // 0x2B0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         TextActivity1;                                     // 0x2B1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETTLUIResultItemTextColor         TextColor2;                                        // 0x2B2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         TextActivity2;                                     // 0x2B3(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A03[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLUIResultItem* GetDefaultObj();

	void SetTitleText(class FText NewText, enum class ETTLUIResultItemTextColor NewColor);
	void SetText2(class FText NewText, enum class ETTLUIResultItemTextColor NewColor, bool NewActivity);
	void SetText1(class FText NewText, enum class ETTLUIResultItemTextColor NewColor, bool NewActivity);
	void SetIcon2(enum class ETTLResultIconType NewIconType);
	void SetIcon1(enum class ETTLResultIconType NewIconType);
};

// 0x70 (0x278 - 0x208)
// Class DXM.TTLUIResultPartsItemCategory
class UTTLUIResultPartsItemCategory : public UUserWidget
{
public:
	struct FLinearColor                          FlagItemColor;                                     // 0x208(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          PartsColor;                                        // 0x218(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          WeaponColor;                                       // 0x228(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          AttachmentColor;                                   // 0x238(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          PaintColor;                                        // 0x248(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          TitleColor;                                        // 0x258(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                BackgroundImage;                                   // 0x268(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            NameTextBlock;                                     // 0x270(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLUIResultPartsItemCategory* GetDefaultObj();

	void SetCategoryKind(enum class ETTLUIResultPartsItemCategoryKind CategoryKind);
	class UTextBlock* GetNameTextBlock();
	class UImage* GetBackgroundImage();
};

// 0x28 (0x230 - 0x208)
// Class DXM.TTLUIResultPartsItemGauge
class UTTLUIResultPartsItemGauge : public UUserWidget
{
public:
	class UTextBlock*                            TitleTextBlock;                                    // 0x208(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            CurrentValueTextBlock;                             // 0x210(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            AdditionalValueTextBlock;                          // 0x218(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UProgressBar*                          CurrentValueProgressBar;                           // 0x220(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UProgressBar*                          AfterValueProgressBar;                             // 0x228(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLUIResultPartsItemGauge* GetDefaultObj();

	class UTextBlock* GetTitleTextBlock();
	class UTextBlock* GetCurrentValueTextBlock();
	class UProgressBar* GetCurrentValueProgressBar();
	class UProgressBar* GetAfterValueProgressBar();
	class UTextBlock* GetAdditionalValueTextBlock();
};

// 0x18 (0x220 - 0x208)
// Class DXM.TTLUIResultPhase01
class UTTLUIResultPhase01 : public UUserWidget
{
public:
	int32                                        IncomeItemCountMax;                                // 0x208(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A04[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLUIResultPhase01* GetDefaultObj();

};

// 0x18 (0x108 - 0xF0)
// Class DXM.TTLUISaveLoadComponent
class UTTLUISaveLoadComponent : public UActorComponent
{
public:
	class UWidgetAnimation*                      Animation_In;                                      // 0xF0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_Out;                                     // 0xF8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           Widget_Cmn_save_top00;                             // 0x100(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTTLUISaveLoadComponent* GetDefaultObj();

	bool InitializeBP(class UUserWidget* SaveloadWidget);
	void Initialize(class UUserWidget* SaveloadWidget);
};

// 0x0 (0x88 - 0x88)
// Class DXM.TTLUISettings
class UTTLUISettings : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UTTLUISettings* GetDefaultObj();

};

// 0xF8 (0x1E8 - 0xF0)
// Class DXM.TTLUITopMenuComponent
class UTTLUITopMenuComponent : public UActorComponent
{
public:
	bool                                         IsInitialized;                                     // 0xF0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A0E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UUserWidget*                           Widget_MenuTop;                                    // 0xF8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_TopInAnime;                              // 0x100(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_TopOutAnime;                             // 0x108(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_TopInAnime_Ice;                          // 0x110(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Animation_TopOutAnime_Ice;                         // 0x118(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A0F[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UWidgetAnimation*                      Animation_MainButtonON;                            // 0x130(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_MainButtonOFF_0;                         // 0x138(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_MainButtonOFF_1;                         // 0x140(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_MainButtonLineON;                        // 0x148(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_MainButtonLineOFF;                       // 0x150(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_SubButtonOpen;                           // 0x158(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_SubButtonON;                             // 0x160(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Animation_SubButtonOFF;                            // 0x168(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_HomDockBtn02;                                // 0x170(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               Class_HomDockBtn03;                                // 0x178(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A10[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UUserWidget*>                   MainButtonsList;                                   // 0x188(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UUserWidget*>                   SubButtonsList;                                    // 0x198(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	int32                                        CurrentCursor_MainButtons;                         // 0x1A8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        CurrentCursor_SubButtons;                          // 0x1AC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ETTLETopMenuComponentState        State;                                             // 0x1B0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2A11[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UVerticalBox*                          Widget_menu;                                       // 0x1B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FTTLUITopMenuInitData>         TopMenuInitData;                                   // 0x1C0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2A12[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsCmnHomeTop00Mode;                                // 0x1E0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2A13[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLUITopMenuComponent* GetDefaultObj();

	void UpdateMainCursor(int32 NewCursor);
	bool TryOpenSubButtonsFromInitData();
	void SwitchButton_Sub(class UUserWidget* Button, bool IsOn);
	void SwitchButton_Main(class UUserWidget* Button, bool IsOn, int32 HelpTextIndex);
	void SetTitleText(class FText TitleText);
	float OutTopMenuButtons();
	bool OpenSubButtons(TArray<class FText>& buttonTextList);
	float InTopMenuButtons();
	void Initialize(class UUserWidget* TopMenuWidget);
	void GetCurrentCursor(enum class ETTLETopMenuComponentState* CursorState, int32* MainCursor, int32* SubCursor);
	void GetArrowIndexFromInitData(int32* ArrowIndex);
	void DecideButton(int32 AnimationType, bool IsHiddenHelpText);
	float CreateTopMenuButtonsFromInitData(TArray<struct FTTLUITopMenuInitData>& InitDataList, int32 StartCursorPos, int32 StartSubCursorPos);
	float CreateTopMenuButtons(TArray<class FText>& buttonTextList, TArray<class FText>& buttonHelpTextList, int32 StartCursorPos, int32 StartSubCursorPos);
	void CloseSubButtons();
	bool ChangeCursor(int32 Offset, int32 RepeatCount);
	void CancelButton();
	void AllButtonVisible();
	void AllButtonHidden(int32 IgnoredIndex);
};

// 0x8 (0x348 - 0x340)
// Class DXM.TTLUnlockFacilityActor
class ATTLUnlockFacilityActor : public ATTLActor
{
public:
	bool                                         IsIceUnlock;                                       // 0x340(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsLabUnlock;                                       // 0x341(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsOnlineUnlock;                                    // 0x342(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsOnlineSurvivalUnlock;                            // 0x343(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A14[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLUnlockFacilityActor* GetDefaultObj();

	void OnBaseMenuLoadFinished();
};

// 0xC0 (0x400 - 0x340)
// Class DXM.TTLWarningArea
class ATTLWarningArea : public ATTLActor
{
public:
	bool                                         IsClockwise;                                       // 0x340(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A24[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ACharacter*                            CurrentControlledCharacter;                        // 0x348(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ControlledTimeAreaOver;                            // 0x350(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ControlledTimeAreaSafe;                            // 0x354(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        QuickMoveTime;                                     // 0x358(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        QuickMoveDuration;                                 // 0x35C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BrakingDuration;                                   // 0x360(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BrakingPower;                                      // 0x364(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ForceControlStartLocation;                         // 0x368(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WarningDistance;                                   // 0x374(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WarningDistanceZ;                                  // 0x378(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         WithCountdown;                                     // 0x37C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A25[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AActor>                    CountdownPopupClass;                               // 0x380(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVector>                       SplineLocations;                                   // 0x388(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A26[0x68];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLWarningArea* GetDefaultObj();

	void StartForcedControl(class ACharacter* ControlledCharacter, bool IsDirectionXY);
	void SetWallVisibilitySub(bool IsVisible);
	void SetWallVisibility(bool IsVisible);
	void Setup(class USplineComponent* SplineComp, class USplineComponent* SubSplineComp, float MinZ, float MaxZ, float Distance, bool DebugDraw);
	void SetSubSpline(class USplineComponent* SubSpline, class USplineComponent* BaseSpline, float Distance);
	void SetEnable(bool IsEnabled);
	void ProcessForcedControl(bool IsInsideXY, struct FVector& ToInsideDirectionXY, bool IsInsideZ, struct FVector& ToInsideDirectionZ, bool IsInsideXYEdge);
	void OnLevelLoadStarted();
	void OnEnableChanged(bool IsEnabled);
	void OnCountdownFinishedDelegate();
	bool IsModeCountdown();
	bool IsInsideZ(const struct FVector& Location);
	bool IsInsideSpline(const struct FVector& Location);
	bool IsControlEnabled();
	void FinishOutOfArea(class ATTLCharacterCommon* ControlledCharacter);
	void FinishForcedControl();
	void DebugDrawForEditor(float MinZ, float MaxZ);
	void DebugDraw(float MinZ, float MaxZ, struct FColor& Color, bool ForEditor);
	bool CheckInsideSafeAreaZ(struct FVector& Location, float Distance, struct FVector* ToInsideDirection, float* InsideDistance);
	bool CheckInsideSafeAreaXYZ(struct FVector& Location, float Distance, bool* IsInsideXY, struct FVector* ToInsideDirectionXY, bool* IsInsideZ, struct FVector* ToInsideDirectionZ);
	bool CheckInsideSafeAreaXY(struct FVector& Location, float Distance, struct FVector* ToInsideDirection, float* InsideDistance);
	void CancelWarp();
	bool CalcClockwise(TArray<struct FVector>& Locations);
};

// 0x10 (0x38 - 0x28)
// Class DXM.TTLWeaponAddTMPObject
class UTTLWeaponAddTMPObject : public UObject
{
public:
	uint8                                        Pad_2A27[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLWeaponAddTMPObject* GetDefaultObj();

};

// 0x30 (0x370 - 0x340)
// Class DXM.TTLWeaponBrokenFragment
class ATTLWeaponBrokenFragment : public ATTLActor
{
public:
	class UStaticMeshComponent*                  Mesh;                                              // 0x340(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           StaticMesh;                                        // 0x348(0x8)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RestLifeSeconds;                                   // 0x350(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A28[0x1C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLWeaponBrokenFragment* GetDefaultObj();

};

// 0x0 (0x88 - 0x88)
// Class DXM.TTLWeaponParam
class UTTLWeaponParam : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UTTLWeaponParam* GetDefaultObj();

};

// 0x388 (0x860 - 0x4D8)
// Class DXM.TTLWeaponShield
class ATTLWeaponShield : public ATTLWeaponBase
{
public:
	uint8                                        Pad_2A29[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           FxShieldBreak;                                     // 0x4E0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UAnimMontage*                          LeftShieldAnime;                                   // 0x578(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          RightShieldAnime;                                  // 0x580(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A2A[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTTLArsenalMovementComponent*          OwnerMovement;                                     // 0x5B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A2B[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UBoxComponent*                         ShieldBoxCollision;                                // 0x5D0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           SetupShiledFx;                                     // 0x5D8(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           RetractShiledFx;                                   // 0x670(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           DeployShiledFx;                                    // 0x708(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTTLFxParam                           StorageShiledFx;                                   // 0x7A0(0x98)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A2C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RetractShieldRugTime;                              // 0x83C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsLongPressShield;                                 // 0x840(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A2D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimationAsset*                       CloseShieldAnimAsset;                              // 0x848(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A2E[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATTLWeaponShield* GetDefaultObj();

	bool IsOwnerBigKnockBackDamaged(bool IsLeft);
	void GetBaseParam(struct FTTLCloseRangeWeaponParamRow* Param);
};

// 0x0 (0x88 - 0x88)
// Class DXM.TTLWeaponTypeParam
class UTTLWeaponTypeParam : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UTTLWeaponTypeParam* GetDefaultObj();

};

// 0x78 (0x2B0 - 0x238)
// Class DXM.TTLWeatherComponent
class UTTLWeatherComponent : public USceneComponent
{
public:
	uint8                                        Pad_2A2F[0x78];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLWeatherComponent* GetDefaultObj();

	void OnMissionPlayerChanged();
	void AssetLoadFinished();
};

// 0x440 (0x538 - 0xF8)
// Class DXM.TTLWholeBarrierCtrlComponent
class UTTLWholeBarrierCtrlComponent : public UTTLActorComponent
{
public:
	UMulticastDelegateProperty_                  OnChangeCollidePhase;                              // 0xF8(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           WholeBodyBarrier_ReadyBodyChargeEffectResource;    // 0x108(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           WholeBodyBarrier_ReadyGroundChargeEffectResource;  // 0x1A0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           WholeBodyBarrier_StartEffectResource;              // 0x238(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           WholeBodyBarrier_LoopEffectResource;               // 0x2D0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           WholeBodyBarrier_GroundEffectResource;             // 0x368(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           WholeBodyBarrier_EndEffectResource;                // 0x400(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        WholeBodyBarrier_ReadyBodyChargeEffect;            // 0x498(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        WholeBodyBarrier_ReadyGroundChargeEffect;          // 0x4B0(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxPlayback                        WholeBodyBarrier_LoopEffect;                       // 0x4C8(0x18)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        WholeBodyBarrierRange;                             // 0x4E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WholeBodyBarrier_Height;                           // 0x4E4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTTLWholeBodyBarrierLevel>     WholeBodyBarrier_Level;                            // 0x4E8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                  AttachBodyScoketName;                              // 0x4F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsPlayGroundVfx;                                   // 0x500(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A30[0x37];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLWholeBarrierCtrlComponent* GetDefaultObj();

};

// 0x40 (0x70 - 0x30)
// Class DXM.TTLWyveAIDataAsset
class UTTLWyveAIDataAsset : public UDataAsset
{
public:
	TArray<struct FTTLWyveAIDataRecordImpl>      Data;                                              // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FTTLWyveAIMoveDataRecord>      MoveData;                                          // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FTTLWyveAICounterDataRecord>   CounterClosedWeaponData;                           // 0x50(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FTTLWyveAICounterDataRecord>   CounterDamagedData;                                // 0x60(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLWyveAIDataAsset* GetDefaultObj();

	void Import();
};

// 0x40 (0xB48 - 0xB08)
// Class DXM.TTLWyveMissile
class ATTLWyveMissile : public ATTLStandardMissile
{
public:
	uint8                                        Pad_2A31[0x2C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         HomingValiable;                                    // 0xB34(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A32[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Threshold;                                         // 0xB38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceRate;                                      // 0xB3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ThresholdTime;                                     // 0xB40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ChangeCount;                                       // 0xB44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ATTLWyveMissile* GetDefaultObj();

};

// 0x248 (0xDE0 - 0xB98)
// Class DXM.TTLWyvePartsMesh
class UTTLWyvePartsMesh : public USkeletalMeshComponent
{
public:
	uint8                                        Pad_2A35[0x58];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                BodyName;                                          // 0xBF0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           VfxPurge;                                          // 0xC00(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           VfxExplosion;                                      // 0xC98(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           VfxLanding;                                        // 0xD30(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        StartSpeedMin;                                     // 0xDC8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartSpeedMax;                                     // 0xDCC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DecSpeed;                                          // 0xDD0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Type;                                              // 0xDD4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SphereRadius;                                      // 0xDD8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A36[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTTLWyvePartsMesh* GetDefaultObj();

	void OnSpawnGauntletDelegate(int32 Type);
	void OnPurgeStartDelegate(int32 Type);
	void OnArmorAbnormalStatusStartDelegate(enum class ETTLEAbnormalStatusType StatType, class UTTLBadStatusVFXComponent* badStatusComp, bool IsHeal);
};

// 0x1478 (0x14A0 - 0x28)
// Class DXM.TTLWyveVfxContainer
class UTTLWyveVfxContainer : public UObject
{
public:
	TArray<struct FTTLWyveVfxData>               List;                                              // 0x28(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2A37[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTTLFxParam                           VfxJumpStart;                                      // 0x50(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           VfxLanding;                                        // 0xE8(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           VfxLandingLight;                                   // 0x180(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           VfxRollerDash;                                     // 0x218(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           VfxStep;                                           // 0x2B0(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           VfxThrusterNormal;                                 // 0x348(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           VFXQuickBoost;                                     // 0x3E0(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           VfxThrusterCross;                                  // 0x478(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           VfxAngryEye;                                       // 0x510(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           VfxAngryGround;                                    // 0x5A8(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           VfxMissileMuzzle;                                  // 0x640(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FTTLFxParam>                   VfxHowling;                                        // 0x6D8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           VfxMeteorInfo;                                     // 0x6E8(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           VfxFemtoDrainArsenal;                              // 0x780(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           VfxFemtoDrain;                                     // 0x818(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           VfxFemtoDrainFinish;                               // 0x8B0(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           VfxSpinLaserMuzzle;                                // 0x948(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           VfxSpinLaserBodySmoke;                             // 0x9E0(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           VfxSpinLaserGroundSmoke;                           // 0xA78(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           VfxClawRight;                                      // 0xB10(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           VfxClawLeft;                                       // 0xBA8(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           VfxClawCombo;                                      // 0xC40(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           VfxClawGroundSmoke;                                // 0xCD8(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           VfxClawHit;                                        // 0xD70(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           VfxBigLaserStart;                                  // 0xE08(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           VfxBigLaserHit1;                                   // 0xEA0(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           VfxBigLaserHit2;                                   // 0xF38(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           VfxBigLaserHit3;                                   // 0xFD0(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           VfxBigLaserHit4;                                   // 0x1068(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FTTLWyveBigLaserHitTable>      LaserHitTable;                                     // 0x1100(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           VfxFlushDamageTrail;                               // 0x1110(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           VfxFlushDamageDown;                                // 0x11A8(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           VfxFlushDamageLandingDown;                         // 0x1240(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           VfxWeakDamage;                                     // 0x12D8(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           VfxCoverDamage;                                    // 0x1370(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTTLFxParam                           VfxDamageFootSmoke;                                // 0x1408(0x98)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTTLWyveVfxContainer* GetDefaultObj();

};

// 0x70 (0x430 - 0x3C0)
// Class DXM.TTLYesNoPopUp
class ATTLYesNoPopUp : public ATTLPopUpBase
{
public:
	uint8                                        Pad_2A38[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnYesSelected;                                     // 0x410(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnNoSelected;                                      // 0x420(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ATTLYesNoPopUp* GetDefaultObj();

	void SetDialogText(class FText DialogText);
	void SetButtonText(class FText LeftButtonText, class FText RightButtonText);
	bool IsSelectYes();
};

// 0x40 (0x130 - 0xF0)
// Class DXM.UIKeyHelpTimerComponent
class UUIKeyHelpTimerComponent : public UActorComponent
{
public:
	uint8                                        Pad_2A3A[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UUserWidget>               HelpWidgetClass;                                   // 0x100(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           HelpWidget;                                        // 0x108(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A3B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        KeyActiveLimitTime;                                // 0x114(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A3C[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UUIKeyHelpTimerComponent* GetDefaultObj();

	void OnInputAnalogL(enum class ETTLEActionType ActionType, float AxisValue);
	void OnInput(enum class ETTLEActionType KeyType, bool IsPressed);
};

// 0x48 (0x250 - 0x208)
// Class DXM.UTTLUIResultPartsItem
class UUTTLUIResultPartsItem : public UUserWidget
{
public:
	class UTextBlock*                            TextBlock1;                                        // 0x208(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            TextBlock2;                                        // 0x210(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLHUDResultIcon*                     ResultIcon;                                        // 0x218(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLUIResultPartsItemGauge*            GaugeWidget;                                       // 0x220(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTTLUIResultPartsItemCategory*         CategoryWidget;                                    // 0x228(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           AttachmentSlots;                                   // 0x230(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2A3E[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UUTTLUIResultPartsItem* GetDefaultObj();

	void SetText2(class FText NewText);
	void SetText1(class FText NewText);
	void SetIsNew(bool IsNew);
	void SetImageVisibility(bool NewVisible);
	void SetImageColor(const struct FLinearColor& NewColor);
	void SetImage(class UTexture2D* NewImage);
	void SetIconText(class FText NewText);
	void SetIcon(enum class ETTLResultIconType NewIconType);
	void SetEnterpriseVisibility(bool NewVisible);
	void SetEnterprise(enum class ETTLEnterpriseType EnterpriseType);
	void SetCountVisibility(bool NewVisible);
	void PlayBossGauge(float beforeValue, float AdditionalValue, bool IsEnableProgressAnimation);
	class UTextBlock* GetTextBlock2();
	class UTextBlock* GetTextBlock1();
	class UTTLHUDResultIcon* GetIcon();
	class UTTLUIResultPartsItemGauge* GetGaugeWidget();
	class UTTLUIResultPartsItemCategory* GetCategoryWidget();
	class UUserWidget* GetAttachmentSlotsWidget();
};

// 0x10 (0x218 - 0x208)
// Class DXM.UTTLUIResultPartsItems
class UUTTLUIResultPartsItems : public UUserWidget
{
public:
	TSubclassOf<class UUserWidget>               ItemUIClass;                                       // 0x208(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ColumnMax;                                         // 0x210(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ItemCount;                                         // 0x214(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UUTTLUIResultPartsItems* GetDefaultObj();

	void ClearItems();
	class UUserWidget* AddItem();
};

}


