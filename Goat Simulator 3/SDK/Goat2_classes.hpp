#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x8 (0x830 - 0x828)
// Class Goat2.GGCineCameraActor
class AGGCineCameraActor : public ACineCameraActor
{
public:
	bool                                         bShouldHideUI;                                     // 0x828(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_713[0x7];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGCineCameraActor* GetDefaultObj();

};

// 0x58 (0x88 - 0x30)
// Class Goat2.AnimNotifyState_GGAnimationActor
class UAnimNotifyState_GGAnimationActor : public UAnimNotifyState
{
public:
	TSubclassOf<class AActor>                    AnimationActorClass;                               // 0x30(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideMesh;                                     // 0x38(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_719[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMesh*                           OverrideStaticMesh;                                // 0x40(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                         OverrideSkeletalMesh;                              // 0x48(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SocketName;                                        // 0x50(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RelativeLocation;                                  // 0x58(0xC)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              RelativeRotation;                                  // 0x64(0xC)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               ActorScale;                                        // 0x70(0xC)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDropOnRagdoll;                                    // 0x7C(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRemoveOnRagdoll;                                  // 0x7D(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71D[0x2];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DroppedLifespan;                                   // 0x80(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideRightHandActor;                               // 0x84(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideLeftHandActor;                                // 0x85(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71F[0x2];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAnimNotifyState_GGAnimationActor* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class Goat2.AnimNotifyState_GGBlockTurning
class UAnimNotifyState_GGBlockTurning : public UAnimNotifyState
{
public:
	enum class EHeadTurning                      BlockState;                                        // 0x30(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_725[0x7];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAnimNotifyState_GGBlockTurning* GetDefaultObj();

};

// 0x38 (0xA0 - 0x68)
// Class Goat2.BTDecorator_GGActorIsType
class UBTDecorator_GGActorIsType : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                ActorToCheck;                                      // 0x68(0x28)(Edit, NativeAccessSpecifierPrivate)
	TArray<enum class ECheckTypes>               TypesToCheck;                                      // 0x90(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTDecorator_GGActorIsType* GetDefaultObj();

};

// 0x0 (0x68 - 0x68)
// Class Goat2.BTDecorator_GGBase
class UBTDecorator_GGBase : public UBTDecorator
{
public:

	static class UClass* StaticClass();
	static class UBTDecorator_GGBase* GetDefaultObj();

};

// 0x28 (0x90 - 0x68)
// Class Goat2.BTDecorator_GGBuyerAtStall
class UBTDecorator_GGBuyerAtStall : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                CurrentEvent;                                      // 0x68(0x28)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTDecorator_GGBuyerAtStall* GetDefaultObj();

};

// 0x28 (0x90 - 0x68)
// Class Goat2.BTDecorator_GGCanBeInteracted
class UBTDecorator_GGCanBeInteracted : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                InteractActor;                                     // 0x68(0x28)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTDecorator_GGCanBeInteracted* GetDefaultObj();

};

// 0x30 (0x98 - 0x68)
// Class Goat2.BTDecorator_GGCanChangeMood
class UBTDecorator_GGCanChangeMood : public UBTDecorator_GGBase
{
public:
	struct FBlackboardKeySelector                SelfActor;                                         // 0x68(0x28)(Edit, NativeAccessSpecifierPublic)
	enum class EMoods                            MoodToChangeToo;                                   // 0x90(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_731[0x7];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecorator_GGCanChangeMood* GetDefaultObj();

};

// 0x28 (0x90 - 0x68)
// Class Goat2.BTDecorator_GGCanFaint
class UBTDecorator_GGCanFaint : public UBTDecorator_GGBase
{
public:
	struct FBlackboardKeySelector                SelfActor;                                         // 0x68(0x28)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTDecorator_GGCanFaint* GetDefaultObj();

};

// 0x28 (0x90 - 0x68)
// Class Goat2.BTDecorator_GGCanPanic
class UBTDecorator_GGCanPanic : public UBTDecorator_GGBase
{
public:
	struct FBlackboardKeySelector                SelfActor;                                         // 0x68(0x28)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTDecorator_GGCanPanic* GetDefaultObj();

};

// 0x28 (0x90 - 0x68)
// Class Goat2.BTDecorator_GGCanRoam
class UBTDecorator_GGCanRoam : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                VehicleToCheck;                                    // 0x68(0x28)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTDecorator_GGCanRoam* GetDefaultObj();

};

// 0x8 (0x70 - 0x68)
// Class Goat2.BTDecorator_GGCanSwitchToRoaming
class UBTDecorator_GGCanSwitchToRoaming : public UBTDecorator_GGBase
{
public:
	enum class ERoamAfterDisturbed               Reason;                                            // 0x68(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_74D[0x7];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecorator_GGCanSwitchToRoaming* GetDefaultObj();

};

// 0x8 (0x70 - 0x68)
// Class Goat2.BTDecorator_GGChanceToSucceed
class UBTDecorator_GGChanceToSucceed : public UBTDecorator
{
public:
	float                                        ChanceToSucceed;                                   // 0x68(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_751[0x4];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecorator_GGChanceToSucceed* GetDefaultObj();

};

// 0x28 (0x90 - 0x68)
// Class Goat2.BTDecorator_GGCharacterIsRidden
class UBTDecorator_GGCharacterIsRidden : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                Character;                                         // 0x68(0x28)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTDecorator_GGCharacterIsRidden* GetDefaultObj();

};

// 0x48 (0xB0 - 0x68)
// Class Goat2.BTDecorator_GGCheckNPCIdTags
class UBTDecorator_GGCheckNPCIdTags : public UBTDecorator_GGBase
{
public:
	struct FBlackboardKeySelector                NPCToCheck;                                        // 0x68(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 TagsToCheckFor;                                    // 0x90(0x20)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTDecorator_GGCheckNPCIdTags* GetDefaultObj();

};

// 0x48 (0xB0 - 0x68)
// Class Goat2.BTDecorator_GGCheckPActorIdTags
class UBTDecorator_GGCheckPActorIdTags : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                PActorToCheck;                                     // 0x68(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 TagsToCheckFor;                                    // 0x90(0x20)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTDecorator_GGCheckPActorIdTags* GetDefaultObj();

};

// 0x48 (0xB0 - 0x68)
// Class Goat2.BTDecorator_GGCheckWaypointTag
class UBTDecorator_GGCheckWaypointTag : public UBTDecorator_GGBase
{
public:
	struct FBlackboardKeySelector                Waypoint;                                          // 0x68(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 TagsToCheckFor;                                    // 0x90(0x20)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTDecorator_GGCheckWaypointTag* GetDefaultObj();

};

// 0x68 (0xD0 - 0x68)
// Class Goat2.BTDecorator_GGCompareFloats
class UBTDecorator_GGCompareFloats : public UBTDecorator
{
public:
	enum class EBTGGBlackboardRestart            NotifyObserver;                                    // 0x68(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ECompareMode                      CompareMode;                                       // 0x69(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_781[0x6];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                FloatValue;                                        // 0x70(0x28)(Edit, NativeAccessSpecifierPrivate)
	bool                                         UseBlackboardFloat;                                // 0x98(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_785[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                BlackboardFloat;                                   // 0xA0(0x28)(Edit, NativeAccessSpecifierPrivate)
	float                                        LiteralFloat;                                      // 0xC8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_788[0x4];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecorator_GGCompareFloats* GetDefaultObj();

};

// 0x30 (0x98 - 0x68)
// Class Goat2.BTDecorator_GGContainerHasData
class UBTDecorator_GGContainerHasData : public UBTDecorator_GGBase
{
public:
	struct FBlackboardKeySelector                SelfActor;                                         // 0x68(0x28)(Edit, NativeAccessSpecifierPublic)
	enum class EEnvContainerData                 DataToCheckFor;                                    // 0x90(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_792[0x7];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecorator_GGContainerHasData* GetDefaultObj();

};

// 0x60 (0xC8 - 0x68)
// Class Goat2.BTDecorator_GGDistanceLessThan
class UBTDecorator_GGDistanceLessThan : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                ElementOne;                                        // 0x68(0x28)(Edit, NativeAccessSpecifierPrivate)
	bool                                         bElementOneClosestOnCollision;                     // 0x90(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_79B[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                ElementTwo;                                        // 0x98(0x28)(Edit, NativeAccessSpecifierPrivate)
	bool                                         bElementTwoClosestOnCollision;                     // 0xC0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_79E[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CompareValue;                                      // 0xC4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTDecorator_GGDistanceLessThan* GetDefaultObj();

};

// 0x40 (0xA8 - 0x68)
// Class Goat2.BTDecorator_GGGoatHasGear
class UBTDecorator_GGGoatHasGear : public UBTDecorator_GGBase
{
public:
	struct FBlackboardKeySelector                TargetActor;                                       // 0x68(0x28)(Edit, NativeAccessSpecifierPublic)
	TArray<class FString>                        GearToCheckFor;                                    // 0x90(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bRequireAllInArray;                                // 0xA0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7AB[0x7];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecorator_GGGoatHasGear* GetDefaultObj();

};

// 0x28 (0x90 - 0x68)
// Class Goat2.BTDecorator_GGHasActorInHand
class UBTDecorator_GGHasActorInHand : public UBTDecorator
{
public:
	enum class EAttachmentHandSlot               HandToCheck;                                       // 0x68(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_7B8[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 PActorWithTheseTags;                               // 0x70(0x20)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTDecorator_GGHasActorInHand* GetDefaultObj();

};

// 0x30 (0x98 - 0x68)
// Class Goat2.BTDecorator_GGHasAnimState
class UBTDecorator_GGHasAnimState : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                SelfActor;                                         // 0x68(0x28)(Edit, NativeAccessSpecifierPrivate)
	enum class ENPCAnimationStates               StateToCheckFor;                                   // 0x90(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_7C9[0x7];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecorator_GGHasAnimState* GetDefaultObj();

};

// 0x28 (0x90 - 0x68)
// Class Goat2.BTDecorator_GGHasGrabCharacter
class UBTDecorator_GGHasGrabCharacter : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                SelfActor;                                         // 0x68(0x28)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTDecorator_GGHasGrabCharacter* GetDefaultObj();

};

// 0x30 (0x98 - 0x68)
// Class Goat2.BTDecorator_GGHasMood
class UBTDecorator_GGHasMood : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                SelfActor;                                         // 0x68(0x28)(Edit, NativeAccessSpecifierPrivate)
	enum class EMoods                            MoodToCheckAgainst;                                // 0x90(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_7DD[0x7];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecorator_GGHasMood* GetDefaultObj();

};

// 0x0 (0x68 - 0x68)
// Class Goat2.BTDecorator_GGHasScaryLoc
class UBTDecorator_GGHasScaryLoc : public UBTDecorator
{
public:

	static class UClass* StaticClass();
	static class UBTDecorator_GGHasScaryLoc* GetDefaultObj();

};

// 0x30 (0x98 - 0x68)
// Class Goat2.BTDecorator_GGHasStatusEffect
class UBTDecorator_GGHasStatusEffect : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                TestActor;                                         // 0x68(0x28)(Edit, NativeAccessSpecifierPublic)
	enum class EStatusEffectTypes                StatusEffectType;                                  // 0x90(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7EA[0x7];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecorator_GGHasStatusEffect* GetDefaultObj();

};

// 0x28 (0x90 - 0x68)
// Class Goat2.BTDecorator_GGHeadbuttedRecently
class UBTDecorator_GGHeadbuttedRecently : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                VehicleToCheck;                                    // 0x68(0x28)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTDecorator_GGHeadbuttedRecently* GetDefaultObj();

};

// 0x28 (0x90 - 0x68)
// Class Goat2.BTDecorator_GGInVehicle
class UBTDecorator_GGInVehicle : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                SelfActor;                                         // 0x68(0x28)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTDecorator_GGInVehicle* GetDefaultObj();

};

// 0x28 (0x90 - 0x68)
// Class Goat2.BTDecorator_GGInWater
class UBTDecorator_GGInWater : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                Self;                                              // 0x68(0x28)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTDecorator_GGInWater* GetDefaultObj();

};

// 0x8 (0x98 - 0x90)
// Class Goat2.BTDecorator_GGIsA
class UBTDecorator_GGIsA : public UBTDecorator_BlackboardBase
{
public:
	class UClass*                                ClassToCheck;                                      // 0x90(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTDecorator_GGIsA* GetDefaultObj();

};

// 0x28 (0x90 - 0x68)
// Class Goat2.BTDecorator_GGIsActorInSight
class UBTDecorator_GGIsActorInSight : public UBTDecorator_GGBase
{
public:
	struct FBlackboardKeySelector                TargetActor;                                       // 0x68(0x28)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTDecorator_GGIsActorInSight* GetDefaultObj();

};

// 0x28 (0x90 - 0x68)
// Class Goat2.BTDecorator_GGIsActorPooled
class UBTDecorator_GGIsActorPooled : public UBTDecorator_GGBase
{
public:
	struct FBlackboardKeySelector                Actor;                                             // 0x68(0x28)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTDecorator_GGIsActorPooled* GetDefaultObj();

};

// 0x28 (0x90 - 0x68)
// Class Goat2.BTDecorator_GGIsEventEnabled
class UBTDecorator_GGIsEventEnabled : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                TargetActor;                                       // 0x68(0x28)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTDecorator_GGIsEventEnabled* GetDefaultObj();

};

// 0x38 (0xA0 - 0x68)
// Class Goat2.BTDecorator_GGIsEventOnCooldown
class UBTDecorator_GGIsEventOnCooldown : public UBTDecorator
{
public:
	struct FGameplayTag                          EventTag;                                          // 0x68(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCheckForActorCooldown;                            // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_868[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                CooldownActor;                                     // 0x78(0x28)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTDecorator_GGIsEventOnCooldown* GetDefaultObj();

};

// 0x58 (0xC0 - 0x68)
// Class Goat2.BTDecorator_GGIsFacingDirection
class UBTDecorator_GGIsFacingDirection : public UBTDecorator
{
public:
	float                                        Precision;                                         // 0x68(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_87A[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                SelfActor;                                         // 0x70(0x28)(Edit, NativeAccessSpecifierPrivate)
	struct FBlackboardKeySelector                TargetDirection;                                   // 0x98(0x28)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTDecorator_GGIsFacingDirection* GetDefaultObj();

};

// 0x30 (0x98 - 0x68)
// Class Goat2.BTDecorator_GGIsGender
class UBTDecorator_GGIsGender : public UBTDecorator_GGBase
{
public:
	struct FBlackboardKeySelector                SelfActor;                                         // 0x68(0x28)(Edit, NativeAccessSpecifierPublic)
	enum class EGender                           IsGender;                                          // 0x90(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_88C[0x7];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecorator_GGIsGender* GetDefaultObj();

};

// 0x30 (0x98 - 0x68)
// Class Goat2.BTDecorator_GGIsGoatEmoting
class UBTDecorator_GGIsGoatEmoting : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                TargetActor;                                       // 0x68(0x28)(Edit, NativeAccessSpecifierPrivate)
	class UGGGoatEmote*                          EmoteToCheckFor;                                   // 0x90(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTDecorator_GGIsGoatEmoting* GetDefaultObj();

};

// 0x78 (0xE0 - 0x68)
// Class Goat2.BTDecorator_GGIsGoatLicking
class UBTDecorator_GGIsGoatLicking : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                GoatActor;                                         // 0x68(0x28)(Edit, NativeAccessSpecifierPublic)
	enum class EGoatLickCheckType                CheckType;                                         // 0x90(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_8AA[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                IsLickingActor;                                    // 0x98(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 PActorIdentifierTags;                              // 0xC0(0x20)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTDecorator_GGIsGoatLicking* GetDefaultObj();

};

// 0x30 (0x98 - 0x68)
// Class Goat2.BTDecorator_GGIsGoatNearLocation
class UBTDecorator_GGIsGoatNearLocation : public UBTDecorator_GGBase
{
public:
	struct FBlackboardKeySelector                TargetLocation;                                    // 0x68(0x28)(Edit, NativeAccessSpecifierPublic)
	float                                        DistanceToLocation;                                // 0x90(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_8B8[0x4];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecorator_GGIsGoatNearLocation* GetDefaultObj();

};

// 0x30 (0x98 - 0x68)
// Class Goat2.BTDecorator_GGIsGrabbed
class UBTDecorator_GGIsGrabbed : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                CheckActor;                                        // 0x68(0x28)(Edit, NativeAccessSpecifierPublic)
	enum class EGrabbedCheckType                 CheckType;                                         // 0x90(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_8C2[0x7];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecorator_GGIsGrabbed* GetDefaultObj();

};

// 0x30 (0x98 - 0x68)
// Class Goat2.BTDecorator_GGIsHandcuffed
class UBTDecorator_GGIsHandcuffed : public UBTDecorator_GGBase
{
public:
	struct FBlackboardKeySelector                TargetCharacter;                                   // 0x68(0x28)(Edit, NativeAccessSpecifierPublic)
	int32                                        NumHandcuffsToCheckFor;                            // 0x90(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_8D9[0x4];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecorator_GGIsHandcuffed* GetDefaultObj();

};

// 0x0 (0x90 - 0x90)
// Class Goat2.BTDecorator_GGIsInteractable
class UBTDecorator_GGIsInteractable : public UBTDecorator_BlackboardBase
{
public:

	static class UClass* StaticClass();
	static class UBTDecorator_GGIsInteractable* GetDefaultObj();

};

// 0x28 (0x90 - 0x68)
// Class Goat2.BTDecorator_GGIsKnockedOut
class UBTDecorator_GGIsKnockedOut : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                NPCCharacter;                                      // 0x68(0x28)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTDecorator_GGIsKnockedOut* GetDefaultObj();

};

// 0x50 (0xB8 - 0x68)
// Class Goat2.BTDecorator_GGIsLocationRightOf
class UBTDecorator_GGIsLocationRightOf : public UBTDecorator_GGBase
{
public:
	struct FBlackboardKeySelector                SelfActor;                                         // 0x68(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                TargetValue;                                       // 0x90(0x28)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTDecorator_GGIsLocationRightOf* GetDefaultObj();

};

// 0x28 (0x90 - 0x68)
// Class Goat2.BTDecorator_GGIsMeshStationary
class UBTDecorator_GGIsMeshStationary : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                SelfActor;                                         // 0x68(0x28)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTDecorator_GGIsMeshStationary* GetDefaultObj();

};

// 0x30 (0x98 - 0x68)
// Class Goat2.BTDecorator_GGIsNPCEventState
class UBTDecorator_GGIsNPCEventState : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                NPCToCheck;                                        // 0x68(0x28)(Edit, NativeAccessSpecifierPrivate)
	int32                                        StateToCheck;                                      // 0x90(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ECheckType                        CheckType;                                         // 0x94(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_94C[0x3];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecorator_GGIsNPCEventState* GetDefaultObj();

};

// 0x28 (0x90 - 0x68)
// Class Goat2.BTDecorator_GGIsNPCPerforming
class UBTDecorator_GGIsNPCPerforming : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                CurrentEvent;                                      // 0x68(0x28)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTDecorator_GGIsNPCPerforming* GetDefaultObj();

};

// 0x28 (0x90 - 0x68)
// Class Goat2.BTDecorator_GGIsPActorOptimized
class UBTDecorator_GGIsPActorOptimized : public UBTDecorator_GGBase
{
public:
	struct FBlackboardKeySelector                TargetPActor;                                      // 0x68(0x28)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTDecorator_GGIsPActorOptimized* GetDefaultObj();

};

// 0x28 (0x90 - 0x68)
// Class Goat2.BTDecorator_GGIsPassedOut
class UBTDecorator_GGIsPassedOut : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                Character;                                         // 0x68(0x28)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTDecorator_GGIsPassedOut* GetDefaultObj();

};

// 0x28 (0x90 - 0x68)
// Class Goat2.BTDecorator_GGIsPerceivable
class UBTDecorator_GGIsPerceivable : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                Character;                                         // 0x68(0x28)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTDecorator_GGIsPerceivable* GetDefaultObj();

};

// 0x30 (0x98 - 0x68)
// Class Goat2.BTDecorator_GGIsPlayingMontage
class UBTDecorator_GGIsPlayingMontage : public UBTDecorator_GGBase
{
public:
	struct FBlackboardKeySelector                SelfActor;                                         // 0x68(0x28)(Edit, NativeAccessSpecifierPublic)
	class UAnimMontage*                          Montage;                                           // 0x90(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTDecorator_GGIsPlayingMontage* GetDefaultObj();

};

// 0x28 (0x90 - 0x68)
// Class Goat2.BTDecorator_GGIsRagdoll
class UBTDecorator_GGIsRagdoll : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                SelfActor;                                         // 0x68(0x28)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTDecorator_GGIsRagdoll* GetDefaultObj();

};

// 0x28 (0x90 - 0x68)
// Class Goat2.BTDecorator_GGIsRiding
class UBTDecorator_GGIsRiding : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                SelfActor;                                         // 0x68(0x28)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTDecorator_GGIsRiding* GetDefaultObj();

};

// 0x58 (0xC0 - 0x68)
// Class Goat2.BTDecorator_GGIsSoftRefValid
class UBTDecorator_GGIsSoftRefValid : public UBTDecorator
{
public:
	bool                                         bCheckObject;                                      // 0x68(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_A07[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UObject>                SoftObject;                                        // 0x70(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UObject>                 SoftClass;                                         // 0x98(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTDecorator_GGIsSoftRefValid* GetDefaultObj();

};

// 0x30 (0x98 - 0x68)
// Class Goat2.BTDecorator_GGIsStumbling
class UBTDecorator_GGIsStumbling : public UBTDecorator_GGBase
{
public:
	struct FBlackboardKeySelector                SelfActor;                                         // 0x68(0x28)(Edit, NativeAccessSpecifierPublic)
	float                                        LastPushCheckTime;                                 // 0x90(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_A1C[0x4];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecorator_GGIsStumbling* GetDefaultObj();

};

// 0x28 (0x90 - 0x68)
// Class Goat2.BTDecorator_GGIsVehicleFlipped
class UBTDecorator_GGIsVehicleFlipped : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                VehicleToCheck;                                    // 0x68(0x28)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTDecorator_GGIsVehicleFlipped* GetDefaultObj();

};

// 0x30 (0x98 - 0x68)
// Class Goat2.BTDecorator_GGIsVehicleInState
class UBTDecorator_GGIsVehicleInState : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                VehicleToCheck;                                    // 0x68(0x28)(Edit, NativeAccessSpecifierPrivate)
	enum class EVehicleState                     StateToCheckAgainst;                               // 0x90(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_A3D[0x7];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecorator_GGIsVehicleInState* GetDefaultObj();

};

// 0x28 (0x90 - 0x68)
// Class Goat2.BTDecorator_GGIsVendorAtStall
class UBTDecorator_GGIsVendorAtStall : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                CurrentEvent;                                      // 0x68(0x28)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTDecorator_GGIsVendorAtStall* GetDefaultObj();

};

// 0x58 (0xC0 - 0x68)
// Class Goat2.BTDecorator_GGMatchesGameplayTag
class UBTDecorator_GGMatchesGameplayTag : public UBTDecorator
{
public:
	enum class EGameplayTagCompareType           GameplayTagCompareType;                            // 0x68(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_A61[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                KeyToCheck;                                        // 0x70(0x28)(Edit, NativeAccessSpecifierPublic)
	bool                                         bOnlyUseKeyToCheckParent;                          // 0x98(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_A65[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 ComapreWith;                                       // 0xA0(0x20)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTDecorator_GGMatchesGameplayTag* GetDefaultObj();

};

// 0x28 (0x90 - 0x68)
// Class Goat2.BTDecorator_GGOnNavMesh
class UBTDecorator_GGOnNavMesh : public UBTDecorator_GGBase
{
public:
	struct FBlackboardKeySelector                SelfActor;                                         // 0x68(0x28)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTDecorator_GGOnNavMesh* GetDefaultObj();

};

// 0x8 (0x70 - 0x68)
// Class Goat2.BTDecorator_GGShouldBrace
class UBTDecorator_GGShouldBrace : public UBTDecorator_GGBase
{
public:
	bool                                         bCheckForSprintingGoats;                           // 0x68(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_A8C[0x7];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecorator_GGShouldBrace* GetDefaultObj();

};

// 0x48 (0xB0 - 0x68)
// Class Goat2.BTDecorator_GGStartledContext
class UBTDecorator_GGStartledContext : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                SelfActor;                                         // 0x68(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 CompareAgainst;                                    // 0x90(0x20)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTDecorator_GGStartledContext* GetDefaultObj();

};

// 0x30 (0x98 - 0x68)
// Class Goat2.BTDecorator_GGTimeSinceMoodSet
class UBTDecorator_GGTimeSinceMoodSet : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                SelfActor;                                         // 0x68(0x28)(Edit, NativeAccessSpecifierPublic)
	float                                        TimeSinceMoodWasSet;                               // 0x90(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_AB1[0x4];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecorator_GGTimeSinceMoodSet* GetDefaultObj();

};

// 0x8 (0x98 - 0x90)
// Class Goat2.BTDecorator_GGWasInState
class UBTDecorator_GGWasInState : public UBTDecorator_BlackboardBase
{
public:
	enum class EWasInStates                      State;                                             // 0x90(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EBTGGBlackboardRestart            NotifyObserver;                                    // 0x91(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_ADE[0x6];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecorator_GGWasInState* GetDefaultObj();

};

// 0x8 (0x78 - 0x70)
// Class Goat2.BTService_GGAbortMontage
class UBTService_GGAbortMontage : public UBTService
{
public:
	class UAnimMontage*                          Montage;                                           // 0x70(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTService_GGAbortMontage* GetDefaultObj();

};

// 0x28 (0x98 - 0x70)
// Class Goat2.BTService_GGAddEffectSources
class UBTService_GGAddEffectSources : public UBTService
{
public:
	struct FGameplayTag                          SourceTag;                                         // 0x70(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 EffectTags;                                        // 0x78(0x20)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTService_GGAddEffectSources* GetDefaultObj();

};

// 0x88 (0xF8 - 0x70)
// Class Goat2.BTService_GGCheckIfValidPath
class UBTService_GGCheckIfValidPath : public UBTService
{
public:
	struct FBlackboardKeySelector                Result;                                            // 0x70(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                StartKey;                                          // 0x98(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                GoalKey;                                           // 0xC0(0x28)(Edit, NativeAccessSpecifierPublic)
	TSubclassOf<class UNavigationQueryFilter>    FilterClass;                                       // 0xE8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bProjectToNavMesh;                                 // 0xF0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_B2E[0x7];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTService_GGCheckIfValidPath* GetDefaultObj();

};

// 0x30 (0xA0 - 0x70)
// Class Goat2.BTService_GGCountFloat
class UBTService_GGCountFloat : public UBTService
{
public:
	struct FBlackboardKeySelector                FloatToCount;                                      // 0x70(0x28)(Edit, NativeAccessSpecifierPrivate)
	bool                                         CountUp;                                           // 0x98(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_B46[0x7];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTService_GGCountFloat* GetDefaultObj();

};

// 0x8 (0x78 - 0x70)
// Class Goat2.BTService_GGDisableReactions
class UBTService_GGDisableReactions : public UBTService
{
public:
	bool                                         bDisableProximityReactions;                        // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisablePanic;                                     // 0x71(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_B5F[0x6];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTService_GGDisableReactions* GetDefaultObj();

};

// 0x50 (0xC0 - 0x70)
// Class Goat2.BTService_GGGetAnActorInView
class UBTService_GGGetAnActorInView : public UBTService
{
public:
	struct FBlackboardKeySelector                ActorValueToFill;                                  // 0x70(0x28)(Edit, NativeAccessSpecifierPrivate)
	bool                                         OnlyLookWhenEmpty;                                 // 0x98(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EMoods                            OnlyLookWhileInMood;                               // 0x99(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_BDE[0x2];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WithinDistance;                                    // 0x9C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         RandomActorInView;                                 // 0xA0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_BE4[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ChanceToSetActor;                                  // 0xA4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCheckAgainstRecentlyGrabbed;                      // 0xA8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_BEE[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RecentlyGrabbedDelay;                              // 0xAC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bDisregardGrabbedCharacters;                       // 0xB0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         LookForNPCs;                                       // 0xB1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         OnlyLookForRoaming;                                // 0xB2(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         OnlyLookForPassedOut;                              // 0xB3(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         IncludeKnockedOutNPCs;                             // 0xB4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         LookForGoats;                                      // 0xB5(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         LookForPhysicsActors;                              // 0xB6(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         CanGetPActorsTwice;                                // 0xB7(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         LookForInteractables;                              // 0xB8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         LookForVehicles;                                   // 0xB9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         OnlyEngineOff;                                     // 0xBA(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_C09[0x5];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTService_GGGetAnActorInView* GetDefaultObj();

};

// 0x110 (0x180 - 0x70)
// Class Goat2.BTService_GGLookForCharacter
class UBTService_GGLookForCharacter : public UBTService
{
public:
	enum class ELookForCharacter                 LookFor;                                           // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_C2F[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                TargetActor;                                       // 0x78(0x28)(Edit, NativeAccessSpecifierPublic)
	float                                        SetTargetAfterSeconds;                             // 0xA0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSetInstantlyIfKeyIsTrue;                          // 0xA4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_C33[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                SetInstantlyBool;                                  // 0xA8(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                OutOfSightFor;                                     // 0xD0(0x28)(Edit, NativeAccessSpecifierPublic)
	bool                                         bRemoveTargetActorWhenOutOfSight;                  // 0xF8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_C3E[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WhenOutOfSightFor;                                 // 0xFC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDontSetTargetIfWearingDisguise;                   // 0x100(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_C44[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                DisguiseAssetIDs;                                  // 0x108(0x28)(Edit, NativeAccessSpecifierPublic)
	TMap<class AGGCharacter*, float>             SeenCharacters;                                    // 0x130(0x50)(Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBTService_GGLookForCharacter* GetDefaultObj();

};

// 0x30 (0xA0 - 0x70)
// Class Goat2.BTService_GGLookForInteractables
class UBTService_GGLookForInteractables : public UBTService
{
public:
	struct FBlackboardKeySelector                InteractActor;                                     // 0x70(0x28)(Edit, NativeAccessSpecifierPublic)
	bool                                         bOnlyLookWhenEmpty;                                // 0x98(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_C76[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ChanceToSet;                                       // 0x9C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTService_GGLookForInteractables* GetDefaultObj();

};

// 0x208 (0x278 - 0x70)
// Class Goat2.BTService_GGManageBoatDriving
class UBTService_GGManageBoatDriving : public UBTService
{
public:
	bool                                         bAlwaysGetOnSplines;                               // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_C8F[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                CurrentSpline;                                     // 0x78(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                CurrentSplinePointIndex;                           // 0xA0(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                NextSpline;                                        // 0xC8(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                NextSplineStartIndex;                              // 0xF0(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                OffRoad;                                           // 0x118(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                VehicleDisturbed;                                  // 0x140(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                NextPoint;                                         // 0x168(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                LastPoint;                                         // 0x190(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                ReachedLastPoint;                                  // 0x1B8(0x28)(Edit, NativeAccessSpecifierPublic)
	float                                        PointMinDistance;                                  // 0x1E0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OffRoadDistance;                                   // 0x1E4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TooFarAwayDistance;                                // 0x1E8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NearestSplineMaxDistance;                          // 0x1EC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AGGVehicle*                            Vehicle;                                           // 0x1F0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBlackboardComponent*                  BlackboardComp;                                    // 0x1F8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGGRoadSplineComponent*                CurrentSplineComp;                                 // 0x200(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_CBF[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGRoadSplineComponent*                NextSplineComp;                                    // 0x210(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        NextSplineEnterIndex;                              // 0x218(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_CC4[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGRoadSplineComponent*                PreviousSplineComp;                                // 0x220(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_CC8[0x50];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTService_GGManageBoatDriving* GetDefaultObj();

};

// 0x170 (0x1E0 - 0x70)
// Class Goat2.BTService_GGManageCircuitPath
class UBTService_GGManageCircuitPath : public UBTService
{
public:
	bool                                         DebugPrint;                                        // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DebugDrawPath;                                     // 0x71(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_CD9[0x6];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                PathTarget;                                        // 0x78(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                PathTargetActor;                                   // 0xA0(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                ReachedPathTarget;                                 // 0xC8(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                NextPoint;                                         // 0xF0(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                LastPoint;                                         // 0x118(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                ReachedLastPoint;                                  // 0x140(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                GoatKartsCompKey;                                  // 0x168(0x28)(Edit, NativeAccessSpecifierPublic)
	TSubclassOf<class UNavigationQueryFilter>    NavFilter;                                         // 0x190(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PointMinDistance;                                  // 0x198(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReachedPathDistance;                               // 0x19C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanDirectSteer;                                   // 0x1A0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_D00[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinDistanceToSpeedUp;                              // 0x1A4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxAngleConsideredStraight;                        // 0x1A8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PassedCheckpointThreshold;                         // 0x1AC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AGGVehicle*                            Vehicle;                                           // 0x1B0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBlackboardComponent*                  BlackboardComp;                                    // 0x1B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FGoatKartCircuitResult>        Circuit;                                           // 0x1C0(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	int32                                        CurrentCircuitPoint;                               // 0x1D0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_D14[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGPlayerGameComp_GoatKart*            GoatKartComp;                                      // 0x1D8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTService_GGManageCircuitPath* GetDefaultObj();

};

// 0x260 (0x2D0 - 0x70)
// Class Goat2.BTService_GGManageRandomDriving
class UBTService_GGManageRandomDriving : public UBTService
{
public:
	bool                                         DebugDrawAndPrint;                                 // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DebugDrawPath;                                     // 0x71(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         PrintRPMChanges;                                   // 0x72(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAlwaysGetOnSplines;                               // 0x73(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_D61[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                TargetLocation;                                    // 0x78(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                CurrentSpline;                                     // 0xA0(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                CurrentSplinePointIndex;                           // 0xC8(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                NextSpline;                                        // 0xF0(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                NextSplineStartIndex;                              // 0x118(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                OffRoad;                                           // 0x140(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                VehicleDisturbed;                                  // 0x168(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                NextPoint;                                         // 0x190(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                LastPoint;                                         // 0x1B8(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                ReachedLastPoint;                                  // 0x1E0(0x28)(Edit, NativeAccessSpecifierPublic)
	TSubclassOf<class UNavigationQueryFilter>    NavFilter;                                         // 0x208(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PointMinDistance;                                  // 0x210(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OffRoadDistance;                                   // 0x214(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TooFarAwayDistance;                                // 0x218(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NearestSplineMaxDistance;                          // 0x21C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AGGVehicle*                            Vehicle;                                           // 0x220(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBlackboardComponent*                  BlackboardComp;                                    // 0x228(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGGRoadSplineComponent*                CurrentSplineComp;                                 // 0x230(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_D94[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGRoadSplineComponent*                NextSplineComp;                                    // 0x240(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        NextSplineEnterIndex;                              // 0x248(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_DA0[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGRoadSplineComponent*                PreviousSplineComp;                                // 0x250(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_DA3[0x50];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UNavigationPath*                       Path;                                              // 0x2A8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_DA5[0x20];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTService_GGManageRandomDriving* GetDefaultObj();

	void PathUpdated(class UNavigationPath* AffectedPath, enum class ENavPathEvent PathEvent);
};

// 0xE0 (0x150 - 0x70)
// Class Goat2.BTService_GGManageRandomRoam
class UBTService_GGManageRandomRoam : public UBTService
{
public:
	bool                                         bDebugDrawAndPrint;                                // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_DC1[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DistanceUntilNewLocation;                          // 0x74(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                MoveLocation;                                      // 0x78(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                LastRoamLocation;                                  // 0xA0(0x28)(Edit, NativeAccessSpecifierPublic)
	class UEnvQuery*                             RandomLocationQuery;                               // 0xC8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AGGNPC*                                ManagedNPC;                                        // 0xD0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBlackboardComponent*                  BlackboardComp;                                    // 0xD8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_DD2[0x70];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTService_GGManageRandomRoam* GetDefaultObj();

};

// 0x150 (0x1C0 - 0x70)
// Class Goat2.BTService_GGManageVehiclePath
class UBTService_GGManageVehiclePath : public UBTService
{
public:
	bool                                         DebugPrint;                                        // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DebugDrawPath;                                     // 0x71(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_E2E[0x6];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                PathTarget;                                        // 0x78(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                PathTargetActor;                                   // 0xA0(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                ReachedPathTarget;                                 // 0xC8(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                NextPoint;                                         // 0xF0(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                LastPoint;                                         // 0x118(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                ReachedLastPoint;                                  // 0x140(0x28)(Edit, NativeAccessSpecifierPublic)
	TSubclassOf<class UNavigationQueryFilter>    NavFilter;                                         // 0x168(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PointMinDistance;                                  // 0x170(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReachedPathDistance;                               // 0x174(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLookForNearbyNavMesh;                             // 0x178(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_E4B[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        NearbyNavMeshRadius;                               // 0x17C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanDirectSteer;                                   // 0x180(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_E4F[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGVehicle*                            Vehicle;                                           // 0x188(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBlackboardComponent*                  BlackboardComp;                                    // 0x190(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UNavigationPath*                       Path;                                              // 0x198(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_E57[0x20];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTService_GGManageVehiclePath* GetDefaultObj();

	void PathUpdated(class UNavigationPath* AffectedPath, enum class ENavPathEvent PathEvent);
};

// 0x90 (0x100 - 0x70)
// Class Goat2.BTService_GGNotifyChasedNPC
class UBTService_GGNotifyChasedNPC : public UBTService
{
public:
	float                                        NotifyDistance;                                    // 0x70(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_E78[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                TargetNPC;                                         // 0x78(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FStartleDetailsSettings               StartleSettings;                                   // 0xA0(0x50)(Edit, NativeAccessSpecifierPublic)
	class AGGNPC*                                ManagedNPC;                                        // 0xF0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBlackboardComponent*                  BlackboardComp;                                    // 0xF8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBTService_GGNotifyChasedNPC* GetDefaultObj();

};

// 0x80 (0xF0 - 0x70)
// Class Goat2.BTService_GGPoliceScan
class UBTService_GGPoliceScan : public UBTService
{
public:
	struct FBlackboardKeySelector                SelfActor;                                         // 0x70(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                TargetActor;                                       // 0x98(0x28)(Edit, NativeAccessSpecifierPublic)
	float                                        ScanRadius;                                        // 0xC0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ChanceToSetGoatTarget;                             // 0xC4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ChanceToSetNPCTarget;                              // 0xC8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawScan;                                         // 0xCC(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_EEC[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AGGCharacter*>                  BoundCharacters;                                   // 0xD0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class AActor*                                OwnerActor;                                        // 0xE0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBlackboardComponent*                  Blackboard;                                        // 0xE8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBTService_GGPoliceScan* GetDefaultObj();

	void OnNPCAttackedActors(class AGGNPC* NPCAttacking, TArray<class AActor*>& AttackedActors);
	void OnGoatHeadbutting(class AGGGoat* GoatHeadbutting, bool bHitSomething, TArray<class AActor*>& HeadbuttedActors, bool bIsChargeHeadbutt);
};

// 0xC0 (0x130 - 0x70)
// Class Goat2.BTService_GGScanForActors
class UBTService_GGScanForActors : public UBTService
{
public:
	int32                                        ChanceToScan;                                      // 0x70(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_F0F[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                ActorValueToFill;                                  // 0x78(0x28)(Edit, NativeAccessSpecifierPublic)
	bool                                         bOnlyLookWhenEmpty;                                // 0xA0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EActorScanTypes                   ActorsToScanFor;                                   // 0xA1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPreferNearestActor;                               // 0xA2(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_F1B[0x5];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class ECollisionChannel>         CollisionChannels;                                 // 0xA8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bRequireValidPath;                                 // 0xB8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_F27[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UNavigationQueryFilter>    FilterClass;                                       // 0xC0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bProjectToNavMesh;                                 // 0xC8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawScan;                                         // 0xC9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_F2F[0x6];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                ScanLocation;                                      // 0xD0(0x28)(Edit, NativeAccessSpecifierPublic)
	bool                                         bUseBBScanRadius;                                  // 0xF8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_F34[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                BBScanRadius;                                      // 0x100(0x28)(Edit, NativeAccessSpecifierPublic)
	float                                        ScanRadius;                                        // 0x128(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_F3C[0x4];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTService_GGScanForActors* GetDefaultObj();

};

// 0x90 (0x100 - 0x70)
// Class Goat2.BTService_GGScanForCharacter
class UBTService_GGScanForCharacter : public UBTService
{
public:
	struct FBlackboardKeySelector                ActorValueToFill;                                  // 0x70(0x28)(Edit, NativeAccessSpecifierPublic)
	bool                                         bOnlyLookWhenEmpty;                                // 0x98(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPickClosestCharacter;                             // 0x99(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLookForGoats;                                     // 0x9A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLookForHumanoids;                                 // 0x9B(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLookForAnimals;                                   // 0x9C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRequireCharacterInFront;                          // 0x9D(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOnlyLookForPassedOutNPCs;                         // 0x9E(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawScan;                                         // 0x9F(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                ScanLocation;                                      // 0xA0(0x28)(Edit, NativeAccessSpecifierPublic)
	bool                                         bUseBBScanRadius;                                  // 0xC8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_F75[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                BBScanRadius;                                      // 0xD0(0x28)(Edit, NativeAccessSpecifierPublic)
	float                                        ScanRadius;                                        // 0xF8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_F79[0x4];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTService_GGScanForCharacter* GetDefaultObj();

};

// 0x20 (0x90 - 0x70)
// Class Goat2.BTService_GGSetWalkCycleOverride
class UBTService_GGSetWalkCycleOverride : public UBTService
{
public:
	TArray<class UAnimSequenceBase*>             WalkCycleOverrides;                                // 0x70(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UAnimSequenceBase*>             RunCycleOverrides;                                 // 0x80(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTService_GGSetWalkCycleOverride* GetDefaultObj();

};

// 0x8 (0x78 - 0x70)
// Class Goat2.BTService_GGShouldPanic
class UBTService_GGShouldPanic : public UBTService
{
public:
	bool                                         CheckForBurning;                                   // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_FB3[0x7];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTService_GGShouldPanic* GetDefaultObj();

};

// 0x30 (0xA0 - 0x70)
// Class Goat2.BTService_GGSpeedBoost
class UBTService_GGSpeedBoost : public UBTService
{
public:
	struct FBlackboardKeySelector                SelfActor;                                         // 0x70(0x28)(Edit, NativeAccessSpecifierPublic)
	float                                        SpeedBoost;                                        // 0x98(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_FC3[0x4];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTService_GGSpeedBoost* GetDefaultObj();

};

// 0x38 (0xA8 - 0x70)
// Class Goat2.BTService_GGSpreadEventInRadius
class UBTService_GGSpreadEventInRadius : public UBTService
{
public:
	float                                        Radius;                                            // 0x70(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ChanceToSpread;                                    // 0x74(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         DrawSphere;                                        // 0x78(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_FEB[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                CurrentEvent;                                      // 0x80(0x28)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTService_GGSpreadEventInRadius* GetDefaultObj();

};

// 0x8 (0x78 - 0x70)
// Class Goat2.BTService_GGSpreadPanicInRadius
class UBTService_GGSpreadPanicInRadius : public UBTService
{
public:
	float                                        Radius;                                            // 0x70(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPanicTypes                       PanicType;                                         // 0x74(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanScareClowns;                                   // 0x75(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawSphere;                                       // 0x76(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_100D[0x1];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTService_GGSpreadPanicInRadius* GetDefaultObj();

};

// 0x0 (0x70 - 0x70)
// Class Goat2.BTTask_GGAbortEvent
class UBTTask_GGAbortEvent : public UBTTaskNode
{
public:

	static class UClass* StaticClass();
	static class UBTTask_GGAbortEvent* GetDefaultObj();

};

// 0x50 (0xC0 - 0x70)
// Class Goat2.BTTask_GGAttachStallItem
class UBTTask_GGAttachStallItem : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                NPC;                                               // 0x70(0x28)(Edit, NativeAccessSpecifierPrivate)
	struct FBlackboardKeySelector                StallEvent;                                        // 0x98(0x28)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTTask_GGAttachStallItem* GetDefaultObj();

};

// 0x118 (0x188 - 0x70)
// Class Goat2.BTTask_GGAttack
class UBTTask_GGAttack : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                TargetActor;                                       // 0x70(0x28)(Edit, NativeAccessSpecifierPublic)
	bool                                         bRequireTargetHit;                                 // 0x98(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideAttackVariations;                         // 0x99(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1073[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FNPCAttackVariation>           AttackVariations;                                  // 0xA0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1076[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FNPCAttackVariation                   SelectedVariation;                                 // 0xC0(0xA0)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_107A[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UBehaviorTreeComponent*                OwnerBT;                                           // 0x178(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGNPC*                                NPC;                                               // 0x180(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTTask_GGAttack* GetDefaultObj();

	void OnGGAnimNotifyTrigger(class AGGCharacter* NotifyingNPC, class UGGAnimNotify* AnimNotify, const struct FGameplayTag& NotifyTag);
	void OnAnimationEnded(class UAnimMontage* Montage, bool Interrupted);
};

// 0xF0 (0x160 - 0x70)
// Class Goat2.BTTask_GGBikeSteerTo
class UBTTask_GGBikeSteerTo : public UBTTaskNode
{
public:
	bool                                         DebugPrint;                                        // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1088[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                NextPoint;                                         // 0x78(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                LastPoint;                                         // 0xA0(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                ReachedLastPoint;                                  // 0xC8(0x28)(Edit, NativeAccessSpecifierPublic)
	float                                        YawAcceptanceRadius;                               // 0xF0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        YawSlowTurnRadius;                                 // 0xF4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlowTurnMultiplier;                                // 0xF8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinDistanceToBack;                                 // 0xFC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastNodeStopDistance;                              // 0x100(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeUntilInvertedInput;                            // 0x104(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InvertedInputDuration;                             // 0x108(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FeelerTraceMultiplier;                             // 0x10C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FeelerTraceMin;                                    // 0x110(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FeelerBackTraceMultiplier;                         // 0x114(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FeelerBackTraceMin;                                // 0x118(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1099[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGVehicle*                            Vehicle;                                           // 0x120(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_109B[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGBikeSteerTo* GetDefaultObj();

};

// 0x100 (0x170 - 0x70)
// Class Goat2.BTTask_GGBoatSteerTo
class UBTTask_GGBoatSteerTo : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                NextPoint;                                         // 0x70(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                LastPoint;                                         // 0x98(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                ReachedLastPoint;                                  // 0xC0(0x28)(Edit, NativeAccessSpecifierPublic)
	float                                        YawAcceptanceRadius;                               // 0xE8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        YawSlowTurnRadius;                                 // 0xEC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlowTurnMultiplier;                                // 0xF0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanGoBackwardsIfCloseEnough;                      // 0xF4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_10C5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinDistanceToBack;                                 // 0xF8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastNodeStopDistance;                              // 0xFC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeUntilInvertedInput;                            // 0x100(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InvertedInputDuration;                             // 0x104(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FeelerTraceMultiplier;                             // 0x108(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FeelerTraceMin;                                    // 0x10C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MiddleFeelerCheckInterval;                         // 0x110(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_10D4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MiddleFeelerTraceMin;                              // 0x118(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MiddleFeelerTraceMax;                              // 0x11C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MiddleFeelerTraceMultiplier;                       // 0x120(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MiddleFeelerTraceTurnAdjust;                       // 0x124(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AGGVehicle_Boat*                       Vehicle;                                           // 0x128(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_10DE[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGBoatSteerTo* GetDefaultObj();

};

// 0xA8 (0x118 - 0x70)
// Class Goat2.BTTask_GGCreateNPCEvent
class UBTTask_GGCreateNPCEvent : public UBTTaskNode
{
public:
	struct FGameplayTag                          EventToCreate;                                     // 0x70(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSpawnIntoOwnerArea;                               // 0x78(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSpawnIntoArea;                                    // 0x79(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_10F0[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          Area;                                              // 0x7C(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_10F3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                StartNPC;                                          // 0x88(0x28)(Edit, NativeAccessSpecifierPublic)
	bool                                         bUseStartNPC;                                      // 0xB0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_10F9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                StartLocation;                                     // 0xB8(0x28)(Edit, NativeAccessSpecifierPublic)
	bool                                         bUseStartLocation;                                 // 0xE0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_10FD[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                StartActor;                                        // 0xE8(0x28)(Edit, NativeAccessSpecifierPublic)
	bool                                         bUseStartActor;                                    // 0x110(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1100[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGCreateNPCEvent* GetDefaultObj();

};

// 0x60 (0xD0 - 0x70)
// Class Goat2.BTTask_GGDecideFishLocation
class UBTTask_GGDecideFishLocation : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                SelfActor;                                         // 0x70(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                TargetLocation;                                    // 0x98(0x28)(Edit, NativeAccessSpecifierPublic)
	float                                        DistanceInFront;                                   // 0xC0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CastAreaSize;                                      // 0xC4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxTraceAttempts;                                  // 0xC8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDebug;                                            // 0xCC(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1113[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGDecideFishLocation* GetDefaultObj();

};

// 0x90 (0x100 - 0x70)
// Class Goat2.BTTask_GGDefibrillate
class UBTTask_GGDefibrillate : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                TargetActor;                                       // 0x70(0x28)(Edit, NativeAccessSpecifierPublic)
	bool                                         bRequireTargetHit;                                 // 0x98(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_113E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UAnimMontage>           SoftDefibrillateAnimation;                         // 0xA0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceFromCharacter;                             // 0xC8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Radius;                                            // 0xCC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Height;                                            // 0xD0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1145[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UBehaviorTreeComponent*                OwnerBT;                                           // 0xF0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGNPC*                                NPC;                                               // 0xF8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTTask_GGDefibrillate* GetDefaultObj();

	void OnGGAnimNotifyTrigger(class AGGCharacter* NotifyingNPC, class UGGAnimNotify* AnimNotify, const struct FGameplayTag& NotifyTag);
	void OnAnimationEnded(class UAnimMontage* Montage, bool Interrupted);
};

// 0x10 (0x80 - 0x70)
// Class Goat2.BTTask_GGDropAttachedActors
class UBTTask_GGDropAttachedActors : public UBTTaskNode
{
public:
	enum class EActorsToDrop                     ActorsToDrop;                                      // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBecauseOfStartle;                                 // 0x71(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSetToDropAnimationActors;                         // 0x72(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_116A[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DropLaunchVelocity;                                // 0x74(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DroppedItemLifespan;                               // 0x78(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDestroyActors;                                    // 0x7C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_116C[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGDropAttachedActors* GetDefaultObj();

};

// 0x68 (0xD8 - 0x70)
// Class Goat2.BTTask_GGDropCharacter
class UBTTask_GGDropCharacter : public UBTTaskNode
{
public:
	class UAnimMontage*                          DropMontage;                                       // 0x70(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          AnimationNotifyTag;                                // 0x78(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bThrowCharacter;                                   // 0x80(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_117C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ImpulsePower;                                      // 0x84(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPutDroppedCharacterInBBValue;                     // 0x88(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_117F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                ValueToSet;                                        // 0x90(0x28)(Edit, NativeAccessSpecifierPublic)
	uint8                                        Pad_1180[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UBehaviorTreeComponent*                OwnerBT;                                           // 0xC8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGNPC_Humanoid*                       NPC;                                               // 0xD0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTTask_GGDropCharacter* GetDefaultObj();

	void OnGGAnimNotifyTrigger(class AGGCharacter* NotifyingNPC, class UGGAnimNotify* AnimNotify, const struct FGameplayTag& NotifyTag);
};

// 0x38 (0xA8 - 0x70)
// Class Goat2.BTTask_GGDropPickedUpActor
class UBTTask_GGDropPickedUpActor : public UBTTaskNode
{
public:
	class UAnimMontage*                          DropActorMontage;                                  // 0x70(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceInFront;                                   // 0x78(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanBecomeLostObject;                              // 0x7C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSetLifespanWhenDropped;                           // 0x7D(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1192[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LifeSpan;                                          // 0x80(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1193[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UBehaviorTreeComponent*                OwnerBT;                                           // 0x98(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGNPC_Humanoid*                       NPC;                                               // 0xA0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTTask_GGDropPickedUpActor* GetDefaultObj();

	void OnGGAnimNotifyTrigger(class AGGCharacter* NotifyingNPC, class UGGAnimNotify* AnimNotify, const struct FGameplayTag& NotifyTag);
};

// 0x30 (0xA0 - 0x70)
// Class Goat2.BTTask_GGEnableOrDisableEvent
class UBTTask_GGEnableOrDisableEvent : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                TargetActor;                                       // 0x70(0x28)(Edit, NativeAccessSpecifierPublic)
	bool                                         bEnableTheEvent;                                   // 0x98(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1199[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGEnableOrDisableEvent* GetDefaultObj();

};

// 0x8 (0x78 - 0x70)
// Class Goat2.BTTask_GGEndInteraction
class UBTTask_GGEndInteraction : public UBTTaskNode
{
public:
	bool                                         ResetOwnBBValues;                                  // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_119E[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGEndInteraction* GetDefaultObj();

};

// 0x68 (0xD8 - 0x70)
// Class Goat2.BTTask_GGEnterOrExitVehicle
class UBTTask_GGEnterOrExitVehicle : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                CharacterKey;                                      // 0x70(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                VehicleKey;                                        // 0x98(0x28)(Edit, NativeAccessSpecifierPublic)
	bool                                         bEnterVehicle;                                     // 0xC0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnterAsPassenger;                                 // 0xC1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_11B5[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                AttemptToEnterPassengerSlots;                      // 0xC8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTTask_GGEnterOrExitVehicle* GetDefaultObj();

};

// 0x30 (0xA0 - 0x70)
// Class Goat2.BTTask_GGFindDriveTarget
class UBTTask_GGFindDriveTarget : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                TargetLocation;                                    // 0x70(0x28)(Edit, NativeAccessSpecifierPublic)
	TSubclassOf<class UNavigationQueryFilter>    NavFilter;                                         // 0x98(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTTask_GGFindDriveTarget* GetDefaultObj();

};

// 0x38 (0xA8 - 0x70)
// Class Goat2.BTTask_GGFindNewTargetLoc
class UBTTask_GGFindNewTargetLoc : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                TargetLocationKey;                                 // 0x70(0x28)(Edit, NativeAccessSpecifierPrivate)
	TSubclassOf<class UNavigationQueryFilter>    FilterClass;                                       // 0x98(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        Radius;                                            // 0xA0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_11B9[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGFindNewTargetLoc* GetDefaultObj();

};

// 0x60 (0xD0 - 0x70)
// Class Goat2.BTTask_GGFireEventCallback
class UBTTask_GGFireEventCallback : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                CurrentEvent;                                      // 0x70(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                CurrentWaypoint;                                   // 0x98(0x28)(Edit, NativeAccessSpecifierPublic)
	int32                                        CallbackID;                                        // 0xC0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          CallbackTag;                                       // 0xC4(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_11BD[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGFireEventCallback* GetDefaultObj();

};

// 0x70 (0xE0 - 0x70)
// Class Goat2.BTTask_GGFireGun
class UBTTask_GGFireGun : public UBTTaskNode
{
public:
	class UAnimMontage*                          ShootMontage;                                      // 0x70(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AnimPlayRate;                                      // 0x78(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_11C4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AActor>                    ProjectileClass;                                   // 0x80(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                TargetActor;                                       // 0x88(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FVector                               TargetLocationAdjust;                              // 0xB0(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_11C7[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UBehaviorTreeComponent*                OwnerBT;                                           // 0xD0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGNPC_Humanoid*                       NPC;                                               // 0xD8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTTask_GGFireGun* GetDefaultObj();

	void OnGGAnimNotifyTrigger(class AGGCharacter* NotifyingNPC, class UGGAnimNotify* AnimNotify, const struct FGameplayTag& NotifyTag);
};

// 0x60 (0xD0 - 0x70)
// Class Goat2.BTTask_GGFishUpActor
class UBTTask_GGFishUpActor : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                SelfActor;                                         // 0x70(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                TargetLocation;                                    // 0x98(0x28)(Edit, NativeAccessSpecifierPublic)
	bool                                         bFishUpCharacters;                                 // 0xC0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_11CE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CharacterFishUpRadius;                             // 0xC4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FishUpPower;                                       // 0xC8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_11CF[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGFishUpActor* GetDefaultObj();

};

// 0x30 (0xA0 - 0x70)
// Class Goat2.BTTask_GGForgetLostObject
class UBTTask_GGForgetLostObject : public UBTTaskNode
{
public:
	bool                                         bForgetAllLostObjects;                             // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForgetAboutCurrent;                               // 0x71(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_11D5[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                ForgetAbout;                                       // 0x78(0x28)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTTask_GGForgetLostObject* GetDefaultObj();

};

// 0x50 (0xC0 - 0x70)
// Class Goat2.BTTask_GGGetAdmireGoat
class UBTTask_GGGetAdmireGoat : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                TargetActor;                                       // 0x70(0x28)(Edit, NativeAccessSpecifierPrivate)
	struct FBlackboardKeySelector                CurrentEvent;                                      // 0x98(0x28)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTTask_GGGetAdmireGoat* GetDefaultObj();

};

// 0x60 (0xD0 - 0x70)
// Class Goat2.BTTask_GGGetLocationInActorBounds
class UBTTask_GGGetLocationInActorBounds : public UBTTaskNode
{
public:
	TSubclassOf<class UNavigationQueryFilter>    FilterClass;                                       // 0x70(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                AroundLocationKey;                                 // 0x78(0x28)(Edit, NativeAccessSpecifierPublic)
	enum class EBehaviorActors                   AroundLocationActor;                               // 0xA0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_11DA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                TargetLocationKey;                                 // 0xA8(0x28)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTTask_GGGetLocationInActorBounds* GetDefaultObj();

};

// 0xA0 (0x110 - 0x70)
// Class Goat2.BTTask_GGGetLocationInRadius
class UBTTask_GGGetLocationInRadius : public UBTTaskNode
{
public:
	bool                                         bUseBBValue;                                       // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_11DE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Radius;                                            // 0x74(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FBlackboardKeySelector                BBRadius;                                          // 0x78(0x28)(Edit, NativeAccessSpecifierPrivate)
	bool                                         bUseBBLocation;                                    // 0xA0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_11E0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                AroundLocationKey;                                 // 0xA8(0x28)(Edit, NativeAccessSpecifierPrivate)
	enum class EBehaviorActors                   AroundLocationActor;                               // 0xD0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_11E1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                TargetLocationKey;                                 // 0xD8(0x28)(Edit, NativeAccessSpecifierPrivate)
	TSubclassOf<class UNavigationQueryFilter>    FilterClass;                                       // 0x100(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bDebugDrawRadius;                                  // 0x108(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_11E6[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGGetLocationInRadius* GetDefaultObj();

};

// 0x58 (0xC8 - 0x70)
// Class Goat2.BTTask_GGGetStallLoc
class UBTTask_GGGetStallLoc : public UBTTaskNode
{
public:
	bool                                         GetVendorLoc;                                      // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_11EA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                StallKey;                                          // 0x78(0x28)(Edit, NativeAccessSpecifierPrivate)
	struct FBlackboardKeySelector                VectorKey;                                         // 0xA0(0x28)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTTask_GGGetStallLoc* GetDefaultObj();

};

// 0x50 (0xC0 - 0x70)
// Class Goat2.BTTask_GGGetSuperstar
class UBTTask_GGGetSuperstar : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                TargetActor;                                       // 0x70(0x28)(Edit, NativeAccessSpecifierPrivate)
	struct FBlackboardKeySelector                CurrentEvent;                                      // 0x98(0x28)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTTask_GGGetSuperstar* GetDefaultObj();

};

// 0x118 (0x188 - 0x70)
// Class Goat2.BTTask_GGGrabCharacter
class UBTTask_GGGrabCharacter : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                SelfActor;                                         // 0x70(0x28)(Edit, NativeAccessSpecifierPrivate)
	struct FBlackboardKeySelector                TargetActor;                                       // 0x98(0x28)(Edit, NativeAccessSpecifierPrivate)
	class UAnimMontage*                          GrabMontage;                                       // 0xC0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                ConstraintAttachSocket;                            // 0xC8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                AttachBoneName;                                    // 0xD8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                GoatGrabBoneName;                                  // 0xE8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                NPCGrabBoneName;                                   // 0xF8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        PreventUnragdollFor;                               // 0x108(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EGrabbedCharacterAnimationType    AnimationType;                                     // 0x10C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1206[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              AngularRotationOffset;                             // 0x110(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                         bLockRotation;                                     // 0x11C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1207[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               RelativeGoatPosition;                              // 0x120(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               RelativeNPCPosition;                               // 0x12C(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bDoOverlapGrab;                                    // 0x138(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bRequireHit;                                       // 0x139(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1208[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DistanceFromCharacter;                             // 0x13C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        Height;                                            // 0x140(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        Radius;                                            // 0x144(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bDebugDrawGrab;                                    // 0x148(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_120B[0x2F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UBehaviorTreeComponent*                OwnerBT;                                           // 0x178(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGNPC*                                NPC;                                               // 0x180(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTTask_GGGrabCharacter* GetDefaultObj();

	void OnGGAnimNotifyTrigger(class AGGCharacter* NotifyingNPC, class UGGAnimNotify* AnimNotify, const struct FGameplayTag& NotifyTag);
	void OnAnimationEnded(class UAnimMontage* Montage, bool Interrupted);
};

// 0x98 (0x108 - 0x70)
// Class Goat2.BTTask_GGHandleWaypointAnimation
class UBTTask_GGHandleWaypointAnimation : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                CurrentEvent;                                      // 0x70(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                CurrentWaypoint;                                   // 0x98(0x28)(Edit, NativeAccessSpecifierPublic)
	uint8                                        Pad_1214[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UBehaviorTreeComponent*                NodeOwnerComp;                                     // 0xD0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGNPC*                                NPC;                                               // 0xD8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGNPCWaypoint*                        Waypoint;                                          // 0xE0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGNPCEvent_WorldInteraction*          WIEvent;                                           // 0xE8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1216[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGHandleWaypointAnimation* GetDefaultObj();

	void OnGGAnimNotifyTrigger(class AGGCharacter* TriggeredOnNPC, class UGGAnimNotify* AnimNotify, const struct FGameplayTag& NotifyTag);
	void OnAnimationEnded(class UAnimMontage* Montage, bool Interrupted);
};

// 0x58 (0xC8 - 0x70)
// Class Goat2.BTTask_GGInteractWithActor
class UBTTask_GGInteractWithActor : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                SelfActor;                                         // 0x70(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                InteractActor;                                     // 0x98(0x28)(Edit, NativeAccessSpecifierPublic)
	float                                        HeldFor;                                           // 0xC0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_121F[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGInteractWithActor* GetDefaultObj();

};

// 0x20 (0xB8 - 0x98)
// Class Goat2.BTTask_GGMatchSpeedWith
class UBTTask_GGMatchSpeedWith : public UBTTask_BlackboardBase
{
public:
	float                                        DistanceAboveToMatchSpeed;                         // 0x98(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bResetSpeedOnSucceeded;                            // 0x9C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllowSprinting;                                   // 0x9D(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_122B[0x1A];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGMatchSpeedWith* GetDefaultObj();

};

// 0xD8 (0x148 - 0x70)
// Class Goat2.BTTask_GGMountCharacter
class UBTTask_GGMountCharacter : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                TargetActor;                                       // 0x70(0x28)(Edit, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UStaticMeshComponent>    SaddleComponentClass;                              // 0x98(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRemoveCurrentBackGear;                            // 0xC0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1232[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MountDuration;                                     // 0xC4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bResetTargetActor;                                 // 0xC8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1233[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          VOTag;                                             // 0xCC(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VODelayMin;                                        // 0xD4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VODelayMax;                                        // 0xD8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpeedIncrease;                                     // 0xDC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGGRadialForceComponent>   ForceCompClass;                                    // 0xE0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AGGNPC_Humanoid*                       NPC;                                               // 0xE8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGCharacter*                          OtherCharacter;                                    // 0xF0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBehaviorTreeComponent*                OwnerBT;                                           // 0xF8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                  SaddleComp;                                        // 0x100(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1238[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGRadialForceComponent*               ForceComp;                                         // 0x138(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1239[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGMountCharacter* GetDefaultObj();

	void PlayVO();
	void Dismount();
};

// 0x130 (0x1A0 - 0x70)
// Class Goat2.BTTask_GGNotifyNPC
class UBTTask_GGNotifyNPC : public UBTTaskNode
{
public:
	enum class ENotifyNPCMode                    NotifyMode;                                        // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_123B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                NotifyAboutActor;                                  // 0x78(0x28)(Edit, NativeAccessSpecifierPublic)
	bool                                         bNotifyAboutAnActor;                               // 0xA0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_123C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                Location;                                          // 0xA8(0x28)(Edit, NativeAccessSpecifierPublic)
	bool                                         bUseLocation;                                      // 0xD0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_123D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                NPCToNotify;                                       // 0xD8(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ReactionTag;                                       // 0x100(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNotifyParameters                     NotifyParameters;                                  // 0x108(0x38)(Edit, NativeAccessSpecifierPublic)
	float                                        ProximityNotifyRadius;                             // 0x140(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1242[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FStartleDetailsSettings               StartleSettings;                                   // 0x148(0x50)(Edit, NativeAccessSpecifierPublic)
	bool                                         bIgnoreSelf;                                       // 0x198(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1243[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGNotifyNPC* GetDefaultObj();

};

// 0x68 (0xD8 - 0x70)
// Class Goat2.BTTask_GGPickNewWaypoint
class UBTTask_GGPickNewWaypoint : public UBTTaskNode
{
public:
	enum class EPickingType                      PickingType;                                       // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1249[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                BehaviorDataContainer;                             // 0x78(0x28)(Edit, NativeAccessSpecifierPublic)
	enum class EBehaviorActors                   GetWaypointFrom;                                   // 0xA0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_124B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                WorldInteractionEvent;                             // 0xA8(0x28)(Edit, NativeAccessSpecifierPublic)
	enum class EWIPickType                       WorldInteractionPickType;                          // 0xD0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanEditBehaviorContainer;                         // 0xD1(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCanEditWorldInteraction;                          // 0xD2(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_124E[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGPickNewWaypoint* GetDefaultObj();

};

// 0xA0 (0x110 - 0x70)
// Class Goat2.BTTask_GGPickUpActor
class UBTTask_GGPickUpActor : public UBTTaskNode
{
public:
	class UAnimMontage*                          PickupMontage;                                     // 0x70(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                TargetActor;                                       // 0x78(0x28)(Edit, NativeAccessSpecifierPublic)
	enum class EPickupType                       PickupType;                                        // 0xA0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1255[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                BehaviorDataContainer;                             // 0xA8(0x28)(Edit, NativeAccessSpecifierPublic)
	bool                                         bAttemptToUseLostObjectData;                       // 0xD0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAttachToHand;                                     // 0xD1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAttachmentHandSlot               HandSlot;                                          // 0xD2(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1257[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  AttachmentSocket;                                  // 0xD4(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECarryItemType                    CarryType;                                         // 0xDC(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDropOnRagdoll;                                    // 0xDD(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanTakeDamage;                                    // 0xDE(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanBecomeLostObject;                              // 0xDF(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanDropOnStartle;                                 // 0xE0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1259[0x17];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UBehaviorTreeComponent*                OwnerBT;                                           // 0xF8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGNPC_Humanoid*                       NPC;                                               // 0x100(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCanEditBehaviorContainer;                         // 0x108(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCanEditExisitingPActor;                           // 0x109(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_125C[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGPickUpActor* GetDefaultObj();

	void OnGGAnimNotifyTrigger(class AGGCharacter* NotifyingNPC, class UGGAnimNotify* AnimNotify, const struct FGameplayTag& NotifyTag);
};

// 0xA8 (0x118 - 0x70)
// Class Goat2.BTTask_GGPlayNPCAnimation
class UBTTask_GGPlayNPCAnimation : public UBTTaskNode
{
public:
	bool                                         NonBlocking;                                       // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1268[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BlockFor;                                          // 0x74(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayRate;                                          // 0x78(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRandomizePlayRate;                                // 0x7C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1269[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             PlayRateRange;                                     // 0x80(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAnimationType                    AnimationType;                                     // 0x88(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_126C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          AnimationToPlay;                                   // 0x90(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FWeightedElement_AnimMontage>  AnimationsToPickFrom;                              // 0x98(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                MontageKey;                                        // 0xA8(0x28)(Edit, NativeAccessSpecifierPublic)
	enum class ENPCAnimation                     MontageToSelect;                                   // 0xD0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_126E[0x2F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UBehaviorTreeComponent*                NodeOwnerComp;                                     // 0x100(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AGGNPC*                                NPC;                                               // 0x108(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanEditDefault;                                   // 0x110(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanEditBBKey;                                     // 0x111(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanEditNPCMontages;                               // 0x112(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_126F[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGPlayNPCAnimation* GetDefaultObj();

	void OnHeadSlotChanged(class AGGNPC_Humanoid* SetOnNPC, const class FString& OldHead, const class FString& NewHead);
	void OnAnimationTimerDone();
	void OnAnimationEnded(class UAnimMontage* Montage, bool Interrupted);
};

// 0x10 (0x80 - 0x70)
// Class Goat2.BTTask_GGPlaySound
class UBTTask_GGPlaySound : public UBTTaskNode
{
public:
	class USoundBase*                            SoundEffect;                                       // 0x70(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         AttachedToNPC;                                     // 0x78(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1274[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGPlaySound* GetDefaultObj();

};

// 0x18 (0x88 - 0x70)
// Class Goat2.BTTask_GGPlayVO
class UBTTask_GGPlayVO : public UBTTaskNode
{
public:
	struct FGameplayTag                          VoiceOverType;                                     // 0x70(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBlocking;                                         // 0x78(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanInterruptCurrentLine;                          // 0x79(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanBeStoppedByDamage;                             // 0x7A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1285[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UBehaviorTreeComponent*                NodeOwnerComp;                                     // 0x80(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTTask_GGPlayVO* GetDefaultObj();

	void OnVoiceLineFinished(class AGGNPC* NPC, const struct FGameplayTag& VOTag, bool bCouldPlayVO);
};

// 0x30 (0xA0 - 0x70)
// Class Goat2.BTTask_GGPoolActor
class UBTTask_GGPoolActor : public UBTTaskNode
{
public:
	bool                                         bPoolGrabbedActor;                                 // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_128B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                TargetActor;                                       // 0x78(0x28)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTTask_GGPoolActor* GetDefaultObj();

};

// 0x58 (0xC8 - 0x70)
// Class Goat2.BTTask_GGPPickNewTargetActor
class UBTTask_GGPPickNewTargetActor : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                BehaviorDataContainer;                             // 0x70(0x28)(Edit, NativeAccessSpecifierPrivate)
	struct FBlackboardKeySelector                TargetActor;                                       // 0x98(0x28)(Edit, NativeAccessSpecifierPrivate)
	enum class EBehaviorActors                   GetActorFrom;                                      // 0xC0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_128D[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGPPickNewTargetActor* GetDefaultObj();

};

// 0x50 (0xC0 - 0x70)
// Class Goat2.BTTask_GGReachedWaypoint
class UBTTask_GGReachedWaypoint : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                CurrentEvent;                                      // 0x70(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                CurrentWaypoint;                                   // 0x98(0x28)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTTask_GGReachedWaypoint* GetDefaultObj();

};

// 0x28 (0x98 - 0x70)
// Class Goat2.BTTask_GGRequestCSCommand
class UBTTask_GGRequestCSCommand : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                CurrentEvent;                                      // 0x70(0x28)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTTask_GGRequestCSCommand* GetDefaultObj();

};

// 0x10 (0x80 - 0x70)
// Class Goat2.BTTask_GGResetBBEntries
class UBTTask_GGResetBBEntries : public UBTTaskNode
{
public:
	TArray<struct FBlackboardKeySelector>        BlackboardEntries;                                 // 0x70(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTTask_GGResetBBEntries* GetDefaultObj();

};

// 0x0 (0x98 - 0x98)
// Class Goat2.BTTask_GGResetBBEntry
class UBTTask_GGResetBBEntry : public UBTTask_BlackboardBase
{
public:

	static class UClass* StaticClass();
	static class UBTTask_GGResetBBEntry* GetDefaultObj();

};

// 0x30 (0xA0 - 0x70)
// Class Goat2.BTTask_GGResetConversation
class UBTTask_GGResetConversation : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                ConversationTarget;                                // 0x70(0x28)(Edit, NativeAccessSpecifierPrivate)
	bool                                         bForOtherToo;                                      // 0x98(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bStopCurrentVO;                                    // 0x99(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1292[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGResetConversation* GetDefaultObj();

};

// 0x0 (0x70 - 0x70)
// Class Goat2.BTTask_GGResetCurrentWaypoint
class UBTTask_GGResetCurrentWaypoint : public UBTTaskNode
{
public:

	static class UClass* StaticClass();
	static class UBTTask_GGResetCurrentWaypoint* GetDefaultObj();

};

// 0x30 (0xA0 - 0x70)
// Class Goat2.BTTask_GGResetKnockedOut
class UBTTask_GGResetKnockedOut : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                NPCCharacter;                                      // 0x70(0x28)(Edit, NativeAccessSpecifierPrivate)
	bool                                         OnlyIfKnockedOut;                                  // 0x98(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1294[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGResetKnockedOut* GetDefaultObj();

};

// 0x30 (0xA0 - 0x70)
// Class Goat2.BTTask_GGResetNPCInteract
class UBTTask_GGResetNPCInteract : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                InteractCharacter;                                 // 0x70(0x28)(Edit, NativeAccessSpecifierPrivate)
	bool                                         OnlySelf;                                          // 0x98(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1295[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGResetNPCInteract* GetDefaultObj();

};

// 0x28 (0x98 - 0x70)
// Class Goat2.BTTask_GGResetNPCStandupDelay
class UBTTask_GGResetNPCStandupDelay : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                SelfActor;                                         // 0x70(0x28)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTTask_GGResetNPCStandupDelay* GetDefaultObj();

};

// 0x0 (0x70 - 0x70)
// Class Goat2.BTTask_GGResetProximityReact
class UBTTask_GGResetProximityReact : public UBTTaskNode
{
public:

	static class UClass* StaticClass();
	static class UBTTask_GGResetProximityReact* GetDefaultObj();

};

// 0x8 (0x78 - 0x70)
// Class Goat2.BTTask_GGReturnFromIdleNPC
class UBTTask_GGReturnFromIdleNPC : public UBTTaskNode
{
public:
	bool                                         bAttemptToResetCollision;                          // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bAlwaysSucceed;                                    // 0x71(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1299[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGReturnFromIdleNPC* GetDefaultObj();

};

// 0x10 (0xA8 - 0x98)
// Class Goat2.BTTask_GGRotateToFaceBBEntry
class UBTTask_GGRotateToFaceBBEntry : public UBTTask_BlackboardBase
{
public:
	float                                        Precision;                                         // 0x98(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRandomRotation;                                   // 0x9C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bClearFocusAfterSucceeded;                         // 0x9D(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInfiniteExecution;                                // 0x9E(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_129B[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CompleteAfterDuration;                             // 0xA0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_129D[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGRotateToFaceBBEntry* GetDefaultObj();

};

// 0xC0 (0x130 - 0x70)
// Class Goat2.BTTask_GGScanForActors
class UBTTask_GGScanForActors : public UBTTaskNode
{
public:
	int32                                        ChanceToScan;                                      // 0x70(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_129E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                ActorValueToFill;                                  // 0x78(0x28)(Edit, NativeAccessSpecifierPublic)
	enum class ETaskActorScanTypes               ActorsToScanFor;                                   // 0xA0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPreferNearestActor;                               // 0xA1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12A1[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class ECollisionChannel>         CollisionChannels;                                 // 0xA8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bRequireValidPath;                                 // 0xB8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12A4[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UNavigationQueryFilter>    FilterClass;                                       // 0xC0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bProjectToNavMesh;                                 // 0xC8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawScan;                                         // 0xC9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12A7[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                ScanLocation;                                      // 0xD0(0x28)(Edit, NativeAccessSpecifierPublic)
	bool                                         bUseBBScanRadius;                                  // 0xF8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12A8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                BBScanRadius;                                      // 0x100(0x28)(Edit, NativeAccessSpecifierPublic)
	float                                        ScanRadius;                                        // 0x128(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12A9[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGScanForActors* GetDefaultObj();

};

// 0x8 (0x78 - 0x70)
// Class Goat2.BTTask_GGSetAnimationState
class UBTTask_GGSetAnimationState : public UBTTaskNode
{
public:
	enum class ENPCAnimationStates               NewState;                                          // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12AA[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGSetAnimationState* GetDefaultObj();

};

// 0x50 (0xC0 - 0x70)
// Class Goat2.BTTask_GGSetBB_Actor
class UBTTask_GGSetBB_Actor : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                ValueToSet;                                        // 0x70(0x28)(Edit, NativeAccessSpecifierPrivate)
	struct FBlackboardKeySelector                ValueToFill;                                       // 0x98(0x28)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTTask_GGSetBB_Actor* GetDefaultObj();

};

// 0x30 (0xA0 - 0x70)
// Class Goat2.BTTask_GGSetBB_Bool
class UBTTask_GGSetBB_Bool : public UBTTaskNode
{
public:
	bool                                         Value;                                             // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_12B1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                BoolKey;                                           // 0x78(0x28)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTTask_GGSetBB_Bool* GetDefaultObj();

};

// 0x40 (0xB0 - 0x70)
// Class Goat2.BTTask_GGSetBB_Float
class UBTTask_GGSetBB_Float : public UBTTaskNode
{
public:
	float                                        Value;                                             // 0x70(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRandomInRange;                                    // 0x74(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12B4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             RandomRange;                                       // 0x78(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAddToCurrent;                                     // 0x80(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12B5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                FloatKey;                                          // 0x88(0x28)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTTask_GGSetBB_Float* GetDefaultObj();

};

// 0x30 (0xA0 - 0x70)
// Class Goat2.BTTask_GGSetBB_Int
class UBTTask_GGSetBB_Int : public UBTTaskNode
{
public:
	int32                                        Value;                                             // 0x70(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAddToCurrent;                                     // 0x74(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12BE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                IntKey;                                            // 0x78(0x28)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTTask_GGSetBB_Int* GetDefaultObj();

};

// 0x30 (0xA0 - 0x70)
// Class Goat2.BTTask_GGSetBB_Vector
class UBTTask_GGSetBB_Vector : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                ValueToChange;                                     // 0x70(0x28)(Edit, NativeAccessSpecifierPrivate)
	bool                                         bSetToPawnLocation;                                // 0x98(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_12C3[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGSetBB_Vector* GetDefaultObj();

};

// 0x30 (0xA0 - 0x70)
// Class Goat2.BTTask_GGSetBuyerEventState
class UBTTask_GGSetBuyerEventState : public UBTTaskNode
{
public:
	int32                                        StateToSet;                                        // 0x70(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_12C4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                StallEvent;                                        // 0x78(0x28)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTTask_GGSetBuyerEventState* GetDefaultObj();

};

// 0x30 (0xA0 - 0x70)
// Class Goat2.BTTask_GGSetCanPanic
class UBTTask_GGSetCanPanic : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                TargetActor;                                       // 0x70(0x28)(Edit, NativeAccessSpecifierPublic)
	bool                                         bResetToDefault;                                   // 0x98(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanPanic;                                         // 0x99(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12C6[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGSetCanPanic* GetDefaultObj();

};

// 0x30 (0xA0 - 0x70)
// Class Goat2.BTTask_GGSetCanProximityReact
class UBTTask_GGSetCanProximityReact : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                TargetActor;                                       // 0x70(0x28)(Edit, NativeAccessSpecifierPublic)
	bool                                         bResetToDefault;                                   // 0x98(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanProximityReact;                                // 0x99(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12CB[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGSetCanProximityReact* GetDefaultObj();

};

// 0x18 (0x88 - 0x70)
// Class Goat2.BTTask_GGSetCollisionProfile
class UBTTask_GGSetCollisionProfile : public UBTTaskNode
{
public:
	bool                                         bSkipWhenRagdolled;                                // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_12EC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          CapsuleProfileTag;                                 // 0x74(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          MeshProfileTag;                                    // 0x7C(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_12ED[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGSetCollisionProfile* GetDefaultObj();

};

// 0x58 (0xC8 - 0x70)
// Class Goat2.BTTask_GGSetConversationStarter
class UBTTask_GGSetConversationStarter : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                SelfActor;                                         // 0x70(0x28)(Edit, NativeAccessSpecifierPrivate)
	struct FBlackboardKeySelector                ConversationTarget;                                // 0x98(0x28)(Edit, NativeAccessSpecifierPrivate)
	enum class EConversationStates               StarterState;                                      // 0xC0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_12F4[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGSetConversationStarter* GetDefaultObj();

};

// 0x30 (0xA0 - 0x70)
// Class Goat2.BTTask_GGSetConversationState
class UBTTask_GGSetConversationState : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                TargetNPC;                                         // 0x70(0x28)(Edit, NativeAccessSpecifierPrivate)
	enum class EConversationStates               NewState;                                          // 0x98(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_12FC[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGSetConversationState* GetDefaultObj();

};

// 0x30 (0xA0 - 0x70)
// Class Goat2.BTTask_GGSetFocus
class UBTTask_GGSetFocus : public UBTTaskNode
{
public:
	bool                                         bClearFocus;                                       // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1303[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                NewFocusKey;                                       // 0x78(0x28)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTTask_GGSetFocus* GetDefaultObj();

};

// 0x38 (0xA8 - 0x70)
// Class Goat2.BTTask_GGSetLookAtOverride
class UBTTask_GGSetLookAtOverride : public UBTTaskNode
{
public:
	bool                                         bClearOverride;                                    // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_130B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                BlackboardActor;                                   // 0x78(0x28)(Edit, NativeAccessSpecifierPrivate)
	float                                        Duration;                                          // 0xA0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bResetOnRagdoll;                                   // 0xA4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bResetOnProximityReact;                            // 0xA5(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bResetOnExtremeMood;                               // 0xA6(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bResetOnPanic;                                     // 0xA7(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTTask_GGSetLookAtOverride* GetDefaultObj();

};

// 0xA8 (0x118 - 0x70)
// Class Goat2.BTTask_GGSetMood
class UBTTask_GGSetMood : public UBTTaskNode
{
public:
	enum class EMoods                            OnlySetIfMoodIs;                                   // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ResetInteraction;                                  // 0x71(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMoodSetType                      MoodSetType;                                       // 0x72(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMoods                            NewMood;                                           // 0x73(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1313[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EMoods>                    RandomMoodPool;                                    // 0x78(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         SetInteractMoodChange;                             // 0x88(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         SetSameOnSelf;                                     // 0x89(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1316[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                NewBBMood;                                         // 0x90(0x28)(Edit, NativeAccessSpecifierPublic)
	bool                                         SetAsDamagedBy;                                    // 0xB8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1319[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                TargetActor;                                       // 0xC0(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                FleeFrom;                                          // 0xE8(0x28)(Edit, NativeAccessSpecifierPublic)
	bool                                         bCanEditInteractMoodChange;                        // 0x110(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanEditDefault;                                   // 0x111(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanEditRandomMood;                                // 0x112(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanEditBBKey;                                     // 0x113(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanEditAngryWithTar;                              // 0x114(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanEditFleeFromLoc;                               // 0x115(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_131F[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGSetMood* GetDefaultObj();

};

// 0x30 (0xA0 - 0x70)
// Class Goat2.BTTask_GGSetMoodFromEvent
class UBTTask_GGSetMoodFromEvent : public UBTTaskNode
{
public:
	bool                                         UseEventChance;                                    // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1324[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                CurrentEvent;                                      // 0x78(0x28)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTTask_GGSetMoodFromEvent* GetDefaultObj();

};

// 0x8 (0x78 - 0x70)
// Class Goat2.BTTask_GGSetMovementMode
class UBTTask_GGSetMovementMode : public UBTTaskNode
{
public:
	enum class EMovementMode                     NewMovementMode;                                   // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ECustomMovementModes              CustomMovementMode;                                // 0x71(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_132A[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGSetMovementMode* GetDefaultObj();

};

// 0x8 (0x78 - 0x70)
// Class Goat2.BTTask_GGSetMoveSpeed
class UBTTask_GGSetMoveSpeed : public UBTTaskNode
{
public:
	enum class ENPCMoveMode                      MoveMode;                                          // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_132F[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGSetMoveSpeed* GetDefaultObj();

};

// 0x60 (0xD0 - 0x70)
// Class Goat2.BTTask_GGSetNPCEventState
class UBTTask_GGSetNPCEventState : public UBTTaskNode
{
public:
	int32                                        StateToSet;                                        // 0x70(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1332[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                NPCToSetOn;                                        // 0x78(0x28)(Edit, NativeAccessSpecifierPrivate)
	bool                                         bSetOnAllNPCs;                                     // 0xA0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1334[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                Event;                                             // 0xA8(0x28)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTTask_GGSetNPCEventState* GetDefaultObj();

};

// 0x78 (0xE8 - 0x70)
// Class Goat2.BTTask_GGSetObjectToAdmire
class UBTTask_GGSetObjectToAdmire : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                TargetActor;                                       // 0x70(0x28)(Edit, NativeAccessSpecifierPrivate)
	struct FBlackboardKeySelector                TargetLocation;                                    // 0x98(0x28)(Edit, NativeAccessSpecifierPrivate)
	struct FBlackboardKeySelector                CurrentEvent;                                      // 0xC0(0x28)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTTask_GGSetObjectToAdmire* GetDefaultObj();

};

// 0x30 (0xA0 - 0x70)
// Class Goat2.BTTask_GGSetPointAtActor
class UBTTask_GGSetPointAtActor : public UBTTaskNode
{
public:
	bool                                         bResetTargetToNull;                                // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_133B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                TargetActor;                                       // 0x78(0x28)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTTask_GGSetPointAtActor* GetDefaultObj();

};

// 0x30 (0xA0 - 0x70)
// Class Goat2.BTTask_GGSetRagdoll
class UBTTask_GGSetRagdoll : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                SelfActor;                                         // 0x70(0x28)(Edit, NativeAccessSpecifierPublic)
	bool                                         bNewRagdollState;                                  // 0x98(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSetPassedOut;                                     // 0x99(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_133D[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGSetRagdoll* GetDefaultObj();

};

// 0x10 (0xA8 - 0x98)
// Class Goat2.BTTask_GGSetRandomClassType
class UBTTask_GGSetRandomClassType : public UBTTask_BlackboardBase
{
public:
	TArray<TSubclassOf<class AActor>>            ClassesToChooseFrom;                               // 0x98(0x10)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBTTask_GGSetRandomClassType* GetDefaultObj();

};

// 0x18 (0xB0 - 0x98)
// Class Goat2.BTTask_GGSetRandomValue
class UBTTask_GGSetRandomValue : public UBTTask_BlackboardBase
{
public:
	struct FIntVector                            IntRandomRange;                                    // 0x98(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             FloatRandomRange;                                  // 0xA4(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanEditInt;                                       // 0xAC(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanEditFloat;                                     // 0xAD(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanEditVector;                                    // 0xAE(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanEditRotator;                                   // 0xAF(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBTTask_GGSetRandomValue* GetDefaultObj();

};

// 0x30 (0xA0 - 0x70)
// Class Goat2.BTTask_GGSetReactInitialized
class UBTTask_GGSetReactInitialized : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                ReactInitialized;                                  // 0x70(0x28)(Edit, NativeAccessSpecifierPublic)
	enum class EReactInitialized                 ValueToSet;                                        // 0x98(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_134D[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGSetReactInitialized* GetDefaultObj();

};

// 0x28 (0x98 - 0x70)
// Class Goat2.BTTask_GGSetReactType
class UBTTask_GGSetReactType : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                ReactType;                                         // 0x70(0x28)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTTask_GGSetReactType* GetDefaultObj();

};

// 0x0 (0x98 - 0x98)
// Class Goat2.BTTask_GGSetSelfActor
class UBTTask_GGSetSelfActor : public UBTTask_BlackboardBase
{
public:

	static class UClass* StaticClass();
	static class UBTTask_GGSetSelfActor* GetDefaultObj();

};

// 0x28 (0x98 - 0x70)
// Class Goat2.BTTask_GGSetStumbledBy
class UBTTask_GGSetStumbledBy : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                StumbledBy;                                        // 0x70(0x28)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTTask_GGSetStumbledBy* GetDefaultObj();

};

// 0x38 (0xA8 - 0x70)
// Class Goat2.BTTask_GGSetWasInState
class UBTTask_GGSetWasInState : public UBTTaskNode
{
public:
	enum class EWasInStates                      State;                                             // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         RemoveFromString;                                  // 0x71(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_135B[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                WasInStates;                                       // 0x78(0x28)(Edit, NativeAccessSpecifierPrivate)
	bool                                         ClearString;                                       // 0xA0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_135C[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGSetWasInState* GetDefaultObj();

};

// 0x138 (0x1A8 - 0x70)
// Class Goat2.BTTask_GGSpawnActor
class UBTTask_GGSpawnActor : public UBTTaskNode
{
public:
	enum class EActorSpawnType                   ActorSpawnType;                                    // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseSoftActorClass;                                // 0x71(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1367[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AActor>                    ActorClass;                                        // 0x78(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AActor>                  SoftActorClass;                                    // 0x80(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESpawnActorCollisionHandlingMethod CollisionHandlingMethod;                           // 0xA8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1369[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          Montage;                                           // 0xB0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          AnimationNotifyTag;                                // 0xB8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPreventFromRagdollingOwner;                       // 0xC0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EActorSpawnLocationType           ActorSpawnLocationType;                            // 0xC1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_136C[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               Location;                                          // 0xC4(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                BlackboardLocation;                                // 0xD0(0x28)(Edit, NativeAccessSpecifierPublic)
	float                                        DistanceInFront;                                   // 0xF8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeightAdjust;                                      // 0xFC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SocketName;                                        // 0x100(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EActorSpawnRotationType           ActorSpawnRotationType;                            // 0x108(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1370[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              Rotation;                                          // 0x10C(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bAttachToHand;                                     // 0x118(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAttachmentHandSlot               HandSlot;                                          // 0x119(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1373[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  AttachmentSocket;                                  // 0x11C(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECarryItemType                    CarryType;                                         // 0x124(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDropOnRagdoll;                                    // 0x125(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanTakeDamage;                                    // 0x126(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanBecomeLostObject;                              // 0x127(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanDropOnStartle;                                 // 0x128(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESameSocketAttach                 SameSocketAttachAction;                            // 0x129(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1376[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UStaticMesh>            MeshOverride;                                      // 0x130(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStartPhysicsSimulation;                           // 0x158(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bApplyAnInitialImpulse;                            // 0x159(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInPawnDirection;                                  // 0x15A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_137A[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ImpulsePower;                                      // 0x15C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               InitialImpulseDirection;                           // 0x160(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_137B[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UBehaviorTreeComponent*                OwnerBT;                                           // 0x180(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AGGNPC*                                OwnerNPC;                                          // 0x188(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_137D[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGSpawnActor* GetDefaultObj();

	void OnGGAnimNotifyTrigger(class AGGCharacter* NotifyingNPC, class UGGAnimNotify* AnimNotify, const struct FGameplayTag& NotifyTag);
};

// 0x28 (0x98 - 0x70)
// Class Goat2.BTTask_GGStandUp
class UBTTask_GGStandUp : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                Character;                                         // 0x70(0x28)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTTask_GGStandUp* GetDefaultObj();

};

// 0x68 (0xD8 - 0x70)
// Class Goat2.BTTask_GGStartInvestigating
class UBTTask_GGStartInvestigating : public UBTTaskNode
{
public:
	struct FGameplayTag                          InvestigationType;                                 // 0x70(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                ActorToInvestigate;                                // 0x78(0x28)(Edit, NativeAccessSpecifierPublic)
	bool                                         bUseActorToInvestigate;                            // 0xA0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_138C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                LocationToInvestigate;                             // 0xA8(0x28)(Edit, NativeAccessSpecifierPublic)
	bool                                         bUseLocationToInvestigate;                         // 0xD0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_138E[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGStartInvestigating* GetDefaultObj();

};

// 0x60 (0xF8 - 0x98)
// Class Goat2.BTTask_GGStartToPanic
class UBTTask_GGStartToPanic : public UBTTask_BlackboardBase
{
public:
	enum class EPanicTypes                       PanicType;                                         // 0x98(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSetSourceLocation;                                // 0x99(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1393[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                SourceLocation;                                    // 0xA0(0x28)(Edit, NativeAccessSpecifierPublic)
	bool                                         bSetSourceActor;                                   // 0xC8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1396[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                SourceActor;                                       // 0xD0(0x28)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTTask_GGStartToPanic* GetDefaultObj();

};

// 0x188 (0x1F8 - 0x70)
// Class Goat2.BTTask_GGSteerTo
class UBTTask_GGSteerTo : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                NextPoint;                                         // 0x70(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                LastPoint;                                         // 0x98(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                ReachedLastPoint;                                  // 0xC0(0x28)(Edit, NativeAccessSpecifierPublic)
	float                                        YawAcceptanceRadius;                               // 0xE8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        YawSlowTurnRadius;                                 // 0xEC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlowTurnMultiplier;                                // 0xF0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinDistanceToBack;                                 // 0xF4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastNodeStopDistance;                              // 0xF8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanUseCarHorn;                                     // 0xFC(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_139D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HornCD;                                            // 0x100(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HornChance;                                        // 0x104(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeUntilInvertedInput;                            // 0x108(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InvertedInputDuration;                             // 0x10C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FeelerTraceMultiplier;                             // 0x110(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FeelerTraceMin;                                    // 0x114(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FStartleDetailsSettings               NearHitStartleSettings;                            // 0x118(0x50)(Edit, NativeAccessSpecifierPublic)
	float                                        MiddleFeelerCheckInterval;                         // 0x168(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_139E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MiddleFeelerTraceMin;                              // 0x170(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MiddleFeelerTraceMax;                              // 0x174(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MiddleFeelerTraceMultiplier;                       // 0x178(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MiddleFeelerTraceTurnAdjust;                       // 0x17C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeUntilRunOverNPC;                               // 0x180(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StopCaringFor;                                     // 0x184(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AGGVehicle*                            Vehicle;                                           // 0x188(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_139F[0x68];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGSteerTo* GetDefaultObj();

};

// 0x0 (0x70 - 0x70)
// Class Goat2.BTTask_GGStopMontage
class UBTTask_GGStopMontage : public UBTTaskNode
{
public:

	static class UClass* StaticClass();
	static class UBTTask_GGStopMontage* GetDefaultObj();

};

// 0x0 (0x70 - 0x70)
// Class Goat2.BTTask_GGStopMovement
class UBTTask_GGStopMovement : public UBTTaskNode
{
public:

	static class UClass* StaticClass();
	static class UBTTask_GGStopMovement* GetDefaultObj();

};

// 0x28 (0x98 - 0x70)
// Class Goat2.BTTask_GGStopPanicking
class UBTTask_GGStopPanicking : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                SelfActor;                                         // 0x70(0x28)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTTask_GGStopPanicking* GetDefaultObj();

};

// 0x0 (0x70 - 0x70)
// Class Goat2.BTTask_GGStopTaxiRide
class UBTTask_GGStopTaxiRide : public UBTTaskNode
{
public:

	static class UClass* StaticClass();
	static class UBTTask_GGStopTaxiRide* GetDefaultObj();

};

// 0x8 (0x78 - 0x70)
// Class Goat2.BTTask_GGStopVehicleInput
class UBTTask_GGStopVehicleInput : public UBTTaskNode
{
public:
	bool                                         ClearThrottle;                                     // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         ClearSteering;                                     // 0x71(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_13B1[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGStopVehicleInput* GetDefaultObj();

};

// 0x0 (0x70 - 0x70)
// Class Goat2.BTTask_GGSwitchToRoaming
class UBTTask_GGSwitchToRoaming : public UBTTaskNode
{
public:

	static class UClass* StaticClass();
	static class UBTTask_GGSwitchToRoaming* GetDefaultObj();

};

// 0x78 (0xE8 - 0x70)
// Class Goat2.BTTask_GGTaxiRide
class UBTTask_GGTaxiRide : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                TargetActor;                                       // 0x70(0x28)(Edit, Protected, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UStaticMeshComponent>    SaddleComponentClass;                              // 0x98(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bRemoveCurrentBackGear;                            // 0xC0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bResetTargetActor;                                 // 0xC1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_13B7[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGNPC_Humanoid*                       NPC;                                               // 0xC8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGGoat*                               TaxiGoat;                                          // 0xD0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBehaviorTreeComponent*                OwnerBT;                                           // 0xD8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                  SaddleComp;                                        // 0xE0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTTask_GGTaxiRide* GetDefaultObj();

};

// 0x90 (0x100 - 0x70)
// Class Goat2.BTTask_GGThrowObject
class UBTTask_GGThrowObject : public UBTTaskNode
{
public:
	class UAnimMontage*                          ThrowMontage;                                      // 0x70(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FWeightedElement_ThrowingObject> ObjectsToThrow;                                    // 0x78(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                TargetActor;                                       // 0x88(0x28)(Edit, NativeAccessSpecifierPublic)
	float                                        ThrowForce;                                        // 0xB0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseAdequateForce;                                 // 0xB4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13BE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               TargetLocationAdjust;                              // 0xB8(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceInFront;                                   // 0xC4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AnimPlayRate;                                      // 0xC8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13BF[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UBehaviorTreeComponent*                OwnerBT;                                           // 0xE0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGNPC_Humanoid*                       NPC;                                               // 0xE8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGPhysicsActor*                       PActorToThrow;                                     // 0xF0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGPhysicsProjectile*                  PhysProjToThrow;                                   // 0xF8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTTask_GGThrowObject* GetDefaultObj();

	void OnGGAnimNotifyTrigger(class AGGCharacter* NotifyingNPC, class UGGAnimNotify* AnimNotify, const struct FGameplayTag& NotifyTag);
};

// 0x50 (0xC0 - 0x70)
// Class Goat2.BTTask_GGTriggerInstict
class UBTTask_GGTriggerInstict : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                TargetActor;                                       // 0x70(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTag                          InstinctTag;                                       // 0x98(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSpecialOwnerNPC;                                  // 0xA0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13C6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          NPCIdentifierTag;                                  // 0xA4(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSpecialTargetNPC;                                 // 0xAC(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13C7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          TargetNPCIdentifierTag;                            // 0xB0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScanGoatRadius;                                    // 0xB8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13C8[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGTriggerInstict* GetDefaultObj();

};

// 0x0 (0x70 - 0x70)
// Class Goat2.BTTask_GGUpdateLostObject
class UBTTask_GGUpdateLostObject : public UBTTaskNode
{
public:

	static class UClass* StaticClass();
	static class UBTTask_GGUpdateLostObject* GetDefaultObj();

};

// 0x8 (0x78 - 0x70)
// Class Goat2.BTTask_GGVehicleHandbrake
class UBTTask_GGVehicleHandbrake : public UBTTaskNode
{
public:
	bool                                         HandbrakeInput;                                    // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_13CC[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGVehicleHandbrake* GetDefaultObj();

};

// 0x98 (0x108 - 0x70)
// Class Goat2.BTTask_GGWait
class UBTTask_GGWait : public UBTTaskNode
{
public:
	enum class EWaitType                         WaitType;                                          // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13D1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WaitTime;                                          // 0x74(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RandomDeviation;                                   // 0x78(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13D2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                BlackboardKey;                                     // 0x80(0x28)(Edit, NativeAccessSpecifierPublic)
	bool                                         bUseWaypointPreAnimationWait;                      // 0xA8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13D4[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                BBFloatDuration;                                   // 0xB0(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                BBFloatDeviation;                                  // 0xD8(0x28)(Edit, NativeAccessSpecifierPublic)
	bool                                         bCanEditDefault;                                   // 0x100(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanEditBBKey;                                     // 0x101(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanEditFloatBBEntries;                            // 0x102(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_13D6[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_GGWait* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.EQContext_GGCSQueryLoc
class UEQContext_GGCSQueryLoc : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class UEQContext_GGCSQueryLoc* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.EQContext_GGCSQueryRot
class UEQContext_GGCSQueryRot : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class UEQContext_GGCSQueryRot* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.EQContext_GGFirstCSTarget
class UEQContext_GGFirstCSTarget : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class UEQContext_GGFirstCSTarget* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.EQContext_GGInteractActor
class UEQContext_GGInteractActor : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class UEQContext_GGInteractActor* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.EQContext_GGLastRoamLocation
class UEQContext_GGLastRoamLocation : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class UEQContext_GGLastRoamLocation* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.EQContext_GGLostObject
class UEQContext_GGLostObject : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class UEQContext_GGLostObject* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.EQContext_GGPanicLocation
class UEQContext_GGPanicLocation : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class UEQContext_GGPanicLocation* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.EQContext_GGPanicSourceActor
class UEQContext_GGPanicSourceActor : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class UEQContext_GGPanicSourceActor* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.EQContext_GGReactActor
class UEQContext_GGReactActor : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class UEQContext_GGReactActor* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.EQContext_GGReactLocation
class UEQContext_GGReactLocation : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class UEQContext_GGReactLocation* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.EQContext_GGScaryLocation
class UEQContext_GGScaryLocation : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class UEQContext_GGScaryLocation* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.EQContext_GGStumbledBy
class UEQContext_GGStumbledBy : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class UEQContext_GGStumbledBy* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.EQContext_GGTargetActor
class UEQContext_GGTargetActor : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class UEQContext_GGTargetActor* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.EQContext_GGTargetLocation
class UEQContext_GGTargetLocation : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class UEQContext_GGTargetLocation* GetDefaultObj();

};

// 0x140 (0x1C0 - 0x80)
// Class Goat2.EQGenerator_FilledCircle
class UEQGenerator_FilledCircle : public UEnvQueryGenerator_ProjectedPoints
{
public:
	float                                        OuterCircleRadius;                                 // 0x80(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        InnerCircleRadius;                                 // 0x84(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        NumberOfRings;                                     // 0x88(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        SpaceBetween;                                      // 0x8C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ArcAngle;                                          // 0x90(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_13F0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAIDataProviderFloatValue             OuterCircleRadiusParam;                            // 0x98(0x38)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue             InnerCircleRadiusParam;                            // 0xD0(0x38)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderIntValue               NumberOfRingsParam;                                // 0x108(0x38)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue             SpaceBetweenParam;                                 // 0x140(0x38)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue             ArcAngleParam;                                     // 0x178(0x38)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TSubclassOf<class UEnvQueryContext>          CircleCenter;                                      // 0x1B0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UEnvQueryContext>          ContextRotation;                                   // 0x1B8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UEQGenerator_FilledCircle* GetDefaultObj();

};

// 0x20 (0x218 - 0x1F8)
// Class Goat2.EQTest_GGNavAreas
class UEQTest_GGNavAreas : public UEnvQueryTest
{
public:
	TArray<TSubclassOf<class UNavArea>>          NavAreas;                                          // 0x1F8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FVector                               Extent;                                            // 0x208(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13F5[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UEQTest_GGNavAreas* GetDefaultObj();

};

// 0x28 (0x220 - 0x1F8)
// Class Goat2.EQTest_GGStationaryNPC
class UEQTest_GGStationaryNPC : public UEnvQueryTest
{
public:
	struct FEnvOverlapData                       OverlapData;                                       // 0x1F8(0x20)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                         DebugDraw;                                         // 0x218(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_13FB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        VelocityTolerance;                                 // 0x21C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UEQTest_GGStationaryNPC* GetDefaultObj();

};

// 0xC0 (0x2F0 - 0x230)
// Class Goat2.GG4DArtGallery
class AGG4DArtGallery : public AActor
{
public:
	int32                                        NumPoles;                                          // 0x230(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1400[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMesh*                           PoleMesh;                                          // 0x238(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               PoleScale;                                         // 0x240(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PoleDistanceFromCenter;                            // 0x24C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               PoleOffset;                                        // 0x250(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  PoleOneParameterName;                              // 0x25C(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  PoleTwoParameterName;                              // 0x264(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1402[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMesh*                           GateMesh;                                          // 0x270(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               GateOffset;                                        // 0x278(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               GateScale;                                         // 0x284(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ESplineMeshAxis                   GateForwardAxis;                                   // 0x290(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1403[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       Root;                                              // 0x298(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       PoleRoot;                                          // 0x2A0(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       ExhibitionsRoot;                                   // 0x2A8(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UStaticMeshComponent*>          Poles;                                             // 0x2B0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class USplineMeshComponent*>          Gates;                                             // 0x2C0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UMaterialInterface*>            ExhibitionMeshMaterials;                           // 0x2D0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UMaterialInstanceDynamic*>      ExhibitionMaterialInstances;                       // 0x2E0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AGG4DArtGallery* GetDefaultObj();

};

// 0xA0 (0x2D0 - 0x230)
// Class Goat2.GGPhysicsProjectile
class AGGPhysicsProjectile : public AActor
{
public:
	FMulticastInlineDelegateProperty_            OnSpecialTargetHitEvent;                           // 0x230(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UGGStaticMeshComponent*                Mesh;                                              // 0x240(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UArrowComponent*                       ForwardDirectionArrow;                             // 0x248(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProjectileMovementComponent*          ProjectileMovement;                                // 0x250(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAddArrowTranslationToSpawnLocation;               // 0x258(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1416[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StickToTargetOffset;                               // 0x25C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundCue*                             LaunchSound;                                       // 0x260(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       LaunchParticles;                                   // 0x268(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIgnoreOwnerWhenMoving;                            // 0x270(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPlayVehicleImpactSound;                           // 0x271(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPlayPhysicsActorImpactSound;                      // 0x272(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EGGProjectileHitResponse          HitResponseNormalTarget;                           // 0x273(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bResolveNormalHitResponseInChildClass;             // 0x274(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bStayActiveAfterHit;                               // 0x275(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1418[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundCue*                             TargetHitSound;                                    // 0x278(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       TargetHitParticles;                                // 0x280(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EGGProjectileHitResponse          HitResponseSpecialTarget;                          // 0x288(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bResolveSpecialHitResponseInChildClass;            // 0x289(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1419[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundCue*                             SpecialTargetHitSound;                             // 0x290(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       SpecialTargetHitParticles;                         // 0x298(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class AActor>>            SpecialTargets;                                    // 0x2A0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	bool                                         bSpecialTargetsAreBlackList;                       // 0x2B0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_141B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGPhysicsActor_Base*                  PhysicsActor;                                      // 0x2B8(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAudioComponent*                       LaunchAudioComponent;                              // 0x2C0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              LaunchParticlesComponent;                          // 0x2C8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AGGPhysicsProjectile* GetDefaultObj();

	class AGGPhysicsProjectile* SpawnProjectile_K2(const struct FTransform& SpawnTransform, TSubclassOf<class AGGPhysicsProjectile>& Class, class AActor* ProjectileOwner);
	void OnSpecialTargetHit_K2(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void OnRepPhysicsActor();
	void OnNormalTargetHit_K2(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void OnHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void OnAttachedActorDestroyed(class AActor* DestroyedActor);
};

// 0x60 (0x330 - 0x2D0)
// Class Goat2.GGAbominanaGoo
class AGGAbominanaGoo : public AGGPhysicsProjectile
{
public:
	class UCurveFloat*                           ChargePercentageToHitRadius;                       // 0x2D0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          GameplayCueHitTag;                                 // 0x2D8(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDebugProjectile;                                  // 0x2E0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_141E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ProjectileScaleAtMaxCharge;                        // 0x2E4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ParticleScaleAtMaxCharge;                          // 0x2E8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          AbominanaIdentifierTag;                            // 0x2EC(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1420[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UDamageType>               DamageTypeClass;                                   // 0x2F8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageAmount;                                      // 0x300(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ImpulseForce;                                      // 0x304(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  BananaMeshRotationSocket;                          // 0x308(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AGGPhysicsActor_AbominanaBanana> BananaActor;                                       // 0x310(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        AmountOfNPCsToHit;                                 // 0x318(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          InstinctTag;                                       // 0x31C(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1421[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGAbominanaGoo* GetDefaultObj();

};

// 0x0 (0x230 - 0x230)
// Class Goat2.GGAchievement
class AGGAchievement : public AActor
{
public:

	static class UClass* StaticClass();
	static class AGGAchievement* GetDefaultObj();

	void OnAchievementInitialize();
	bool HasMetRequirements(bool bIsClient, bool bIsMainMenu, bool bIsIsland);
	TArray<class AGGPlayerController*> GetPlayersInWorld();
};

// 0xB0 (0xE0 - 0x30)
// Class Goat2.GGAchievementSubsystem
class UGGAchievementSubsystem : public UGameInstanceSubsystem
{
public:
	uint8                                        Pad_1432[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UDataTable*                            AchievementDataTable;                              // 0x90(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1433[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AGGAchievement*>                SpawnedAchievements;                               // 0xB0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1434[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGAchievementSubsystem* GetDefaultObj();

	void UnlockAchievements(const TArray<class FString>& AchievementIDs, class AGGPlayerController* PC);
	void UnlockAchievement(const class FString& AchievementID, class AGGPlayerController* PC);
	void QueryAchievements();
};

// 0x48 (0x2A8 - 0x260)
// Class Goat2.GGActionHintBarEntry
class UGGActionHintBarEntry : public UUserWidget
{
public:
	struct FActionHintStruct                     ActionHint;                                        // 0x260(0x40)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                         bIsEdgePosition;                                   // 0x2A0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1436[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MobileSidePaddingPercentage;                       // 0x2A4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGActionHintBarEntry* GetDefaultObj();

	void OnHintUpdated();
};

// 0xA8 (0x308 - 0x260)
// Class Goat2.GGUserWidget
class UGGUserWidget : public UUserWidget
{
public:
	struct FGameplayTag                          WidgetTag;                                         // 0x260(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowFocusMarkerOnHover;                           // 0x268(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowFocusMarkerOnFocusMobile;                     // 0x269(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFocusOnHover;                                     // 0x26A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1465[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnWidgetInteracted;                                // 0x270(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnWidgetHovered;                                   // 0x280(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnWidgetUnhovered;                                 // 0x290(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnWidgetDoubleClicked;                             // 0x2A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnWidgetToggled;                                   // 0x2B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnWidgetAddedToFocusPath;                          // 0x2C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnWidgetRemovedFromFocusPath;                      // 0x2D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class FName                                  ReturnActionMapping;                               // 0x2E0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ExitActionMapping;                                 // 0x2E8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  InteractActionMapping;                             // 0x2F0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                               FocusMarker;                                       // 0x2F8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1469[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGUserWidget* GetDefaultObj();

	void SetFocusToWidget();
	void SetEffectSource(const struct FGameplayTag& InEffectTag, const struct FGameplayTag& InSourceTag, bool bEnabled);
	void OnSetIsEnabled(bool bInIsEnabled);
	void OnFocusMarkerEnabled(bool bEnabled, bool bPrevious);
	bool IsMenuPathInteractable();
	bool HasFocus();
	class UGGMenuUserWidget* GetTopMenu();
	class AGGGoat* GetOwningGGPlayerPawn();
	class AGGPlayerController* GetOwningGGPlayer();
	class UGGLocalPlayer* GetOwningGGLocalPlayer();
	class UGGMenuUserWidget* GetNearestMenuParent();
	class UWidget* GetInitialWidgetFocus();
	class UGGMenuComponent* GetGGMenuComponent();
	void EventOnWidgetInteracted(class UGGUserWidget* Widget, const struct FPointerEvent& PointerEvent, const struct FKeyEvent& KeyEvent);
};

// 0x18 (0x320 - 0x308)
// Class Goat2.GGMenuComponentUserWidget
class UGGMenuComponentUserWidget : public UGGUserWidget
{
public:
	bool                                         bGiveFocusOnSpawn;                                 // 0x308(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1473[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGMenuUserWidget*                     OwningTab;                                         // 0x310(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGUserWidget*                         SpawningWidget;                                    // 0x318(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGMenuComponentUserWidget* GetDefaultObj();

	bool RemoveWidget();
	void OnAssignedParentView(class UGGMenuUserWidget* InTab, class UGGUserWidget* InSpawningWidget);
	class UGGMenuUserWidget* GetOwningTab();
	class UGGMenuUserWidget* GetOwningMenu();
};

// 0x78 (0x398 - 0x320)
// Class Goat2.GGActionHintBarUserWidget
class UGGActionHintBarUserWidget : public UGGMenuComponentUserWidget
{
public:
	TArray<struct FActionHintStruct>             ActionHints;                                       // 0x320(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FActionHintStruct>             BaseHints;                                         // 0x330(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UGGActionHintBarEntry>   EntryWidgetClass;                                  // 0x340(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnActionHintWidgetInteracted;                      // 0x368(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class UHorizontalBox*                        LeftHints;                                         // 0x378(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHorizontalBox*                        CenterHints;                                       // 0x380(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHorizontalBox*                        RightHints;                                        // 0x388(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowBaseHints;                                    // 0x390(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1494[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGActionHintBarUserWidget* GetDefaultObj();

	void UpdateHint(const struct FActionHintStruct& Hint);
	void RebuildHints();
	void OnActionHintEntryCreated(class UGGActionHintBarEntry* EntryWidget);
	TArray<class UGGActionHintBarEntry*> GetEntries(class FName ActionName);
	void ActionHintWidgetInteracted(class UGGUserWidget* Widget, const struct FActionHintStruct& Hint);
};

// 0x118 (0x420 - 0x308)
// Class Goat2.GGNotificationUserWidget
class UGGNotificationUserWidget : public UGGUserWidget
{
public:
	uint8                                        Pad_14B4[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 IncludedTags;                                      // 0x328(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 ExcludedTags;                                      // 0x348(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 IgnoredContentTags;                                // 0x368(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FAdvancedNotificationTagRuleset       AdvancedRules;                                     // 0x388(0x10)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	uint8                                        Pad_14B5[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FNotification                         CurrentNotification;                               // 0x3A8(0x60)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_14B6[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGNotificationUserWidget* GetDefaultObj();

	void UpdateWidgetBlueprint(const struct FNotification& Notification);
	void ShowWidgetBlueprint(const struct FNotification& Notification);
	bool ShouldClearQueue(const struct FNotification& Notification);
	void PurgeWidget();
	void OnNotificationDispatched(const struct FGameplayTag& Tag, const struct FNotification& Notification);
	bool IsWidgetReady(const struct FNotification& Notification);
	void HideWidgetBlueprint();
	void HideWidget(enum class ENotificationRemovalReason Reason);
	float GetWidgetDurationExplicit(class UUserWidget* Widget, const struct FNotification& Notification, enum class ENotificationDurationType Type);
	bool GetCurrentNotificationMatchesID(const class FString& NotificationID);
	void ClearWidgetBlueprint();
	void ClearWidget(enum class ENotificationRemovalReason Reason);
};

// 0x40 (0x460 - 0x420)
// Class Goat2.GGNotificationContainerWidget
class UGGNotificationContainerWidget : public UGGNotificationUserWidget
{
public:
	class UDataTable*                            WidgetClassesDataTable;                            // 0x420(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>               DefaultWidgetClass;                                // 0x428(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPanelWidget*                          WidgetContainer;                                   // 0x430(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFillWidgetContainer;                              // 0x438(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14BD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DefaultClearTimerDuration;                         // 0x43C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           ActiveWidget;                                      // 0x440(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14BE[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGNotificationContainerWidget* GetDefaultObj();

	void ForceClear();
};

// 0x0 (0x460 - 0x460)
// Class Goat2.GGActionUserWidget
class UGGActionUserWidget : public UGGNotificationContainerWidget
{
public:

	static class UClass* StaticClass();
	static class UGGActionUserWidget* GetDefaultObj();

};

// 0x28 (0x50 - 0x28)
// Class Goat2.GGActorFactoryAssetUserData
class UGGActorFactoryAssetUserData : public UAssetUserData
{
public:
	TSoftClassPtr<class AActor>                  BlueprintToSpawn;                                  // 0x28(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGActorFactoryAssetUserData* GetDefaultObj();

};

// 0x88 (0xB8 - 0x30)
// Class Goat2.GGAggregatedNPCTickSystem
class UGGAggregatedNPCTickSystem : public UWorldSubsystem
{
public:
	uint8                                        Pad_14C6[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGGAggregatedTick>             CharacterTicks;                                    // 0x38(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AGGCharacter*>                  CharactersToRemove;                                // 0x48(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_14C8[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGGAggregatedTick>             CachedCharacterTicks;                              // 0x98(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_14C9[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGAggregatedNPCTickSystem* GetDefaultObj();

	void SetActive(bool bShouldBeActive);
};

// 0x28 (0x360 - 0x338)
// Class Goat2.GGAIController
class AGGAIController : public AAIController
{
public:
	class UBehaviorTreeComponent*                BehaviorTreeComp;                                  // 0x338(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBlackboardComponent*                  BlackboardComp;                                    // 0x340(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBehaviorTree*                         RoamingTree;                                       // 0x348(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14CF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGNPC*                                ControlledNPC;                                     // 0x358(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AGGAIController* GetDefaultObj();

	void SwitchToRoaming();
	void StopBehavior();
	void StartBehavior();
	void SetNotChasingActor();
	class AGGNPC* GetControlledGGNPC();
};

// 0x8 (0x368 - 0x360)
// Class Goat2.GGAIController_Animal
class AGGAIController_Animal : public AGGAIController
{
public:
	class AGGNPC_Animal*                         ControlledAnimal;                                  // 0x360(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AGGAIController_Animal* GetDefaultObj();

	class AGGNPC_Animal* GetControlledAnimal();
};

// 0x288 (0x5E8 - 0x360)
// Class Goat2.GGAIController_Humanoid
class AGGAIController_Humanoid : public AGGAIController
{
public:
	float                                        SightRadius;                                       // 0x360(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LoseSightRadius;                                   // 0x364(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PeripheralVisionAngleDegrees;                      // 0x368(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14EC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGNPCInteractDataAsset*               InteractDataAsset;                                 // 0x370(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FStartleDetailsSettings               PanickedNPCStartleSettings;                        // 0x378(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FStartleDetailsSettings               PassedOutNPCStartleSettings;                       // 0x3C8(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FStartleDetailsSettings               BurningActorStartleSettings;                       // 0x418(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FStartleDetailsSettings               DangerousObjectStartleSettings;                    // 0x468(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FStartleDetailsSettings               BraceForImpactStartleSettings;                     // 0x4B8(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                        BraceForImpactDotCompare;                          // 0x508(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ChanceToBraceForImpact;                            // 0x50C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ForgetBraceIgnoreAfter;                            // 0x510(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14EE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class AGGGoat*, float>                  IgnoreGoatsForBrace;                               // 0x518(0x50)(Protected, NativeAccessSpecifierProtected)
	class UGGNPCManager*                         NPCManager;                                        // 0x568(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAISenseConfig_Sight*                  SightConfig;                                       // 0x570(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_14EF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FInteractionCooldownElement>   InteractionCooldowns;                              // 0x580(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TMap<class AGGNPC*, float>                   RecentlySeenPukingNPCs;                            // 0x590(0x50)(NativeAccessSpecifierPrivate)
	class AGGNPC_Humanoid*                       ControlledHumanoid;                                // 0x5E0(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AGGAIController_Humanoid* GetDefaultObj();

	void TargetPerceptionUpdated(class AActor* UpdatedActor, const struct FAIStimulus& Stimulus);
	void SetSightEnabled(bool bNewEnabled);
	void PerceptionUpdated(TArray<class AActor*>& UpdatedActors);
	void NPCPerceptionUpdated(class AGGNPC_Humanoid* UpdatedNPC, const struct FAIStimulus& Stimulus);
	bool JoinEvent(class AGGNPCEvent* EventToStart, bool CalledFromEvent);
	bool IsSightEnabled();
	void GoatPerceptionUpdated(class AGGGoat* UpdatedGoat, const struct FAIStimulus& Stimulus);
	class AGGNPCEvent* GetCurrentEvent();
	class AGGNPC_Humanoid* GetControlledHumanoid();
	void AbortEvent(bool CalledFromEvent);
};

// 0x78 (0x2A8 - 0x230)
// Class Goat2.GGAlternateMovementCamera
class AGGAlternateMovementCamera : public AActor
{
public:
	class USceneComponent*                       SceneRootComponent;                                // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCameraComponent*                      CameraComponent;                                   // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        GoatRotationSpeed;                                 // 0x240(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               TopDownOffset;                                     // 0x244(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              TopDownCameraRotation;                             // 0x250(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        TopDownInterpSpeed;                                // 0x25C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SideScrollerOffset;                                // 0x260(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              SideScrollerCameraRotation;                        // 0x26C(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        SideScrollerInterpSpeed;                           // 0x278(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ELSRotationMode                   RotationModeOverride;                              // 0x27C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ELSInAirRotationMode              InAirRotationModeOverride;                         // 0x27D(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideRotationMode;                             // 0x27E(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideInAirRotationMode;                        // 0x27F(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AGGPlayerController*                   ControlledPlayer;                                  // 0x280(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGGoat*                               ControlledGoat;                                    // 0x288(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_150B[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGAlternateMovementCamera* GetDefaultObj();

	void StartPlayerControl(class AGGPlayerController* Player, enum class EAlternateMode AlternateMode, float CameraBlendInTime);
	void SetStaticCameraLocation(const struct FVector& Location, float InterpSpeed);
	void ResetStaticCameraLocation();
	void ResetPlayerControl(float CameraBlendOutTime);
	bool IsPlayerControlled();
	bool HasStaticCameraLocation();
};

// 0x730 (0x760 - 0x30)
// Class Goat2.GGAlternativeGoatDataAsset
class UGGAlternativeGoatDataAsset : public UDataAsset
{
public:
	class FName                                  AltGoatName;                                       // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          AltGoatTag;                                        // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGGoatGearInfoDataAsset*              AltGoatDefaultBaa;                                 // 0x40(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                         BodyMesh;                                          // 0x48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicsAsset*                         PhysicsAssetOverride;                              // 0x50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicsAsset*                         RagdollPhysicsAssetOverride;                       // 0x58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UAnimInstance>           AnimationBP;                                       // 0x60(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FMatElement>                   DefaultMaterialOverrides;                          // 0x88(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FVector                               MeshRelativeLocation;                              // 0x98(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              MeshRelativeRotation;                              // 0xA4(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               MeshRelativeLocationAsDriver;                      // 0xB0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MeshRelativeLocationAsPassenger;                   // 0xBC(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MeshRelativeLocationAsRider;                       // 0xC8(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1517[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<TSoftClassPtr<class AGGVehicle>, struct FGGAltGoatMeshTransformsForVehicles> MeshTransformsForVehicles;                         // 0xD8(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FVector                               HeadOffsetMarginUnderwater;                        // 0x128(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CapsuleHalfSize;                                   // 0x134(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CapsuleRadius;                                     // 0x138(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideHornsComp;                                    // 0x13C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1519[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMesh*                           DefaultHorn;                                       // 0x140(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                         ShellEffectMeshOverride;                           // 0x148(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VisualizerCameraArmLength;                         // 0x150(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               VisualizerRelativeLocation;                        // 0x154(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          BrakingMontage;                                    // 0x160(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FollowBoneName;                                    // 0x168(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PelvisBoneName;                                    // 0x170(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FloatingBoneName;                                  // 0x178(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseDifferentRelativeLocationsWithZoom;            // 0x180(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_151C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               RelativeCameraBoomLocation;                        // 0x184(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RelativeZoomedInCameraBoomLocation;                // 0x190(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_151D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           RelativeZoomLocationCurve;                         // 0x1A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             CameraBoomMinMaxLength;                            // 0x1A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraBoomInitialTargetLength;                     // 0x1B0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GoatTranslucencyDistance;                          // 0x1B4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InAirDistanceCheck;                                // 0x1B8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_151F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class ULevelSequence>         WalkInLevelSequence;                               // 0x1C0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGGLimbBones                          LimbBones;                                         // 0x1E8(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          EarBones;                                          // 0x220(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                  FallbackGrabBoneName;                              // 0x230(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                  BuyGearMontages;                                   // 0x238(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bUseGFur;                                          // 0x248(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1520[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInterface*                    DefaultGFurMaterial;                               // 0x250(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                         GFurGrowMesh;                                      // 0x258(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFurSplines*                           DefaultGFurSplines;                                // 0x260(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFurLod>                       GFurLODs;                                          // 0x268(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bUseCapsuleShadows;                                // 0x278(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCastCapsuleDirectShadow;                          // 0x279(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCastCapsuleIndirectShadow;                        // 0x27A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCastCapsuleDirectShadowMobile;                    // 0x27B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCastCapsuleIndirectShadowMobile;                  // 0x27C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1523[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CapsuleIndirectShadowMinVisibility;                // 0x280(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnRate;                                          // 0x284(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SprintTurnRate;                                    // 0x288(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MidAirTurnRate;                                    // 0x28C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ForwardSpeed;                                      // 0x290(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BackwardSpeed;                                     // 0x294(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WalkingSpeed;                                      // 0x298(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StrafeMultiplier;                                  // 0x29C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SprintMultiplier;                                  // 0x2A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShallowWaterDepth;                                 // 0x2A4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SwimForwardSpeed;                                  // 0x2A8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SwimBackwardSpeed;                                 // 0x2AC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SwimStrafeMultiplier;                              // 0x2B0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SwimSprintMultiplier;                              // 0x2B4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLSGaitsFloat                         FlyingMovementSpeeds;                              // 0x2B8(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	float                                        FlyingRotationSpeed;                               // 0x2C4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpinningMaxRotationRate;                           // 0x2C8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RunDuringSprintSpeed;                              // 0x2CC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RunDuringSprintTurnSpeed;                          // 0x2D0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPrintMoveAndTurnSpeed;                            // 0x2D4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_152A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Weight;                                            // 0x2D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpVelocity;                                      // 0x2DC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                BounceJumpZArray;                                  // 0x2E0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        WallJumpZ;                                         // 0x2F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WallrunMinInitialSpeed;                            // 0x2F4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WallrunMaxSpeed;                                   // 0x2F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WallrunBaseFrictionFactor;                         // 0x2FC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WallrunBumpThreshold;                              // 0x300(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsHumanoid;                                       // 0x304(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_152F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  RagdollSyncBoneName;                               // 0x308(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGGRagdollMovementSettings            GroundRagdollMovementSettings;                     // 0x310(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FGGRagdollMovementSettings            AirRagdollMovementSettings;                        // 0x330(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FGGRagdollMovementSettings            SwimmingRagdollMovementSettings;                   // 0x350(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	float                                        RagdollOnLandedVelocityThreshold;                  // 0x370(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Buoyancy;                                          // 0x374(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanNeckRagdoll;                                   // 0x378(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanNeckRagdollWhenLadderClimbing;                 // 0x379(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1538[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  NeckRagdollBone;                                   // 0x37C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1539[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          NeckRagdollBodyInstances;                          // 0x388(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UPhysicsAsset*                         NeckRagdollPhysicsAssetOverride;                   // 0x398(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FStatusEffectOverride>         StatusEffectOverrides;                             // 0x3A0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UAnimMontage*                          ElectrifiedAnimation;                              // 0x3B0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BouncyStatusBounceForce;                           // 0x3B8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BouncyStatusBoneName;                              // 0x3BC(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_153C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          HeadbuttMontage;                                   // 0x3C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          ChargeHeadbuttMontage;                             // 0x3D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          LickMontage;                                       // 0x3D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          BackKickMontage;                                   // 0x3E0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGGGoatAbility>            HeadbuttAbility;                                   // 0x3E8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGGGoatAbility>            ChargeHeadbuttAbility;                             // 0x3F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGGGoatAbility>            LickAbility;                                       // 0x3F8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGGGoatAbility>            BackKickAbility;                                   // 0x400(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDefaultGearOverrides                 DefaultHeadOverrides;                              // 0x408(0x2C)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDefaultGearOverrides                 DefaultBodyOverrides;                              // 0x434(0x2C)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDefaultGearOverrides                 DefaultBackOverrides;                              // 0x460(0x2C)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDefaultGearOverrides                 DefaultFeetOverrides;                              // 0x48C(0x2C)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               FeetMeshLocModifierIncrease;                       // 0x4B8(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDefaultGearOverrides                 DefaultHornsOverrides;                             // 0x4C4(0x2C)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TMap<enum class EGoatSockets, struct FGearSlotPreviewSettings> GearSocketPreviewSettings;                         // 0x4F0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        DefaultDistanceFromMesh;                           // 0x540(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               DefaultTranslationOffset;                          // 0x544(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              DefaultRotationOffset;                             // 0x550(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1542[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSurfaceSounds                        FootstepSounds;                                    // 0x560(0x58)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FSurfaceSounds                        JumpingSounds;                                     // 0x5B8(0x58)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FSurfaceSounds                        LandingSounds;                                     // 0x610(0x58)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	class USoundCue*                             HeadbuttSound;                                     // 0x668(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             BackkickSound;                                     // 0x670(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             LickSound;                                         // 0x678(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UGGGoatEmote*>                  Emotes;                                            // 0x680(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                  ReverseLickGrabBone;                               // 0x690(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ReverseLickLocBone;                                // 0x698(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LickBoneName;                                      // 0x6A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LickDistanceInfrontOfGoat;                         // 0x6A8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LickComponentScaleMultiplier;                      // 0x6AC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LickTargetZAdjust;                                 // 0x6B0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RagdollLickSpeedReduc;                             // 0x6B4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSoftAngularConstraint;                            // 0x6B8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSoftLinearConstraint;                             // 0x6B9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInterpolateTarget;                                // 0x6BA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1545[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LinearDamping;                                     // 0x6BC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LinearStiffness;                                   // 0x6C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AngularDamping;                                    // 0x6C4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AngularStiffness;                                  // 0x6C8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NormalInterpolationSpeed;                          // 0x6CC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleInterpolationSpeed;                         // 0x6D0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BikeInterpolationSpeed;                            // 0x6D4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    PActorMassInterpScaleCurve;                        // 0x6D8(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGAlternativeGoatDataAsset* GetDefaultObj();

	TSubclassOf<class UAnimInstance> GetAnimBlueprint();
};

// 0x50 (0x280 - 0x230)
// Class Goat2.GGAnimationActor
class AGGAnimationActor : public AActor
{
public:
	class USceneComponent*                       SceneComp;                                         // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                  StaticMeshComp;                                    // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USkeletalMeshComponent*                SkeletalMeshComp;                                  // 0x240(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                 ListenForNotifies;                                 // 0x248(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                     SpawnedForAnimation;                               // 0x268(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_155D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGCharacter*                          OwnerCharacter;                                    // 0x278(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AGGAnimationActor* GetDefaultObj();

	void OwnerCharacterWasSet(class AGGCharacter* OwnerChar);
	void OnGGAnimNotifyTrigger(class AGGCharacter* Character, class UGGAnimNotify* AnimNotify, const struct FGameplayTag& NotifyTag);
	void NotifyWasTriggered(const struct FGameplayTag& NotifyTag);
	class AGGCharacter* GetOwnerCharacter();
};

// 0x88 (0x308 - 0x280)
// Class Goat2.GGAnimationActor_HoseHandle
class AGGAnimationActor_HoseHandle : public AGGAnimationActor
{
public:
	class UParticleSystemComponent*              WaterParticleComponent;                            // 0x280(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAudioComponent*                       WaterAudioComponent;                               // 0x288(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCableComponent*                       HoseCableComponent;                                // 0x290(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        TraceLength;                                       // 0x298(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TraceWidth;                                        // 0x29C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ImpulseStrength;                                   // 0x2A0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CharacterImpulseStrength;                          // 0x2A4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDealDamageToGGMeshComps;                          // 0x2A8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1562[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ForceDamageDelay;                                  // 0x2AC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDrawOverlapCheck;                                 // 0x2B0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1563[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMesh*                           FirefighterBackpackMesh;                           // 0x2B8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    CableMaterial;                                     // 0x2C0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CableLength;                                       // 0x2C8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumSegments;                                       // 0x2CC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bStiffness;                                        // 0x2D0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCollision;                                        // 0x2D1(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1564[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CableWidth;                                        // 0x2D4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumSides;                                          // 0x2D8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1566[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGNPC_Humanoid*                       OwnerHumanoidNPC;                                  // 0x2E0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                  FirefighterBackpack;                               // 0x2E8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FRecentActor>                  RecentForceDamage;                                 // 0x2F0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1568[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGAnimationActor_HoseHandle* GetDefaultObj();

};

// 0x8 (0x2C0 - 0x2B8)
// Class Goat2.GGAnimInstance_OctopusArm
class UGGAnimInstance_OctopusArm : public UAnimInstance
{
public:
	uint8                                        Pad_156C[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGAnimInstance_OctopusArm* GetDefaultObj();

	void SmashEnvironment();
};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGAnimInstanceInterface
class IGGAnimInstanceInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IGGAnimInstanceInterface* GetDefaultObj();

	void RemoveEventFromAnimNotifyTriggerDelegate(FDelegateProperty_ Event);
	void RemoveAllEventsForObjectFromAnimNotifyTriggerDelegate(class UObject* TheObject);
	float PlayMontageNetworked(class UAnimMontage* MontageToPlay, float PlayRate, bool bStopAllMontages, float TimeToStartMontageAt);
	float PlayGetUpAnimation();
	float GetGetUpAnimationDuration();
	bool CanPlayGetUpAnimation();
	void BindEventToAnimNotifyTriggerDelegate(FDelegateProperty_ Event);
	void AnimNotifyTurningInPlace(bool bShouldTurnInPlace, bool bTurningRight);
};

// 0x10 (0x48 - 0x38)
// Class Goat2.GGAnimNotify
class UGGAnimNotify : public UAnimNotify
{
public:
	struct FGameplayTag                          NotifyTag;                                         // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBroadcastNotify;                                  // 0x40(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1593[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGAnimNotify* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGHandIKInterface
class IGGHandIKInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IGGHandIKInterface* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGHandIKOwnerInterface
class IGGHandIKOwnerInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IGGHandIKOwnerInterface* GetDefaultObj();

};

// 0x68 (0x98 - 0x30)
// Class Goat2.GGAnimNotifyState_HandIK
class UGGAnimNotifyState_HandIK : public UAnimNotifyState
{
public:
	enum class EHandIKTarget                     HandIKTarget;                                      // 0x30(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_159D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  CurveEnableHandIKLeft;                             // 0x34(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CurveEnableHandIKRight;                            // 0x3C(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15A0[0x54];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGAnimNotifyState_HandIK* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class Goat2.GGAnimNotifyState_SetStance
class UGGAnimNotifyState_SetStance : public UAnimNotifyState
{
public:
	enum class ELSStance                         Stance;                                            // 0x30(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMaintainBaseLocation;                             // 0x31(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSwitchBackToPreviousStance;                       // 0x32(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ELSStance                         StanceWhenDone;                                    // 0x33(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15A8[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGAnimNotifyState_SetStance* GetDefaultObj();

};

// 0x38 (0x2A0 - 0x268)
// Class Goat2.GGAreaCheckpointVolume
class AGGAreaCheckpointVolume : public ATriggerVolume
{
public:
	TSoftObjectPtr<class AGGTeleportAreaLogic>   AreaLogic;                                         // 0x268(0x28)(Edit, DisableEditOnTemplate, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CheckpointToSet;                                   // 0x290(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AGGAreaCheckpointVolume* GetDefaultObj();

	void OnBeginOverlap(class AActor* OverlappedActor, class AActor* OtherActor);
};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGAreaInfoContextInterface
class IGGAreaInfoContextInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IGGAreaInfoContextInterface* GetDefaultObj();

	bool IsAreaInfoRevealed();
	class FString GetContextActorIdentifier();
	class FText GetAreaName();
};

// 0x98 (0xC8 - 0x30)
// Class Goat2.GGAsyncActionLoadAndPlaySequence
class UGGAsyncActionLoadAndPlaySequence : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_            OnSequencePlay;                                    // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSequencePause;                                   // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSequenceStop;                                    // 0x50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSequenceFinish;                                  // 0x60(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UObject*                               WorldContextObject;                                // 0x70(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class ULevelSequence>         LevelSequence;                                     // 0x78(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FMovieSceneSequencePlaybackSettings   PlaybackSettings;                                  // 0xA0(0x1C)(NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_15BD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGLevelSequenceActor*                 LevelSequenceActor;                                // 0xC0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGAsyncActionLoadAndPlaySequence* GetDefaultObj();

	void SequenceStopped();
	void SequencePlayed();
	void SequencePaused();
	void SequenceFinished();
	class UGGAsyncActionLoadAndPlaySequence* CreateAsyncAction(class UObject* WorldContextObject, TSoftObjectPtr<class ULevelSequence> LevelSequence, const struct FMovieSceneSequencePlaybackSettings& PlaybackSettings);
};

// 0x90 (0xC0 - 0x30)
// Class Goat2.GGAsyncActionSpawnPhysicsActor
class UGGAsyncActionSpawnPhysicsActor : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_            OnResourcesLoaded;                                 // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UObject*                               WorldContextObject;                                // 0x40(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class AGGPhysicsActor>           PActorClass;                                       // 0x48(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_15C6[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UStaticMesh>            PActorMeshOverride;                                // 0x88(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                Owner;                                             // 0xB0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class APawn*                                 Instigator;                                        // 0xB8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGAsyncActionSpawnPhysicsActor* GetDefaultObj();

	class UGGAsyncActionSpawnPhysicsActor* SpawnPhysicsActor(class UObject* WorldContextObject, TSubclassOf<class AGGPhysicsActor> PActorClass, const struct FTransform& SpawnTransform, enum class ESpawnActorCollisionHandlingMethod CollisionHandlingOverride, TSoftObjectPtr<class UStaticMesh> PActorMeshOverride, class AActor* Owner, class APawn* Instigator);
	void OnPhysicsActorFinishedLoadingResources(class AGGPhysicsActor* PhysicsActor);
};

// 0x30 (0x60 - 0x30)
// Class Goat2.GGWorldSubsystem
class UGGWorldSubsystem : public UWorldSubsystem
{
public:
	uint8                                        Pad_15C7[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGWorldSubsystem* GetDefaultObj();

};

// 0x68 (0xC8 - 0x60)
// Class Goat2.GGAsyncOverlapSubsystem
class UGGAsyncOverlapSubsystem : public UGGWorldSubsystem
{
public:
	struct FAsyncDispatcherTickFunction          AsyncDispatcherTickFunction;                       // 0x60(0x30)(NativeAccessSpecifierPublic)
	TArray<struct FPendingOverlapUpdate>         ScheduledUpdates;                                  // 0x90(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_15CA[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FOverlapUpdateResult>          ResultsToApply;                                    // 0xB0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_15CB[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGAsyncOverlapSubsystem* GetDefaultObj();

	void RegisterComponent(class USceneComponent* Component);
	void DeregisterComponent(class USceneComponent* Component);
};

// 0x30 (0x60 - 0x30)
// Class Goat2.GGAsyncTaskDownloadImages
class UGGAsyncTaskDownloadImages : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_            OnFinished;                                        // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FPendingImageRequest>          PendingImageRequests;                              // 0x40(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FDownloadedImage>              DownloadedImages;                                  // 0x50(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGAsyncTaskDownloadImages* GetDefaultObj();

	class UGGAsyncTaskDownloadImages* DownloadImages(TArray<class FString>& URLs, class UObject* WorldContextObject);
};

// 0x50 (0x78 - 0x28)
// Class Goat2.GGAttachmentAssetUserData
class UGGAttachmentAssetUserData : public UAssetUserData
{
public:
	TMap<class FName, struct FTransform>         NPCAttachmentTransforms;                           // 0x28(0x50)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGAttachmentAssetUserData* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGAudioFunctionLibrary
class UGGAudioFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UGGAudioFunctionLibrary* GetDefaultObj();

	void PlayUISound(class UObject* WorldContextObject, const struct FGameplayTag& SoundTag, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundConcurrency* ConcurrencySettings, class AActor* OwningActor);
	class USoundBase* GetSoundFromTag(class UObject* WorldContextObject, const struct FGameplayTag& SoundTag);
};

// 0x340 (0x570 - 0x230)
// Class Goat2.GGAutoFence
class AGGAutoFence : public AActor
{
public:
	uint8                                        Pad_15E9[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bSnapToGround;                                     // 0x250(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceLockedTransform;                             // 0x251(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15EA[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTransform>                    LockedInstanceTransforms;                          // 0x258(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_15EB[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            LockedStartMeshTransform;                          // 0x270(0x30)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                            LockedEndMeshTransform;                            // 0x2A0(0x30)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TArray<class UStaticMesh*>                   FenceMeshes;                                       // 0x2D0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class USplineComponent*                      FenceSpline;                                       // 0x2E0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           StartMesh;                                         // 0x2E8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGStaticMeshComponent*                StartMeshComponent;                                // 0x2F0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               StartMeshOffset;                                   // 0x2F8(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15EE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMesh*                           EndMesh;                                           // 0x308(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               EndMeshOffset;                                     // 0x310(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15EF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGStaticMeshComponent*                EndMeshComponent;                                  // 0x320(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MeshScale;                                         // 0x328(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GroundCheckDistance;                               // 0x334(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FenceComponentSpacing;                             // 0x338(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAxis                             FenceMeshForwardAxis;                              // 0x33C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAxis                             FenceMeshUpAxis;                                   // 0x33D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15F0[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FenceZOffset;                                      // 0x340(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAlignYawAndRoll;                                  // 0x344(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15F1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        InstanceCullStartDistance;                         // 0x348(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InstanceCullEndFadeDistance;                       // 0x34C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReplicationDestroyDistCheck;                       // 0x350(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DestroyedIndexesCount;                             // 0x354(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UHierarchicalInstancedStaticMeshComponent*> InstancedMeshComponents;                           // 0x358(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                         bAddGrindableSpline;                               // 0x368(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15F3[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMesh*                           GrindableSplineCollisionMesh;                      // 0x370(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESplineMeshAxis                   GrindableSplineMeshForwardAxis;                    // 0x378(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15F4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               GrindableSplineOffset;                             // 0x37C(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GrindableSplineScale;                              // 0x388(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideGrindSplineMeshAtRuntime;                     // 0x38C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15F7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGGrindableSplineComponent*           GrindableSplineComponent;                          // 0x390(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDestroyedFenceLocations              DestroyedInstanceLocations;                        // 0x398(0x18)(Net, RepNotify, NativeAccessSpecifierPrivate)
	bool                                         bDestructible;                                     // 0x3B0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceNotDestructible;                             // 0x3B1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideDestructibleInfo;                         // 0x3B2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15F9[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGGDestructibleInfo                   DestructibleInfo;                                  // 0x3B8(0x70)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FGGDestructibleInfo                   CurrentDestructibleInfo;                           // 0x428(0x70)(NativeAccessSpecifierPublic)
	bool                                         HideSelf;                                          // 0x498(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_15FA[0x17];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGGActorName                          CurrentActorName;                                  // 0x4B0(0x40)(Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGGNamedActorInfo                     DefaultActorNameInfo;                              // 0x4F0(0x28)(Protected, NativeAccessSpecifierProtected)
	class UDataTable*                            NameModifierTable;                                 // 0x518(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bOverrideMeshNameInfo;                             // 0x520(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15FB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGGNamedActorInfo                     ActorNameInfo;                                     // 0x528(0x28)(Edit, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class AActor>>         ActorsGoatShouldIgnoreCollisionWith;               // 0x550(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class UGGGrindableSplineDataAsset*           GrindableSplineDataAsset;                          // 0x560(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15FC[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGAutoFence* GetDefaultObj();

	void UpdateSettingsWithAssetUserData(class UGGAutoFenceAssetUserData* UserData);
	void SetupFence();
	void OnRep_HideSelf();
	void OnRep_DestroyedLocations();
	void OnRep_CurrentActorName();
	void OnHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void OnEdgeTurnedPhysicsActor(class AActor* OwningActor, class UGGStaticMeshComponent* GGMeshComponent, class AGGPhysicsActor_Base* PhysActor);
	void OnDestructibleDestroyed();
	void ObjectWasHeadbutted(class AGGGoat* HeadbuttingGoat);
	void DestroyFencePart(const struct FVector_NetQuantize& Impulse, const struct FVector_NetQuantize& InstanceLocation);
	bool CanBeHeadbutted(class AGGGoat* HeadbuttingGoat);
};

// 0x98 (0xC0 - 0x28)
// Class Goat2.GGAutoFenceAssetUserData
class UGGAutoFenceAssetUserData : public UAssetUserData
{
public:
	bool                                         bSnapToGround;                                     // 0x28(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15FE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UStaticMesh>            StartMeshSoftPtr;                                  // 0x30(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               StartMeshOffset;                                   // 0x58(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15FF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UStaticMesh>            EndMeshSoftPtr;                                    // 0x68(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               EndMeshOffset;                                     // 0x90(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAddGrindSpline;                                   // 0x9C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1601[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               GrindableSplineOffset;                             // 0xA0(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MeshScale;                                         // 0xAC(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FenceComponentSpacing;                             // 0xB8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAxis                             FenceMeshForwardAxis;                              // 0xBC(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1602[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGAutoFenceAssetUserData* GetDefaultObj();

};

// 0xBD8 (0xE90 - 0x2B8)
// Class Goat2.LSBaseAnimInstance
class ULSBaseAnimInstance : public UAnimInstance
{
public:
	uint8                                        Pad_1630[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBaseAnimInstanceProxy                Proxy;                                             // 0x2D0(0x8E0)(BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	class FName                                  CurveEnableLeftHandIK;                             // 0xBB0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  CurveEnableRightHandIK;                            // 0xBB8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  CurveLayeringArmLeft;                              // 0xBC0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  CurveLayeringArmRight;                             // 0xBC8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RotateInPlaceAngleThreshold;                       // 0xBD0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             RotationAnimPlayRateRange;                         // 0xBD4(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  CurveEnableTransition;                             // 0xBDC(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        Turn180Threshold;                                  // 0xBE4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  CurveTurnRotationSpeed;                            // 0xBE8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FBoneReference                        LeftFootLockIKBone;                                // 0xBF0(0x10)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FBoneReference                        LeftFootTargetBone;                                // 0xC00(0x10)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FBoneReference                        RightFootLockIKBone;                               // 0xC10(0x10)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FBoneReference                        RightFootTargetBone;                               // 0xC20(0x10)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        DistanceToTriggerTransition;                       // 0xC30(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AngleToTriggerTransition;                          // 0xC34(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLSTurnInPlaceAsset                   TurnLeft90;                                        // 0xC38(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FLSTurnInPlaceAsset                   TurnRight90;                                       // 0xC50(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FLSTurnInPlaceAsset                   TurnLeft180;                                       // 0xC68(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FLSTurnInPlaceAsset                   TurnRight180;                                      // 0xC80(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FLSTurnInPlaceAsset                   CrouchTurnLeft90;                                  // 0xC98(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FLSTurnInPlaceAsset                   CrouchTurnRight90;                                 // 0xCB0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UAnimSequenceBase*                     DynamicTransitionLeft;                             // 0xCC8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimSequenceBase*                     DynamicTransitionRight;                            // 0xCD0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          GetUpFromBack;                                     // 0xCD8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          GetUpFromFront;                                    // 0xCE0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          GetUpFromLeftSide;                                 // 0xCE8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          GetUpFromRightSide;                                // 0xCF0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseConstantInterpSpeedForLookAtLocation;          // 0xCF8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1637[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LookAtLocationConstantInterpSpeed;                 // 0xCFC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LookAtLocationInterpSpeed;                         // 0xD00(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLSGaitsFloat                         AnimatedMovementSpeeds;                            // 0xD04(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        AnimatedCrouchSpeed;                               // 0xD10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxStumbleTime;                                    // 0xD14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DeltaDistanceForTeleport;                          // 0xD18(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableHandIK;                                     // 0xD1C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1638[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FHandIKBones                          LeftHandBones;                                     // 0xD20(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FHandIKBones                          RightHandBones;                                    // 0xD48(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class FName                                  GroundedSlot;                                      // 0xD70(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  HeadBone;                                          // 0xD78(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        LODThresholdDynamicTransition;                     // 0xD80(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               VisualDebugStringOffset;                           // 0xD84(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FColor                                VisualDebugStringColor;                            // 0xD90(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1639[0x24];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FHandIKValue                          LeftHandIKValues;                                  // 0xDB8(0x14)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FHandIKValue                          RightHandIKValues;                                 // 0xDCC(0x14)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        RootBoneAdjustmentAlpha;                           // 0xDE0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               RootBoneTargetLocation;                            // 0xDE4(0xC)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              RootBoneTargetRotation;                            // 0xDF0(0xC)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_163A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPoseSnapshot                         PoseSnapshot;                                      // 0xE00(0x38)(BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_163B[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          LastActiveTurnAnimation;                           // 0xE68(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_163C[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ULSBaseAnimInstance* GetDefaultObj();

	void OnViewModeChanged(enum class ELSViewMode NewMode, class ULSCharacterMovementComponent* MovementComp);
	void OnUnRagdoll(bool bRagdollOnGround, class ULSCharacterMovementComponent* MovementComp, class ACharacter* UnRagdolledCharacter, struct FRagdollStateChangeSettings& StateChangeSettings);
	void OnTurnInPlaceTriggered(class ULSCharacterMovementComponent* MovementComp, float DeltaAngle);
	void OnStumbled(class UGGCharacterPushComponent* Stumbled, class AActor* Pusher, float Speed, const struct FVector& Direction);
	void OnStanceChanged(enum class ELSStance NewStance, class ULSCharacterMovementComponent* MovementComp);
	void OnRotationModeChanged(enum class ELSRotationMode NewMode, class ULSCharacterMovementComponent* MovementComp);
	void OnRagdolling(class ULSCharacterMovementComponent* MovementComp, class ACharacter* RagdollingCharacter, struct FRagdollStateChangeSettings& StateChangeSettings);
	void OnPushed(class UGGCharacterPushComponent* Pushed, const struct FVector& Velocity);
	void OnMovementModeChanged(enum class EMovementMode NewMode, enum class EMovementMode PrevMode, uint8 NewCustomMode, uint8 PrevCustomMode, class ULSCharacterMovementComponent* MovementComp);
	void OnGaitChanged(enum class ELSGait NewGait, class ULSCharacterMovementComponent* MovementComp);
	void OnFinishStandingUp(class ULSCharacterMovementComponent* MovementComp, class ACharacter* Character);
	bool IsInAir();
	bool IsGrounded();
};

// 0x190 (0x1020 - 0xE90)
// Class Goat2.GGBaseAnimInstance_NPC
class UGGBaseAnimInstance_NPC : public ULSBaseAnimInstance
{
public:
	TArray<class UAnimSequenceBase*>             NormalWalkCycles;                                  // 0xE90(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UAnimSequenceBase*>             NormalRunCycles;                                   // 0xEA0(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TMap<enum class EMoods, float>               MoodMovementAnimationChances;                      // 0xEB0(0x50)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGGBaseAnimInstanceProxy_NPC          ProxyHumanoidNPC;                                  // 0xF00(0x110)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AGGNPC_Humanoid>        HumanoidOwner;                                     // 0x1010(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_163E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGBaseAnimInstance_NPC* GetDefaultObj();

	void OnExitedVehicle(class AGGCharacter* Character, class AGGVehicle* Vehicle);
	void OnEnteringVehicle(class AGGCharacter* Character, class AGGVehicle* Vehicle);
	void AnimNotifyTriggered(struct FGameplayTag& NotifyTag);
};

// 0x98 (0x2C8 - 0x230)
// Class Goat2.GGBattleRoyalBenchmark
class AGGBattleRoyalBenchmark : public AInfo
{
public:
	TArray<TSoftClassPtr<class AGGNPC>>          NPCsToSpawn;                                       // 0x230(0x10)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TSoftObjectPtr<class UStaticMesh>>    MeshesToSpawn;                                     // 0x240(0x10)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TSoftClassPtr<class AActor>>          ActorsToSpawn;                                     // 0x250(0x10)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	int32                                        FPSTarget;                                         // 0x260(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bStartOnBeginPlay;                                 // 0x264(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_163F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StartDelay;                                        // 0x268(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1640[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AGGBRBSpawner*>                 Spawner;                                           // 0x270(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AActor*>                        ThingsWeSpawnedSoFar;                              // 0x280(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AGGExplosiveActor*>             SpawnedExplosives;                                 // 0x290(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1641[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGBattleRoyalBenchmark* GetDefaultObj();

	void StopBenchmark();
	void StartBenchmark();
};

// 0x18 (0xA70 - 0xA58)
// Class Goat2.GGBikeAnimInstance
class UGGBikeAnimInstance : public UVehicleAnimInstance
{
public:
	float                                        BikePedalRotation;                                 // 0xA58(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1642[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGVehicle_Bike*                       OwningBike;                                        // 0xA60(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1643[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGBikeAnimInstance* GetDefaultObj();

};

// 0x10 (0x2E0 - 0x2D0)
// Class Goat2.GGBlowdryer
class AGGBlowdryer : public AGGPhysicsProjectile
{
public:
	float                                        HairChangeDelay;                                   // 0x2D0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bRemoveAccessoriesOnHairChange;                    // 0x2D4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1644[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAbilitySystemComponent*               AbilityComponent;                                  // 0x2D8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AGGBlowdryer* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGBlueprintFunctionLibrary
class UGGBlueprintFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UGGBlueprintFunctionLibrary* GetDefaultObj();

	int32 WrapInt(int32 Value, int32 LowerBound, int32 UpperBound);
	bool UpdateKeyValueData(class UObject* WorldContextObject, const class FString& Key, const struct FKeyValueBase& Value, enum class ESaveGameType InSaveType);
	bool UpdateComponentOverlaps(class UPrimitiveComponent* PrimitiveComponent, bool bDoNotifies);
	void UpdateAudioVirtualLoops(class UObject* WorldContextObject);
	class FText TimeSecondsToCustomText(float InSeconds, const class FString& Format);
	void TimeDilateFor(class UObject* WorldContextObject, float TimeDilation, float Duration);
	bool TextToFloat(class FText& InText, float* OutFloat);
	void TestRandomWeight(int32 Elements, int32 Tries);
	bool StringToBool(const class FString& InString);
	class UParticleSystemComponent* SpawnWorldEmitterAttached(class UObject* WorldContextObject, class UParticleSystem* EmitterTemplate, class USceneComponent* AttachToComponent, class FName AttachPointName, const struct FVector& Location, const struct FRotator& Rotation, const struct FVector& Scale, enum class EAttachLocation AttachLocation, bool bAutoDestroy);
	class AGGVehicle* SpawnVehicle(class UObject* WorldContextObject, TSubclassOf<class AGGVehicle> VehicleClass, const struct FGameplayTag& Area, const struct FVector& Location, const struct FRotator& Rotation, bool ForceRelevant, bool CanGetFromPool, enum class ESpawnActorCollisionHandlingMethod CollisionHandling, bool GenerateNewAppearance, class FName AppearanceRow);
	class AGGNPC* SpawnSpecialNPC(class UObject* WorldContextObject, TSubclassOf<class AGGNPC> NPCClass, const struct FGameplayTag& Area, const struct FVector& Location, const struct FRotator& Rotation, class FText DisplayNameOverride, const struct FDataTableRowHandle& FemFirstName, const struct FDataTableRowHandle& MaleFirstName, const struct FDataTableRowHandle& LastName, enum class EMoods StartingMood, bool ForceRelevant, bool CanGetFromPool, bool AsRagdoll, const struct FVector& Impulse, enum class ESpawnActorCollisionHandlingMethod CollisionHandling);
	class AGGVehicle* SpawnRandomVehicle(class UObject* WorldContextObject, const TArray<TSubclassOf<class AGGVehicle>>& ValidVehicleClasses, const struct FGameplayTag& Area, const struct FVector& Location, const struct FRotator& Rotation, bool ForceRelevant, bool CanGetFromPool, enum class ESpawnActorCollisionHandlingMethod CollisionHandling, bool GenerateNewAppearance, class FName AppearanceRow);
	class AGGNPC* SpawnProfessionalNPC(class UObject* WorldContextObject, TSubclassOf<class AGGNPC> NPCClass, const struct FGameplayTag& Area, const struct FVector& Location, const struct FRotator& Rotation, class FText DisplayNameOverride, const struct FDataTableRowHandle& FemFirstName, const struct FDataTableRowHandle& MaleFirstName, const struct FDataTableRowHandle& LastName, enum class EMoods StartingMood, bool ForceRelevant, bool CanGetFromPool, bool AsRagdoll, const struct FVector& Impulse, enum class ESpawnActorCollisionHandlingMethod CollisionHandling);
	class UGGGroundAlignedParticleComponent* SpawnGroundAlignedParticle(class USceneComponent* AttachToComponent, class FName AttachPointName, class UParticleSystem* GroundParticle, class UParticleSystem* InAirParticle, float LifeSpan);
	class AGGNPC* SpawnDummyNPC(class UObject* WorldContextObject, TSubclassOf<class AGGNPC> DummyClass, const struct FGameplayTag& Area, const struct FVector& Location, const struct FRotator& Rotation, const struct FVector& Impulse, bool bGenerateAppearance, enum class EGender GenerateWithGender, const struct FGameplayTag& AppearanceArea, const TArray<class FString>& PredeterminedElements, const TArray<struct FPredeterminedElement>& PredeterminedRowElements, const class FString& AppearanceSet, const TArray<class FString>& AppearanceOverride, class FText DisplayNameOverride, const struct FDataTableRowHandle& FemFirstName, const struct FDataTableRowHandle& MaleFirstName, const struct FDataTableRowHandle& LastName, bool ForceRelevant, bool CanGetFromPool, enum class ESpawnActorCollisionHandlingMethod CollisionHandling);
	class AGGNPC* SpawnDummyAnimalNPC(class UObject* WorldContextObject, TSubclassOf<class AGGNPC_Animal> NPCClass, const struct FGameplayTag& Area, const struct FVector& Location, const struct FRotator& Rotation, const struct FVector& Impulse, struct FAnimalMaterialCollection& MaterialOverride, class FText DisplayNameOverride, const struct FDataTableRowHandle& FemFirstName, const struct FDataTableRowHandle& MaleFirstName, const struct FDataTableRowHandle& LastName, enum class EMoods StartingMood, bool ForceRelevant, bool CanGetFromPool, enum class ESpawnActorCollisionHandlingMethod CollisionHandling);
	class AGGNPC* SpawnCivilianNPC(class UObject* WorldContextObject, const struct FGameplayTag& Area, const struct FVector& Location, const struct FRotator& Rotation, enum class EGender Gender, const struct FGameplayTag& AppearanceArea, const TArray<class FString>& PredeterminedElements, const TArray<struct FPredeterminedElement>& PredeterminedRowElements, const class FString& AppearanceSet, const TArray<class FString>& AppearanceOverride, class FText DisplayNameOverride, const struct FDataTableRowHandle& FemFirstName, const struct FDataTableRowHandle& MaleFirstName, const struct FDataTableRowHandle& LastName, enum class EMoods StartingMood, bool ForceRelevant, bool CanGetFromPool, bool AsRagdoll, const struct FVector& Impulse, enum class ESpawnActorCollisionHandlingMethod CollisionHandling);
	class AGGNPC* SpawnAnimalNPC(class UObject* WorldContextObject, TSubclassOf<class AGGNPC_Animal> NPCClass, const struct FGameplayTag& Area, const struct FVector& Location, const struct FRotator& Rotation, struct FAnimalMaterialCollection& MaterialOverride, class FText DisplayNameOverride, const struct FDataTableRowHandle& FemFirstName, const struct FDataTableRowHandle& MaleFirstName, const struct FDataTableRowHandle& LastName, enum class EMoods StartingMood, bool ForceRelevant, bool CanGetFromPool, bool AsRagdoll, const struct FVector& Impulse, enum class ESpawnActorCollisionHandlingMethod CollisionHandling);
	void SortStrings(TArray<class FString>& Strings);
	bool SkeletonMatchesAnimation(class USkeletalMesh* Skeleton, class UAnimationAsset* Asset);
	void ShowSplashText(class FText SplashTitle, class FText SplashDescription, class AActor* TargetPlayer);
	void SetUpdateAnimationInEditor(class USkeletalMeshComponent* MeshComp, bool ShouldUpdate);
	void SetTimeDilation(class UObject* WorldContextObject, float TimeDilation);
	void SetSoundClassOverride(class UAudioComponent* AudioComponent, class USoundClass* SoundClass);
	void SetEnvironmentVariable(const class FString& VariableName, const class FString& Value);
	void SetBaseVisibleDistanceFactorThresholds(class USkinnedMeshComponent* SkinnedMeshComponent, const TArray<float>& NewThresholds);
	void SetActorMaterial(class AActor* TargetActor, class UMaterialInterface* NewMaterial, bool SetAllMaterialIndexes, int32 MaterialIndexToSet);
	void SaveSocketRelativeTransform(class UObject* WorldContextObject);
	float RoundFloat(float InFloat, int32 NumDecimals);
	struct FVector RotateVectorAroundPoint(const struct FVector& InVector, const struct FVector& RotationPoint, float Angle, const struct FVector& Axis);
	void ResetTimeDilation(class UObject* WorldContextObject);
	void ResetMeshToDefaultMaterials(class UMeshComponent* MeshComponent);
	void RemoveSpringArmTraceIgnoreActor(class USpringArmComponent* Target, class AActor* Actor);
	void RemoveInterfacedObjectFromSignificance(class UObject* WorldContextObject, class UObject* Obj);
	void RemoveGenericTickObjectFromSignificanceManager(class UObject* WorldContextObject, class UObject* Obj);
	void RemoveGameplayCue(class AGGGoat* Goat, const struct FGameplayTag& GameplayTag);
	void RecreateMeshPhysState(class UMeshComponent* MeshComp);
	void PrintWarningInChat(const class FString& Warning);
	void PrintScriptCallstackBlueprint(const class FString& Heading);
	void PrintErrorInChat(const class FString& Error);
	void PausePIE(class UObject* WorldContextObject);
	class FString PasteFromClipboard();
	struct FNotificationProperties MakeNotificationProperties(const struct FGameplayTag& ContentTag, float Duration, enum class ENotificationPriority Priority, enum class ENotificationRemoval Removal, enum class ENotificationCommand Command);
	struct FNotification MakeNotification(const struct FGameplayTag& Tag, class FText Title, class FText Body, const class FString& ID, const struct FNotificationProperties& Properties);
	struct FAdvancedRule MakeAdvancedRule(const struct FGameplayTag& InTag, bool bInTagExactMatch, const struct FGameplayTag& InContentTag, bool bInContentTagExactMatch, bool InReturnValue);
	bool LineTraceTestByObjectType(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, enum class ECollisionChannel CollisionChannel);
	bool LineTraceSingleByChannel(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, enum class ECollisionChannel Channel, bool bTraceComplex, TArray<class AActor*>& ActorsToIgnore, class AActor* IgnoredActor, struct FHitResult* OutHit);
	struct FKeyValueBase KeyValue_StringToKeyValue(const class FString& Value);
	class FString KeyValue_KeyValueToString(const struct FKeyValueBase& KeyValue);
	int32 KeyValue_KeyValueToInt(const struct FKeyValueBase& KeyValue);
	float KeyValue_KeyValueToFloat(const struct FKeyValueBase& KeyValue);
	bool KeyValue_KeyValueToBool(const struct FKeyValueBase& KeyValue);
	struct FKeyValueBase KeyValue_IntToKeyValue(int32 Value);
	struct FKeyValueBase KeyValue_FloatToKeyValue(float Value);
	struct FKeyValueBase KeyValue_BoolToKeyValue(bool Value);
	bool IsWorldMultiplayer(class UObject* WorldContextObject);
	bool IsWorldDedicatedOrListenServer(class UObject* WorldContextObject);
	bool IsWorldClient(class UObject* WorldContextObject);
	bool IsUsingGamepad(class UObject* Target);
	bool IsTextNumeric(class FText& InText);
	bool IsShippingBuild();
	bool IsPlaytestingBuild();
	bool IsMobilePlatform(bool bForUI);
	bool IsLowEndPlatform();
	bool IsFocusEventMouse(const struct FFocusEvent& InFocusEvent);
	bool IsDesktopPlatform(bool bForUI);
	bool IsDemoBuild();
	bool IsConsolePlatform(bool bForUI);
	class AGGVehicle* IsCompVehicle(class UPrimitiveComponent* Comp, bool* IsVehicle);
	bool IsCompNPCOverlapComp(class UPrimitiveComponent* Comp);
	class AGGNPC* IsCompNPC(class UPrimitiveComponent* Comp, bool* IsNPC, bool* IsOverlapComp);
	class AGGNPC_Humanoid* IsCompHumanoid(class UPrimitiveComponent* Comp, bool* IsHumanoid);
	bool IsCompGoatMesh(class UPrimitiveComponent* Comp);
	bool IsCompGoatCapsuleComp(class UPrimitiveComponent* Comp);
	class AGGGoat* IsCompGoat(class UPrimitiveComponent* Comp, bool* IsGoat, bool* IsCapsuleComponent, bool* IsMeshComponent);
	class AGGCharacter* IsCompGGCharacter(class UPrimitiveComponent* Comp, bool* IsGGCharacter, bool* IsCapsuleComponent, bool* IsMeshComponent, bool* IsNPCOverlapComponent);
	class AGGNPC_Animal* IsCompAnimal(class UPrimitiveComponent* Comp, bool* IsAnimal);
	bool IsActorServerNetMode(class AActor* Actor);
	bool IsActorInFrontArc(class AActor* Actor, class AActor* OtherActor, float Arc);
	bool IntroDisabledBuild();
	bool HasObjectValidWorld(class UObject* InObject);
	class FString GetVersionString();
	class UGGTutorialComponent* GetTutorialComponent(class AGGPlayerController* PC);
	float GetTimeSince(class UObject* WorldContextObject, float Timestamp);
	int32 GetStaticMeshConvexElemVertexCount(class UStaticMesh* StaticMesh);
	TArray<struct FTransform> GetSkelEditableComponentSpaceTransforms(class USkeletalMeshComponent* SkelMesh);
	bool GetShouldUseMobileHUDInput(class UObject* WorldContextObject);
	float GetServerWorldTimeSeconds(class UObject* WorldContextObject);
	class UGGStatusEffectPoolManager* GetSEPoolManager(class UObject* WorldContextObject);
	struct FTransform GetRefPoseTransformWorldSpace(class USkinnedMeshComponent* SkinnedMeshComponent, class FName Bone);
	struct FTransform GetRefPoseTransformComponentSpace(class USkinnedMeshComponent* SkinnedMeshComponent, class FName Bone);
	struct FTransform GetRefPoseTransform(class USkinnedMeshComponent* SkinnedMeshComponent, class FName Bone);
	class ARecastNavMesh* GetRecastNavMesh(class UObject* WorldContextObject, enum class ENavDataTypes Type);
	class UGGRadarSystem* GetRadarSystem(class UObject* WorldContextObject);
	class UGGQuestManager* GetQuestManager(class UObject* WorldContextObject);
	class UGGProgression* GetProgression(class AGGPlayerController* PC);
	class AGGPlayerController* GetPrimaryGGPlayerController(class UObject* WorldContextObject);
	class AGGPlayerState* GetPlayerStateFromActor(class UObject* WorldContextObject, class AActor* Actor);
	class UGGProgression* GetPlayerProgression(class UObject* WorldContextObject);
	class UGGInventory* GetPlayerInventory(class UObject* WorldContextObject);
	class AGGGoat* GetPlayerGoat(class UObject* WorldContextObject, int32 PlayerIndex);
	class AGGPlayerGameManager* GetPlayerGameManager(class UObject* WorldContextObject);
	class AGGPlayerController* GetPlayerControllerFromActor(class AActor* Actor);
	class FText GetPlatformVariantText(class FText Text, bool* bOutSuccess);
	enum class EPlatformFlagsBP GetPlatformForUI();
	class UGGPactorAssetUserData* GetPActorUserData(class UStaticMesh* StaticMesh);
	struct FSoftObjectPath GetOverrideMainMap();
	class UGGNPCManager* GetNPCManager(class UObject* WorldContextObject);
	TArray<class AGGPlayerController*> GetLocalGGPlayerControllers(class UObject* WorldContextObject);
	struct FKeyValueBase GetKeyValueData(class UObject* WorldContextObject, const class FString& Key, bool* Found, enum class ESaveGameType InSaveType);
	bool GetIsPIE(class UObject* WorldContextObject);
	bool GetIsNullSubsystem();
	bool GetIsEditor(class UObject* WorldContextObject);
	bool GetIsDemoPressMode(class UObject* WorldContextObject);
	class UGGInventory* GetInventory(class AGGPlayerController* PC);
	float GetInputAxisValue(class APlayerController* PlayerController, class FName InputAxisName);
	class AGGGoat* GetGoatFromActor(class AActor* Actor);
	class UGGGlobalEventHandler* GetGlobalEventHandler(class UObject* WorldContextObject);
	class AGGWorldSettings* GetGGWorldSettings(class UObject* WorldContextObject);
	class AGGGameState* GetGGGameState(class UObject* WorldContextObject);
	class UGGGameInstance* GetGGGameInstance(class UObject* WorldContextObject);
	struct FGameplayTag GetFirstIntersectingTagFromContainer(const struct FGameplayTag& Tag, const struct FGameplayTagContainer& InContainer, bool bTagIsParent);
	class FString GetEnvironmentVariable(const class FString& VariableName);
	class UObject* GetDefaultObjectFromObject(class UObject* Object);
	class UObject* GetDefaultObject(TSubclassOf<class UObject> ObjectClass);
	float GetCurrentTimeDilation(class UObject* WorldContextObject);
	enum class EPlatformFlagsBP GetCurrentPlatform();
	class AGGPlayerGame_Base* GetCurrentActivePlayerGame(class UObject* WorldContextObject);
	int32 GetControllerID(class ULocalPlayer* LocalPlayer);
	class APawn* GetControlledPawnFromActor(class AActor* Actor);
	struct FVector GetClosestLocationToPoint(const TArray<struct FVector>& Locations, const struct FVector& Point, float* OutDistance);
	class AActor* GetClosestActorToPoint(const TArray<class AActor*>& Actors, const struct FVector& Point, float* OutDistance);
	struct FVector GetClickLocation();
	TArray<float> GetBaseVisibleDistanceFactorThresholds(class USkinnedMeshComponent* SkinnedMeshComponent);
	TArray<class USceneComponent*> GetAttachChildren(class USceneComponent* Component);
	TArray<class AGGPlayerState*> GetAllPlayerStates(class UObject* WorldContextObject);
	TArray<class AGGGoat*> GetAllGoats(class UObject* WorldContextObject);
	TArray<class AGGPlayerController*> GetAllGGPlayerControllers(class UObject* WorldContextObject);
	class FString GetActorsCurrentLevel(class AActor* Actor);
	enum class ENetRole GetActorRole(class AActor* Actor);
	class ULevel* GetActorLevel(class AActor* Actor);
	class APlayerController* FindLocalPlayerControllerWithPlayerState(class UObject* WorldContextObject, class AGGPlayerState* PlayerState);
	class APlayerController* FindLocalPlayerControllerWithControllerId(class UObject* WorldContextObject, int32 ControllerId);
	void FindAllPActorsMissingData(class UObject* WorldContextObject, bool WarnIfSilent, bool WarnIfMissingSoundEvenIfShouldNotPlay);
	bool ExportStringTableToCSV(class FName StringTableName, const class FString& ContentPath);
	void DumpStackTraceToLog(const class FString& Heading);
	bool DoesEntryExistInTable(class UStringTable* TableAsset, const class FString& EntryKey);
	void DestroyComponentFromOther(class UActorComponent* Component);
	void CreateNotificationsBlueprint(const TArray<class APlayerController*>& PCs, const struct FGameplayTag& Tag, class FText Title, class FText Body, const class FString& ID, const struct FNotificationProperties& Properties);
	void CreateNotificationExplicitBlueprint(class APlayerController* PC, const struct FNotification& Notification);
	void CreateNotificationBlueprint(class APlayerController* PC, const struct FGameplayTag& Tag, class FText Title, class FText Body, const class FString& ID, const struct FNotificationProperties& Properties);
	class USceneComponent* CreateComponent(TSubclassOf<class USceneComponent> ComponentClass, class AActor* Owner, class USceneComponent* AttachComponent, const struct FTransform& Transform, class FName AttachSocket, enum class EAttachmentRule LocationRule, enum class EAttachmentRule RotationRule, enum class EAttachmentRule ScaleRule, bool WeldSimulatedBodies);
	void CopyToClipboard(const class FString& TextToCopy);
	float Conv_TextToFloat(class FText& InText);
	class FString Conv_TagToString(const struct FGameplayTag& InTag);
	bool ComponentSweepMulti(TArray<struct FHitResult>* OutHits, class UPrimitiveComponent* Component, struct FVector& StartLocation, struct FVector& EndLocation, struct FRotator& StartRotation, TArray<class AActor*>& IgnoredActors, bool bFindInitialOverlaps, bool bTraceComplex, bool bReturnPhysicalMaterial, bool bIgnoreBlocks);
	void ClearAllTimers(class UObject* WorldContextObject);
	float ClampedNormalizeToRange(float Value, float RangeMin, float RangeMax);
	void CancelLatentActions(class UObject* WorldContextObject);
	struct FRotator CalculateSurfaceRotation_K2(const struct FVector& SurfaceNormal, struct FTransform& ReferenceFrame, bool bReturnInLocalSpace);
	float CalculateSurfaceAngle_K2(const struct FVector& SurfaceNormal, struct FTransform& ReferenceFrame, bool bReturnInLocalSpace);
	void BreakRadarWidgetData(const struct FRadarWidgetData& InData, struct FRadarCoordinateData* Data, class UWidget** Widget);
	bool ApplyRagdollVelocityChange(TSubclassOf<class UGameplayEffect> GameplayEffectClass, class AGGGoat* Goat, float Magnitude, class FName DataTagName);
	bool ApplyPlayerMSChange(TSubclassOf<class UGameplayEffect> GameplayEffectClass, class AGGGoat* Goat, float Magnitude, class FName DataTagName);
	float ApplyImpulseDamage(class AActor* DamagedActor, float BaseDamage, class AController* EventInstigator, class AActor* DamageCauser, TSubclassOf<class UDamageType> DamageTypeClass, const struct FImpulseDamageEvent& DamageEvent);
	void ApplyDisgustingStatusOverlap(class UObject* WorldContextObject, class AActor* SourceActor, class AActor* TargetActor);
	void AddSpringArmTraceIgnoreActor(class USpringArmComponent* Target, class AActor* Actor);
	void AddInterfacedObjectToSignificance(class UObject* WorldContextObject, class UObject* Obj);
	void AddGenericTickObjectToSignificanceManager(class UObject* WorldContextObject, class UObject* Obj);
};

// 0x50 (0x188 - 0x138)
// Class Goat2.GGReplicatedMovementComponent
class UGGReplicatedMovementComponent : public UPawnMovementComponent
{
public:
	bool                                         bShouldBeClientAuthoritative;                      // 0x138(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1765[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bServerHasControl;                                 // 0x13B(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FReplicatedMovementState              ReplicatedMovementState;                           // 0x13C(0x10)(Net, Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector_NetQuantize10                 InputDirection;                                    // 0x14C(0xC)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HandbrakeInput;                                    // 0x158(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1767[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class APawn*                                 OwnerPawn;                                         // 0x168(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPrimitiveComponent*                   OwnerPrimRoot;                                     // 0x170(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AGGPlayerController*                   OwnerPlayerController;                             // 0x178(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APlayerCameraManager*                  CurrentCameraManager;                              // 0x180(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGGReplicatedMovementComponent* GetDefaultObj();

	void ServerUpdateState(const struct FReplicatedMovementState& NewMovementState, const struct FRepMovement& ReplicatedMovement);
	void ServerClearInput();
	bool IsClientAuthoritative();
	float GetThrottleInput();
	float GetSteeringInput();
	void ClientApplyImpulse(const struct FVector_NetQuantize& LinearImpulse, const struct FVector_NetQuantize& AngularImpulse);
	void ApplyImpulse(const struct FVector_NetQuantize& LinearImpulse, const struct FVector_NetQuantize& AngularImpulse);
};

// 0x58 (0x1E0 - 0x188)
// Class Goat2.GGBoatVehicleMovementComponent
class UGGBoatVehicleMovementComponent : public UGGReplicatedMovementComponent
{
public:
	float                                        FloatForce;                                        // 0x188(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FloatSpeedMultiplier;                              // 0x18C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SinkDampening;                                     // 0x190(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WaterLineCheckDist;                                // 0x194(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoatLinearDampening;                               // 0x198(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoatAngularDampening;                              // 0x19C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StabilizationTorqueForce;                          // 0x1A0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EBoatMovementMode                 CurrentMovementMode;                               // 0x1A4(0x1)(Edit, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1769[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ForwardThrusterForce;                              // 0x1A8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BackwardsThrusterForce;                            // 0x1AC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurningTorqueForce;                                // 0x1B0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AIForwardThrusterForce;                            // 0x1B4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AIBackwardsThrusterForce;                          // 0x1B8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AITurningTorqueForce;                              // 0x1BC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AGGVehicle_Boat*                       OwnerBoat;                                         // 0x1C0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         OwnerShapeComponent;                               // 0x1C8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                OwnerMesh;                                         // 0x1D0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AGGWaterPhysicsVolume*                 WaterPhysVolume;                                   // 0x1D8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGGBoatVehicleMovementComponent* GetDefaultObj();

	void SetMovementMode(enum class EBoatMovementMode NewMode);
	enum class EBoatMovementMode GetCurrentMovementMode();
};

// 0x8 (0x238 - 0x230)
// Class Goat2.GGBossLevelMediaSoundListener
class AGGBossLevelMediaSoundListener : public AActor
{
public:
	class UMediaSoundComponent*                  MediaSoundComponent;                               // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AGGBossLevelMediaSoundListener* GetDefaultObj();

};

// 0x0 (0x230 - 0x230)
// Class Goat2.GGBossPortal
class AGGBossPortal : public AActor
{
public:

	static class UClass* StaticClass();
	static class AGGBossPortal* GetDefaultObj();

	int32 GetTriggersWithPlayersNum();
};

// 0x78 (0x600 - 0x588)
// Class Goat2.GGBouncyStaticMeshComponent
class UGGBouncyStaticMeshComponent : public UStaticMeshComponent
{
public:
	float                                        BounceFactor;                                      // 0x588(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxBounceVelocity;                                 // 0x58C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCapCharacterToMaxBounce;                          // 0x590(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1770[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              BounceDirection;                                   // 0x594(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bForceMaxVelocity;                                 // 0x5A0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreInVelocityDirection;                        // 0x5A1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRequireMinVelocity;                               // 0x5A2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1771[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinRequiredVelocity;                               // 0x5A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRequireCharacterFalling;                          // 0x5A8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1772[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinTimeBetweenBounces;                             // 0x5AC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RagdollDelayOnBadRotation;                         // 0x5B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllwaysRagdollOnBounce;                           // 0x5B4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1774[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CharacterRandomSpin;                               // 0x5B8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxBouncesForInstinct;                             // 0x5BC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnBounced;                                         // 0x5C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UArrowComponent*                       BounceDirComponent;                                // 0x5D0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FRecentActor>                  RecentBounces;                                     // 0x5D8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AActor*>                        BounceIgnoredActors;                               // 0x5E8(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1775[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGBouncyStaticMeshComponent* GetDefaultObj();

	void RemoveBounceIgnoredActor(class AActor* Actor);
	TArray<class AActor*> GetBounceIgnoredActors();
	void ClearBounceIgnoredActor();
	void BouncyCompOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	bool Bounce(class AActor* OtherActor, class UPrimitiveComponent* OtherComp);
	void AddBounceIgnoredActor(class AActor* Actor);
};

// 0xB0 (0x2E0 - 0x230)
// Class Goat2.GGBrainWave
class AGGBrainWave : public AActor
{
public:
	class USceneComponent*                       Root;                                              // 0x230(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                         Collider;                                          // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxDistanceToStopBeamConenction;                   // 0x240(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AmountOfHeadGrowth;                                // 0x244(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxAmountOfGrowth;                                 // 0x248(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_177C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            NPCInflateHeadSound;                               // 0x250(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            BeamSound;                                         // 0x258(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       BeamParticle;                                      // 0x260(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       NPCParticle;                                       // 0x268(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldWobble;                                     // 0x270(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldPlayerHeadWobble;                           // 0x271(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_177E[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxHumanoidHeadSizeInstinct;                       // 0x274(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxGoatHeadSizeInstinct;                           // 0x278(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_177F[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                NearestNPC;                                        // 0x288(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                CurrentNPC;                                        // 0x290(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                OwningGoat;                                        // 0x298(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AActor*>                        ActorsInCollider;                                  // 0x2A0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class USceneComponent*                       BeamParticleAttachement;                           // 0x2B0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                       NPCParticleAttachement;                            // 0x2B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              NPCParticleSystemComp;                             // 0x2C0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              BeamComponent;                                     // 0x2C8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAudioComponent*                       BeamingAudioComp;                                  // 0x2D0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAudioComponent*                       NPCHeadAudioComp;                                  // 0x2D8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AGGBrainWave* GetDefaultObj();

	void OverlapEnd(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x8 (0x238 - 0x230)
// Class Goat2.GGBRBSpawner
class AGGBRBSpawner : public AActor
{
public:
	class UBoxComponent*                         SpawnArea;                                         // 0x230(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AGGBRBSpawner* GetDefaultObj();

};

// 0x10 (0x240 - 0x230)
// Class Goat2.GGBuilderBlock
class AGGBuilderBlock : public AActor
{
public:
	class USceneComponent*                       SceneRoot;                                         // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  BlockMesh;                                         // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AGGBuilderBlock* GetDefaultObj();

};

// 0x28 (0x450 - 0x428)
// Class Goat2.GGButton
class UGGButton : public UButton
{
public:
	FMulticastInlineDelegateProperty_            OnDoubleClicked;                                   // 0x428(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bDisableEnterKey;                                  // 0x438(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1781[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        BatchPriorityGroup;                                // 0x43C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMouseMoveEvent;                                  // 0x440(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGButton* GetDefaultObj();

};

// 0x320 (0x628 - 0x308)
// Class Goat2.GGButtonUserWidget
class UGGButtonUserWidget : public UGGUserWidget
{
public:
	uint8                                        Pad_1784[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UButton*                               ButtonWidget;                                      // 0x310(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHoldToInteract;                                   // 0x318(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1785[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HoldInteractDuration;                              // 0x31C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                               ActiveMarker;                                      // 0x320(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAutomaticHoverStyles;                             // 0x328(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bActiveMarkerIsFocusMarker;                        // 0x329(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bActiveOverridesFocusMarkers;                      // 0x32A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRemoveFocusMarkerOnPress;                         // 0x32B(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1786[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FButtonStyle                          ButtonDefaultStyle;                                // 0x330(0x278)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FLinearColor                          ButtonDefaultColor;                                // 0x5A8(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          ButtonDefaultBackgroundColor;                      // 0x5B8(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnWidgetStartedInteracting;                        // 0x5C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnWidgetStoppedInteracting;                        // 0x5D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMenuNavFilterPressed;                            // 0x5E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMenuNavActionPressed;                            // 0x5F8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMenuNavSelectPressed;                            // 0x608(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1787[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGButtonUserWidget* GetDefaultObj();

	void SetIsActive(bool bActive);
	void SetHovered(bool bHovered);
	void SetHoldToInteract(bool bInEnabled);
	void OnSetHovered(bool bHovered);
	void OnSetActive(bool bActive);
	void OnButtonUnhovered();
	void OnButtonReleased();
	void OnButtonPressed();
	void OnButtonHovered();
	void OnButtonClicked();
	bool IsActive();
	bool GetHoldToInteract();
};

// 0x18 (0x40 - 0x28)
// Class Goat2.GGFovAnimData
class UGGFovAnimData : public UObject
{
public:
	uint8                                        Pad_1788[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGFovAnimData* GetDefaultObj();

};

// 0x18 (0xC8 - 0xB0)
// Class Goat2.GGCameraFovController
class UGGCameraFovController : public UActorComponent
{
public:
	class UCameraComponent*                      TargetCamera;                                      // 0xB0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGGFovAnimData*                        FovAnimData;                                       // 0xB8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_178F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGCameraFovController* GetDefaultObj();

	bool SetTargetFov(float TargetFov, float FovAnimLength, float FovAnimStartDelay, enum class EEasingFunc FovAnimEaseCurve, bool bDoInterrupt);
	void SetTargetCamera(class UCameraComponent* NewTargetCamera);
	void ResetTargetFov(float FovAnimLength, float FovAnimStartDelay, enum class EEasingFunc FovAnimEaseCurve);
	float GetInitialFov();
};

// 0xB8 (0x8E0 - 0x828)
// Class Goat2.GGCameraGoatGearCamera
class AGGCameraGoatGearCamera : public ACineCameraActor
{
public:
	uint8                                        Pad_1793[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGGearAbility_CameraGoat*             GearAbility;                                       // 0x830(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AGGGoat*                               OwnerGoat;                                         // 0x838(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentMoveRate;                                   // 0x840(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentLookRate;                                   // 0x844(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinMoveRate;                                       // 0x848(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxMoveRate;                                       // 0x84C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinTurnRate;                                       // 0x850(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxTurnRate;                                       // 0x854(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinFocalLengthChangeRate;                          // 0x858(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxFocalLengthChangeRate;                          // 0x85C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int16                                        FocalLengthRateChangeSteps;                        // 0x860(0x2)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1794[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FocalLengthChangeRate;                             // 0x864(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinFocusDistanceChangeRateChangeRate;              // 0x868(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxFocusDistanceChangeRateChangeRate;              // 0x86C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int16                                        FocusDistanceRateChangeSteps;                      // 0x870(0x2)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1795[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FocusDistanceChangeRate;                           // 0x874(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ApertureChangeRate;                                // 0x878(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1796[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                SelectedActor;                                     // 0x880(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int16                                        MoveRateSteps;                                     // 0x888(0x2)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int16                                        LookRateSteps;                                     // 0x88A(0x2)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1798[0x2C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bHelpToggled;                                      // 0x8B8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHoldingFocus;                                     // 0x8B9(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHoldingFocalLength;                               // 0x8BA(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHoldingAperture;                                  // 0x8BB(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1799[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               MoveInput;                                         // 0x8C0(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                              LookInput;                                         // 0x8CC(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_179A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGCameraGoatGearCamera* GetDefaultObj();

	void MadeInactive();
	void InitCamera(class UGGGearAbility_CameraGoat* InGearAbility);
	class AActor* GetTrackedActor();
	class AActor* GetFocusedActor();
};

// 0x18 (0x48 - 0x30)
// Class Goat2.CameraVolumeSettings
class UCameraVolumeSettings : public UDataAsset
{
public:
	float                                        MinArmLength;                                      // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxArmLength;                                      // 0x34(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGGCameraArmLengthMode            MaxArmLengthMode;                                  // 0x38(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EEasingFunc                       EasFunction;                                       // 0x39(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_179C[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BlendInTime;                                       // 0x3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BlendOutTime;                                      // 0x40(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bClampMinArmLength;                                // 0x44(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_179D[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCameraVolumeSettings* GetDefaultObj();

};

// 0xA8 (0x310 - 0x268)
// Class Goat2.GGCameraVolume
class AGGCameraVolume : public AVolume
{
public:
	class UCameraVolumeSettings*                 SettingsOverride;                                  // 0x268(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinArmLength;                                      // 0x270(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxArmLength;                                      // 0x274(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGGCameraArmLengthMode            MaxArmLengthMode;                                  // 0x278(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EEasingFunc                       EasFunction;                                       // 0x279(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_179F[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BlendInTime;                                       // 0x27C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BlendOutTime;                                      // 0x280(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bClampMinArmLength;                                // 0x284(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17A0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGGoat*                               OverlappingLocalGoat;                              // 0x288(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17A1[0x80];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGCameraVolume* GetDefaultObj();

};

// 0x80 (0x2B0 - 0x230)
// Class Goat2.GGCastleStretchGoal
class AGGCastleStretchGoal : public AActor
{
public:
	int32                                        StretchGoalIndex;                                  // 0x230(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17A5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGStretchGoalGroup*                   StretchGoalGroup;                                  // 0x238(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  StretchGoalDisplayName;                            // 0x240(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  StretchGoalInProgressText;                         // 0x258(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    DisplayIcon;                                       // 0x270(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NeededChaosAmount;                                 // 0x278(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EStretchGoalStates                CurrentState;                                      // 0x27C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17A6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnGoalChangedState;                                // 0x280(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class ULevelSequence*                        GoalSequence;                                      // 0x290(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StretchGoalFadeDuration;                           // 0x298(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UnlockTimerDelay;                                  // 0x29C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSeenSequence;                                     // 0x2A0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17A8[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGCastleStretchGoal* GetDefaultObj();

	void SequenceFinished();
	void OnSequenceStart();
	void OnSequenceFinished();
	void MulticastSetToFinishedState();
	void MulticastPlaySequence();
	void MulticastFadeOut();
	void MulticastFadeIn();
	void GoalInitialized();
	void GoalChangedState(enum class EStretchGoalStates NewState, enum class EStateChangeSource ChangeSource);
	void CurrentStateReplicated(enum class EStretchGoalStates NewState);
};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGCatchableInterface
class IGGCatchableInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IGGCatchableInterface* GetDefaultObj();

	void ReleaseCatchedActorWithOptions(struct FVector& ReleaseLocation, struct FGGReleaseOptions& Options);
	void ReleaseCatchedActor(struct FVector& ReleaseLocation);
	bool IsCatched();
	bool IsCatchableByActor(class AActor* InActor);
	bool IsCatchable();
	bool IsBeingScaled();
	void HandleMulticastReleaseCatchedActor(struct FVector& ReleaseLocation, struct FGGReleaseOptions& Options);
	void HandleMulticastCatchActor(class AActor* Catcher, struct FGGCatchOptions& Options);
	class USceneComponent* GetComponentToScale();
	void ForceReleaseCatchedActor();
	void CatchActorWithOptions(class AActor* Catcher, struct FGGCatchOptions& Options);
	void CatchActor(class AActor* Catcher);
};

// 0x48 (0xF8 - 0xB0)
// Class Goat2.GGChaosCounterListener
class UGGChaosCounterListener : public UActorComponent
{
public:
	enum class EChaosCounterMode                 ChaosCounterMode;                                  // 0xB0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17BF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        AllowedRecurringSourcesFilter;                     // 0xB8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FChaosCounterCooldownSetting>  CooldownSettings;                                  // 0xC8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        BaseCooldown;                                      // 0xD8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDebugPrints;                                      // 0xDC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17C1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDataTable*                            SourceDataTable;                                   // 0xE0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FChaosCounterCooldownEntry>    CurrentCooldownEntries;                            // 0xE8(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGGChaosCounterListener* GetDefaultObj();

	void OnTokenAmountChanged(int32 Amount, const class FString& AcquisitionID, const class FString& AcquisitionSource);
	void OnQuestTierCompleted(class AGGQuestBase* Quest, struct FQuestTier& Tier);
	void OnQuestCompleted(class AGGQuestBase* Quest, class AGGPlayerState* OptionalPlayerState);
	void OnQuestCollectionMilestoneReached(class AGGQuestBase* Quest, struct FQuestTier& Milestone);
	bool IsRecurringAcquisitionAllowed(const class FString& InSource);
	bool IsCooldownActiveForSource(const class FString& InSource);
	void GiveChaosAwardFromSourceWithAmount(const class FString& SourceID, int32 Amount);
	void GiveChaosAwardFromSource(const class FString& SourceID, const class FString& FallbackID);
	int32 GetChaosFromEvent(class AGGQuestBase* Quest);
	void ClientTriggerChaos(int32 Amount);
	void ChaosAmountChangedServer(int32 Amount, const class FString& AcquisitionSource);
};

// 0x548 (0xA10 - 0x4C8)
// Class Goat2.GGCharacter
class AGGCharacter : public ACharacter
{
public:
	uint8                                        Pad_1816[0x80];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGCharacterPushComponent*             CharacterPushComponent;                            // 0x548(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGStiffBonesComponent*                StiffBonesComponent;                               // 0x550(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicalAnimationComponent*           PhysicalAnimationComp;                             // 0x558(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGWaterFloatingComponent*             FloatingComp;                                      // 0x560(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               InitialLocation;                                   // 0x568(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              InitialRotation;                                   // 0x574(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bCanBeHeadbutted;                                  // 0x580(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanRespawn;                                       // 0x581(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1817[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnCharacterRespawned;                              // 0x588(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCharacterHasJumped;                              // 0x598(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCharacterBounced;                                // 0x5A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        StaticMeshRagdollImpactDelay;                      // 0x5B8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1818[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnTeleported;                                      // 0x5C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        Mobile_RateOptimizationSignifanceRange;            // 0x5D0(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        Mobile_RateOptimizationCheckRate;                  // 0x5D4(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCurrentMeshGravity;                               // 0x5D8(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1819[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinDestructibleBreakVel;                           // 0x5DC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCharacterRagdollChanged;                         // 0x5E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_181A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMountedOnCharacter                   MountedOnCharacter;                                // 0x5F8(0x10)(Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bPhysicalAnimateRiding;                            // 0x608(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_181B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPhysicalAnimationData                RidingPhysAnimSettings;                            // 0x60C(0x24)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                  RidingPhysAnimBone;                                // 0x630(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RidingSitSocket;                                   // 0x638(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RidingMeshRelativeLocation;                        // 0x640(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_181C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnStartSaddleRiding;                               // 0x650(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStopSaddleRiding;                                // 0x660(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStartBeingMounted;                               // 0x670(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStopBeingMounted;                                // 0x680(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FLatestInstigator                     LatestInstigator;                                  // 0x690(0x18)(Net, NoDestructor, NativeAccessSpecifierPrivate)
	struct FVector                               ClientTranslationOffset;                           // 0x6A8(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              ClientRotationOffset;                              // 0x6B4(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_181D[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAttachedActor>                CharacterAttachedActors;                           // 0x6E0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<class AActor*>                        GrabbedBy;                                         // 0x6F0(0x10)(Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	float                                        MinLickBoneVolume;                                 // 0x700(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_181E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnCharacterGrabbed;                                // 0x708(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCharacterDropped;                                // 0x718(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int8                                         DesiredColorMaterialIndex;                         // 0x728(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_181F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInterface*                    ShockMaterial;                                     // 0x730(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    BurnMaterial;                                      // 0x738(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsElectrified;                                    // 0x740(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1820[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGVehicle*                            CurrentVehicle;                                    // 0x748(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1821[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EValidDrivers                     DriverType;                                        // 0x760(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bChangeMeshLocationAsDriver;                       // 0x761(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1822[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               MeshLocationAsDriver;                              // 0x764(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bChangeMeshLocationAsPassenger;                    // 0x770(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1823[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               MeshLocationAsPassenger;                           // 0x774(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCharacterStartEnteringVehicle;                   // 0x780(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCharacterEnteringVehicle;                        // 0x790(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCharacterExitedVehicle;                          // 0x7A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHijackVehicle;                                   // 0x7B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1824[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bCanInteract;                                      // 0x7D0(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1825[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector_NetQuantize                   HeadBoneScale;                                     // 0x7D4(0xC)(Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         IsPerceivable;                                     // 0x7E0(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bInvokerActive;                                    // 0x7E1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanBecomeNavInvoker;                              // 0x7E2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1826[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TileGenerationRadius;                              // 0x7E4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TileRemovalRadius;                                 // 0x7E8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1827[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnCollisionStateUpdate;                            // 0x800(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEffectSourceChangedEvent;                        // 0x810(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1828[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FEffectSourcesPair>            ReplicatedEffectSources;                           // 0x870(0x10)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1829[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGStatusEffectManager*                StatusEffectManager;                               // 0x8A0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_182A[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGGActorName                          CurrentActorName;                                  // 0x8D8(0x40)(Net, Protected, NativeAccessSpecifierProtected)
	class UDataTable*                            NameModifierTable;                                 // 0x918(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            OnActorLicked;                                     // 0x920(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnActorLickDropped;                                // 0x930(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnObjectHeadbutted;                                // 0x940(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCharacterPreScaled;                              // 0x950(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            OnCharacterCatched;                                // 0x960(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            OnCharacterReleased;                               // 0x970(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            ForceReleaseCatchedActors;                         // 0x980(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class AActor*                                OurCatcher;                                        // 0x990(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_182B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bCharacterCanBeLicked;                             // 0x99C(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         CurrentTickEnabled;                                // 0x99D(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_182C[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPhysicsAsset*                         OverridePhysAsset;                                 // 0x9A0(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPhysicsAsset*                         OriginalOverridePhysAsset;                         // 0x9A8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_182D[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bCanEditPelvisName;                                // 0x9D0(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_182E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPhysicalMaterial*                     CurrentOverridePhysMat;                            // 0x9D8(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector_NetQuantize10                 MeshScale;                                         // 0x9E0(0xC)(Net, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_182F[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UPhysicalMaterial*                     OriginalOverridePhysMat;                           // 0xA08(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AGGCharacter* GetDefaultObj();

	void TeleportRagdoll(const struct FVector& NewLocation, bool bReplicate);
	void StopPhysAnimatingBelow(class FName BodyName, bool IncludeSelf);
	void StopMontage(class UAnimMontage* AnimMontage);
	void StartPhysAnimatingBelowSettings(class FName BodyName, struct FPhysicalAnimationData& Settings, bool IncludeSelf);
	void StartPhysAnimatingBelow(class FName BodyName, enum class EPhysAnimProfiles Profile, bool IncludeSelf, bool ClearNotFound);
	void SetStandupEnabled(bool NewEnabled);
	bool SetRagdollBlueprint(bool NewRagdoll, struct FRagdollStateChangeSettings& RagdollStateChangeSettings);
	void SetPhysMatOverride(class UPhysicalMaterial* NewOverride);
	void SetPhysAssetOverride(class UPhysicsAsset* NewPhysAsset);
	void SetMultipleMaterial(const TArray<struct FMatElement>& MatElements);
	void SetMeshScale(const struct FVector& NewScale);
	void SetMeshCollision(const struct FGameplayTag& CollisionProfile);
	void SetMaterialLocally(class UMaterialInterface* Material);
	void SetMaterial(class UMaterialInterface* Material);
	void SetLatestInstigator(class APawn* InInstigator, const struct FGameplayTag& Interaction, float ClearAfter, bool bUnragdollReset);
	void SetIsPerceivable(bool NewPerceivable);
	void SetIsElectrified(bool IsElectrified);
	void SetInvokerActive(bool bNewActive);
	void SetHeadScale(const struct FVector& InScale);
	void SetGravityScale(float GravityScale);
	void SetDesiredColorMaterialIndex(int32 DesiredIndex);
	void SetCurrentVehicle(class AGGVehicle* NewVehicle);
	void SetCollisionProfiles(const struct FGameplayTag& CapsuleProfile, const struct FGameplayTag& MeshProfile);
	void SetClientMeshTranslationOffsetModifier(struct FVector& Offset);
	void SetCharacterTick(bool Enabled);
	void SetCharacterCanBeLicked(bool NewCanBeLicked);
	void SetCapsuleCollision(const struct FGameplayTag& CollisionProfile);
	void SetCanToggleRagdoll(bool bCanToggle);
	void SetCanRespawn(bool CanRespawn);
	void SetCanInteract(bool NewCanInteract);
	void SetAvoidanceActive(bool bNewActive);
	void ServerLaunchGGCharacter(const struct FVector& LaunchVelocity, bool XYOverride, bool ZOverride);
	void ServerExitVehicle(enum class EExitReason ExitReason);
	void Respawn(bool BypassCheck);
	void ResetVelocity();
	void ResetToCurrentState();
	void ResetPhysicalAnimationProfiles(bool StopSimulation);
	void ResetMeshCollision(bool bResetToDefault);
	void ResetMaterialLocally();
	void ResetMaterial();
	void ResetDesiredColorMaterialIndex();
	void ResetCapsuleCollision(bool bResetToDefault);
	void ResetAllCollision(bool bResetToDefault);
	bool RemoveStatusEffect(enum class EStatusEffectTypes TypeToRemove);
	void RemoveGrabbedByActor(class AActor* GrabbedByActor);
	void RemoveEffectSources(const struct FGameplayTag& SourceTag, const struct FGameplayTagContainer& EffectTags);
	bool RemoveEffectSource(const struct FGameplayTag& SourceTag, const struct FGameplayTag& EffectTag);
	void RemoveAllEffectSources();
	void RemoveAllEffectsFromSource(const struct FGameplayTag& SourceTag);
	bool PrepareForLick();
	void PlayMontage(class UAnimMontage* AnimMontage, float InPlayRate);
	void OnUnRagdoll(bool bIsOnGround, class ULSCharacterMovementComponent* MovementComp, class ACharacter* UnRagdollingCharacter, struct FRagdollStateChangeSettings& StateChangeSettings);
	void OnRep_UpdatePhysMat();
	void OnRep_TickEnabled();
	void OnRep_ReplicatedEffectSources();
	void OnRep_OverridePhysAsset();
	void OnRep_MountedOnCharacter();
	void OnRep_MeshScale();
	void OnRep_IsPerceivable();
	void OnRep_DesiredColorMaterialIndex();
	void OnRep_CurrentVehicle(class AGGVehicle* PreviousVehicle);
	void OnRep_CurrentMeshGravity();
	void OnRep_CollisionState();
	void OnRagdoll(class ULSCharacterMovementComponent* MovementComp, class ACharacter* RagdollingCharacter, struct FRagdollStateChangeSettings& StateChangeSettings);
	void OnHitMesh(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void OnHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void ObjectWasHeadbutted(class AGGGoat* HeadbuttingGoat);
	void MulticastStopMontage(class UAnimMontage* AnimMontage);
	void MulticastPlayMontage(class UAnimMontage* AnimMontage, float InPlayRate);
	void MulticastOnEffectSourceChanged(const struct FGameplayTag& EffectTag, bool IsAdded);
	void MeshPhysicsVolumeChanged(class APhysicsVolume* NewVolume);
	void MatShockCharacter(float Duration);
	void MatBurnCharacter(float Duration);
	void LaunchGGCharacter(const struct FVector& LaunchVelocity, bool XYOverride, bool ZOverride);
	bool IsSimulatingPhysics();
	bool IsRiding();
	bool IsRagdoll();
	bool IsPassenger();
	bool IsInvokerActive();
	bool IsGrabbedByNPC();
	bool IsGrabbedByGoat();
	bool IsGrabbedByActor(class AActor* CheckActor);
	bool IsDriver();
	bool IsBeingRidden();
	bool IsAttachedToActor();
	bool InWater();
	bool InVehicle();
	bool HasStatusEffectByType(enum class EStatusEffectTypes TypeToCheck);
	bool HasStatusEffectByClass(TSubclassOf<class AGGStatusEffectBase> StatusEffectClass);
	bool HasLocalMaterialOverride();
	bool HasEffectSourceWithTag(const struct FGameplayTag& SourceTag, const struct FGameplayTag& EffectTag);
	bool HasEffectSourceWithoutTags(struct FGameplayTagContainer& ExcludeSourceTags, const struct FGameplayTag& EffectTag);
	bool HasEffectSource(const struct FGameplayTag& EffectTag);
	class UGGStatusEffectManager* GetStatusEffectManager();
	class UPhysicalMaterial* GetPhysMatOverride();
	class APhysicsVolume* GetPhysicsVolume();
	class AGGCharacter* GetMountedOnCharacter();
	class UCapsuleComponent* GetMainOverlapComponent();
	struct FVector GetLickInfo(const struct FVector& LickLocation, class FName* BoneName, struct FRotator* MeshLickRotation, struct FVector* RelativeLickLocation);
	class UMeshComponent* GetLickableActorMeshComponent();
	struct FLatestInstigator GetLatestInstigatorStruct();
	class APawn* GetLatestInstigator(struct FGameplayTag* OutInteractionType);
	bool GetIsPerceivable();
	struct FVector GetHeadBoneScale();
	TArray<class AActor*> GetGrabbedByActors();
	int32 GetDesiredColorMaterialIndex();
	struct FVector GetClientMeshLocModifier();
	void ForceCharacterToBeDropped();
	void ExitVehicle(enum class EExitReason ExitReason);
	void EnterVehicleAsPassenger(class AGGVehicle* Vehicle, const TArray<int32>& AttemptToEnterSlots, bool bBlendCamera);
	void EnterVehicle(class AGGVehicle* Vehicle, bool bBlendCamera);
	void DisableAllCollision();
	void DetachAllActorsFromMesh(bool DestroyActors, bool TurnOnCollision, bool bDetachFromRagdoll);
	void DetachActorFromMesh(class AActor* ActorToDetach, bool DestroyActor, bool TurnOnCollision, bool bForceCannotBecomeLostObject, bool bRemoveInvalidActors);
	bool ClearStatusEffects();
	void ClearCurrentEffectMaterials();
	bool CanRespawn();
	bool CanRagdoll();
	bool CanInteract();
	bool CanBeLicked();
	bool CanBeHeadbutted(class AGGGoat* HeadbuttingGoat);
	class AActor* AttachClassToMesh_BP(TSubclassOf<class AActor> ActorClass, class FName SocketName, bool DropOnRagdoll, bool TakeDamage, const struct FVector& RelativeLocation, const struct FRotator& RelativeRotation, const struct FVector& ActorScale, class UObject* MeshOverride, bool bCanBecomeLostObject, bool bCanDropOnStartle, enum class ESameSocketAttach SameSocketAttachAction);
	class AActor* AttachActorToMesh_BP(class AActor* ActorToAttach, class FName SocketName, bool DropOnRagdoll, bool TakeDamage, const struct FVector& RelativeLocation, const struct FRotator& RelativeRotation, const struct FVector& ActorScale, bool bCanBecomeLostObject, bool bCanDropOnStartle, enum class ESameSocketAttach SameSocketAttachAction);
	class AGGStatusEffectBase* ApplyStatusEffect(enum class EStatusEffectTypes TypeToApply, enum class EApplicationMethod ApplicationMethod, class AActor* SpreadFrom, TSubclassOf<class AGGStatusEffectBase> StatusEffectClass, class AGGStatusEffectBase* SpreadFromStatus);
	void AddToGeneralSpeedMulti(float Value);
	void AddGrabbedByActor(class AActor* GrabbedByActor);
	void AddEffectSources(const struct FGameplayTag& SourceTag, const struct FGameplayTagContainer& EffectTags);
	void AddEffectSource(const struct FGameplayTag& SourceTag, const struct FGameplayTag& EffectTag);
	void ActorWasLicked(class AGGGoat* LickingGoat);
	void ActorStoppedBeingLicked(class AGGGoat* LickingGoat);
};

// 0x518 (0x1008 - 0xAF0)
// Class Goat2.LSCharacterMovementComponent
class ULSCharacterMovementComponent : public UCharacterMovementComponent
{
public:
	FMulticastInlineDelegateProperty_            GaitChangedEvent;                                  // 0xAF0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            StanceChangedEvent;                                // 0xB00(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            ViewModeChangedEvent;                              // 0xB10(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            AimingChangedEvent;                                // 0xB20(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            RotationModeChangedEvent;                          // 0xB30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            MovementModeChangedEvent;                          // 0xB40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            ToRagdollEvent;                                    // 0xB50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            UnRagdollEvent;                                    // 0xB60(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            FinishStandingUpEvent;                             // 0xB70(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            CharacterMovementSettingsChangedEvent;             // 0xB80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            DirectionChangedEvent;                             // 0xB90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            TurnInPlaceTriggeredEvent;                         // 0xBA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FName                                  PelvisBoneName;                                    // 0xBB0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PelvisSocket;                                      // 0xBB8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinimalTimeInRagdoll;                              // 0xBC0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanOnlyStandUpOnGround;                           // 0xBC4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_186A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  NeckBoneName;                                      // 0xBC8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RagdollAllowedStandupVelocityThreshold;            // 0xBD0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InputBlockDurationDuringStandUp;                   // 0xBD4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  RagdollSyncBone;                                   // 0xBD8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULSRagdollSyncParameters*              RagdollSyncParameters;                             // 0xBE0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxRagdollImpulseStrength;                         // 0xBE8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ELSGait                           DefaultGait;                                       // 0xBEC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_186B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLSGaitsFloat                         MovementSpeeds;                                    // 0xBF0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FLSGaitsFloat                         CrouchMovementSpeeds;                              // 0xBFC(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FLSGaitsFloat                         FlyingSpeeds;                                      // 0xC08(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        ProneMovementSpeed;                                // 0xC14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLSGaitsFloat                         MovementGroundFriction;                            // 0xC18(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        ClientReplicationDeltaTime;                        // 0xC24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DelayToClearForces;                                // 0xC28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLSGaitsFloat                         CharacterRotationSpeeds;                           // 0xC2C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FLSGaitsFloat                         CharacterRotationSpeed_AimingFactor;               // 0xC38(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_186C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           StationaryTurnSpeed;                               // 0xC48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanTriggerTurnInPlace;                            // 0xC50(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseAirRotationModeWhileFlying;                    // 0xC51(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_186D[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              HelicopterFlyingMaxRotationAngle;                  // 0xC54(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        TurnInPlaceAngleThreshold;                         // 0xC60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TurnInPlaceAimYawRateLimit;                        // 0xC64(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TurnInPlaceDelayTime;                              // 0xC68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CharacterInAirRotationSpeed;                       // 0xC6C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CharacterFlyingRotationSpeed;                      // 0xC70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseVelocityRotationWhileFlying;                   // 0xC74(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_186F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BufferAngle;                                       // 0xC78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ELSRotationMode                   RotationMode;                                      // 0xC7C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ELSViewMode                       ViewMode;                                          // 0xC7D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ELSInAirRotationMode              RotationModeInAir;                                 // 0xC7E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseInputRotation;                                 // 0xC7F(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLSEssentialVariables                 Variables;                                         // 0xC80(0x2C)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	enum class ELSGait                           Gait;                                              // 0xCAC(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EMovementMode                     PreviousMovementMode;                              // 0xCAD(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ELSStance                         Stance;                                            // 0xCAE(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsAiming;                                         // 0xCAF(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FPoseSnapshot                         RagdollSnapshot;                                   // 0xCB0(0x38)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                        Pad_1870[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            RootBoneTransform;                                 // 0xCF0(0x30)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class UAnimInstance*                         AnimInstance;                                      // 0xD20(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              TargetRotation;                                    // 0xD28(0xC)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1871[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RagdollOnGroundTimeStamp;                          // 0xD40(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RagdollOnGroundTransitionRate;                     // 0xD44(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ELSGait                           AllowedGait;                                       // 0xD48(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1872[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bReplicateRagdollLocation;                         // 0xD50(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1873[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector_NetQuantize                   RagdollVelocity;                                   // 0xD54(0xC)(Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector_NetQuantize100                RagdollAngularVelocity;                            // 0xD60(0xC)(Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1874[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector_NetQuantize                   RagdollLocation;                                   // 0xD7C(0xC)(Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ERagdollAuthorityState            RagdollAuthorityState;                             // 0xD88(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1875[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AController*                           RagdollAuthorityController;                        // 0xD90(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1876[0x78];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              ControlRotation;                                   // 0xE10(0xC)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1877[0x5C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRagdollStateChangeSettings           RagdollChangeSettings;                             // 0xE78(0x68)(Net, RepNotify, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1878[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class UObject*, struct FGGPendingForce> PendingForces;                                     // 0xF00(0x50)(NativeAccessSpecifierPrivate)
	TMap<class UObject*, struct FGGPendingRadialForce> PendingRadialForces;                               // 0xF50(0x50)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_1879[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ULSDebugParameters*                    DebugParameters;                                   // 0xFA8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                       DebugArrows;                                       // 0xFB0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UArrowComponent*                       ControlRotationArrow;                              // 0xFB8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UArrowComponent*                       TargetRotationArrow;                               // 0xFC0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UArrowComponent*                       CharacterRotationArrow;                            // 0xFC8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UArrowComponent*                       MovementInputArrow;                                // 0xFD0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UArrowComponent*                       LastMovementInputRotationArrow;                    // 0xFD8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UArrowComponent*                       VelocityArrow;                                     // 0xFE0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UArrowComponent*                       LastVelocityArrow;                                 // 0xFE8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_187A[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ULSCharacterMovementComponent* GetDefaultObj();

	bool WantToSprint();
	void UpdateRagdoll_Server(const struct FVector_NetQuantize& NewRagdollVelocity, const struct FVector_NetQuantize& NewActorLocation);
	void UpdateFloatingRagdoll_Server(const struct FVector_NetQuantize& NewRagdollVelocity, const struct FVector_NetQuantize100& NewRagdollAngularVelocity, const struct FVector_NetQuantize& NewActorLocation);
	void UpdateCharacterMovementSettings();
	void UnRagdollOther_Server(class ULSCharacterMovementComponent* Other, struct FRagdollStateChangeSettings& StateChangeSettings);
	void UnRagdoll_Server(struct FRagdollStateChangeSettings& StateChangeSettings);
	bool UnRagdoll_K2(struct FRagdollStateChangeSettings& StateChangeSettings);
	void UnProne(enum class ELSStance NewStance);
	void ToRagdoll_Server(struct FRagdollStateChangeSettings& StateChangeSettings);
	bool ToRagdoll_K2(struct FRagdollStateChangeSettings& StateChangeSettings);
	void ToggleDebugInfo();
	void ToggleAiming();
	float TimeSinceRagdoll();
	float TimeSinceLastStandUp();
	void TeleportRagdoll_Server(const struct FVector& TeleportLocation);
	void TeleportRagdoll_Multicast(const struct FVector& TeleportLocation, bool bFromServer);
	void TeleportRagdoll(struct FVector& TeleportLocation, bool bReplicate);
	void StopAiming();
	void StartAiming();
	void SetViewMode(enum class ELSViewMode NewViewMode);
	void SetUseVelocityRotationWhileFlying(bool bNewValue);
	void SetStance_Server(enum class ELSStance NewStance);
	void SetStance(enum class ELSStance NewStance, bool bMaintainBaseLocation);
	void SetRotationMode_Server(enum class ELSRotationMode NewRotationMode);
	void SetRotationMode(enum class ELSRotationMode NewRotationMode);
	void SetInAirRotationMode(enum class ELSInAirRotationMode NewInAirRotationMode);
	void SetGait_Server(enum class ELSGait NewGait, enum class ELSGait NewAllowedGait);
	void SetGait(enum class ELSGait NewGait);
	void SetFixedRotationMode(const struct FRotator& FixedRotation);
	void SetCharacterRotation_Server(const struct FRotator& NewCharacterRotation, bool bInterpolate);
	void SetCharacterRotation_Multicast(const struct FRotator& NewCharacterRotation);
	void SetCharacterRotation(const struct FRotator& Rotation, bool bInterpolate, bool bReplicate);
	void SetCanChangeRagdollState(bool bCanChangeState);
	void SetAiming_Server(bool bNewIsAiming);
	void ServerUpdateRagdollOnTarget(class ULSCharacterMovementComponent* TargetComp, const struct FVector_NetQuantize& NewRagdollVelocity, const struct FVector_NetQuantize& NewActorLocation);
	void ServerUpdateFloatingRagdollOnTarget(class ULSCharacterMovementComponent* TargetComp, const struct FVector_NetQuantize& NewRagdollVelocity, const struct FVector_NetQuantize100& NewRagdollAngularVelocity, const struct FVector_NetQuantize& NewActorLocation);
	void ServerUpdateControlRotation(const struct FRotator& NewRotation);
	void ServerTeleportRagdollFinished();
	void ServerSetReplicateRagdollLocation(bool bShouldReplicate);
	void ServerSetInAirRotationMode(enum class ELSInAirRotationMode NewInAirRotationMode);
	void ServerEndTempServerRagdollOverride();
	void ServerChangeRagdollAuthority(class ULSCharacterMovementComponent* MovementComponent, class AController* Controller, enum class ERagdollAuthorityState AuthorityMode);
	void SafeMovementInput_Server(const struct FVector_NetQuantize10& NewMovementInput);
	void ResetRagdollAuthorityToOwner_Multicast();
	void ReplicateTargetRotationServer(const struct FRotator& NewTargetRotation);
	void ReplicateMovementInput_Multicast(const struct FVector_NetQuantize10& NewMovementInput);
	void RagdollOther_Server(class ULSCharacterMovementComponent* Other, struct FRagdollStateChangeSettings& StateChangeSettings);
	void Prone();
	void PlayMontage_Server(class UAnimMontage* InMontage, float PlayRate, float TimeToStartMontageAt, bool bStopAllMontages, bool bIsFromServer);
	void PlayMontage_Multicast(class UAnimMontage* InMontage, float PlayRate, float TimeToStartMontageAt, bool bStopAllMontages, bool bIsFromServer);
	void OnStanceReplicated();
	void OnRep_RagdollChangeSettings();
	void OnRagdollAuthControllerEndPlay(class AActor* Actor, enum class EEndPlayReason EndPlayReason);
	void OnRagdollAuthControllerDestroyed(class AActor* Actor);
	void OnGaitReplicated();
	void OnAimingReplicated();
	bool IsStandingUp();
	bool IsSprinting();
	bool IsRotating();
	bool IsRagdollOnGround();
	bool IsRagdoll();
	bool IsProne();
	bool IsMovingSideways();
	bool IsMovingForward();
	bool IsMoving();
	bool IsLayingOnRightSide();
	bool IsInZeroGEnvironment();
	bool IsFaceDown();
	void IsActorRagdoll_Branch(class AActor* Actor, enum class ERagdollStateOutputPins* OutputPins);
	bool IsActorRagdoll(class AActor* ActorWithLocomotionComp);
	struct FVector GetVelocity();
	struct FTransform GetOwnerBaseTransformOffset();
	class ULSCharacterMovementComponent* GetLSMovementComponent(class AActor* ActorWithLSMovementComp);
	enum class ELSMovementDirection GetCurrentMovementDirection();
	float GetClientReplicationDeltaTime();
	void ClientSetRagdollOverride(const struct FVector_NetQuantize& RagdollVelocityOverride);
	bool CanSprint();
	bool CanOnlyStandUpOnGround();
	bool CanChangeRagdollState(struct FRagdollStateChangeSettings& StateChangeSettings);
	void AddCharacterRotation(const struct FRotator& DeltaRotation, bool bInterpolate, bool bReplicate);
};

// 0xE8 (0x10F0 - 0x1008)
// Class Goat2.GGCharacterMovementComponent
class UGGCharacterMovementComponent : public ULSCharacterMovementComponent
{
public:
	FMulticastInlineDelegateProperty_            OnMovementModeChangedDelegate;                     // 0x1008(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        GeometryAdjustmentHitThreshold;                    // 0x1018(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RagdollDamageThreshold;                            // 0x101C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BouncyRagdollOnLandedVelocityThreshold;            // 0x1020(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RagdollOnLandedVelocityThreshold;                  // 0x1024(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ECanStandUpBelowVehicle           CanStandUpBelowVehicle;                            // 0x1028(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1881[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          TagPreventingUnRagdolling;                         // 0x102C(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RagdollTimeUntilMedicEvent;                        // 0x1034(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PActorBaseGracePeriod;                             // 0x1038(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinTimeOnGroundForStandup;                         // 0x103C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1882[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTimestampedActorReference>    ActorsThatMayNotRagdollCharacter;                  // 0x1050(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FGGClientMovementOverrideData         ClientMovementOverrideData;                        // 0x1060(0x30)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1883[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ShallowWaterDepth;                                 // 0x109C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1884[0x9];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bCanDive;                                          // 0x10A9(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1885[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        IdleUnderWaterBuoyancy;                            // 0x10AC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DiveBuoyancy;                                      // 0x10B0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FloatUpBuoyancy;                                   // 0x10B4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLSGaitsFloat                         DiveSpeeds;                                        // 0x10B8(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        DiveAcceleration;                                  // 0x10C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1886[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GeneralSpeedMultiplier;                            // 0x10D4(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GeneralAccelerationMultiplier;                     // 0x10D8(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1887[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGConveyorComponent*                  CurrentConveyor;                                   // 0x10E0(0x8)(ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1888[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGCharacterMovementComponent* GetDefaultObj();

	void SetGravityScale(float NewGravityScale);
	void SetDiveBuoyancy();
	void SetDesiredBuoyancy(enum class EDesiredBuoyancy Value);
	void SetCurrentConveyor(class UGGConveyorComponent* NewConveyor);
	void SetBuoyancy(float Value);
	void ServerSetBuoyancy(float Value);
	void ServerSendReplicationData(class UGGCharacterMovementComponent* TargetMovementComponent, const struct FVector_NetQuantize& InLocation, const struct FQuat& InRotation, const struct FVector_NetQuantize& InVelocity);
	void ResetVelocity();
	void ResetMeshVelocity();
	void ResetBuoyancy();
	void PreventCharacterFromUnRagdollingForDuration(struct FGameplayTag& SourceTag, float Duration);
	void MulticastSetGravityScale(float NewGravityScale);
	void MulticastResetVelocity();
	void MulticastResetMeshVelocity();
	void MulticastResetBase();
	bool IsOnConveyorBelt();
	bool IsDiving();
	bool IsCompletelyUnderWater(bool bCheckForOxygenVolumes);
	class UGGCharacterMovementComponent* GetGGMovementComp(class AActor* ActorWithComp);
	enum class EDesiredBuoyancy GetDesiredBuoyancy();
	bool CanDive();
	void AddToGeneralSpeedMulti(float Value);
	void AddToGeneralAccelerationMultiplier(float Value);
};

// 0x1B8 (0x268 - 0xB0)
// Class Goat2.GGCharacterPushComponent
class UGGCharacterPushComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnStumbleEvent;                                    // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPushEvent;                                       // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        Mass;                                              // 0xD0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanGetPushedByOverlappingPActors;                 // 0xD4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGGHitRespond                         HitRespondFlagsPlayers;                            // 0xD5(0xC)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FGGHitRespond                         HitRespondFlagsPActors;                            // 0xE1(0xC)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FGGHitRespond                         HitRespondFlags;                                   // 0xED(0xC)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_18A0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSet<TSubclassOf<class AActor>>              ActorClassesToIgnore;                              // 0x100(0x50)(Edit, BlueprintVisible, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FGameplayTag                          TagDisablePushable;                                // 0x150(0x8)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          TagDisableStumble;                                 // 0x158(0x8)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          TagDisableRagdoll;                                 // 0x160(0x8)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleMinStumbleSpeed;                            // 0x168(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageOnStumble;                                   // 0x16C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HitInterval;                                       // 0x170(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LandingHitDelay;                                   // 0x174(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UDamageType>               DefaultDamageType;                                 // 0x178(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<enum class EObjectTypeQuery>          OverlapObjectTypes;                                // 0x180(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class AActor>>            ActorClassesToCollideWith;                         // 0x190(0x10)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                         bRagdollNPCsWithSameSpeedWhenSprinting;            // 0x1A0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRagdollNPCsWithSameSpeedWhenJumping;              // 0x1A1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18A2[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StumbleSpeedThreshold;                             // 0x1A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RagdollSpeedThreshold;                             // 0x1A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleRagdollSpeedThreshold;                      // 0x1AC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                   PrimitiveRoot;                                     // 0x1B0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGCharacter*                          CharacterOwner;                                    // 0x1B8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FGGRecentlyHitActor>           RecentlyHitActors;                                 // 0x1C0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class UAnimMontage*                          LastActiveStumbleMontage;                          // 0x1D0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AGGCharacter*>                  IgnoredCharacters;                                 // 0x1D8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FOverlapResult>                ActorHits;                                         // 0x1E8(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_18A4[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                LastPushedBy;                                      // 0x200(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_18A5[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FOverlapResult>                AsyncResultsFromLastQuery;                         // 0x228(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_18A6[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGCharacterPushComponent* GetDefaultObj();

	void ServerTakeRagdollDamageOther(class UGGCharacterPushComponent* StumbleComponent, struct FImpulseDamageEvent& DamageEvent);
	void ServerTakeRagdollDamage(struct FImpulseDamageEvent& DamageEvent);
	void ServerStumbleOther(class UGGCharacterPushComponent* StumbleComponent, const struct FVector& Impulse);
	void ServerStumbleCharacter(float Speed, const struct FVector& Direction, class AActor* StumbledBy);
	void ServerPushOther(class AGGCharacter* OtherCharacter, const struct FVector& PushVelocity, class AActor* PushedBy);
	void OnRecentlyHitActorDestroyed(class AActor* DestroyedActor);
	void OnOwnerReleased(class AActor* CatchedActor, class AActor* Catcher);
	void OnOwnerRagdolled(class ULSCharacterMovementComponent* MovementComp, class ACharacter* InCharacterOwner, struct FRagdollStateChangeSettings& StateChangeSettings);
	void OnOwnerPreScaled(bool bIsBeingCatched);
	void OnOwnerGrabbed(class AGGCharacter* Grabber, class AGGCharacter* OwnerCharacter);
	void OnOwnerDropped(class AGGCharacter* Grabber, class AGGCharacter* OwnerCharacter);
	void OnOwnerCatched(class AActor* CatchedActor, class AActor* Catcher);
	void OnNPCOwnerPooled(class AGGNPC* NPC, bool bWasPooled);
	void OnMeshHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void OnCharacterOwnerLanded(struct FHitResult& Hit);
	void OnCapsuleHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void MulticastStumbleCharacter(float Speed, const struct FVector& Direction, class AActor* StumbledBy);
};

// 0x28 (0x2E8 - 0x2C0)
// Class Goat2.GGChatBeaconClient
class AGGChatBeaconClient : public AOnlineBeaconClient
{
public:
	int32                                        GivenColorIndex;                                   // 0x2C0(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18AC[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGOnlineManager*                      OnlineManager;                                     // 0x2E0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AGGChatBeaconClient* GetDefaultObj();

	void ServerSendMessage(const class FString& UserName, const class FString& Message, int32 ColorIndex);
	void ClientSendMessage(const class FString& UserName, const class FString& Message, int32 ColorIndex);
};

// 0x18 (0x270 - 0x258)
// Class Goat2.GGChatBeaconHost
class AGGChatBeaconHost : public AOnlineBeaconHostObject
{
public:
	uint8                                        Pad_18AD[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGOnlineManager*                      OnlineManager;                                     // 0x268(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AGGChatBeaconHost* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Goat2.GGChatComponent
class UGGChatComponent : public UActorComponent
{
public:

	static class UClass* StaticClass();
	static class UGGChatComponent* GetDefaultObj();

};

// 0x18 (0x690 - 0x678)
// Class Goat2.GGRichTextBlock
class UGGRichTextBlock : public URichTextBlock
{
public:
	bool                                         bEnableHoldSoundCues;                              // 0x678(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18B1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  OverriddenDefaultStyle;                            // 0x67C(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18B2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstanceDynamic*              HoldMID;                                           // 0x688(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGGRichTextBlock* GetDefaultObj();

	bool SetTargetUserIndex(int32 InUserIndex);
	void SetOverriddenDefaultStyle(class FName OverriddenStyle);
	void SetHeldDurationOverride(float HeldDuration);
	void SetEnableHoldSoundCues(bool bEnable);
	void Refresh();
	void OnGamepadChanged(bool bGamepadActive);
	void ListenForGamepadChanges();
	class UDataTable* GetTextStyleSet();
	struct FTextBlockStyle GetCurrentStyle();
};

// 0x8 (0x698 - 0x690)
// Class Goat2.GGChatEntryTextBlock
class UGGChatEntryTextBlock : public UGGRichTextBlock
{
public:
	uint8                                        Pad_18B3[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGChatEntryTextBlock* GetDefaultObj();

};

// 0x8 (0x268 - 0x260)
// Class Goat2.GGChatEntryUserWidget
class UGGChatEntryUserWidget : public UUserWidget
{
public:
	struct FGameplayTag                          EntryTag;                                          // 0x260(0x8)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGChatEntryUserWidget* GetDefaultObj();

	void OnUpdateLabels(const struct FNotification& Notification);
};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGChatFormatStatics
class UGGChatFormatStatics : public UObject
{
public:

	static class UClass* StaticClass();
	static class UGGChatFormatStatics* GetDefaultObj();

};

// 0x68 (0x488 - 0x420)
// Class Goat2.GGChatUserWidget
class UGGChatUserWidget : public UGGNotificationUserWidget
{
public:
	int32                                        MaximumNumberOfChatEntries;                        // 0x420(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChatFadeDelay;                                     // 0x424(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWrapChatEntires;                                  // 0x428(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18BA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UVerticalBox*                          ChatEntryContainer;                                // 0x430(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 SilentChatTags;                                    // 0x438(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UDataTable*                            DefaultChatTextStyle;                              // 0x458(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18BB[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UGGChatEntryTextBlock*>         ChatEntryList;                                     // 0x478(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGGChatUserWidget* GetDefaultObj();

	bool ShouldShowChat(const struct FNotification& Notification);
	void CreatedChatEntry(const struct FNotification& Notification);
	void ChatEnterCommand();
};

// 0xC8 (0x2F8 - 0x230)
// Class Goat2.GGChristmasLightsSpline
class AGGChristmasLightsSpline : public AActor
{
public:
	bool                                         bShouldSpreadElectricity;                          // 0x230(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSetupInConstruction;                              // 0x231(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18BF[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        VerticalTangentLengthPerMeter;                     // 0x234(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HorizontalTangentLengthWhenAttached;               // 0x238(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SurfaceNormalTangentLength;                        // 0x23C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DistanceBetweenLights;                             // 0x240(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               LightOffsetFromSpline;                             // 0x244(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMaterialInterface*>            LightMaterials;                                    // 0x250(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                               LightsScale;                                       // 0x260(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SplineDrawDistance;                                // 0x26C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                           LightMesh;                                         // 0x270(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              MinLightRotationOffset;                            // 0x278(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                              MaxLightRotationOffset;                            // 0x284(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                               SplineEndPos;                                      // 0x290(0xC)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18C0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USplineComponent*                      SplineComponent;                                   // 0x2A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USplineMeshComponent*                  SplineMeshComponent;                               // 0x2A8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UInstancedStaticMeshComponent*> LightISMs;                                         // 0x2B0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class AGGChristmasLightsSplineEndPoint*> EndPointMarkers;                                   // 0x2C0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_18C1[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UMeshComponent*                        GearMeshComponent;                                 // 0x2E8(0x8)(ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GearSocketName;                                    // 0x2F0(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AGGChristmasLightsSpline* GetDefaultObj();

	void OnSplineComponentOverlapBegin(class UPrimitiveComponent* PrimitiveComponent, class AActor* Actor, class UPrimitiveComponent* PrimitiveComponent1, int32 I, bool bArg, struct FHitResult& HitResult);
	void OnRep_SplineEndPos();
};

// 0x0 (0x230 - 0x230)
// Class Goat2.GGChristmasLightsSplineEndPoint
class AGGChristmasLightsSplineEndPoint : public AActor
{
public:

	static class UClass* StaticClass();
	static class AGGChristmasLightsSplineEndPoint* GetDefaultObj();

};

// 0x38 (0xE8 - 0xB0)
// Class Goat2.GGCinematicCharacterComponent
class UGGCinematicCharacterComponent : public UActorComponent
{
public:
	bool                                         bLoadGearInBeginPlay;                              // 0xB0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEquipGearFromLocalInventory;                      // 0xB1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bResetEquippedGearWhenInventoryIsReset;            // 0xB2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18C4[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       ParticleSystemInventoryReset;                      // 0xB8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InventoryResetUnEquipDelay;                        // 0xC0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18C5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UGGGoatGearInfoDataAsset*>      CustomGearToLoad;                                  // 0xC8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bHasFinishedLoading;                               // 0xD8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18C6[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGCinematicCharacterComponent* GetDefaultObj();

	void OnInventoryReset();
	void OnGearEquipped(class UGGGoatGearManager* GearManager);
	void OnDLCsUpdated();
	void EquipGear();
};

// 0x50 (0x280 - 0x230)
// Class Goat2.GGCommanderNPCTarget
class AGGCommanderNPCTarget : public AActor
{
public:
	class USceneComponent*                       SceneRoot;                                         // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              TargetParticleComponent;                           // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              BeamParticleComponent;                             // 0x240(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystem*                       BeamParticle;                                      // 0x248(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceToNPCToRemove;                             // 0x250(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18C7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGNPC*                                SelectedNPC;                                       // 0x258(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_18C8[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGNPC_Humanoid*                       SelectedHumanoidNPC;                               // 0x268(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGNPC*                                AttachedToNPC;                                     // 0x270(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_18C9[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGCommanderNPCTarget* GetDefaultObj();

	void OnRep_SelectedNPC();
};

// 0x28 (0x258 - 0x230)
// Class Goat2.GGCommanderTargeter
class AGGCommanderTargeter : public AActor
{
public:
	class USceneComponent*                       SceneRoot;                                         // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCapsuleComponent*                     OverlapCapsule;                                    // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              TargeterParticleVisualizer;                        // 0x240(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              TargeterAreaParticleVisualizer;                    // 0x248(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_18CA[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGCommanderTargeter* GetDefaultObj();

};

// 0x70 (0x378 - 0x308)
// Class Goat2.GGCompassDistanceTextUserWidget
class UGGCompassDistanceTextUserWidget : public UGGUserWidget
{
public:
	class UTextBlock*                            DistanceLabel;                                     // 0x308(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRadarCoordinateData                  Data;                                              // 0x310(0x58)(Protected, NativeAccessSpecifierProtected)
	class AGGPlayerController*                   PC;                                                // 0x368(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShouldUpdate;                                     // 0x370(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18CB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WaypointRemovalDistanceMobile;                     // 0x374(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGGCompassDistanceTextUserWidget* GetDefaultObj();

	class FText GetDistanceText();
};

// 0x108 (0x410 - 0x308)
// Class Goat2.GGRadarPointUserWidgetBase
class UGGRadarPointUserWidgetBase : public UGGUserWidget
{
public:
	int32                                        WidgetRelevancy;                                   // 0x308(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18D3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPanelWidget*                          WaypointPanel;                                     // 0x310(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                WaypointImage;                                     // 0x318(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGRadarSystem*                        RadarSystem;                                       // 0x320(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ActorLocationUpdateInterval;                       // 0x328(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDistanceFadeEnabled;                              // 0x32C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEdgeFadeEnabled;                                  // 0x32D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18D4[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           FadeCurve;                                         // 0x330(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FadeFallbackDistance;                              // 0x338(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FadeUpdateInterval;                                // 0x33C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bScaleWithZoom;                                    // 0x340(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDistanceScaleCurveEnabled;                        // 0x341(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18D5[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           ScaleCurve;                                        // 0x348(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bThroneRoomOverride;                               // 0x350(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanBeHighlighted;                                 // 0x351(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanBecomeWaypoint;                                // 0x352(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18D7[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             MapPosOffsetMultiplier;                            // 0x354(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18D8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGRadarUserWidgetBase*                OwningWidget;                                      // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRadarCoordinateData                  CachedData;                                        // 0x368(0x58)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_18D9[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGRadarPointUserWidgetBase* GetDefaultObj();

	void UpdateWidget(struct FRadarCoordinateData& Data);
	void UpdateDistance(float Distance);
	void TickWidget();
	bool ShouldScaleWithMapZoom();
	void SetOwningWidget(class UGGRadarUserWidgetBase* InOwningWidget);
	void OnUpdatedWidget(struct FRadarCoordinateData& Data);
	void OnShowAsWaypoint(bool bIsWaypoint);
	void OnAddedWidget(struct FRadarCoordinateData& Data);
	bool IsPointVisible();
	class FString GetWidgetVisibilityDebugString();
	struct FRadarCoordinateData GetCachedData();
	struct FRotator GetActorRotation();
	struct FVector GetActorLocation();
	bool CanEverBecomeWaypoint();
	bool CanBecomeWaypoint();
	void AddedWidget(struct FRadarCoordinateData& Data);
};

// 0x18 (0x428 - 0x410)
// Class Goat2.GGCompassPointUserWidget
class UGGCompassPointUserWidget : public UGGRadarPointUserWidgetBase
{
public:
	class UPanelWidget*                          DistanceContainer;                                 // 0x410(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGCompassDistanceTextUserWidget*      DistanceText;                                      // 0x418(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAlwaysShowDistanceText;                           // 0x420(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18DA[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGCompassPointUserWidget* GetDefaultObj();

};

// 0x70 (0x378 - 0x308)
// Class Goat2.GGRadarUserWidgetBase
class UGGRadarUserWidgetBase : public UGGUserWidget
{
public:
	class UPanelWidget*                          WidgetContainer;                                   // 0x308(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGRadarSystem*                        RadarSystem;                                       // 0x310(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FRadarWidgetData>              RadarWidgets;                                      // 0x318(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FNotificationWidgetClassData>  WidgetClasses;                                     // 0x328(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSubclassOf<class UGGRadarPointUserWidgetBase> DefaultWidgetClass;                                // 0x338(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        WidgetRelevancy;                                   // 0x340(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawDebugInfo;                                    // 0x344(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18DD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMenuNavigationContext                CachedContext;                                     // 0x348(0x28)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_18DE[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGRadarUserWidgetBase* GetDefaultObj();

	void UpdatePointWidget(const struct FRadarCoordinateData& Data);
	void RemovePointWidget(const struct FRadarCoordinateData& Data);
	void RefreshPointWidgets();
	bool ClearCachedContext();
	void AddPointWidget(const struct FRadarCoordinateData& Data);
};

// 0x20 (0x398 - 0x378)
// Class Goat2.GGCompassUserWidget
class UGGCompassUserWidget : public UGGRadarUserWidgetBase
{
public:
	float                                        WidgetWidthLimit;                                  // 0x378(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WidgetFOVScale;                                    // 0x37C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WidgetFadeCutoff;                                  // 0x380(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WidgetFadeUpdateInterval;                          // 0x384(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18DF[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGCompassUserWidget* GetDefaultObj();

};

// 0x98 (0xF8 - 0x60)
// Class Goat2.GGComponentSweepSystem
class UGGComponentSweepSystem : public UGGWorldSubsystem
{
public:
	uint8                                        Pad_18E4[0x70];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FComponentToSweep>             ComponentsToSweep;                                 // 0xD0(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_18E5[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UPrimitiveComponent*>           ComponentsToRemove;                                // 0xE8(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGComponentSweepSystem* GetDefaultObj();

	bool RemoveComponentFromSweeping(class UPrimitiveComponent* PrimComp);
	void OnOverlappingActorDestroyed(class AActor* DestroyedActor);
	class UGGComponentSweepSystem* AddComponentToSweep_K2(class UPrimitiveComponent* PrimComp, TArray<class AActor*>& IgnoredActors, enum class EUniqueOverlapType OverlapType, bool bIgnoreOwner, bool bIgnoreNonDamageableActors, float OverlapEventTickInterval);
};

// 0x78 (0x128 - 0xB0)
// Class Goat2.GGControllerRumbleComponent
class UGGControllerRumbleComponent : public UActorComponent
{
public:
	class UDataTable*                            ForceFeedbackEffectsDataTable;                     // 0xB0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ControllerRumbleSourceTag;                         // 0xB8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, struct FGGControllerRumbleEffectRow> DataTableMap;                                      // 0xC0(0x50)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_192F[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGControllerRumbleComponent* GetDefaultObj();

	void WhileLocalGoatIsVehicleBraking(class AGGGoat* LocalGoat, class AGGVehicle* Vehicle, bool bIsHandBraking);
	void WhileLocalGoatIsGrinding(class AGGGoat* LocalGoat, bool bIsHyperspeedGrinding, class UGGGrindableSplineComponent* GrindSpline);
	void WhileCurrentVehicleIsSpeedBoosting(class AGGVehicle* Vehicle, bool bIsDriver, float Speed);
	class UGGForceFeedbackComponent* SpawnForceFeedbackAttached(const struct FGameplayTag& ForceFeedbackEffect, class USceneComponent* AttachToComponent, class FName AttachPointName, const struct FVector& Location, const struct FRotator& Rotation, enum class EAttachLocation LocationType, bool bStopWhenAttachedToDestroyed, bool bLooping, float IntensityMultiplier, float StartTime, bool bAutoDestroy);
	class UGGForceFeedbackComponent* SpawnForceFeedbackAtLocation(class UObject* WorldContextObject, const struct FGameplayTag& ForceFeedbackEffect, const struct FVector& Location, const struct FRotator& Rotation, bool bLooping, float IntensityMultiplier, float StartTime, bool bAutoDestroy);
	void PlayRumbleIfSettingIsEnabled(struct FGGGameSetting* InSetting);
	void PlayForceFeedbackForPlayer(class APlayerController* PlayerController, const struct FGameplayTag& ForceFeedbackEffect, bool bLooping, bool bIgnoreTimeDilation, bool bPlayWhilePaused);
	void OnVehicleExploded(class AGGVehicle* Vehicle);
	void OnPawnPossessed(class APawn* NewPawn);
	void OnLocalGoatTakeDamage(class AActor* DamagedGoat, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void OnLocalGoatStartHyperspeedGrind(class UGGGrindableSplineComponent* GrindSpline);
	void OnLocalGoatRagdollImpact(class AGGGoat* Goat, float Speed, struct FHitResult& Hit);
	void OnLocalGoatNeckRagdollImpact(class AGGGoat* Goat, float Speed, struct FHitResult& Hit);
	void OnLocalGoatMeshHit(class UPrimitiveComponent* GoatMesh, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void OnLocalGoatLickedActor(class AGGGoat* GoatLicking, class AActor* LickedActor);
	void OnLocalGoatHeadbutting_Internal(class AGGGoat* LocalGoat, bool bHitSomething, TArray<class AActor*>& HeadbuttedActors, bool bIsChargeHeadbutt);
	void OnLocalGoatHeadbutting(class AGGGoat* HeadbuttingGoat, bool bHitSomething, TArray<class AActor*>& HeadbuttedActors, bool bIsChargeHeadbutt, TArray<enum class EStatusEffectTypes>& ActiveStatusEffects);
	void OnLocalGoatHeadbutted(class UObject* HeadbuttedObject, class AGGGoat* HeadbuttingGoat);
	void OnLocalGoatGetStatusEffect(class AActor* GoatActor, class UGGStatusEffectManager* Manager, class AGGStatusEffectBase* NewStatusEffect, enum class EStatusEffectTypes Type);
	void OnLocalGoatExitingVehicle(class AGGCharacter* GoatCharacter, class AGGVehicle* Vehicle);
	void OnLocalGoatEnteringVehicle(class AGGCharacter* GoatCharacter, class AGGVehicle* Vehicle);
	void OnLocalGoatBouncyJumped(class AGGGoat* LocalGoat, int32 PreviousJumpCount, const struct FVector& Location);
	void OnLocalGoatBounced(class AGGCharacter* Character, class UGGBouncyStaticMeshComponent* BouncyComponent);
	void OnLocalGoatBackkicking_Internal(class AGGGoat* LocalGoat, bool bHitSomething, TArray<class AActor*>& KickedActors);
	void OnLocalGoatBackkicking(class AGGGoat* BackkickingGoat, bool bHitSomething, TArray<class AActor*>& KickedActors, TArray<enum class EStatusEffectTypes>& ActiveStatusEffects);
	void OnGoatPerfectLanding(class AGGGoat* LandedGoat, const struct FVector& Location);
	void OnGoatPerfectJump(class AGGGoat* JumpingGoat, const struct FVector& Location);
	void OnGearPartUnlocked(class UDataAsset* GearPart, const struct FGameplayTag& Context, class AGGPlayerController* LocalPlayerController);
	void OnGamepadChanged(bool bGamepadIsActive);
	void OnFireballImpact(class AGGFireballProjectile* Fireball);
	void OnExplosiveActorExploded(class AGGExplosiveActor* ExplosiveActor);
	void OnCurrentVehicleHit(class AGGVehicle* Vehicle, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, float ImpactSize, float OtherImpactSize, const struct FHitResult& HitResult);
	bool IsLocalGoatInVehicle();
	bool IsLocalGoatDriving();
	float GetTimeSinceStartChargingHeadbutt();
	class AGGGoat* GetLocalPossessedGoat();
	void ClientPlayerForceFeedback(const struct FGameplayTag& ForceFeedbackEffect, bool bLooping, bool bIgnoreTimeDilation, bool bPlayWhilePaused);
};

// 0x8 (0x238 - 0x230)
// Class Goat2.GGConveyorActor
class AGGConveyorActor : public AActor
{
public:
	class UGGConveyorComponent*                  ConveyorComponent;                                 // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AGGConveyorActor* GetDefaultObj();

};

// 0x18 (0x4A0 - 0x488)
// Class Goat2.GGConveyorComponent
class UGGConveyorComponent : public UBoxComponent
{
public:
	TArray<class AActor*>                        ActorsOnConveyor;                                  // 0x488(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bConveyorEnabled;                                  // 0x498(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1936[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ConveyorSpeed;                                     // 0x49C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGConveyorComponent* GetDefaultObj();

	void SetConveyorSpeed(float NewSpeed);
	void SetConveyorEnabled(bool NewEnabled);
	void OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x18 (0x48 - 0x30)
// Class Goat2.GGGameInstanceSubsystem
class UGGGameInstanceSubsystem : public UGameInstanceSubsystem
{
public:
	uint8                                        Pad_1937[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGameInstanceSubsystem* GetDefaultObj();

};

// 0x10 (0x58 - 0x48)
// Class Goat2.GGCrashReporterSubsystem
class UGGCrashReporterSubsystem : public UGGGameInstanceSubsystem
{
public:
	uint8                                        Pad_193B[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGCrashReporterSubsystem* GetDefaultObj();

	void UpdateSessionInfo();
	void UpdateAllPlayerInfos();
	void SetGameDataInCrashReporter();
	void OnWorldAreaChanged(class AGGGoat* Goat, const struct FGameplayTag& NewArea);
	void OnUnRagdoll(bool bRagdollOnGround, class ULSCharacterMovementComponent* MovementComp, class ACharacter* UnRagdolledCharacter, struct FRagdollStateChangeSettings& StateChangeSettings);
	void OnRagdoll(class ULSCharacterMovementComponent* MovementComp, class ACharacter* RagdollingCharacter, struct FRagdollStateChangeSettings& StateChangeSettings);
	void OnPlayerLoginOrLogout(class APlayerController* Player);
	void OnMovementModeChanged(class ACharacter* Character, enum class EMovementMode PrevMovementMode, uint8 PreviousCustomMode);
	void OnLobbyUpdated(struct FGGLobbyMember& LobbyMember);
	void OnLobbyJoined(bool bWasSuccessful);
	void OnLickedChanged(class AGGGoat* GoatLicking, class AActor* LickedActor);
	void OnLeftLobby();
	void OnGoatEndPlay(class AActor* GoatActor, enum class EEndPlayReason EndPlayReason);
	void OnGoatDestroyed(class AActor* GoatActor);
	void OnGearUpdated(class AGGGoat* Goat, TArray<class USceneComponent*>& CurrentGoatGear);
	void OnCatchedStateChanged(class AActor* PrimaryGoatActor, class AActor* Catcher);
	void OnAltGoatChanged(class AGGGoat* Goat, class UGGAlternativeGoatDataAsset* NewAltGoat);
	void CaptureErrorEvent(class UObject* WorldContextObject, const class FString& Message);
};

// 0x60 (0x90 - 0x30)
// Class Goat2.GGCreateNPCEvent
class UGGCreateNPCEvent : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_            EventCreated;                                      // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_193F[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGNPC*                                NPC;                                               // 0x60(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               Location;                                          // 0x68(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1940[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                Actor;                                             // 0x78(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1941[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGCreateNPCEvent* GetDefaultObj();

	void NPCEventCreateDelegate(class AGGNPCEvent* NPCEvent);
	class UGGCreateNPCEvent* CreateNPCEvent(class UObject* WorldContextObject, const struct FGameplayTag& EventToCreate, bool SpawnIntoArea, const struct FGameplayTag& Area, class AGGNPC* StartNPC, const struct FVector& StartLocation, class AActor* StartActor);
};

// 0x18 (0x278 - 0x260)
// Class Goat2.GGCreateNPCUserWidget
class UGGCreateNPCUserWidget : public UUserWidget
{
public:
	class FString                                NPCName;                                           // 0x260(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AGGNPCVisualizer*                      NPCVisualizer;                                     // 0x270(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGCreateNPCUserWidget* GetDefaultObj();

	class AGGNPC* SpawnNPC();
};

// 0x368 (0x418 - 0xB0)
// Class Goat2.GGCrowdSystemComponent
class UGGCrowdSystemComponent : public UActorComponent
{
public:
	bool                                         DebugPrint;                                        // 0xB0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DebugDraw;                                         // 0xB1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DoRandomCommands;                                  // 0xB2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1942[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CommandDelay;                                      // 0xB4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CommandDelayDeviation;                             // 0xB8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CommandNPCCooldown;                                // 0xBC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanTakeRequests;                                   // 0xC0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1943[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AGGNPC*>                        IgnoreNPCsForCommands;                             // 0xC8(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FVector                               QueryLocation;                                     // 0xD8(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              QueryRotation;                                     // 0xE4(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         HaveSingleStandLocations;                          // 0xF0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1944[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FWeightedElement_CrowdType            SingleStandWeight;                                 // 0xF4(0x8)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1945[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UEnvQuery*                             StandLocationEQ;                                   // 0x100(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EEnvQueryRunMode                  QueryRunMode;                                      // 0x108(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1946[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAIDynamicParam>               StandLocOverrideParams;                            // 0x110(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         FaceEvent;                                         // 0x120(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         RandomFaceDirection;                               // 0x121(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1947[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGGRandomPlayerSequenceEntry>  StandLocAnimations;                                // 0x128(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMoodAnimationArray>           StandLocMoodOverride;                              // 0x138(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         HaveGroups;                                        // 0x148(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceMakeGroups;                                  // 0x149(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDontBreakGroups;                                  // 0x14A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanJoinExistingGroups;                            // 0x14B(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ChanceToJoinGroup;                                 // 0x14C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWeightedElement_CrowdType            GroupWeight;                                       // 0x150(0x8)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	class UEnvQuery*                             GroupAroundLocationEQ;                             // 0x158(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAIDynamicParam>               GroupOverrideParams;                               // 0x160(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class UEnvQuery*                             GroupStandLocationsEQ;                             // 0x170(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxGroups;                                         // 0x178(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinGroupSize;                                      // 0x17C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxGroupSize;                                      // 0x180(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1948[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGGRandomPlayerSequenceEntry>  GroupAnimations;                                   // 0x188(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMoodAnimationArray>           GroupMoodOverride;                                 // 0x198(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         HaveAQueue;                                        // 0x1A8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1949[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FWeightedElement_CrowdType            QueueWeight;                                       // 0x1AC(0x8)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_194A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGGRandomPlayerSequenceEntry>  QueueAnimations;                                   // 0x1B8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMoodAnimationArray>           QueueMoodOverride;                                 // 0x1C8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGGRandomPlayerSequenceEntry>  QueueFirstSpotAnimations;                          // 0x1D8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMoodAnimationArray>           QueueFirstMoodOverride;                            // 0x1E8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FVector>                       QueuePositions;                                    // 0x1F8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FVector                               EndLocation;                                       // 0x208(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               EndLocationLookAt;                                 // 0x214(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AGGNPC*>                        TargetNPCs;                                        // 0x220(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class AGGNPC*>                        AvailableNPCs;                                     // 0x230(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_194B[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AGGNPC*>                        HasGottenCommand;                                  // 0x258(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class AGGNPCEvent*                           NPCEvent;                                          // 0x268(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FRecentRequest>                RecentlyRequested;                                 // 0x270(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_194C[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AGGNPC*>                        RequestingNPCs;                                    // 0x2A0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_194D[0x138];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FCommandCooldown>              CommandCooldowns;                                  // 0x3E8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FNPCGroup>                     NPCGroups;                                         // 0x3F8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AGGNPC*>                        QueueingNPCs;                                      // 0x408(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGCrowdSystemComponent* GetDefaultObj();

	void RequestCommand(class AGGNPC* NPC);
};

// 0x760 (0xCE8 - 0x588)
// Class Goat2.GGPlayerController
class AGGPlayerController : public APlayerController
{
public:
	class UGGPlayerDialogueComponent*            PlayerDialogueComponent;                           // 0x588(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        BaseTurnRate;                                      // 0x590(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseLookUpRate;                                    // 0x594(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ToggleSprintGracePeriod;                           // 0x598(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RagdollAfterStandUpDelay;                          // 0x59C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GamepadInputThresholdForSprinting;                 // 0x5A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MobileInputThresholdForSprinting;                  // 0x5A4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AGGPlayerCameraManager*                GGPlayerCameraManager;                             // 0x5A8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ForcedMovementInput;                               // 0x5B0(0xC)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bForceSprint;                                      // 0x5BC(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bUsingGamepad;                                     // 0x5BD(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_19BF[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnGamepadChanged;                                  // 0x5C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_19C0[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnKarmaSentFromClient;                             // 0x5E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_19C1[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGCustomCheatManager*                 CustomCheatManager_Vanilla;                        // 0x600(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGGControllerRumbleComponent> RumbleComponentClass;                              // 0x608(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGControllerRumbleComponent*          RumbleComponent;                                   // 0x610(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19C4[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnGoatReplaced;                                    // 0x620(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnControlledGoatReplicated;                        // 0x630(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FVector                               WaterLaunchVector;                                 // 0x640(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WaterLaunchDelay;                                  // 0x64C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGoatInTriggers>               GoatsInTriggers;                                   // 0x650(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class USoundMix*                             SlowMotionSoundMix;                                // 0x660(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_19C6[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            ActivateSlomo;                                     // 0x670(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            DeativateSlomo;                                    // 0x678(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableMotionBlurDuringSlowMo;                    // 0x680(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_19C7[0x1F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGObjectControlInputComponent*        ObjectControlInputComponent;                       // 0x6A0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FReplicatedObjectControl              ClientObjectControl;                               // 0x6A8(0x20)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_19C9[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnInteractWithEgg;                                 // 0x700(0x10)(ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPublic)
	class UGGLoadingScreenComponent*             LoadingScreenComponent;                            // 0x710(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTeleportData                         TeleportData;                                      // 0x718(0x30)(NoDestructor, NativeAccessSpecifierPublic)
	class UGGTeleportationComponent*             TeleportationComponent;                            // 0x748(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGGoatTower*                          TowerBeingSynced;                                  // 0x750(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AGGCastleStretchGoal*                  GoalBeingUnlocked;                                 // 0x758(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_19CA[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  HijackTextFormat;                                  // 0x768(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UObject*                               TargetedInteractable;                              // 0x780(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InteractCheckInterval;                             // 0x788(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GeneralInteractionHalfHeight;                      // 0x78C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GeneralInteractionRadius;                          // 0x790(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GeneralInteractionDistance;                        // 0x794(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GeneralInteractionStartLocForwardOffset;           // 0x798(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               GeneralInteractionFeetOffset;                      // 0x79C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleInteractionRadius;                          // 0x7A8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDebugDrawInteraction;                             // 0x7AC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_19CB[0xA3];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TrackballDeceleration;                             // 0x850(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TouchHorizontalTurnRate;                           // 0x854(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TouchVerticalTurnRate;                             // 0x858(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_19CC[0x4C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnEnterUFO;                                        // 0x8A8(0x10)(ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnExitUFO;                                         // 0x8B8(0x10)(ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStartedBrowsing;                                 // 0x8C8(0x10)(ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStoppedBrowsing;                                 // 0x8D8(0x10)(ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPublic)
	uint8                                        Pad_19CD[0x78];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnTouchStarted;                                    // 0x960(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTouchEnded;                                      // 0x970(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UUserWidget>             MobileHUDControlsWidgetClass;                      // 0x980(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UUserWidget>             MobileDistanceWarningWidgetClass;                  // 0x9A8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UGGHUDUserWidgetBase>    HUDWidgetClassMobile;                              // 0x9D0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           MobileHUDWidgetInstance;                           // 0x9F8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           MobileDistanceWarningInstance;                     // 0xA00(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UGGHUDUserWidgetBase>    HUDWidgetClass;                                    // 0xA08(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMenuStructureData>            MenuClasses;                                       // 0xA30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UUserWidget*                           ActiveMenuWidget;                                  // 0xA40(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 WidgetTagsToHideInOtherCameras;                    // 0xA48(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 WidgetTagsToHideInCutscenes;                       // 0xA68(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UGGHUDUserWidgetBase*                  HUDWidgetInstance;                                 // 0xA88(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundMix*                             MenuSoundMix;                                      // 0xA90(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGMenuComponent*                      MenuComponent;                                     // 0xA98(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGNotificationDispatcher*             NotificationDispatcher;                            // 0xAA0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGRadarComponent*                     RadarComponent;                                    // 0xAA8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGTutorialComponent*                  TutorialComponent;                                 // 0xAB0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGIntroComponent*                     IntroComponent;                                    // 0xAB8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGPlayerSubtitleComponent*            PlayerSubtitleComponent;                           // 0xAC0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGChaosCounterListener*               ChaosCounterListener;                              // 0xAC8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NearestQuestCheckInterval;                         // 0xAD0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UpdateInstinctsCheckInterval;                      // 0xAD4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AmountOfActiveInstinctsToShow;                     // 0xAD8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_19CE[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTimedRagdollAuthorityOfNPC>   TimedRagdollAuthorityNPCs;                         // 0xAF8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UActorComponent*>               ComponentsWithExec;                                // 0xB08(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FVector_NetQuantize>           LocationsAffectingSignificance;                    // 0xB18(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_19CF[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGGPlaytestOverlayUserWidget> PlaytestOverlayWidgetClass;                        // 0xB38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGPlaytestOverlayUserWidget*          PlaytestOverlayWidget;                             // 0xB40(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>               DemoOverlayWidgetClass;                            // 0xB48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           DemoOverlayWidget;                                 // 0xB50(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UUserWidget>             DemoEndplateWidgetClass;                           // 0xB58(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           DemoEndplateWidget;                                // 0xB80(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMenuNavigation;                                  // 0xB88(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMenuOpened;                                      // 0xB98(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMenuClosed;                                      // 0xBA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 TabsToDisableInBossFight;                          // 0xBB8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 TabsToDisableInTeleportArea;                       // 0xBD8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_19D0[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGGoat*                               ControlledGoat;                                    // 0xC00(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_19D1[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGGrindableSplineComponent*           NearbyGrindSpline;                                 // 0xC18(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bHoldingHeadbutt;                                  // 0xC20(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_19D3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HeadbuttDownTimestamp;                             // 0xC24(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bHoldingWalk;                                      // 0xC28(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_19D4[0x37];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGQuestBase*                          CachedNearestQuest;                                // 0xC60(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AGGQuestBase*>                  CachedActiveInstincts;                             // 0xC68(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_19D5[0x70];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGPlayerController* GetDefaultObj();

	void WaterMixVolChange(bool InWater, class USoundMix* SoundMix);
	void VehicleHornUp();
	void VehicleHornDown();
	void VehicleBoostUp();
	void VehicleBoostDown();
	void UpdateTutorial(struct FDataTableRowHandle& TutorialRowHandle);
	void UpdateTargetInteractableHint(class UObject* TargetInteractable, bool InteractableChanged);
	void UpdateTargetInteractable(bool bBypassInterval);
	void UpdateNearestQuest();
	void UpdateInstincts();
	void ToggleRagdoll();
	void ToggleEmotes();
	void StartControllingObject(class UObject* Object, class AActor* ViewTarget, const struct FViewTargetTransitionParams& ViewTransition);
	bool SpawnedIntoThisWorld(class UObject* WorldContextObject);
	void SoundMixChange(bool InWater, class USoundMix* SoundMix);
	void SlowMotionMixChange(bool IsSlowMotion);
	void SlowMotion();
	void SkipIntro();
	void ShowSplash(class FText& SplashText, class FText& SplashDescription);
	void ShowDemoEndplate();
	bool ShouldTabBeDisabled(const struct FGameplayTag& TabTag);
	void SetTargetInteractable(class UObject* TargetInteractable);
	void SetPlayerName(const class FString& NewName);
	void SetForceSprint(bool ForceSprint);
	void SetForcedMovementInput(const struct FVector& ForcedMovement);
	void SetAutoManageActiveCameraTarget(bool bAutoManageCamera);
	void ServerVehicleAbilityReleased(uint8 AbilityIndex);
	void ServerVehicleAbilityPressed(uint8 AbilityIndex);
	void ServerStartPlayerGameFromStartingPoint(class AGGPlayerGameStartingPoint* StartingPoint);
	void ServerStartPlayerGame(class UGGPlayerGameDataAsset* MiniGameAsset);
	void ServerStartControllingObject(class UObject* Object, class AActor* ViewTarget, const struct FViewTargetTransitionParams& ViewTransition);
	void ServerSendPlayerGameInviteResponse(bool bAccepted);
	void ServerSendKarmaAmountToServer(int32 KarmaAmount);
	void ServerRespawn(bool BypassCheck);
	void ServerResetObjectControl(const struct FViewTargetTransitionParams& ViewTransition);
	void ServerRequestServerTime(class APlayerController* Requester, float RequestWorldTime);
	void ServerLeavePlayerGame();
	void ServerChat(const class FString& Msg);
	void ServerCancelPlayerGame();
	void ServerBaaReleased();
	void ServerBaaPressed();
	void SavePlayerName(const class FString& NewName);
	void ResetObjectControl(const struct FViewTargetTransitionParams& ViewTransition);
	bool RequestTabNavigation(const struct FGameplayTag& InTag, const struct FMenuNavigationContext& Context);
	bool RequestMenuNavigation(const struct FGameplayTag& MenuTag, enum class EMenuRequest Request, const struct FMenuNavigationContext& MenuContext, class UUserWidget** OutWidget);
	bool RemoveTutorial(struct FDataTableRowHandle& TutorialRowHandle, bool bComplete, class UObject* TutorialObject, bool bCompleteEvenIfNotActive);
	void ReceivedLogoutMessage(class APlayerState* LeavingPlayerState);
	void ReceivedLoginMessage(class APlayerState* JoiningPlayerState);
	void ReceivedChatMessage(class APlayerState* SenderPlayerState, const class FString& S, class FName Type, float MsgLifeTime);
	void QuestMenu();
	void PS5EnableAdaptiveTriggers(float FireTriggerThreshold);
	void PS5ChangeLightBarColor(const struct FColor& NewLightBarColor);
	void PrintCheatManagerNames();
	void OptionsMenu();
	void OnRep_ControlledGoat();
	void OnRep_ClientObjectControl();
	void OnRemovedContext(const struct FMenuNavigationContextContainer& ContextContainer, class AGGPlayerController* PC);
	void OnQuestUpdated(class AGGQuestBase* Quest, const struct FGameplayTag& UpdateTag);
	void OnQuestTierCompleted(class AGGQuestBase* Quest, struct FQuestTier& Tier);
	void OnQuestCompleted(class AGGQuestBase* Quest, class AGGPlayerState* OptionalPlayerState);
	void OnPawnRagdolled();
	void OnInventoryUnlockedDelegate(class UDataAsset* Asset, const struct FGameplayTag& Context, class AGGPlayerController* OptionalPC);
	void OnEndAbility(struct FAbilityEndedData& AbilityEndedData);
	void OnCameraContextChanged(enum class EPostProcessCameraContext CameraContext, class AActor* NewTarget);
	void OnAreaExited(class AGGGoat* Goat, const struct FGameplayTag& AreaTag);
	void OnAreaEntered(class AGGGoat* Goat, const struct FGameplayTag& AreaTag);
	void MulticastMobileClientDistanceCheck(const struct FVector& HostPosition, const struct FRotator& HostRotator, bool bIsInVehicle);
	void MobileShowInteractUI();
	void MobileManageClientHostDistance();
	void MobileHideInteractUI();
	void MiddleMouseDown();
	void MapMenu();
	void LickAbilityUp();
	void LickAbilityDown();
	void LevelTravelFadeOut(float FadeDuration, const struct FColor& FadeColor);
	bool KeyMatchesActionBinding(const struct FKey& InKey, class FName InAction);
	bool IsTutorialCompleted(struct FDataTableRowHandle& TutorialRowHandle);
	bool IsPrimaryPlayerBlueprint();
	bool IsOverridingAudioListener();
	bool IsInIntro();
	bool IsControllingObject();
	void InteractUp();
	void InteractDown();
	void InitMobileControlsWidget();
	void InitHUDWidgets();
	void IgnoreMoveInputForDuration(float Duration);
	void HeadbuttUp();
	void Headbutt();
	void GoatBaaUp();
	void GoatBaaDown();
	class FString GetRadarWidgetVisibilityDebugString(const struct FGameplayTag& FilterTag);
	struct FInputAxisKeyMapping GetPrimaryKeyMappingForAxis(class FName ActionMapping, float Scale, enum class EKeyMappingInputMode InputMode);
	struct FInputActionKeyMapping GetPrimaryKeyMappingForAction(class FName ActionMapping, enum class EKeyMappingInputMode InputMode);
	void GetPlayerViewPointAndRot(struct FVector* Location, struct FRotator* Rotation);
	float GetPawnVelocity();
	struct FVector2D GetLookingAtDirections();
	int32 GetLocalPlayerID();
	class UGGInventory* GetInventory();
	class UGGHUDUserWidgetBase* GetHUDWidgetInstanceCast(TSubclassOf<class UGGHUDUserWidgetBase> WidgetClass, enum class ECastResult* Result);
	class AGGPlayerState* GetGGPlayerState();
	class UGGLocalPlayer* GetGGLocalPlayer();
	bool GetForceSprint();
	struct FVector GetForcedMovementInput();
	TArray<class UGGCustomCheatManager_Base*> GetCustomCheatManagers();
	class UGGCustomCheatManager* GetCustomCheatManager_Vanilla();
	enum class EKeyMappingInputMode GetCurrentKeyMappingInputMode();
	class AGGGoat* GetControlledGoat();
	class UUserWidget* GetActiveMenuWidgetCast(TSubclassOf<class UUserWidget> WidgetClass, enum class ECastResult* Result);
	float GetAccurateServerTimeDelta();
	float GetAccurateServerTime();
	void GameMenu();
	void DispatchNotificationToClient(const struct FNotification& Notification);
	void Decline();
	bool CreateTutorialWithTutorialObject(struct FDataTableRowHandle& TutorialRowHandle, class UObject* TutorialObject, class AGGTutorial** OutCreatedTutorial);
	bool CreateTutorial(struct FDataTableRowHandle& TutorialRowHandle, class AGGTutorial** OutCreatedTutorial);
	void ClientUnlockAchievements(TArray<class FString>& AchievementIDs);
	void ClientTriggerInstinct(const struct FGameplayTag& InstinctTag);
	void ClientSpendTokens(int32 TokenAmount, enum class EResourceSpendType SpendType, const class FString& SpendActionID, const class FString& SpendSourceID);
	void ClientResetObjectControl(const struct FViewTargetTransitionParams& ViewTransition);
	void ClientReportServerTime(float RequestWorldTime, float TheServerTime);
	void ClientRemoveNotification(const struct FGameplayTag& Tag, const class FString& ID, const struct FGameplayTag& ContentTag, enum class ENotificationCommand Command);
	void ClientOnQuestDiscoveredNotificationCreated(float SplashDuration);
	void ClientNotifyPropFound(bool bFullScreenSplash, class AGGGoat* HiddenGoat, class FText& PropName);
	void ClientHideGameTimer();
	void ClientHideGameHUD();
	void ClientCreateNotification(const struct FNotification& Notification, const struct FMenuNavigationContext& MenuContext);
	void ClientBroadcastHijack(class AGGVehicle* HijackedVehicle, class FText& PreviousName);
	void ClientAcquireTokens(int32 TokenAmount, enum class EResourceAcquisitionType AcquisitionType, const class FString& AcquisitionActionID, const class FString& AcquisitionSourceID);
	void ChatEnter();
	void Chat(const class FString& Msg);
	void CharacterStopJumping();
	void CharacterStopDiving();
	void CharacterJump();
	void CharacterDive();
	bool CanUseChat();
	void BP_ClientTriggerInstinct(const struct FGameplayTag& InstinctTag);
	void BP_ClientRemoveNotification(const struct FGameplayTag& Tag, const class FString& ID, const struct FGameplayTag& ContentTag, enum class ENotificationCommand Command);
	void BP_ClientCreateNotification(const struct FNotification& Notification, const struct FMenuNavigationContext& MenuContext);
	bool ActivateTutorial(struct FDataTableRowHandle& TutorialRowHandle);
	void AchievementsMenu();
	void Accept();
	void AbilityUp();
	void AbilityDown();
};

// 0x8 (0xB8 - 0xB0)
// Class Goat2.GGCustomCheatManager_Base
class UGGCustomCheatManager_Base : public UActorComponent
{
public:
	class AGGPlayerController*                   OwningController;                                  // 0xB0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGGCustomCheatManager_Base* GetDefaultObj();

};

// 0x148 (0x200 - 0xB8)
// Class Goat2.GGCustomCheatManager
class UGGCustomCheatManager : public UGGCustomCheatManager_Base
{
public:
	class FString                                GoatBugitLocation;                                 // 0xB8(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AGGVehicle>              ConsoleVehicleClass;                               // 0xC8(0x28)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AGGVehicle>              ConsoleBikeClass;                                  // 0xF0(0x28)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AGGStatusEffectSlippery_Greasy> GreasyStatusClass;                                 // 0x118(0x28)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftClassPtr<class AGGVehicle>>      ConsoleVehicleArray;                               // 0x140(0x10)(ZeroConstructor, Config, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftClassPtr<class AGGNPC>>          NPCClasses;                                        // 0x150(0x10)(ZeroConstructor, Config, UObjectWrapper, NativeAccessSpecifierPublic)
	class FString                                StoredDestroyClassContaining;                      // 0x160(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                StoredDestroyActorsWithComponent;                  // 0x170(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A2B[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bInCursorMode;                                     // 0x198(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasBoundMouseDown;                                // 0x199(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A2C[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               HitLoc;                                            // 0x19C(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class AActor>                 SelectedActor;                                     // 0x1A8(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A2D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        ProfilingCameras;                                  // 0x1D8(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A2E[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGCustomCheatManager* GetDefaultObj();

	void UnlockStretchGoals(int32 Amount);
	void UnlockMiniGame(const class FString& MiniGameDataAssetName);
	void UnlockGoatGear(const class FString& GearID);
	void UnlockAllVanillaTestGoatGear();
	void UnlockAllVanillaGoatGear();
	void UnlockAllTestGoatGear();
	void UnlockAllMiniGames();
	void UnlockAllInstinctPacks();
	void UnlockAllGoatGear();
	void UnlockAchievementForAll(const class FString& AchievementID);
	void UnlockAchievement(const class FString& AchievementID);
	void UnEquipGoatGear(const class FString& GearID);
	void TurnOnSun();
	void TurnOffSun();
	void TravelTo_Island();
	void TravelTo_ClosedRoom();
	void TravelTo_Boss();
	void TravelTo_BasicGoat();
	void ToggleLocomotionDebug();
	void ToggleGoatNavInvoker();
	void ToggleDebugLanguage();
	void TestRPCBug(int32 TestMode);
	void TeleportToMicroEventActor(int32 Index);
	void StartPSOSequence();
	void StartMobileProfileLocal(const class FString& Area, int32 NumFrames, int32 WarmUp, int32 StartProfilingIn);
	void StartMobileProfile(int32 NumFrames, int32 InitialWarmUp, int32 WarmUp);
	void StartMiniGame(const class FString& MiniGameDataAssetName);
	void SpreadStatusToSelf(int32 Status);
	void SpreadStatusToSelected(int32 Status);
	void SpreadStatus(float Radius, int32 Status);
	void SplitScreenStop();
	void SplitScreenAddPlayer();
	void SpendTokens(int32 Amount);
	void SpawnNPC(const class FString& NPCName);
	void SpawnCars(int32 Index);
	void SpawnCar();
	void SpawnBike();
	void ShowHUDGG();
	void SetToggleSprint(bool bShouldUseToggle);
	void SetSelectedScale(float Scale);
	void SetMood(float Radius, const class FString& Mood);
	void SetGFurVisibility(bool bNewVisibility);
	void SetFlippedSprint(bool bShouldUseFlipped);
	void SetDeviceProfile(const class FString& DeviceProfileName);
	void SetAllPActorsNetDormant();
	void SetAllPActorsNetAwake();
	void ServerTestRPCBug(class AGGGoat* CalledFromGoat, int32 TestMode);
	void ServerStopMiniGame(class AGGPlayerController* CalledFromController, const class FString& GameOutcome);
	void ServerStartMiniGame(class AGGPlayerController* CalledFromController, const class FString& MiniGameDataAssetName, bool bForceStart);
	void ServerSpawnCars(class APawn* CalledFromPawn, int32 Index);
	void ServerSpawnCar(class AGGGoat* CalledFromGoat);
	void ServerSpawnBike(class AGGGoat* CalledFromGoat);
	void ServerSetMood(float Radius, const class FString& Mood);
	void ServerPoolCivilians(class APawn* CalledFromPawn);
	void ServerLevelTeleport(class APawn* CalledFromPawn, int32 Index);
	void ServerGoatGodMode(class APawn* CalledFromPawn);
	void ServerDestroyStaticMeshes();
	void ServerDestroyClassContaining(const class FString& ClassType);
	void ServerDestroyActorsWithComponent(const class FString& ClassType);
	void ServerCompleteQuest(class APlayerController* PC, const class FString& QuestID);
	void ServerCompleteAllQuests(class APlayerController* PC, bool bInstant);
	void ServerClearGear(class APawn* CalledFromPawn);
	void ServerAreaDamage(class APawn* CalledFromPawn, float Range, float Power);
	void SendPSOFile();
	void SelectiveCheatsTick(float DeltaTime);
	void RespawnPlayer();
	void ResetWorldSave();
	void ResetQuest(const class FString& QuestID);
	void ResetPlayerQuestProgress();
	void ResetPlayerColor();
	void ResetIgnoreInput();
	void ResetGoatProgression();
	void RequestQuickCommandsMenu();
	void RequestEventDebugMenu();
	void ReportQuestStep(const class FString& QuestID, const class FString& StepID, bool Complete);
	void ReportQuestProgress(const class FString& QuestID, int32 Progress);
	void RemoveTutorials();
	void RemoveLoadingScreen();
	void RebuildAllNavMesh();
	void PrintStringTableEntry(const class FString& TableId, const class FString& TableKey);
	void PrintCompletedEvents();
	void PrintChaos();
	void PrintAllCCDComps();
	void PoolCivilians();
	void OnLoadingScreenRemoved();
	void NextProfileCamera();
	void LogInputBindings();
	void LogCrashReporterGameData();
	void ListAllMicroEventActors();
	void ListAllActiveWidgets();
	void LevelTeleport(class APawn* CalledFromPawn, int32 Index);
	void LeftMouseDown();
	void ImportProgression();
	void GoatGodMode();
	void GoatBugit(const class FString& Desc);
	void GGOnline_StartLevelOffline();
	void GGOnline_SetMultiplayerLocked(bool bNewLocked);
	void GGOnline_SendChatMessage(const class FString& Message);
	void GGOnline_SearchForLobbiesWithJoinCode(const class FString& JoinCode);
	void GGOnline_SearchForLobbies();
	void GGOnline_RejectAllLobbyInvites();
	void GGOnline_ReadFriendList();
	void GGOnline_QueryReceipts();
	void GGOnline_QueryAchievements();
	void GGOnline_PrintJoinCode();
	void GGOnline_NewLobby();
	void GGOnline_MakeWorldListen();
	void GGOnline_LogoutAndForget();
	void GGOnline_Logout();
	void GGOnline_LoginAndConnectAccount();
	void GGOnline_LobbyStartLevel();
	void GGOnline_LeaveLobby();
	void GGOnline_JoinLobbySearchResult();
	void GGOnline_JoinLobbyJoinCode(const class FString& JoinCode);
	void GGOnline_JoinLobby(const class FString& LobbyId);
	void GGOnline_DeveloperLoginCustom(const class FString& CredentialsName);
	void GGOnline_DeveloperLogin_Test2();
	void GGOnline_DeveloperLogin_Test1();
	void GGOnline_BrowseURL(const class FString& URL);
	void GGOnline_AddDummyLobby(bool bOwner);
	void GGOnline_AddDummyFriends(int32 Amount);
	void ForceStopMinigame(const class FString& GameOutcome);
	void ForceStartMiniGame(const class FString& MiniGameDataAssetName);
	void ForceNonPrimaryPlayerMinigameAccept();
	void FlushSave();
	void FixSettingsSaveFiles();
	class UGGPlayerGameDataAsset* FindPlayerGameDataAsset(const class FString& DataAssetName);
	void FindDuplicateQuestIDs();
	void ExportProgression();
	void EquipNPCTestAltGoat();
	void EquipGoatGear(const class FString& GearID);
	void DumpAllNetActiveObjects();
	void DumpActiveGPUParticles();
	void DLC_Unlock_PreUdder();
	void DLC_Unlock_MajorUpdate1();
	void DLC_Unlock_DigitalDowngrade();
	void DLC_QueryReceipts();
	void DisableStaticMeshPostLoad();
	void DestroyStaticMeshes();
	void DestroySelectedActor();
	void DestroyClassContaining(const class FString& ClassType);
	void DestroyActorsWithComponent(const class FString& ClassType);
	void DebugEvent(const class FString& EventID);
	void CrashGame();
	void CompleteQuest(const class FString& QuestID);
	void CompleteAllQuests(bool bInstant);
	void ClearStatusEffect();
	void ClearMiniGameSaveData();
	void ClearGear();
	void CG();
	void C();
	void AreaDamage(float Range, float Power);
	void AddTokens(int32 Amount);
	void AddChaos(int32 Amount);
};

// 0x18 (0xC8 - 0xB0)
// Class Goat2.GGCustomGravityComponent
class UGGCustomGravityComponent : public UActorComponent
{
public:
	float                                        GravityForce;                                      // 0xB0(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxVelocityZ;                                      // 0xB4(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GravityMultiplier;                                 // 0xB8(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A40[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGCustomGravityComponent* GetDefaultObj();

	void SetMaxVelocityZ(float NewValue);
	void SetGravityMultiplier(float NewValue);
	void SetGravityForce(float NewValue);
	void EnableCustomGravity(float Duration, float Gravity, float MaxVelocityFromGravity);
	void DisableCustomGravity();
	void AddGravityMultiplier(float NewValue);
	class UGGCustomGravityComponent* AddCustomGravityComponent(class AActor* Owner, float Gravity, float MaxVelocityFromGravity, bool bStartEnabled, float Duration, float Multiplier);
};

// 0x1E8 (0x4F0 - 0x308)
// Class Goat2.GGMenuUserWidget
class UGGMenuUserWidget : public UGGUserWidget
{
public:
	class UGGActionHintBarUserWidget*            ActionHintBarWidget;                               // 0x308(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      ExitAnimation;                                     // 0x310(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMenuTabChanged;                                  // 0x318(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnExitChildMenu;                                   // 0x328(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UCanvasPanel*                          TabContainer;                                      // 0x338(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          MenuID;                                            // 0x340(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          DefaultTab;                                        // 0x348(0x8)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          StoreTab;                                          // 0x350(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bReturnShouldCloseMenu;                            // 0x358(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBlockMenuExiting;                                 // 0x359(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLimitOneChildMenu;                                // 0x35A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A6B[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FActionHintStruct>             DefaultActionHints;                                // 0x360(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FActionHintStruct>             ActiveActionHints;                                 // 0x370(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                  ActionMappingToListenFor;                          // 0x380(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NavigateTabLeftMapping;                            // 0x388(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NavigateTabRightMapping;                           // 0x390(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          AdditionalMappings;                                // 0x398(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UGGMenuDataAsset*>              MenuData;                                          // 0x3A8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UGGMenuUserWidget*>             ActiveWidgets;                                     // 0x3B8(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UGGUserWidget*>                 AdditionalWidgets;                                 // 0x3C8(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UGGMenuDataAsset*                      CurrentMenuDataAsset;                              // 0x3D8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGMenuUserWidget*                     CurrentTab;                                        // 0x3E0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                               InitialWidgetToFocus;                              // 0x3E8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                               CachedWidgetToFocus;                               // 0x3F0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A6C[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnMenuEnteredDelegate;                             // 0x408(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMenuExitedDelegate;                              // 0x418(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A6D[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGMenuUserWidget*                     OwningMenu;                                        // 0x458(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A6E[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FGameplayTag, class UUserWidget*> CurrentLoadingPlaceholders;                        // 0x488(0x50)(ExportObject, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A6F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FDLCMenuReplacementData>       DLCMenuReplacementData;                            // 0x4E0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGGMenuUserWidget* GetDefaultObj();

	void UpdateActionHints();
	class UGGUserWidget* SpawnAdditionalWidget(TSoftClassPtr<class UGGUserWidget> WidgetClass, bool bAddToScreen, class UGGUserWidget* FromWidget, class UPanelWidget* ParentWidget);
	bool ShouldDisplayActionHint(const struct FActionHintStruct& Hint);
	void SetBlockMenuExiting(bool bBlockEnabled);
	bool ResetLastFocus();
	bool RequestTabNavigation(const struct FGameplayTag& InTag, const struct FMenuNavigationContext& Context);
	void ReplaceAllDLCMenus();
	bool RemoveAdditionalWidget(class UGGUserWidget* Widget);
	class UGGUserWidget* RegisterAdditionalWidget(class UGGUserWidget* Widget);
	void OnUpdateActionHints();
	bool OnTabNavigation(const struct FGameplayTag& InTag, const struct FMenuNavigationContext& Context);
	void OnTabChangedBlueprint(const struct FGameplayTag& InTag);
	void OnSplitscreenUpdate();
	void OnSplitscreenPlayerUpdated();
	bool OnRequestingTabNavigation(const struct FGameplayTag& InTag, const struct FMenuNavigationContext& Context);
	void OnMenuExited(const struct FGameplayTag& InTag, const struct FMenuNavigationContext& Context);
	void OnMenuEntered(const struct FGameplayTag& InTag, const struct FMenuNavigationContext& Context);
	void OnMenuDataReplaced(class UGGMenuDataAsset* MenuToBeRemoved, class UGGMenuDataAsset* MenuToBeAdded);
	void OnGamepadChanged(bool bGamepadActive);
	void OnAdditionalWidgetSpawned(class UGGUserWidget* SpawnedWidget);
	void OnAdditionalWidgetRemoved(class UGGUserWidget* RemovedWidget);
	bool OnActionMappingPressed(class FName ActionName);
	bool IsValidActionHint(struct FActionHintStruct& Hint);
	bool IsMenuClosing();
	bool IsEnabledActionHint(const struct FActionHintStruct& Hint);
	bool IsContextAssetValidForMenu(const struct FMenuNavigationContext& Context);
	bool HasUnhandledContext();
	class UGGUserWidget* GetWidgetWithID(const struct FGameplayTag& ID);
	class UGGMenuUserWidget* GetOwningMenu();
	struct FGameplayTag GetLastMenuRequest();
	struct FGameplayTag GetCurrentMenuID();
	struct FMenuNavigationContext GetCurrentContext();
	void GetActionHints(TArray<struct FActionHintStruct>* OutHints);
	void FinishedLoading(const struct FGameplayTag& InTag);
	bool ExitCurrentMenu();
	bool CloseMenu();
	void BeganLoading(const struct FGameplayTag& InTag);
	void ActionMappingPressed();
};

// 0x10 (0x500 - 0x4F0)
// Class Goat2.GGMenuTabUserWidget
class UGGMenuTabUserWidget : public UGGMenuUserWidget
{
public:
	TArray<class FName>                          ActionMappingsToListenFor;                         // 0x4F0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGMenuTabUserWidget* GetDefaultObj();

	void ShowGameCenterAccessPoint();
	void HideGameCenterAccessPoint();
};

// 0x80 (0x580 - 0x500)
// Class Goat2.GGCustomizationTabUserWidget
class UGGCustomizationTabUserWidget : public UGGMenuTabUserWidget
{
public:
	uint8                                        Pad_1A88[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class UGGUserWidget>           StyleChoiceWidgetClass;                            // 0x508(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBoughtGearShouldBeRemovedImmediately;             // 0x530(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEquipGearImmediatelyAfterBuying;                  // 0x531(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRightClickUnequipsGearInList;                     // 0x532(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUnequipOnLeftClick;                               // 0x533(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StyleSelectGracePeriod;                            // 0x534(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                          ContentPanel;                                      // 0x538(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGGoatGearInfoDataAsset*              SelectedGearDataAsset;                             // 0x540(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGearSlot                         SelectedGearSlot;                                  // 0x548(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A89[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGGoat*                               OwningGoat;                                        // 0x558(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGGoatGearManager*                    GearManager;                                       // 0x560(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGGoatGearPreviewManager*             GearPreviewManager;                                // 0x568(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A8A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGGoatGearInfoDataAsset*              PreUdderGearRef;                                   // 0x578(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGGCustomizationTabUserWidget* GetDefaultObj();

	bool UnequipPreviewGear(enum class EGearSlot GearSlot);
	bool UnequipAllPreviewGear();
	bool UncommitPreviewGearSlot(enum class EGearSlot GearSlot, bool bRemovePreview);
	void ToggleGearAsFavorite(class UGGGoatGearInfoDataAsset* DataAsset, bool* bOutNewFavorite);
	void SetStoreMode();
	void SetOverviewMode();
	void SetGearAsFavorite(class UGGGoatGearInfoDataAsset* DataAsset, bool bFavorite);
	void SetFeaturedMode();
	void SetCustomizationMode();
	void SetAbilityEnabledForCommitedSlot(enum class EGearSlot GearSlot, bool bAbilityEnabled);
	void RevertPreviewToLastCommited(enum class EGearSlot GearSlot);
	enum class EEquipResult PerformGearAction(class UGGGoatGearInfoDataAsset* DataAsset, class UGGGearItemButtonUserWidget* GearWidget);
	void OnUncommitedPreviewGearSlot(enum class EGearSlot InSlot);
	void OnSetStoreMode();
	void OnSetOverviewMode();
	void OnSetFeaturedMode();
	void OnSetCustomizationMode();
	void OnOwningGoatRespawned(class AGGCharacter* OldCharacter, class AGGCharacter* NewCharacter);
	void OnGearWasUpdated(class AGGGoat* Goat, TArray<class USceneComponent*>& CurrentGoatGear);
	void OnGearUnequipped(class AGGGoat* Goat, TArray<TSubclassOf<class USceneComponent>>& GearUnequipped);
	void OnGearEquipped(class AGGGoat* Goat, TArray<TSubclassOf<class USceneComponent>>& GearEquipped);
	bool IsInStoreMode();
	bool IsGearSlotTabAvailable(enum class EGearSlot InSlot);
	bool IsGearCommited(class UGGGoatGearInfoDataAsset* DataAsset);
	bool IsAbilityEnabledForCommitedGearForSlot(enum class EGearSlot GearSlot);
	bool HasRecentlySpawnedChoiceWidget();
	bool HasRecentlySelectedStyle();
	enum class ECustomizationMode GetCurrentCustomizationMode();
	class UGGGoatGearInfoDataAsset* GetCommitedGearForSlot(enum class EGearSlot GearSlot);
	bool EquipPreviewGear(class UGGGoatGearInfoDataAsset* DataAsset, bool bEquip, class UGGGoatGearStyleDataAsset* StyleAsset);
	void CreateStyleChoiceWidget(class UGGGoatGearInfoDataAsset* DataAsset, class UGGUserWidget* FromWidget);
	enum class EEquipResult CommitPreviewGear(class UGGGoatGearInfoDataAsset* DataAsset, bool bGiveAbility, bool bPreview, bool bWasUnlocked);
	bool CanGearBePreviewed(class UGGGoatGearInfoDataAsset* DataAsset);
	enum class EEquipResult BuyGear(class UGGGoatGearInfoDataAsset* DataAsset, bool bShouldPreview);
};

// 0x8 (0x48 - 0x40)
// Class Goat2.GGDamageType_Base
class UGGDamageType_Base : public UDamageType
{
public:
	enum class ETypeOfDamage                     TypeOfDamage;                                      // 0x40(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A8B[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGDamageType_Base* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class Goat2.GGDamageType_Goat
class UGGDamageType_Goat : public UGGDamageType_Base
{
public:

	static class UClass* StaticClass();
	static class UGGDamageType_Goat* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class Goat2.GGDamageType_NPC
class UGGDamageType_NPC : public UGGDamageType_Base
{
public:

	static class UClass* StaticClass();
	static class UGGDamageType_NPC* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class Goat2.GGDamageType_PhysActor
class UGGDamageType_PhysActor : public UGGDamageType_Base
{
public:

	static class UClass* StaticClass();
	static class UGGDamageType_PhysActor* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class Goat2.GGDamageType_Vehicle
class UGGDamageType_Vehicle : public UGGDamageType_Base
{
public:

	static class UClass* StaticClass();
	static class UGGDamageType_Vehicle* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class Goat2.GGDamageType_Explosion
class UGGDamageType_Explosion : public UGGDamageType_Base
{
public:

	static class UClass* StaticClass();
	static class UGGDamageType_Explosion* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class Goat2.GGDamageType_Burning
class UGGDamageType_Burning : public UGGDamageType_Base
{
public:

	static class UClass* StaticClass();
	static class UGGDamageType_Burning* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class Goat2.GGDamageType_Electric
class UGGDamageType_Electric : public UGGDamageType_Base
{
public:

	static class UClass* StaticClass();
	static class UGGDamageType_Electric* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class Goat2.GGDamageType_GoatTackle
class UGGDamageType_GoatTackle : public UGGDamageType_Base
{
public:

	static class UClass* StaticClass();
	static class UGGDamageType_GoatTackle* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class Goat2.GGDamageType_AttachedActor
class UGGDamageType_AttachedActor : public UGGDamageType_Base
{
public:

	static class UClass* StaticClass();
	static class UGGDamageType_AttachedActor* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class Goat2.GGDamageType_GoatGear
class UGGDamageType_GoatGear : public UGGDamageType_Base
{
public:

	static class UClass* StaticClass();
	static class UGGDamageType_GoatGear* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class Goat2.GGDamageType_Impact
class UGGDamageType_Impact : public UGGDamageType_Base
{
public:

	static class UClass* StaticClass();
	static class UGGDamageType_Impact* GetDefaultObj();

};

// 0x0 (0x12F0 - 0x12F0)
// Class Goat2.GGDemoNetDriver
class UGGDemoNetDriver : public UDemoNetDriver
{
public:

	static class UClass* StaticClass();
	static class UGGDemoNetDriver* GetDefaultObj();

};

// 0x1A8 (0x3E8 - 0x240)
// Class Goat2.GGDestructibleActor
class AGGDestructibleActor : public AStaticMeshActor
{
public:
	uint8                                        Pad_1A9A[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bOverrideDestructibleInfo;                         // 0x258(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A9B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGGDestructibleInfo                   DestructibleInfo;                                  // 0x260(0x70)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A9C[0x78];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGGActorName                          CurrentActorName;                                  // 0x348(0x40)(Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGGNamedActorInfo                     DefaultActorNameInfo;                              // 0x388(0x28)(Protected, NativeAccessSpecifierProtected)
	class UDataTable*                            NameModifierTable;                                 // 0x3B0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bOverrideMeshNameInfo;                             // 0x3B8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A9D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGGNamedActorInfo                     ActorNameInfo;                                     // 0x3C0(0x28)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AGGDestructibleActor* GetDefaultObj();

	void ShatterActor(const struct FVector& Impulse);
	bool SetGoatSimName(class FText& NewName);
	bool RemoveGoatSimNameModifier(const struct FGameplayTag& ModifierTag);
	void OnRep_CurrentActorName();
	void OnHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void OnDestructibleDestroyed();
	void ObjectWasHeadbutted(class AGGGoat* HeadbuttingGoat);
	bool HasShattered();
	bool GetHasActorName();
	class FText GetGoatSimName(bool WithStyling);
	class FText GetFullGoatSimName(bool WithStyling);
	bool CanBeHeadbutted(class AGGGoat* HeadbuttingGoat);
	bool AddGoatSimNameModifier(const struct FGameplayTag& ModifierTag, class FText& OverrideText);
};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGDestructibleInterface
class IGGDestructibleInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IGGDestructibleInterface* GetDefaultObj();

	void OnDestructibleDestroyed();
	bool IsDamageEnoughForDestruction(float Damage, struct FImpulseDamageEvent& DamageEvent);
	struct FGGDestructibleInfo GetDestructibleInfo();
	bool DestroyAsDestructible(const struct FVector& Impulse);
	bool CanBeDestroyedAsDestructible();
};

// 0x0 (0x240 - 0x240)
// Class Goat2.GGDestructibleShard
class AGGDestructibleShard : public AStaticMeshActor
{
public:

	static class UClass* StaticClass();
	static class AGGDestructibleShard* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGDestructibleStatics
class UGGDestructibleStatics : public UObject
{
public:

	static class UClass* StaticClass();
	static class UGGDestructibleStatics* GetDefaultObj();

	void SpawnDestructibleEffects(class AActor* ActorBeingDestroyed, class UStaticMesh* StaticMesh, const struct FTransform& DestructibleTransform, const struct FBoxSphereBounds& DestructibleBounds, const struct FGGDestructibleInfo& DestructibleInfo, const struct FVector& Impulse);
	void DestroyInstancedDestructible(class AActor* ActorBeingDestroyed, class UInstancedStaticMeshComponent* InstancedMeshComponent, const struct FGGDestructibleInfo& DestructibleInfo, const struct FVector& Impulse, int32 InstanceIndex, bool bDestroyActor);
	void DestroyDestructible(class AActor* ActorBeingDestroyed, class UStaticMeshComponent* MeshComponent, const struct FGGDestructibleInfo& DestructibleInfo, const struct FVector& Impulse, bool bDestroyActor);
	bool CanBreakByImpact(const struct FVector& Impulse, const struct FGGDestructibleInfo& DestructibleInfo);
	bool CanBreakByDamage(float DamageAmount, const struct FGGDestructibleInfo& DestructibleInfo, const struct FImpulseDamageEvent& ImpulseDamageEvent, class UObject* ObjectContext);
};

// 0x78 (0xA0 - 0x28)
// Class Goat2.GGDestructibleUserData
class UGGDestructibleUserData : public UAssetUserData
{
public:
	bool                                         bShouldForceSpawnDestructible;                     // 0x28(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AB2[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGGDestructibleInfo                   DestructibleInfo;                                  // 0x30(0x70)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGDestructibleUserData* GetDefaultObj();

};

// 0x68 (0x98 - 0x30)
// Class Goat2.GGDialogueDataAsset
class UGGDialogueDataAsset : public UDataAsset
{
public:
	TSubclassOf<class UGGDialogueInstance>       InstanceClass;                                     // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGGDialogueLine>               DialogueLines;                                     // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGGDialogueBranch>             OtherBranches;                                     // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bStartDialogueAutomaticallyOnApproach;             // 0x58(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1ABD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DistanceToStartTheDialogue;                        // 0x5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpeechBubbleCullDistance;                          // 0x60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1ABE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  CustomCharacterName;                               // 0x68(0x18)(Edit, NativeAccessSpecifierPublic)
	bool                                         bUseCustomName;                                    // 0x80(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1ABF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGGHideDialogueSettings               HideDialogueSettings;                              // 0x84(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AC0[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGDialogueDataAsset* GetDefaultObj();

	void ResetDialogueTag();
	bool IsValidLineIndex(const struct FGGDialogueLineIndex& InIndex);
	bool IsDialogueHidden();
	struct FGameplayTag GetTagForDialogue();
	TArray<struct FGGDialogueLine> GetDialogueLinesForBranch(int32 BranchIndex);
	struct FGGDialogueLine GetDialogueLineForIndex(const struct FGGDialogueLineIndex& InIndex);
	bool DoesFactSatisfiesEquation(struct FGameplayTag& Fact, enum class EGGEquation Equation, float ComparisionValue);
};

// 0xA8 (0xD0 - 0x28)
// Class Goat2.GGDialogueInstance
class UGGDialogueInstance : public UObject
{
public:
	uint8                                        Pad_1ACD[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnDialogueStarted;                                 // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDialogueLineStart;                               // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDialogueLineEnd;                                 // 0x50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDialogueRestarted;                               // 0x60(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDialogueCanceled;                                // 0x70(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDialogueEnded;                                   // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UGGDialogueDataAsset*                  DataAsset;                                         // 0x90(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGGDialogueLineIndex                  CurrentLine;                                       // 0x98(0x8)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGGDialogueLineIndex                  CurrentLineRep;                                    // 0xA0(0x8)(Net, Transient, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGGDialogueLineIndex                  PreviousLine;                                      // 0xA8(0x8)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1ACE[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGPlayerController*                   InteractingPlayer;                                 // 0xC8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGGDialogueInstance* GetDefaultObj();

	void UpdateHiddenState(struct FGameplayTag& InFact, float InValue);
	void Tick_K2(float DeltaTime);
	class UGGDialogueInstance* StartDialogueWith(class AActor* WithActor, class UGGDialogueDataAsset* Dialogue, class AGGPlayerController* InPlayer);
	bool StartDialogue(class AGGPlayerController* InPlayer);
	void RestartDialogue(class AGGPlayerController* InPlayer);
	void OnRep_CurrentLine();
	bool IsValidDialogue();
	bool IsLastDialogueLine(const struct FGGDialogueLineIndex& LineIndex);
	bool IsDialogueHidden();
	bool IsDialogueFinished();
	bool IsDialogueActive();
	bool IsCurrentLinePlaying();
	bool IsActiveDialogueLineLastOne();
	enum class EGGDialogueInteractResponse InteractWithDialogue(class AGGPlayerController* InPlayer);
	struct FGGDialogueLineIndex GetNextLineIndex(const struct FGGDialogueLineIndex& InCurrentLineIndex);
	struct FGGDialogueLine GetNextLine(const struct FGGDialogueLineIndex& InCurrentLineIndex);
	struct FGGDialogueLineIndex GetLineIndex(struct FGGDialogueLine& InLine);
	class FText GetDialogueParticipantsName();
	struct FGGDialogueLine GetDialogueLine(const struct FGGDialogueLineIndex& LineIndex);
	class UGGDialogueDataAsset* GetDataAsset();
	struct FGGDialogueLineIndex GetCurrentDialogueLineIndex();
	struct FGGDialogueLine GetCurrentDialogueLine();
	int32 FindActiveBranch();
	void DialogueStarted();
	void DialogueRestarted();
	void DialogueLineStarted_K2(struct FGGDialogueLine& DialogueLine);
	void DialogueEnded();
	void DialogueCanceled();
	void CancelDialogue(class AGGPlayerController* InPlayer);
	bool CanBeInteractWith(class AGGPlayerController* InPlayer);
	bool CanAdvanceDialogueWithInteraction(class AGGPlayerController* InPlayer, const struct FGGDialogueLineIndex& InCurrentLineIndex, float TimeStampLineStarted);
	bool CanAdvanceDialogue(const struct FGGDialogueLineIndex& InCurrentLineIndex, float TimeStampLineStarted);
	bool AdvanceDialogue(class AGGPlayerController* InPlayer);
};

// 0x70 (0x8E0 - 0x870)
// Class Goat2.GGDiegeticMusicComponent
class UGGDiegeticMusicComponent : public UAudioComponent
{
public:
	uint8                                        Pad_1ACF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnGainedSignificance;                              // 0x878(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnLostSignificance;                                // 0x888(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bAutoPlayOnSignificant;                            // 0x898(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1AD0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AdditionalSignificanceRange;                       // 0x89C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class USoundCue>              MusicCue;                                          // 0x8A0(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundClass*                           SoundClass;                                        // 0x8C8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1AD1[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGDiegeticMusicComponent* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class Goat2.GGDisguiseComponent
class UGGDisguiseComponent : public UActorComponent
{
public:
	struct FGGDisguiseState                      DisguiseState;                                     // 0xB0(0x18)(Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDisguiseRemoved;                                 // 0xC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGDisguiseComponent* GetDefaultObj();

	void ServerRevertDisguise();
	void OnRep_DisguiseActor();
	void OnNPCRagdoll(class ULSCharacterMovementComponent* MovementComp, class ACharacter* RagdollingCharacter, struct FRagdollStateChangeSettings& StateChangeSettings);
	void AbilityDown();
};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGDisguiseLibrary
class UGGDisguiseLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UGGDisguiseLibrary* GetDefaultObj();

	bool RevertDisguise(class AGGCharacter* InCharacter);
	void OnDisguiseNPCPooledOrMoved(class AGGNPC* NPC, bool bWasPooled);
	void OnDisguiseActorDestroyed(class AActor* DestroyedDisguise);
	bool IsActorDisguised(class AActor* InActor);
	class UGGDisguiseComponent* DisguiseCharacterAsPActor(class AGGCharacter* InCharacter, class AGGPhysicsActor_Base* AsActor, struct FGGDisguiseAsPactorParams& Params);
	class UGGDisguiseComponent* DisguiseCharacterAsNPC(class AGGCharacter* InCharacter, class AGGNPC* InNPC, const struct FGameplayTag& EffectSourceTag, struct FGGDisguiseAsNPCParams& Params);
};

// 0x10 (0x270 - 0x260)
// Class Goat2.GGDistanceTextWidget
class UGGDistanceTextWidget : public UUserWidget
{
public:
	class FString                                CurrentDistanceString;                             // 0x260(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGDistanceTextWidget* GetDefaultObj();

};

// 0x70 (0xA0 - 0x30)
// Class Goat2.GGDLCDataAsset
class UGGDLCDataAsset : public UDataAsset
{
public:
	enum class EGoatDLC                          DLC;                                               // 0x30(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowUnlockPopup;                                  // 0x31(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1ADA[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  WidgetTitle;                                       // 0x38(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  WidgetBody;                                        // 0x50(0x18)(Edit, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>             WidgetImage;                                       // 0x68(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UGGGoatGearInfoDataAsset*>      GearsToUnlock;                                     // 0x90(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGDLCDataAsset* GetDefaultObj();

};

// 0x20 (0x48 - 0x28)
// Class Goat2.DLCOwnershipSaveGame
class UDLCOwnershipSaveGame : public USaveGame
{
public:
	class FString                                HardwareHash;                                      // 0x28(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<enum class EGoatDLC>                  OwnedDLCs;                                         // 0x38(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UDLCOwnershipSaveGame* GetDefaultObj();

};

// 0xD0 (0x108 - 0x38)
// Class Goat2.GGDLCSettings
class UGGDLCSettings : public UDeveloperSettings
{
public:
	TMap<class FName, struct FDLCSettingEntry>   Entries;                                           // 0x38(0x50)(Edit, Config, NativeAccessSpecifierPublic)
	TArray<struct FDLCAssetLink>                 DLCDataAssets;                                     // 0x88(0x10)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	class FString                                OST_QRCode_URL;                                    // 0x98(0x10)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FDLCLevelData>                 LevelData;                                         // 0xA8(0x10)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TMap<class FName, class FString>             UpdateNotificationExternalData;                    // 0xB8(0x50)(Edit, Config, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGDLCSettings* GetDefaultObj();

};

// 0x130 (0x158 - 0x28)
// Class Goat2.GGDLCHandler
class UGGDLCHandler : public UObject
{
public:
	class UGGLocalPlayer*                        OwnerLocalPlayer;                                  // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            OnDLCsUpdated;                                     // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1ADE[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDLCOwnershipSaveGame*                 EOSDLCOwnershipSaveGame;                           // 0x48(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1ADF[0x68];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EGoatDLC, class UGGDLCDataAsset*> CachedAssets;                                      // 0xB8(0x50)(Protected, NativeAccessSpecifierProtected)
	struct FDLCLevelData                         CurrentDLCLevelData;                               // 0x108(0x50)(Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGGDLCHandler* GetDefaultObj();

	void SetCurrentDLCLevelData(const struct FDLCLevelData& DLCLevelData);
	void PostLoadMapWithWorld(class UWorld* World);
	void OnIntroSplashComplete();
	bool IsDLCAvailable(enum class EGoatDLC DLC);
	TArray<enum class EGoatDLC> GetOwnedDLCs();
	struct FDLCLevelData GetDLCLevelDataFromID(const class FString& LevelDataID);
	TArray<struct FDLCLevelData> GetDLCLevelData();
	class UGGDLCHandler* GetDLCHandler(class UObject* WorldContext);
	struct FDLCLevelData GetCurrentDLCLevelData();
	void DLCPopupResponse(const class FString& ID, class UObject* Object, const class FString& ButtonID, enum class EPopupResponse Response);
};

// 0x100 (0x1B0 - 0xB0)
// Class Goat2.GGDynamicAssetHoldingComponent
class UGGDynamicAssetHoldingComponent : public UActorComponent
{
public:
	class USceneComponent*                       LocationSceneComponent;                            // 0xB0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldHandleSignificance;                         // 0xB8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLoadOnSignificance;                               // 0xB9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AE1[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SignificanceDistance;                              // 0xBC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, TSoftObjectPtr<class UObject>> AssetsMap;                                         // 0xC0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<class FString, class UObject*>          Assets;                                            // 0x110(0x50)(Edit, DisableEditOnTemplate, EditConst, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDynamicLoadingFinished;                          // 0x160(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGainedSignificance;                              // 0x170(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnLostSignificance;                                // 0x180(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AE2[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               CachedLocation;                                    // 0x1A0(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsLoaded;                                         // 0x1AC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1AE3[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGDynamicAssetHoldingComponent* GetDefaultObj();

	void UnloadAssets();
	void StartLoadingAssets();
	void LostSignificance();
	float GetSignificanceRange();
	struct FVector GetSignificanceLocation();
	TArray<class UObject*> GetLoadedAssets();
	class UObject* GetLoadedAsset(TSubclassOf<class UObject> AssetClass, const class FString& Key);
	bool GetIsLoaded();
	void GainedSignificance();
};

// 0x38 (0x68 - 0x30)
// Class Goat2.GGEaseFloatBase
class UGGEaseFloatBase : public UBlueprintAsyncActionBase
{
public:
	uint8                                        Pad_1AE6[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnUpdate;                                          // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCompletion;                                      // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UObject>                WorldContextObject;                                // 0x58(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1AE7[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGEaseFloatBase* GetDefaultObj();

	bool DestroyNamedActions(class UObject* ActionOwner, class FName ActionName);
	bool DestroyAllActions(class UObject* ActionOwner);
};

// 0x10 (0x78 - 0x68)
// Class Goat2.GGEaseFloatCurve
class UGGEaseFloatCurve : public UGGEaseFloatBase
{
public:
	class UCurveFloat*                           CurveAsset;                                        // 0x68(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1AEA[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGEaseFloatCurve* GetDefaultObj();

	class UGGEaseFloatCurve* CreateAction(class UObject* WorldContext, class FName ActionName, float Time, class UCurveFloat* CurveAsset);
};

// 0x10 (0x78 - 0x68)
// Class Goat2.GGEaseFloatFunction
class UGGEaseFloatFunction : public UGGEaseFloatBase
{
public:
	uint8                                        Pad_1AEC[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGEaseFloatFunction* GetDefaultObj();

	class UGGEaseFloatFunction* CreateAction(class UObject* WorldContext, class FName ActionName, float Time, float From, float To, enum class EEasingFunc EasingFunc);
};

// 0x5D8 (0x808 - 0x230)
// Class Goat2.GGPhysicsActor_Base
class AGGPhysicsActor_Base : public AActor
{
public:
	uint8                                        Pad_1B21[0x80];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UMeshComponent*                        MeshComp;                                          // 0x2B0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGGWaterFloatingComponent*             FloatingComp;                                      // 0x2B8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         DebugPrint;                                        // 0x2C0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B22[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            InitialTransform;                                  // 0x2D0(0x30)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class AActor>>         PhysSimStartIgnoredActors;                         // 0x300(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B23[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bDefaultToSimulatingPhysics;                       // 0x318(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStartSimulationOnHit;                             // 0x319(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStartSimOnHitWithVehicle;                         // 0x31A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B26[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLatestInstigator                     LatestInstigator;                                  // 0x320(0x18)(Net, NoDestructor, NativeAccessSpecifierPrivate)
	FMulticastInlineDelegateProperty_            OnPhysicsActorPreScaled;                           // 0x338(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            OnVehicleCatched;                                  // 0x348(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            OnVehicleReleased;                                 // 0x358(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            ForceReleaseCatchedActors;                         // 0x368(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class AActor*                                OurCatcher;                                        // 0x378(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FBoxSphereBounds                      InitialScaledBounds;                               // 0x380(0x1C)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B28[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bShowScaledBoundsDebug;                            // 0x39D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B29[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        IgnoredByNavMeshSize;                              // 0x3A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OnHitDamageVelocityThreshold;                      // 0x3A4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanBeHeadbutted;                                  // 0x3A8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B2A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Health;                                            // 0x3AC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         SpawnStatusEffectWhenDamaged;                      // 0x3B0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B2B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SpawnStatusAtHealth;                               // 0x3B4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EStatusEffectTypes                StatusEffectToSpawn;                               // 0x3B8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         OnlySpawnOnce;                                     // 0x3B9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanDamageOnHit;                                   // 0x3BA(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B2D[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HitDamage;                                         // 0x3BC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CharacterImpulsePower;                             // 0x3C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinImpactSizeForCharDamage;                        // 0x3C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinImpactSizeForGoatDamage;                        // 0x3C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinImpactSizeForVehicleDamage;                     // 0x3CC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleDamage;                                     // 0x3D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B2E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AGGCharacter*>                  GrabbedBy;                                         // 0x3D8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bCanBeGrabbed;                                     // 0x3E8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B2F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                AttachedToActor;                                   // 0x3F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsAttachedToSomething;                             // 0x3F8(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShouldDetach;                                      // 0x3F9(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bOverrideImpactEffectMeshSettings;                 // 0x3FA(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B30[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPhysicsActorImpactSettings           ActorImpactEffectSettings;                         // 0x400(0xC0)(Edit, NativeAccessSpecifierPublic)
	struct FPhysicsActorImpactSettings           ImpactEffectSettings;                              // 0x4C0(0xC0)(BlueprintVisible, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              ImpactEffectComp;                                  // 0x580(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int8                                         DesiredColorMaterialIndex;                         // 0x588(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B31[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FMatElement>                   CurrentMatElements;                                // 0x590(0x10)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<struct FMatElement>                   CurrentStatusEffectMaterials;                      // 0x5A0(0x10)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<struct FMatElement>                   OriginalMatsOverride;                              // 0x5B0(0x10)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<struct FMatElement>                   OriginalMats;                                      // 0x5C0(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, Protected, NativeAccessSpecifierProtected)
	bool                                         CanSwitchMat;                                      // 0x5D0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B32[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnMaterialSet;                                     // 0x5D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B33[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGGActorName                          CurrentActorName;                                  // 0x5F0(0x40)(Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGGNamedActorInfo                     DefaultActorNameInfo;                              // 0x630(0x28)(Protected, NativeAccessSpecifierProtected)
	class UDataTable*                            NameModifierTable;                                 // 0x658(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bOverrideMeshNameInfo;                             // 0x660(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B35[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGGNamedActorInfo                     ActorNameInfo;                                     // 0x668(0x28)(Edit, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnObjectHeadbutted;                                // 0x690(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B36[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnActorLicked;                                     // 0x6A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnActorLickDropped;                                // 0x6B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UGGStatusEffectManager*                StatusEffectManager;                               // 0x6C8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B37[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bCanBeOptimized;                                   // 0x6DC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanChangeTickRate;                                // 0x6DD(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDebugResourceLoading;                             // 0x6DE(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B38[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bDefaultToSightVisible;                            // 0x6E0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1B39[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnTakeDamageWithEvent;                             // 0x6E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UAudioComponent*                       ImpactAudioComponent;                              // 0x6F8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B3A[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         PawnCollisionOn;                                   // 0x705(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         CollisionOn;                                       // 0x706(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1B3B[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  CurrentCollisionProfile;                           // 0x708(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class UPrimitiveComponent*, enum class ECollisionEnabled> CachedCollisionStates;                             // 0x710(0x50)(ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TMap<enum class EPactorCulldistanceScaleIdentifier, float> DistanceCullingScaleThresholds;                    // 0x760(0x50)(Edit, EditConst, NativeAccessSpecifierPublic)
	enum class EPactorCulldistanceScaleIdentifier CachedCulldistanceIdentifier;                      // 0x7B0(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B3C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        OverriddenCullDistance;                            // 0x7B4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        OverriddenSignificanceDistance;                    // 0x7B8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasBeenInitialized;                               // 0x7BC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B3D[0x23];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         HideSelf;                                          // 0x7E0(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B3E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPhysicalMaterial*                     CurrentOverridePhysMat;                            // 0x7E8(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector_NetQuantize10                 PActorScale;                                       // 0x7F0(0xC)(Net, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B41[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPhysicalMaterial*                     OriginalOverridePhysMat;                           // 0x800(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AGGPhysicsActor_Base* GetDefaultObj();

	void StopPhysicsSimulation();
	void StartPhysicsSimulation();
	void StartedGrab(class AGGCharacter* Character);
	void ShouldDetachFromParent(bool Detach, bool TurnOnCollision, bool MarkForDestruction);
	bool ShouldDefaultToSightVisible();
	void SetPhysMatOverride(class UPhysicalMaterial* NewOverride);
	void SetPawnCollisionEnabled(bool NewEnabled);
	void SetPActorScale(const struct FVector& NewScale);
	void SetOriginalMatOverride(const TArray<struct FMatElement>& MatsOverride);
	void SetNewOverriddenSignificanceDistance(float NewOverridenSignificanceDistance);
	void SetNewOverriddenCullDistance(float NewOverridenCullDistance);
	void SetMultipleMaterial(const TArray<struct FMatElement>& MatElements);
	void SetMaterial(class UMaterialInterface* Material);
	void SetLatestInstigator(class APawn* InInstigator, const struct FGameplayTag& Interaction, float ClearAfter, bool bUnragdollReset);
	bool SetGoatSimName(class FText& NewName);
	void SetDesiredColorMaterialIndex(int32 DesiredIndex);
	void SetCollisionProfile(class FName& CollisionProfileName);
	void SetCollisionEnabled(bool NewEnabled);
	void SetAISightVisible(bool bShouldBeVisible);
	void ResetOriginalMatOverride();
	void ResetMaterial();
	void ResetDesiredColorMaterialIndex();
	bool RemoveStatusEffect(enum class EStatusEffectTypes TypeToRemove);
	void RemovePhysSimStartIgnoredActor(class AActor* Actor);
	bool RemoveGoatSimNameModifier(const struct FGameplayTag& ModifierTag);
	bool PrepareForLick();
	void PhysicsVolumeChanged(class APhysicsVolume* NewVolume);
	void PActorWasDetached(class AActor* DetachedFrom);
	void OnTakeDamage_Multicast(float DamageAmount, struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser);
	void OnRep_UpdatePhysMat();
	void OnRep_ShouldDetach();
	void OnRep_PawnCollisionOn();
	void OnRep_PActorScale();
	void OnRep_OriginalMatsOverride();
	void OnRep_HideSelf();
	void OnRep_DesiredColorMaterialIndex();
	void OnRep_CurrentStatusEffectMaterials();
	void OnRep_CurrentMatElements();
	void OnRep_CurrentCollisionProfile();
	void OnRep_CurrentActorName();
	void OnRep_CollisionOn();
	void OnHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void OnHideSelf();
	void ObjectWasHeadbutted(class AGGGoat* HeadbuttingGoat);
	void NewCharacterAttachment(class AGGCharacter* Character, bool TurnOffCollision);
	void NetWakeup(class UPrimitiveComponent* SleepingComponent, class FName BoneName);
	void NetGoDormant(class UPrimitiveComponent* SleepingComponent, class FName BoneName);
	void LetGo(class AGGCharacter* Character, bool ResetCollision);
	bool IsHidingSelf();
	bool IsGrabbed();
	bool InWater();
	bool HasStatusEffectByType(enum class EStatusEffectTypes TypeToCheck);
	bool HasStatusEffectByClass(TSubclassOf<class AGGStatusEffectBase> StatusEffectClass);
	void HandleConveyorMovement(const struct FVector& MoveDelta, enum class ETeleportType TeleportType);
	class UGGStatusEffectManager* GetStatusEffectManager();
	float GetSignificanceValue();
	class UPhysicalMaterial* GetPhysMatOverride();
	class APhysicsVolume* GetPhysicsVolume();
	float GetOverriddenSignificanceDistance();
	float GetOverriddenCullDistance();
	TArray<struct FMatElement> GetOriginalMatOverride();
	struct FVector GetLickInfo(const struct FVector& LickLocation, class FName* BoneName, struct FRotator* MeshLickRotation, struct FVector* RelativeLickLocation);
	class UMeshComponent* GetLickableActorMeshComponent();
	struct FLatestInstigator GetLatestInstigatorStruct();
	class APawn* GetLatestInstigator(struct FGameplayTag* OutInteractionType);
	bool GetIsOptimized();
	struct FGameplayTagContainer GetIdentifierTags();
	bool GetHasActorName();
	class FText GetGoatSimName(bool WithStyling);
	class FText GetFullGoatSimName(bool WithStyling);
	int32 GetDesiredColorMaterialIndex();
	struct FVector GetCenterOfMass();
	struct FVector GetAdditionalRepelImpulseOverride(class AGGGoat* RepelInflictingGoat, const struct FVector& HitTraceStart, const struct FVector& HitTraceEnd, const struct FVector& HitLocation);
	void GeneralEvent(int32 Integer, float Float);
	void ForceCharacterDrop(bool ResetCollision);
	bool ClearStatusEffects();
	bool CanBeLicked();
	bool CanBeHeadbutted(class AGGGoat* HeadbuttingGoat);
	class AGGStatusEffectBase* ApplyStatusEffect(enum class EStatusEffectTypes TypeToApply, enum class EApplicationMethod ApplicationMethod, class AActor* SpreadFrom, TSubclassOf<class AGGStatusEffectBase> StatusEffectClass, class AGGStatusEffectBase* SpreadFromStatus);
	void AddPhysSimStartIgnoredActor(class AActor* Actor);
	bool AddGoatSimNameModifier(const struct FGameplayTag& ModifierTag, class FText& OverrideText);
	void ActorWasLicked(class AGGGoat* LickingGoat);
	void ActorStoppedBeingLicked(class AGGGoat* LickingGoat);
	bool ActorSimulatingPhysics();
};

// 0x1E0 (0x9E8 - 0x808)
// Class Goat2.GGPhysicsActor
class AGGPhysicsActor : public AGGPhysicsActor_Base
{
public:
	uint8                                        Pad_1B46[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMeshComponent*                  Mesh;                                              // 0x810(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                  EditorMesh;                                        // 0x818(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UStaticMesh>            MeshSoftPtr;                                       // 0x820(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UMaterialInterface>> PActorOverridenMaterials;                          // 0x848(0x10)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B47[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bDestructible;                                     // 0x859(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceNotDestructible;                             // 0x85A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideDestructibleInfo;                         // 0x85B(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B48[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGGDestructibleInfo                   DestructibleInfo;                                  // 0x860(0x70)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B49[0xA0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnFinishedLoadingResources;                        // 0x970(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B4A[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DelayedOptimizationFallbackTime;                   // 0x998(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B4B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          DelayedOptimizeTimerHandle;                        // 0x9A0(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bChangesReplicateMovementInRuntime;                // 0x9A8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B4C[0x17];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMesh*                           CurrentStaticMesh;                                 // 0x9C0(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MinTimeBetweenCollisions;                          // 0x9C8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GoatHitGracePeriod;                                // 0x9CC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        NPCHitGracePeriod;                                 // 0x9D0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B4D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FRecentlyHitCharacter>         RecentlyHitCharacters;                             // 0x9D8(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AGGPhysicsActor* GetDefaultObj();

	void StaticMeshUpdated();
	void ShatterActor(const struct FVector& Impulse);
	void SetNewMesh(class UStaticMesh* NewStaticMesh);
	void SetIsOptimizedDelayed();
	void ReloadImpactEffect();
	void OnRep_CurrentStaticMesh();
	void OnDestructibleDestroyed();
	void AddImpulse(const struct FVector& Impulse, class FName BoneName, bool bVelChange);
};

// 0x58 (0xA40 - 0x9E8)
// Class Goat2.GGEggSaddleEgg
class AGGEggSaddleEgg : public AGGPhysicsActor
{
public:
	float                                        Bounds;                                            // 0x9E8(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B52[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                ContainsActor;                                     // 0x9F0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AGGGoat*                               OwnerGoat;                                         // 0x9F8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGGoatGear_Static_EggSaddle*          EggSaddle;                                         // 0xA00(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         HasBeenThrown;                                     // 0xA08(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         HasHatched;                                        // 0xA09(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B53[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGGDamageType_Base>        ReleaseImpulseDamageType;                          // 0xA10(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DefaultDamageOnRelease;                            // 0xA18(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               AddedLaunchDirection;                              // 0xA1C(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LaunchPower;                                       // 0xA28(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         ReleaseActorWhenHatched;                           // 0xA2C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         HatchOnImpact;                                     // 0xA2D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         ShatterWhenHatched;                                // 0xA2E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B54[0x11];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGEggSaddleEgg* GetDefaultObj();

	void Throw();
	bool ShouldFollowPlayer();
	void ReleaseContainedActor();
	void OnRep_HasHatched(bool PreviousHasHatched);
	void OnRep_HasBeenThrown(bool PreviousHasBeenThrown);
	void OnRep_EggSaddle(class UGGGoatGear_Static_EggSaddle* PreviousEggSaddle);
	void OnRep_ContainsActor(class AActor* PreviousActor);
	void OnHatched();
	void OnForceHatched(float DelayHatch);
	void MulticastThrow();
	void MulticastReleaseContainedActor(class AActor* InContainsActor, const struct FVector& ReleaseLocation, const struct FGGReleaseOptions& Options);
	void Hatch(struct FVector& HatchImpulse);
};

// 0xA0 (0x370 - 0x2D0)
// Class Goat2.GGElfHat_Snowball
class AGGElfHat_Snowball : public AGGPhysicsProjectile
{
public:
	TSubclassOf<class AGGSnowmanHead>            SnowmanHeadClass;                                  // 0x2D0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AGGSnowman>                SnowmanClass;                                      // 0x2D8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinFloorDot;                                       // 0x2E0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PlayerImpactForce;                                 // 0x2E4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PActorImpactForce;                                 // 0x2E8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B57[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<TSubclassOf<class AActor>, float>       DamageMap;                                         // 0x2F0(0x50)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                        DefaultDamage;                                     // 0x340(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B58[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UStaticMesh>            ImpactMesh;                                        // 0x348(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AGGElfHat_Snowball* GetDefaultObj();

	void OnStickToTarget(class AActor* OtherActor, struct FVector& SurfaceNormal);
};

// 0xB0 (0x2E0 - 0x230)
// Class Goat2.GGEnvironmentalBehaviorContainer
class AGGEnvironmentalBehaviorContainer : public AActor
{
public:
	class USceneComponent*                       RootComp;                                          // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGNPC*                                OwnerNPC;                                          // 0x238(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               OriginalLocation;                                  // 0x240(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              OriginalRotation;                                  // 0x24C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class AActor>                 ActorA;                                            // 0x258(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class AActor>                 ActorB;                                            // 0x280(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FWeightedElement_BehaviorActor> ActorArrayA;                                       // 0x2A8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FWeightedElement_SoftActor>    ActorArrayB;                                       // 0x2B8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	float                                        Radius;                                            // 0x2C8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Duration;                                          // 0x2CC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DurationDeviation;                                 // 0x2D0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInOrder;                                          // 0x2D4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSkipTakenWaypoint;                                // 0x2D5(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B59[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGNPCWaypoint*                        ClaimedWaypoint;                                   // 0x2D8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AGGEnvironmentalBehaviorContainer* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGEventActivatorInterface
class IGGEventActivatorInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IGGEventActivatorInterface* GetDefaultObj();

	bool SpawnEvent();
	bool GetSqrdDistances(float* SqrdMaxRelevantDist, float* SqrdMinRelevantDist);
	bool EnableEventActor();
	bool CanActivate(float SpawnAttemptDelay);
};

// 0x268 (0x498 - 0x230)
// Class Goat2.GGQuestBase
class AGGQuestBase : public AActor
{
public:
	uint8                                        Pad_1B78[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bActiveByDefault;                                  // 0x238(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EQuestReplication                 QuestReplicationMode;                              // 0x239(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B79[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          QuestCategory;                                     // 0x23C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B7A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UTexture>               QuestListIcon;                                     // 0x248(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                QuestID;                                           // 0x270(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          QuestIDTag;                                        // 0x280(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EQuestProgression                 QuestProgressionMode;                              // 0x288(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B7B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  QuestTitle;                                        // 0x290(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  QuestDescription;                                  // 0x2A8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  MobileQuestDescription;                            // 0x2C0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  QuestProgressTextFormat;                           // 0x2D8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  QuestRewardSplashDescription;                      // 0x2F0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  QuestCompletionSplashBody;                         // 0x308(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                        QuestRewardSplashDelay;                            // 0x320(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          CompletedSplashNotificationTag;                    // 0x324(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESaveGameType                     QuestSaveMethod;                                   // 0x32C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSecretProgression;                                // 0x32D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStepsAsTierInHUD;                                 // 0x32E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B7D[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FQuestReward                          QuestReward;                                       // 0x330(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FQuestReward                          QuestRewardRepeated;                               // 0x360(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FQuestTier>                    QuestProgressTiers;                                // 0x390(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FQuestStepTier>                QuestStepTiers;                                    // 0x3A0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TSet<struct FGameplayTag>                    QuestCollectionSet;                                // 0x3B0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FQuestTier>                    QuestCollectionMilestones;                         // 0x400(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bSavePartialCompletion;                            // 0x410(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSaveProgressionEveryUpdate;                       // 0x411(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B7E[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                UnreadMenuCategory;                                // 0x418(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                UnreadQuestCategory;                               // 0x428(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowQuestIDAsUnread;                               // 0x438(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawDebugInfo;                                    // 0x439(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableProgressSaving;                            // 0x43A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableProgressLoading;                           // 0x43B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPrintErrorsOnScreen;                              // 0x43C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWarningsAsErrors;                                 // 0x43D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B7F[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FQuestDebugMessage>            DebugMessages;                                     // 0x440(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B80[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGQuestManager*                       QuestManager;                                      // 0x458(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        QuestProgress;                                     // 0x460(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B81[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FQuestSharedProgress                  SharedProgress;                                    // 0x468(0x20)(Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	bool                                         bSharedProgressSynced;                             // 0x488(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCompleted;                                        // 0x489(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCompletedThisPlaySession;                         // 0x48A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCompletedBeforeJoining;                           // 0x48B(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bProgressionLoaded;                                // 0x48C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B82[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LastProgressUpdate;                                // 0x490(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInitialized;                                      // 0x494(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bActive;                                           // 0x495(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDiscovered;                                       // 0x496(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPreviouslyDiscovered;                             // 0x497(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AGGQuestBase* GetDefaultObj();

	bool UpdateQuestStepCompletion(const class FString& StepID, bool bStepCompleted);
	class FString TagIdAsStringId(const struct FGameplayTag& TagIdentifier);
	struct FGameplayTag StringIdAsTagId(const class FString& StringIdentifier, bool ErrorIfNotFound);
	void SetProgress(int32 Value, class AGGPlayerState* EventInstigator);
	void SetMilestoneProgress(int32 Value, bool bInitializeOnly);
	void ResetQuest();
	void ReportProgress(int32 Value, class AGGPlayerState* EventInstigator);
	bool QuestWasCompletedThisPlaySession();
	void OnRep_SharedProgress();
	void OnQuestProgressionLoadedBlueprint(bool bSaveExisted, bool bWasCompleted);
	void OnQuestInitializedBlueprint();
	void OnQuestCompletedBlueprint();
	void OnOtherQuestCompleted(class AGGQuestBase* Quest, class AGGPlayerState* OptionalPlayerState);
	void OnInitialProgressReplicated();
	void MulticastSetProgress(int32 Progress, class AGGPlayerState* EventInstigator);
	void MulticastDiscoverQuest(TArray<class AGGPlayerState*>& PlayersInDiscoveryRange);
	void MulticastDeactivateQuest(bool bWasCompleted);
	void MulticastCompleteStep(const class FString& StepID, class AGGPlayerState* EventInstigator, bool Complete);
	void MulticastCompleteQuest(class AGGPlayerState* EventInstigator);
	void MulticastActivateQuest();
	void LogQuestWarning(const class FString& InFunction, const class FString& InMessage);
	void LogQuestEvent(const class FString& InFunction, const class FString& InMessage, enum class EQuestDebugType Verbosity);
	void LogQuestError(const class FString& InFunction, const class FString& InMessage);
	bool IsTierCompleted(const struct FQuestTier& Tier);
	bool IsQuestUserVisible();
	bool IsQuestStepVisible(const class FString& StepID);
	bool IsQuestSecret(bool bSecretIfCompleted);
	bool IsInitializedFully();
	bool IsInitialized();
	bool IsCompleted();
	bool IsActive();
	bool HasLoadedStateFromServer();
	class FText GetQuestTitle();
	class FText GetQuestTierDescription(const struct FQuestTier& Tier);
	TArray<struct FQuestStepTier> GetQuestSteps();
	float GetQuestRewardSplashDelay();
	class FText GetQuestProgressText();
	class FText GetQuestDescription();
	class FText GetQuestCompletionSplashTitle();
	class FText GetQuestCompletionSplashBody();
	int32 GetProgress(bool* ReachedMaximum);
	struct FQuestTier GetPreviousQuestTier();
	int32 GetNumberOfSteps();
	int32 GetNumberOfQuestTiers();
	int32 GetNumberOfCompletedSteps();
	int32 GetMaximumTargetProgress();
	struct FQuestTier GetLastQuestTier();
	int32 GetCurrentQuestTierIndex();
	struct FQuestTier GetCurrentQuestTier();
	bool GetCompletedOrderIndexForStep(int32 StepTier, const class FString& StepID, int32* OutCompletedOrderIndex);
	void DiscoverQuest(class AGGPlayerState* EventInstigator);
	void DecreaseProgress(int32 Value, class AGGPlayerState* EventInstigator);
	void DeactivateQuest(bool bWasCompleted);
	void CompleteStepHUD(const class FString& StepID, bool bComplete);
	void CompleteStep(const class FString& StepID, class AGGPlayerState* EventInstigator, bool Complete, bool bDelayCompletionInHUD);
	void CompleteQuest(class AGGPlayerState* EventInstigator);
	bool CanQuestBeCompleted();
	bool AreAllStepsInTierCompleted(const struct FQuestStepTier& Tier);
	void ActivateQuest();
};

// 0x420 (0x8B8 - 0x498)
// Class Goat2.GGEventBase
class AGGEventBase : public AGGQuestBase
{
public:
	class UGGEventPointComponent*                MainEventPointComponent;                           // 0x498(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UGGEventPointComponent>> EventPointComponents;                              // 0x4A0(0x10)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                         bGlobalEvent;                                      // 0x4B0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B96[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FQuestHint>                    QuestHints;                                        // 0x4B8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TSet<class AGGEventDiscoveryBroadcastVolume*> EventDiscoveryBroadcastVolumes;                    // 0x4C8(0x50)(NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class AGGGoatTower>           AssociatedGoatTower;                               // 0x518(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class AActor>                 AreaContextActor;                                  // 0x540(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTreatAsSecretInMapAreaInformation;                // 0x568(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideOnMapTilCompleted;                            // 0x569(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B97[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ULevelSequence*                        CompletedSequence;                                 // 0x570(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CompletedSequenceDelay;                            // 0x578(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B98[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRadarCoordinateData                  EventRadarData;                                    // 0x580(0x58)(Edit, BlueprintVisible, BlueprintReadOnly, AdvancedDisplay, NativeAccessSpecifierPublic)
	struct FRadarCoordinateData                  PreviouslyDiscoveredData;                          // 0x5D8(0x58)(Edit, BlueprintVisible, BlueprintReadOnly, AdvancedDisplay, NativeAccessSpecifierPublic)
	struct FRadarCoordinateData                  CompletedRadarData;                                // 0x630(0x58)(Edit, BlueprintVisible, BlueprintReadOnly, AdvancedDisplay, NativeAccessSpecifierPublic)
	struct FRadarCoordinateData                  TutorialRadarData;                                 // 0x688(0x58)(Edit, BlueprintVisible, BlueprintReadOnly, AdvancedDisplay, NativeAccessSpecifierPublic)
	struct FRadarCoordinateData                  GoatTowerRadarData;                                // 0x6E0(0x58)(Edit, BlueprintVisible, BlueprintReadOnly, AdvancedDisplay, NativeAccessSpecifierPublic)
	struct FRadarCoordinateData                  ActiveRadarData;                                   // 0x738(0x58)(Edit, BlueprintVisible, BlueprintReadOnly, AdvancedDisplay, NativeAccessSpecifierPublic)
	struct FRadarCoordinateData                  SecretRadarData;                                   // 0x790(0x58)(Edit, BlueprintVisible, BlueprintReadOnly, AdvancedDisplay, NativeAccessSpecifierPublic)
	struct FRadarCoordinateData                  OverrideRadarData;                                 // 0x7E8(0x58)(Edit, BlueprintVisible, BlueprintReadOnly, AdvancedDisplay, NativeAccessSpecifierPublic)
	struct FRadarCoordinateData                  WaypointRadarData;                                 // 0x840(0x58)(Edit, BlueprintVisible, BlueprintReadOnly, AdvancedDisplay, NativeAccessSpecifierPublic)
	bool                                         bWasDeactivatedAfterCompletion;                    // 0x898(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B99[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGLevelSequenceActor*                 CompletedSequenceActor;                            // 0x8A0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelSequencePlayer*                  CompletedSequencePlayer;                           // 0x8A8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B9B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGEventBase* GetDefaultObj();

	void RemoveEventPoint(class UGGEventPointComponent* EventPoint);
	void PlayEventCompletedSequence(bool PlayCameraCuts);
	void OnHintActivatedBlueprint(const class FString& HintID);
	void OnGoatTowerSynchronised(class AGGGoatTower* GoatTower, enum class ETowerSynchronizationEvent SynchronizationEvent);
	void OnDiscovered();
	void OnCompletedSequencePlaying();
	void OnCompletedSequenceFinished();
	void MulticastActivateHint(const class FString& HintID);
	bool IsConsideredForNearestEvent();
	bool HasEverBeenDiscovered();
	bool HasBeenDiscoveredThisSession();
	void GetEventStates(enum class EEventActiveState* ActiveState, enum class EEventCompletedState* CompletedState);
	enum class EEventCompletedState GetCompletionState();
	struct FVector GetClosestEventPointLocation(const struct FVector& Location, float* OutDistance);
	enum class EEventActiveState GetActiveState();
	bool ConsideredCompletedInWorld();
	void CompletedSequenceFinished();
	void AddEventPoint(class UGGEventPointComponent* EventPoint);
};

// 0x8 (0x270 - 0x268)
// Class Goat2.GGEventDiscoveryBroadcastVolume
class AGGEventDiscoveryBroadcastVolume : public AVolume
{
public:
	class AGGEventBase*                          Event;                                             // 0x268(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AGGEventDiscoveryBroadcastVolume* GetDefaultObj();

};

// 0x18 (0x248 - 0x230)
// Class Goat2.GGEventPointActor
class AGGEventPointActor : public ATargetPoint
{
public:
	class UGGEventPointComponent*                EventPointComponent;                               // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DiscoverQuestBroadcastRadius;                      // 0x238(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CompletionBroadcastRadius;                         // 0x23C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NearestQuestSearchRadius;                          // 0x240(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ProgressBroadcastRadius;                           // 0x244(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AGGEventPointActor* GetDefaultObj();

};

// 0x8 (0xB8 - 0xB0)
// Class Goat2.GGEventPointComponent
class UGGEventPointComponent : public UActorComponent
{
public:
	float                                        EventAreaRadius;                                   // 0xB0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B9C[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGEventPointComponent* GetDefaultObj();

};

// 0x48 (0x278 - 0x230)
// Class Goat2.GGEventSpawner
class AGGEventSpawner : public AActor
{
public:
	uint8                                        Pad_1B9E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       RootComp;                                          // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         CanSpawn;                                          // 0x240(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EEventActivation                  EventActivation;                                   // 0x241(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B9F[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          SpawnerArea;                                       // 0x244(0x8)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ChanceToSpawn;                                     // 0x24C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AGGNPCEvent*                           ClaimedBy;                                         // 0x250(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpawnMaxDistance;                                  // 0x258(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpawnMinDistance;                                  // 0x25C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BA0[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGEventSpawner* GetDefaultObj();

	void Spawn();
	void NPCEventCreateDelegate(class AGGNPCEvent* NPCEvent);
};

// 0x40 (0x2B8 - 0x278)
// Class Goat2.GGEventSpawner_StreetPerformer
class AGGEventSpawner_StreetPerformer : public AGGEventSpawner
{
public:
	class USceneComponent*                       PerformerLocationComp;                             // 0x278(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FWeightedElement_PerformerElement> Performers;                                        // 0x280(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BA1[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGEventSpawner_StreetPerformer* GetDefaultObj();

};

// 0x78 (0x2F0 - 0x278)
// Class Goat2.GGEventSpawner_StreetStall
class AGGEventSpawner_StreetStall : public AGGEventSpawner
{
public:
	enum class EQueueDirections                  QueueDirection;                                    // 0x278(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BA2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        QueueSpots;                                        // 0x27C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LengthUntilFirstSpot;                              // 0x280(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpaceBetweenSpots;                                 // 0x284(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FStallSpawnElement>            Stalls;                                            // 0x288(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BA5[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGEventSpawner_StreetStall* GetDefaultObj();

};

// 0x1A8 (0xB90 - 0x9E8)
// Class Goat2.GGExplosiveActor
class AGGExplosiveActor : public AGGPhysicsActor
{
public:
	bool                                         HasExploded;                                       // 0x9E8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanCauseChain;                                     // 0x9E9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BAB[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ChainExplosionDelay;                               // 0x9EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DestroyAfterExplosion;                             // 0x9F0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BAC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DestructionDelay;                                  // 0x9F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FalloffMinDistance;                                // 0x9F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ChangeMeshOrMatOnExplosion;                        // 0x9FC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BAD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class ECollisionChannel>         OverlapChannels;                                   // 0xA00(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class UStaticMesh*                           ExplodedMesh;                                      // 0xA10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    ExplodedMaterial;                                  // 0xA18(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            ExplosionSound;                                    // 0xA20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       ExplosionParticleSystem;                           // 0xA28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UCameraShakeBase>          ExplosionCameraShake;                              // 0xA30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ExplosionParticleScale;                            // 0xA38(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BB0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            UnderWaterExplosionSound;                          // 0xA48(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       UnderWaterExplosionParticleSystem;                 // 0xA50(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UCameraShakeBase>          UnderWaterCameraShake;                             // 0xA58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               UnderWaterExplosionParticleScale;                  // 0xA60(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayBothParticle;                                 // 0xA6C(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BB1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TotalAmountOfExplodedNPC;                          // 0xA70(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalAmountOfExplodedNPCMobile;                    // 0xA74(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ExplodedNPCsTag;                                   // 0xA78(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ExplodedExplosiveTag;                              // 0xA80(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScanGoatRadius;                                    // 0xA88(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BB2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         ExplodeOnHit;                                      // 0xA90(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         OnlyWithPlayer;                                    // 0xA91(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ExplodeFromDamage;                                 // 0xA92(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         StoreDamage;                                       // 0xA93(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeFromDamageDelay;                            // 0xA94(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeDamageThreshold;                            // 0xA98(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ThresholdVolumeScale;                              // 0xA9C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ThresholdMin;                                      // 0xAA0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ThresholdMax;                                      // 0xAA4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UseOverrideValue;                                  // 0xAA8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BB3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DamageThresholdOverride;                           // 0xAAC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawExplosionRadius;                              // 0xAB0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BB4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ImpulseStrength;                                   // 0xAB4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CharacterImpulseStrength;                          // 0xAB8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SelfImpulseStrength;                               // 0xABC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SelfSpinStrength;                                  // 0xAC0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ImpulseVelChange;                                  // 0xAC4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ImpulseFalloff;                                    // 0xAC5(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsCountingDownToExplosion;                         // 0xAC6(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BB5[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ExplosionRadius;                                   // 0xAC8(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RadiusVolumeScale;                                 // 0xACC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RadiusMin;                                         // 0xAD0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RadiusMax;                                         // 0xAD4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UseRadiusOverride;                                 // 0xAD8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BB7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RadiusOverride;                                    // 0xADC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanDamageAnyActor;                                 // 0xAE0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BB8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ExplosionDamage;                                   // 0xAE4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DestructibleDamage;                                // 0xAE8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DamageFalloff;                                     // 0xAEC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BB9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ChanceToPanic;                                     // 0xAF0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPanicTypes                       PanicType;                                         // 0xAF4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BBA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StartleRadiusAdjust;                               // 0xAF8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNotifyAboutThisActor;                             // 0xAFC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BBB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FStartleDetailsSettings               StartleSettings;                                   // 0xB00(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                         CanTriggerFromFire;                                // 0xB50(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BBC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FireTriggerDelay;                                  // 0xB54(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceFromCenter;                                // 0xB58(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EStatusEffectTypes                StatusEffectToApply;                               // 0xB5C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BBD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AGGStatusEffectBase>       StatusEffectClassToApply;                          // 0xB60(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EStatusEffectTypes                StatusEffectToApplyToSelf;                         // 0xB68(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BBE[0x23];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bHasRadiusSet;                                     // 0xB8C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1BBF[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGExplosiveActor* GetDefaultObj();

	void TriggerExplosionWithTimer(float TimerLength, class AActor* ExplosionInstigator);
	void TriggerExplosion(class AActor* ExplosionInstigator);
	void PlayCameraShake(bool IsUnderWater);
	void OnRep_Exploded();
	void OnActorGotNewStatusEffect(class AActor* Actor, class UGGStatusEffectManager* Manager, class AGGStatusEffectBase* NewStatusEffect, enum class EStatusEffectTypes Type);
	void MulticastPlayEffectsUnderWater();
	void MulticastPlayEffects();
	void BPExplosionTimerStopped();
	void BPExplosionTimerStarted();
	void BPExploded(class AActor* ExplosionInstigator);
};

// 0x28 (0x260 - 0x238)
// Class Goat2.GGExponentialFogTrigger
class AGGExponentialFogTrigger : public ATriggerBox
{
public:
	float                                        FogActivationCheckDelay;                           // 0x238(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowBoxBounds;                                    // 0x23C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BC3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AExponentialHeightFog*                 HeightFogInWorld;                                  // 0x240(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UExponentialHeightFogComponent*        HeightFogComp;                                     // 0x248(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1BC4[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          THDelayedCheck;                                    // 0x258(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AGGExponentialFogTrigger* GetDefaultObj();

	void OnOverlapEnd(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnOverlapBegin(class AActor* OverlappedActor, class AActor* OtherActor);
	void CheckIfFogShouldBeChanged();
};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGExternalGoatMovementInterface
class IGGExternalGoatMovementInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IGGExternalGoatMovementInterface* GetDefaultObj();

	void PhysCustom(class UGGGoatMovementComponent* GoatMovementComp, float DeltaTime, int32 Iterations);
	bool ExternalAllowJump();
};

// 0x110 (0x340 - 0x230)
// Class Goat2.GGFactsDatabaseSystem
class AGGFactsDatabaseSystem : public AInfo
{
public:
	TArray<struct FGGFact>                       Facts;                                             // 0x230(0x10)(Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                          FinishedDialogueBranches;                          // 0x240(0x10)(Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BCB[0xF0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGFactsDatabaseSystem* GetDefaultObj();

	void UpdateFact(const struct FGameplayTag& InFact, float InValue);
	void RemoveFact(const struct FGameplayTag& InFact);
	void RemoveCallbackFromFactRemoved(struct FGameplayTag& InFact, const struct FGGDelegateHandleWrapper& InHandle);
	void RemoveCallbackFromFactChanged(struct FGameplayTag& InFact, const struct FGGDelegateHandleWrapper& InHandle);
	void RemoveCallbackFromFactAdded(struct FGameplayTag& InFact, const struct FGGDelegateHandleWrapper& InHandle);
	void RemoveAllFromFactRemoved(struct FGameplayTag& InFact, class UObject* InObject);
	void RemoveAllFromFactChanged(struct FGameplayTag& InFact, class UObject* InObject);
	void RemoveAllFromFactAdded(struct FGameplayTag& InFact, class UObject* InObject);
	bool IsFactTrue(const struct FGameplayTag& InFact);
	float GetFactValue(const struct FGameplayTag& InFact);
	bool DoesFactExists(const struct FGameplayTag& InFact);
	bool DoesFactEquals(const struct FGameplayTag& InFact, float InValue, float Precision);
	struct FGGDelegateHandleWrapper BindCallbackToFactRemoved(struct FGameplayTag& InFact, FDelegateProperty_ InCallback);
	struct FGGDelegateHandleWrapper BindCallbackToFactChanged(struct FGameplayTag& InFact, FDelegateProperty_ InCallback);
	struct FGGDelegateHandleWrapper BindCallbackToFactAdded(struct FGameplayTag& InFact, FDelegateProperty_ InCallback);
};

// 0x0 (0x30 - 0x30)
// Class Goat2.GGFactsDatabaseSpawner
class UGGFactsDatabaseSpawner : public UWorldSubsystem
{
public:

	static class UClass* StaticClass();
	static class UGGFactsDatabaseSpawner* GetDefaultObj();

};

// 0x0 (0x230 - 0x230)
// Class Goat2.GGFallingObjectsBoss
class AGGFallingObjectsBoss : public AActor
{
public:

	static class UClass* StaticClass();
	static class AGGFallingObjectsBoss* GetDefaultObj();

};

// 0x28 (0x258 - 0x230)
// Class Goat2.GGFarmerGearBuilding
class AGGFarmerGearBuilding : public AActor
{
public:
	class USceneComponent*                       Root;                                              // 0x230(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  BuildingMesh;                                      // 0x238(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            SpawnSound;                                        // 0x240(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       SpawnParticle;                                     // 0x248(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           Mesh;                                              // 0x250(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AGGFarmerGearBuilding* GetDefaultObj();

	void OnRep_Mesh();
};

// 0x48 (0x318 - 0x2D0)
// Class Goat2.GGFireballProjectile
class AGGFireballProjectile : public AGGPhysicsProjectile
{
public:
	class UParticleSystem*                       ExplosionParticle;                                 // 0x2D0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       TrailParticle;                                     // 0x2D8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ExplosionParticleScale;                            // 0x2E0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BD1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            ExplosionSound;                                    // 0x2E8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ExplosionSoundVolume;                              // 0x2F0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ExplosionRadius;                                   // 0x2F4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ExplosionForce;                                    // 0x2F8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CharacterExplosionForce;                           // 0x2FC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UCameraShakeBase>          ExplosionCameraShake;                              // 0x300(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CameraShakeRadius;                                 // 0x308(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BD2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystemComponent*              TrailParticleComp;                                 // 0x310(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AGGFireballProjectile* GetDefaultObj();

	void MulticastOnFireballExploded();
};

// 0x160 (0x210 - 0xB0)
// Class Goat2.GGFootstepComponent
class UGGFootstepComponent : public UActorComponent
{
public:
	bool                                         bCheckSurfaceType;                                 // 0xB0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BDC[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundCue*                             FoleySound;                                        // 0xB8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSurfaceSounds                        FootstepSounds;                                    // 0xC0(0x58)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FSurfaceSounds                        JumpingSounds;                                     // 0x118(0x58)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FSurfaceSounds                        LandingSounds;                                     // 0x170(0x58)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector2D                             FootStepVolumeRange;                               // 0x1C8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             JumpLandVolumeRange;                               // 0x1D0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinTimeBetweenFootsteps;                           // 0x1D8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETraceTypeQuery                   TraceChannel;                                      // 0x1DC(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BDD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TraceDistance;                                     // 0x1E0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               TraceStartLocationOffset;                          // 0x1E4(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BDE[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGFootstepComponent* GetDefaultObj();

	void SetSoundOverride(class USoundCue* Override);
	void SetLandSoundOverride(class USoundCue* Override);
	void SetJumpSoundOverride(class USoundCue* Override);
	void SetFootstepSoundOverride(class USoundCue* Override);
	void PlayLandSound(struct FVector& BoneLocation, struct FVector& TraceDirection);
	void PlayJumpSound(struct FVector& BoneLocation, struct FVector& TraceDirection);
	void PlayFootstepSound(struct FVector& BoneLocation, struct FVector& TraceDirection);
	class USoundBase* GetSoundForSurface(enum class EPhysicalSurface SurfaceType, struct FSurfaceSounds& Sounds);
};

// 0x0 (0x2F0 - 0x2F0)
// Class Goat2.GGForceFeedbackComponent
class UGGForceFeedbackComponent : public UForceFeedbackComponent
{
public:

	static class UClass* StaticClass();
	static class UGGForceFeedbackComponent* GetDefaultObj();

};

// 0x98 (0x148 - 0xB0)
// Class Goat2.GGFreezeComponent
class UGGFreezeComponent : public UActorComponent
{
public:
	float                                        FreezeDuration;                                    // 0xB0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          FreezeDurationSourceTag;                           // 0xB4(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bRagdollOnFreeze;                                  // 0xBC(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BE6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInterface*                    MaterialOverride;                                  // 0xC0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       FreezeParticles;                                   // 0xC8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            FreezeSound;                                       // 0xD0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumHeadbuttToSelfBrakeFree;                        // 0xD8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllowPlayerToBrakeFreeWhileTempFrozen;            // 0xDC(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BE7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       BrakeFreeAttemptParticles;                         // 0xE0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            BrakeFreeSound;                                    // 0xE8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EGGDamageWhileFreezeReaction      DamageWhileFreezeReaction;                         // 0xF0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BE8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DamageThresholdForReaction;                        // 0xF4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAccumulateDamage;                                 // 0xF8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BE9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       ExplodeParticles;                                  // 0x100(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       UnFreezeParticles;                                 // 0x108(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BEA[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsOwnerFrozen;                                    // 0x124(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BEB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGCharacter*                          CharacterOwner;                                    // 0x128(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AGGNPC*                                NPCOwner;                                          // 0x130(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FGGCachedMeshMaterial>         CachedMeshMaterials;                               // 0x138(0x10)(ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGGFreezeComponent* GetDefaultObj();

	void TryToUnFreezeActor(class AActor* InActor);
	class UGGFreezeComponent* TryToFreezeActorForDuration_K2(class AActor* InActor, float Duration, TSubclassOf<class UGGFreezeComponent> FreezeComponentClass);
	class UGGFreezeComponent* TryToFreezeActor_K2(class AActor* InActor, TSubclassOf<class UGGFreezeComponent> FreezeComponentClass);
	void ServerPlayBrakeFreeAttemptVFX();
	void ServerOnPlayerHeadbutt();
	void OnPlayerHeadbutt();
	void OnOwnerTakeDamage(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void OnAttachedNPCUnRagdolled(bool bIsRagdollOnGround, class ULSCharacterMovementComponent* MovementComp, class ACharacter* UnRagdolledCharacter, struct FRagdollStateChangeSettings& StateChangeSettings);
	void OnAttachedNPCPooled(class AGGNPC* NPC, bool bWasPooled);
	void OnAttachedCharacterRagdolled(class ULSCharacterMovementComponent* MovementComp, class ACharacter* RagdollingCharacter, struct FRagdollStateChangeSettings& StateChangeSettings);
	void MulticastPlayBrakeFreeAttemptVFX();
	bool IsActorFrozen(class AActor* TargetActor);
};

// 0x8 (0xD78 - 0xD70)
// Class Goat2.GGGameEngine
class UGGGameEngine : public UGameEngine
{
public:
	bool                                         IsPlaytestingBuild;                                // 0xD70(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BEC[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGameEngine* GetDefaultObj();

};

// 0xC8 (0x270 - 0x1A8)
// Class Goat2.GGGameInstance
class UGGGameInstance : public UGameInstance
{
public:
	TArray<TSubclassOf<class UGameInstanceSubsystem>> ManuallyIncludedSubsystems;                        // 0x1A8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BFA[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                LastKnownMapName;                                  // 0x1D0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1BFB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinLoadTime;                                       // 0x1E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                LoadingScreenContext;                              // 0x1E8(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           TransitionMapLoadScreen;                           // 0x1F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>               StartupLoadingScreenWidgetClass;                   // 0x200(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>               MenuLoadingScreenWidgetClass;                      // 0x208(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>               LoadingScreenWidgetClass;                          // 0x210(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>               LevelStartLoadingScreenWidgetClass;                // 0x218(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasBeenInMainMenu;                                // 0x220(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInIntroSplash;                                    // 0x221(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BFC[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UUserWidget*                           LoadScreenWidgetRef;                               // 0x228(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1BFD[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGOnlineManager*                      OnlineManager;                                     // 0x238(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGGDLCHandler*                         DLCHandler;                                        // 0x240(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1BFE[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AGGNPC_Humanoid*>               CachedHumanoidNPCs;                                // 0x250(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AGGNPC_Animal*>                 CachedAnimalNPCs;                                  // 0x260(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGGameInstance* GetDefaultObj();

	bool ShouldPlayStartupFlow();
	void SendSessionInvite(const class FString& DisplayName);
	void PreLoadMap(const class FString& MapName);
	void PostLoadMapWithWorld(class UWorld* World);
	void OnWorldCleanupEvent(class UWorld* World, bool bSessionEnded, bool bCleanupResources);
	void OnWorldCleanup(class UWorld* World, bool bSessionEnded, bool bCleanupResources);
	void LinkSteamToEOSAccount_BP();
	void LinkAccount();
	bool IsRestartingLevel(class UObject* WorldContextObject);
	bool IsInTransitionMap();
	bool IsInMobileStartup();
	bool IsInMainMenuMap();
	bool IsInIslandMap();
	bool IsInBossFight();
	class UGGOnlineManager* GetOnlineManager();
	class UGGDLCHandler* GetDLCHandler();
	TArray<class AGGNPC_Humanoid*> GetCachedHumanoidNPCs();
	TArray<class AGGNPC_Animal*> GetCachedAnimalNPCs();
	void DestroySteamSession();
	void CreateSteamSession();
	void BeginLoadingScreen(const class FString& MapName);
};

// 0x18 (0x108 - 0xF0)
// Class Goat2.GGGameMapsSettings
class UGGGameMapsSettings : public UGameMapsSettings
{
public:
	struct FSoftObjectPath                       OverrideMainMap;                                   // 0xF0(0x18)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGGameMapsSettings* GetDefaultObj();

};

// 0x40 (0x310 - 0x2D0)
// Class Goat2.GGGameMode_Base
class AGGGameMode_Base : public AGameModeBase
{
public:
	TSubclassOf<class UGGNPCManager>             NPCManagerClass;                                   // 0x2D0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGGVehicleManager>         VehicleManagerClass;                               // 0x2D8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGGNPCEventManager>        NPCEventManagerClass;                              // 0x2E0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGGStatusEffectPoolManager> SEPoolManagerClass;                                // 0x2E8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGNPCManager*                         NPCManager;                                        // 0x2F0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGGVehicleManager*                     VehicleManager;                                    // 0x2F8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGGNPCEventManager*                    NPCEventManager;                                   // 0x300(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGGStatusEffectPoolManager*            SEPoolManager;                                     // 0x308(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AGGGameMode_Base* GetDefaultObj();

	class UGGVehicleManager* GetVehicleManager();
	class UGGStatusEffectPoolManager* GetSEPoolManager();
	class UGGNPCManager* GetNPCManager();
	class UGGNPCEventManager* GetNPCEventManager();
};

// 0x58 (0x368 - 0x310)
// Class Goat2.GGGameMode
class AGGGameMode : public AGGGameMode_Base
{
public:
	float                                        PlayerStartOccupiedDistanceCompare;                // 0x310(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerStartGoatDistanceCheck;                      // 0x314(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayerLogin;                                     // 0x318(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayerLogout;                                    // 0x328(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FUniqueNetIdRepl>              PlayersThatWantIntro;                              // 0x338(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1C08[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DefaultSlowMotionTimeDilation;                     // 0x34C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSlowMotionToggled;                               // 0x350(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C09[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGGameMode* GetDefaultObj();

	void TimeDilateFor(float TimeDilation, float Duration);
	void SetTimeDilation(float TimeDilation);
	void Say(class AActor* Sender, const class FString& Msg);
	void ResetTimeDilation();
	bool HasValidWorldSaveFileName();
	enum class EWorldSaveFileName GetWorldSaveFileName();
	float GetCurrentTimeDilation();
	class AActor* CustomChoosePlayerStart(class AController* Player);
};

// 0x0 (0x310 - 0x310)
// Class Goat2.GGGameMode_MainMenu
class AGGGameMode_MainMenu : public AGGGameMode_Base
{
public:

	static class UClass* StaticClass();
	static class AGGGameMode_MainMenu* GetDefaultObj();

	void Say(class AActor* Sender, const class FString& Msg);
};

// 0x0 (0x310 - 0x310)
// Class Goat2.GGGameplayCueManager
class UGGGameplayCueManager : public UGameplayCueManager
{
public:

	static class UClass* StaticClass();
	static class UGGGameplayCueManager* GetDefaultObj();

};

// 0x8 (0x250 - 0x248)
// Class Goat2.GGGameSession
class AGGGameSession : public AGameSession
{
public:
	uint8                                        Pad_1C0B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGGameSession* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGGameSettingAction
class UGGGameSettingAction : public UObject
{
public:

	static class UClass* StaticClass();
	static class UGGGameSettingAction* GetDefaultObj();

	class FString SetValue(const class FString& InNewValue, struct FGGGameSetting& InSetting, enum class EGGGameSettingChangeContext InContext);
	void RunAction(struct FGGGameSetting& InSetting);
	class FString LoadValue(const class FString& InValue, struct FGGGameSetting& InSetting);
	class FString GetValue(const class FString& CurrentValue, struct FGGGameSetting& InSetting);
	class AGGPlayerController* GetPrimaryPlayerController(struct FGGGameSetting& InSetting);
	class FString GetDefault(const class FString& CurrentDefault, struct FGGGameSetting& InSetting);
	void ApplyValue(const class FString& InCurrentValue, struct FGGGameSetting& InSetting);
};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGGameSettingAction_Logout
class UGGGameSettingAction_Logout : public UGGGameSettingAction
{
public:

	static class UClass* StaticClass();
	static class UGGGameSettingAction_Logout* GetDefaultObj();

	void PopUpCallback(const class FString& ID, class UObject* Object, const class FString& ButtonID, enum class EPopupResponse Response);
};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGGameSettingAction_ScreenMode
class UGGGameSettingAction_ScreenMode : public UGGGameSettingAction
{
public:

	static class UClass* StaticClass();
	static class UGGGameSettingAction_ScreenMode* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGGameSettingAction_Resolution
class UGGGameSettingAction_Resolution : public UGGGameSettingAction
{
public:

	static class UClass* StaticClass();
	static class UGGGameSettingAction_Resolution* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGGameSettingAction_LimitFrameRate
class UGGGameSettingAction_LimitFrameRate : public UGGGameSettingAction
{
public:

	static class UClass* StaticClass();
	static class UGGGameSettingAction_LimitFrameRate* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGGameSettingAction_ResetSave
class UGGGameSettingAction_ResetSave : public UGGGameSettingAction
{
public:

	static class UClass* StaticClass();
	static class UGGGameSettingAction_ResetSave* GetDefaultObj();

	void PopUpCallback(const class FString& ID, class UObject* Object, const class FString& ButtonID, enum class EPopupResponse Response);
};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGGameSettingAction_DLC_OST
class UGGGameSettingAction_DLC_OST : public UGGGameSettingAction
{
public:

	static class UClass* StaticClass();
	static class UGGGameSettingAction_DLC_OST* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGGameSettingAction_AutoDetectGraphicsSettings
class UGGGameSettingAction_AutoDetectGraphicsSettings : public UGGGameSettingAction
{
public:

	static class UClass* StaticClass();
	static class UGGGameSettingAction_AutoDetectGraphicsSettings* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGGameSettingAction_TextLanguage
class UGGGameSettingAction_TextLanguage : public UGGGameSettingAction
{
public:

	static class UClass* StaticClass();
	static class UGGGameSettingAction_TextLanguage* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGGameSettingAction_EnableVoiceChat
class UGGGameSettingAction_EnableVoiceChat : public UGGGameSettingAction
{
public:

	static class UClass* StaticClass();
	static class UGGGameSettingAction_EnableVoiceChat* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGGameSettingAction_SetDemoMode
class UGGGameSettingAction_SetDemoMode : public UGGGameSettingAction
{
public:

	static class UClass* StaticClass();
	static class UGGGameSettingAction_SetDemoMode* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Goat2.GGGameSettingEnableCondition
class UGGGameSettingEnableCondition : public UObject
{
public:
	FMulticastInlineDelegateProperty_            EvaluateActiveStatus;                              // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGGameSettingEnableCondition* GetDefaultObj();

	bool ShouldSettingBeActive(class UGGGameSettingOptionUserWidget* InUserWidget);
	void OnWidgetDestroyed(class UGGGameSettingOptionUserWidget* InUserWidget);
	void OnWidgetConstructed(class UGGGameSettingOptionUserWidget* InUserWidget);
};

// 0x8 (0x40 - 0x38)
// Class Goat2.GGGameSettingEnableCondition_Resolution
class UGGGameSettingEnableCondition_Resolution : public UGGGameSettingEnableCondition
{
public:
	uint8                                        Pad_1C29[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGameSettingEnableCondition_Resolution* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class Goat2.GGGameSettingEnableCondition_IsNotEditor
class UGGGameSettingEnableCondition_IsNotEditor : public UGGGameSettingEnableCondition
{
public:

	static class UClass* StaticClass();
	static class UGGGameSettingEnableCondition_IsNotEditor* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class Goat2.GGGameSettingEnableCondition_NetworkSetting
class UGGGameSettingEnableCondition_NetworkSetting : public UGGGameSettingEnableCondition
{
public:
	uint8                                        Pad_1C2B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGameSettingEnableCondition_NetworkSetting* GetDefaultObj();

	void OnSessionProcessComplete(bool bSuccess);
	void OnNetworkSettingChanged(struct FGGGameSetting* NetworkSetting, enum class EGGGameSettingChangeContext InContext);
};

// 0x68 (0x370 - 0x308)
// Class Goat2.GGGameSettingOptionUserWidget
class UGGGameSettingOptionUserWidget : public UGGUserWidget
{
public:
	FMulticastInlineDelegateProperty_            OnSettingsRequireApply;                            // 0x308(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	bool                                         bCountCommitAsInstant;                             // 0x318(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C3A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  NavigateLeftAction;                                // 0x31C(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  NavigateRightAction;                               // 0x324(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  SelectAction;                                      // 0x32C(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGGGameSettingHandle                  SettingHandle;                                     // 0x334(0x14)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGSettingsTabMenuUserWidget*          ParentSettingTab;                                  // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C3B[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGameSettingOptionUserWidget* GetDefaultObj();

	void Setup(const struct FGGGameSettingHandle& InSettingHandle, class UGGSettingsTabMenuUserWidget* InParentSettingTab);
	void SetSettingValueByIndex(int32 OptionIndex);
	void SetSettingValueAsString(const class FString& NewValue);
	void SetSettingValueAsFloat(float NewValue);
	void RunSettingAction();
	void RevertUnChangedSettings();
	void ResetToDefault();
	void RefreshOption();
	bool OnToggleOption();
	void OnSettingRequireApply(class UGGGameSettingOptionUserWidget* ThisSettingWidget);
	void OnOtherSettingsValueChanged(struct FGGGameSetting* OtherSetting, enum class EGGGameSettingChangeContext InContext);
	void OnInitializeOption(const class FString& NewValue);
	void OnEvaluateActiveStatusRequested();
	int32 NavigateOptions(int32 CurrentIndex, int32 Direction, bool bWrap);
	bool IsDefaultValue();
	float GetValueTextFactor();
	class FString GetValueForOptionIndex(int32 OptionIndex);
	class FString GetUnAppliedSettingValue();
	class FText GetTooltipText();
	class FString GetSettingValueAsString(bool bIncludeValueTextFactor);
	int32 GetSettingValueAsInt(bool bIncludeValueTextFactor);
	float GetSettingValueAsFloat(bool bIncludeValueTextFactor);
	bool GetSettingValueAsBool();
	float GetSettingStepSizeMouse();
	float GetSettingStepSize();
	class FName GetSettingName();
	int32 GetOptionIndexForCurrentValue();
	int32 GetNumAvailableOptions();
	float GetMinSettingValue(bool bIncludeValueTextFactor);
	float GetMaxSettingValue(bool bIncludeValueTextFactor);
	int32 GetMaxFractionalDigits();
	float GetDefaultValueAsFloat();
	TArray<struct FGGSettingOption> GetAvailableOptions();
	enum class EGGGameSettingApplyMode GetApplyMode();
	void ApplySetting();
};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGGameSettingsBlueprintLibrary
class UGGGameSettingsBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UGGGameSettingsBlueprintLibrary* GetDefaultObj();

	float SettingToFloat(struct FGGGameSetting& InSetting);
	bool SettingToBool(struct FGGGameSetting& InSetting);
	class FString GetSettingValueAsString(class FName SettingName, class FName SettingCategory, int32 OwningPlayerID, bool bIncludeValueTextFactor);
	int32 GetSettingValueAsInt(class FName SettingName, class FName SettingCategory, int32 OwningPlayerID, bool bIncludeValueTextFactor);
	float GetSettingValueAsFloat(class FName SettingName, class FName SettingCategory, int32 OwningPlayerID, bool bIncludeValueTextFactor);
	bool GetSettingValueAsBool(class FName SettingName, class FName SettingCategory, int32 OwningPlayerID);
};

// 0x188 (0x408 - 0x280)
// Class Goat2.GGGameState
class AGGGameState : public AGameStateBase
{
public:
	uint8                                        Pad_1C48[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGPlayerGameManager*                  PlayerGameManager;                                 // 0x288(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AGGPlayerGameManager>    PlayerGameManagerClass;                            // 0x290(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWorldStats                           WorldStats;                                        // 0x2B8(0x20)(Net, RepNotify, NativeAccessSpecifierPublic)
	struct FTimecode                             SavedServerPlaytime;                               // 0x2D8(0x14)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                 CurrentWorldIdentifier;                            // 0x2EC(0x10)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C49[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<uint8, TSoftObjectPtr<class UMaterialInstance>> GlobalPlayerColorMaterials;                        // 0x300(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                        PublicDemoDuration;                                // 0x350(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PressDemoDuration;                                 // 0x354(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimerHandle                          PublicDemoTimerHandle;                             // 0x358(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FLinearColor>                  DefaultPlayerColors;                               // 0x360(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UGGPropStateManager*                   PropStateManager;                                  // 0x370(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1C4A[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGBossLevelMediaSoundListener*        BossLevelMediaSoundListener;                       // 0x390(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        DurationAfterServerStartForClientIntro;            // 0x398(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldClientsPlayIntro;                           // 0x39C(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1C4B[0xB];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGGoatGearList*                       DisabledGear;                                      // 0x3A8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FGGQuest_GearListPair>         EnableGearAfterEventCompletion;                    // 0x3B0(0x10)(Edit, Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FGGFact_GearListPair>          EnableGearIfFactIsTrue;                            // 0x3C0(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class AGGCastleStretchGoal*                  CurrentlyActiveStretchGoal;                        // 0x3D0(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FReplicatedStretchGoalState>   ReplicatedStretchGoalStates;                       // 0x3D8(0x10)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	TArray<struct FCurrentGatherEvent>           ClientCurrentGatherEvents;                         // 0x3E8(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FGameplayTag>                  ClientUsedInviteTags;                              // 0x3F8(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AGGGameState* GetDefaultObj();

	void UpdateTelemetrySystem();
	void UpdatePlayerLocationInfo();
	void SkipIntro();
	bool ShouldClientsPlayIntro();
	void OnRep_WorldStats();
	void OnRep_SavedServerPlaytime();
	void OnRep_ReplicatedStretchGoalStates();
	void OnQuestCompleted(class AGGQuestBase* Quest, class AGGPlayerState* OptionalPlayerState);
	void OnLoggedInAndCheckedOwnership();
	void OnDemoTimerExpire();
	bool IsPlayerColorAvailable(int32 Index, class AGGPlayerState* PlayerState, int32* SetIndex);
	void InitPlayerLocationInfoTimer();
	bool HasMultiplePlayers();
	TArray<int32> GetTakenColorIndices(class AGGPlayerState* InPlayerState);
	float GetServerWorldTimeSecondsDelta();
	int32 GetRandomAvailiableColor();
	class FString GetPlayerName(class AActor* Player);
	struct FLinearColor GetPlayerColor(class AActor* Player);
	bool GetIsDemoPressMode();
	TArray<class AGGPlayerState*> GetGGPlayerStates();
	struct FLinearColor GetDefaultPlayerColor(int32 Index, bool bWithColorBlindness);
	float GetAccurateServerWorldTimeSecondsDelta();
	float GetAccurateServerWorldTimeSeconds();
	void DisableClientPlayIntro();
	struct FLinearColor ApplyColorBlindness(const struct FLinearColor& InColor);
};

// 0x3F00 (0x4020 - 0x120)
// Class Goat2.GGGameUserSettings
class UGGGameUserSettings : public UGameUserSettings
{
public:
	struct FGGGeneralSettings                    GeneralSettings;                                   // 0x120(0xB60)(ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FGGGraphicsSettings                   GraphicsSettings;                                  // 0xC80(0x2B40)(ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FGGAudioSettings                      AudioSettings;                                     // 0x37C0(0x7A0)(ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            ApplyUnSavedSettings;                              // 0x3F60(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            RevertUnSavedSettings;                             // 0x3F70(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            ResetActiveSettingsTab;                            // 0x3F80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSettingsSaved;                                   // 0x3F90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class UGGInputBindingsSaveGame*              InputMappingSaveGame;                              // 0x3FA0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGPreferencesSaveGame*                PreferencesSaveGame;                               // 0x3FA8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C5A[0x70];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGameUserSettings* GetDefaultObj();

	void SetNetworkSetting(bool bWantsToBeOnline, bool bSaveWithoutApplying);
	void SetFrameRateLimit_Always(float NewLimitFPS);
	void RequestUIUpdateBlueprint();
	void RemoveDelegateFromOnSettingApplied(const struct FGGDelegateHandleWrapper& InHandle, const struct FGameplayTag& InSetting);
	void OnScalabilitySettingApplied(struct FGGGameSetting* InSetting);
	void OnCharacterModelQualityChanged(struct FGGGameSetting* InSetting);
	void OnAudioSettingChanged(struct FGGGameSetting* InSetting);
	void LogInputBindings(int32 PlayerIndex);
	TArray<struct FGGGameSettingHandle> GetRelevantSettingHandlesInCategoryForPlayer(class FName CategoryName, class UGGLocalPlayer* LocalPlayer);
	TArray<class FName> GetRelevantCategoriesForPlayer(class UGGLocalPlayer* LocalPlayer);
	struct FVector2D GetCameraInputSensitivity(class AGGPlayerController* PlayerController);
	TArray<struct FGGGameSettingHandle> GetAllSettingHandlesInCategory(class FName CategoryName, class UGGLocalPlayer* LocalPlayer);
	TArray<class FName> GetAllCategoryNames(class UGGLocalPlayer* LocalPlayer);
	class UGGGameUserSettings* Get();
	struct FGGDelegateHandleWrapper BindDelegateToOnSettingApplied(FDelegateProperty_ InDelegate, const struct FGameplayTag& InSetting, class UObject* PlayerReference);
	void ApplyScalabilitySettings();
};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGGameUserSettingsSaveGame
class UGGGameUserSettingsSaveGame : public USaveGame
{
public:

	static class UClass* StaticClass();
	static class UGGGameUserSettingsSaveGame* GetDefaultObj();

};

// 0x50 (0x78 - 0x28)
// Class Goat2.GGPreferencesSaveGame
class UGGPreferencesSaveGame : public UGGGameUserSettingsSaveGame
{
public:
	TMap<struct FGGGameSettingHandle, class FString> Preferences;                                       // 0x28(0x50)(Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGGPreferencesSaveGame* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Goat2.GGInputBindingsSaveGame
class UGGInputBindingsSaveGame : public UGGGameUserSettingsSaveGame
{
public:
	TArray<struct FGGPlayerInputMappings>        InputMappings;                                     // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGInputBindingsSaveGame* GetDefaultObj();

};

// 0x40 (0x68 - 0x28)
// Class Goat2.GGGameVersion
class UGGGameVersion : public UObject
{
public:
	class FString                                BuildCL;                                           // 0x28(0x10)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                BuildDate;                                         // 0x38(0x10)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                BuildName;                                         // 0x48(0x10)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SentryEnvironment;                                 // 0x58(0x10)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGGameVersion* GetDefaultObj();

	enum class EGameVersion Get();
};

// 0x60 (0x3C8 - 0x368)
// Class Goat2.GGGameViewportClient
class UGGGameViewportClient : public UGameViewportClient
{
public:
	FMulticastInlineDelegateProperty_            OnKeyInput;                                        // 0x368(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C5F[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGameViewportClient* GetDefaultObj();

	void OnConsoleActivationStateChanged(bool bActive);
};

// 0x148 (0x378 - 0x230)
// Class Goat2.GGGardenerPlant
class AGGGardenerPlant : public AActor
{
public:
	FMulticastInlineDelegateProperty_            OnPlantGrown;                                      // 0x230(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlantFertilized;                                 // 0x240(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        TimeToGrowInSeconds;                               // 0x250(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DelayBetweenGrow;                                  // 0x254(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AddedGrowingRotation;                              // 0x258(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EEasingFunc                       GrowAnimationEaseFunction;                         // 0x25C(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C62[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        OffsetSpawnLocation;                               // 0x260(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxGrowFromBaaDistance;                            // 0x264(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanGrowFromBaa;                                   // 0x268(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bLimitMaxNumberOfPlantInstances;                   // 0x269(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C63[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxAmountOfInstancesGear;                          // 0x26C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxAmountOfInstancesEvent;                         // 0x270(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsPlantFromEvent;                                 // 0x274(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C64[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PlayerDistanceForNoCullingSqrd;                    // 0x278(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C65[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       SpawnPlantParticles;                               // 0x280(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       GrowPlantParticles;                                // 0x288(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundCue*                             GardenerPlantSpawnSound;                           // 0x290(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundCue*                             GardenerPlantGrowSound;                            // 0x298(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        InstinctGrowAmount;                                // 0x2A0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C66[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       RootLocation;                                      // 0x2A8(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       PlantAttachment;                                   // 0x2B0(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  DirtPile;                                          // 0x2B8(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  Sprout;                                            // 0x2C0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInstancedStaticMeshComponent*         PlantMeshComponent;                                // 0x2C8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        InstancesPlaced;                                   // 0x2D0(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1C67[0x94];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsFertilized;                                     // 0x368(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1C68[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGGardenerPlant* GetDefaultObj();

	void ShowDebugInfo();
	void PlayScaleSproutTimeline();
	void OnRep_IsFertilized();
	void OnRep_InstancesPlaced();
	void OnBaaingToPlant(class AGGGoat* Goat);
	void FertilizePlant();
	void CullingToggle();
};

// 0x10 (0x2E0 - 0x2D0)
// Class Goat2.GGGardenerSeed
class AGGGardenerSeed : public AGGPhysicsProjectile
{
public:
	TSubclassOf<class AGGGardenerPlant>          GardenderClass;                                    // 0x2D0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AGGGardenerPlant*                      Plant;                                             // 0x2D8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AGGGardenerSeed* GetDefaultObj();

	void OnSpawnSeed();
	void OnHitNothing(const struct FVector_NetQuantize& HitLocation);
};

// 0x48 (0xA8 - 0x60)
// Class Goat2.GGGatherGoatsSubsystem
class UGGGatherGoatsSubsystem : public UGGWorldSubsystem
{
public:
	FMulticastInlineDelegateProperty_            OnGatherEventGoatsUpdated;                         // 0x60(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnAllGoatsGathered;                                // 0x70(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FCurrentGatherEvent>           CurrentGatherEvents;                               // 0x80(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1C82[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGTeleportSettingsDataAsset*          DefaultTeleportSettings;                           // 0xA0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGGatherGoatsSubsystem* GetDefaultObj();

	void OnPlayerLoggedOut(class APlayerController* LeavingPlayerController);
	void OnPlayerLoggedIn(class APlayerController* NewPlayerController);
	bool HasGatherEventWithID(const class FString& GatherID);
	void GoatReachedLocation(const class FString& GatherID, class AGGPlayerState* Player);
	void GoatLeftLocation(const class FString& GatherID, class AGGPlayerState* Player);
	TArray<class AGGPlayerState*> GetPlayersAtTarget(const class FString& GatherID);
	bool GatherAllGoats(const class FString& GatherID, class AGGPlayerState* InvitingPlayer, const struct FGatherGoatParameters& GatherParameters, const struct FInviteNotificationParameters& InviteNotificationParameters, bool bShowGoatCountNotification, const struct FCountNotificationParameters& CountNotificationParameters);
	void CancelGatherGoats(const class FString& GatherID, bool bRemoveAllInvites);
};

// 0x90 (0x440 - 0x3B0)
// Class Goat2.GGGearAbility
class UGGGearAbility : public UGameplayAbility
{
public:
	struct FGameplayTagContainer                 PreloadCues;                                       // 0x3B0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C87[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EAbilityInput                     ActivationInput;                                   // 0x3D2(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C88[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       GearPart;                                          // 0x3D8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULSCharacterMovementComponent*         OwnerMovementComponent;                            // 0x3E0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FStartleDetailsSettings               StartleSettings;                                   // 0x3E8(0x50)(Edit, Protected, NativeAccessSpecifierProtected)
	class AGGGoat*                               GoatOwnerInternal;                                 // 0x438(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGGearAbility* GetDefaultObj();

	void Unequipped();
	void TickAbility(float DeltaTime, class AGGGoat* Goat);
	void OnOwnerStopRagdolling(bool bRagdollOnGround, class ULSCharacterMovementComponent* MovementComp, class ACharacter* OwnerCharacter, struct FRagdollStateChangeSettings& StateChangeSettings);
	void OnOwnerRagdolling(class ULSCharacterMovementComponent* MovementComp, class ACharacter* OwnerCharacter, struct FRagdollStateChangeSettings& StateChangeSettings);
	class AGGGoat* GetGoatOwner();
};

// 0x60 (0x4A0 - 0x440)
// Class Goat2.GGGearAbility_Abominana
class UGGGearAbility_Abominana : public UGGGearAbility
{
public:
	float                                        MaxChargeTime;                                     // 0x440(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HoldTimeAtMaxCharge;                               // 0x444(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinProjectileLaunchPitchAngle;                     // 0x448(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxProjectileLaunchPitchAngle;                     // 0x44C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinProjectileSize;                                 // 0x450(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxProjectileSize;                                 // 0x454(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                           SmallProjectileMesh;                               // 0x458(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                           BigProjectileMesh;                                 // 0x460(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            ChargingSound;                                     // 0x468(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ChargePercentageToBigProjectile;                   // 0x470(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C8C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AGGAbominanaGoo>           GooProjectileClass;                                // 0x478(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C8D[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponent*                SkelMeshComp;                                      // 0x490(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAudioComponent*                       ChargingSoundComp;                                 // 0x498(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGGearAbility_Abominana* GetDefaultObj();

	class USkeletalMeshComponent* GetGoatMesh();
};

// 0x10 (0x450 - 0x440)
// Class Goat2.GGGearAbility_AntiGravityBoots
class UGGGearAbility_AntiGravityBoots : public UGGGearAbility
{
public:
	TSubclassOf<class UGameplayEffect>           GravityGameplayEffect;                             // 0x440(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C8E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_AntiGravityBoots* GetDefaultObj();

};

// 0x10 (0x450 - 0x440)
// Class Goat2.GGGearAbility_Architect
class UGGGearAbility_Architect : public UGGGearAbility
{
public:
	class UGGGoatGear_Static_Architect*          HatComponent;                                      // 0x440(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bShowDebug;                                        // 0x448(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C8F[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_Architect* GetDefaultObj();

};

// 0x38 (0x478 - 0x440)
// Class Goat2.GGGearAbility_BananaHat
class UGGGearAbility_BananaHat : public UGGGearAbility
{
public:
	TSubclassOf<class AActor>                    BananaProjectileClass;                             // 0x440(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BananaShootVelocity;                               // 0x448(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BananaShootRandomRotationVelocity;                 // 0x44C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BananaShootPitchAngle;                             // 0x450(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BananaShootRandomPitchAngle;                       // 0x454(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BananaSpawnOffset;                                 // 0x458(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxSpawnedBananas;                                 // 0x45C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShootAtRandomDirection;                           // 0x460(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C90[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        SpawnedBananas;                                    // 0x468(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGGearAbility_BananaHat* GetDefaultObj();

};

// 0x18 (0x458 - 0x440)
// Class Goat2.GGGearAbility_Barber
class UGGGearAbility_Barber : public UGGGearAbility
{
public:
	TSubclassOf<class AGGPhysicsProjectile>      BlowdryerProjectileClass;                          // 0x440(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ShootPitchAngle;                                   // 0x448(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ProjectileSpawnerSocket;                           // 0x44C(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C91[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_Barber* GetDefaultObj();

};

// 0xB0 (0x4F0 - 0x440)
// Class Goat2.GGGearAbility_Brainiac
class UGGGearAbility_Brainiac : public UGGGearAbility
{
public:
	TSubclassOf<class AGGBrainWave>              BrainWaveClass;                                    // 0x440(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FizzleParticleUpwardOffset;                        // 0x448(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FizzleParticleForwardOffset;                       // 0x44C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ConfusedParticleUpwardOffset;                      // 0x450(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ConfusedParticleForwardOffset;                     // 0x454(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AngryParticleUpwardOffset;                         // 0x458(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AngryParticleForwardOffset;                        // 0x45C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimationAsset*                       IdleAnimation;                                     // 0x460(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimationAsset*                       BeamingAnimation;                                  // 0x468(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimationAsset*                       FailAnimation;                                     // 0x470(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FailAnimationTime;                                 // 0x478(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C94[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            FailSound;                                         // 0x480(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            NPCStopInflationSound;                             // 0x488(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            DeactivationSound;                                 // 0x490(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       FizzleParticle;                                    // 0x498(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       ConfusedParticle;                                  // 0x4A0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       AngryParticle;                                     // 0x4A8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AGGBrainWave*                          BrainWave;                                         // 0x4B0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                SkelMeshComp;                                      // 0x4B8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              ConfusedParticleComponent;                         // 0x4C0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              FizzleParticleComponent;                           // 0x4C8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              AngryParticleComponent;                            // 0x4D0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1C96[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_Brainiac* GetDefaultObj();

};

// 0x28 (0x468 - 0x440)
// Class Goat2.GGGearAbility_BugsBunny
class UGGGearAbility_BugsBunny : public UGGGearAbility
{
public:
	class UParticleSystem*                       ImpactParticle;                                    // 0x440(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            ImpactSound;                                       // 0x448(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    GlitchMaterial;                                    // 0x450(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               EffectLocationOffset;                              // 0x458(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RandomOffsetDistance;                              // 0x464(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGGGearAbility_BugsBunny* GetDefaultObj();

	void PlayHitEffectServer(class AGGGoat* Goat, class AActor* HitActor);
	void PlayHitEffects(class AGGGoat* Goat, class AActor* HitActor);
	void PlayHitEffectMultiCast(class AGGGoat* Goat, class AActor* HitActor);
};

// 0x10 (0x450 - 0x440)
// Class Goat2.GGGearAbility_CameraGoat
class UGGGearAbility_CameraGoat : public UGGGearAbility
{
public:
	TSubclassOf<class AGGCameraGoatGearCamera>   CameraClass;                                       // 0x440(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGCameraGoatGearCamera*               CameraActor;                                       // 0x448(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGGearAbility_CameraGoat* GetDefaultObj();

	void OnRep_CameraActor();
};

// 0x18 (0x458 - 0x440)
// Class Goat2.GGGearAbility_Centurion
class UGGGearAbility_Centurion : public UGGGearAbility
{
public:
	float                                        EffectRadius;                                      // 0x440(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          NPCProximityNotifyType;                            // 0x444(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          GameplayCue;                                       // 0x44C(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C99[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_Centurion* GetDefaultObj();

};

// 0xC8 (0x508 - 0x440)
// Class Goat2.GGGearAbility_ChristmasLights
class UGGGearAbility_ChristmasLights : public UGGGearAbility
{
public:
	class FName                                  GearMuzzleSocket;                                  // 0x440(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AGGChristmasLightsSpline>  SplineClass;                                       // 0x448(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxDistanceBeforeBreaking;                         // 0x450(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxSplineCount;                                    // 0x454(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartPointWallOffset;                              // 0x458(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EndPointsWallOffset;                               // 0x45C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CableWheelCircumference;                           // 0x460(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C9C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       ReticleParticleTemplate;                           // 0x468(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       RemoveSplineReticleParticleTemplate;               // 0x470(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          LaunchGameplayCue;                                 // 0x478(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          FailedLaunchGameplayCue;                           // 0x480(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          BrakeCableGameplayCue;                             // 0x488(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          CableReelingGameplayCue;                           // 0x490(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TraceDistance;                                     // 0x498(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               TraceStartLocationOffset;                          // 0x49C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              TraceRotatorOffset;                                // 0x4A8(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	enum class ECollisionChannel                 TraceChannel;                                      // 0x4B4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C9E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxDotProductForAligningReticleToPlayer;           // 0x4B8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReticlePlacementDistanceAboveSurface;              // 0x4BC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCannonFired;                                     // 0x4C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AGGChristmasLightsSpline*              CurrentSplineActor;                                // 0x4D0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AEmitter*                              ReticleEmitterActor;                               // 0x4D8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AEmitter*                              RemoveSplineReticleEmitterActor;                   // 0x4E0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGGoatGear_Skel_ChristmasLights*      GearMeshComp;                                      // 0x4E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AGGChristmasLightsSpline*>      SpawnedSplines;                                    // 0x4F0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C9F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_ChristmasLights* GetDefaultObj();

	void ServerPlaceSpline(const struct FVector& InStartPosition, const struct FVector& SurfaceNormal);
	void ServerPlaceCurrentSplineEndPosition(const struct FVector& EndPosition, const struct FVector& SurfaceNormal);
	void ServerDestroySpline(class AGGChristmasLightsSpline* TargetSpline);
	void ServerDestroyCurrentSpline();
	struct FTransform GetGearMuzzleTransform();
	bool DoTargetTrace(struct FHitResult* OutResult);
};

// 0xD0 (0x510 - 0x440)
// Class Goat2.GGGearAbility_Commander
class UGGGearAbility_Commander : public UGGGearAbility
{
public:
	TSubclassOf<class AGGCommanderTargeter>      CommanderTargeterClass;                            // 0x440(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AGGCommanderNPCTarget>     NPCTargetClass;                                    // 0x448(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PitchIncrease;                                     // 0x450(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TraceLength;                                       // 0x454(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinDistance;                                       // 0x458(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1CA4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       SelectedNPCParticle;                               // 0x460(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SelectedNPCParticleLocation;                       // 0x468(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1CA5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGGoat*                               CommanderGoat;                                     // 0x478(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCommanderSoundPairing>        CommandSoundPairings;                              // 0x480(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ForceLoveInstinctTag;                              // 0x490(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ForceHateInstinctTag;                              // 0x498(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AGGCommanderTargeter*                  CommanderTargeter;                                 // 0x4A0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGNPC*                                SelectedNPC;                                       // 0x4A8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              SelectedNPCParticleComp;                           // 0x4B0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class AGGNPC*, class AGGCommanderNPCTarget*> NPCTargeters;                                      // 0x4B8(0x50)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_1CA6[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_Commander* GetDefaultObj();

	void ServerPerformNPCTask(class AGGNPC* NPC, const struct FVector_NetQuantize& TargetLocation, class AActor* TargetActor);
	void SelectedNPCCleared();
	void NPCSelected(class AGGNPC* NPC);
	void NPCCommandGiven(class AGGNPC* NPC);
	struct FCommanderSoundPairing GetRandomSoundPairing();
};

// 0x8 (0x448 - 0x440)
// Class Goat2.GGGearAbility_DamageHat
class UGGGearAbility_DamageHat : public UGGGearAbility
{
public:
	float                                        Range;                                             // 0x440(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Power;                                             // 0x444(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGGearAbility_DamageHat* GetDefaultObj();

};

// 0x38 (0x478 - 0x440)
// Class Goat2.GGGearAbility_DareDevil
class UGGGearAbility_DareDevil : public UGGGearAbility
{
public:
	float                                        DelayBeforeEndAbility;                             // 0x440(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GroundCheckDistance;                               // 0x444(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CloseToGroundJumpForce;                            // 0x448(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        JumpForce;                                         // 0x44C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LaunchForceXY;                                     // 0x450(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LaunchAmplitude;                                   // 0x454(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UCameraShakeBase>          LanchCameraShake;                                  // 0x458(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ParticleYawOffset;                                 // 0x460(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CameraShakeSize;                                   // 0x464(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1CA8[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_DareDevil* GetDefaultObj();

	struct FRotator GetParticleRotation();
};

// 0x10 (0x450 - 0x440)
// Class Goat2.GGGearAbility_DerpGun
class UGGGearAbility_DerpGun : public UGGGearAbility
{
public:
	TSubclassOf<class AGGPhysicsProjectile>      DerpGunBulletClass;                                // 0x440(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ProjectileSpawnerSocket;                           // 0x448(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGGearAbility_DerpGun* GetDefaultObj();

};

// 0x50 (0x490 - 0x440)
// Class Goat2.GGGearAbility_DevilHorns
class UGGGearAbility_DevilHorns : public UGGGearAbility
{
public:
	TSubclassOf<class AActor>                    ForceActor;                                        // 0x440(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DistanceFromGoat;                                  // 0x448(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1CAA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            ActivationSound;                                   // 0x450(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            DeactivationSound;                                 // 0x458(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            LoopingSound;                                      // 0x460(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       StopAbilityParticle;                               // 0x468(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGGoatGear_Static_DemonMask*          DemonMaskGear;                                     // 0x470(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                SpawnedForceActor;                                 // 0x478(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGGRadialForceComponent*               ForceComp;                                         // 0x480(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAudioComponent*                       AudioComponent;                                    // 0x488(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGGearAbility_DevilHorns* GetDefaultObj();

};

// 0x0 (0x440 - 0x440)
// Class Goat2.GGGearAbility_DrumKit
class UGGGearAbility_DrumKit : public UGGGearAbility
{
public:

	static class UClass* StaticClass();
	static class UGGGearAbility_DrumKit* GetDefaultObj();

};

// 0x8 (0x448 - 0x440)
// Class Goat2.GGGearAbility_EggThrow
class UGGGearAbility_EggThrow : public UGGGearAbility
{
public:
	TSubclassOf<class UGGGoatAbility>            LickOverrideAbility;                               // 0x440(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGGGearAbility_EggThrow* GetDefaultObj();

	void OnOwnerPreScaled(bool bIsBeingCatched);
	void OnOwnerEnteredVehicle(class AGGCharacter* Character, class AGGVehicle* Vehicle);
	void OnOwnerCatched(class AActor* CatchedActor, class AActor* Catcher);
	void MulticastEatActor(class AActor* EatenActor, class AGGGoat* Goat, const struct FGGCatchOptions& Options);
	class UGGGoatGear_Static_EggSaddle* GetEggSaddle(class AGGGoat* Goat);
	void ForceReleaseCatchedActor();
	bool CanThrow(class AGGGoat* Goat, class UGGGoatGear_Static_EggSaddle* EggSaddle);
	bool CanEat(class AGGGoat* Goat, class UGGGoatGear_Static_EggSaddle* EggSaddle);
};

// 0x10 (0x450 - 0x440)
// Class Goat2.GGGearAbility_ElectricLaunch
class UGGGearAbility_ElectricLaunch : public UGGGearAbility
{
public:
	float                                        LaunchVelocity;                                    // 0x440(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         SpreadElectricity;                                 // 0x444(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1CB4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SpreadRadius;                                      // 0x448(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1CB5[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_ElectricLaunch* GetDefaultObj();

};

// 0x88 (0x4C8 - 0x440)
// Class Goat2.GGGearAbility_ElfHat
class UGGGearAbility_ElfHat : public UGGGearAbility
{
public:
	TSoftClassPtr<class AGGElfHat_Snowball>      SnowballClass;                                     // 0x440(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          LaunchGameplayCue;                                 // 0x468(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        VerticalLaunchAngleOffset;                         // 0x470(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1CB7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<TSoftObjectPtr<class UGGAlternativeGoatDataAsset>, float> AltGoatAngleOffsets;                               // 0x478(0x50)(Edit, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGGGearAbility_ElfHat* GetDefaultObj();

};

// 0x100 (0x540 - 0x440)
// Class Goat2.GGGearAbility_FarmerBuilder
class UGGGearAbility_FarmerBuilder : public UGGGearAbility
{
public:
	TSubclassOf<class AGGFarmerGearBuilding>     Building;                                          // 0x440(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          RotateCue;                                         // 0x448(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          SwitchBuildingCue;                                 // 0x450(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          SpawnBuildingCue;                                  // 0x458(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          BuildCue;                                          // 0x460(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          OnOffCue;                                          // 0x468(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            LoopingActivatedSound;                             // 0x470(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    HolograficMaterial;                                // 0x478(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BlockRotationDegree;                               // 0x480(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ZStartPointOffset;                                 // 0x484(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ZEndPointOffset;                                   // 0x488(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BuildingForwardOffset;                             // 0x48C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UStaticMesh*>                   Structures;                                        // 0x490(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                         bShowDebugLine;                                    // 0x4A0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1CBE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGGoat*                               GoatRef;                                           // 0x4A8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGFarmerGearBuilding*                 StructureMeshActor;                                // 0x4B0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1CBF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UMaterialInterface*>            OriginalMaterials;                                 // 0x4C0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class AStaticMeshActor*                      HologramBuilding;                                  // 0x4D0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1CC1[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGGoatGear_Scene_AltGoat_Farmer*      FarmerGear;                                        // 0x4E8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGFarmerGearBuilding*                 SpawnedBuilding;                                   // 0x4F0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMesh*                           BuildingMesh;                                      // 0x4F8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTransform                            BuildingTransform;                                 // 0x500(0x30)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	class UAudioComponent*                       ActivatingAudioComponent;                          // 0x530(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1CC2[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_FarmerBuilder* GetDefaultObj();

	void SpawnHologramStructure(class UStaticMesh* Mesh);
	void ServerCreateBuilding(class UStaticMesh* INBuildingMesh, const struct FTransform& INBuildingTransform);
	void RotateStructure(class AGGGoat* Goat);
	void ChangeStructure(class AGGGoat* Goat);
	void BuildStructure(class AGGGoat* Goat);
};

// 0x0 (0x440 - 0x440)
// Class Goat2.GGGearAbility_FireHat
class UGGGearAbility_FireHat : public UGGGearAbility
{
public:

	static class UClass* StaticClass();
	static class UGGGearAbility_FireHat* GetDefaultObj();

	void GoatHeadbuttedActor(class AGGGoat* Goat, class AActor* HeadbuttedActor);
	void GoatHeadbutted(class AGGGoat* Goat, bool bHitSomething, TArray<class AActor*>& HeadbuttedActors, bool bIsChargeHeadbutt);
};

// 0x28 (0x468 - 0x440)
// Class Goat2.GGGearAbility_FlymanHead
class UGGGearAbility_FlymanHead : public UGGGearAbility
{
public:
	class UParticleSystem*                       ParticleSystem;                                    // 0x440(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            ImpactSound;                                       // 0x448(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPlayEffectsAttached;                              // 0x450(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1CCA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               Offset;                                            // 0x454(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RandomOffsetDistance;                              // 0x460(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1CCB[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_FlymanHead* GetDefaultObj();

	void PlayHitEffectServer(class AGGGoat* Goat, class AActor* HitActor);
	void PlayHitEffects(class AGGGoat* Goat, class AActor* HitActor);
	void PlayHitEffectMultiCast(class AGGGoat* Goat, class AActor* HitActor);
};

// 0x48 (0x488 - 0x440)
// Class Goat2.GGGearAbility_Gardener
class UGGGearAbility_Gardener : public UGGGearAbility
{
public:
	TSubclassOf<class AGGGardenerPlant>          GardenderClass;                                    // 0x440(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AGGGardenerSeed>           GardenderSeedClass;                                // 0x448(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootPitchAngle;                                   // 0x450(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ProjectileSpawnerSocket;                           // 0x454(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1CCC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGGoatGear_Static_Gardener*           GardenerComponent;                                 // 0x460(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ReloadTag;                                         // 0x468(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AGGGardenerSeed*                       Seed;                                              // 0x470(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAbilitySystemComponent*               AbilityComp;                                       // 0x478(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1CCE[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_Gardener* GetDefaultObj();

};

// 0x8 (0x448 - 0x440)
// Class Goat2.GGGearAbility_Genius
class UGGGearAbility_Genius : public UGGGearAbility
{
public:
	bool                                         bNotifyNPCs;                                       // 0x440(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1CCF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        NotifyRadius;                                      // 0x444(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGGearAbility_Genius* GetDefaultObj();

};

// 0xB8 (0x4F8 - 0x440)
// Class Goat2.GGGearAbility_GhostMovieProp
class UGGGearAbility_GhostMovieProp : public UGGGearAbility
{
public:
	float                                        CooldownTime;                                      // 0x440(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1CD4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AGGGhost>                  GhostType;                                         // 0x448(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGhostParameters                      GhostParameters;                                   // 0x450(0x1C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1CD5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       ActivationParticle;                                // 0x470(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            ActivationSound;                                   // 0x478(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          AnimationCue;                                      // 0x480(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AGGGhost*>                      SpawnedGhosts;                                     // 0x488(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TMap<class AGGNPC*, uint32>                  PossessedNpcs;                                     // 0x498(0x50)(NativeAccessSpecifierPrivate)
	class UGGGoatGear_Static_GhostMovieProp*     GhostMoviePropMesh;                                // 0x4E8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1CD6[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_GhostMovieProp* GetDefaultObj();

	void MulticastActivationEffects();
	bool GhostUnpossessedNpc(class AGGGhost* Ghost);
	void GhostPossessedAnNpc(class AGGGhost* Ghost);
};

// 0x40 (0x480 - 0x440)
// Class Goat2.GGGearAbility_GoatQueen
class UGGGearAbility_GoatQueen : public UGGGearAbility
{
public:
	TSubclassOf<class AGGNPC_Animal>             GoatGuardClass;                                    // 0x440(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxGuardsSpawned;                                  // 0x448(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1CD9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            GuardDespawnSound;                                 // 0x450(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       GuardDespawnParticle;                              // 0x458(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPoolNPCsWhenUnequipped;                           // 0x460(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1CDA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          GameplayCueActivateAbility;                        // 0x464(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1CDB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AGGNPC_Animal*>                 SpawnedGuards;                                     // 0x470(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGGearAbility_GoatQueen* GetDefaultObj();

	void BP_OnDespawnGuard(class AGGNPC* GuardToBeRemoved);
};

// 0x100 (0x540 - 0x440)
// Class Goat2.GGGearAbility_GrapplingHook
class UGGGearAbility_GrapplingHook : public UGGGearAbility
{
public:
	TSubclassOf<class ACableActor>               CableActorClass;                                   // 0x440(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CableAcceleration;                                 // 0x448(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WallImpactLunchVelocity;                           // 0x44C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CableSpeed;                                        // 0x450(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxGrapplingDistance;                              // 0x454(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ADecalActor>               TargetMarkerClass;                                 // 0x458(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableDebugging;                                  // 0x460(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1CDF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ACableActor*                           CableActor;                                        // 0x468(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ADecalActor*                           TargetMarkerDecal;                                 // 0x470(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1CE0[0xC8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_GrapplingHook* GetDefaultObj();

	void OnOwnerCapsuleHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit);
};

// 0x78 (0x4B8 - 0x440)
// Class Goat2.GGGearAbility_HardHat
class UGGGearAbility_HardHat : public UGGGearAbility
{
public:
	TArray<struct FWeightedElement_DropMeshes>   MeshesToDrop;                                      // 0x440(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSubclassOf<class AGGPhysicsActor>           BaseClass;                                         // 0x450(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AGGNPC>                    WorkerClass;                                       // 0x458(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DropBoxSize;                                       // 0x460(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DropHeight;                                        // 0x464(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DropPower;                                         // 0x468(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ChanceToDropWorker;                                // 0x46C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ChanceToFocusCharacters;                           // 0x470(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetCharactersRadius;                            // 0x474(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CharacterPredictionLength;                         // 0x478(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxSpawnedActors;                                  // 0x47C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxWorkersSpawned;                                 // 0x480(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1CE1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            SpawnActorSound;                                   // 0x488(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          FallingVO;                                         // 0x490(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AGGPhysicsActor*>               SpawnedActors;                                     // 0x498(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AGGNPC*>                        SpawnedWorkers;                                    // 0x4A8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGGearAbility_HardHat* GetDefaultObj();

};

// 0x18 (0x458 - 0x440)
// Class Goat2.GGGearAbility_HeliumTubes
class UGGGearAbility_HeliumTubes : public UGGGearAbility
{
public:
	TSubclassOf<class AGGPhysicsProjectile>      SyringeProjectileClass;                            // 0x440(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SyringeShootPitchAngle;                            // 0x448(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          TagMuzzleFlashGameplayCue;                         // 0x44C(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1CE3[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_HeliumTubes* GetDefaultObj();

};

// 0x18 (0x458 - 0x440)
// Class Goat2.GGGearAbility_HousewifeFace
class UGGGearAbility_HousewifeFace : public UGGGearAbility
{
public:
	TSubclassOf<class AActor>                    LaserProjectileClass;                              // 0x440(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          TagMuzzleFlashGameplayCue;                         // 0x448(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1CE4[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_HousewifeFace* GetDefaultObj();

};

// 0x60 (0x4A0 - 0x440)
// Class Goat2.GGGearAbility_HumanAltGoat
class UGGGearAbility_HumanAltGoat : public UGGGearAbility
{
public:
	class UDataTable*                            HairsDataTable;                                    // 0x440(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            HeadsDataTable;                                    // 0x448(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            UpperBodyDataTable;                                // 0x450(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            LowerBodyDataTable;                                // 0x458(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseNonRandomlySelectables;                        // 0x460(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1CE5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ChargeTime;                                        // 0x464(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaleAppearanceChance;                              // 0x468(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        HairMeshIndex;                                     // 0x46C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        UpperBodyMeshIndex;                                // 0x470(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        LowerBodyMeshIndex;                                // 0x474(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          ChargeGameplayCue;                                 // 0x478(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          AppearanceChangeGameplayCue;                       // 0x480(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1CE6[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_HumanAltGoat* GetDefaultObj();

};

// 0x50 (0x490 - 0x440)
// Class Goat2.GGGearAbility_Jetpack
class UGGGearAbility_Jetpack : public UGGGearAbility
{
public:
	float                                        RagdollForce;                                      // 0x440(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UpwardThrust;                                      // 0x444(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ForwardThrust;                                     // 0x448(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxVelocity;                                       // 0x44C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ThrusterDirectionRelativeToBone;                   // 0x450(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UpwardStartVelocity;                               // 0x45C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGAlternativeGoatDataAsset*           PigAltGoat;                                        // 0x460(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PigUpwardThrust;                                   // 0x468(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1CE7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       JetpackGear;                                       // 0x470(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                SkeletalMeshComp;                                  // 0x478(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1CE9[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_Jetpack* GetDefaultObj();

};

// 0x28 (0x468 - 0x440)
// Class Goat2.GGGearAbility_LaserSight
class UGGGearAbility_LaserSight : public UGGGearAbility
{
public:
	float                                        PhysActorForce;                                    // 0x440(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CharacterForce;                                    // 0x444(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleForce;                                      // 0x448(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NormalForce;                                       // 0x44C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGGoatGear_Static_LaserSight*         LaserSightGear;                                    // 0x450(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                LastLaunchedActor;                                 // 0x458(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1CEB[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_LaserSight* GetDefaultObj();

	void CharacterEnteringVehicle(class AGGCharacter* Character, class AGGVehicle* Vehicle);
};

// 0x18 (0x458 - 0x440)
// Class Goat2.GGGearAbility_Leafblower
class UGGGearAbility_Leafblower : public UGGGearAbility
{
public:
	class UGGGoatGear_Static_Leafblower*         LeafBlower;                                        // 0x440(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           BlowAreaMesh;                                      // 0x448(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideConeComponent;                                // 0x450(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1CEE[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_Leafblower* GetDefaultObj();

	void CharacterEnteringVehicle(class AGGCharacter* Character, class AGGVehicle* Vehicle);
};

// 0x48 (0x488 - 0x440)
// Class Goat2.GGGearAbility_LowGravity
class UGGGearAbility_LowGravity : public UGGGearAbility
{
public:
	TSubclassOf<class AGGGravitySphereActor>     GravitySphereActorClass;                           // 0x440(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                    ForceActor;                                        // 0x448(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldAffectOtherActors;                          // 0x450(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1CF0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LowGravity;                                        // 0x454(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ActivateLowGravityCue;                             // 0x458(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          DeactivateLowGravityCue;                           // 0x460(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGGoatGear_Static_WOSHelmet*          HelmetComponent;                                   // 0x468(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGGravitySphereActor*                 GravitySphere;                                     // 0x470(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                SpawnedForceActor;                                 // 0x478(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGGRadialForceComponent*               ForceComp;                                         // 0x480(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGGearAbility_LowGravity* GetDefaultObj();

};

// 0x10 (0x450 - 0x440)
// Class Goat2.GGGearAbility_Megaphone
class UGGGearAbility_Megaphone : public UGGGearAbility
{
public:
	class USoundBase*                            MegaphoneBaaSound;                                 // 0x440(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AActor>                    ForceActorClass;                                   // 0x448(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGGearAbility_Megaphone* GetDefaultObj();

	void PlayMegaphoneEffectServer(class AGGGoat* Goat);
	void PlayMegaphoneEffects(class AGGGoat* Goat);
	void PlayAbility(class AGGGoat* Goat);
	void MulticastCreateForceActor(class AGGGoat* Goat);
};

// 0x18 (0x458 - 0x440)
// Class Goat2.GGGearAbility_Minifun
class UGGGearAbility_Minifun : public UGGGearAbility
{
public:
	uint8                                        Pad_1CF2[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_Minifun* GetDefaultObj();

	void FireTrace(const struct FGameplayAbilitySpecHandle& Handle, class AGGGoat* Goat);
	void CharacterRagdolled(class ULSCharacterMovementComponent* MovementComp, class ACharacter* RagdollingCharacter, struct FRagdollStateChangeSettings& StateChangeSettings);
};

// 0x0 (0x440 - 0x440)
// Class Goat2.GGGearAbility_MMOTankShoes
class UGGGearAbility_MMOTankShoes : public UGGGearAbility
{
public:

	static class UClass* StaticClass();
	static class UGGGearAbility_MMOTankShoes* GetDefaultObj();

};

// 0x10 (0x450 - 0x440)
// Class Goat2.GGGearAbility_MSChange
class UGGGearAbility_MSChange : public UGGGearAbility
{
public:
	TSubclassOf<class UGameplayEffect>           MSGameplayEffect;                                  // 0x440(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MSChangeMagnitude;                                 // 0x448(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         RemoveMSChangeOnEnd;                               // 0x44C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1CF5[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_MSChange* GetDefaultObj();

};

// 0x58 (0x498 - 0x440)
// Class Goat2.GGGearAbility_OdenEye
class UGGGearAbility_OdenEye : public UGGGearAbility
{
public:
	TSubclassOf<class AGGOdenAbilityBeam>        BeamClass;                                         // 0x440(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FailParticleUpwardOffset;                          // 0x448(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FailParticleForwardOffset;                         // 0x44C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            FailSound;                                         // 0x450(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       FailParticle;                                      // 0x458(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       OnOffParticle;                                     // 0x460(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       OnGoingParticle;                                   // 0x468(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AGGOdenAbilityBeam*                    OdenBeam;                                          // 0x470(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1CF7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       Gear;                                              // 0x480(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              FailParticleComp;                                  // 0x488(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              OnGoingParticleComp;                               // 0x490(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGGearAbility_OdenEye* GetDefaultObj();

};

// 0x28 (0x468 - 0x440)
// Class Goat2.GGGearAbility_Ostrich
class UGGGearAbility_Ostrich : public UGGGearAbility
{
public:
	float                                        ResetTime;                                         // 0x440(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GlidingGravityScale;                               // 0x444(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            FlyingSound;                                       // 0x448(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1CF8[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAudioComponent*                       AudioComponent;                                    // 0x460(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGGearAbility_Ostrich* GetDefaultObj();

};

// 0x38 (0x478 - 0x440)
// Class Goat2.GGGearAbility_Paraglider
class UGGGearAbility_Paraglider : public UGGGearAbility
{
public:
	float                                        FallingGravity;                                    // 0x440(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FallingMaxVelocity;                                // 0x444(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ParaglidingInstinctTag;                            // 0x448(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeToParaglide;                                   // 0x450(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1CFD[0x24];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_Paraglider* GetDefaultObj();

	void TriggerInstinct(class AGGGoat* Goat);
	void CharacterOnLanded(struct FHitResult& Hit);
	void CharacterEnteringVehicle(class AGGCharacter* Character, class AGGVehicle* Vehicle);
};

// 0x28 (0x468 - 0x440)
// Class Goat2.GGGearAbility_PerfectLanding
class UGGGearAbility_PerfectLanding : public UGGGearAbility
{
public:
	float                                        MaxBouncePower;                                    // 0x440(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinBouncePower;                                    // 0x444(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpeedMultiplier;                                   // 0x448(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D00[0x1C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_PerfectLanding* GetDefaultObj();

	void UpdateBouncePower(const struct FGameplayAbilitySpecHandle& Handle, class AGGGoat* Goat);
};

// 0x60 (0x4A0 - 0x440)
// Class Goat2.GGGearAbility_PersonalHacker
class UGGGearAbility_PersonalHacker : public UGGGearAbility
{
public:
	TSubclassOf<class AGGPersonalHackerBeam>     BeamClass;                                         // 0x440(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FailParticleUpwardOffset;                          // 0x448(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FailParticleForwardOffset;                         // 0x44C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            FailSound;                                         // 0x450(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       FailParticle;                                      // 0x458(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       OnOffParticle;                                     // 0x460(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       OnGoingParticle;                                   // 0x468(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bOldAbilityVersion;                                // 0x470(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D02[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGPersonalHackerBeam*                 HackerBeam;                                        // 0x478(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D03[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       Gear;                                              // 0x488(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              FailParticleComp;                                  // 0x490(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              OnGoingParticleComp;                               // 0x498(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGGearAbility_PersonalHacker* GetDefaultObj();

};

// 0x10 (0x450 - 0x440)
// Class Goat2.GGGearAbility_PersonalTrainer
class UGGGearAbility_PersonalTrainer : public UGGGearAbility
{
public:
	float                                        EffectRadius;                                      // 0x440(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AmountOfInstinctNPCs;                              // 0x444(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AmountOfInstinctNPCsMobile;                        // 0x448(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D04[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_PersonalTrainer* GetDefaultObj();

};

// 0x98 (0x4D8 - 0x440)
// Class Goat2.GGGearAbility_PigSlide
class UGGGearAbility_PigSlide : public UGGGearAbility
{
public:
	TSubclassOf<class AGGStatusEffectSlippery_Greasy> GreasyStatusEffect;                                // 0x440(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InitialSlideImpulse;                               // 0x448(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SlideImpulsePush;                                  // 0x44C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bApplyVelocityLimit;                               // 0x450(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D0A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SlideVelocityLimit;                                // 0x454(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BonusRagdollOnLandedThreshold;                     // 0x458(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PigTurnRateWhileSliding;                           // 0x45C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGGRadialForceComponent>   ForceCompClass;                                    // 0x460(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               RelativeForceCompLocation;                         // 0x468(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ForceCompSlideVelocityThreshold;                   // 0x474(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ForceCompMinActiveTime;                            // 0x478(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          PigSlideGameplayCueTag;                            // 0x47C(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          PigSlidePushGameplayCueTag;                        // 0x484(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D0B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 ListenForNotify;                                   // 0x490(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTag                          PigSlideEffectSourceTag;                           // 0x4B0(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AGGStatusEffectSlippery_Greasy*        CachedGreasyStatusEffect;                          // 0x4B8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGGRadialForceComponent*               ForceComp;                                         // 0x4C0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D0D[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_PigSlide* GetDefaultObj();

	void OnSlideKickFinished(class AGGCharacter* Goat, class UGGAnimNotify* AnimNotify, const struct FGameplayTag& NotifyTag);
	void OnPlayerRespawn(class AGGCharacter* Character);
	void OnPlayerJump(class AGGCharacter* Character);
	void OnPlayerHeadbutt(class AGGGoat* GoatHeadbutting);
	void OnPlayerEnteredVehicle(class AGGCharacter* Character, class AGGVehicle* Vehicle);
	void OnPlayerBackkick(class AGGGoat* GoatKicking, bool bHitSomething, TArray<class AActor*>& KickedActors);
};

// 0x20 (0x460 - 0x440)
// Class Goat2.GGGearAbility_Pirate
class UGGGearAbility_Pirate : public UGGGearAbility
{
public:
	TSubclassOf<class AActor>                    OctopusClass;                                      // 0x440(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxLengthDown;                                     // 0x448(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpawnDistance;                                     // 0x44C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DownOffset;                                        // 0x450(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D0E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGPirateOctopusArm*                   OctopusArm;                                        // 0x458(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGGearAbility_Pirate* GetDefaultObj();

};

// 0x30 (0x470 - 0x440)
// Class Goat2.GGGearAbility_Pizza
class UGGGearAbility_Pizza : public UGGGearAbility
{
public:
	TSubclassOf<class AGGPhysicsActor>           PizzaSliceClass;                                   // 0x440(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPizzaSliceSpawnWithRandomRotation;                // 0x448(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D0F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PizzaSliceShootVelocity;                           // 0x44C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PizzaSliceShootRandomRotationVelocity;             // 0x450(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PizzaSliceShootSpreadAngle;                        // 0x454(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PizzaSliceShootPitchAngle;                         // 0x458(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxSpawnedPizzaSlices;                             // 0x45C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AGGPhysicsActor*>               SpawnedPizzaSlices;                                // 0x460(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGGearAbility_Pizza* GetDefaultObj();

};

// 0x38 (0x478 - 0x440)
// Class Goat2.GGGearAbility_PlungerGun
class UGGGearAbility_PlungerGun : public UGGGearAbility
{
public:
	TSubclassOf<class AActor>                    PlungerProjectileClass;                            // 0x440(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlungerShootVelocity;                              // 0x448(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlungerShootRandomRotationVelocity;                // 0x44C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlungerShootPitchAngle;                            // 0x450(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlungerShootRandomPitchAngle;                      // 0x454(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlungerSpawnOffset;                                // 0x458(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxSpawnedPlungers;                                // 0x45C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShootAtRandomDirection;                           // 0x460(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D11[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        SpawnedPlungers;                                   // 0x468(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGGearAbility_PlungerGun* GetDefaultObj();

};

// 0x18 (0x458 - 0x440)
// Class Goat2.GGGearAbility_PoliceCap
class UGGGearAbility_PoliceCap : public UGGGearAbility
{
public:
	TSubclassOf<class AGGPhysicsProjectile>      HandcuffsProjectileClass;                          // 0x440(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ForwardSpawnOffset;                                // 0x448(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UpwardSpawnOffset;                                 // 0x44C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootPitchAngle;                                   // 0x450(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D12[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_PoliceCap* GetDefaultObj();

};

// 0x20 (0x460 - 0x440)
// Class Goat2.GGGearAbility_Poop
class UGGGearAbility_Poop : public UGGGearAbility
{
public:
	TSubclassOf<class AGGPhysicsActor>           PoopClass;                                         // 0x440(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UStaticMesh*>                   PoopMeshes;                                        // 0x448(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        LifeSpam;                                          // 0x458(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D13[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_Poop* GetDefaultObj();

};

// 0x10 (0x450 - 0x440)
// Class Goat2.GGGearAbility_PrayMaker
class UGGGearAbility_PrayMaker : public UGGGearAbility
{
public:
	float                                        NotifyRadius;                                      // 0x440(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D15[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGGoat*                               PlayerGoat;                                        // 0x448(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGGearAbility_PrayMaker* GetDefaultObj();

	void OnGoatBaaing(class AGGGoat* GoatBaaing);
};

// 0x88 (0x4C8 - 0x440)
// Class Goat2.GGGearAbility_Pridesaber
class UGGGearAbility_Pridesaber : public UGGGearAbility
{
public:
	float                                        ZapBaseImpulse;                                    // 0x440(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CharactersZapImpulseModifier;                      // 0x444(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        VehiclesZapImpulseModifier;                        // 0x448(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PActorsZapImpulseModifier;                         // 0x44C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ZapBaseDamage;                                     // 0x450(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ZapRadius;                                         // 0x454(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CharactersZapDamageModifier;                       // 0x458(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        VehiclesZapDamageModifier;                         // 0x45C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PActorsZapDamageModifier;                          // 0x460(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D1B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGGDamageType_Base>        DamageType;                                        // 0x468(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  SocketBladesLeftTip;                               // 0x470(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  SocketBladesRightTip;                              // 0x478(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SphereTraceRadius;                                 // 0x480(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DelayBetweenDamageTicks;                           // 0x484(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSpawnBurstParticles;                              // 0x488(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D1C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RainbowTrailDuration;                              // 0x48C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          TagGameplayCueOnHit;                               // 0x490(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          TagGameplayCueOnToggleActive;                      // 0x498(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGGoatGear_Static_Pridesaber*         PridesaberGear;                                    // 0x4A0(0x8)(ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D1D[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_Pridesaber* GetDefaultObj();

	void OnRep_PridesaberGear();
	void HandleOnBladeOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void HandleGoatEnteringVehicle(class AGGCharacter* Character, class AGGVehicle* Vehicle);
};

// 0x5B0 (0x9F0 - 0x440)
// Class Goat2.GGGearAbility_PurityRing
class UGGGearAbility_PurityRing : public UGGGearAbility
{
public:
	float                                        ActivationDelay;                                   // 0x440(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InvisibilityDelay;                                 // 0x444(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimerHandle                          InvisDelayHandle;                                  // 0x448(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bToggleEnabled;                                    // 0x450(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D22[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPostProcessSettings                  RingEffectPostProcessing;                          // 0x460(0x560)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                         bCanActivateAnimation;                             // 0x9C0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D23[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGAlternativeGoatDataAsset*           RegularGoatData;                                   // 0x9C8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D24[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGGoatGear_Static_Base*               PurityRingGear;                                    // 0x9E8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGGearAbility_PurityRing* GetDefaultObj();

	void OnPlayAnimation(class AGGGoat* Goat, class UGGGoatGear_Static_Base* PurityRing);
	void OnEquippedRing();
	void OnEffectsEnabled(class AGGGoat* Goat);
	void OnEffectsDisabled(class AGGGoat* Goat);
	void MulticastEnableEffect(class AGGGoat* Goat);
	void MulticastDisableEffect(class AGGGoat* Goat);
};

// 0x10 (0x450 - 0x440)
// Class Goat2.GGGearAbility_QueenGoat
class UGGGearAbility_QueenGoat : public UGGGearAbility
{
public:
	TSubclassOf<class AGGPhysicsActor_Skeletal>  GoatPActor;                                        // 0x440(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GoatLifespan;                                      // 0x448(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D25[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_QueenGoat* GetDefaultObj();

};

// 0x50 (0x490 - 0x440)
// Class Goat2.GGGearAbility_Railgun
class UGGGearAbility_Railgun : public UGGGearAbility
{
public:
	float                                        ChargeUpDuration;                                  // 0x440(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BeamLength;                                        // 0x444(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TraceLength;                                       // 0x448(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BeamWidth;                                         // 0x44C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImpulsePower;                                      // 0x450(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CharacterImpulsePower;                             // 0x454(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalNPCsToOneShot;                                // 0x458(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalNPCsToOneShotMobile;                          // 0x45C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          RailgunOneShotInstinctTag;                         // 0x460(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D29[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       RailgunGear;                                       // 0x480(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D2A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_Railgun* GetDefaultObj();

	void FireTrace(const struct FGameplayAbilitySpecHandle& Handle, class AGGGoat* Goat);
};

// 0xC0 (0x500 - 0x440)
// Class Goat2.GGGearAbility_Rapturer
class UGGGearAbility_Rapturer : public UGGGearAbility
{
public:
	float                                        RaptureRadius;                                     // 0x440(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RiseTargetHeight;                                  // 0x444(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RiseSpeed;                                         // 0x448(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TagRaptureAbility;                                 // 0x44C(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TagFizzleEffect;                                   // 0x454(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TagRaptureOngoingLight;                            // 0x45C(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TagRaptureCaptureBeam;                             // 0x464(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TagRaptureOngoingSparkles;                         // 0x46C(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          GoodByeVoiceOver;                                  // 0x474(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D2E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          MontageHumanFloating;                              // 0x480(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSendNPCWhileOthersBeingRaptured;                  // 0x488(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D2F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxAmountToRapture;                                // 0x48C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxGhostToRapture;                                 // 0x490(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          RaptureNPCInstinctTag;                             // 0x494(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          RaptureGhostInstinctTag;                           // 0x49C(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D30[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FRapturedNPC>                  RapturedNPCs;                                      // 0x4A8(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPrivate)
	bool                                         bRaptureIsInProgress;                              // 0x4B8(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D31[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        NPCsInRange;                                       // 0x4C0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D32[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_Rapturer* GetDefaultObj();

};

// 0x20 (0x460 - 0x440)
// Class Goat2.GGGearAbility_RaveHair
class UGGGearAbility_RaveHair : public UGGGearAbility
{
public:
	class UParticleSystem*                       ImpactParticle;                                    // 0x440(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            ImpactSound;                                       // 0x448(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               EffectLocationOffset;                              // 0x450(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RandomOffsetDistance;                              // 0x45C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGGGearAbility_RaveHair* GetDefaultObj();

	void PlayHitEffectServer(class AGGGoat* Goat, class AActor* HitActor);
	void PlayHitEffects(class AGGGoat* Goat, class AActor* HitActor);
	void PlayHitEffectMultiCast(class AGGGoat* Goat, class AActor* HitActor);
};

// 0x20 (0x460 - 0x440)
// Class Goat2.GGGearAbility_Repulsive
class UGGGearAbility_Repulsive : public UGGGearAbility
{
public:
	float                                        AuraTriggerDelay;                                  // 0x440(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AuraRange;                                         // 0x444(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D3B[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_Repulsive* GetDefaultObj();

	void RepulsiveAura(const struct FGameplayAbilitySpecHandle& Handle, class AGGGoat* Goat);
	void OnHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, const struct FVector& NormalImpulse, struct FHitResult& Hit);
};

// 0x28 (0x468 - 0x440)
// Class Goat2.GGGearAbility_RhinoCharge
class UGGGearAbility_RhinoCharge : public UGGGearAbility
{
public:
	float                                        ChargeDuration;                                    // 0x440(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RelativeForceCompLoc;                              // 0x444(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGGRadialForceComponent>   ForceCompClass;                                    // 0x450(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D3C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGRadialForceComponent*               ForceComp;                                         // 0x460(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGGearAbility_RhinoCharge* GetDefaultObj();

	void ServerSetWantToSprinting(bool bWantsToSprintNow);
};

// 0x60 (0x4A0 - 0x440)
// Class Goat2.GGGearAbility_Ricer
class UGGGearAbility_Ricer : public UGGGearAbility
{
public:
	struct FGameplayTag                          GameplayCueSuccessTag;                             // 0x440(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          GameplayCueSuccessfullChangeTag;                   // 0x448(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          GameplayCueFailTag;                                // 0x450(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InteractionRadius;                                 // 0x458(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InteractionHalfHeight;                             // 0x45C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InteractionStartForwardOffset;                     // 0x460(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InteractionStartUpOffset;                          // 0x464(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InteractionForwardDistance;                        // 0x468(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDebugDrawInteraction;                             // 0x46C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D3E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UMaterialInstance*>             DestroyedVehicleColorMaterials;                    // 0x470(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UMaterialInterface*>            BikeColorMaterials;                                // 0x480(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	int32                                        DestroyedVehicleMaterialIndex;                     // 0x490(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          PaintBikeInstinctTag;                              // 0x494(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D3F[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_Ricer* GetDefaultObj();

};

// 0x8 (0x448 - 0x440)
// Class Goat2.GGGearAbility_RocketAttachment
class UGGGearAbility_RocketAttachment : public UGGGearAbility
{
public:
	TSubclassOf<class AActor>                    RocketClass;                                       // 0x440(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGGearAbility_RocketAttachment* GetDefaultObj();

};

// 0x48 (0x488 - 0x440)
// Class Goat2.GGGearAbility_RocketBoots
class UGGGearAbility_RocketBoots : public UGGGearAbility
{
public:
	float                                        MaxSpeed;                                          // 0x440(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Acceleration;                                      // 0x444(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Duration;                                          // 0x448(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RocketBoostAbilityTag;                             // 0x44C(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageRadius;                                      // 0x454(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDealsForceDamage;                                 // 0x458(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D41[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ForceDamage;                                       // 0x45C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImpulseDamage;                                     // 0x460(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDealDamageToGGMeshComponents;                     // 0x464(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D42[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGRadialForceComponent*               ForceComponent;                                    // 0x468(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D43[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       RocketBoots;                                       // 0x478(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGGGoatGear_Scene_Feet_RocketBoot*     RocketBootGear;                                    // 0x480(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGGearAbility_RocketBoots* GetDefaultObj();

	void CharacterEnteringVehicle(class AGGCharacter* Character, class AGGVehicle* Vehicle);
};

// 0x78 (0x4B8 - 0x440)
// Class Goat2.GGGearAbility_RubberDucking
class UGGGearAbility_RubberDucking : public UGGGearAbility
{
public:
	TSubclassOf<class AGGPhysicsActor>           DuckClass;                                         // 0x440(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                    ChargeSoundClass;                                  // 0x448(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LaunchPower;                                       // 0x450(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxSpawnedActors;                                  // 0x454(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChargeMaxDuration;                                 // 0x458(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D44[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       ThrowParticle;                                     // 0x460(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumDucksAtMaxCharge;                               // 0x468(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D46[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AGGPhysicsActor*>               SpawnedActors;                                     // 0x470(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class UGGGoatGear_Static_Base*               Gear;                                              // 0x480(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D47[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                SpawnedChargeSound;                                // 0x4B0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGGearAbility_RubberDucking* GetDefaultObj();

	void ServerStartChargingSound();
	void ServerFireDucks(float ChargeDuration);
	void OnMaxCharge();
	void IsChargingCheck();
};

// 0x30 (0x470 - 0x440)
// Class Goat2.GGGearAbility_Saddle
class UGGGearAbility_Saddle : public UGGGearAbility
{
public:
	float                                        GrabRadius;                                        // 0x440(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          AbominanaRiderInstinctTag;                         // 0x444(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanPickUpStacksOfGoats;                           // 0x44C(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D4E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGCharacter*                          Rider;                                             // 0x450(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGGoat*                               RiderPlayerGoat;                                   // 0x458(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGGGoatGear_Static_Saddle*             SaddleGear;                                        // 0x460(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D4F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_Saddle* GetDefaultObj();

	void OnRiderPreCatched(bool bIsBeingCatched);
	void OnPlayerRiderRagdoll(class ULSCharacterMovementComponent* MovementComp, class ACharacter* OwnerCharacter, struct FRagdollStateChangeSettings& StateChangeSettings);
	void OnOwnerOrRiderCatched(class AActor* Owner, class AActor* Catcher);
	void MulticastClientsOnSaddle(class AGGCharacter* Character, bool HasSetRagdoll);
	void MulticastClientsOffSaddle(class AGGCharacter* Character);
	void ClientsOnCollisionState(class AGGCharacter* Character);
	void CharacterEnteringVehicle(class AGGCharacter* Character, class AGGVehicle* Vehicle);
};

// 0x68 (0x4A8 - 0x440)
// Class Goat2.GGGearAbility_SantaBag
class UGGGearAbility_SantaBag : public UGGGearAbility
{
public:
	TSubclassOf<class AGGPhysicsProjectile>      GiftProjectileClass;                               // 0x440(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VerticalLaunchAngleOffset;                         // 0x448(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D50[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<TSoftObjectPtr<class UGGAlternativeGoatDataAsset>, float> AltGoatAngleOffsets;                               // 0x450(0x50)(Edit, NativeAccessSpecifierPublic)
	class USceneComponent*                       BagGear;                                           // 0x4A0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGGearAbility_SantaBag* GetDefaultObj();

};

// 0x78 (0x4B8 - 0x440)
// Class Goat2.GGGearAbility_Satellite
class UGGGearAbility_Satellite : public UGGGearAbility
{
public:
	float                                        LaunchPower;                                       // 0x440(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleLaunchPower;                                // 0x444(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGGDamageType_Base>        LaunchImpulseDamageType;                           // 0x448(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNoLaunchIfBlocked;                                // 0x450(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D55[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SuckCapsuleRadius;                                 // 0x454(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SuckCapsuleHalfHeight;                             // 0x458(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SuckDistFromPlayer;                                // 0x45C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeToScaleDownVictim;                             // 0x460(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CooldownBetweenLaunchAndPickUp;                    // 0x464(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               AddedLaunchDirection;                              // 0x468(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SocketSpawnLocation;                               // 0x474(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SocketNothingInRangeEffect;                        // 0x47C(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          TagNothingInRangeGameplayCue;                      // 0x484(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefaultDamageOnRelease;                            // 0x48C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRagdollCharacterOnLaunch;                         // 0x490(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D56[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                CurrentVictim;                                     // 0x498(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                       SatelliteGear;                                     // 0x4A0(0x8)(ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D57[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_Satellite* GetDefaultObj();

	void ServerReleaseGrabbedActor(class AActor* GrabbedActor, const struct FVector& ReleaseLocation, const struct FGGReleaseOptions& Options);
	void ServerCatchActor(class AActor* ActorToGrab, const struct FGGCatchOptions& Options);
	void OnOwnerRespawned(class AGGCharacter* Character);
	void OnOwnerPreScaled(bool bIsBeingCatched);
	void OnOwnerEnteredVehicle(class AGGCharacter* Character, class AGGVehicle* Vehicle);
	void OnOwnerCatched(class AActor* CatchedActor, class AActor* Catcher);
	void MulticastReleaseGrabbedActor(class AActor* GrabbedActor, const struct FVector& ReleaseLocation, const struct FGGReleaseOptions& Options);
	void MulticastCatchActor(class AActor* ActorToGrab, class AGGGoat* GrabbingGoat, const struct FGGCatchOptions& Options);
	void ForceReleaseVictim();
};

// 0x50 (0x490 - 0x440)
// Class Goat2.GGGearAbility_SharkFin
class UGGGearAbility_SharkFin : public UGGGearAbility
{
public:
	TSubclassOf<class AActor>                    SharkFinActor;                                     // 0x440(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 EffectSourcesDuringShark;                          // 0x448(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                         bCanBeInterrupted;                                 // 0x468(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D59[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PushRadius;                                        // 0x46C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PhysActorForce;                                    // 0x470(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CharacterForce;                                    // 0x474(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        VehicleForce;                                      // 0x478(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GoatLanuchForce;                                   // 0x47C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDrawRadius;                                       // 0x480(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D5A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SpeedMultiplier;                                   // 0x484(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                SharkFin;                                          // 0x488(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGGearAbility_SharkFin* GetDefaultObj();

	void OnCharacterStartEnteringVehicle(class AGGCharacter* Character, class AGGVehicle* Vehicle);
};

// 0x28 (0x468 - 0x440)
// Class Goat2.GGGearAbility_Shield
class UGGGearAbility_Shield : public UGGGearAbility
{
public:
	TSubclassOf<class AGGPhysicsProjectile>      ShieldClass;                                       // 0x440(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ProjectileSpawnerSocket;                           // 0x448(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AGGShield>              Shield;                                            // 0x450(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCanThrowShield;                                   // 0x458(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bPickedShieldUp;                                   // 0x459(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D5B[0xE];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_Shield* GetDefaultObj();

};

// 0x590 (0x9D0 - 0x440)
// Class Goat2.GGGearAbility_SpyGlasses
class UGGGearAbility_SpyGlasses : public UGGGearAbility
{
public:
	struct FPostProcessSettings                  ThermalPostProcessingSettings;                     // 0x440(0x560)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class USoundBase*                            ActivationSound;                                   // 0x9A0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            DeactivationSound;                                 // 0x9A8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D5C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGPlayerController*                   PlayerController;                                  // 0x9B8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAudioComponent*                       SoundComp;                                         // 0x9C0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D5D[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_SpyGlasses* GetDefaultObj();

	void BP_OnDeactivate();
	void BP_OnActivate();
};

// 0x58 (0x498 - 0x440)
// Class Goat2.GGGearAbility_Stasis
class UGGGearAbility_Stasis : public UGGGearAbility
{
public:
	float                                        StasisStartTimestamp;                              // 0x440(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D5F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       StasisStartParticle;                               // 0x448(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystem*                       StasisLaunchParticle;                              // 0x450(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UCameraShakeBase>          StasisStartCameraShake;                            // 0x458(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UCameraShakeBase>          StasisLaunchCameraShake;                           // 0x460(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               StoredImpulse;                                     // 0x468(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               StoredStartLocation;                               // 0x474(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UArrowComponent*                       ForceArrowComponent;                               // 0x480(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AGGPhysicsActor*                       StasisedPActor;                                    // 0x488(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StasisDuration;                                    // 0x490(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D60[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_Stasis* GetDefaultObj();

	void StoreImpulse(const struct FVector& InImpulse);
	void SetNewStasisActor(class AGGPhysicsActor* InPActor);
	void OnStasisedPActorTakeDamage(float DamageAmount, const struct FVector& InImpulse, struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser);
	void OnStasisedPActorOnHitDelegate(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void LaunchStasisedActor();
};

// 0x18 (0x458 - 0x440)
// Class Goat2.GGGearAbility_StickyGum
class UGGGearAbility_StickyGum : public UGGGearAbility
{
public:
	int32                                        PelletCount;                                       // 0x440(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SpreadAngleMax;                                    // 0x444(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PelletRange;                                       // 0x448(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PelletImpulsePower;                                // 0x44C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PelletCharacterImpulsePower;                       // 0x450(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PeletCharacterUpForcePercentage;                   // 0x454(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGGearAbility_StickyGum* GetDefaultObj();

};

// 0x20 (0x460 - 0x440)
// Class Goat2.GGGearAbility_StiltShoes
class UGGGearAbility_StiltShoes : public UGGGearAbility
{
public:
	float                                        MaxExtension;                                      // 0x440(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChangeInterval;                                    // 0x444(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChangePerInterval;                                 // 0x448(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InterpSpeed;                                       // 0x44C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D62[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGGoatGear_Skel_StiltShoes*           StiltShoe;                                         // 0x458(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGGearAbility_StiltShoes* GetDefaultObj();

};

// 0x18 (0x458 - 0x440)
// Class Goat2.GGGearAbility_Tacos
class UGGGearAbility_Tacos : public UGGGearAbility
{
public:
	TSubclassOf<class AActor>                    ForceActor;                                        // 0x440(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UpwardsVelocity;                                   // 0x448(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPredictForce;                                     // 0x44C(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D63[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GroundParticleDistanceFromGround;                  // 0x450(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowDebugTrace;                                   // 0x454(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D64[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_Tacos* GetDefaultObj();

	void OnLanded(struct FHitResult& Hit);
};

// 0x70 (0x4B0 - 0x440)
// Class Goat2.GGGearAbility_Tagger
class UGGGearAbility_Tagger : public UGGGearAbility
{
public:
	TSubclassOf<class ADecalActor>               DecalActorClass;                                   // 0x440(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                    StartEffectClass;                                  // 0x448(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ActivationDelay;                                   // 0x450(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UpwardSpawnOffset;                                 // 0x454(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSpawnDistance;                                  // 0x458(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxSpawnedDecals;                                  // 0x45C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCancelAbilityIfNoWall;                            // 0x460(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRandomRotation;                                   // 0x461(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowDebugTrace;                                   // 0x462(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D66[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinRotation;                                       // 0x464(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxRotation;                                       // 0x468(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          TagFoundingFatherTag;                              // 0x46C(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D68[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AActor>                    FoundingFatherInstinctOverlap;                     // 0x478(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D69[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                RattlingSound;                                     // 0x498(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class ADecalActor*>                   SpawnedDecals;                                     // 0x4A0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGGearAbility_Tagger* GetDefaultObj();

	void OnActivationDelay(class UGGGoatGear_Static_Base* TaggerGear);
};

// 0x80 (0x4C0 - 0x440)
// Class Goat2.GGGearAbility_TankSmash
class UGGGearAbility_TankSmash : public UGGGearAbility
{
public:
	struct FGameplayTag                          SmashCue;                                          // 0x440(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          LandingCue;                                        // 0x448(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                    ForceActorClass;                                   // 0x450(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UCameraShakeBase>          SmashCameraShake;                                  // 0x458(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DownwardsVelocity;                                 // 0x460(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D6A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class UGGAlternativeGoatDataAsset*, float> AltGoatLocationOffset;                             // 0x468(0x50)(Edit, NativeAccessSpecifierPublic)
	class UGGRadialForceComponent*               ForceComp;                                         // 0x4B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGGearAbility_TankSmash* GetDefaultObj();

	void OnLanded(struct FHitResult& Hit);
	void MulticastCreateForceActor(class AGGGoat* Goat);
};

// 0x78 (0x4B8 - 0x440)
// Class Goat2.GGGearAbility_Tant
class UGGGearAbility_Tant : public UGGGearAbility
{
public:
	float                                        TargetingDistance;                                 // 0x440(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FireArc;                                           // 0x444(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETargetPriorityMode               TargetPriorityMode;                                // 0x448(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D6B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Cooldown;                                          // 0x44C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseDifferentCooldownForPlayers;                   // 0x450(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D6C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CooldownForPlayers;                                // 0x454(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AActor>                    ProjectileClass;                                   // 0x458(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AddedYawArcRotation;                               // 0x460(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ShootLocationSocket;                               // 0x464(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseGearPartFrontDirection;                        // 0x46C(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowDebugHelpers;                                 // 0x46D(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D6D[0x12];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AGGGoat*>                       PlayersInFireArc;                                  // 0x480(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D6E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       ComponentForLauncher;                              // 0x498(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D6F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                Target;                                            // 0x4A8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D70[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_Tant* GetDefaultObj();

};

// 0x60 (0x4A0 - 0x440)
// Class Goat2.GGGearAbility_TheArk
class UGGGearAbility_TheArk : public UGGGearAbility
{
public:
	TArray<struct FWeightedElement_Animal>       AnimalClasses;                                     // 0x440(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        SpawnVelocity;                                     // 0x450(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxRandomAngularVelocity;                          // 0x454(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootPitchAngle;                                   // 0x458(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RandomShootPitchAngleRange;                        // 0x45C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxSpawnedNPCs;                                    // 0x460(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShootAtRandomDirection;                           // 0x464(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D72[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SpawnSocket;                                       // 0x468(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPoolNPCsWhenUnequipped;                           // 0x470(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D73[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          InstinctAreaTag;                                   // 0x474(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          InstinctCompletionTag;                             // 0x47C(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D74[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AGGNPC*>                        SpawnedNPCs;                                       // 0x488(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D75[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_TheArk* GetDefaultObj();

};

// 0x20 (0x460 - 0x440)
// Class Goat2.GGGearAbility_TheStiffler
class UGGGearAbility_TheStiffler : public UGGGearAbility
{
public:
	TSubclassOf<class AGGPhysicsProjectile>      NeedleActorClass;                                  // 0x440(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxNeedles;                                        // 0x448(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D77[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        Needles;                                           // 0x450(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGGearAbility_TheStiffler* GetDefaultObj();

};

// 0x40 (0x480 - 0x440)
// Class Goat2.GGGearAbility_TheWorld
class UGGGearAbility_TheWorld : public UGGGearAbility
{
public:
	class UMaterialInstanceDynamic*              MIC;                                               // 0x440(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D78[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeDilation;                                      // 0x468(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PostProcessAnimationLength;                        // 0x46C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PostProcessParameterName;                          // 0x470(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    PostProcessMaterial;                               // 0x478(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGGearAbility_TheWorld* GetDefaultObj();

	void OutAnimationFinished();
};

// 0x650 (0xA90 - 0x440)
// Class Goat2.GGGearAbility_ThirdEye
class UGGGearAbility_ThirdEye : public UGGGearAbility
{
public:
	TSubclassOf<class AGGThirdEyeWidgetSpawner>  WidgetSpawnerClass;                                // 0x440(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            InNirvanaSound;                                    // 0x448(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            ScanningSound;                                     // 0x450(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            EnterNirvanaSound;                                 // 0x458(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            ExitNirvanaSound;                                  // 0x460(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            StopLickingSound;                                  // 0x468(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class USoundBase*>                    ScanObjectObjectSounds;                            // 0x470(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UParticleSystem*                       LickObjectParticle;                                // 0x480(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       ScanningObjectParticleLoop;                        // 0x488(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       StopLickingParticle;                               // 0x490(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class UGGAlternativeGoatDataAsset*, struct FVector> AltGoatParticleSettings;                           // 0x498(0x50)(Edit, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D7E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPostProcessSettings                  NirvanaProcessingSettings;                         // 0x4F0(0x560)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UGGGoatGear_Static_LotusFlower*        LotusGearComp;                                     // 0xA50(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAudioComponent*                       InNirvanaSoundComp;                                // 0xA58(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAudioComponent*                       ScanningSoundComp;                                 // 0xA60(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              ScanningParticleComp;                              // 0xA68(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D7F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGPlayerController*                   PlayerController;                                  // 0xA78(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                LickedActor;                                       // 0xA80(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGThirdEyeWidgetSpawner*              ThirdEyeWidgetSpawner;                             // 0xA88(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGGearAbility_ThirdEye* GetDefaultObj();

	void OnLickActor(class AGGGoat* GoatLicking, class AActor* LickActor);
	void OnGoatDroppedLickedActor(class AGGGoat* GoatLicking, class AActor* LickActor);
};

// 0x48 (0x488 - 0x440)
// Class Goat2.GGGearAbility_TinyWings
class UGGGearAbility_TinyWings : public UGGGearAbility
{
public:
	TSubclassOf<class UGameplayEffect>           GravityScaleGameplayEffect;                        // 0x440(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ResetTime;                                         // 0x448(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlowGravityScale;                                  // 0x44C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RightParticleSocket;                               // 0x450(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LeftParticleSocket;                                // 0x458(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D80[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystemComponent*              LeftFlyParticleComp;                               // 0x468(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              RightFlyParticleComp;                              // 0x470(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAudioComponent*                       AudioComponent;                                    // 0x478(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D81[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_TinyWings* GetDefaultObj();

	void ResetGravityScale();
};

// 0x40 (0x480 - 0x440)
// Class Goat2.GGGearAbility_TowerHat
class UGGGearAbility_TowerHat : public UGGGearAbility
{
public:
	float                                        KeyHoldTimeToRemoveAllHats;                        // 0x440(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D83[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       StackParticle;                                     // 0x448(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        HatsToCompleteInstinct;                            // 0x450(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          InstinctTag;                                       // 0x454(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D84[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TWeakObjectPtr<class AGGPhysicsActor_Base>> EquippedHats;                                      // 0x460(0x10)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	class UGGGoatGear_Static_Base*               GearMesh;                                          // 0x470(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D85[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_TowerHat* GetDefaultObj();

	void OnPActorBeingDestroyed(class AActor* PActor, enum class EEndPlayReason EndPlayReason);
};

// 0x30 (0x470 - 0x440)
// Class Goat2.GGGearAbility_Trident
class UGGGearAbility_Trident : public UGGGearAbility
{
public:
	TArray<struct FWeightedElement_FishMeshes>   FishMeshes;                                        // 0x440(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSubclassOf<class AGGPhysicsActor>           ProjectileBaseClass;                               // 0x450(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LaunchPower;                                       // 0x458(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxSpawnedActors;                                  // 0x45C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AGGPhysicsActor*>               SpawnedActors;                                     // 0x460(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGGearAbility_Trident* GetDefaultObj();

};

// 0x30 (0x470 - 0x440)
// Class Goat2.GGGearAbility_TShirtLauncher
class UGGGearAbility_TShirtLauncher : public UGGGearAbility
{
public:
	TSubclassOf<class AGGPhysicsProjectile>      TShirtClass;                                       // 0x440(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootPitchAngle;                                   // 0x448(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ProjectileSpawnerSocket;                           // 0x44C(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D88[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGGoatGear_Static_TShirtLauncher*     TShirtComponent;                                   // 0x458(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AGGTShirt*                             TShirt;                                            // 0x460(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D89[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_TShirtLauncher* GetDefaultObj();

};

// 0x88 (0x4C8 - 0x440)
// Class Goat2.GGGearAbility_WheelerDealer
class UGGGearAbility_WheelerDealer : public UGGGearAbility
{
public:
	TSubclassOf<class AGGPhysicsProjectile>      ProjectileClass;                                   // 0x440(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootPitchAngle;                                   // 0x448(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ProjectileSpawnerSocket;                           // 0x44C(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeToHoldBeforeLaunch;                            // 0x454(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRandomDirection;                                  // 0x458(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D8A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxSpeed;                                          // 0x45C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AccelerationLerpMultiplier;                        // 0x460(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DecelerationDuration;                              // 0x464(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AccelerationDuration;                              // 0x468(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          CarInstinctTag;                                    // 0x46C(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeToKeepCarMoving;                               // 0x474(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinimumCarSpeed;                                   // 0x478(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D8C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGWheelerDealerProjectile*            Projectile;                                        // 0x480(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGGGoatGear_Static_WheelerDealer*      Gear;                                              // 0x488(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D8D[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearAbility_WheelerDealer* GetDefaultObj();

	void TriggerInstinct(class AGGGoat* Goat);
};

// 0x170 (0x3A0 - 0x230)
// Class Goat2.GGGearCustomizationCamera
class AGGGearCustomizationCamera : public AActor
{
public:
	class AGGGoat*                               GoatToFocus;                                       // 0x230(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ViewportSizePercentage;                            // 0x238(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              CameraRotation;                                    // 0x23C(0xC)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        CameraChangeTime;                                  // 0x248(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GearSlotChangeSpeed;                               // 0x24C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseConstantInterpolation;                         // 0x250(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUpdateCameraLocationInTick;                       // 0x251(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseCurrentSocketLocationForFocus;                 // 0x252(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFocusOnGearSlots;                                 // 0x253(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FocusPointDeadZone;                                // 0x254(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bKeepLightsAtConstantDistanceFromGoat;             // 0x258(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D91[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       Root;                                              // 0x260(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USpringArmComponent*                   SpringArmComponent;                                // 0x268(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCameraComponent*                      CameraComponent;                                   // 0x270(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D92[0xC8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class ULightComponentBase*, float>      InitialLightDistances;                             // 0x340(0x50)(ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D93[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGGearCustomizationCamera* GetDefaultObj();

	void UpdateFocusPointSizeAndLocation(bool bIgnoreFocusPointDeadzone);
	void SetGoatSocketToFocus(enum class EGoatSockets GoatSocket);
	void SetGearSlotToFocus(enum class EGearSlot GearSlot);
	void OnGoatUnRagdoll(bool bRagdollOnGround, class ULSCharacterMovementComponent* MovementComp, class ACharacter* UnRagdolledCharacter, struct FRagdollStateChangeSettings& StateChangeSettings);
	void OnGoatRagdoll(class ULSCharacterMovementComponent* MovementComp, class ACharacter* RagdollingCharacter, struct FRagdollStateChangeSettings& StateChangeSettings);
};

// 0x38 (0x660 - 0x628)
// Class Goat2.GGListEntryUserWidget
class UGGListEntryUserWidget : public UGGButtonUserWidget
{
public:
	uint8                                        Pad_1D94[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UButtonWidgetStyle*                    DefaultStyle;                                      // 0x630(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UButtonWidgetStyle*                    SelectedStyle;                                     // 0x638(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSelectOnFocus;                                    // 0x640(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D95[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnFocusedWidgetReleased;                           // 0x648(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D96[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGListEntryUserWidget* GetDefaultObj();

	void SetSelected(bool bIsSelected);
	void OnSetSelected(bool bIsSelected);
};

// 0x4F0 (0xB50 - 0x660)
// Class Goat2.GGGearItemButtonUserWidget
class UGGGearItemButtonUserWidget : public UGGListEntryUserWidget
{
public:
	uint8                                        Pad_1DBE[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGGoatGearInfoDataAsset*              DataAsset;                                         // 0x668(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECustomizationMode                CustomizationMode;                                 // 0x670(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGearSlot                         StaticGearSlot;                                    // 0x671(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1DBF[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  BuyText;                                           // 0x678(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  HoldBuyText;                                       // 0x690(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  NotYetUnlockedText;                                // 0x6A8(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  NoTokensText;                                      // 0x6C0(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UOverlay*                              EquippedOverlay;                                   // 0x6D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOverlay*                              NewOverlay;                                        // 0x6E0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOverlay*                              PriceOverlay;                                      // 0x6E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOverlay*                              BuyingOverlay;                                     // 0x6F0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOverlay*                              NotEnoughTokensOverlay;                            // 0x6F8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOverlay*                              FavoriteOverlay;                                   // 0x700(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOverlay*                              ErrorOverlay;                                      // 0x708(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOverlay*                              TestGearOverlay;                                   // 0x710(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            GearNameLabel;                                     // 0x718(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            GearPriceLabel;                                    // 0x720(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                GearImage;                                         // 0x728(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                AbilityIcon;                                       // 0x730(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USizeBox*                              AbilityIconContainer;                              // 0x738(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOverlay*                              AbilityFXOverlay;                                  // 0x740(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCheckBox*                             FavoriteCheckbox;                                  // 0x748(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                StyleIcon;                                         // 0x750(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                DLCIcon;                                           // 0x758(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      GearBought;                                        // 0x760(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      NotEnoughTokens;                                   // 0x768(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      GearSelected;                                      // 0x770(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UCameraShakeBase>          BuyCameraShake;                                    // 0x778(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraShakeInnerRadius;                            // 0x780(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraShakeOuterRadius;                            // 0x784(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraShakeFallOff;                                // 0x788(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCameraShakeOrientTowardsEpicenter;                // 0x78C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1DC3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnGearPreviewRequest;                              // 0x790(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	int32                                        Tier;                                              // 0x7A0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StyleSeed;                                         // 0x7A4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NameLimitWidth;                                    // 0x7A8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bGearWasJustEquipped;                              // 0x7AC(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1DC4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FGameplayTag, TSoftObjectPtr<class UTexture2D>> DLCIconMap;                                        // 0x7B0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, NativeAccessSpecifierPublic)
	class UMaterial*                             IconRenderMaterial;                                // 0x800(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FButtonStyle                          BackgroundStyle;                                   // 0x808(0x278)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>             AbilityEnabledIcon;                                // 0xA80(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          AbilityEnabledColor;                               // 0xAA8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>             AbilityDisabledIcon;                               // 0xAB8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          AbilityDisabledColor;                              // 0xAE0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGGGoatGearInfoDataAsset> Gators;                                            // 0xAF0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSupportsBuying;                                   // 0xB18(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSupportsEquipping;                                // 0xB19(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSupportsFavoriting;                               // 0xB1A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSupportsRightClick;                               // 0xB1B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSupportsShowingAbilityIcon;                       // 0xB1C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSupportsShowingAbilityStateInList;                // 0xB1D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUpdateThumbnailOnStylePreview;                    // 0xB1E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRevertStyleThumbnailOnUnequip;                    // 0xB1F(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            GearIcon;                                          // 0xB20(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          CurrentAGTag;                                      // 0xB28(0x8)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGGoatGearInfoDataAsset*              LastIconDataAsset;                                 // 0xB30(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1DC6[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearItemButtonUserWidget* GetDefaultObj();

	void UpdateIconAsset(class UGGGoatGearInfoDataAsset* GearAsset);
	void ToggleError(bool bHasError);
	void ToggleBuyMode(bool bEnable);
	bool SupportsRightClick();
	bool SupportsFavoriting();
	bool SupportsEquipping();
	bool SupportsBuying();
	bool ShouldUpdateIcon(class UGGGoatGearInfoDataAsset* GearAsset);
	bool ShouldUpdateAGTag();
	void SetupBackgrounds();
	void SetUnread();
	void SetTier();
	void SetTestGear();
	void SetStyles();
	void SetPrice();
	void SetName();
	void SetIcon(class UTexture2D* InTexture);
	void SetFavorite();
	void SetEquipped();
	void SetDLC();
	void SetAbility();
	void ResetVisuals();
	void PreformGearAction(enum class EEquipResult Action);
	void PlayBump();
	void OnSetTier(int32 InTier);
	void OnSetTestGear(bool bIsTestGear);
	void OnSetStyles(bool bHasStyles);
	void OnSetPrice();
	void OnSetOverviewMode();
	void OnSetIcon(class UTexture2D* InTexture);
	void OnSetFeaturedMode();
	void OnSetFavorite(bool IsFavorite);
	void OnSetError(bool bError);
	void OnSetEquipped(bool bIsEquipped, bool bWasEquipped);
	void OnSetDLC(bool bIsDLC);
	void OnSetAbility(bool bHasAbility, bool bAbilityEnabled);
	void OnPreformedGearAction(enum class EEquipResult Result);
	void OnGearIsUnknown();
	void OnFavoriteCheckStateChange(bool IsChecked);
	void NativeOnWidgetUnhovered(class UGGUserWidget* InWidget);
	void NativeOnWidgetHovered(class UGGUserWidget* InWidget);
	void LoadIconTexture(TSoftObjectPtr<class UTexture2D> InGearIcon);
	void LoadAndSetIcon(class UGGGoatGearInfoDataAsset* GearAsset);
	bool IsInBuyMode();
	bool IsGearUnlocked();
	bool IsGearUnknown();
	int32 GetUnlockTypeFromTag(const struct FGameplayTag& UnlockType, bool* Found);
	int32 GetRarityFromTag(const struct FGameplayTag& Rarity, bool* Found);
	TSoftObjectPtr<class UTexture2D> GetAGIconFromTag(const struct FGameplayTag& AltGoatTag);
	TSoftObjectPtr<class UTexture2D> DetermineIcon(class UGGGoatGearInfoDataAsset* GearAsset);
	bool CanCurrentAGEquipThis(class UGGGoatGearInfoDataAsset* GearAsset);
	bool CanAffordGear();
};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGGearItemWidgetInterface
class IGGGearItemWidgetInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IGGGearItemWidgetInterface* GetDefaultObj();

	void SetGearData(class UGGGoatGearInfoDataAsset* DataAsset);
	void SetAbilityActive(bool Active);
	void SelectGearStyle(class UGGGoatGearInfoDataAsset* DataAsset, class UGGGoatGearStyleDataAsset* StyleAsset);
	void RefreshGearData(bool bRebuild);
	void PreviewGearStyle(class UGGGoatGearInfoDataAsset* DataAsset, class UGGGoatGearStyleDataAsset* StyleAsset);
	void PreviewedGearData(class UGGGoatGearInfoDataAsset* DataAsset);
	enum class EGearSlot GetGearSlot();
	class UGGGoatGearInfoDataAsset* GetCurrentGearData();
	void CommitedGearData(class UGGGoatGearInfoDataAsset* DataAsset);
	void ClearGearData(enum class EGearSlot Slot);
};

// 0x70 (0x390 - 0x320)
// Class Goat2.GGGearListUserWidget
class UGGGearListUserWidget : public UGGMenuComponentUserWidget
{
public:
	TMap<struct FGameplayTag, class UGGGoatGearInfoDataAsset*> AltGoatDataAssetMap;                               // 0x320(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_1DD1[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearListUserWidget* GetDefaultObj();

	void UpdateGearList();
	bool FilterGear(class UGGGoatGearInfoDataAsset* DataAsset, const struct FGameplayTagContainer& Filters);
	bool FilterAltGoatRestriction(class UGGGoatGearInfoDataAsset* DataAsset);
};

// 0x48 (0x278 - 0x230)
// Class Goat2.GGGearProjectileBase
class AGGGearProjectileBase : public AActor
{
public:
	class UShapeComponent*                       CollisionComponent;                                // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProjectileMovementComponent*          ProjectileMovementComponent;                       // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, Net, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundCue*                             LaunchSound;                                       // 0x240(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class AActor>>            ExclusiveActorTypesToCollideWith;                  // 0x248(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class AActor>>            ActorTypesToIgnore;                                // 0x258(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	bool                                         bHasALifetime;                                     // 0x268(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1DDF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ProjectileLifetime;                                // 0x26C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAudioComponent*                       LaunchAudioComponent;                              // 0x270(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AGGGearProjectileBase* GetDefaultObj();

	void OnHitBlueprint(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void OnHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void OnEndOverlapBlueprint(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnBeginOverlapBlueprint(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x20 (0x50 - 0x30)
// Class Goat2.GGGearSlotDefinition
class UGGGearSlotDefinition : public UDataAsset
{
public:
	enum class EGearSlot                         SlotType;                                          // 0x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1DE0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  Name;                                              // 0x38(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGGearSlotDefinition* GetDefaultObj();

};

// 0xD0 (0x300 - 0x230)
// Class Goat2.GGGhost
class AGGGhost : public AActor
{
public:
	FMulticastInlineDelegateProperty_            OnGhostPossessing;                                 // 0x230(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int32                                        AmountToPossesNPC;                                 // 0x240(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          PossesedNPCTag;                                    // 0x244(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FDelegateProperty_                           OnGhostUnpossessing;                               // 0x24C(0x10)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1DE9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USphereComponent*                      SphereCollisionComponent;                          // 0x260(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProjectileMovementComponent*          ProjectileMovementComponent;                       // 0x268(0x8)(Edit, BlueprintVisible, ExportObject, Net, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InitialVelocityMultiplier;                         // 0x270(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ThrusterRotationRandomizationFrequency;            // 0x274(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxThrusterRotationChange;                         // 0x278(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  PossessedSocketLocationName;                       // 0x27C(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1DEB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       PossessedParticle;                                 // 0x288(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            PossessedSound;                                    // 0x290(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*              ParticleComp;                                      // 0x298(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAudioComponent*                       AudioComp;                                         // 0x2A0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPhysicsThrusterComponent*             NpcPhysicsThruster;                                // 0x2A8(0x8)(ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGGoat*                               OwnerGoat;                                         // 0x2B0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGNPC*                                TargetNPC;                                         // 0x2B8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1DEC[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGGhost* GetDefaultObj();

	void ServerSetGhostParameters(struct FGhostParameters& Params);
	void ServerRandomizeThrusterRotation();
	void OnTargetNpcDestroyed(class AActor* NPC);
	void OnNPCUnRagdolled(bool bRagdollOnGround, class ULSCharacterMovementComponent* MovementComp, class ACharacter* Character, struct FRagdollStateChangeSettings& StateChangeSettings);
	void OnNPCPooledOrMoved(class AGGNPC* NPC, bool bWasPooled);
	void OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& HitResult);
	void MulticastStopPossessEffects();
	void MulticastStartPossessEffects(class AGGNPC* NPC);
	void MulticastStartHoming(class AGGNPC* NPC);
	void MulticastHideGhost();
	void MulticastAttachThrusterToNpc(class USkeletalMeshSocket* Socket);
	void ClientSetGhostParameters(struct FGhostParameters& Params);
	void ClientAdjustThrusterRotation(struct FRotator& Rotator);
};

// 0x240 (0x270 - 0x30)
// Class Goat2.GGGlobalEventHandler
class UGGGlobalEventHandler : public UGameInstanceSubsystem
{
public:
	FMulticastInlineDelegateProperty_            OnInteractedDelegate;                              // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnActorTookDamageDelegate;                         // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCharacterJumpedDelegate;                         // 0x50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHandlerGoatBaaDelegate;                          // 0x60(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHandlerGoatHeadbuttedActorDelegate;              // 0x70(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHandlerGoatLickedActorDelegate;                  // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHandlerPlayerWorldAreaEnteredDelegate;           // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHandlerPlayerWorldAreaExitedDelegate;            // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnReceiveKarmaDelegate;                            // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnLocalGearEquipDelegate;                          // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnLocalGearUnEquipDelegate;                        // 0xD0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnQuestUpdatedDelegate;                            // 0xE0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnQuestCompletedDelegate;                          // 0xF0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnQuestTierCompletedDelegate;                      // 0x100(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnQuestCollectionMilestoneReachedDelegate;         // 0x110(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCompletedAchievementDelegate;                    // 0x120(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDecorateThroneRoomDelegate;                      // 0x130(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInstinctTriggeredDelegate;                       // 0x140(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayerGamePhaseChangedDelegate;                  // 0x150(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGameCurrentActiveGameChangedDelegate;            // 0x160(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayerGamePlayerInfoChangedDelegate;             // 0x170(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNotificationShownDelegate;                       // 0x180(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNotificationUpdatedDelegate;                     // 0x190(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNotificationClearedDelegate;                     // 0x1A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMenuActionResolve;                               // 0x1B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayerInfoChangedDelegate;                       // 0x1C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInventoryInitializedDelegate;                    // 0x1D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGoatTowerSynchronisedDelegate;                   // 0x1E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGoatEnteredThroneRoomDelegate;                   // 0x1F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGoatExitedThroneRoomDelegate;                    // 0x200(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStretchGoalSequenceFinnishedDelegate;            // 0x210(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStretchGoalChangedStateDelegate;                 // 0x220(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnIntroSplashCompleteDelegate;                     // 0x230(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayingCinematic;                                // 0x240(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnLoadingScreenRemovedDelegate;                    // 0x250(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateLastWorldCollectionLoadedDelegate;         // 0x260(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGGlobalEventHandler* GetDefaultObj();

	void OnUpdateLastWorldCollectionLoaded();
	void OnStretchGoalSequenceFinnished(class AGGCastleStretchGoal* StretchGoal);
	void OnReceiveKarma(class AGGGoat* Goat, int32 Amount);
	void OnPlayingCinematicUpdated(bool bCinematicFinished);
	void OnPlayerWorldAreaExited(class AGGGoat* Goat, const struct FGameplayTag& LeftArea);
	void OnPlayerWorldAreaEntered(class AGGGoat* Goat, const struct FGameplayTag& NewArea);
	void OnPlayerInfoChanged(class AGGGameState* GameState);
	void OnPlayerGamePlayerInfoChanged(class AGGPlayerGame_Base* PlayerGame);
	void OnPlayerGamePhaseChanged(class AGGPlayerGame_Base* PlayerGame, enum class EPlayerGamePhase NewPhase);
	void OnNotificationUpdated(const struct FNotification& Notification);
	void OnNotificationShown(const struct FNotification& Notification);
	void OnNotificationCleared(const struct FNotification& Notification);
	void OnLoadingScreenRemoved(class AGGPlayerController* Controller, enum class ELoadingScreenType InType, enum class ERemovalReason RemovalReason);
	void OnInventoryInitialized(class UGGInventory* Inventory);
	void OnIntroSplashComplete();
	void OnInteracted(class AActor* SourceActor, class AActor* TargetActor);
	void OnInstinctTriggered(class AGGGoat* Goat, const struct FGameplayTag& InstinctTag);
	void OnGoatTowerSynchronised(class AGGGoatTower* GoatTower, enum class ETowerSynchronizationEvent SynchronizationEvent);
	void OnGoatLickedActor(class AGGGoat* Goat, class AActor* LickedActor);
	void OnGoatHeadbuttedActor(class AGGGoat* Goat, class AActor* HeadbuttedActor);
	void OnGoatExitedThroneRoom(class AGGGoat* Goat, class AGGGoatTower* GoatTower);
	void OnGoatEnteredThroneRoom(class AGGGoat* Goat, class AGGGoatTower* GoatTower);
	void OnGoatBaa(class AGGGoat* Goat);
	void OnGameCurrentActiveGameChanged(class AGGPlayerGame_Base* PlayerGame);
	void OnDecorateThroneRoomUpdate(class AActor* DecorationActor);
	void OnCompletedAchievement(const class FString& AchievementID);
	void OnCharacterJumped(class AGGCharacter* Character);
	void OnActorTookDamage(class AActor* SourceActor, class AActor* TargetActor, float DamageAmount, class UDamageType* DamageType);
};

// 0xE20 (0x1830 - 0xA10)
// Class Goat2.GGGoat
class AGGGoat : public AGGCharacter
{
public:
	uint8                                        Pad_1E4C[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGGoatSpringArmComponent*             CameraBoom;                                        // 0xA30(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCameraComponent*                      FollowCamera;                                      // 0xA38(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAbilitySystemComponent*               AbilitySystem;                                     // 0xA40(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGGoatGearManager*                    GoatGearManager;                                   // 0xA48(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGGoatGearPreviewManager*             GoatGearPreviewManager;                            // 0xA50(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  HornComponent;                                     // 0xA58(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAudioComponent*                       BaaAudioComp;                                      // 0xA60(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGGoatAttributeSet*                   GoatAttributeSet;                                  // 0xA68(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGNeckRagdollComponent*               NeckRagdollComponent;                              // 0xA70(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FGameplayTag>                  CurrentWorldAreas;                                 // 0xA78(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	float                                        StaticMeshImpactDelay;                             // 0xA88(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E4E[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            NPCHitGoatSound;                                   // 0xA98(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<float, class USoundBase*>               GoatRagdollImpactSounds;                           // 0xAA0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<float, class UParticleSystem*>          GoatRagdollImpactParticles;                        // 0xAF0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E4F[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnEnterPlayerWorldArea;                            // 0xB68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnExitPlayerWorldArea;                             // 0xB78(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        MaxNearestWorldAreaDistance;                       // 0xB88(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E51[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AGGPlayerWorldAreaVolume*>      CurrentPlayerWorldAreaVolumes;                     // 0xB90(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class UGGTeleportAreaDataAsset*              WorldAreaTeleportArea;                             // 0xBA0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1E52[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnPlayerEnteredThroneRoom;                         // 0xBB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayerExitedThroneRoom;                          // 0xBC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AGGGoatTower*                          CurrentGoatTower;                                  // 0xBD0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AGGGoatTower*                          LastEnteredGoatTower;                              // 0xBD8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    CloseUpGoatMaterial;                               // 0xBE0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AGGPlayerCamera>           PlayerCameraClass;                                 // 0xBE8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AGGPlayerCamera*                       PlayerCamera;                                      // 0xBF0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UCameraShakeBase>          LandingCameraShakeClass;                           // 0xBF8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LandingCameraShakeTriggerVelocity;                 // 0xC00(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraDistanceAboveFollowBone;                     // 0xC04(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E53[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       JumpParticle;                                      // 0xC10(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       PerfectLandParticle;                               // 0xC18(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            PerfectLandSound;                                  // 0xC20(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UParticleSystem*>               BouncyJumpLandingParticles;                        // 0xC28(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UParticleSystem*>               BouncyJumpTrailParticles;                          // 0xC38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class USoundBase*>                    BouncyJumpingSounds;                               // 0xC48(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UMaterialParameterCollection*          SpeedLinesCollection;                              // 0xC58(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    SpeedLineCurve;                                    // 0xC60(0x88)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UGGGoatMovementComponent*              GoatMovementComp;                                  // 0xCE8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FStartleDetailsSettings               PerfectJumpStartleSettings;                        // 0xCF0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E54[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector_NetQuantize10                 InputDirection;                                    // 0xD48(0xC)(Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1E55[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FMatElement>                   CurrentEffectMaterials;                            // 0xD70(0x10)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<struct FMatElement>                   CurrentOverrideBodyMaterials;                      // 0xD80(0x10)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<struct FMatElement>                   CurrentStatusEffectMaterials;                      // 0xD90(0x10)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<struct FMatElement>                   CurrentBodyMaterials;                              // 0xDA0(0x10)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    CurrentgFurMaterial;                               // 0xDB0(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FMatElement>                   DefaultBodyMaterials;                              // 0xDB8(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FMatElement                           DefaultHornMaterial;                               // 0xDC8(0x10)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    LocalMaterialOverride;                             // 0xDD8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialParameterCollection*          MaterialParamCollection;                           // 0xDE0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialParameterCollectionInstance*  MaterialParamCollectionInst;                       // 0xDE8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FoliageParameterName;                              // 0xDF0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FoliageParameterZOffset;                           // 0xDF8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E56[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGFurComponent*                        GFur;                                              // 0xE00(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFurSplineOverride                    CurrentFurSplineOverride;                          // 0xE08(0x10)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FFurSplineOverride                    CurrentFurSplinePreviewOverride;                   // 0xE18(0x10)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	int32                                        OldFurQuality;                                     // 0xE28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E58[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGGoatGear_Scene_Horns*               CurrentHornGear;                                   // 0xE30(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMesh*                           DefaultHorn;                                       // 0xE38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGAlternativeGoatDataAsset*           CurrentAltGoat;                                    // 0xE40(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E59[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UGGAlternativeGoatDataAsset> DefaultGoat;                                       // 0xE50(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 CanceledOnAltGoatSwitch;                           // 0xE78(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnAltGoatChanged;                                  // 0xE98(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E5A[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UClass*>                        AlwaysLoadedGameplayCues;                          // 0xEC0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGearAbilityActivated;                            // 0xED0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class UGGGoatAbility>            HeadbuttAbility;                                   // 0xEE0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGGoatAbility_Headbutt*               HeadbuttAbilityInstance;                           // 0xEE8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USoundBase>             PlayerHeadbuttSound;                               // 0xEF0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGoatStartPlayingHeadbuttAnimation;               // 0xF18(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGoatHeadbuttedActor;                             // 0xF28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGoatHeadbutting;                                 // 0xF38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bCanHeadbutt;                                      // 0xF48(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1E5C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGGGoatAbility>            ChargeHeadbuttAbility;                             // 0xF50(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGGoatAbility_ChargeHeadbutt*         ChargeHeadbuttAbilityInstance;                     // 0xF58(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ChargeHeadbuttStage;                               // 0xF60(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E5D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGGGoatAbility>            BackKickAbility;                                   // 0xF68(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGGoatAbility_BackKick*               BackkickAbilityInstance;                           // 0xF70(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGoatBackKicking;                                 // 0xF78(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGoatKickedActor;                                 // 0xF88(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FBaaSoundOverride>             BaaSoundOverrides;                                 // 0xF98(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPrivate)
	FMulticastInlineDelegateProperty_            OnGoatBaa;                                         // 0xFA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGoatStartedBaaing;                               // 0xFB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FLickedComponent                      LickedComponent;                                   // 0xFC8(0x30)(Net, RepNotify, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UPhysicsHandleComponent*               LickPhysHandleComp;                                // 0xFF8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPhysicsHandleComponent*               ReversedLickPhysHandleComp;                        // 0x1000(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TongueRetractionInterpSpeedAfterDropLick;          // 0x1008(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               TongueLocation;                                    // 0x100C(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TongueActive;                                      // 0x1018(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E5E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGGGoatAbility>            LickAbility;                                       // 0x1020(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableGearPartsWhenBeingLicked;                  // 0x1028(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E5F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               TongueGrabLocation;                                // 0x102C(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGoatLickedActor;                                 // 0x1038(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGoatMissedLick;                                  // 0x1048(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGoatStartedLicking;                              // 0x1058(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGoatDroppedLickedActor;                          // 0x1068(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bCanLick;                                          // 0x1078(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1E60[0x17];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          HeadbuttMontage;                                   // 0x1090(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          ChargeHeadbuttMontage;                             // 0x1098(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          LickMontage;                                       // 0x10A0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          BackKickMontage;                                   // 0x10A8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanAnimate;                                       // 0x10B0(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1E62[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCharacterCollisionState              CollisionState;                                    // 0x10B4(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnInstance, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E63[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DefaultSlipperyDisableCCDTime;                     // 0x10F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E64[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGGoatEmote*                          CurrentEmote;                                      // 0x1100(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UGGGoatEmote*>                  EquippedEmotes;                                    // 0x1108(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	float                                        EmoteBlendOutTime;                                 // 0x1118(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E65[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnGoatEmoteStarted;                                // 0x1130(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGoatEmoteEnded;                                  // 0x1140(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              GrindParticlesComp;                                // 0x1150(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  GrindParticleSocket;                               // 0x1158(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAudioComponent*                       GrindSoundComp;                                    // 0x1160(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCrashedInto;                                     // 0x1168(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              TeleportMaterialInstance;                          // 0x1178(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*              TeleportMatInstance;                               // 0x1180(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       KarmaBigHeadParticle;                              // 0x1188(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       KarmaSmallHeadParticle;                            // 0x1190(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       KarmaBodyParticle;                                 // 0x1198(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            SmallKarmaRewardAudio;                             // 0x11A0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            MediumKarmaRewardAudio;                            // 0x11A8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            BigKarmaRewardAudio;                               // 0x11B0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinKarmaAmountFullParticle;                        // 0x11B8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxKarmaAmountSmallParticle;                       // 0x11BC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       ChaosHeadParticle;                                 // 0x11C0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       ChaosBodyParticle;                                 // 0x11C8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PostProcessingChaosTimer;                          // 0x11D0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E68[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPostProcessSettings                  ChaosPostProcessingSettings;                       // 0x11E0(0x560)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        DistanceAboveGoat;                                 // 0x1740(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BodySocketName;                                    // 0x1744(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HeadSocketName;                                    // 0x174C(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E69[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystemComponent*              KarmaHeadParticleComp;                             // 0x1758(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1E6A[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  GenericRagdolledHitTextFormat;                     // 0x1770(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  HitAnotherProjectileTextFormat;                    // 0x1788(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  MountedByTextFormat;                               // 0x17A0(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  GrabbedByTextFormat;                               // 0x17B8(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  AttackedByTextFormat;                              // 0x17D0(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class AGGPlayerController*                   GGPlayerController;                                // 0x17E8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bHasBegunPlayLocally;                              // 0x17F0(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1E6B[0x1B];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        AmountOfFishSlap;                                  // 0x180C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AmountOfVentsTraveled;                             // 0x1810(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AmountOfFireworksUsed;                             // 0x1814(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AmountOfBusStopsDestroyed;                         // 0x1818(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E6D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGMiniGamePlayerComp*                 MiniGameComponent;                                 // 0x1820(0x8)(ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E6E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGGoat* GetDefaultObj();

	void UpdateFurQuality();
	void ToggleLadderFootstepSounds(bool bOnLadder);
	void StopCurrentEmote();
	void SetUseCustomStencil(bool bInUseCustomStencil, int32 CustomStencilIndex);
	void SetTongueConstraintsLocked(bool ShouldBeLocked);
	void SetOwnMeshesVisible(bool bVisible);
	void SetNeckRagdollDisabled(bool bShouldBeDisabled);
	void SetLickEnabled(bool NewEnabled);
	void SetLastEnteredGoatTower(class AGGGoatTower* GoatTower, bool bSaveInFile);
	void SetHeadbuttEnabled(bool NewEnabled);
	void SetGFurVisibility(bool bNewVisibility);
	void SetCanAnimate(bool NewCanAnimate);
	void SetCameraOverrideFocusRelativeLocation(const struct FVector& RelativeLocation, float BlendSpeed);
	void SetCameraArmValues(float Min, float Max);
	void SetBodyMat(const TArray<struct FMatElement>& NewBodyMaterials, class UMaterialInterface* GFurMaterial);
	void SetAltGoat(class UGGAlternativeGoatDataAsset* NewGoat);
	void SetAbilityOverride(TSubclassOf<class UGGGoatAbility> AbilityOverride, enum class EGoatAbilitySlot Slot);
	void ServerStopCurrentEmote(class UGGGoatEmote* Emote);
	void ServerStartleNPCsOnPerfectJump(class AGGGoat* JumpingGoat, const struct FVector& Location);
	void ServerStartleNPCsOnPerfecLanding(class AGGGoat* LandedGoat, const struct FVector& Location);
	void ServerSetLickEnabled(bool NewEnabled);
	void ServerSetInputDirection(const struct FVector_NetQuantize10& NewInputDirection);
	void ServerSetHeadbuttEnabled(bool NewEnabled);
	void ServerPlayEmote(class UGGGoatEmote* Emote);
	void ServerInteract(class UObject* InteractWith, float HeldFor);
	void ServerDropLickedObject();
	void ServerBegunPlayLocally();
	void ServerApplyStatusEffectToSelf(enum class EStatusEffectTypes StatusEffectType, enum class EApplicationMethod ApplicationMethod, class AActor* SpreadFrom, TSubclassOf<class AGGStatusEffectBase> StatusEffectClass, class AGGStatusEffectBase* SpreadFromStatus);
	void SaveGameStartLocation(const struct FVector& Location);
	void ResetToDefaultGoat();
	void ResetToDefaultBodyMat();
	void ResetOverrideCameraFocus();
	void ResetCameraArmValues();
	void ResetAbilityOverride(enum class EGoatAbilitySlot Slot);
	void RemoveMiniGamePlayerComponent();
	void RemoveBaaOverride(const struct FGameplayTag& Source);
	void ReEnableCCD();
	void ReDetachCamera();
	void PrepareForWorldInstanceSave(class UGGWorldSave* WorldSaveInstance, bool* bNeedsToUpdateArea);
	void PlayOnPerfectLandingEffects(const struct FVector& Location);
	void PlayOnGoatBouncyJumpEffects(int32 JumpCount, const struct FVector& Location);
	void PlayLandSound();
	void PlayJumpSound();
	void PlayEmote(class UGGGoatEmote* Emote);
	void PlayCameraShakeOnLanded(struct FHitResult& Hit);
	void OverrideCameraAttachment(class USceneComponent* AttachToComponent);
	void OverlapBegin(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnRep_LickedComponent();
	void OnRep_HasBegunPlayLocally();
	void OnRep_CurrentStatusEffectMaterials();
	void OnRep_CurrentOverrideBodyMaterials();
	void OnRep_CurrentGoatTower(class AGGGoatTower* LastGoatTower);
	void OnRep_CurrentEffectMaterials();
	void OnRep_CurrentBodyMaterials();
	void OnRep_CurrentAltGoat();
	void OnRep_ChargeHeadbuttStage();
	void OnRep_CanAnimate();
	void OnRemoveChaosPostProcessing();
	void OnPerfectLanding(class AGGGoat* Goat, const struct FVector& Location);
	void OnPerfectJump(class AGGGoat* Goat, const struct FVector& Location);
	void OnMeshPhysStateChanged(class USkeletalMeshComponent* Component, bool bCreated);
	void OnKarmaRewarded(class AGGGoat* Goat, int32 Amount);
	void OnHeadbuttEvent_K2(bool bHitSomething, TArray<class AActor*>& HeadbuttedActors, bool bIsChargeHeadbutt);
	void OnGoatTeleported(class AGGCharacter* Character, struct FTransform& OldTransform);
	void OnGoatBouncyJump(class AGGGoat* Goat, int32 JumpCount, const struct FVector& Location);
	void OnGearWasUpdated(class AGGGoat* Goat, TArray<class USceneComponent*>& CurrentGoatGear);
	void OnEquippedPreviewGearChildMesh(class UMeshComponent* PreviewedMesh);
	void OnEquippedPreviewGear(class UMeshComponent* PreviewedMesh);
	void OnCommittedPreviewGear(class UMeshComponent* PreviewedMesh, class UGGGoatGearInfoDataAsset* CommitedDataAsset);
	void OnChaosRewarded(int32 Amount);
	void OnChaosAcquired(int32 Amount);
	void OnAnimNotifyTrigger(class AGGCharacter* Character, class UGGAnimNotify* AnimNotify, const struct FGameplayTag& NotifyTag);
	void MulticastTeleportGoat(const struct FVector_NetQuantize& Location, const struct FRotator& Rotation, enum class ETeleportVehicleHandle VehicleHandle, bool bSetMoveMode, enum class EMovementMode MoveMode, class AGGVehicle* TeleportInto);
	void MulticastSetMeshChannelResponse(enum class ECollisionChannel Channel, enum class ECollisionResponse Response);
	void MulticastReleaseFromCaption();
	void MulticastPlayEmoteMontage(class UGGGoatEmote* Emote);
	bool IsPlayingHeadbuttAnimation();
	bool IsNeckRagdoll();
	bool IsLickingSomethingDangerous();
	bool IsInThroneRoom();
	bool IsInPlayerWorldArea(const struct FGameplayTag& TestPlayerWorldArea, bool bMatchChildren);
	bool IsEmoting();
	bool IsChargingHeadbutt();
	bool IsCameraAttachedToGoatRoot();
	bool IsAbilityActiveWithTag(const struct FGameplayTag& Tag);
	bool IsAbilityActiveWithClass(TSubclassOf<class UGameplayAbility> CheckClass);
	void Interact(class UObject* InteractWith, float HeldFor);
	bool InArea(const struct FGameplayTag& WorldArea);
	bool HasOverrideCameraFocus();
	bool HasBegunPlayLocally();
	bool HasALickedObject();
	bool HasAbilityWithTag(const struct FGameplayTag& Tag);
	void HandleFootstepSound(const struct FGameplayTag& NotifyTag);
	void GrindStarted(class UGGGrindableSplineComponent* GrindSpline);
	void GrindHyperspeedStarted(class UGGGrindableSplineComponent* GrindSpline);
	void GrindHyperspeedEnded(class UGGGrindableSplineComponent* GrindSpline);
	void GrindEnded();
	class UPhysicsHandleComponent* GetReverseLickPhysicsHandle();
	TArray<struct FGameplayTag> GetNearestPlayerWorldAreas(const struct FVector& GameStartLocation);
	class UGGMiniGamePlayerComp* GetMiniGamePlayerComponent();
	class UMaterialInterface* GetLocalMaterialOverride();
	class UPhysicsHandleComponent* GetLickPhysicsHandle();
	class AActor* GetLickedObject();
	struct FLickedComponent GetLickedComponentStruct();
	class UPrimitiveComponent* GetLickedComponent();
	struct FBaaSoundOverride GetHighestPrioBaaOverride();
	class AGGPlayerState* GetGGPlayerState();
	class AGGPlayerController* GetGGPlayerController();
	class UGGGoatGearPreviewManager* GetGearPreviewManager();
	class UGGGoatGearManager* GetGearManager();
	class UGGFootstepComponent* GetFootstepComponent();
	TArray<class UGGGoatEmote*> GetEquippedEmotes();
	struct FMatElement GetDefaultHornMaterial();
	TArray<struct FMatElement> GetDefaultBodyMaterials();
	class UGGAlternativeGoatDataAsset* GetDefaultAltGoat();
	TArray<struct FMatElement> GetCurrentStatusEffectMaterials();
	TArray<struct FGameplayTag> GetCurrentPlayerWorldAreas();
	TArray<struct FMatElement> GetCurrentOverrideBodyMaterials();
	struct FVector GetCurrentInputDirection();
	class UGGGoatEmote* GetCurrentEmote();
	TArray<struct FMatElement> GetCurrentEffectMaterials();
	struct FVector2D GetCurrentCameraArmValues();
	TArray<struct FMatElement> GetCurrentBodyMaterials();
	class UGGAlternativeGoatDataAsset* GetCurrentAltGoat();
	class UAnimMontage* GetAltGoatDefaultBaaMontage();
	struct FVector GetAdjustedTeleportLocation(const struct FVector& OriginLocation, bool bForceOffset, bool bIgnoreOtherGoats, float FloorCheckTraceDistOverride, float MaxHeightDifference, int32 MaxTries, float MaxRadius, float DistanceFromOtherPlayers);
	struct FGameplayAbilitySpecHandle GetAbilitySpecHandleForSlot(enum class EGoatAbilitySlot Slot);
	void EnableGearAbilityInput();
	void EnableGearAbilitiesAndEffects();
	void EnableAllGearAbilities(class AActor* ThisGoat, class AGGGoat* LickingGoat);
	void EmoteStarted(class UGGGoatEmote* Emote);
	void EmoteEnded(class UGGGoatEmote* Emote, bool Interrupted);
	void DropLickedObject();
	void DisableGearAbilitiesAndEffects();
	void DisableAllGearAbilities(class AActor* ThisGoat, class AGGGoat* LickingGoat);
	class UGGMiniGamePlayerComp* CreateMiniGamePlayerComponent(TSubclassOf<class UGGMiniGamePlayerComp> MiniGameCompClass);
	void ClientSnipedCharacterText(class FText& CharName, class FText& PActorName);
	void ClientRunnedOverText(class AGGVehicle* Vehicle);
	void ClientMountedByText(class FText& MountedByName);
	void ClientLickedByText(class FText& TextFormat, class FText& LickedByGoatName);
	void ClientKickedByText(class FText& TextFormat, class FText& KickedByGoatName);
	void ClientHitByText(class FText& HitByName);
	void ClientHitAnotherProjectileText(class FText& HitActorName, class FText& ProjectileName);
	void ClientHeadbuttedByText(class FText& TextFormat, class FText& HeadbuttedByGoatName);
	void ClientGrabbedByText(class AGGNPC_Humanoid* Police);
	void ClientAttackedByText(class FText& TextFormat, class FText& AttackedByName);
	void CapsuleCompPhysicsVolumeChanged(class APhysicsVolume* NewVolume);
	bool CanLick();
	bool CanHeadbutt();
	void CancelGearAbilitiesAndDisableInput();
	void CancelAbilityWithTag(const struct FGameplayTag& Tag);
	bool CanAnimate();
	void BroadcastHeadbuttEvents_Server(TArray<class UPrimitiveComponent*>& HeadbuttedPrimComps, TArray<class AActor*>& HeadbuttedActors, bool bIsChargeHeadbutt);
	void BroadcastHeadbuttEvents_Multicast(TArray<class UPrimitiveComponent*>& HeadbuttedPrimComps, TArray<class AActor*>& HeadbuttedActors, bool bIsChargeHeadbutt);
	void BroadcastGoatBaa();
	void BroadcastBackKickEvents_Server(TArray<class UPrimitiveComponent*>& HeadbuttedPrimComps, TArray<class AActor*>& KickedActors);
	void BroadcastBackKickEvents_Multicast(TArray<class UPrimitiveComponent*>& BackkickedPrimComps, TArray<class AActor*>& KickedActors);
	void AltGoatUpdated(class UGGAlternativeGoatDataAsset* NewGoat);
	void AddBaaOverride(const struct FGameplayTag& Source, class USoundBase* BaaSound, int32 Priority);
};

// 0x10 (0x3C0 - 0x3B0)
// Class Goat2.GGGoatAbility
class UGGGoatAbility : public UGameplayAbility
{
public:
	uint8                                        Pad_1E72[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGGoat*                               OwnerGoat;                                         // 0x3B8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGGGoatAbility* GetDefaultObj();

	void TickAbility(float DeltaTime);
};

// 0xF0 (0x120 - 0x30)
// Class Goat2.GGBaaAbilityData
class UGGBaaAbilityData : public UDataAsset
{
public:
	TMap<struct FGameplayTag, TSoftObjectPtr<class USoundBase>> AltGoatBaaSounds;                                  // 0x30(0x50)(Edit, UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, TSoftObjectPtr<class UAnimMontage>> AltGoatBaaMontages;                                // 0x80(0x50)(Edit, UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, struct FStartleDetailsSettings> AltGoatStartleSettings;                            // 0xD0(0x50)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGBaaAbilityData* GetDefaultObj();

};

// 0x28 (0x468 - 0x440)
// Class Goat2.GGGoatAbility_Baa
class UGGGoatAbility_Baa : public UGGGearAbility
{
public:
	float                                        GoatGreetingRadius;                                // 0x440(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleSlowdownRadius;                             // 0x444(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlowDownValue;                                     // 0x448(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlowDownDuration;                                  // 0x44C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawVehicleSlowdown;                              // 0x450(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E73[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSoftObjectPtr<class UGGBaaAbilityData>> BaaAbilityData;                                    // 0x458(0x10)(Edit, ZeroConstructor, Config, EditConst, UObjectWrapper, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGGoatAbility_Baa* GetDefaultObj();

};

// 0x198 (0x558 - 0x3C0)
// Class Goat2.GGGoatAbility_Repel
class UGGGoatAbility_Repel : public UGGGoatAbility
{
public:
	class FName                                  StartLocationBoneName;                             // 0x3C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               StartLocationOffset;                               // 0x3C8(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RepelDamage;                                       // 0x3D4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RepelPower;                                        // 0x3D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RepelSize;                                         // 0x3DC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsRepelPowerVelocityChange;                       // 0x3E0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E78[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RepelHalfHeight;                                   // 0x3E4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartDistanceFromGoat;                             // 0x3E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceFromGoat;                                  // 0x3EC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RepelCharacterImpulsePower;                        // 0x3F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RepelZValue;                                       // 0x3F4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MontagePlayRate;                                   // 0x3F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawOverlapShape;                                 // 0x3FC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRepelOnRelease;                                   // 0x3FD(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E7A[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  RepelText;                                         // 0x400(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  RepelledByTextFormat;                              // 0x418(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                        ClientTakeRagdollAuthorityFor;                     // 0x430(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E7B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FWeightedElement_String>       ActorHitReactionWeights;                           // 0x438(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        ActorHitReactionRadius;                            // 0x448(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ActorHitLookAtDuration;                            // 0x44C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FStartleDetailsSettings               ActorHitStartleSettings;                           // 0x450(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FStartleDetailsSettings               NearbyRepelStartleSettings;                        // 0x4A0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E7C[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          CurrentAbilityMontage;                             // 0x530(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E7D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        LastRepelledActors;                                // 0x540(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E7E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGoatAbility_Repel* GetDefaultObj();

	void ReplicateRepelImpulseServer(TArray<struct FImpulseDamageEvent>& DamageEvents, TArray<class AActor*>& TargetActors);
	void ReplicateOnRepelStartedServer();
	void ReplicateOnRepelEndedServer();
	bool RepelImpulseDelayed();
	void RepelImpulse(bool SaveRepelledActors, bool ApplySweep, bool IgnoreSavedActors);
	void OnMontageEnded(class UAnimMontage* Montage, bool bInterrupted);
	void MulticastOnRepelStarted(class AGGGoat* GoatThatStarted);
	void EndRepel();
	void CreateRepelNotification(class AGGGoat* Goat, class FText RepelledThingName);
	void CharacterRagdolled(class ULSCharacterMovementComponent* MovementComp, class ACharacter* Character, struct FRagdollStateChangeSettings& StateChangeSettings);
};

// 0x0 (0x558 - 0x558)
// Class Goat2.GGGoatAbility_BackKick
class UGGGoatAbility_BackKick : public UGGGoatAbility_Repel
{
public:

	static class UClass* StaticClass();
	static class UGGGoatAbility_BackKick* GetDefaultObj();

};

// 0x30 (0x588 - 0x558)
// Class Goat2.GGGoatAbility_BackLunge
class UGGGoatAbility_BackLunge : public UGGGoatAbility_BackKick
{
public:
	bool                                         bTwoPhasedBackLunge;                               // 0x558(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E81[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        OnHitRepelSizeMultiplier;                          // 0x55C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BackLungeImpulse;                                  // 0x560(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BackLungeAngle;                                    // 0x564(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FailSafeBackLungeResetTime;                        // 0x568(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InWaterResetTime;                                  // 0x56C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          BackLungeStartCueTag;                              // 0x570(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          BackLungeTrailCueTag;                              // 0x578(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          BackLungeHitCueTag;                                // 0x580(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGGGoatAbility_BackLunge* GetDefaultObj();

	void ServerRepelImpulse(bool SaveRepelledActors, bool ApplySweep, bool IgnoreSavedActors);
	void OnPlayerEnteredWater(class APhysicsVolume* WaterVolume);
	void OnCollidedWithSomething(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, struct FHitResult& Hit);
};

// 0x0 (0x558 - 0x558)
// Class Goat2.GGGoatAbility_Headbutt
class UGGGoatAbility_Headbutt : public UGGGoatAbility_Repel
{
public:

	static class UClass* StaticClass();
	static class UGGGoatAbility_Headbutt* GetDefaultObj();

};

// 0x80 (0x5D8 - 0x558)
// Class Goat2.GGGoatAbility_ChargeHeadbutt
class UGGGoatAbility_ChargeHeadbutt : public UGGGoatAbility_Headbutt
{
public:
	class UCurveFloat*                           ChargeCurve;                                       // 0x558(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           CharacterChargeCurve;                              // 0x560(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>           SpeedGameplayEffect;                               // 0x568(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxPowerForAnimation;                              // 0x570(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E84[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FChargeHeadbuttParticleStage>  ParticleStages;                                    // 0x578(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class USoundCue*>                     ChargeStageStartSounds;                            // 0x588(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class USoundCue*                             ChargeHeadbuttLoopSound;                           // 0x598(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class USoundCue*>                     ChargeHeadbuttReleaseSounds;                       // 0x5A0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bDebugPrints;                                      // 0x5B0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bChargingHeadbutt;                                 // 0x5B1(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E85[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ChargeHeadbuttStartTimestamp;                      // 0x5B4(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              ChargeParticleSystemComponent;                     // 0x5B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAudioComponent*                       ChargeSoundComponent;                              // 0x5C0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LastChargePower;                                   // 0x5C8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FActiveGameplayEffectHandle           MSChangeHandle;                                    // 0x5CC(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E86[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGoatAbility_ChargeHeadbutt* GetDefaultObj();

	float GetCurrentChargePower();
};

// 0xD0 (0x490 - 0x3C0)
// Class Goat2.GGGoatAbility_Lick
class UGGGoatAbility_Lick : public UGGGoatAbility
{
public:
	class FName                                  StartLocationBoneName;                             // 0x3C0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               StartLocationOffset;                               // 0x3C8(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TongueMaxLength;                                   // 0x3D4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LickDelay;                                         // 0x3D8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E8A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  LickTextFormat;                                    // 0x3E0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  LickedByTextFormat;                                // 0x3F8(0x18)(Edit, NativeAccessSpecifierPublic)
	float                                        LickSize;                                          // 0x410(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LickHalfHeight;                                    // 0x414(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartDistanceFromGoat;                             // 0x418(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceFromGoat;                                  // 0x41C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawOverlapShape;                                 // 0x420(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E8B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  MouthParticleSocket;                               // 0x424(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HeadBone;                                          // 0x42C(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          GameplayCuePickUpSound;                            // 0x434(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          GameplayCueDropSound;                              // 0x43C(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E8C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       ParticlesMouth;                                    // 0x448(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       ParticlesImpact;                                   // 0x450(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       ParticlesPActorImpact;                             // 0x458(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DroppedPActorNotifyRadius;                         // 0x460(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E8D[0x2C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGoatAbility_Lick* GetDefaultObj();

	void UpdateLatestInstigator();
	void ServerSetLickedObject(class UPrimitiveComponent* ClosestComponent, class UObject* ClosestLickable, class FName LickedBone);
	void MulticastStoppedBeingLicked(class UObject* LickedObject, class AGGGoat* Goat);
	void MulticastSetLickedObject(class AGGGoat* Goat, class UPrimitiveComponent* ClosestComponent, class UObject* ClosestLickable, class FName LickedBone);
	void ExecuteLick();
	void CharacterEnterVehicle(class AGGCharacter* Character, class AGGVehicle* Vehicle);
};

// 0x48 (0x4D8 - 0x490)
// Class Goat2.GGGoatAbility_Lick_Eat
class UGGGoatAbility_Lick_Eat : public UGGGoatAbility_Lick
{
public:
	float                                        DelayTongueStayAtObject;                           // 0x490(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DelayUntilEatObject;                               // 0x494(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PhysicsHandleInterpSpeedModifier;                  // 0x498(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PhysicsHandleInterpSpeedVehicleMassModifier;       // 0x49C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PhysicsHandleInterpSpeedMinimumMass;               // 0x4A0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E8E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UObject*                               CachedClosestLickable;                             // 0x4A8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPrimitiveComponent*                   CachedClosestComponent;                            // 0x4B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  CachedLickedBone;                                  // 0x4B8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AGGGoat*                               CachedGoat;                                        // 0x4C0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E8F[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGoatAbility_Lick_Eat* GetDefaultObj();

	void OnTongueDoneAtObject();
	void OnObjectPulledTowardsGoat();
};

// 0x30 (0x588 - 0x558)
// Class Goat2.GGGoatAbility_Lunge
class UGGGoatAbility_Lunge : public UGGGoatAbility_Headbutt
{
public:
	bool                                         bTwoPhasedLunge;                                   // 0x558(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E91[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        OnHitRepelSizeMultiplier;                          // 0x55C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LungeImpulse;                                      // 0x560(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LungeAngle;                                        // 0x564(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FailSafeLungeResetTime;                            // 0x568(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InWaterResetTime;                                  // 0x56C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          LungeStartCueTag;                                  // 0x570(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          LungeTrailCueTag;                                  // 0x578(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          LungeHitCueTag;                                    // 0x580(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGGGoatAbility_Lunge* GetDefaultObj();

	void ServerRepelImpulse(bool SaveRepelledActors, bool ApplySweep, bool IgnoreSavedActors);
	void OnPlayerEnteredWater(class APhysicsVolume* WaterVolume);
	void OnCollidedWithSomething(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, struct FHitResult& Hit);
};

// 0x120 (0x3D8 - 0x2B8)
// Class Goat2.LSAnimInstance
class ULSAnimInstance : public UAnimInstance
{
public:
	uint8                                        Pad_1E9B[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  TurnAngleCurveName;                                // 0x300(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  TurnMontageSlotName;                               // 0x308(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLSTurnAnims                          Turn90Anims;                                       // 0x310(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FLSTurnAnims                          Turn180Anims;                                      // 0x320(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FLSTurnAnims                          Turn90LeftFootAnims;                               // 0x330(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FLSTurnAnims                          Turn90RightFootAnims;                              // 0x340(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FLSTurnAnims                          TurnCrouchedRF90Anims;                             // 0x350(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FLSTurnAnims                          TurnCrouchedLF90Anims;                             // 0x360(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FLSTurnAnims                          TurnCrouched180Anims;                              // 0x370(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UCurveFloat*                           FlailAlphaCurve;                                   // 0x380(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           LandAlphaCurve;                                    // 0x388(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FlailBlendSpeed;                                   // 0x390(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLSAnimationSpeeds                    AnimSpeeds;                                        // 0x394(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        DeltaDistanceForTeleport;                          // 0x3A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxPlayRate;                                       // 0x3A8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E9C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          GetUpFromBack;                                     // 0x3B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          GetUpFromFront;                                    // 0x3B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          GetUpFromLeftSide;                                 // 0x3C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          GetUpFromRightSide;                                // 0x3C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimSequenceBase*                     AdditiveLandAnimation;                             // 0x3D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ULSAnimInstance* GetDefaultObj();

	void OnViewModeChanged(enum class ELSViewMode NewMode, class ULSCharacterMovementComponent* MovementComp);
	void OnUnRagdoll(bool bRagdollOnGround, class ULSCharacterMovementComponent* MovementComp, class ACharacter* UnRagdolledCharacter, struct FRagdollStateChangeSettings& StateChangeSettings);
	void OnTurnInPlaceTriggered(class ULSCharacterMovementComponent* MovementComp, float DeltaAngle);
	void OnStanceChanged(enum class ELSStance NewStance, class ULSCharacterMovementComponent* MovementComp);
	void OnRotationModeChanged(enum class ELSRotationMode NewMode, class ULSCharacterMovementComponent* MovementComp);
	void OnRagdolling(class ULSCharacterMovementComponent* MovementComp, class ACharacter* RagdollingCharacter, struct FRagdollStateChangeSettings& StateChangeSettings);
	void OnMovementSpeedChanged(class ULSCharacterMovementComponent* MovementComp);
	void OnMovementModeChanged(enum class EMovementMode NewMode, enum class EMovementMode PrevMode, uint8 NewCustomMode, uint8 PrevCustomMode, class ULSCharacterMovementComponent* MovementComp);
	void OnGaitChanged(enum class ELSGait NewGait, class ULSCharacterMovementComponent* MovementComp);
	void OnFinishStandingUp(class ULSCharacterMovementComponent* MovementComp, class ACharacter* Character);
	void OnAimingChanged(bool bIsAimingNow, class ULSCharacterMovementComponent* MovementComp);
	struct FLSAnimInstanceProxy GetProxyRef(bool* OutIsValid);
};

// 0xB08 (0xEE0 - 0x3D8)
// Class Goat2.GGGoatAnimInstance
class UGGGoatAnimInstance : public ULSAnimInstance
{
public:
	uint8                                        Pad_1E9D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGGGoatAnimInstanceProxy              Proxy;                                             // 0x3E0(0x9D0)(BlueprintVisible, BlueprintReadOnly, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class AGGGoat*                               CachedGoat;                                        // 0xDB0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AGGPlayerController*                   CachedPC;                                          // 0xDB8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDidBouncyJump;                                    // 0xDC0(0x1)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOnLadder;                                         // 0xDC1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsEmoting;                                        // 0xDC2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E9E[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        IsMovingBlendweight;                               // 0xDC4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               NormalizedVelocityLocalSpace;                      // 0xDC8(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentYawRotationSpeed;                           // 0xDD4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayRunInsteadOfSprint;                           // 0xDD8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EA0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AirTimestamp;                                      // 0xDDC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInAir;                                            // 0xDE0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bJustJumped;                                       // 0xDE1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsFreefalling;                                    // 0xDE2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EA1[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FreeFallingThreshold;                              // 0xDE4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPositiveZVelocity;                                // 0xDE8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDoingTricks;                                      // 0xDE9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EA2[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FallBlendSpaceControl;                             // 0xDEC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             LookAtDirection;                                   // 0xDF0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGoatBlendSlots                   GoatSlotBlending;                                  // 0xDF8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsGrinding;                                       // 0xDF9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EA3[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GrindSpeed;                                        // 0xDFC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsWallrunning;                                    // 0xE00(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EA4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WallrunMeshPotentialAngle;                         // 0xE04(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WallruningDirectionInterpSpeeed;                   // 0xE08(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               HeadBoneScale;                                     // 0xE0C(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsSwimming;                                       // 0xE18(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsSprinting;                                      // 0xE19(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInVehicle;                                        // 0xE1A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsBiking;                                         // 0xE1B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDriver;                                         // 0xE1C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOnlyNeckBaa;                                      // 0xE1D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsRiding;                                         // 0xE1E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsPigSliding;                                     // 0xE1F(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FootIKAlpha;                                       // 0xE20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BikePedalRotationAlpha;                            // 0xE24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsGrounded;                                       // 0xE28(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EA6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGGStiffBones                         StiffBodyParts;                                    // 0xE2C(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EA7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<float>                                SprintChances;                                     // 0xE50(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, AdvancedDisplay, NativeAccessSpecifierPublic)
	float                                        MinSprintAnimTime;                                 // 0xE60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSprintAnimTime;                                 // 0xE64(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentSprintIndex;                                // 0xE68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SprintAnimStartTimestamp;                          // 0xE6C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentSprintAnimLength;                           // 0xE70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWasSprinting;                                     // 0xE74(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EA9[0x2B];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ULSAnimationCollection*                Animations;                                        // 0xEA0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCSNIKBoneContainer                   IKBonesContainer;                                  // 0xEA8(0x20)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	float                                        TongueRetractionInterpSpeedAfterDropLick;          // 0xEC8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FootIKRagdollBlendOutTime;                         // 0xECC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        VelocityThresholdUnderWaterMovement;               // 0xED0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseConstantInterpSpeedForUnderWater;              // 0xED4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1EAA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        UnderWaterPitchRotationSpeed;                      // 0xED8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UnderWaterToHorizontalRotationSpeed;               // 0xEDC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGGGoatAnimInstance* GetDefaultObj();

	void OnCharacterOwnerExitedVehicle(class AGGCharacter* Character, class AGGVehicle* Vehicle);
	void OnCharacterOwnerEnteredVehicle(class AGGCharacter* Character, class AGGVehicle* Vehicle);
};

// 0x30 (0x60 - 0x30)
// Class Goat2.GGGoatAttributeSet
class UGGGoatAttributeSet : public UAttributeSet
{
public:
	struct FGameplayAttributeData                SpeedMultiplier;                                   // 0x30(0x10)(Edit, BlueprintVisible, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                GravityScale;                                      // 0x40(0x10)(Edit, BlueprintVisible, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                RagdollMovementVelocity;                           // 0x50(0x10)(Edit, BlueprintVisible, Net, RepNotify, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGGoatAttributeSet* GetDefaultObj();

	void OnRep_SpeedMultiplier(struct FGameplayAttributeData& OldValue);
	void OnRep_RagdollMovementVelocity(struct FGameplayAttributeData& OldValue);
	void OnRep_GravityScale(struct FGameplayAttributeData& OldValue);
};

// 0x58 (0xB8 - 0x60)
// Class Goat2.GGGoatCastleSubsystem
class UGGGoatCastleSubsystem : public UGGWorldSubsystem
{
public:
	TArray<class AGGCastleStretchGoal*>          CastleStretchGoals;                                // 0x60(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1EB5[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnCurrentGoalUpdated;                              // 0x78(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGoalUnlocked;                                    // 0x88(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EB6[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGThroneRoomScanner*                  ThroneRoomScanner;                                 // 0xA8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AGGBossPortal*                         BossPortal;                                        // 0xB0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGGoatCastleSubsystem* GetDefaultObj();

	void UnlockStretchGoalWithIndex(int32 Index, enum class EStateChangeSource Source, bool bAllowOutOfOrderUnlock);
	void UnlockStretchGoal(class AGGCastleStretchGoal* StretchGoal, enum class EStateChangeSource Source, bool bAllowOutOfOrderUnlock);
	void OnTotalChaosChanged(int32 TotalChaos);
	bool IsAnyGoalUnlocking();
	bool HasUnlockedAllStretchGoals();
	int32 GetUnlockedStretchGoalsNum();
	float GetGoalProgressForChaos(class AGGCastleStretchGoal* StretchGoal, int32 ChaosAmount);
	float GetGoalProgress(class AGGCastleStretchGoal* StretchGoal);
	class AGGCastleStretchGoal* GetCurrentlyProgressingGoal();
	class AGGCastleStretchGoal* GetCurrentlyActiveGoal();
	TArray<class AGGCastleStretchGoal*> GetCastleStretchGoals();
};

// 0x80 (0x2B0 - 0x230)
// Class Goat2.GGGoatCastleTeleportationTrigger
class AGGGoatCastleTeleportationTrigger : public AActor
{
public:
	class USceneComponent*                       SceneRoot;                                         // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                TeleportArea;                                      // 0x238(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          MenuActionTag;                                     // 0x240(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          WidgetNotificationTag;                             // 0x248(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          GoatCastleAreaTag;                                 // 0x250(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  FoundLockedStretchGoalText;                        // 0x258(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  InviteWidgetBodyText;                              // 0x270(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        FoundLockedSGWidgetDuration;                       // 0x288(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EB9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UBoxComponent*                         FoundLockedSGTrigger;                              // 0x290(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDebug;                                            // 0x298(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EBA[0x17];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGGoatCastleTeleportationTrigger* GetDefaultObj();

	void HandleLockedSGOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIdex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x90 (0xC0 - 0x30)
// Class Goat2.GGGoatEmote
class UGGGoatEmote : public UDataAsset
{
public:
	class FName                                  Name;                                              // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  DisplayName;                                       // 0x38(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UAnimMontage*                          EmoteMontage;                                      // 0x50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            UITexture;                                         // 0x58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         MovementInterupsEmote;                             // 0x60(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         BlockFromUseWhileMoving;                           // 0x61(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMoodChangeInArea;                                 // 0x62(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EBB[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMoodChangeAreaElement                AreaMoodChange;                                    // 0x68(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         NotifyNPCs;                                        // 0x90(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EBC[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FEmoteNotify                          EmoteNotify;                                       // 0x98(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGGoatEmote* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Goat2.GGGoatFeatures
class UGGGoatFeatures : public UBlueprintFunctionLibrary
{
public:
	TArray<class FName>                          EnabledFeatures;                                   // 0x28(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGGoatFeatures* GetDefaultObj();

	bool IsFeatureEnabled(class FName FeatureName);
};

// 0x20 (0x428 - 0x408)
// Class Goat2.GGGoatGameState
class AGGGoatGameState : public AGGGameState
{
public:
	class UGGQuestManager*                       QuestManager;                                      // 0x408(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGRadarSystem*                        RadarSystem;                                       // 0x410(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FAreaTrackMapping>             AreaMusicMap;                                      // 0x418(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AGGGoatGameState* GetDefaultObj();

};

// 0x120 (0x328 - 0x208)
// Class Goat2.GGGoatGear_Scene_Base
class UGGGoatGear_Scene_Base : public USceneComponent
{
public:
	uint8                                        Pad_1EC4[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                AssetID;                                           // 0x218(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGearSlot                         GearSlot;                                          // 0x228(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGoatSockets                      GoatSocket;                                        // 0x229(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         OverrideSocket;                                    // 0x22A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EC5[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  OverrideSocketName;                                // 0x22C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanChangeMaterial;                                // 0x234(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EC6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               OffsetLocation;                                    // 0x238(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              OffsetRotation;                                    // 0x244(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               GearScale;                                         // 0x250(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EC7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAltGoatOverride>              AltGoatOverrides;                                  // 0x260(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, NativeAccessSpecifierPublic)
	struct FVector                               GoatMeshLocationModifier;                          // 0x270(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        GoatMeshLocModifierPrio;                           // 0x27C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FChildMeshElement>             ChildMeshes;                                       // 0x280(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, NativeAccessSpecifierPublic)
	TArray<struct FGameplayTag>                  CanEquipThis;                                      // 0x290(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FCanEquipGear>                 CanEquipThisWithBackup;                            // 0x2A0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 GearAbilityGameplayTags;                           // 0x2B0(0x20)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSubclassOf<class UGGGearAbility>            GearAbility;                                       // 0x2D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowTutorialForGearAbility;                       // 0x2D8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasPassiveEffect;                                 // 0x2D9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowTutorialForPassiveEffect;                     // 0x2DA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSentFirstPostNetReceive;                          // 0x2DB(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EC8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UMeshComponent*>                ChildMeshComponents;                               // 0x2E0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class AGGGoat*                               Goat;                                              // 0x2F0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGGoatGearInfoDataAsset*              InfoDataAsset;                                     // 0x2F8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FChildMeshDefaultMaterials>    DefaultChildMeshMats;                              // 0x300(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UClass*>                        PreloadedGameplayCueClasses;                       // 0x310(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	bool                                         bPassiveEffectActive;                              // 0x320(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1EC9[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bCanEditOverrides;                                 // 0x322(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanEditChildMeshes;                               // 0x323(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanEditTransform;                                 // 0x324(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanEditEquipRestrictions;                         // 0x325(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanEditEnumSocket;                                // 0x326(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanEditGearSlot;                                  // 0x327(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGGGoatGear_Scene_Base* GetDefaultObj();

	bool ShouldOverrideSocket(class FName* SocketName);
	bool SetPassiveEffectActive(bool bNewActive);
	bool SetGearHidden(bool bNewHidden);
	void PostNetReceive_BP(bool bFirstCall);
	void OnRep_bPassiveEffectActive();
	bool IsPassiveEffectActive();
	bool IsASkinnedMesh();
	bool HasPassiveEffect();
	bool HasGearAbilityOrEffect();
	bool GoatMaterialUpdated(TArray<struct FMatElement>& NewMaterials);
	bool GoatCustomStencilUpdated(bool bInUseCustomStencil, int32 CustomStencilIndex);
	bool GetPassiveEffectActive();
	enum class EGoatSockets GetGoatSocket();
	class AGGGoat* GetGoat();
	enum class EGearSlot GetGearSlot();
	struct FGoatGearData GetGearData();
	TSubclassOf<class UGGGearAbility> GetGearAbility();
	class FString GetAssetID();
	struct FGameplayTagContainer GetAbilityGameplayTags();
	void GameplayCuesLoaded();
	bool CanGoatEquipThis(class UGGAlternativeGoatDataAsset* AltGoatAsset);
	void BPPassiveEffectToggled(bool bNewActive);
};

// 0x10 (0x338 - 0x328)
// Class Goat2.GGGoatGear_Scene_AltGoat
class UGGGoatGear_Scene_AltGoat : public UGGGoatGear_Scene_Base
{
public:
	class UGGAlternativeGoatDataAsset*           AltGoat;                                           // 0x328(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimationAsset*                       PreviewIdleAnim;                                   // 0x330(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGGoatGear_Scene_AltGoat* GetDefaultObj();

};

// 0x38 (0x370 - 0x338)
// Class Goat2.GGGoatGear_Scene_AltGoat_Human
class UGGGoatGear_Scene_AltGoat_Human : public UGGGoatGear_Scene_AltGoat
{
public:
	int32                                        BeardMeshIndex;                                    // 0x338(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1ECA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMesh*                           DefaultHairMesh;                                   // 0x340(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USkeletalMesh*                         DefaultUpperBodyMesh;                              // 0x348(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USkeletalMesh*                         DefaultLowerBodyMesh;                              // 0x350(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USkeletalMesh*                         DefaultHeadMesh;                                   // 0x358(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1ECC[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGoatGear_Scene_AltGoat_Human* GetDefaultObj();

	void MulticastLoadNewAppearance(struct FGGAppearanceSet& Appearances, class UGGGearAbility_HumanAltGoat* HumanAltGoat);
};

// 0x30 (0x3A0 - 0x370)
// Class Goat2.GGGoatGear_Scene_AltGoat_Farmer
class UGGGoatGear_Scene_AltGoat_Farmer : public UGGGoatGear_Scene_AltGoat_Human
{
public:
	class UParticleSystem*                       OnGoingHandsParticles;                             // 0x370(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LeftHandSocket;                                    // 0x378(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RightHandSocket;                                   // 0x380(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsAbilityActive;                                  // 0x388(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1ECE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystemComponent*              LeftHandOnGoingParticleComp;                       // 0x390(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              RightHandOnGoingParticleComp;                      // 0x398(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGGoatGear_Scene_AltGoat_Farmer* GetDefaultObj();

	void OnRep_IsAbilityActive();
};

// 0xA8 (0x3E0 - 0x338)
// Class Goat2.GGGoatGear_Scene_AltGoat_Steve
class UGGGoatGear_Scene_AltGoat_Steve : public UGGGoatGear_Scene_AltGoat
{
public:
	struct FGameplayTag                          MovementCueTag;                                    // 0x338(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                RagdollMesh;                                       // 0x340(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FPoseSnapshot                         RagdollMeshSnapshot;                               // 0x348(0x38)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class UPhysicsConstraintComponent*           DerpyModePhysicsConstraint;                        // 0x380(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGGGoatMovementComponent*              GoatMovementComp;                                  // 0x388(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USkeletalMeshComponent*                GoatMesh;                                          // 0x390(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1ED2[0x48];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGoatGear_Scene_AltGoat_Steve* GetDefaultObj();

	void OnStopRagdolling(bool bRagdollOnGround, class ULSCharacterMovementComponent* MovementComp, class ACharacter* SteveCharacter, struct FRagdollStateChangeSettings& StateChangeSettings);
	void OnSteveExitingVehicle(class AGGCharacter* Character, class AGGVehicle* Vehicle);
	void OnSteveEnteringVehicle(class AGGCharacter* Character, class AGGVehicle* Vehicle);
	void OnStartRidingCharacter(class AGGCharacter* Character);
	void OnReleased(class AActor* Steve, class AActor* Catcher);
	void OnRagdolling(class ULSCharacterMovementComponent* MovementComp, class ACharacter* SteveCharacter, struct FRagdollStateChangeSettings& StateChangeSettings);
	void OnGoatCollisionStateUpdated(class AGGCharacter* GoatCharacter);
	void OnEmoting(class AGGGoat* EmotingGoat, class UGGGoatEmote* Emote);
	void OnCatched(class AActor* Steve, class AActor* Catcher);
	bool IsDerpyModeEnabled();
	void EnableInitialDerpyMode(class AGGGoat* InGoat, class UGGAlternativeGoatDataAsset* NewAltGoat);
};

// 0x48 (0x380 - 0x338)
// Class Goat2.GGGoatGear_Scene_AltGoat_Tony
class UGGGoatGear_Scene_AltGoat_Tony : public UGGGoatGear_Scene_AltGoat
{
public:
	class USoundBase*                            MovementLoop;                                      // 0x338(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  SoundCueName;                                      // 0x340(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InRangeA;                                          // 0x348(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InRangeB;                                          // 0x34C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        OutRangeA;                                         // 0x350(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        OutRangeB;                                         // 0x354(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RollingSpeed;                                      // 0x358(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1ED4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGGoatMovementComponent*              GoatMovementComp;                                  // 0x360(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1ED5[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAudioComponent*                       RollingAudioComp;                                  // 0x370(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1ED6[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGoatGear_Scene_AltGoat_Tony* GetDefaultObj();

};

// 0x8 (0x330 - 0x328)
// Class Goat2.GGGoatGear_Scene_Baa
class UGGGoatGear_Scene_Baa : public UGGGoatGear_Scene_Base
{
public:
	class USoundBase*                            BaaSoundOverride;                                  // 0x328(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGGoatGear_Scene_Baa* GetDefaultObj();

	void OnBaaSoundActivatedLocally(bool bIsPreview);
	void OnBaaActivatedLocally(bool bIsPreview);
	void ActivateBaaMulticast(bool bIsPreview);
	void ActivateBaaLocally(bool bIsPreview);
};

// 0x58 (0x380 - 0x328)
// Class Goat2.GGGoatGear_Scene_Feet
class UGGGoatGear_Scene_Feet : public UGGGoatGear_Scene_Base
{
public:
	TArray<struct FFeetMeshElement>              FeetMeshes;                                        // 0x328(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, NativeAccessSpecifierPublic)
	TArray<struct FFeetMeshOverrideElement>      AltGoatFeetMeshOverrides;                          // 0x338(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, NativeAccessSpecifierPublic)
	bool                                         bIgnoreDataAssetIncrease;                          // 0x348(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EDC[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FMeshLocModifierOverrideElement> AltGoatMeshLocOverrides;                           // 0x350(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, NativeAccessSpecifierPublic)
	TArray<class UMeshComponent*>                FeetComponents;                                    // 0x360(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1EDD[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGoatGear_Scene_Feet* GetDefaultObj();

	TArray<class UMeshComponent*> GetFeetMeshComponents();
};

// 0x80 (0x400 - 0x380)
// Class Goat2.GGGoatGear_Scene_Feet_RocketBoot
class UGGGoatGear_Scene_Feet_RocketBoot : public UGGGoatGear_Scene_Feet
{
public:
	class UParticleSystem*                       RegularFeetParticle;                               // 0x380(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       BoostFeetParticle;                                 // 0x388(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              BootParticleLeftTop;                               // 0x390(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              BootParticleRightTop;                              // 0x398(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              BootParticleRightBottom;                           // 0x3A0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              BootParticleLeftBottom;                            // 0x3A8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              BoostParticleLeftTop;                              // 0x3B0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              BoostParticleRightTop;                             // 0x3B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              BoostParticleRightBottom;                          // 0x3C0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              BoostParticleLeftBottom;                           // 0x3C8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMeshComponent*                        LeftTopFoot;                                       // 0x3D0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMeshComponent*                        RightTopFoot;                                      // 0x3D8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMeshComponent*                        RightBottomFoot;                                   // 0x3E0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMeshComponent*                        LeftBottomFoot;                                    // 0x3E8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsAbilityActive;                                  // 0x3F0(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EE0[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGoatGear_Scene_Feet_RocketBoot* GetDefaultObj();

	void OnRep_IsAbilityActive();
	void OnAltGoatChanged(class AGGGoat* InGoat, class UGGAlternativeGoatDataAsset* NewAltGoat);
};

// 0x38 (0x360 - 0x328)
// Class Goat2.GGGoatGear_Scene_Fur
class UGGGoatGear_Scene_Fur : public UGGGoatGear_Scene_Base
{
public:
	TArray<struct FMatElement>                   BodyMaterials;                                     // 0x328(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FMatElement>                   PreviewBodyMaterials;                              // 0x338(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bUseGFur;                                          // 0x348(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EE2[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInterface*                    GFurMaterial;                                      // 0x350(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                         GFurGrowMesh;                                      // 0x358(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGGoatGear_Scene_Fur* GetDefaultObj();

};

// 0x8 (0x330 - 0x328)
// Class Goat2.GGGoatGear_Scene_Horns
class UGGGoatGear_Scene_Horns : public UGGGoatGear_Scene_Base
{
public:
	class UStaticMesh*                           Horns;                                             // 0x328(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGGoatGear_Scene_Horns* GetDefaultObj();

	void OnAltGoatChanged(class AGGGoat* InGoat, class UGGAlternativeGoatDataAsset* NewAltGoat);
};

// 0x20 (0x350 - 0x330)
// Class Goat2.GGGoatGear_Scene_Horns_Druid
class UGGGoatGear_Scene_Horns_Druid : public UGGGoatGear_Scene_Horns
{
public:
	class UParticleSystem*                       PigeonParticle;                                    // 0x330(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          PigeonSockets;                                     // 0x338(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EE9[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGoatGear_Scene_Horns_Druid* GetDefaultObj();

	void OnHeadbutting(class AGGGoat* GoatHeadbutting, bool bHitSomething, TArray<class AActor*>& HeadbuttedActors, bool bIsChargeHeadbutt);
};

// 0x130 (0x1018 - 0xEE8)
// Class Goat2.GGGoatGear_Skel_Base
class UGGGoatGear_Skel_Base : public USkeletalMeshComponent
{
public:
	uint8                                        Pad_1EFA[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                AssetID;                                           // 0xEF8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGearSlot                         GearSlot;                                          // 0xF08(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGoatSockets                      GoatSocket;                                        // 0xF09(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         OverrideSocket;                                    // 0xF0A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EFB[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  OverrideSocketName;                                // 0xF0C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanChangeMaterial;                                // 0xF14(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EFC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               OffsetLocation;                                    // 0xF18(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              OffsetRotation;                                    // 0xF24(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               GearScale;                                         // 0xF30(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bGearAbsoluteRotation;                             // 0xF3C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseGoatMeshAsSkinnedMasterPose;                   // 0xF3D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EFD[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAltGoatOverride>              AltGoatOverrides;                                  // 0xF40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, NativeAccessSpecifierPublic)
	struct FVector                               GoatMeshLocationModifier;                          // 0xF50(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        GoatMeshLocModifierPrio;                           // 0xF5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FChildMeshElement>             ChildMeshes;                                       // 0xF60(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, NativeAccessSpecifierPublic)
	TArray<struct FGameplayTag>                  CanEquipThis;                                      // 0xF70(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FCanEquipGear>                 CanEquipThisWithBackup;                            // 0xF80(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 GearAbilityGameplayTags;                           // 0xF90(0x20)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSubclassOf<class UGGGearAbility>            GearAbility;                                       // 0xFB0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowTutorialForGearAbility;                       // 0xFB8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasPassiveEffect;                                 // 0xFB9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowTutorialForPassiveEffect;                     // 0xFBA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSentFirstPostNetReceive;                          // 0xFBB(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EFE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UMeshComponent*>                ChildMeshComponents;                               // 0xFC0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class AGGGoat*                               Goat;                                              // 0xFD0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGGoatGearInfoDataAsset*              InfoDataAsset;                                     // 0xFD8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FMatElement>                   DefaultMaterials;                                  // 0xFE0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FChildMeshDefaultMaterials>    DefaultChildMeshMats;                              // 0xFF0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UClass*>                        PreloadedGameplayCueClasses;                       // 0x1000(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	bool                                         bPassiveEffectActive;                              // 0x1010(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1EFF[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bCanEditEnumSocket;                                // 0x1012(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanEditGearSlot;                                  // 0x1013(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F00[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGoatGear_Skel_Base* GetDefaultObj();

	bool ShouldOverrideSocket(class FName* SocketName);
	bool SetPassiveEffectActive(bool bNewActive);
	bool SetGearHidden(bool bNewHidden);
	void PostNetReceive_BP(bool bFirstCall);
	void OnRep_bPassiveEffectActive();
	bool IsPassiveEffectActive();
	bool IsASkinnedMesh();
	bool HasPassiveEffect();
	bool HasGearAbilityOrEffect();
	bool GoatMaterialUpdated(TArray<struct FMatElement>& NewMaterials);
	bool GoatCustomStencilUpdated(bool bInUseCustomStencil, int32 CustomStencilIndex);
	bool GetPassiveEffectActive();
	enum class EGoatSockets GetGoatSocket();
	class AGGGoat* GetGoat();
	enum class EGearSlot GetGearSlot();
	struct FGoatGearData GetGearData();
	TSubclassOf<class UGGGearAbility> GetGearAbility();
	class FString GetAssetID();
	struct FGameplayTagContainer GetAbilityGameplayTags();
	void GameplayCuesLoaded();
	bool CanGoatEquipThis(class UGGAlternativeGoatDataAsset* AltGoatAsset);
	void BPPassiveEffectToggled(bool bNewActive);
};

// 0x18 (0x1030 - 0x1018)
// Class Goat2.GGGoatGear_Skel_Body
class UGGGoatGear_Skel_Body : public UGGGoatGear_Skel_Base
{
public:
	class UFurSplines*                           GFurSplinesOverride;                               // 0x1018(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AGGGoat*                               AttachToPreview;                                   // 0x1020(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F02[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGoatGear_Skel_Body* GetDefaultObj();

};

// 0x18 (0x1030 - 0x1018)
// Class Goat2.GGGoatGear_Skel_ChristmasLights
class UGGGoatGear_Skel_ChristmasLights : public UGGGoatGear_Skel_Base
{
public:
	uint8                                        Pad_1F03[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAudioComponent*                       ReelingInAudioComponent;                           // 0x1020(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAudioComponent*                       ReelingOutAudioComponent;                          // 0x1028(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGGoatGear_Skel_ChristmasLights* GetDefaultObj();

	float GetCurrentCableRotation();
};

// 0x48 (0x1060 - 0x1018)
// Class Goat2.GGGoatGear_Skel_DrumKit
class UGGGoatGear_Skel_DrumKit : public UGGGoatGear_Skel_Base
{
public:
	TArray<class UAnimMontage*>                  DrumMontages;                                      // 0x1018(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FBeatInfo>                     BeatInfos;                                         // 0x1028(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class USoundBase*                            KickSound;                                         // 0x1038(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            SnareSound;                                        // 0x1040(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            HiHatSound;                                        // 0x1048(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          CurrentDrumMontage;                                // 0x1050(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F04[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGoatGear_Skel_DrumKit* GetDefaultObj();

	void StartDrumMontage();
	void Snare();
	void OnRep_DrumMontage();
	void KickDrum();
	void HiHat();
	class UAnimMontage* GetRandomMontage();
};

// 0x20 (0x3A0 - 0x380)
// Class Goat2.GGGoatGear_Skel_StiltShoes
class UGGGoatGear_Skel_StiltShoes : public UGGGoatGear_Scene_Feet
{
public:
	float                                        TargetExtension;                                   // 0x380(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentExtension;                                  // 0x384(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentDirection;                                  // 0x388(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bReachedEnd;                                       // 0x38C(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F05[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinExtensionAmoutBeforeSoundOff;                   // 0x390(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSoundOff;                                         // 0x394(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F06[0xB];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGoatGear_Skel_StiltShoes* GetDefaultObj();

	void OnRep_TargetExtension();
	void OnRep_ReachedEnd();
	void BP_OnStiltBackDown();
};

// 0x18 (0x1030 - 0x1018)
// Class Goat2.GGGoatGear_Skel_Wings
class UGGGoatGear_Skel_Wings : public UGGGoatGear_Skel_Base
{
public:
	class UParticleSystem*                       FlyingParticles;                                   // 0x1018(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            FlyingSound;                                       // 0x1020(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsFlying;                                         // 0x1028(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F08[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGoatGear_Skel_Wings* GetDefaultObj();

};

// 0x130 (0x6B8 - 0x588)
// Class Goat2.GGGoatGear_Static_Base
class UGGGoatGear_Static_Base : public UStaticMeshComponent
{
public:
	uint8                                        Pad_1F1A[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                AssetID;                                           // 0x598(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGearSlot                         GearSlot;                                          // 0x5A8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGoatSockets                      GoatSocket;                                        // 0x5A9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         OverrideSocket;                                    // 0x5AA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F1C[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  OverrideSocketName;                                // 0x5AC(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanChangeMaterial;                                // 0x5B4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F1D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               OffsetLocation;                                    // 0x5B8(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              OffsetRotation;                                    // 0x5C4(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               GearScale;                                         // 0x5D0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bGearAbsoluteRotation;                             // 0x5DC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F1F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAltGoatOverride>              AltGoatOverrides;                                  // 0x5E0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, NativeAccessSpecifierPublic)
	struct FVector                               GoatMeshLocationModifier;                          // 0x5F0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        GoatMeshLocModifierPrio;                           // 0x5FC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FChildMeshElement>             ChildMeshes;                                       // 0x600(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, NativeAccessSpecifierPublic)
	TArray<struct FGameplayTag>                  CanEquipThis;                                      // 0x610(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FCanEquipGear>                 CanEquipThisWithBackup;                            // 0x620(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 GearAbilityGameplayTags;                           // 0x630(0x20)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSubclassOf<class UGGGearAbility>            GearAbility;                                       // 0x650(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowTutorialForGearAbility;                       // 0x658(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasPassiveEffect;                                 // 0x659(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowTutorialForPassiveEffect;                     // 0x65A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSentFirstPostNetReceive;                          // 0x65B(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F21[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UMeshComponent*>                ChildMeshComponents;                               // 0x660(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class AGGGoat*                               Goat;                                              // 0x670(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGGoatGearInfoDataAsset*              InfoDataAsset;                                     // 0x678(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FMatElement>                   DefaultMaterials;                                  // 0x680(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FChildMeshDefaultMaterials>    DefaultChildMeshMats;                              // 0x690(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UClass*>                        PreloadedGameplayCueClasses;                       // 0x6A0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	bool                                         bPassiveEffectActive;                              // 0x6B0(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F22[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bCanEditEnumSocket;                                // 0x6B2(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanEditGearSlot;                                  // 0x6B3(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F23[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGoatGear_Static_Base* GetDefaultObj();

	bool ShouldOverrideSocket(class FName* SocketName);
	bool SetPassiveEffectActive(bool bNewActive);
	bool SetGearHidden(bool bNewHidden);
	void PostNetReceive_BP(bool bFirstCall);
	void OnRep_bPassiveEffectActive();
	bool IsPassiveEffectActive();
	bool IsASkinnedMesh();
	bool HasPassiveEffect();
	bool HasGearAbilityOrEffect();
	bool GoatMaterialUpdated(TArray<struct FMatElement>& NewMaterials);
	bool GoatCustomStencilUpdated(bool bInUseCustomStencil, int32 CustomStencilIndex);
	bool GetPassiveEffectActive();
	enum class EGoatSockets GetGoatSocket();
	class AGGGoat* GetGoat();
	enum class EGearSlot GetGearSlot();
	struct FGoatGearData GetGearData();
	TSubclassOf<class UGGGearAbility> GetGearAbility();
	class FString GetAssetID();
	struct FGameplayTagContainer GetAbilityGameplayTags();
	void GameplayCuesLoaded();
	bool CanGoatEquipThis(class UGGAlternativeGoatDataAsset* AltGoatAsset);
	void BPPassiveEffectToggled(bool bNewActive);
};

// 0xD8 (0x790 - 0x6B8)
// Class Goat2.GGGoatGear_Static_Architect
class UGGGoatGear_Static_Architect : public UGGGoatGear_Static_Base
{
public:
	class UMaterialInterface*                    TextMaterial;                                      // 0x6B8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                TextColor;                                         // 0x6C0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RollupSpeed;                                       // 0x6C4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RagdollAtDistance;                                 // 0x6C8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F27[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       HitEffect;                                         // 0x6D0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            HitSoundEffect;                                    // 0x6D8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>               DistanceWidgetClass;                               // 0x6E0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       TapeBeamParticle;                                  // 0x6E8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InstinctMaxCableLength;                            // 0x6F0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F28[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AActor>                    TapeBeamEndActorClass;                             // 0x6F8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RollupLocation;                                    // 0x700(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F29[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                CurrentDistanceString;                             // 0x710(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCableAttachLocation                  CableAttachInfo;                                   // 0x720(0x28)(Net, RepNotify, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                         bRollUp;                                           // 0x748(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F2A[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWidgetComponent*                      DistanceWidgetComp;                                // 0x758(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UWidgetComponent*>              DistanceWidgetComps;                               // 0x760(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UGGDistanceTextWidget*                 DistanceTextWidget;                                // 0x770(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              BeamParticle;                                      // 0x778(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                StartPointActor;                                   // 0x780(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                EndPointActor;                                     // 0x788(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGGoatGear_Static_Architect* GetDefaultObj();

	void RollUpChange(bool RollingUp);
	void PlayAttachSound(bool bForAttach);
	void OnRep_RollUp();
	void OnRep_CableAttachInfo();
	void MulticastPlayHit();
	void MulticastPlayAttachSound(bool bForAttach);
	float GetCableLength();
};

// 0x78 (0x730 - 0x6B8)
// Class Goat2.GGGoatGear_Static_BigBrother
class UGGGoatGear_Static_BigBrother : public UGGGoatGear_Static_Base
{
public:
	class UStaticMesh*                           EyeOfSauronMesh;                                   // 0x6B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       EyeOfSauronParticleSystem;                         // 0x6C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ClosestCharacterCheckDelay;                        // 0x6C8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ClosestCharacterCheckRadius;                       // 0x6CC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RotationInterpolationSpeed;                        // 0x6D0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FirstAudioPlayDelay;                               // 0x6D4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LoopAudioPlayDelay;                                // 0x6D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F2B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class USoundBase*>                    VoiceLines;                                        // 0x6E0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                         bGearOn;                                           // 0x6F0(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F2C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAudioComponent*                       VoiceLineAudioComponent;                           // 0x6F8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                  EyeOfSauronMeshComponent;                          // 0x700(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              EyeOfSauronParticleSystemComponent;                // 0x708(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGCharacter*                          ClosestCharacter;                                  // 0x710(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F2D[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGoatGear_Static_BigBrother* GetDefaultObj();

	void ServerPlayARandomVoiceLine();
	void MulticastPlayVoiceLine(class USoundBase* VoiceLineToPlay);
	void CreateEye();
};

// 0x8 (0x1020 - 0x1018)
// Class Goat2.GGGoatGear_Static_Brainiac
class UGGGoatGear_Static_Brainiac : public UGGGoatGear_Skel_Base
{
public:
	uint8                                        Pad_1F2E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGoatGear_Static_Brainiac* GetDefaultObj();

};

// 0x18 (0x6D0 - 0x6B8)
// Class Goat2.GGGoatGear_Static_Crown
class UGGGoatGear_Static_Crown : public UGGGoatGear_Static_Base
{
public:
	class UParticleSystem*                       CrownParticle;                                     // 0x6B8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ParticleSocket;                                    // 0x6C0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*              CrownParticleComp;                                 // 0x6C8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGGoatGear_Static_Crown* GetDefaultObj();

};

// 0x68 (0x720 - 0x6B8)
// Class Goat2.GGGoatGear_Static_DemonMask
class UGGGoatGear_Static_DemonMask : public UGGGoatGear_Static_Base
{
public:
	class UParticleSystem*                       OnGoingEyeParticles;                               // 0x6B8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       ActviveAbilityEyeParticles;                        // 0x6C0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F2F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FQuat                                 RightEyeParticleRotation;                          // 0x6D0(0x10)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FQuat                                 LeftEyeParticleRotation;                           // 0x6E0(0x10)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                               ParticleLocationOffset;                            // 0x6F0(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsAbilityActive;                                  // 0x6FC(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F30[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystemComponent*              RightEyeComp;                                      // 0x700(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              LeftEyeComp;                                       // 0x708(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              ActiveRightEyeComp;                                // 0x710(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              ActiveLeftEyeComp;                                 // 0x718(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGGoatGear_Static_DemonMask* GetDefaultObj();

	void OnRep_IsAbilityActive();
};

// 0x28 (0x6E0 - 0x6B8)
// Class Goat2.GGGoatGear_Static_EggSaddle
class UGGGoatGear_Static_EggSaddle : public UGGGoatGear_Static_Base
{
public:
	int32                                        MaxEggs;                                           // 0x6B8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F36[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AGGEggSaddleEgg*>               Eggs;                                              // 0x6C0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<struct FVector>                       EggLocations;                                      // 0x6D0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGGGoatGear_Static_EggSaddle* GetDefaultObj();

	bool ShouldSpawnFollowingEgg(class AActor* EatenActor);
	void OnRep_Eggs(TArray<class AGGEggSaddleEgg*>& PreviousEggs);
	void OnRep_EggLocations(TArray<struct FVector>& PreviousEggLocations);
	void MulticastEatenActor(class AActor* EatenActor);
	void K2_ThrowEgg(class AGGEggSaddleEgg* ThrownEgg);
	void K2_EatenEgg(class AActor* EatenActor);
	bool HasMaxEggs();
	struct FTransform GetSpawnTransformForEgg();
	class AGGEggSaddleEgg* GetLastEgg(bool* OutSuccess);
	TSubclassOf<class AGGEggSaddleEgg> GetEggClassForEatenActor(class AActor* EatenActor);
	void EatActor(class AActor* EatenActor);
	bool CanEatActor(class AActor* EatenActor);
};

// 0x18 (0x6D0 - 0x6B8)
// Class Goat2.GGGoatGear_Static_FishBowl
class UGGGoatGear_Static_FishBowl : public UGGGoatGear_Static_Base
{
public:
	class UParticleSystem*                       FishParticle;                                      // 0x6B8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ParticleSocket;                                    // 0x6C0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*              FishParticleComp;                                  // 0x6C8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGGoatGear_Static_FishBowl* GetDefaultObj();

};

// 0x98 (0x750 - 0x6B8)
// Class Goat2.GGGoatGear_Static_Gardener
class UGGGoatGear_Static_Gardener : public UGGGoatGear_Static_Base
{
public:
	TMap<class UGGAlternativeGoatDataAsset*, float> AltGoatGrowTime;                                   // 0x6B8(0x50)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                        GrowDelay;                                         // 0x708(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               GoatSeedScale;                                     // 0x70C(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  MeshComp;                                          // 0x718(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F37[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGoatGear_Static_Gardener* GetDefaultObj();

};

// 0x18 (0x6D0 - 0x6B8)
// Class Goat2.GGGoatGear_Static_Genius
class UGGGoatGear_Static_Genius : public UGGGoatGear_Static_Base
{
public:
	bool                                         bIsOn;                                             // 0x6B8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F38[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInterface*                    OnMaterial;                                        // 0x6C0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    OffMaterial;                                       // 0x6C8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGGoatGear_Static_Genius* GetDefaultObj();

	void OnRep_IsOn();
};

// 0x8 (0x1020 - 0x1018)
// Class Goat2.GGGoatGear_Static_GhostMovieProp
class UGGGoatGear_Static_GhostMovieProp : public UGGGoatGear_Skel_Base
{
public:
	uint8                                        Pad_1F39[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGoatGear_Static_GhostMovieProp* GetDefaultObj();

};

// 0x18 (0x6D0 - 0x6B8)
// Class Goat2.GGGoatGear_Static_Headphones
class UGGGoatGear_Static_Headphones : public UGGGoatGear_Static_Base
{
public:
	class USoundCue*                             AmbientMusic;                                      // 0x6B8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bPlayMusic;                                        // 0x6C0(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F3A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAudioComponent*                       MusicComponent;                                    // 0x6C8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGGoatGear_Static_Headphones* GetDefaultObj();

	void SetPlayMusic(bool bPlay);
	void OnRep_PlayMusic();
};

// 0x88 (0x740 - 0x6B8)
// Class Goat2.GGGoatGear_Static_LaserSight
class UGGGoatGear_Static_LaserSight : public UGGGoatGear_Static_Base
{
public:
	bool                                         bLaserOn;                                          // 0x6B8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F3C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LaserLength;                                       // 0x6BC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       BeamParticle;                                      // 0x6C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            BeamSound;                                         // 0x6C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            BeamStartSound;                                    // 0x6D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLaserHit                             RightEyeHit;                                       // 0x6D8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FLaserHit                             LeftEyeHit;                                        // 0x700(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              RightEyeBeamComp;                                  // 0x728(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              LeftEyeBeamComp;                                   // 0x730(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAudioComponent*                       BeamAudioComp;                                     // 0x738(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGGoatGear_Static_LaserSight* GetDefaultObj();

	void OnRep_LaserOn();
};

// 0x68 (0x720 - 0x6B8)
// Class Goat2.GGGoatGear_Static_Leafblower
class UGGGoatGear_Static_Leafblower : public UGGGoatGear_Static_Base
{
public:
	bool                                         bIsOn;                                             // 0x6B8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F40[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               AreaMeshScale;                                     // 0x6BC(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RelativeAreaMeshLocation;                          // 0x6C8(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F41[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMeshComponent*                  BlowAreaComp;                                      // 0x6D8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        CurrentlyOverlappedActors;                         // 0x6E0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        PActorForce;                                       // 0x6F0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PActorMassMultiplier;                              // 0x6F4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleForce;                                      // 0x6F8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GoatForce;                                         // 0x6FC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GoatRagdollForce;                                  // 0x700(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NPCRagdollForce;                                   // 0x704(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ThrusterStrength;                                  // 0x708(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UpwardThrust;                                      // 0x70C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UpwardZVelocityThrustThreshold;                    // 0x710(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxVelocity;                                       // 0x714(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F42[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGoatGear_Static_Leafblower* GetDefaultObj();

	void OnRep_IsOn();
	void OnEndOverlapBlowArea(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnBeginOverlapBlowArea(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x88 (0x740 - 0x6B8)
// Class Goat2.GGGoatGear_Static_LotusFlower
class UGGGoatGear_Static_LotusFlower : public UGGGoatGear_Static_Base
{
public:
	TMap<class UGGAlternativeGoatDataAsset*, struct FVector2D> AltGoatLotusSize;                                  // 0x6B8(0x50)(Edit, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  MeshComp;                                          // 0x708(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F43[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGoatGear_Static_LotusFlower* GetDefaultObj();

};

// 0xB8 (0x770 - 0x6B8)
// Class Goat2.GGGoatGear_Static_Paraglider
class UGGGoatGear_Static_Paraglider : public UGGGoatGear_Static_Base
{
public:
	struct FRuntimeFloatCurve                    ScaleCurve;                                        // 0x6B8(0x88)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F45[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       TargetComponent;                                   // 0x768(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGGoatGear_Static_Paraglider* GetDefaultObj();

	void AnimateParaglider(class USceneComponent* Target, const struct FVector& TargetScale, const struct FVector& StartScale, float AnimationTime);
};

// 0x48 (0x700 - 0x6B8)
// Class Goat2.GGGoatGear_Static_Pridesaber
class UGGGoatGear_Static_Pridesaber : public UGGGoatGear_Static_Base
{
public:
	class FName                                  SocketLeftSide;                                    // 0x6B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           BladesLeftMesh;                                    // 0x6C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SocketRightSide;                                   // 0x6C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           BladesRightMesh;                                   // 0x6D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             BladeHummingCue;                                   // 0x6D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPridesaberIsActive;                               // 0x6E0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F46[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMeshComponent*                  BladesLeft;                                        // 0x6E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  BladesRight;                                       // 0x6F0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAudioComponent*                       BladeHummingSound;                                 // 0x6F8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGGoatGear_Static_Pridesaber* GetDefaultObj();

	void SetPridesaberEnabledMulticast(bool bEnablePridesaber);
};

// 0xD8 (0x790 - 0x6B8)
// Class Goat2.GGGoatGear_Static_PurityRing
class UGGGoatGear_Static_PurityRing : public UGGGoatGear_Static_Base
{
public:
	struct FRuntimeFloatCurve                    AnimationCurve;                                    // 0x6B8(0x88)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F48[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       TargetComponent;                                   // 0x780(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F49[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGoatGear_Static_PurityRing* GetDefaultObj();

	void AnimateRing(class USceneComponent* Target, const struct FVector& TargetLocation, const struct FRotator& TargetRotation, const struct FVector& StartLocation, const struct FRotator& StartRotation, float AnimationTime);
};

// 0x8 (0x6C0 - 0x6B8)
// Class Goat2.GGGoatGear_Static_Saddle
class UGGGoatGear_Static_Saddle : public UGGGoatGear_Static_Base
{
public:
	uint8                                        Pad_1F4A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGoatGear_Static_Saddle* GetDefaultObj();

};

// 0x38 (0x6F0 - 0x6B8)
// Class Goat2.GGGoatGear_Static_Spooky
class UGGGoatGear_Static_Spooky : public UGGGoatGear_Static_Base
{
public:
	uint8                                        Pad_1F4B[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        VerticalFloatSpeed;                                // 0x6C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HorizontalFloatSpeed;                              // 0x6C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FloatHeight;                                       // 0x6CC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Acceleration;                                      // 0x6D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F4C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AGGSpookyGearEffectsActor> SpookyEffectsActorClass;                           // 0x6D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AGGSpookyGearEffectsActor*             SpookyEffectsActor;                                // 0x6E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F4D[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGoatGear_Static_Spooky* GetDefaultObj();

};

// 0x8 (0x6C0 - 0x6B8)
// Class Goat2.GGGoatGear_Static_StickyGum
class UGGGoatGear_Static_StickyGum : public UGGGoatGear_Static_Base
{
public:
	uint8                                        Pad_1F4F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGoatGear_Static_StickyGum* GetDefaultObj();

	void StickyGumFiredMulticast(TArray<struct FTraceEndPoint>& TraceEndPoints);
	void OnStickyGumFired(TArray<struct FTraceEndPoint>& TraceEndPoints);
};

// 0xD8 (0x790 - 0x6B8)
// Class Goat2.GGGoatGear_Static_Tant
class UGGGoatGear_Static_Tant : public UGGGoatGear_Static_Base
{
public:
	class USkeletalMesh*                         TantHead;                                          // 0x6B8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimationAsset*                       TantAnimationPose;                                 // 0x6C0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HeadForwardOffset;                                 // 0x6C8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HeadUpwardOffset;                                  // 0x6CC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMesh*                         TantBody;                                          // 0x6D0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    DressOverrideMaterial;                             // 0x6D8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BodyForwardOffset;                                 // 0x6E0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BodyUpwardOffset;                                  // 0x6E4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                           TantHair;                                          // 0x6E8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                           TantGlasses;                                       // 0x6F0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                           Gun;                                               // 0x6F8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GunForwardOffset;                                  // 0x700(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GunUpwardOffset;                                   // 0x704(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GunRightOffset;                                    // 0x708(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RecoilRotation;                                    // 0x70C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RecoilDuration;                                    // 0x710(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F50[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           RecoilCurve;                                       // 0x718(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              TantRotation;                                      // 0x720(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F51[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponent*                HeadMeshComponent;                                 // 0x730(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USkeletalMeshComponent*                BodyMeshComponent;                                 // 0x738(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                  HairMeshComponent;                                 // 0x740(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                  GlassesMeshComponent;                              // 0x748(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                  GunMeshComponent;                                  // 0x750(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F52[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FQuat                                 OriginalRotation;                                  // 0x760(0x10)(Net, IsPlainOldData, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	struct FQuat                                 EndRotation;                                       // 0x770(0x10)(Net, IsPlainOldData, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	float                                        LerpFactor;                                        // 0x780(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F54[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGoatGear_Static_Tant* GetDefaultObj();

	void TantSetup();
	void OnRep_OriginalRotation();
	void OnRep_LerpFactor();
	void OnRep_EndRotation();
	void DoRecoil();
};

// 0x568 (0xC20 - 0x6B8)
// Class Goat2.GGGoatGear_Static_Television
class UGGGoatGear_Static_Television : public UGGGoatGear_Static_Base
{
public:
	uint8                                        Pad_1F55[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPostProcessSettings                  TeleEffectPostProcessing;                          // 0x6C0(0x560)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGGoatGear_Static_Television* GetDefaultObj();

};

// 0x38 (0x6F0 - 0x6B8)
// Class Goat2.GGGoatGear_Static_TShirtLauncher
class UGGGoatGear_Static_TShirtLauncher : public UGGGoatGear_Static_Base
{
public:
	TArray<class UStaticMesh*>                   TShirtMeshes;                                      // 0x6B8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FVector                               LoadedTShirtSize;                                  // 0x6C8(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsTShirtVisbile;                                  // 0x6D4(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F56[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMesh*                           LoadedTShirtMesh;                                  // 0x6D8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  MeshComp;                                          // 0x6E0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInterface*                    LoadedTShirtMaterial;                              // 0x6E8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGGoatGear_Static_TShirtLauncher* GetDefaultObj();

	void OnRep_TShirtVisible();
};

// 0x618 (0xCD0 - 0x6B8)
// Class Goat2.GGGoatGear_Static_VRHeadset
class UGGGoatGear_Static_VRHeadset : public UGGGoatGear_Static_Base
{
public:
	uint8                                        Pad_1F57[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPostProcessSettings                  HmdPostProcessingSettings;                         // 0x6C0(0x560)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UCameraComponent*                      FPSCamera;                                         // 0xC20(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, struct FVRHeadsetCameraPlacementInfo> CameraPlacementInfoMap;                            // 0xC28(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        TimeToVR;                                          // 0xC78(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          VRInstinctTag;                                     // 0xC7C(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F58[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCameraComponent*                      MainCamera;                                        // 0xC88(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F59[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGoatGear_Static_VRHeadset* GetDefaultObj();

	void TriggerVRInstinct();
	void OnGearUpdated(class AGGGoat* DaGoat, TArray<class USceneComponent*>& CurrentGoatGear);
};

// 0x38 (0x6F0 - 0x6B8)
// Class Goat2.GGGoatGear_Static_WheelerDealer
class UGGGoatGear_Static_WheelerDealer : public UGGGoatGear_Static_Base
{
public:
	class USkeletalMesh*                         Car;                                               // 0x6B8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UAnimInstance>             AnimBlueprint;                                     // 0x6C0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            CarLoopSound;                                      // 0x6C8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                CarMeshComponent;                                  // 0x6D0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAudioComponent*                       CarSoundAudioComponent;                            // 0x6D8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        CarSpeedRate;                                      // 0x6E0(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F5B[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGoatGear_Static_WheelerDealer* GetDefaultObj();

	float GetCarSpeedRate();
};

// 0x18 (0x6D0 - 0x6B8)
// Class Goat2.GGGoatGear_Static_Wings
class UGGGoatGear_Static_Wings : public UGGGoatGear_Static_Base
{
public:
	class UParticleSystem*                       FlyingParticles;                                   // 0x6B8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            FlyingSound;                                       // 0x6C0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F5C[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGoatGear_Static_Wings* GetDefaultObj();

};

// 0xB8 (0x770 - 0x6B8)
// Class Goat2.GGGoatGear_Static_WOSHelmet
class UGGGoatGear_Static_WOSHelmet : public UGGGoatGear_Static_Base
{
public:
	class UParticleSystem*                       OngoingParticles;                                  // 0x6B8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       AreaEffectParticle;                                // 0x6C0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            LoopingSound;                                      // 0x6C8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ParticleSocketName;                                // 0x6D0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 AltGoatEarsToHide;                                 // 0x6D8(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<class UGGAlternativeGoatDataAsset*, float> AltGoatLocationOffset;                             // 0x6F8(0x50)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                         bIsAbilityActive;                                  // 0x748(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F5E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystemComponent*              ActivatedParticleComp;                             // 0x750(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              AEOParticleComp;                                   // 0x758(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAudioComponent*                       ActivatedSoundComp;                                // 0x760(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F5F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGoatGear_Static_WOSHelmet* GetDefaultObj();

	void OnRep_IsAbilityActive();
	void OnAltGoatChanged(class AGGGoat* InGoat, class UGGAlternativeGoatDataAsset* AltGoat);
};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGGoatGearDataAssetInterface
class IGGGoatGearDataAssetInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IGGGoatGearDataAssetInterface* GetDefaultObj();

};

// 0x1D0 (0x200 - 0x30)
// Class Goat2.GGGoatGearInfoDataAsset
class UGGGoatGearInfoDataAsset : public UPrimaryDataAsset
{
public:
	uint8                                        Pad_1F6B[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class USceneComponent>         GoatGear;                                          // 0x40(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                AssetID;                                           // 0x68(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Title;                                             // 0x78(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	enum class EGearSlot                         GearSlot;                                          // 0x90(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGearItemType                     ItemType;                                          // 0x91(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HasAbility;                                        // 0x92(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F6C[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  Description;                                       // 0x98(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  AbilityDescription;                                // 0xB0(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>             GearIcon;                                          // 0xC8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        UnlockPrice;                                       // 0xF0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UnlockedByDefault;                                 // 0xF4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F6D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGGoatGearInfoDataAsset*              UnlocksWith;                                       // 0xF8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UnlockedByDefaultInDemo;                           // 0x100(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowInStoreByDefault;                              // 0x101(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasEquipRestrictions;                             // 0x102(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F6E[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGameplayTag>                  CanEquipThis;                                      // 0x108(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, NativeAccessSpecifierPublic)
	TArray<class UGGGoatGearStyleDataAsset*>     Styles;                                            // 0x118(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 Descriptors;                                       // 0x128(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                         bIsConnectedToInstinct;                            // 0x148(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F70[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UObject>                PickupPreviewMesh;                                 // 0x150(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<TSoftObjectPtr<class UMaterialInterface>, int32> PickupPreviewMaterialOverride;                     // 0x178(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<enum class EGearSlot>                 UnsupportedGearSlots;                              // 0x1C8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTag                          AltGoatTag;                                        // 0x1D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            EquipOverrideSound;                                // 0x1E0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsTestGear;                                        // 0x1E8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HideInStore;                                       // 0x1E9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HideInInventory;                                   // 0x1EA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bReEquipOnStartup;                                 // 0x1EB(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F71[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSplitScreenStyleData>         SplitScreenStyleData;                              // 0x1F0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGGGoatGearInfoDataAsset* GetDefaultObj();

	void SetStyleAsCurrentGear(class UGGGoatGearStyleDataAsset* StyleData, int32 ControllerId);
	void LoadPickupMesh(FDelegateProperty_ OnPickupAssetsLoaded);
	bool HasStyles();
	TSoftClassPtr<class USceneComponent> GetGoatGear(int32 ControllerId);
	class FText GetDescription();
	class UGGGoatGearStyleDataAsset* GetCurrentStyleData(int32 ControllerId);
	class FText GetAbilityDescription();
	bool CanGoatEquipThis_Tag(const struct FGameplayTag& InAltGoatTag);
	bool CanGoatEquipThis(class UGGAlternativeGoatDataAsset* AltGoatAsset);
};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGGoatGearInterface
class IGGGoatGearInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IGGGoatGearInterface* GetDefaultObj();

	bool ShouldOverrideSocket(class FName* SocketName);
	bool SetPassiveEffectActive(bool bNewActive);
	void SetGearOwnerNoSee(bool bGearOwnerNoSee);
	bool SetGearHidden(bool bNewHidden);
	bool RecreateChildMeshes(class AActor* PreviewGoat, class UGGAlternativeGoatDataAsset* AlternativeGoat);
	bool IsPreviewGear();
	bool IsPassiveEffectActive();
	bool IsASkinnedMesh();
	bool HasPassiveEffect();
	bool HasGearAbilityOrEffect();
	bool GoatMaterialUpdated(TArray<struct FMatElement>& NewMaterials);
	bool GoatCustomStencilUpdated(bool bInUseCustomStencil, int32 CustomStencilIndex);
	enum class EGoatSockets GetGoatSocket();
	class AGGGoat* GetGoat();
	enum class EGearSlot GetGearSlot();
	struct FGoatGearData GetGearData();
	TSubclassOf<class UGGGearAbility> GetGearAbility();
	struct FTransform GetDefaultGearAttachTransform();
	TArray<struct FChildMeshElement> GetChildMeshes();
	TArray<class UMeshComponent*> GetChildMeshComponents();
	class FName GetAttachSocket();
	class FString GetAssetID();
	struct FGameplayTagContainer GetAbilityGameplayTags();
	void GearEquipped();
	bool DestroyAllChildMeshes();
	bool CanGoatEquipThis(class UGGAlternativeGoatDataAsset* AltGoatAsset);
	bool AttachToSocket(class FName Socket);
	bool AttachToPreviewSocket(class AActor* PreviewGoat, class FName Socket, class UGGAlternativeGoatDataAsset* AlternativeGoat);
	void AbilityStopped(class AGGGoat* Goat, class UGGGearAbility* GearAbility, bool WasCancelled);
	void AbilityActivated(class AGGGoat* Goat, class UGGGearAbility* GearAbility);
};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGGearConfigUtility
class UGGGearConfigUtility : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UGGGearConfigUtility* GetDefaultObj();

	void SaveGearConfig(class UObject* GearComponent);
	bool IsConfigCurrent();
	bool IsConfigCheckedOut();
	TArray<struct FGameplayTag> GetWhoCanEquipThis(const class FString& AssetID);
	bool GetConfigState(bool* bOutCheckedOut, bool* bOutIsCurrent, bool bForceUpdate);
	void CheckoutGearConfig();
};

// 0x108 (0x138 - 0x30)
// Class Goat2.GGGoatGearList
class UGGGoatGearList : public UPrimaryDataAsset
{
public:
	TSet<class FString>                          GearIDs;                                           // 0x30(0x50)(Edit, Transient, DisableEditOnInstance, EditConst, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F8E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGGFolderFilter>               Folders;                                           // 0x88(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TSet<class UGGGoatGearInfoDataAsset*>        IncludedGoatGears;                                 // 0x98(0x50)(Edit, Protected, NativeAccessSpecifierProtected)
	TSet<class UGGGoatGearInfoDataAsset*>        ExcludedGoatGears;                                 // 0xE8(0x50)(Edit, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGGGoatGearList* GetDefaultObj();

};

// 0xF0 (0x1A0 - 0xB0)
// Class Goat2.GGGoatGearManager
class UGGGoatGearManager : public UActorComponent
{
public:
	class AGGGoat*                               OwnerGoat;                                         // 0xB0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULocalPlayer*                          OwnerLocalPlayer;                                  // 0xB8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCancelPendingGearWhenRemovingGear;                // 0xC0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FAF[0x1F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class USceneComponent>>   EquippedGear;                                      // 0xE0(0x10)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<TSubclassOf<class USceneComponent>>   UnequippedGear;                                    // 0xF0(0x10)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<struct FGearEquipElement>             PreviouslyEquippedGear;                            // 0x100(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class USceneComponent*>               CachedRemovedAbilityGearParts;                     // 0x110(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	FMulticastInlineDelegateProperty_            OnGearWasUpdated;                                  // 0x120(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGearAbilityWasToggled;                           // 0x130(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FB2[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UGGGearSlotDefinition*>         GearSlotDefinitions;                               // 0x180(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<struct FGearSlot>                     GearSlots;                                         // 0x190(0x10)(Net, ZeroConstructor, Transient, RepNotify, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGGoatGearManager* GetDefaultObj();

	void UnequipGearSlot(enum class EGearSlot Slot);
	void UnequipEverything(bool bIncludeAltGoat, bool bIncludeFur, bool bIncludeHorns);
	void UnequipAndSaveGearForLater(bool bIncludeAltGoat, bool bIncludeFur, bool bIncludeHorns);
	void SetAllGearsHidden(bool bSetHidden, bool bIncludeHorns);
	void ServerUnequipGearSlot(enum class EGearSlot Slot);
	void ServerUnequipEverything(bool bIncludeAltGoat, bool bIncludeFur, bool bIncludeHorns);
	void ServerRequestGearAbility(class USceneComponent* GearPart);
	void ServerLoadAndEquipMultipleGears(TArray<struct FGearEquipElementData>& EquipArray, enum class EGearEquipContext EquipContext, bool bCancelPendingGearInSameSlot);
	void ServerLoadAndEquipGearToSlot(class UGGGoatGearInfoDataAsset* DataAsset, enum class EGearEquipContext EquipContext, bool bGiveAbility, bool bCancelPendingGearInSameSlot, class UGGGoatGearStyleDataAsset* StyleData);
	void ServerGiveOrRemoveAllAbilities(enum class EGiveOrRemove State);
	void ServerGiveOrRemoveAbilityOnSlot(enum class EGearSlot Slot, enum class EGiveOrRemove State);
	void ServerGiveOrRemoveAbility(class USceneComponent* Gear, enum class EGiveOrRemove State);
	void ServerEquipDebugGear(TSubclassOf<class USceneComponent> GearClass, bool bGiveAbility);
	void SaveEquippedGearToFile();
	void RestoreCachedRemovedAbilities();
	void RemoveAllAbilitiesAndCache();
	void ReequipPreviousGear(enum class EGearEquipContext EquipContext);
	void OnSlotUpdated();
	void OnRep_GearSlots();
	void OnGearAbilityToggled(enum class EGearSlot Slot, bool bAbilityEnabled);
	void MulticastGearUnequipped(TArray<TSubclassOf<class USceneComponent>>& GearUnequipped);
	void MulticastGearEquipped(TArray<TSubclassOf<class USceneComponent>>& GearEquipped);
	void MulticastGearAbilityToggled(class USceneComponent* GearToggled, bool bEnabled);
	void LoadGearsFromSaveFile();
	bool IsEquippingGearDisabled();
	bool HasMatchingGearEquippedInSlot(enum class EGearSlot InSlot, class UGGGoatGearInfoDataAsset* InDataAsset, class UGGGoatGearStyleDataAsset* InStyleData);
	bool HasGearWithStyleID(const class FString& ID);
	bool HasGearWithAssetID(const class FString& ID);
	bool HasFurThatUsesGFur();
	bool HasFurThatDoesNotUseGFur();
	bool HasAnyActiveAbilitiesEnabled();
	bool HasAbilityFromSlot(enum class EGearSlot Slot, bool bCheckForActivePassive);
	bool HasAbilityFromGear(class USceneComponent* Gear, bool bCheckForActivePassive);
	void GiveOrRemoveAllAbilities(enum class EGiveOrRemove State);
	void GiveOrRemoveAbilityOnSlot(enum class EGearSlot Slot, enum class EGiveOrRemove State);
	class AGGGoat* GetOwnerGoat();
	TArray<class USceneComponent*> GetGearWithAssetID(const class FString& ID, bool* HasGearWithID);
	class USceneComponent* GetGearWithAbilityTags(const struct FGameplayTagContainer& AbilityTags);
	class USceneComponent* GetGearOnSlot(enum class EGearSlot Slot);
	class UGGGoatGearInfoDataAsset* GetGearDataAssetOnSlot(enum class EGearSlot Slot);
	TArray<TSubclassOf<class USceneComponent>> GetGearClassArray(bool bIncludeAltGoat, bool bIncludeFur, bool bIncludeHorns);
	TArray<class FString> GetGearAssetIDArray();
	TArray<class USceneComponent*> GetGearArray(bool bIncludeAltGoat, bool bIncludeFur, bool bIncludeHorns);
	class FString GetEquipmentDebugString();
	TArray<class USceneComponent*> GetAllEquippedGear(bool* HasAnyGear);
	bool EquipMultipleGears(const TArray<struct FGearEquipElementData>& EquipArray, enum class EGearEquipContext EquipContext, FDelegateProperty_& Callback, bool bCancelPendingGearInSameSlot);
	bool EquipGearToSlot(class UGGGoatGearInfoDataAsset* InfoDataAsset, enum class EGearEquipContext EquipContext, FDelegateProperty_& Callback, bool bGiveAbility, bool bCancelPendingGearInSameSlot, class UGGGoatGearStyleDataAsset* StyleData);
	void EquipDebugGear(TSubclassOf<class USceneComponent> GearClass, bool bGiveAbility);
	void EnableEquippingGear(bool DoReequipPreviousGear);
	void DisableEquippingGear();
	void ClientRequestGearAbility(enum class EGearSlot Slot, class USceneComponent* GearPart);
	void CancelAllAbilities(bool bSkipPassives);
	void CancelAbilityWithTag(const struct FGameplayTag& AbilityTag);
};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGGoatGearPreviewInterface
class IGGGoatGearPreviewInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IGGGoatGearPreviewInterface* GetDefaultObj();

	class USkeletalMeshComponent* GetPreviewSkelMesh();
};

// 0x290 (0x340 - 0xB0)
// Class Goat2.GGGoatGearPreviewManager
class UGGGoatGearPreviewManager : public UActorComponent
{
public:
	class UGGAlternativeGoatDataAsset*           DefaultAltGoat;                                    // 0xB0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  PreviewEffectMaterialParameterName;                // 0xB8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  EquipEffectMaterialParameterName;                  // 0xC0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PreviewEffectMaterialSpeed;                        // 0xC8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EquipEffectMaterialSpeed;                          // 0xCC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<enum class EGearSlot>                 ExcludedPreviewSlots;                              // 0xD0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<enum class EGearSlot>                 PresetSlots;                                       // 0xE0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	float                                        TargetArmLength;                                   // 0xF0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCancelPendingGearWhenRevertingSlot;               // 0xF4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FB7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGearParticleSystem                   ParticleSystemPreviewGoatGearSwitch;               // 0xF8(0x20)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGearParticleSystem                   ParticleSystemEquipGoatGearSwitch;                 // 0x118(0x20)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGearParticleSystem                   ParticleSystemBuyGoatGearSwitch;                   // 0x138(0x20)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UParticleSystem*                       ParticleSystemAltGoatSwitch;                       // 0x158(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       ParticleSystemAltGoatBuy;                          // 0x160(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ParticleSystemAltGoatModuleName;                   // 0x168(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EquippedGearParticleSize;                          // 0x170(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FB8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<TSoftObjectPtr<class UStaticMesh>, float> StaticGearParticleSizeOverrides;                   // 0x178(0x50)(Edit, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            OnPreviewGearUpdated;                              // 0x1C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AGGGoat*                               OwnerGoat;                                         // 0x1D8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULocalPlayer*                          OwnerLocalPlayer;                                  // 0x1E0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGGoatGearManager*                    GearManager;                                       // 0x1E8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<enum class EGearSlot, class USceneComponent*> CurrentPreviewGear;                                // 0x1F0(0x50)(ExportObject, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TMap<enum class EGearSlot, struct FGearEquipElementData> CommittedPreviewGear;                              // 0x240(0x50)(Protected, NativeAccessSpecifierProtected)
	TArray<struct FPreviewQueueData>             QueuedLoadingPreviewGear;                          // 0x290(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FPreviewGearData>              CurrentlyLoadingPreviewGear;                       // 0x2A0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FMatElement>                   DefaultMaterials;                                  // 0x2B0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FMatElement>                   CurrentEquippedMaterials;                          // 0x2C0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UGGAlternativeGoatDataAsset*           CurrentEquippedAltGoat;                            // 0x2D0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMeshComponent*>                PreviewEffectsOnMeshes;                            // 0x2D8(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UMeshComponent*>                EquipEffectsOnMeshes;                              // 0x2E8(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FB9[0x48];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGoatGearPreviewManager* GetDefaultObj();

	void SpawnGearParticle(const struct FGearParticleSystem& ParticleStruct, class USceneComponent* InGear);
	void SaveCommittedGearToPreset(int32 Slot, class AGGPlayerController* InPC);
	void OnUnequippedPreviewGear(class USceneComponent* Gear);
	void OnEquippedPreviewGear(class USceneComponent* Gear);
	void OnAltGoatChanged(class AGGGoat* Goat, class UGGAlternativeGoatDataAsset* NewAltGoat);
	bool IsGearCommitted(class UGGGoatGearInfoDataAsset* DataAsset);
	bool IsAbilityEnabledForCommittedGearForSlot(enum class EGearSlot Slot);
	TArray<class USceneComponent*> GetCurrentPreviewGear();
	class UGGGoatGearInfoDataAsset* GetCommittedGearForSlot(enum class EGearSlot Slot);
	TArray<class FString> GetCommittedGearAsGearIDs();
	TArray<struct FGearEquipElementData> GetCommittedGearAsEquipData();
	bool CanPreviewSlot(enum class EGearSlot Slot);
	bool CanPreviewGear(class UGGGoatGearInfoDataAsset* DataAsset);
};

// 0x88 (0xB8 - 0x30)
// Class Goat2.GGGoatGearStyleDataAsset
class UGGGoatGearStyleDataAsset : public UPrimaryDataAsset
{
public:
	uint8                                        Pad_1FBB[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                StyleID;                                           // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Title;                                             // 0x48(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UTexture2D*                            StyleIcon;                                         // 0x60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class USceneComponent>         GoatGearStyle;                                     // 0x68(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGGGoatGearInfoDataAsset> ParentGoatGear;                                    // 0x90(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGGoatGearStyleDataAsset* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class Goat2.GGGearSetSlot
class UGGGearSetSlot : public UDataAsset
{
public:
	int32                                        SlotIndex;                                         // 0x30(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1FBC[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGearSetSlot* GetDefaultObj();

	int32 GetSlotIndex();
};

// 0xE8 (0x110 - 0x28)
// Class Goat2.GGGoatGlobals
class UGGGoatGlobals : public UObject
{
public:
	uint8                                        Pad_1FBD[0xE8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGoatGlobals* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGGoatKartBlueprintFunctionLibrary
class UGGGoatKartBlueprintFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UGGGoatKartBlueprintFunctionLibrary* GetDefaultObj();

	TArray<class AGGRoadPathSpline*> FindRoadsOnMap(class UObject* WorldRef);
	void DebugSpline(class USplineComponent* Spline, float Duration, float LineStepSize, float LineSize, struct FLinearColor& PointColor, struct FLinearColor& LineColor);
	void DebugCheckpointsDuringRace(class AActor* RaceTrack, class AGGPlayerGame_Base* PlayerGame);
};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGGoatKarts_Checkpoint
class IGGGoatKarts_Checkpoint : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IGGGoatKarts_Checkpoint* GetDefaultObj();

	void ResetCheckpoint();
	void OnLocalPlayerCrossedCheckpoint();
	void MarkAsNextCheckpoint();
	class UPrimitiveComponent* GetOverlapComponent();
};

// 0x48 (0x278 - 0x230)
// Class Goat2.GGGoatKarts_PreMadeRaceTrack
class AGGGoatKarts_PreMadeRaceTrack : public AActor
{
public:
	uint8                                        Pad_1FC0[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USplineComponent*                      TrackSpline;                                       // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        Checkpoints;                                       // 0x240(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class USceneComponent*                       Root;                                              // 0x250(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                    CheckpointClass;                                   // 0x258(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AActor>                    StartLineClass;                                    // 0x260(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AActor>                    FinishLineClass;                                   // 0x268(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        FirstCheckpointIndex;                              // 0x270(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FC1[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGGoatKarts_PreMadeRaceTrack* GetDefaultObj();

	void MulticastSpawnCheckpoints();
	void DebugSpawnCheckpoints();
	void DebugDestroyCheckpoints();
};

// 0xC8 (0x2F8 - 0x230)
// Class Goat2.GGGoatKarts_ProceduralRaceTrack
class AGGGoatKarts_ProceduralRaceTrack : public AActor
{
public:
	uint8                                        Pad_1FC5[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USplineComponent*                      TrackSpline;                                       // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        Checkpoints;                                       // 0x240(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UBillboardComponent*                   Root;                                              // 0x250(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DesiredTrackLength;                                // 0x258(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumberOfReTriesToGenerateTrack;                    // 0x25C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bMoveTowardsOppositeMapQuarter;                    // 0x260(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FC7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SearchRadiusForFirstCheckpoint;                    // 0x264(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumberOfAttemptsToFindLocationForCheckpoint;       // 0x268(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             SearchDistanceBetweenCheckpoints;                  // 0x26C(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CheckpointSearchAngle;                             // 0x274(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxVerticalAngleBetweenCheckpoints;                // 0x278(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxVerticalDistanceBetweenCheckpoints;             // 0x27C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CheckpointSnapDistanceToRoads;                     // 0x280(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RoadPercentageEstimate;                            // 0x284(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             RoadFollowCheckDistanceMultiplier;                 // 0x288(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RoadFollowCheckpointDistanceMultiplier;            // 0x290(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FC8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AActor>                    CheckpointClass;                                   // 0x298(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AActor>                    StartLineClass;                                    // 0x2A0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AActor>                    FinishLineClass;                                   // 0x2A8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        FirstCheckpointIndex;                              // 0x2B0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TraceDistance;                                     // 0x2B4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             BoxTraceSize;                                      // 0x2B8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EGGRaceTrackCheckpointAlignment   CheckpointAlignment;                               // 0x2C0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ECollisionChannel                 TraceChannel;                                      // 0x2C1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FCA[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class AActor>>            ClassesToIgnore;                                   // 0x2C8(0x10)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class AActor>>            BlockingClasses;                                   // 0x2D8(0x10)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FCB[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGGoatKarts_ProceduralRaceTrack* GetDefaultObj();

	void ReplicateTrackSpline(bool bIsSprint, TArray<struct FVector_NetQuantize>& Locations, TArray<struct FVector_NetQuantize>& UpVectors);
	void GenerateTrack();
};

// 0x18 (0x248 - 0x230)
// Class Goat2.GGRoadPathFinderHelper
class AGGRoadPathFinderHelper : public AActor
{
public:
	class USceneComponent*                       Start;                                             // 0x230(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                       Target;                                            // 0x238(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USplineComponent*                      Route;                                             // 0x240(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AGGRoadPathFinderHelper* GetDefaultObj();

	void CalculateRoadPath();
};

// 0xB90 (0x1C80 - 0x10F0)
// Class Goat2.GGGoatMovementComponent
class UGGGoatMovementComponent : public UGGCharacterMovementComponent
{
public:
	class AGGGoat*                               OwnerGoat;                                         // 0x10F0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AGGWaterPhysicsVolume*                 PhysWaterVolume;                                   // 0x10F8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FE7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AllowedGroundImpactDot;                            // 0x1104(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AllowedGroundImpactPitch;                          // 0x1108(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SidewaysLandVelocityThreshold;                     // 0x110C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FE8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SimulatingActorBaseLaunchVelocity;                 // 0x1114(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GravityScaleOverride;                              // 0x1118(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FEA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UObject*                               ExternalMovementObject;                            // 0x1120(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FEB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               VelocityLastFrame;                                 // 0x112C(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AlternateMovementTurnRate;                         // 0x1138(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FEC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       SprintParticles;                                   // 0x1140(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HelicopterMovementMaxSpeed;                        // 0x1148(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HelicopterBrakingDecelerationFactor;               // 0x114C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              SprintParticleSystemComponent;                     // 0x1150(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FED[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bUseHelicopterControlsWhileFlying;                 // 0x1159(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FEE[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnGoatBouncyJump;                                  // 0x1160(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGoatPerfectJump;                                 // 0x1170(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGoatPerfectLanding;                              // 0x1180(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class UCameraShakeBase>          BouncyJumpCameraShake;                             // 0x1190(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UCameraShakeBase>          PrefectJumpCameraShake;                            // 0x1198(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPostProcessSettings                  PerfectJumpPostProcessingSettings;                 // 0x11A0(0x560)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        PostProcessingJumpTimer;                           // 0x1700(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanDoBouncyJumps;                                 // 0x1704(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FF0[0x13];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        JumpedTimeStamp;                                   // 0x1718(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FF1[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystemComponent*              JumpModTrailPSC;                                   // 0x1728(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BounceJumpMinHorizontalVelocity;                   // 0x1730(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PerfectLandingTolerance;                           // 0x1734(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGJumpModifierAssetUserData*          LastUsedJumpMod;                                   // 0x1738(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanGoatJump;                                      // 0x1740(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1FF3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        PreviousPerfectLandingCount;                       // 0x1744(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1FF4[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CoyoteJumpTime;                                    // 0x1750(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FallOffEdgeTimeStamp;                              // 0x1754(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasJustJumped;                                    // 0x1758(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FF5[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinGGMeshBreakVel;                                 // 0x1768(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanMoveWhileRagdoll;                              // 0x176C(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FF6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StuckRagdollVelocityThreshold;                     // 0x1770(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StuckRagdollStandupDelay;                          // 0x1774(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseSeparateRagdollPhysicsAsset;                   // 0x1778(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FF8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGGRagdollMovementSettings            GroundRagdollMovementSettings;                     // 0x1780(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGGRagdollMovementSettings            AirRagdollMovementSettings;                        // 0x17A0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGGRagdollMovementSettings            SwimmingRagdollMovementSettings;                   // 0x17C0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UPhysicsAsset*                         CachedPhysicsAsset;                                // 0x17E0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FF9[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            BrakingSound;                                      // 0x1800(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       BrakingParticles;                                  // 0x1808(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDebugPrintBraking;                                // 0x1810(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FFA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinBrakeVelForEffects;                             // 0x1814(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BrakingVelocityDivide;                             // 0x1818(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FrictionStrengthMin;                               // 0x181C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VelLimitToStopBraking;                             // 0x1820(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             HighSpeedInputRange;                               // 0x1824(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             HighSpeedOutputRange;                              // 0x182C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FFC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          BrakingMontage;                                    // 0x1838(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              BrakingParticleComp;                               // 0x1840(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAudioComponent*                       BrakingAudioComp;                                  // 0x1848(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FBraking                              BrakingStruct;                                     // 0x1850(0x8)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1FFD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SlipperyFriction;                                  // 0x185C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlipperyBrakingDeceleration;                       // 0x1860(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlipperyAcceleration;                              // 0x1864(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlipperySprintSpeedMultiplier;                     // 0x1868(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsSlippery;                                       // 0x186C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDebugPrintRotation;                               // 0x186D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FFE[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SpinningMaxRotationRate;                           // 0x1870(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FFF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FRotationTrick>                RotationTricks;                                    // 0x1878(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  TrickTextFormat;                                   // 0x1888(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UDataTable*                            TextStyleDataTable;                                // 0x18A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NotifyRadius;                                      // 0x18A8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AdditionalTrickTime;                               // 0x18AC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             TrickRotationMargin;                               // 0x18B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDebugShowTrickRotationPivot;                      // 0x18B8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2000[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnTrickCompleted;                                  // 0x18C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bCanDoTrickRotation;                               // 0x18D0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsDoingTricks;                                    // 0x18D1(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2002[0x3E];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGWallrunModifierAssetUserData*       FloorWallrunModifierAssetUserData;                 // 0x1910(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGoatStartWallrunning;                            // 0x1918(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              WallrunModContinuousEffect;                        // 0x1928(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAudioComponent*                       WallrunModContinuousSound;                         // 0x1930(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WallrunEntryAngleThreshold;                        // 0x1938(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StartWallrunZVelocityThreshold;                    // 0x193C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UprightSlantedWallAngleThreshold;                  // 0x1940(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanWallrunOnPlayers;                              // 0x1944(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2003[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class AGGNPC>>            WallrunableNPCs;                                   // 0x1948(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	float                                        WallJumpZ;                                         // 0x1958(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WallRotInterpSpeed;                                // 0x195C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WallrunTurnRate;                                   // 0x1960(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WallrunMinInitialSpeed;                            // 0x1964(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WallrunMaxAcceleration;                            // 0x1968(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WallrunMaxZAcceleration;                           // 0x196C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WallrunMaxLateralAcceleration;                     // 0x1970(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WallrunMaxSpeed;                                   // 0x1974(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WallrunBaseFrictionFactor;                         // 0x1978(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UprightSlantedWallFrictionModifier;                // 0x197C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DownrightSlantedWallFrictionModifier;              // 0x1980(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WallrunMinSpeed;                                   // 0x1984(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WallrunMinZVelocity;                               // 0x1988(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BumpCheckMinAngle;                                 // 0x198C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BumpLengthThreshold;                               // 0x1990(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BumpCheckTraceLength;                              // 0x1994(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BumpStepOverSpeedMultiplier;                       // 0x1998(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        NonVelocityLoweringBumpHits;                       // 0x199C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        MinSuccessfulForwardMovesBeforeNoBump;             // 0x199D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2006[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HopCheckTraceLength;                               // 0x19A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HopTraceLateralOffsetMultiplier;                   // 0x19A4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HopTraceVerticalOffsetMultiplier;                  // 0x19A8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinHopBaseSpeed;                                   // 0x19AC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinHopFinalSpeed;                                  // 0x19B0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinWallrunDurationToReachMaxHopSpeed;              // 0x19B4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxHopSpeedDownwardsRatio;                         // 0x19B8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          LedgeHopCueTag;                                    // 0x19BC(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PushDownSpeedMultiplier;                           // 0x19C4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinWallInterpDistance;                             // 0x19C8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinWallSnapDistance;                               // 0x19CC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WallrunCameraLagSpeed;                             // 0x19D0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SwitchToWalkingAngleMargin;                        // 0x19D4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UprightSlantedWallAngleAdditionalThreshold;        // 0x19D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinGroundImpactDotAfterWallrun;                    // 0x19DC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector_NetQuantize                   CurrentWallrunFloorNormal;                         // 0x19E0(0xC)(Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector_NetQuantize                   PreviousWallrunFloorNormal;                        // 0x19EC(0xC)(Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2008[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FQuat                                 CurrentPotentialQuat;                              // 0x1A00(0x10)(Net, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                         bWasWallrunning;                                   // 0x1A10(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2009[0x4F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LadderAcceleration;                                // 0x1A60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LadderMaxClimbingSpeed;                            // 0x1A64(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LadderMaxStrafeSpeed;                              // 0x1A68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LadderDirectionCorrectionRate;                     // 0x1A6C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LadderCenteringMaxLerpDist;                        // 0x1A70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LadderJumpSpeed;                                   // 0x1A74(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftLadderMaxVelocity;                             // 0x1A78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPhysicalAnimationData                LadderPhysAnimSettings;                            // 0x1A7C(0x24)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	class UGGLadderComponent*                    CurrentLadderComponent;                            // 0x1AA0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_200B[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ClimbRefreshTime;                                  // 0x1AC0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_200C[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGGGrindingParams                     GrindingParams;                                    // 0x1AD8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGrindStart;                                      // 0x1B38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGrindEnd;                                        // 0x1B48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGrindHyperspeedStart;                            // 0x1B58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGrindHyperspeedEnd;                              // 0x1B68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGGGrindingVariables                  GrindingVariables;                                 // 0x1B78(0x78)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	float                                        GodModeAcceleration;                               // 0x1BF0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GodModeMaxSpeed;                                   // 0x1BF4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GodModeSprintingMaxSpeed;                          // 0x1BF8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsGlidingEnabled;                                 // 0x1BFC(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_200D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GlidingGravityOverride;                            // 0x1C00(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GlidingMaxFallVelocity;                            // 0x1C04(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                EasyTrickName;                                     // 0x1C08(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                MediumTrickName1;                                  // 0x1C18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                MediumTrickName2;                                  // 0x1C28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                HardTrickName1;                                    // 0x1C38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                HardTrickName2;                                    // 0x1C48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                HardTrickName3;                                    // 0x1C58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                HardTrickName4;                                    // 0x1C68(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_200F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGoatMovementComponent* GetDefaultObj();

	void UpdateRagdollMovementSettings(class UGGAlternativeGoatDataAsset* AGAsset);
	void StopGrinding(bool bReplicateToServer);
	void SetWallrunCameraBoomSettings(bool ResetValues);
	void SetGoatJump(bool NewCanJump);
	void SetExternalMovementObject(class UObject* InExternalMovementObject);
	void SetCanDoTrickRotation(bool bCanDoTricks);
	void SetCanClimbLadders(bool NewCanClimbLadders);
	void ServerStopGrinding();
	void ServerStartGrinding(class UGGGrindableSplineComponent* GrindSplineComp, enum class EStartGrindingFlags Flags);
	void ServerSetWasWallrunning(bool NewWasWallrunning);
	void ServerSetSlippery(bool bNewSlippery);
	void ServerSetIsHyperspeedGrinding(bool bIsHyperspeedGrindingNow);
	void ServerSetIsDoingTricks(bool bNewSpinning);
	void ServerSetCurrentFloorNormal(struct FVector_NetQuantize& NewFloorNormal);
	void ServerOnTrickCompleted(int32 TrickIndex);
	void OnRep_CurrentGrindedSpline();
	void OnRep_BrakingStruct();
	void OnRemovePerfectJumpPostProcessing();
	void OnGaitChanged(enum class ELSGait NewGait, class ULSCharacterMovementComponent* MovementComp);
	void OnEffectSourceChanged(const struct FGameplayTag& EffectTag, bool IsAdded);
	void OnDirectionChanged(enum class ELSMovementDirection NewDirection, enum class ELSMovementDirection OldDirection, class ULSCharacterMovementComponent* Comp);
	void OnAltGoatChanged(class AGGGoat* Goat, class UGGAlternativeGoatDataAsset* NewAltGoat);
	void MulticastSetIsHyperspeedGrinding(bool bIsHyperspeedGrindingNow);
	void MulticastReplicateCurrentGrindedSpline(class UGGGrindableSplineComponent* GrindedSpline);
	void MulticastReactivateSprintingTrail();
	void MulticastOnTrickCompleted(int32 TrickIndex);
	bool IsWallrunning();
	bool IsSlippery();
	bool IsHyperspeedGrinding();
	bool IsHelicopterFlying();
	bool IsGrinding();
	bool IsDoingTricks();
	bool IsClimbingLadder();
	bool IsBraking();
	void HandleOnGoatJumped(class AGGCharacter* CharacterGoat);
	class UGGWallrunModifierAssetUserData* GetWallrunModAssetUserDataFromFloor(const struct FFindFloorResult& InFloor);
	struct FVector GetNormalizedUnrotatedVelocity();
	class UGGJumpModifierAssetUserData* GetJumpModAssetUserDataFromFloor(const struct FFindFloorResult& InFloor);
	class UGGGoatMovementComponent* GetGoatMovementComponent(class AActor* ActorWithComp);
	bool FastEnoughForEffects();
	void DoBouncyJump(bool PerfectLanding);
	void ClientSetCanDoTrickRotation(bool bCanDoTricks);
	bool CanWallrunOnComponent(class UPrimitiveComponent* Component, bool bAssumeReadyToWallRun);
	bool CanGoatJump();
	void BrakingChanged_K2(bool bIsBraking, float StartBrakingSpeed);
};

// 0x0 (0xCE8 - 0xCE8)
// Class Goat2.GGGoatPlayerController
class AGGGoatPlayerController : public AGGPlayerController
{
public:

	static class UClass* StaticClass();
	static class AGGGoatPlayerController* GetDefaultObj();

};

// 0x118 (0x448 - 0x330)
// Class Goat2.GGPlayerState
class AGGPlayerState : public APlayerState
{
public:
	uint8                                        Pad_2018[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnGoatUpdated;                                     // 0x338(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize                   LastKnownServerLocation;                           // 0x348(0xC)(BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2019[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGGoatTower*                          CurrentGoatTower;                                  // 0x358(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldHideNameplate;                              // 0x360(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_201A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRadarCoordinateData                  PlayerRadarData;                                   // 0x368(0x58)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FRadarCoordinateData                  PlayerRadarDataMinigame;                           // 0x3C0(0x58)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                        Pad_201B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        PlayerColor;                                       // 0x41C(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_201C[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGGoat*                               PlayerGoat;                                        // 0x438(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        ServerIndex;                                       // 0x440(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_201D[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGPlayerState* GetDefaultObj();

	void SetPlayerScore(float NewScore);
	void SetPlayerGoat(class AGGGoat* Goat);
	void SetNameplateHidden(bool bShouldBeHidden);
	void ServerRequestPlayerColor(int32 ColorIndex, int32 BackupColorIndex);
	void RequestPlayerColor(int32 ColorIndex, int32 BackupColorIndex);
	void OnRep_ShouldHideNameplate();
	void OnRep_PlayerGoat();
	void OnRep_PlayerColor();
	bool IsHost();
	class UGGTeleportAreaUser* GetTeleportAreaUser();
	class FText GetSteamIDWatermarkTextDebug();
	class FText GetSteamIDWatermarkText();
	bool GetShouldHideNameplate();
	int32 GetServerIndex();
	float GetPlayerScore();
	class AGGGoat* GetPlayerGoat();
	class AGGPlayerController* GetPlayerController();
	int32 GetPlayerColorIndex();
	struct FLinearColor GetPlayerColor();
	void BroadcastOnCreatedWhenReady();
};

// 0x10 (0x458 - 0x448)
// Class Goat2.GGGoatPlayerState
class AGGGoatPlayerState : public AGGPlayerState
{
public:
	TSubclassOf<class AGGRadarWaypointActor>     PlayerWaypointActorClass;                          // 0x448(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGRadarWaypointActor*                 PlayerWaypointActor;                               // 0x450(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AGGGoatPlayerState* GetDefaultObj();

	void UpdatePlayerRadarData();
	void OnPlayerInfoChanged(class AGGGameState* GameState);
	void OnPlayerGamePlayerInfoChanged(class AGGPlayerGame_Base* PlayerGame);
	void OnPlayerGamePhaseChanged(class AGGPlayerGame_Base* PlayerGame, enum class EPlayerGamePhase NewPhase);
	void OnGameCurrentActiveGameChanged(class AGGPlayerGame_Base* PlayerGame);
};

// 0x348 (0x380 - 0x38)
// Class Goat2.GGGoatSimulatorSettings
class UGGGoatSimulatorSettings : public UDeveloperSettings
{
public:
	class FString                                DebugLanguageName;                                 // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AGGInteractableDialogueWrapper> DialogueWrapperClass;                              // 0x48(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSet<struct FKey>                            ForbiddenKeys;                                     // 0x70(0x50)(Edit, Config, NativeAccessSpecifierPublic)
	TSet<struct FKey>                            FullRangeAxisKeys;                                 // 0xC0(0x50)(Edit, Config, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UUserWidget>             MenuPendingWidget;                                 // 0x110(0x28)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USoundCue>              HoldButtonCue;                                     // 0x138(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USoundCue>              HoldButtonSuccessCue;                              // 0x160(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USoundCue>              HoldButtonCancelCue;                               // 0x188(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowGoatDLCs;                                     // 0x1B0(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2025[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGGUpdate>                     Updates;                                           // 0x1B8(0x10)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	class FString                                GoatGearFolder;                                    // 0x1C8(0x10)(Edit, ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                ThumbnailSaveLocation;                             // 0x1D8(0x10)(Edit, ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                InstinctsFolder;                                   // 0x1E8(0x10)(Edit, ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UDataTable>             InputBindings;                                     // 0x1F8(0x28)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UStringTable>           InputBindingNames;                                 // 0x220(0x28)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UStringTable>           SettingDisplayNames;                               // 0x248(0x28)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UStringTable>           CommonSettings;                                    // 0x270(0x28)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UDataTable>             InputButtonIcons;                                  // 0x298(0x28)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UDataTable>             InputButtonIcons_PS5;                              // 0x2C0(0x28)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UDataTable>             InputButtonIcons_Mobile;                           // 0x2E8(0x28)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UDataTable>             InputButtonIcons_Switch;                           // 0x310(0x28)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UDataTable>             GenericIcons;                                      // 0x338(0x28)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2027[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGoatSimulatorSettings* GetDefaultObj();

	bool IsKeyForbidden(struct FKey& InKey);
	class UDataTable* GetInputButtonIcons();
	class FText GetInputBindingsText(const class FString& InKey);
	class UDataTable* GetInputBindingsDataTable();
	class UDataTable* GetGenericIconSet();
	class FString GetGearFolderForUpdate(enum class EGGUpdate Update);
	class FText GetDisplayNameForSetting(class FName SettingName);
	class FText GetCommonSettingsText(const class FString& InKey);
	class UGGGoatSimulatorSettings* Get();
};

// 0x60 (0x350 - 0x2F0)
// Class Goat2.GGGoatSpringArmComponent
class UGGGoatSpringArmComponent : public USpringArmComponent
{
public:
	float                                        CameraVerticalOffsetLerpSpeed;                     // 0x2F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraVerticalOffsetLerpSpeed_WallRunning;         // 0x2F4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraDeattachedSnapDistance;                      // 0x2F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraMaxBehindDistance;                           // 0x2FC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraArmLengthTarget;                             // 0x300(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2028[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGGoat*                               OwnerGoat;                                         // 0x308(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2029[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGoatSpringArmComponent* GetDefaultObj();

};

// 0x228 (0x458 - 0x230)
// Class Goat2.GGGoatTower
class AGGGoatTower : public AActor
{
public:
	uint8                                        Pad_2034[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       SceneRoot;                                         // 0x248(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                  TowerMesh;                                         // 0x250(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bHasBeenSynchronised;                              // 0x258(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bWasSynchronisedOnLoad;                            // 0x259(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasPlayedMapSyncAnim;                             // 0x25A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2035[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                TowerName;                                         // 0x260(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  TowerAreaName;                                     // 0x270(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	int32                                        RewardAmount;                                      // 0x288(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2036[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGLevelSequenceActor*                 CameraSequenceActor;                               // 0x290(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SyncHoldDuration;                                  // 0x298(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2037[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  SyncNotificationTitle;                             // 0x2A0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  SyncNotificationBody;                              // 0x2B8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    GoatTowerRiseCurve;                                // 0x2D0(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                        RelativeTargetHeight;                              // 0x358(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        YawAmountToRotate;                                 // 0x35C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RiseTime;                                          // 0x360(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FadeOutDuration;                                   // 0x364(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FOverrideLocationsParameters          LevelStreamOverrideLocations;                      // 0x368(0x28)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class AActor*                                TeleportArea;                                      // 0x390(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          InviteWidget;                                      // 0x398(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  GatherGoatsText;                                   // 0x3A0(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        GatherGoatsTextDuration;                           // 0x3B8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2038[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  FoundTowerWidgetTitle;                             // 0x3C0(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  FoundTowerWidgetBody;                              // 0x3D8(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        FoundTowerWidgetDuration;                          // 0x3F0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2039[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UBoxComponent*                         TowerBoxTrigger;                                   // 0x3F8(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SynchronizeParentTag;                              // 0x400(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_203A[0x29];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ETowerRiseState                   TowerRiseState;                                    // 0x431(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_203B[0x16];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AGGGoat*>                       OverlappedGoats;                                   // 0x448(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AGGGoatTower* GetDefaultObj();

	void OnTowerFinishedRising();
	void OnRep_TowerRiseState();
	void OnRep_HasBeenSynchronised();
	void OnPlayerLoggedIn(class APlayerController* NewPlayerController);
	void OnClientTowerSynchronised();
	void OnCameraSequenceFinished(class AGGGoat* FinishedForGoat);
	void OnCameraSeqFinished();
	void MulticastGoatSynchronisedWithTower(class AGGGoat* SyncingGoat);
	void MulticastFadeOut();
	bool IsAllGoatsInRange();
	bool HasBeenSynchronised();
	void HandleUnsyncedTowerOverlapEnd(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void HandleUnsyncedTowerOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIdex, bool bFromSweep, struct FHitResult& SweepResult);
	void GoatSynchronisedWithTower(class AGGGoat* SyncingGoat);
	TArray<class AGGPlayerState*> GetOverlappingPlayers();
	TArray<class AGGGoat*> GetOverlappingGoats();
	void CreateTowerSyncedNotification(class UObject* WorldContextObject);
};

// 0x0 (0x428 - 0x428)
// Class Goat2.GGGoatTowerCompassPoint
class UGGGoatTowerCompassPoint : public UGGCompassPointUserWidget
{
public:

	static class UClass* StaticClass();
	static class UGGGoatTowerCompassPoint* GetDefaultObj();

	void UpdatePrimaryTowerStatus(class AGGGoatTower* InGoatTower);
	bool IsPrimaryTower();
	bool IsGoatTowerEventIncomplete();
};

// 0x0 (0x308 - 0x308)
// Class Goat2.GGListUserWidget
class UGGListUserWidget : public UGGUserWidget
{
public:

	static class UClass* StaticClass();
	static class UGGListUserWidget* GetDefaultObj();

	void SetActiveSorting(const TArray<struct FGameplayTag>& InActiveSorting);
	bool RebuildQuestList(const TArray<struct FAdvancedRule>& Rulesets, const TArray<struct FGameplayTag>& AdditionalHeaders);
	void OnRebuiltList();
	void OnClearedList();
	void ClearList();
};

// 0x8 (0x310 - 0x308)
// Class Goat2.GGGoatTowerListUserWidget
class UGGGoatTowerListUserWidget : public UGGListUserWidget
{
public:
	class UListView*                             List;                                              // 0x308(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGGoatTowerListUserWidget* GetDefaultObj();

};

// 0x18 (0x78 - 0x60)
// Class Goat2.GGGoatTowerSubsystem
class UGGGoatTowerSubsystem : public UGGWorldSubsystem
{
public:
	TArray<class AGGGoatTower*>                  GoatTowers;                                        // 0x60(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class AGGGoatTower*                          LatestSynchronizedGoatTower;                       // 0x70(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGGoatTowerSubsystem* GetDefaultObj();

	void OnGoatTowerSynchronised(class AGGGoatTower* GoatTower, enum class ETowerSynchronizationEvent SynchronizationEvent);
	bool IsPrimaryTower(class AGGGoatTower* GoatTower);
	class FString GetPrimaryGoatTowerName();
	class AGGGoatTower* GetLatestSynchronizedGoatTower();
	TArray<class AGGGoatTower*> GetGoatTowers();
	class AGGGoatTower* GetGoatTowerFromID(const class FString& TowerID);
	class AGGGoatTower* GetFirstSynchronizedGoatTower();
	void AddGoatTower(class AGGGoatTower* GoatTower);
};

// 0x8 (0x508 - 0x500)
// Class Goat2.GGGoatTowerTabUserWidget
class UGGGoatTowerTabUserWidget : public UGGMenuTabUserWidget
{
public:
	class UGGGoatTowerListUserWidget*            StretchGoalList;                                   // 0x500(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGGoatTowerTabUserWidget* GetDefaultObj();

};

// 0x8 (0x238 - 0x230)
// Class Goat2.GGGoatVisualizer
class AGGGoatVisualizer : public AActor
{
public:
	uint8                                        Pad_2058[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGGoatVisualizer* GetDefaultObj();

	class USkeletalMeshComponent* GetSkelMesh();
	class UStaticMeshComponent* GetHorn();
};

// 0x0 (0x230 - 0x230)
// Class Goat2.GGGrafittiTagger_FoundingFather
class AGGGrafittiTagger_FoundingFather : public AActor
{
public:

	static class UClass* StaticClass();
	static class AGGGrafittiTagger_FoundingFather* GetDefaultObj();

	void BP_OnUsingTaggerInFoundingFatherOverlapp();
};

// 0x8 (0x238 - 0x230)
// Class Goat2.GGGrafittiTagger_GrafittiArea
class AGGGrafittiTagger_GrafittiArea : public AActor
{
public:
	bool                                         bWasSprayed;                                       // 0x230(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_205B[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGGrafittiTagger_GrafittiArea* GetDefaultObj();

	void OnSetAsSprayed();
	void OnRep_WasSprayed();
	void MarkAsSprayed();
	void BP_OnUsingTaggerAbilityInEventOverlaps(class AGGGoat* GoatVandal);
};

// 0x28 (0x258 - 0x230)
// Class Goat2.GGGravitySphereActor
class AGGGravitySphereActor : public AActor
{
public:
	class USphereComponent*                      GravitySphereComponent;                            // 0x230(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                       SceneRoot;                                         // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PActorGravity;                                     // 0x240(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PActorMaxVelocityFromGravity;                      // 0x244(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PActorGravityMultiplier;                           // 0x248(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LowGravity;                                        // 0x24C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2060[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGGravitySphereActor* GetDefaultObj();

	void OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnBeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGGrindableInterface
class IGGGrindableInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IGGGrindableInterface* GetDefaultObj();

};

// 0x90 (0x2C0 - 0x230)
// Class Goat2.GGGrindableSpline
class AGGGrindableSpline : public AActor
{
public:
	uint8                                        Pad_2061[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       Root;                                              // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldUpdateSplineInConstruction;                 // 0x240(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2062[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMesh*                           SplineStaticMesh;                                  // 0x248(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    OverriddenSplineMeshMaterial;                      // 0x250(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SplineScale;                                       // 0x258(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GrindSplineDrawDistance;                           // 0x25C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bGrindSplineCastShadow;                            // 0x260(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESplineMeshAxis                   SplineMeshForwardAxis;                             // 0x261(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2063[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGGrindableSplineDataAsset*           GrindableSplineDataAsset;                          // 0x268(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurveTangent;                                      // 0x270(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSpawnObstaclesOnAllConnections;                   // 0x274(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2064[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSoftObjectPtr<class AActor>>         ActorsGoatShouldIgnoreCollisionWith;               // 0x278(0x10)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UGGGrindableSplineComponent*>   SplineComponents;                                  // 0x288(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class AActor*>                        Obstacles;                                         // 0x298(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class AActor>>            ObstacleClassesToSpawn;                            // 0x2A8(0x10)(BlueprintVisible, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	int32                                        NumberOfObstaclesToSpawn;                          // 0x2B8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2065[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGGrindableSpline* GetDefaultObj();

	void SpawnObstacles();
	void ClearObstacles();
};

// 0x20 (0x2E0 - 0x2C0)
// Class Goat2.GGGrindablePowerLineBase
class AGGGrindablePowerLineBase : public AGGGrindableSpline
{
public:
	TArray<struct FGGTargetConnectionInfo>       TargetConnectionInfos;                             // 0x2C0(0x10)(BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<TWeakObjectPtr<class AGGGrindablePowerLineBase>> ConnectedGrindableSplines;                         // 0x2D0(0x10)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AGGGrindablePowerLineBase* GetDefaultObj();

	void UpdateSplinesConnections();
	void SetupSplines(TArray<class USceneComponent*>& StartPoints, TArray<class USceneComponent*>& EndPoints);
};

// 0x38 (0x590 - 0x558)
// Class Goat2.GGGrindableSplineComponent
class UGGGrindableSplineComponent : public USplineComponent
{
public:
	uint8                                        Pad_206D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Tangent;                                           // 0x560(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_206E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class USplineMeshComponent*>          SplineMeshComponents;                              // 0x568(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class USceneComponent>        EndPoint;                                          // 0x578(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class AActor>                 EndPointOwner;                                     // 0x580(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  EndPointTag;                                       // 0x588(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGGrindableSplineComponent* GetDefaultObj();

	bool UpdateLastSplineSection();
	void SetSplineSection(int32 StartSplinePoint, struct FVector& NewStartLocation, struct FVector& NewStartTangent, struct FVector& NewNextSplineLocation, struct FVector& NewNextTangent, enum class ESplineCoordinateSpace CoordinateSpace);
	bool Interact(class AActor* SourceActor, float HeldFor);
	float GetRequiredHoldDuration();
	class FText GetInteractTextTitle(class AGGPlayerController* InteractingPlayerController);
	class FText GetInteractTextBody(class AGGPlayerController* InteractingPlayerController);
	bool GetAutoInteractPastDuration();
	class UGGGrindableSplineComponent* CreateGrindableSplineComponent(class AActor* Owner, class UStaticMesh* SplineMesh, class FName SplineCompName, class USceneComponent* StartPoint, class USceneComponent* EndPoint, enum class ESplineMeshAxis MeshForwardAxis, float VerticalTangent, float MeshScale, float CullDistance, bool bShouldCastShadows, class UMaterialInterface* OverrideMeshMaterial, enum class EComponentCreationMethod SplineCreationMethod);
	bool CanBeInteractedWith(class AActor* SourceActor);
	void AddSplineSectionWithNewEndPoint(class USceneComponent* NewEndPoint);
	void AddSplineSectionAtLocation(const struct FVector& NewEndPointLocation);
};

// 0x88 (0xB8 - 0x30)
// Class Goat2.GGGrindableSplineDataAsset
class UGGGrindableSplineDataAsset : public UDataAsset
{
public:
	class UStaticMesh*                           SplineStaticMesh;                                  // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       GrindParticleSystem;                               // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       GrindTriggerParticleSystem;                        // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       GrindHyperspeedParticleSystem;                     // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       GrindHyperspeedBlastParticleSystem;                // 0x50(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       GrindHyperspeedOffParticleSystem;                  // 0x58(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       GrindHyperspeedWindParticleSystem;                 // 0x60(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       GrindHyperspeedWhiteWindBigParticleSystem;         // 0x68(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       GrindHyperspeedWhiteWindSmallParticleSystem;       // 0x70(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       GrindHyperspeedBlueTrailParticleSystem;            // 0x78(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            GrindSoundEffect;                                  // 0x80(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            GrindStartSound;                                   // 0x88(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            GrindEndSound;                                     // 0x90(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            GrindSplineSwitchSound;                            // 0x98(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            GrindHyperspeedSoundEffect;                        // 0xA0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            GrindHyperspeedStartSound;                         // 0xA8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            GrindHyperspeedEndSound;                           // 0xB0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGGrindableSplineDataAsset* GetDefaultObj();

};

// 0x48 (0x250 - 0x208)
// Class Goat2.GGGroundAlignedParticleComponent
class UGGGroundAlignedParticleComponent : public USceneComponent
{
public:
	class UParticleSystemComponent*              GroundParticleComp;                                // 0x208(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              InAirTrailParticleComp;                            // 0x210(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystem*                       GroundParticle;                                    // 0x218(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       InAirParticle;                                     // 0x220(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LifeSpan;                                          // 0x228(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_206F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                OwnerActor;                                        // 0x230(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AGGCharacter*                          OwnerCharacter;                                    // 0x238(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AGGPhysicsActor_Base*                  OwnerPActor;                                       // 0x240(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2070[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGGroundAlignedParticleComponent* GetDefaultObj();

};

// 0x58 (0x108 - 0xB0)
// Class Goat2.GGHandcuffedComponent
class UGGHandcuffedComponent : public UActorComponent
{
public:
	float                                        RemoveDuration;                                    // 0xB0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanHitAnimals;                                    // 0xB4(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2074[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class APhysicsConstraintActor>   PhysConstraintClass;                               // 0xB8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGGHandcuffState                  TargetHandcuffState;                               // 0xC0(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2075[0x27];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class APhysicsConstraintActor*               BehindHandsConstraint;                             // 0xE8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class APhysicsConstraintActor*               HandsConstraint;                                   // 0xF0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class APhysicsConstraintActor*               HandsToFeetConstraint;                             // 0xF8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class APhysicsConstraintActor*               FeetConstraint;                                    // 0x100(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGHandcuffedComponent* GetDefaultObj();

	void TriggerHandcuffs(float PreventStandupFor, bool bMinimumTwoCuffs);
	void RemoveHandcuffs();
	void RemoveBehindHandsConstraint();
	void OnRep_TargetHandcuffState();
	void OnOwnerUnRagdoll(bool bRagdollOnGround, class ULSCharacterMovementComponent* MovementComp, class ACharacter* Character, struct FRagdollStateChangeSettings& StateChangeSettings);
	class UGGHandcuffedComponent* GetHandCuffedComponent(class AActor* ActorToSearch, TSubclassOf<class UGGHandcuffedComponent>& Class, bool bCreateNew);
};

// 0x28 (0x2F8 - 0x2D0)
// Class Goat2.GGHandcuffs
class AGGHandcuffs : public AGGPhysicsProjectile
{
public:
	TSubclassOf<class UGGHandcuffedComponent>    HandcuffedComponentType;                           // 0x2D0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USphereComponent*                      SphereCollider;                                    // 0x2D8(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          HandcuffGoatTag;                                   // 0x2E0(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          GoatIdentifierTag;                                 // 0x2E8(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2077[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGHandcuffs* GetDefaultObj();

	void HandleOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIdex, bool bFromSweep, struct FHitResult& SweepResult);
	void BP_OnTriggerHandCuffs();
};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGHeadbuttableObjectInterface
class IGGHeadbuttableObjectInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IGGHeadbuttableObjectInterface* GetDefaultObj();

	void ObjectWasHeadbutted(class AGGGoat* HeadbuttingGoat);
	bool CanBeHeadbutted(class AGGGoat* HeadbuttingGoat);
};

// 0x78 (0xA0 - 0x28)
// Class Goat2.GGHelpEntryObject
class UGGHelpEntryObject : public UObject
{
public:
	struct FHelpMenuDataRow                      HelpMenuDataRow;                                   // 0x28(0x78)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGHelpEntryObject* GetDefaultObj();

	class FText GetEntryBody();
};

// 0x20 (0x520 - 0x500)
// Class Goat2.GGHelpMenuWidget
class UGGHelpMenuWidget : public UGGMenuTabUserWidget
{
public:
	class UDataTable*                            HelpListDataTable;                                 // 0x500(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGListView*                           HelpListView;                                      // 0x508(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGScrollBox*                          ContentScrollBox;                                  // 0x510(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_207B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGHelpMenuWidget* GetDefaultObj();

	void PopulateListViewFromDataTable();
	void OnListViewSetupDone();
};

// 0x0 (0x260 - 0x260)
// Class Goat2.GGHUDUserWidgetBase
class UGGHUDUserWidgetBase : public UUserWidget
{
public:

	static class UClass* StaticClass();
	static class UGGHUDUserWidgetBase* GetDefaultObj();

};

// 0x130 (0x390 - 0x260)
// Class Goat2.GGHUDUserWidget
class UGGHUDUserWidget : public UGGHUDUserWidgetBase
{
public:
	float                                        ClientTimeoutCheckLimit;                           // 0x260(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HostTimeoutCheckLimit;                             // 0x264(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ClientTimeoutCheckInterval;                        // 0x268(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2083[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UGGUserWidget*>                 HUDWidgets;                                        // 0x270(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UGGQuestUserWidget*                    PrototypeQuestWidget;                              // 0x280(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGInstinctsUserWidget*                PrototypeInstinctsUserWidget;                      // 0x288(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGNotificationContainerWidget*        PrototypeTokenUserWidget;                          // 0x290(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGNotificationContainerWidget*        PrototypeHUDItemWidget;                            // 0x298(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGNotificationContainerWidget*        PrototypeHUDMessageWidget;                         // 0x2A0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGChatUserWidget*                     PrototypeChatUserWidget;                           // 0x2A8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGNotificationContainerWidget*        PrototypeHUDActionWidget;                          // 0x2B0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGNotificationContainerWidget*        PrototypeHUDHintWidget;                            // 0x2B8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGNotificationContainerWidget*        PrototypeHUDSplashWidget;                          // 0x2C0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGNotificationContainerWidget*        PrototypeHUDCustomNotificationWidget;              // 0x2C8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGNotificationUserWidget*             PrototypePlayerGameScoreboard;                     // 0x2D0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGNotificationContainerWidget*        PrototypeHUDInvitesWidget;                         // 0x2D8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGNotificationUserWidget*             PrototypeHUDTimerWidget;                           // 0x2E0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGCompassUserWidget*                  PrototypeCompassUserWidget;                        // 0x2E8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGTrackerUserWidget*                  PrototypeTrackerUserWidget;                        // 0x2F0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGUserWidget*                         ClientTimeoutUserWidget;                           // 0x2F8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGSubtitleNotificationUserWidget*     HUDSubtitleWidget;                                 // 0x300(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 WidgetsToHideInMinigames;                          // 0x308(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	uint8                                        Pad_2084[0x68];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGHUDUserWidget* GetDefaultObj();

	bool WidgetHasEffectSource(class UGGUserWidget* Widget, const struct FGameplayTag& EffectTag);
	void RemoveEffectSources(const struct FGameplayTag& SourceTag, const struct FGameplayTagContainer& EffectTags, const struct FGameplayTagContainer& Targets);
	bool RemoveEffectSource(const struct FGameplayTag& SourceTag, const struct FGameplayTag& EffectTag, const struct FGameplayTagContainer& Targets);
	void RemoveAllEffectsFromSource(const struct FGameplayTag& SourceTag);
	void OnViewportResizedBP(int32 ViewportX, int32 ViewportY);
	void OnPlayerGamePlayerInfoChanged(class AGGPlayerGame_Base* PlayerGame);
	void OnMenuExited(class UUserWidget* Widget);
	void OnMenuEntered(class UUserWidget* Widget);
	void OnGameCurrentActiveGameChanged(class AGGPlayerGame_Base* PlayerGame);
	void InitRadarComponent();
	bool HasEffectSource(const struct FGameplayTag& EffectTag);
	void AddEffectSources(const struct FGameplayTag& SourceTag, const struct FGameplayTagContainer& EffectTags, const struct FGameplayTagContainer& Targets);
	void AddEffectSource(const struct FGameplayTag& SourceTag, const struct FGameplayTag& EffectTag, const struct FGameplayTagContainer& Targets);
};

// 0x28 (0x288 - 0x260)
// Class Goat2.GGHUDUserWidgetMainMenu
class UGGHUDUserWidgetMainMenu : public UGGHUDUserWidgetBase
{
public:
	struct FGameplayTagContainer                 MenusThatHideInviteWidgets;                        // 0x260(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_2085[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGHUDUserWidgetMainMenu* GetDefaultObj();

	bool HasBlockingChildMenuOpened();
};

// 0x48 (0xA8 - 0x60)
// Class Goat2.GGIncrementalSpawner
class UGGIncrementalSpawner : public UGGWorldSubsystem
{
public:
	uint8                                        Pad_208C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSpawnData>                    SpawningActors;                                    // 0x68(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FSpawnData>                    NewSpawningActors;                                 // 0x78(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class AActor>>         DestructingActors;                                 // 0x88(0x10)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class AActor>>         NewDestructingActors;                              // 0x98(0x10)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGIncrementalSpawner* GetDefaultObj();

	bool SpawnActorIncremental(class UObject* WorldContextObject, struct FSpawnParams& SpawnParams, FDelegateProperty_& FailedDelegate, FDelegateProperty_& BeforeFinishDelegate, FDelegateProperty_& AfterFinishDelegate);
	bool DestroyActorIncremental(class UObject* WorldContextObject, class AActor* Actor, bool bNetForce, bool bShouldModifyLevel);
};

// 0x150 (0x180 - 0x30)
// Class Goat2.GGIncrementalSpawnerAction
class UGGIncrementalSpawnerAction : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_            OnIncrementalSpawnFailed;                          // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnIncrementalSpawnBeforeFinish;                    // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnIncrementalSpawnPostActorConstruction;           // 0x50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnIncrementalSpawnAfterFinish;                     // 0x60(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FSpawnParams                          SpawnParams;                                       // 0x70(0x100)(ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UObject*                               WorldContextObject;                                // 0x170(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_208F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGIncrementalSpawnerAction* GetDefaultObj();

	class UGGIncrementalSpawnerAction* SpawnActorAction(class UObject* WorldContextObject, class UClass* Class, struct FTransform& Transform, class AActor* Owner, class APawn* Instigator, enum class ESpawnActorCollisionHandlingMethod CollisionHandlingOverride);
};

// 0x8 (0x708 - 0x700)
// Class Goat2.GGInputKeySelector
class UGGInputKeySelector : public UInputKeySelector
{
public:
	uint8                                        Pad_2091[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGInputKeySelector* GetDefaultObj();

	void HandleSelectingKeyChanged();
};

// 0x68 (0x568 - 0x500)
// Class Goat2.GGSettingsTabMenuUserWidget
class UGGSettingsTabMenuUserWidget : public UGGMenuTabUserWidget
{
public:
	class FName                                  SettingsCategory;                                  // 0x500(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGGOptionContainerUserWidget> SettingsRowWidgetClass;                            // 0x508(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGGSettingsTabSectionHeaderUserWidget> SectionHeaderWidgetClass;                          // 0x510(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PaddingSettingsWidgets;                            // 0x518(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2098[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGScrollBox*                          SettingScrollbox;                                  // 0x520(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVerticalBox*                          SettingsBox;                                       // 0x528(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            ToolTipLabel;                                      // 0x530(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UGGOptionContainerUserWidget*>  OptionUserWidgets;                                 // 0x538(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            OnSettingsRequireApply;                            // 0x548(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	uint8                                        Pad_209A[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGSettingsTabMenuUserWidget* GetDefaultObj();

	void SetCurrentOptionToolTip(class FText Tooltip);
	void OnSettingWidgetCreated(class UUserWidget* CreatedWidget, bool bIsCategory);
	void OnSettingsRowRequireApply(class UGGGameSettingOptionUserWidget* GameSetting);
	void OnOptionHovered(class UGGOptionContainerUserWidget* Widget, class UGGGameSettingOptionUserWidget* Option);
	void OnOptionFocused(class UGGOptionContainerUserWidget* Widget);
	class UWidget* HandleListNavigation(enum class EUINavigation NavigationDir);
	void CreateSettingWidgets();
	void BringSettingIntoView(class UGGUserWidget* SettingWidget);
};

// 0x0 (0x568 - 0x568)
// Class Goat2.GGInputSettingsTabMenuUserWidget
class UGGInputSettingsTabMenuUserWidget : public UGGSettingsTabMenuUserWidget
{
public:

	static class UClass* StaticClass();
	static class UGGInputSettingsTabMenuUserWidget* GetDefaultObj();

};

// 0xD8 (0x570 - 0x498)
// Class Goat2.GGInstinct
class AGGInstinct : public AGGQuestBase
{
public:
	enum class EInstinctType                     InstinctType;                                      // 0x498(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20A1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          AreaTag;                                           // 0x49C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRequireGearUnlocked;                              // 0x4A4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20A2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGGoatGearInfoDataAsset*              RequiredUnlockedGearAsset;                         // 0x4A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BasePriority;                                      // 0x4B0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AdditionalGearPriority;                            // 0x4B4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AdditionalAreaPriority;                            // 0x4B8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EInstinctDifficultyType           InstinctDifficultyType;                            // 0x4BC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20A3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EInstinctDifficultyType, int32> InstinctDifficulties;                              // 0x4C0(0x50)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UGGInstinctPackDataAsset*              RequiredInstinctPack;                              // 0x510(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasProgress;                                      // 0x518(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20A4[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                InstinctButtonID;                                  // 0x520(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGInstinctCategoryDataAsset*          InstinctCategoryDataAsset;                         // 0x530(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsUnread;                                         // 0x538(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20A5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AGGPlayerController*>           PinningGoatControllers;                            // 0x540(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_20A6[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bOverrideProgressOnMobile;                         // 0x564(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20A7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MobileProgressOverride;                            // 0x568(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20A8[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGInstinct* GetDefaultObj();

	void SetPinningPlayerController(class AGGPlayerController* PC);
	void SetAsPinned(bool ShouldBePinned, class AGGPlayerController* PC);
	void RemovePinningPlayerController(class AGGPlayerController* PC);
	void OnInventoryInitialized(class UGGInventory* Inventory);
	void OnInstinctPackUnlocked(class UGGInstinctPackDataAsset* InDataAsset, const struct FGameplayTag& Context);
	void OnGearEquipped(class AGGGoat* Goat, TArray<TSubclassOf<class USceneComponent>>& GearEquipped);
	bool IsPinned(class AGGPlayerController* PC);
	bool IsInstinctUnlocked();
	bool HasDescription();
	int32 GetPriority(class AGGPlayerController* PC);
	TArray<class AGGPlayerController*> GetPinningPlayerControllers();
};

// 0x30 (0x60 - 0x30)
// Class Goat2.GGInstinctCategoryDataAsset
class UGGInstinctCategoryDataAsset : public UPrimaryDataAsset
{
public:
	class FText                                  CategoryHeaderLabel;                               // 0x30(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bIsCompleted;                                      // 0x48(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_20A9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AGGInstinct*>                   InstinctsInCategory;                               // 0x50(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGInstinctCategoryDataAsset* GetDefaultObj();

	bool IsCompleted();
};

// 0x18 (0x320 - 0x308)
// Class Goat2.GGInstinctEntryUserWidget
class UGGInstinctEntryUserWidget : public UGGUserWidget
{
public:
	class AGGInstinct*                           AssociatedInstinct;                                // 0x308(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInstinctEntryIsFinished;                         // 0x310(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGInstinctEntryUserWidget* GetDefaultObj();

	bool IsWidgetStale();
};

// 0x18 (0x48 - 0x30)
// Class Goat2.GGInstinctPackDataAsset
class UGGInstinctPackDataAsset : public UPrimaryDataAsset
{
public:
	class FString                                PackID;                                            // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TokenReward;                                       // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsTutorial;                                       // 0x44(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUnlocked;                                         // 0x45(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_20AB[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGInstinctPackDataAsset* GetDefaultObj();

	bool UnlockInstinctPack(class AGGPlayerController* Instigator, bool* bOutFirstPack);
	bool IsUnlocked();
};

// 0x20 (0x250 - 0x230)
// Class Goat2.GGInstinctPickup
class AGGInstinctPickup : public AActor
{
public:
	class UGGInstinctPackDataAsset*              DataAsset;                                         // 0x230(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGInstinctPackDataAsset*              TutorialDataAsset;                                 // 0x238(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGInstinctPackDataAsset*              TowerDataAsset;                                    // 0x240(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsPickedUp;                                       // 0x248(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_20B1[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGInstinctPickup* GetDefaultObj();

	bool UnlockTutorialInstinct(class AGGPlayerController* InInstigator, bool* bOutFirstPack);
	bool UnlockInstincts(class AGGPlayerController* InInstigator, bool* bOutFirstPack);
	void OnUpdated();
	void OnInventoryInitialized(class UGGInventory* Inventory);
	void OnInstinctPackUnlocked(class UGGInstinctPackDataAsset* InDataAsset, const struct FGameplayTag& Context);
	void OnInstinctPacksLoaded();
	void OnDeactivateInstinctPickup();
	bool IsPickupActive();
	bool GetIsPickedUp();
};

// 0x38 (0x458 - 0x420)
// Class Goat2.GGInstinctsUserWidget
class UGGInstinctsUserWidget : public UGGNotificationUserWidget
{
public:
	int32                                        MaxAmountOfInstincts;                              // 0x420(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20B2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UUserWidget>               InstinctWidgetClass;                               // 0x428(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVerticalBox*                          InstinctWidgetContainer;                           // 0x430(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UGGInstinctEntryUserWidget*>    ActiveInstinctWidgets;                             // 0x438(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class AGGQuestBase*>                  CurrentInstincts;                                  // 0x448(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGGInstinctsUserWidget* GetDefaultObj();

	void OnInstinctWidgetFinished(class UGGInstinctEntryUserWidget* Entry);
	void OnInstinctsActive(bool bHasActiveInstincts);
	class UGGInstinctEntryUserWidget* GetWidgetForInstinct(class AGGQuestBase* Quest);
};

// 0xA0 (0x2D0 - 0x230)
// Class Goat2.GGInteractableDialogueWrapper
class AGGInteractableDialogueWrapper : public AActor
{
public:
	uint8                                        Pad_20B6[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UBoxComponent*                         InteractionBox;                                    // 0x240(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USphereComponent*                      SphereForAutoDialogueStart;                        // 0x248(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGSpeechBubbleComponent*              SpeechBubbleComponent;                             // 0x250(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRadarCoordinateData                  DialogueIndicatorRadarData;                        // 0x258(0x58)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        AdditionalBoundsExtent;                            // 0x2B0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20B7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGDialogueDataAsset*                  Dialogue;                                          // 0x2B8(0x8)(Edit, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGDialogueInstance*                   DialogueInstance;                                  // 0x2C0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20B8[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGInteractableDialogueWrapper* GetDefaultObj();

	void ToggleDialogueIndicator(class UGGDialogueInstance* Instance);
	class AGGInteractableDialogueWrapper* SpawnDialogueAndAssignToActor(TSubclassOf<class AGGInteractableDialogueWrapper> DialogueWrapperClass, class UGGDialogueDataAsset* Dialogue, class AActor* TargetActor);
	void SimulateInteraction(class AActor* InteractingActor);
	void OnRep_Instance();
	void OnRep_Dialogue();
	void OnOverlapSphereBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnDialogueEnded(class UGGDialogueInstance* Instance);
	void OnAttachParentNPCPooled(class AGGNPC* NPC, bool bWasPooled);
	void OnAttachParentActorDestroyed(class AActor* AttachParent);
	class AGGInteractableDialogueWrapper* FindInteractableDialogueWrapperActor(class AActor* InActor);
};

// 0x0 (0x2D0 - 0x2D0)
// Class Goat2.GGInteractableDialogueWrapper_Test
class AGGInteractableDialogueWrapper_Test : public AGGInteractableDialogueWrapper
{
public:

	static class UClass* StaticClass();
	static class AGGInteractableDialogueWrapper_Test* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGInteractInterface
class IGGInteractInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IGGInteractInterface* GetDefaultObj();

	bool StartHold();
	bool ShouldShowInteractHintOnMobile();
	bool InteractClient(class AActor* SourceActor, float HeldFor);
	bool Interact(class AActor* SourceActor, float HeldFor);
	float GetRequiredHoldDuration();
	float GetNPCRecentInteractDelay();
	int32 GetNPCInteractionChance();
	class FText GetInteractTextTitle(class AGGPlayerController* InteractingPlayerController);
	class FText GetInteractTextBody(class AGGPlayerController* InteractingPlayerController);
	struct FGameplayTag GetInteractNotificationTag();
	class FString GetInteractNotificationID();
	bool GetAutoInteractPastDuration();
	bool EndHold(float HeldFor);
	bool CanBeInteractedWith(class AActor* SourceActor);
};

// 0x58 (0x288 - 0x230)
// Class Goat2.GGIntro
class AGGIntro : public AActor
{
public:
	class FString                                IntroID;                                           // 0x230(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanSkipIntro;                                     // 0x240(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreSaveGame;                                   // 0x241(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20BE[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                SaveGameKey;                                       // 0x248(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMovieSceneSequencePlayer*             IntroLevelSequence;                                // 0x258(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            OnIntroFinished;                                   // 0x260(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_20BF[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGIntro* GetDefaultObj();

	void SkipIntro();
	void PlayIntro();
	void OnSkipIntro();
	void OnPlayIntro();
	void NativeDisableSkipForward();
	bool IsIntroPlaying();
	bool IsAnyIntroPlaying(class UObject* WorldContext);
	void FinishIntro();
};

// 0xE0 (0x190 - 0xB0)
// Class Goat2.GGIntroComponent
class UGGIntroComponent : public UActorComponent
{
public:
	class AGGPlayerController*                   OwningController;                                  // 0xB0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                DefaultIntroSaveGameKey;                           // 0xB8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESaveGameType                     IntroSaveGameType;                                 // 0xC8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20C1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  SkipIntroText;                                     // 0xD0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class AGGIntro*                              DefaultIntroRef;                                   // 0xE8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 GoatEffectSourceTags;                              // 0xF0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 MenuEffectSourceTags;                              // 0x110(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 WidgetTagsToHideInIntro;                           // 0x130(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UMusicTrack*                           PreIntroMuteTrack;                                 // 0x150(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AGGIntro*                              CurrentIntro;                                      // 0x158(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20C2[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGIntroComponent* GetDefaultObj();

	void SkipCurrentIntro();
	bool ShouldPlayIntro(class AGGIntro* Intro);
	void ServerToggleGoatInIntro(bool bInIntro);
	void PlayIntro(class AGGIntro* Intro);
	void PlayDefaultIntro();
	void OnLevelStartLoadingScreenRemoved();
	bool IsPlayingIntro();
	void IntroFinished(class AGGIntro* Intro);
	void IntroDestroyed(class AActor* Actor);
	bool HasPlayedIntro();
	TSoftObjectPtr<class AGGIntro> GetDefaultIntro();
};

// 0x198 (0x1C0 - 0x28)
// Class Goat2.GGInventory
class UGGInventory : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnTokenAmountChangedDelegate;                      // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInventoryUnlockedDelegate;                       // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInventoryUnlockedStoreDelegate;                  // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMiniGameUnlockedDelegate;                        // 0x58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInstinctPackUnlockedDelegate;                    // 0x68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInstinctRemovePinDelegate;                       // 0x78(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInstinctPacksLoadedDelegate;                     // 0x88(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnKarmaAcquired;                                   // 0x98(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnChaosAcquired;                                   // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_20E6[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AGGInstinct*>                   PinnedInstincts;                                   // 0xC0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_20E7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGProgression*                        LocalProgression;                                  // 0xD8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UGGGoatGearInfoDataAsset*>      GearLibrary;                                       // 0xE0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TMap<class FString, class UGGGoatGearInfoDataAsset*> GearLibraryMap;                                    // 0xF0(0x50)(NativeAccessSpecifierPrivate)
	TArray<class UGGGoatGearInfoDataAsset*>      GearLibrary_AGsOnly;                               // 0x140(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UGGInstinctPackDataAsset*>      InstinctDataAssets;                                // 0x150(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class UObjectLibrary*                        InstinctObjectLibrary;                             // 0x160(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSet<class FString>                          UnreadItems;                                       // 0x168(0x50)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_20E9[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGInventory* GetDefaultObj();

	void UpdateQuestUnreadStatus(class AGGQuestBase* Quest);
	bool UnlockStoreGearBlueprint(class UGGGoatGearInfoDataAsset* DataAsset, const struct FGameplayTag& Context, class AGGPlayerController* OptionalPC);
	bool UnlockMiniGame(class UGGPlayerGameDataAsset* GameDataAsset);
	bool UnlockInstinctPack(class UGGInstinctPackDataAsset* PackToUnlock, bool* bOutFirstPack, const struct FGameplayTag& Context);
	bool UnlockGear(class UGGGoatGearInfoDataAsset* GearDataAsset, const struct FGameplayTag& GearUnlockContext, class AGGPlayerController* OptionalPC);
	bool SpendTokens(int32 TokenAmount, enum class EResourceSpendType SpendType, const class FString& SpendActionID, const class FString& SpendSource);
	bool SaveGearPreset(TArray<class FString>& AssetIDs, int32 Slot);
	void RemoveFromUnread(const class FString& ID);
	void OnQuestTierCompleted(class AGGQuestBase* Quest, struct FQuestTier& Tier);
	void OnQuestCompleted(class AGGQuestBase* Quest, class AGGPlayerState* OptionalPlayerState);
	void OnQuestCollectionMilestoneReached(class AGGQuestBase* Quest, struct FQuestTier& Milestone);
	TArray<class FString> LoadGearPreset(int32 Slot);
	bool IsMiniGameUnlocked(class UGGPlayerGameDataAsset* GameDataAsset);
	bool IsGearUnlockedInStoreDataAsset(class UGGGoatGearInfoDataAsset* DataAsset);
	bool IsGearUnlockedDataAsset(class UGGGoatGearInfoDataAsset* DataAsset);
	bool IsGearUnknown(class UGGGoatGearInfoDataAsset* DataAsset);
	bool HasUnlockedInstinctPack();
	bool HasGearInSlot(enum class EGearSlot InSlot);
	TArray<class UGGGoatGearInfoDataAsset*> GetUnlockedGear(enum class EGearSlot Slot, bool bExcludeFur, bool bExcludeHorns, bool bExcludeAltGoat, bool bExcludeDefault);
	int32 GetTokens();
	class UGGGoatGearInfoDataAsset* GetRandomGearFromSlot(enum class EGearSlot InSlot, class UGGAlternativeGoatDataAsset* AlternativeGoat, bool bRandomStyle);
	class UGGGoatGearInfoDataAsset* GetRandomGearFromListStatic(const TArray<class UGGGoatGearInfoDataAsset*>& GearList);
	class UGGGoatGearInfoDataAsset* GetRandomGearFromList(const TArray<class UGGGoatGearInfoDataAsset*>& GearList, class UGGAlternativeGoatDataAsset* AlternativeGoat);
	int32 GetNumInstinctPacksUnlocked(bool bCountTutorial);
	void GetNumInstinctPacks(int32* Total, int32* Unlocked, bool bCountTutorial);
	TArray<class UGGGoatGearInfoDataAsset*> GetLibrary();
	bool GetIsUnreadObject(class UObject* Object);
	bool GetIsUnread(const class FString& ID);
	class UGGGoatGearInfoDataAsset* GetGearAssetFromID(const class FString& ID);
	TArray<class UGGGoatGearInfoDataAsset*> GetAGGoatGearInfoDataAssets();
	bool FilterCanAfford(class UObject* Target, class UGGGoatGearInfoDataAsset* Obj, bool bReverse);
	bool FilterByPurchasable(class UObject* Target, class UGGGoatGearInfoDataAsset* Obj, bool bReverse);
	bool ClearGearPreset(int32 Slot);
	bool CanSpendTokens(int32 Amount);
	bool BuyGear(class UGGGoatGearInfoDataAsset* DataAsset);
	void AddToUnread(const class FString& ID);
	bool AcquireTokens(int32 TokenAmount, enum class EResourceAcquisitionType AcquisitionType, const class FString& AcquisitionActionID, const class FString& AcquireSource);
};

// 0x0 (0x460 - 0x460)
// Class Goat2.GGInventoryUserWidget
class UGGInventoryUserWidget : public UGGNotificationContainerWidget
{
public:

	static class UClass* StaticClass();
	static class UGGInventoryUserWidget* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGItemDescriptionWidgetInterface
class IGGItemDescriptionWidgetInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IGGItemDescriptionWidgetInterface* GetDefaultObj();

	void SetDescription(class FText& Text);
};

// 0x8 (0x590 - 0x588)
// Class Goat2.GGJockeySaddleComponent
class UGGJockeySaddleComponent : public UStaticMeshComponent
{
public:
	uint8                                        Pad_20EB[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGJockeySaddleComponent* GetDefaultObj();

};

// 0x20 (0x50 - 0x30)
// Class Goat2.GGJumpModifierDataAsset
class UGGJumpModifierDataAsset : public UDataAsset
{
public:
	bool                                         bPreventRagdollOnLanding;                          // 0x30(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPreventTripleJumpModifier;                        // 0x31(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20ED[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        JumpZVelocity;                                     // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       JumpParticle;                                      // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       TrailingParticle;                                  // 0x40(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            JumpSound;                                         // 0x48(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGJumpModifierDataAsset* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Goat2.GGJumpModifierAssetUserData
class UGGJumpModifierAssetUserData : public UAssetUserData
{
public:
	class UGGJumpModifierDataAsset*              DataAsset;                                         // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGJumpModifierAssetUserData* GetDefaultObj();

};

// 0xD0 (0x3F0 - 0x320)
// Class Goat2.GGPopupUserWidget
class UGGPopupUserWidget : public UGGMenuComponentUserWidget
{
public:
	uint8                                        Pad_20F2[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ID;                                                // 0x328(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPopupDataRow                         Data;                                              // 0x338(0x90)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class AGGPlayerController*                   PopupOwner;                                        // 0x3C8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FDelegateProperty_                           ResponseDelegate;                                  // 0x3D0(0x10)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_20F3[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGPopupUserWidget* GetDefaultObj();

	bool SetImageFromIconSet(class FName IconSetName);
	bool RequiresUserInputToDismiss();
	bool RequiresUserInputToCancel();
	void RegisterButton(class UGGUserWidget* ButtonWidget);
	void OnSetLabels(class FText& Title, class FText& Body);
	void OnSetImageURL(const class FString& ImageURL);
	void OnSetImage(struct FSlateBrush& Brush);
	void OnCreatedButton(struct FPopupButton& Button);
	bool IsTopMostPopup();
	void ButtonInteracted(const class FString& InID, enum class EPopupResponse InResponse);
};

// 0xB0 (0x4A0 - 0x3F0)
// Class Goat2.GGKeyRebindPopupUserWidget
class UGGKeyRebindPopupUserWidget : public UGGPopupUserWidget
{
public:
	class UGGRichTextBlock*                      PopupTitleLabel;                                   // 0x3F0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGRichTextBlock*                      PopupBodyLabel;                                    // 0x3F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGRichTextBlock*                      CollisionDetectedText;                             // 0x400(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USizeBox*                              PopupBodySizeBox;                                  // 0x408(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                        ButtonContainer;                                   // 0x410(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGRichTextBlock*                      PressButtonToRebindText;                           // 0x418(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGButtonUserWidget*                   ChangeBindingButton;                               // 0x420(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGButtonUserWidget*                   CancelButton;                                      // 0x428(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGButtonUserWidget*                   KeepButton;                                        // 0x430(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGButtonUserWidget*                   RemoveButton;                                      // 0x438(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSet<struct FKey>                            EscapeKeys;                                        // 0x440(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class UGGOptionInputUserWidget*              OwningInputUserWidget;                             // 0x490(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_20F8[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGKeyRebindPopupUserWidget* GetDefaultObj();

	void OnButtonInteracted(class UGGUserWidget* InWidget, const struct FPointerEvent& InPointerEvent, const struct FKeyEvent& InKeyEvent);
	class UGGButtonUserWidget* CreateButtonUserWidget(struct FPopupButton& Button);
};

// 0x8 (0x238 - 0x230)
// Class Goat2.GGLadderActor
class AGGLadderActor : public AActor
{
public:
	class UGGLadderComponent*                    LadderComponent;                                   // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AGGLadderActor* GetDefaultObj();

};

// 0x28 (0x4B0 - 0x488)
// Class Goat2.GGLadderComponent
class UGGLadderComponent : public UBoxComponent
{
public:
	class UBillboardComponent*                   LadderBillboard;                                   // 0x488(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCenterPlayerWhenClimbing;                         // 0x490(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20FB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AGGGoat*>                       GoatsInVolume;                                     // 0x498(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_20FC[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGLadderComponent* GetDefaultObj();

	void OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGLatestInstigatorInterface
class IGGLatestInstigatorInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IGGLatestInstigatorInterface* GetDefaultObj();

	void SetLatestInstigator(class APawn* InInstigator, const struct FGameplayTag& Interaction, float ClearAfter, bool bUnragdollReset);
	struct FLatestInstigator GetLatestInstigatorStruct();
	class APawn* GetLatestInstigator(struct FGameplayTag* OutInteractionType);
};

// 0x8 (0x240 - 0x238)
// Class Goat2.GGLevelScriptActor
class AGGLevelScriptActor : public ALevelScriptActor
{
public:
	bool                                         bHasInitLoadingScreen;                             // 0x238(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2103[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGLevelScriptActor* GetDefaultObj();

	void TeleportPawn(class APawn* CalledFromPawn, int32 Index);
	void LoadingScreenTick(float DeltaTime);
	void InitLoadingScreen_BP();
};

// 0x50 (0x310 - 0x2C0)
// Class Goat2.GGLevelSequenceActor
class AGGLevelSequenceActor : public ALevelSequenceActor
{
public:
	bool                                         bUseSignificance;                                  // 0x2C0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2108[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class AActor>                 SignificanceLocationActor;                         // 0x2C8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SignificanceRange;                                 // 0x2F0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2109[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FLevelSequenceSignificanceReaction> SignificanceReactions;                             // 0x2F8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        LastTickTimestamp;                                 // 0x308(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_210A[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGLevelSequenceActor* GetDefaultObj();

	void UpdateSignificance(float OldSignificance, float NewSignificance);
	float GetSignificanceRange();
	struct FVector GetSignificanceLocation();
	class ULevelSequencePlayer* CreateGGLevelSequencePlayer(class UObject* WorldContextObject, bool UseSignificance, class ULevelSequence* InLevelSequence, const struct FMovieSceneSequencePlaybackSettings& Settings, class AGGLevelSequenceActor** OutActor);
};

// 0x88 (0xB8 - 0x30)
// Class Goat2.GGLevelSequenceCameraPrioritizer
class UGGLevelSequenceCameraPrioritizer : public UWorldSubsystem
{
public:
	TArray<struct FPathPrioMapping>              PrioritizedPaths;                                  // 0x30(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	uint8                                        Pad_210D[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundMix*                             LevelSequenceSoundMixModifier;                     // 0x80(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FSoftObjectPath                       IntroSequenceObjectPath;                           // 0x88(0x18)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FSoftObjectPath                       PostBossIntroSequenceObjectPath;                   // 0xA0(0x18)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGLevelSequenceCameraPrioritizer* GetDefaultObj();

	void UpdateFocusedSplitscreenPlayerIndex();
	void UpdateCameraCutStateForPrioritizedSequences(class UMovieSceneSequencePlayer* NewPlayer);
	bool IsSequenceAtIndexPlaying(int32 PlayerIndex);
};

// 0x10 (0x70 - 0x60)
// Class Goat2.GGLevelStreamOverrideSubsystem
class UGGLevelStreamOverrideSubsystem : public UGGWorldSubsystem
{
public:
	TArray<struct FOverrideLocations>            OverrideLocations;                                 // 0x60(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGLevelStreamOverrideSubsystem* GetDefaultObj();

	void RemoveOverrideLocations(class AActor* SourceActor, const struct FGameplayTag& SourceTag);
	void AddNewOverrideLocations(class AActor* SourceActor, const struct FGameplayTag& SourceTag, const struct FOverrideLocationsParameters& Parameters);
};

// 0x88 (0xD0 - 0x48)
// Class Goat2.GGLevelTravelSubsystem
class UGGLevelTravelSubsystem : public UGGGameInstanceSubsystem
{
public:
	struct FTravelSettings                       CurrentLevelTravelSettings;                        // 0x48(0x50)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_211B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnLevelStartLoadingScreenRemoved;                  // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_211C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UUserWidget*                           LevelStartLoadScreenWidgetRef;                     // 0xB8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_211D[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGLevelTravelSubsystem* GetDefaultObj();

	void TravelTo_World(TSoftObjectPtr<class UWorld> Destination, const class FString& Options, const struct FTravelSettings& TravelSettings);
	void TravelTo_String(const class FString& Destination, const class FString& Options, const struct FTravelSettings& TravelSettings);
	void RestartLevel(const struct FTravelSettings& TravelSettings);
	void PreLoadMap(const class FString& MapName);
	void PreClientTravel(const class FString& PendingURL, enum class ETravelType TravelType, bool bIsSeamless);
	void PostLoadMapWithWorld(class UWorld* World);
	void OpenLevel_World(TSoftObjectPtr<class UWorld> Destination, const class FString& Options, const struct FTravelSettings& TravelSettings);
	void OpenLevel_String(const class FString& Destination, const class FString& Options, const struct FTravelSettings& TravelSettings);
	bool IsTraveling();
	bool HasEveryoneFinishedLoading(bool bIncludeTravelingPlayers);
	void HandleDisconnect(class UWorld* InWorld, class UNetDriver* NetDriver);
	struct FTravelSettings GetCurrentLevelTravelSettings();
	bool CanInitiateRestart();
};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGLickableActorInterface
class IGGLickableActorInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IGGLickableActorInterface* GetDefaultObj();

	bool PrepareForLick();
	struct FVector GetLickInfo(const struct FVector& LickLocation, class FName* BoneName, struct FRotator* MeshLickRotation, struct FVector* RelativeLickLocation);
	class UMeshComponent* GetLickableActorMeshComponent();
	bool CanBeLicked();
	void ActorWasLicked(class AGGGoat* LickingGoat);
	void ActorStoppedBeingLicked(class AGGGoat* LickingGoat);
};

// 0x0 (0x230 - 0x230)
// Class Goat2.LightningArcManager
class ALightningArcManager : public AActor
{
public:

	static class UClass* StaticClass();
	static class ALightningArcManager* GetDefaultObj();

};

// 0x70 (0x2A0 - 0x230)
// Class Goat2.GGLightningArc
class AGGLightningArc : public AActor
{
public:
	bool                                         bIsArcActive;                                      // 0x230(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_211F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       ArcParticleSystem;                                 // 0x238(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ArcLengthParameterName;                            // 0x240(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            SoundEffect;                                       // 0x248(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ArcRadius;                                         // 0x250(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             TimeBetweenPulses;                                 // 0x254(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ShockDamage;                                       // 0x25C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CharacterImpulseForce;                             // 0x260(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ImpulseForce;                                      // 0x264(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ArcDistance;                                       // 0x268(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2120[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ALightningArcManager>      LightningManagerClass;                             // 0x270(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               StartPoint;                                        // 0x278(0xC)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDebugDrawSphereTrace;                             // 0x284(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2121[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UArrowComponent*                       ArcDirection;                                      // 0x288(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCapsuleComponent*                     PreviewCapsule;                                    // 0x290(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2122[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGLightningArc* GetDefaultObj();

	void SetArcActive(bool bShouldBeActive);
	void PulseArc();
	void MulticastPlayVFX(const struct FVector_NetQuantize& ImpactLocation);
};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGListElementSortingInterface
class IGGListElementSortingInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IGGListElementSortingInterface* GetDefaultObj();

	bool Sort(class UObject* InObjA, class UObject* InObjB, const struct FGameplayTag& InSortingTag, class UObject* Target);
	bool Filter(class UObject* InObj, const struct FGameplayTag& InFilterTag);
};

// 0x508 (0x870 - 0x368)
// Class Goat2.GGListView
class UGGListView : public UListView
{
public:
	bool                                         bWrapVerticalNavigation;                           // 0x368(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowScrolling;                                   // 0x369(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHandleGamepadAnalogScrolling;                     // 0x36A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHandleGamepadAnalogScrollingLeftStick;            // 0x36B(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAutoSelectOnAnalogScroll;                         // 0x36C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2127[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            BP_OnListViewEmpty;                                // 0x370(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScrollBarStyle                       ScrollBarStyle;                                    // 0x380(0x4D0)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	enum class EOrientation                      ScrollBarOrientation;                              // 0x850(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESlateVisibility                  ScrollBarVisibility;                               // 0x851(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2128[0x1E];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGListView* GetDefaultObj();

	float GetScrollDistanceRemaining();
	float GetScrollDistance();
	int32 GetDisplayedItemIndex(bool bFromTop, int32 OffsetCount, class UUserWidget** OutDisplayedWidget);
	float GetAnalogScrollInput();
};

// 0x10 (0x38 - 0x28)
// Class Goat2.GGListViewHeaderData
class UGGListViewHeaderData : public UObject
{
public:
	uint8                                        Pad_2129[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          HeaderTag;                                         // 0x30(0x8)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGListViewHeaderData* GetDefaultObj();

};

// 0x28 (0x518 - 0x4F0)
// Class Goat2.GGLoadingScreen
class UGGLoadingScreen : public UGGMenuUserWidget
{
public:
	class UDataTable*                            LoadingScreenHintDataTable;                        // 0x4F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FDataTableRowHandle>           DefaultLoadingScreenHintRows;                      // 0x4F8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bListenToPostLoadMapCallback;                      // 0x508(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_212A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MobileRoundedEdgePaddingPercentage;                // 0x50C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_212B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGLoadingScreen* GetDefaultObj();

	void OnPostLoadMapWithWorld(class UWorld* World);
	void OnPostLoadMap(class UWorld* World);
	struct FLoadingScreenHint GetRandomLoadingScreenHintFromRows(TArray<struct FDataTableRowHandle>& Hints);
	struct FLoadingScreenHint GetRandomDefaultLoadingScreenHint();
	class FText GetHintDescriptionFromHint(struct FLoadingScreenHint& Hint);
	float CalculateMobilePadding();
};

// 0x1A0 (0x250 - 0xB0)
// Class Goat2.GGLoadingScreenComponent
class UGGLoadingScreenComponent : public UActorComponent
{
public:
	float                                        LoadingNPCAppearanceDistance;                      // 0xB0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LoadingPhysicsActorsDistance;                      // 0xB4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LevelStartFadeInDuration;                          // 0xB8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2130[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundMix*                             LoadingSoundMixer;                                 // 0xC0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 EffectSourcesDuringLoadingScreen;                  // 0xC8(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 MenuEffectSourceTags;                              // 0xE8(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 WidgetTagsToHideInLoadingScreen;                   // 0x108(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSubclassOf<class UGGTeleportLoadingScreen>  LoadingScreenWidget;                               // 0x128(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2131[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnLoadingScreenRemoved;                            // 0x148(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FCurrentLoadingScreen                 CurrentLoadingScreen;                              // 0x158(0x70)(ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2132[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class ULevelStreaming*, float>          LevelStreamsStuckOnUnloaded;                       // 0x1D0(0x50)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_2133[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGPlayerController*                   OwnerPlayer;                                       // 0x228(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGGoat*                               OwnerPlayerGoat;                                   // 0x230(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGGGameInstance*                       GameInstance;                                      // 0x238(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGGLevelTravelSubsystem*               LevelTravelSubsystem;                              // 0x240(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2134[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGLoadingScreenComponent* GetDefaultObj();

	void StartLoadingScreen_TargetLocation(const struct FVector& TargetLocation, const struct FLoadingScreenParameters& Parameters);
	void StartLoadingScreen_Duration(float Duration, const struct FLoadingScreenParameters& Parameters);
	void ServerFinishedLevelStart();
	void RemoveLoadingScreen(enum class ERemovalReason RemovalReason, bool bForceDisableFadeIn);
	void OnLevelRemoved(class ULevel* Level, class UWorld* World);
	void OnLevelAdded(class ULevel* Level, class UWorld* World);
	bool InLoadingScreen();
	bool InLevelStartLoadingScreen();
	bool HasFinishedLoading();
	bool HasFinishedLevelStart();
	enum class ELoadingScreenType GetCurrentLoadingScreenType();
	void ClientStartLoadingScreen_TargetLocation(const struct FVector& TargetLocation, const struct FLoadingScreenParameters& Parameters);
	void ClientStartLoadingScreen_Duration(float Duration, const struct FLoadingScreenParameters& Parameters);
	void ClientRemoveLoadingScreen(enum class ERemovalReason RemovalReason, bool bForceDisableFadeIn);
};

// 0x120 (0x638 - 0x518)
// Class Goat2.GGLoadingScreenMobile
class UGGLoadingScreenMobile : public UGGLoadingScreen
{
public:
	bool                                         IsCompilingShaderCache;                            // 0x518(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_213F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                DebugString;                                       // 0x520(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        TimeSpentLoading;                                  // 0x530(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        TimeIncreasePerTimeout;                            // 0x534(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        TimeBeforeFirstTimeout;                            // 0x538(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2141[0xFC];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGLoadingScreenMobile* GetDefaultObj();

	int32 TotalNumShaderTasks();
	void SkipDownloadingPackages();
	void RefreshProgressText();
	int32 NumPrecompilesRemaining();
	void LogLoadingEvent(const class FString& Step, const class FString& Package, int32 LoadingTime);
	int32 GetTotalPacks();
	int32 GetTotalBytesToDownload();
	int32 GetRemainingBytesToDownload();
	int32 GetCurrentAssetPackNumber();
	void FetchAssetPackStatus();
	void FetchAssetPackCallback(const class FString& AssetPack, enum class EAssetPackState Status, int64 DownloadedBytes, int64 TotalBytes);
	void FailedToFetchPackage();
	void FailedToDownloadPackage();
	void DownloadAndLoadAssetPacks();
	void AssetPackCallback(const class FString& AssetPack, enum class EAssetPackState Status, int64 DownloadedBytes, int64 TotalBytes);
};

// 0x78 (0xA8 - 0x30)
// Class Goat2.GGLoadNPCAppearance
class UGGLoadNPCAppearance : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_            Finished;                                          // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2142[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UObject*>                       TemporaryReferences;                               // 0x48(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2143[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UDataTable*                            HeadsTable;                                        // 0x80(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDataTable*                            HairsTable;                                        // 0x88(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDataTable*                            UpperBodiesTable;                                  // 0x90(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDataTable*                            LowerBodiesTable;                                  // 0x98(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDataTable*                            AccessoriesTable;                                  // 0xA0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGLoadNPCAppearance* GetDefaultObj();

	class UGGLoadNPCAppearance* LoadNPCAppearance(class UObject* WorldContextObject, TArray<class FString>& NPCAppearance);
	void AppearanceLoaded();
};

// 0x2258 (0x24B0 - 0x258)
// Class Goat2.GGLocalPlayer
class UGGLocalPlayer : public ULocalPlayer
{
public:
	uint8                                        Pad_2144[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGGControlsSettings                   ControlsSettings;                                  // 0x260(0x12E0)(ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FGGAccessibilitySettings              AccessibilitySettings;                             // 0x1540(0xF20)(ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2145[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGLocalPlayer* GetDefaultObj();

};

// 0x0 (0xA10 - 0xA10)
// Class Goat2.GGLocomotionTestCharacter
class AGGLocomotionTestCharacter : public AGGCharacter
{
public:

	static class UClass* StaticClass();
	static class AGGLocomotionTestCharacter* GetDefaultObj();

};

// 0x58 (0x2B8 - 0x260)
// Class Goat2.GGMapAreaInfoWidget
class UGGMapAreaInfoWidget : public UUserWidget
{
public:
	class UGGMapUserWidget*                      MapWidget;                                         // 0x260(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, struct FMapAreaStat>     CurrentAreaInfo;                                   // 0x268(0x50)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGMapAreaInfoWidget* GetDefaultObj();

	void UpdateMapAreaStatsForContextActor(class AActor* AreaInfoContextActor);
	void UpdateCountText(int32 Completed, int32 Total, class UTextBlock* TextBlock);
	void SetMapWidget(class UGGMapUserWidget* InMapWidget);
	void OnGetMapAreaStatsForContextActorBP(class AActor* AreaInfoContextActor, TArray<class AActor*>& RadarActors);
	void OnFogOverlayHovered(class AActor* AreaInfoContextActor);
};

// 0x18 (0x278 - 0x260)
// Class Goat2.GGMapDetailsPanelUserWidget
class UGGMapDetailsPanelUserWidget : public UUserWidget
{
public:
	FMulticastInlineDelegateProperty_            OnTeleportProgressUpdated;                         // 0x260(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        CurrentTimeHeld;                                   // 0x270(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TimeToFinish;                                      // 0x274(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGGMapDetailsPanelUserWidget* GetDefaultObj();

	void UpdateSelectedActor(class AActor* InActor, class UGGMapMarkerUserWidget* MapMarkerUserWidget);
};

// 0x30 (0x440 - 0x410)
// Class Goat2.GGMapMarkerUserWidget
class UGGMapMarkerUserWidget : public UGGRadarPointUserWidgetBase
{
public:
	class FText                                  MarkerDescription;                                 // 0x410(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                        DetailsPanelOffsetY;                               // 0x428(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanTeleport;                                      // 0x42C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_214E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWidgetAnimation*                      HoverAnim;                                         // 0x430(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      RevealAnim;                                        // 0x438(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGMapMarkerUserWidget* GetDefaultObj();

	bool OnMarkerInteractedWith(bool bHold);
	class FText GetMarkerDescription();
	class FText GetCurrentWaypointHint();
};

// 0x18 (0x518 - 0x500)
// Class Goat2.GGMapMenuTabUserWidget
class UGGMapMenuTabUserWidget : public UGGMenuTabUserWidget
{
public:
	bool                                         bLegendShowing;                                    // 0x500(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2150[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGMapUserWidget*                      MapUserWidget;                                     // 0x508(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGMapAreaInfoWidget*                  MapAreaInfoWidget;                                 // 0x510(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGMapMenuTabUserWidget* GetDefaultObj();

	void OnToggleMapLegend();
};

// 0x220 (0x598 - 0x378)
// Class Goat2.GGMapUserWidget
class UGGMapUserWidget : public UGGRadarUserWidgetBase
{
public:
	class USizeBox*                              MapContainer;                                      // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPanelWidget*                          MapZoomCanvas;                                     // 0x380(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGOverlayLayers*                      WidgetLayers;                                      // 0x388(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGTiledMinimapWidget*                 TiledMapBackground;                                // 0x390(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                MapCrosshair;                                      // 0x398(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOverlay*                              DetailsOverlay;                                    // 0x3A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGMapDetailsPanelUserWidget*          MapDetailsPanelWidget;                             // 0x3A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FUnSynchronizedTowerOverlay>   TowerOverlays;                                     // 0x3B0(0x10)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UPanelWidget*                          InfoWidget;                                        // 0x3C0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HightlightedMarkerTolerance;                       // 0x3C8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HightlightedMarkerToleranceMobile;                 // 0x3CC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRadarWaypointsEnabled;                            // 0x3D0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_216C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MarkerScaleGlobal;                                 // 0x3D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartingZoom;                                      // 0x3D8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZoomIntervalMouseWheel;                            // 0x3DC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZoomIntervalMobilePinch;                           // 0x3E0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_216D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           ZoomIntervalMouseWheelCurve;                       // 0x3E8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZoomInterpSpeed;                                   // 0x3F0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_216E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           ZoomInterpSpeedCurve;                              // 0x3F8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInertialMapMovementEnabled;                       // 0x400(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_216F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxOutsideLimitsSpeed;                             // 0x404(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxOutsideLimitsMaxDist;                           // 0x408(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GamepadMapSpeed;                                   // 0x40C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GamepadCurveAcceleration;                          // 0x410(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GamepadCurveDeceleration;                          // 0x414(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           GamepadSpeedCurve;                                 // 0x418(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RevealAnimInitialDelay;                            // 0x420(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RevealAnimDelay;                                   // 0x424(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GamepadMapSpeedHighlightModifier;                  // 0x428(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GamepadZoomSpeed;                                  // 0x42C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           GamepadZoomSpeedCurve;                             // 0x430(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GamepadWidgetFocusSpeed;                           // 0x438(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GamepadDeadZone;                                   // 0x43C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZoomMinLimit;                                      // 0x440(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZoomMaxLimit;                                      // 0x444(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             BaseMapLimits;                                     // 0x448(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WaypointPlacementDistanceThreshold;                // 0x450(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WaypointPlacementTimeThreshold;                    // 0x454(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InteractHoldInputTimeThreshold;                    // 0x458(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             ZoomSoundPitchOutputRange;                         // 0x45C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2171[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                HoveredAreaContextActor;                           // 0x480(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InteractButtonDownTimestamp;                       // 0x488(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2172[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FRadarWidgetData>              HighlightedMapMarkers;                             // 0x490(0x10)(ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FVector2D                             StartingMapTranslation;                            // 0x4A0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             TargetMapTranslation;                              // 0x4A8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             CurrentScaleTransform;                             // 0x4B0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentGamepadCurveSpeed;                          // 0x4B8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FBox2D                                TranslationLimits;                                 // 0x4BC(0x14)(ZeroConstructor, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector2D                             CachedTranslationLimitsScale;                      // 0x4D0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             MouseDownLocation;                                 // 0x4D8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MouseDownTimestamp;                                // 0x4E0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TargetZoom;                                        // 0x4E4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LastZoomAnalogValue;                               // 0x4E8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2173[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnFogOverlayHovered;                               // 0x4F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UGGMapMarkerUserWidget*                CurrentHighlightedMapMarker;                       // 0x500(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2174[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bInvalidateNextFrame;                              // 0x50B(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2175[0x3C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bDidAnalogueMovementThisFrame;                     // 0x548(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bDidAnalogueMovementLastFrame;                     // 0x549(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2176[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGMinimapSubsystem*                   MinimapSubsystem;                                  // 0x550(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FRadarWidgetData>              WidgetsWaitingForReveal;                           // 0x558(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2177[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGMapUserWidget* GetDefaultObj();

	bool UpdateWaypoint();
	void UpdateInfoWidget(class AActor* RadarActor, class UGGMapMarkerUserWidget* MapMarkerUserWidget);
	bool UpdateInertialMovement(float DeltaTime);
	void UpdateFogOverlays();
	void UnfreezeMap();
	void StopDragging();
	void StartDragging();
	bool ShouldPlaceWaypoint(const struct FVector2D& MousePos);
	void SetZoomLevel(float Zoom);
	void SetOverlayButtonHovered(int32 OverlayIndex, bool bHovered);
	void RevealNewMarkers();
	void RefreshInfoWidget();
	void PlaceWaypointOnMapPos(const struct FVector2D& MapPos);
	void OnOverlayButtonUnHovered();
	void OnOverlayButtonReleased();
	void OnOverlayButtonPressed();
	void OnOverlayButtonMouseMoved(const struct FVector2D& ScreenSpaceTouchPosition);
	bool IsMapPointNearCursor(const struct FVector2D& MapPosition, float Tolerance);
	bool IsMapPointNearCenter(const struct FVector2D& MapPosition, float Tolerance);
	bool IsMapPointNearActiveWaypoint(struct FVector2D& MapPosition, float Tolerance);
	bool IsDragging();
	struct FVector GetWorldPositionFromMapPosition(const struct FVector2D& MapPosition);
	TArray<class UObject*> GetNewMarkerObjects();
	struct FVector2D GetMapPositionFromWorldPosition(const struct FVector& WorldPosition);
	struct FVector2D GetMapPositionFromViewportPosition(const struct FVector2D& ViewportPosition);
	struct FVector2D GetMapPositionFromContainerPosition(const struct FVector2D& MapPosition);
	struct FVector2D GetMapOffsetFromWorldOffset(const struct FVector2D& WorldOffset);
	class UGGMapMarkerUserWidget* GetMapMarkerNearCursor(const struct FVector2D& MapPosition, float Tolerance);
	struct FVector2D GetGamepadPositionOnMap();
	float GetCurrentZoomLevel();
	struct FVector2D GetCurrentWidgetRenderScale();
	struct FVector2D GetCurrentMapTranslation();
	struct FVector2D GetCurrentMapPosition();
	struct FVector2D GetContainerPositionFromMapPosition(const struct FVector2D& MapPosition, bool bLimitToContainer);
	void FreezeMap(bool bPermanent);
	void CenterWithContext(class AActor* ContextActor, float ZoomLevel);
	void CenterMapOnPlayer();
	void CenterMapOnObjects(const TArray<class UObject*>& Objects, bool bIgnoreVisibility, float ZoomLevel);
	bool CenterMapOnObject(class UObject* Object, bool bIgnoreVisibility, float ZoomLevel);
};

// 0xA0 (0x150 - 0xB0)
// Class Goat2.GGMenuComponent
class UGGMenuComponent : public UActorComponent
{
public:
	TSubclassOf<class UGGPopupUserWidget>        DefaultPopupWidgetClass;                           // 0xB0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGGPopupUserWidget>        SelectableTextPopupWidgetClass;                    // 0xB8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGGPopupUserWidget>        CriticalErrorPopupWidgetClass;                     // 0xC0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            PopupDataTable;                                    // 0xC8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNavigationContextHandled;                        // 0xD0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRemovedContextHandled;                           // 0xE0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        MenuHoldThreshold;                                 // 0xF0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2188[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGPlayerController*                   OwningController;                                  // 0x108(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FMenuNavigationContextContainer> MenuNavigationContexts;                            // 0x110(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2189[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UGGPopupUserWidget*>            ActivePopups;                                      // 0x128(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_218A[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UInputComponent*                       PopupInputComponent;                               // 0x148(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGGMenuComponent* GetDefaultObj();

	bool ResolvePopup(const class FString& ID, enum class EPopupResponse Response, const class FString& ButtonID);
	bool RemovePopup(const class FString& ID, enum class EPopupResponse Response);
	bool RemoveMenuContext(const struct FGameplayTag& MenuTag, const struct FMenuNavigationContext& Context);
	void PauseMenuUp();
	void PauseMenuDown();
	void OnQuestCompleted(class AGGQuestBase* Quest, class AGGPlayerState* OptionalPlayerState);
	void OnInventoryUnlockedStore(class UDataAsset* Asset, const struct FGameplayTag& Context, class AGGPlayerController* OptionalPC);
	void OnInventoryUnlocked(class UDataAsset* Asset, const struct FGameplayTag& Context, class AGGPlayerController* OptionalPC);
	void OnInstinctPackUnlocked(class UGGInstinctPackDataAsset* DataAsset, const struct FGameplayTag& Context);
	void Mobile_PauseMenuUp();
	void Mobile_PauseMenuDown();
	bool HasActivePopup();
	bool GetCurrentNavigationContext(const struct FGameplayTag& MenuID, struct FGameplayTag* OutMenuTag, struct FMenuNavigationContextContainer* OutContext, bool bExcludeHold);
	bool CreatePopupCustom(const class FString& ID, const struct FPopupDataRow& Data, FDelegateProperty_ Event, class UGGPopupUserWidget** OutWidget);
	bool CreatePopup(const class FString& ID, FDelegateProperty_ Event, class UGGPopupUserWidget** OutWidget);
	bool AddMenuContext(const struct FGameplayTag& MenuTag, const struct FMenuNavigationContext& Context, int32 Priority, float Duration, bool bHold);
};

// 0xE0 (0x110 - 0x30)
// Class Goat2.GGMenuDataAsset
class UGGMenuDataAsset : public UDataAsset
{
public:
	struct FGameplayTag                          ID;                                                // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 SupportedChildIDs;                                 // 0x38(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  MenuName;                                          // 0x58(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UTexture2D*                            TabIcon;                                           // 0x70(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ActionBinding;                                     // 0x78(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 ExcludedTagsForFocus;                              // 0x80(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FString                                UnreadID;                                          // 0xA0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        AdditionalUnreadIDs;                               // 0xB0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UGGUserWidget>           MenuClass;                                         // 0xC0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UGGUserWidget>           MenuClass_Mobile;                                  // 0xE8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGMenuDataAsset* GetDefaultObj();

};

// 0x0 (0xCE8 - 0xCE8)
// Class Goat2.GGMenuPlayerController
class AGGMenuPlayerController : public AGGPlayerController
{
public:

	static class UClass* StaticClass();
	static class AGGMenuPlayerController* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGMenuWidgetInterface
class IGGMenuWidgetInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IGGMenuWidgetInterface* GetDefaultObj();

	void SetMenuObject(class UObject* Object);
	struct FGameplayTag GetMenuTag();
	class FString GetMenuObjectID();
	class UObject* GetMenuObject();
};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGMeshComponentInterface
class IGGMeshComponentInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IGGMeshComponentInterface* GetDefaultObj();

	bool ShouldDisplayNameOnRepel();
	void ComponentTakeDamage(float DamageAmount, struct FImpulseDamageEvent& ImpulseDamageEvent, class AController* EventInstigator, class AActor* DamageCauser);
	bool CanBecomePActorByGoatRagdoll();
	class AGGPhysicsActor_Base* BecomePhysicsActor(const struct FVector& Impulse);
};

// 0xB8 (0x2E8 - 0x230)
// Class Goat2.GGMicroEventBase
class AGGMicroEventBase : public AActor
{
public:
	int32                                        CompletionRadius;                                  // 0x230(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_219A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FQuestReward                          Reward;                                            // 0x238(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FString                                MicroEventIdentifier;                              // 0x268(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SplashNotificationTag;                             // 0x278(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  SplashNotificationTitle;                           // 0x280(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSet<class AGGPlayerController*>             LocalPlayersThatCompletedEventThisSession;         // 0x298(0x50)(Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AGGMicroEventBase* GetDefaultObj();

	void OnEventCompleted(class AGGPlayerController* CompletingPlayer);
	void CompleteEventForPlayer(class AGGPlayerController* CompletingPlayer);
	void CompleteEvent(class AGGPlayerController* CompletingPlayer);
};

// 0x0 (0xB0 - 0xB0)
// Class Goat2.GGMiniGamePlayerComp
class UGGMiniGamePlayerComp : public UActorComponent
{
public:

	static class UClass* StaticClass();
	static class UGGMiniGamePlayerComp* GetDefaultObj();

	class AGGGoat* GetOwnerGoat();
};

// 0x20 (0xD0 - 0xB0)
// Class Goat2.GGMiniGamePlayerComp_CarRace
class UGGMiniGamePlayerComp_CarRace : public UActorComponent
{
public:
	int32                                        NumberOfRoundsFinished;                            // 0xB0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumberOfTotalRounds;                               // 0xB4(0x4)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        LastCheckpointOverlapped;                          // 0xB8(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21A4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGPlayerGame_Race_CheckpointPath*     CheckpointPath;                                    // 0xC0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AGGVehicle*                            OwnerVehicle;                                      // 0xC8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGGMiniGamePlayerComp_CarRace* GetDefaultObj();

	void SetCheckpointPath(class AGGPlayerGame_Race_CheckpointPath* NewCheckpointPath);
	void OnRep_CheckpointPath();
	void OnCheckpointCrossed(class AActor* CheckPoint, class AGGVehicle* Vehicle, int32 CheckPointNumber);
	bool HasFinishedAllRounds();
	bool HasCrossedAllCheckpoints();
	void HandleCompletedRound();
	class AActor* GetNextCheckpoint();
	void ClientHandleCompletedRound();
};

// 0x18 (0xC8 - 0xB0)
// Class Goat2.GGMiniGamePlayerComp_GoatKart
class UGGMiniGamePlayerComp_GoatKart : public UGGMiniGamePlayerComp
{
public:
	class UGGPlayerGameComp_GoatKart*            PlayerGameComp;                                    // 0xB0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AGGPlayerGame_Base*                    PlayerGame;                                        // 0xB8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CurrentCircuitPoint;                               // 0xC0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        LapsAroundCircuit;                                 // 0xC4(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGGMiniGamePlayerComp_GoatKart* GetDefaultObj();

	void ServerReplicateRaceState(int32 InCurrentCircuitPoint, int32 InLapsAroundCircuit);
	void PlayerPerformedLap();
	void PlayerCrossedPoint();
	bool HasPlayerFinishedRace();
	int32 GetPreviousCheckpoint();
	bool GetPositionInRace(int32* OutPosition, int32* OutParticipants);
};

// 0x10 (0xC0 - 0xB0)
// Class Goat2.GGMiniGamePlayerComp_Headsplat
class UGGMiniGamePlayerComp_Headsplat : public UGGMiniGamePlayerComp
{
public:
	float                                        AdditionalSizeMultiplier;                          // 0xB0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AdditionalDistanceFromGoatMultiplier;              // 0xB4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AdditionalStartDistanceFromGoatMultiplier;         // 0xB8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21A8[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGMiniGamePlayerComp_Headsplat* GetDefaultObj();

};

// 0x18 (0xC8 - 0xB0)
// Class Goat2.GGMiniGamePlayerComp_PropGolf
class UGGMiniGamePlayerComp_PropGolf : public UGGMiniGamePlayerComp
{
public:
	int32                                        ImpulseAngle;                                      // 0xB0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MinImpulse;                                        // 0xB4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MaxImpulse;                                        // 0xB8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ImpulseFluctuationMultiplier;                      // 0xBC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ImpulseMultiplier;                                 // 0xC0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_21AA[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGMiniGamePlayerComp_PropGolf* GetDefaultObj();

	float GetCurrentImpulseAlpha();
};

// 0x10 (0xC0 - 0xB0)
// Class Goat2.GGMiniGamePlayerComp_PropHunt
class UGGMiniGamePlayerComp_PropHunt : public UGGMiniGamePlayerComp
{
public:
	float                                        AdditionalPowerMultiplier;                         // 0xB0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AdditionalSizeMultiplier;                          // 0xB4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AdditionalDistanceFromGoatMultiplier;              // 0xB8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AdditionalStartDistanceFromGoatMultiplier;         // 0xBC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGGMiniGamePlayerComp_PropHunt* GetDefaultObj();

};

// 0x68 (0x98 - 0x30)
// Class Goat2.GGMinimapDataAsset
class UGGMinimapDataAsset : public UDataAsset
{
public:
	int32                                        NumberOfLODs;                                      // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MapSize;                                           // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InitialCaptureHeight;                              // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinimalCaptureHeight;                              // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             CaptureOffset;                                     // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CaptureRotation;                                   // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             WidgetOffset;                                      // 0x4C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21AC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UMaterialInterface>     FogOverlayMaterial;                                // 0x58(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Path;                                              // 0x80(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseMinimapTiles;                                  // 0x90(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGGTileOrientation                TileOrientation;                                   // 0x91(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21AD[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGMinimapDataAsset* GetDefaultObj();

	int32 FindNumberOfLODs();
};

// 0x58 (0xB8 - 0x60)
// Class Goat2.GGMinimapSubsystem
class UGGMinimapSubsystem : public UGGWorldSubsystem
{
public:
	int32                                        PreLoadTilesToThisLOD;                             // 0x60(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21B0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UGGMinimapDataAsset>    FallbackDataAsset;                                 // 0x68(0x28)(Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGMinimapDataAsset*                   MinimapDataAsset;                                  // 0x90(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_21B1[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UTexture2D*>                    PreLoadedTextures;                                 // 0xA8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGMinimapSubsystem* GetDefaultObj();

	bool HasMinimap();
	struct FVector2D GetWidgetOffset();
	int32 GetNumberOfLODs();
	float GetMapSize();
	class UGGMinimapDataAsset* GetDataAsset();
	float GetCaptureRotation();
	struct FVector2D GetCaptureOffset();
};

// 0x58 (0x288 - 0x230)
// Class Goat2.GGMirror
class AGGMirror : public AActor
{
public:
	int32                                        NumMipLevels;                                      // 0x230(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ScreenSizeAtHighestMip;                            // 0x234(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    MirrorMaterial;                                    // 0x238(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  TextureParameterName;                              // 0x240(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextureRenderTarget2D*                RenderTarget;                                      // 0x248(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneCaptureComponent2D*              SceneCaptureComponent;                             // 0x250(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  Mirror;                                            // 0x258(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              MirrorMaterialInstance;                            // 0x260(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UTextureRenderTarget2D*>        TextureTargets;                                    // 0x268(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_21B2[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGMirror* GetDefaultObj();

};

// 0x40 (0x68 - 0x28)
// Class Goat2.GGMobileOnlineManager
class UGGMobileOnlineManager : public UObject
{
public:
	uint8                                        Pad_21B3[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGMobileOnlineManager* GetDefaultObj();

};

// 0xC8 (0x2F8 - 0x230)
// Class Goat2.GGMover
class AGGMover : public AActor
{
public:
	uint8                                        Pad_21BE[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMeshComponent*                  MoverMesh;                                         // 0x248(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCanBeLicked;                                      // 0x250(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21BF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGGActorName                          CurrentActorName;                                  // 0x258(0x40)(Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGGNamedActorInfo                     DefaultActorNameInfo;                              // 0x298(0x28)(Protected, NativeAccessSpecifierProtected)
	class UDataTable*                            NameModifierTable;                                 // 0x2C0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bOverrideMeshNameInfo;                             // 0x2C8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21C0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGGNamedActorInfo                     ActorNameInfo;                                     // 0x2D0(0x28)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AGGMover* GetDefaultObj();

	bool SetGoatSimName(class FText& NewName);
	bool RemoveGoatSimNameModifier(const struct FGameplayTag& ModifierTag);
	bool PrepareForLick();
	void OnRep_CurrentActorName();
	void ObjectWasHeadbutted(class AGGGoat* HeadbuttingGoat);
	void MoverLicked(class AGGGoat* Goat);
	void MoverHeadbutted(class AGGGoat* Goat);
	void MoverDropped(class AGGGoat* Goat);
	struct FVector GetLickInfo(const struct FVector& LickLocation, class FName* BoneName, struct FRotator* MeshLickRotation, struct FVector* RelativeLickLocation);
	class UMeshComponent* GetLickableActorMeshComponent();
	bool GetHasActorName();
	class FText GetGoatSimName(bool WithStyling);
	class FText GetFullGoatSimName(bool WithStyling);
	bool CanBeLicked();
	bool CanBeHeadbutted(class AGGGoat* HeadbuttingGoat);
	bool AddGoatSimNameModifier(const struct FGameplayTag& ModifierTag, class FText& OverrideText);
	void ActorWasLicked(class AGGGoat* LickingGoat);
	void ActorStoppedBeingLicked(class AGGGoat* LickingGoat);
};

// 0x10 (0x240 - 0x230)
// Class Goat2.GGMultiNavModifier
class AGGMultiNavModifier : public AActor
{
public:
	class USceneComponent*                       RootComp;                                          // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBillboardComponent*                   Billboard;                                         // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AGGMultiNavModifier* GetDefaultObj();

};

// 0x50 (0x358 - 0x308)
// Class Goat2.GGMultipleOptionsOptionUserWidget
class UGGMultipleOptionsOptionUserWidget : public UGGUserWidget
{
public:
	class UButton*                               LeftArrowButton;                                   // 0x308(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UButton*                               RightArrowButton;                                  // 0x310(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            OptionLabel;                                       // 0x318(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UButton*                               ControllerFocus;                                   // 0x320(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGGSettingOption>              Options;                                           // 0x328(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bCanWrap;                                          // 0x338(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21C6[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnOptionIndexChanged;                              // 0x340(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int32                                        ActiveOption;                                      // 0x350(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21C7[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGMultipleOptionsOptionUserWidget* GetDefaultObj();

	void SetActiveOption(int32 OptionIndex);
	void RefreshTextLabel();
	void NavigateRight();
	int32 NavigateOptions(int32 CurrentIndex, int32 Direction, bool bWrap);
	void NavigateLeft();
	bool IsValidSelection();
	class FString GetValueAsString();
	float GetValueAsFloat();
	int32 GetNumAvailableOptions();
};

// 0x50 (0x80 - 0x30)
// Class Goat2.MusicTrack
class UMusicTrack : public UDataAsset
{
public:
	TSoftObjectPtr<class USoundBase>             Sound;                                             // 0x30(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundClass*                           SoundClass;                                        // 0x58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEmulateContinuousPlay;                            // 0x60(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPersistOnLevelTransition;                         // 0x61(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21C8[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                LastRequestLevel;                                  // 0x68(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TrackCrossFadeTime;                                // 0x78(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TrackPriority;                                     // 0x7C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UMusicTrack* GetDefaultObj();

};

// 0x88 (0xD0 - 0x48)
// Class Goat2.GGMusicManager
class UGGMusicManager : public UGGGameInstanceSubsystem
{
public:
	class UMusicTrack*                           SeamlessTravelTrack;                               // 0x48(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMusicTrack*>                   TrackStack;                                        // 0x50(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class UMusicTrack*                           CurrentlyPlayingTrack;                             // 0x60(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAudioComponent*                       ChannelA;                                          // 0x68(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAudioComponent*                       ChannelB;                                          // 0x70(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bFadeInReverse;                                    // 0x78(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_21CE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class UMusicTrack*, int32>              ContinuousTrackStartTimes;                         // 0x80(0x50)(NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGMusicManager* GetDefaultObj();

	void WithdrawMusicTrackRequest(class UObject* WorldContextObject, class UMusicTrack* TrackRequest);
	void RequestMusicTrack(class UObject* WorldContextObject, class UMusicTrack* TrackRequest);
	void RemoveStartTimeForContinuousTrack(class UMusicTrack* Track);
	void OnGoatAreaStateChange(class AGGGoat* Goat, const struct FGameplayTag& AreaTag);
	void OnCurrentLevelChanged(class UObject* WorldContextObject, const class FString& CurrentLevel, bool bIsTransitionLevel);
	void ClearNonPersistantTracks(const class FString& CurrentLevel);
};

// 0x28 (0x50 - 0x28)
// Class Goat2.GGNameAssetUserData
class UGGNameAssetUserData : public UAssetUserData
{
public:
	struct FGGNamedActorInfo                     NameInfo;                                          // 0x28(0x28)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGNameAssetUserData* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGNamedActorInterface
class IGGNamedActorInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IGGNamedActorInterface* GetDefaultObj();

	bool SetGoatSimName(class FText& NewName);
	bool RemoveGoatSimNameModifier(const struct FGameplayTag& ModifierTag);
	class FText GetInteractionText();
	bool GetHasActorName();
	class FText GetGoatSimName(bool WithStyling);
	class FText GetFullGoatSimName(bool WithStyling);
	bool AddGoatSimNameModifier(const struct FGameplayTag& ModifierTag, class FText& OverrideText);
};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGNamedActorStatics
class UGGNamedActorStatics : public UObject
{
public:

	static class UClass* StaticClass();
	static class UGGNamedActorStatics* GetDefaultObj();

};

// 0x58 (0x108 - 0xB0)
// Class Goat2.GGNeckRagdollComponent
class UGGNeckRagdollComponent : public UActorComponent
{
public:
	uint8                                        Pad_21DA[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        NeckRagdollBlendOutTime;                           // 0xC8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPreventMeshFromExploding;                         // 0xCC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21DB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MeshBoundsErrorFactor;                             // 0xD0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxBoneSpeed;                                      // 0xD4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21DC[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGGoat*                               OwnerGoat;                                         // 0xE0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USkeletalMeshComponent*                OwnerMeshComponent;                                // 0xE8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USkeletalMeshComponent*                OverlapTestMeshComponent;                          // 0xF0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_21DD[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGNeckRagdollComponent* GetDefaultObj();

	void ToRagdollEvent(class ULSCharacterMovementComponent* MovementComp, class ACharacter* RagdollingCharacter, struct FRagdollStateChangeSettings& StateChangeSettings);
	void OnAltGoatChanged(class AGGGoat* Goat, class UGGAlternativeGoatDataAsset* NewAltGoat);
	bool IsNeckRagdollActive();
};

// 0x10 (0x2E0 - 0x2D0)
// Class Goat2.GGNeedle
class AGGNeedle : public AGGPhysicsProjectile
{
public:
	uint8                                        Pad_21DF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGStiffBonesComponent*                HitStiffBonesComponent;                            // 0x2D8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AGGNeedle* GetDefaultObj();

	void OnAttachedNPCPooled(class AGGNPC* NPC, bool bWasPooled);
	void OnAttachedGoatAltGoatChanged(class AGGGoat* Goat, class UGGAlternativeGoatDataAsset* NewAltGoat);
};

// 0x128 (0x358 - 0x230)
// Class Goat2.GGNewsFeed
class AGGNewsFeed : public AActor
{
public:
	TArray<struct FFakeNews>                     FakeNews;                                          // 0x230(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_21E3[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPendingNewsRequest>           PendingNewsRequests;                               // 0x248(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FPendingNewsRequest>           PendingWebContentRequests;                         // 0x258(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class UGGAsyncTaskDownloadImages*            DownloadPreviewImagesTask;                         // 0x268(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bNewsEnabled;                                      // 0x270(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21E4[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                URLPattern_ThumbnailData;                          // 0x278(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                URLPattern_ThumbnailImages;                        // 0x288(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                URLPattern_News;                                   // 0x298(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                FallbackCulture;                                   // 0x2A8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  NewsFeedRequestFailedText;                         // 0x2B8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FString                                TagImageURL;                                       // 0x2D0(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                TagHeadline;                                       // 0x2E0(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                TagBody;                                           // 0x2F0(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                TagLinkName;                                       // 0x300(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                TagLinkURL;                                        // 0x310(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FNewsFeedMap>                  NewsFeedURLs;                                      // 0x320(0x10)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            OnNewsReceived;                                    // 0x330(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FParsedNews                           ParsedNews;                                        // 0x340(0x10)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	bool                                         bNewsReceivedSuccess;                              // 0x350(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21E5[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGNewsFeed* GetDefaultObj();

	void OnPreviewImagesDownloaded(const TArray<struct FDownloadedImage>& DownloadedImages);
	bool HasReceivedNewsResponse();
	class FString GetNewsPreviewText(struct FNewsPreviewEntry& PreviewData);
	struct FNewsPreviewEntry GetNewsPreviewDataBySlot(int32 NewsSlot, bool* bOutSuccess);
	struct FNewsPreviewEntry GetNewsPreviewDataByIndex(int32 NewsIndex, bool* bOutSuccess);
	class FString GetNewsFeedURL(int32 NewsSlot, enum class ENewsFeedURLTypes Type, const class FString& CultureOverride);
	class AGGNewsFeed* GetNewsFeedActor(class UObject* WorldContext, TSubclassOf<class AGGNewsFeed> ClassToSpawn);
};

// 0x10 (0x140 - 0x130)
// Class Goat2.GGNewsWidgetCache
class UGGNewsWidgetCache : public UOverlay
{
public:
	uint8                                        Pad_21E7[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGNewsWidgetCache* GetDefaultObj();

	bool CacheWidgets(const TArray<class UWidget*>& Widgets);
};

// 0x78 (0x128 - 0xB0)
// Class Goat2.GGNotificationDispatcher
class UGGNotificationDispatcher : public UActorComponent
{
public:
	TArray<struct FNotification>                 NotificationQueue;                                 // 0xB0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNotificationDispatched;                          // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNotificationAssignedToWidget;                    // 0xD0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNotificationRemovedFromWidget;                   // 0xE0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AGGPlayerController*                   OwningController;                                  // 0xF0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21FA[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UGGNotificationUserWidget*>     RegisteredNotificationWidgets;                     // 0x118(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGGNotificationDispatcher* GetDefaultObj();

	void RemoveNotificationDelay(const struct FGameplayTagContainer& Tags);
	void OnTokenAmountChanged(int32 Amount, const class FString& AcquisitionID, const class FString& AcquisitionSource);
	void OnPlayerWorldAreaEntered(class AGGGoat* Goat, const struct FGameplayTag& NewArea);
	void OnMiniGameUnlocked(class UGGPlayerGameDataAsset* DataAsset);
	void OnInventoryUnlockedStore(class UDataAsset* Asset, const struct FGameplayTag& Context, class AGGPlayerController* OptionalPC);
	void OnInventoryUnlocked(class UDataAsset* Asset, const struct FGameplayTag& Context, class AGGPlayerController* OptionalPC);
	void OnInteracted(class AActor* SourceActor, class AActor* TargetActor);
	bool IsNotificationIDCurrentNotification(const class FString& ID);
	void CreateNotificationExplicitBlueprint(const struct FNotification& Notification);
	void CreateNotificationBlueprint(const struct FGameplayTag& Tag, class FText Title, class FText Body, const class FString& ID, const struct FNotificationProperties& Properties);
	void ClearNotificationDelays();
	void AddNotificationDelay(const struct FGameplayTag& Tag, float Delay);
};

// 0x38 (0x498 - 0x460)
// Class Goat2.GGNotificationMultiWidget
class UGGNotificationMultiWidget : public UGGNotificationContainerWidget
{
public:
	bool                                         bSupportMultipleWidgetsInContainer;                // 0x460(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21FC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MultipleWidgetMaxAmount;                           // 0x464(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UUserWidget*>                   ActiveWidgets;                                     // 0x468(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_21FD[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGNotificationMultiWidget* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGNotificationWidgetInterface
class IGGNotificationWidgetInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IGGNotificationWidgetInterface* GetDefaultObj();

	void UpdateWidget(const struct FNotification& Notification);
	void ShowWidget(const struct FNotification& Notification);
	void SetParentNotificationWidget(class UGGNotificationUserWidget* Parent);
	void HideWidget();
	float GetWidgetDuration(const struct FNotification& Notification);
	float GetStartAnimationDuration(const struct FNotification& Notification);
	float GetEndAnimationDuration(const struct FNotification& Notification);
	void ClearWidget();
};

// 0x618 (0x1028 - 0xA10)
// Class Goat2.GGNPC
class AGGNPC : public AGGCharacter
{
public:
	class UCapsuleComponent*                     OverlapCapsule;                                    // 0xA10(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*              PassedOutParticleComp;                             // 0xA18(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGVoiceOverComponent*                 VoiceOverComponent;                                // 0xA20(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGNPCMovementComponent*               NPCMoveComponent;                                  // 0xA28(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBehaviorTree*                         BehaviorTree;                                      // 0xA30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NormalNetUpdateFrequency;                          // 0xA38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RagdollNetUpdateFrequency;                         // 0xA3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SignificanceManagerDistance;                       // 0xA40(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDestroyInsteadOfRespawnWhenFellOut;               // 0xA44(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ENPCType                          NPCType;                                           // 0xA45(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStartedAsEnvironmental;                           // 0xA46(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStartedAsSpecial;                                 // 0xA47(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStartedAsProfessional;                            // 0xA48(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bImportantEnvironmental;                           // 0xA49(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bImportantAnimal;                                  // 0xA4A(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasBehaviorOverride;                              // 0xA4B(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_223E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 NPCIdentifierTags;                                 // 0xA50(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTag                          CurrentArea;                                       // 0xA70(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bForceManagerRelevant;                             // 0xA78(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_223F[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bPlacedFromPool;                                   // 0xA7A(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2240[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnNPCPooledOrMoved;                                // 0xA80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNPCPlacedAtSpawner;                              // 0xA90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2242[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGVehicle*                            SpawnedIntoVehicle;                                // 0xAA8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2243[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EGender                           Gender;                                            // 0xAB1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanChangeMood;                                     // 0xAB2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2244[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EMoods>                    IgnoredMoods;                                      // 0xAB8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2245[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          StartledContext;                                   // 0xACC(0x8)(Edit, DisableEditOnTemplate, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RecentlyStartledTimestamp;                         // 0xAD4(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FRecentlyStarledBy>            RecentlyStartledBy;                                // 0xAD8(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2246[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FReactionCooldown>             ReactionCooldowns;                                 // 0xAF0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bCanProximityReact;                                // 0xB00(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2248[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 ValidReactTypes;                                   // 0xB08(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 IgnoredReactTypes;                                 // 0xB28(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 IgnoredStartleContexts;                            // 0xB48(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bCanFaint;                                         // 0xB68(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2249[0x17];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bCanInvestigate;                                   // 0xB80(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ENPCMaterialEffect                CurrentNPCMaterialEffect;                          // 0xB81(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_224A[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInterface*                    CurrentMeshMaterial;                               // 0xB88(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FMatElement>                   CurrentStatusEffectMaterials;                      // 0xB90(0x10)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    LocalMaterialOverride;                             // 0xBA0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMesh*                         ShellEffectMesh;                                   // 0xBA8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FWeightedElement_String>       TakeDamageNPCReactionWeights;                      // 0xBB0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        ReactionRadius;                                    // 0xBC0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPanicTypes                       TakeDamagePanicType;                               // 0xBC4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_224C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FStartleDetailsSettings               NPCHitStartleSettings;                             // 0xBC8(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                         bIsKnockedOut;                                     // 0xC18(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsPassedOut;                                      // 0xC19(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_224D[0xE];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bCanBeKnockedOut;                                  // 0xC28(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_224E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DamageBeforeKnockedOut;                            // 0xC2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         RagdollWhenKnockedOut;                             // 0xC30(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanPassOut;                                       // 0xC31(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPassOutOnRagdoll;                                 // 0xC32(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2250[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DamageBeforePassedOut;                             // 0xC34(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                PassedOutChancePerHit;                             // 0xC38(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	enum class ENPCMoveMode                      CurrentWalkMode;                                   // 0xC48(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2251[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        NPCStandupDelay;                                   // 0xC50(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MeshStationaryCheckValue;                          // 0xC54(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OtherCharacterVelocityToRagdoll;                   // 0xC58(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2252[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 NPCVoiceAreas;                                     // 0xC60(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	int32                                        HurtWhenRagdollChance;                             // 0xC80(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2253[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDataTable*                            NPCNameDataTable;                                  // 0xC88(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FDataTableRowHandle>           FeminineFirstNames;                                // 0xC90(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FDataTableRowHandle>           MasculineFirstNames;                               // 0xCA0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FDataTableRowHandle>           LastNames;                                         // 0xCB0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class FText                                  OrderOfNames;                                      // 0xCC0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FNPCNameIndexes                       ReplicatedNameIndexes;                             // 0xCD8(0x8)(Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2255[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAnimSequenceBase*>             BehaviorWalkCycleOverrides;                        // 0xCE8(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UAnimSequenceBase*>             BehaviorRunCycleOverrides;                         // 0xCF8(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPrivate)
	float                                        StationaryAnimStartWait;                           // 0xD08(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StationaryAnimStartWaitDev;                        // 0xD0C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       MovementBSOverride;                                // 0xD10(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FWeightedElement_AnimMontage>  Dances;                                            // 0xD18(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FWeightedElement_AnimMontage>  PositiveGreetings;                                 // 0xD28(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FWeightedElement_AnimMontage>  NegativeGreetings;                                 // 0xD38(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FWeightedElement_AnimMontage>  PositiveImpressed;                                 // 0xD48(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FWeightedElement_AnimMontage>  NegativeImpressed;                                 // 0xD58(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FWeightedElement_AnimMontage>  ElectrifiedAnimations;                             // 0xD68(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2256[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bDropAnimationActors;                              // 0xD80(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2257[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGGRandomPlayerSequenceEntry>  CustomStateAnimSeq;                                // 0xD88(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FHeadTurnState                        HeadTurnState;                                     // 0xD98(0x18)(Net, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2258[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAnimNotifyState_GGBlockTurning*> BlocksTurnAndLook;                                 // 0xDB8(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FLookAtOverride                       LookAtOverride;                                    // 0xDC8(0x18)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2259[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                PointAtTarget;                                     // 0xDF0(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanLookAt;                                        // 0xDF8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanRandomlyLookAtNPC;                             // 0xDF9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_225A[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ChanceToLookAtNPC;                                 // 0xDFC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanRandomlyLookAtGoat;                            // 0xE00(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_225B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ChanceToLookAtGoat;                                // 0xE04(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_225C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FNPCCollisionState                    CollisionState;                                    // 0xE0C(0x40)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnInstance, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_225D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FLostObject>                   LostObjects;                                       // 0xE50(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_225E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LostObjectForgetDistance;                          // 0xE64(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LostObjectForgetTime;                              // 0xE68(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FadeInMultiplier;                                  // 0xE6C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_225F[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FNPCAttackVariation                   DefaultAttack;                                     // 0xE88(0xA0)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FNPCAttackVariation>           AttackVariations;                                  // 0xF28(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         DebugDrawAttack;                                   // 0xF38(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2260[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnNPCAttackedActors;                               // 0xF40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNPCGrabbedCharacter;                             // 0xF50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNPCDroppedCharacter;                             // 0xF60(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FNPCGrabbedCharacter                  GrabbedCharacter;                                  // 0xF70(0x68)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditConst, RepNotify, Protected, NativeAccessSpecifierProtected)
	class APhysicsConstraintActor*               PhysConstraint;                                    // 0xFD8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class APhysicsConstraintActor>   PhysConstraintClass;                               // 0xFE0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          GrabbedCharacterMeshCollision;                     // 0xFE8(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FRecentlyGrabbedCharacter>     RecentlyGrabbedCharacters;                         // 0xFF0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2261[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ENPCAnimationStates               CurrentAnimState;                                  // 0x1008(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2262[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGAIController*                       GGController;                                      // 0x1010(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsPooled;                                          // 0x1018(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2263[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGNPCSpawner*                         NPCSpawner;                                        // 0x1020(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AGGNPC* GetDefaultObj();

	bool WasRecentlyStartledByContext(const struct FGameplayTag& Context, float HowRecently);
	bool WasRecentlyStartledByActorAndContext(class AActor* Actor, const struct FGameplayTag& Context, float HowRecently);
	bool WasRecentlyStartledByActor(class AActor* Actor, float HowRecently);
	bool WasRecentlyStartled(float HowRecently);
	void UpdateNPCMoveSpeed();
	void UpdateDrawDistance();
	void UpdateDebugInfo();
	void StopIdleState();
	void StopCurrentVoiceline();
	void StartInvestigation(const struct FGameplayTag& InvestigationType, class AActor* Actor, const struct FVector& Location);
	void StartIdleState(bool bResetAnimState, bool bStopMontages);
	void SetReactionOnCooldown(const struct FGameplayTag& ReactionTag, float CooldownLength);
	void SetRandomNPCName();
	void SetPassedOut(bool bAttemptToRagdoll);
	void SetOverlapCapsuleCollision(const struct FGameplayTag& CollisionProfile);
	void SetNPCWalkMode(enum class ENPCMoveMode NewMode);
	void SetNPCStandupDelayOverride(float StandupDelay);
	void SetNPCPropertyCollection(const struct FNPCPropertyCollection& InCollection);
	void SetNPCIdentifierTags(const struct FGameplayTagContainer& NewTags);
	void SetNPCDrawDistance(float NewDistance);
	void SetNPCCollisionProfiles(const struct FGameplayTag& CapsuleProfile, const struct FGameplayTag& MeshProfile, const struct FGameplayTag& OverlapCapsuleProfile);
	void SetNPCAnimationState(enum class ENPCAnimationStates NewState);
	void SetMood(enum class EMoods Mood, bool InjectEvenIfSame, bool BypassCanChange);
	void SetLookAtActorOverride(const struct FLookAtOverride& OverrideSettings);
	void SetGender(enum class EGender NewGender);
	void SetCustomStateAnimSequences(const TArray<struct FGGRandomPlayerSequenceEntry>& NewAnimStateSequences);
	void SetAvoidanceConsiderationRadius(float NewRadius);
	void ResetVoiceAreas();
	void ResetProximityReact();
	void ResetPassedOut();
	void ResetOverlapCapsuleCollision(bool bResetToDefault);
	void ResetNPCStandupDelayOverride();
	void ResetKnockedOut();
	void ResetInvestigation();
	void ResetForceMove();
	void ResetAvoidanceConsiderationRadius();
	void RemoveVoiceAreas(const struct FGameplayTagContainer& AreaTags);
	void RemoveVoiceArea(const struct FGameplayTag& AreaTag);
	void RemoveNPCIdentifierTag(const struct FGameplayTag& Tag);
	void RemoveLostObject(class AActor* LostActor);
	bool RecentlyGrabbedCharacter(class AGGCharacter* Character, float TimeToCheck);
	void PoolNPC();
	bool PlayVoiceOver(const struct FGameplayTag& VoiceOverType, bool Replicate, bool bCanInterruptCurrentLine, bool bCanBeStoppedByDamage);
	void OverlapCompPhysicsVolumeChanged(class APhysicsVolume* NewVolume);
	void OverlapBegin(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnSkeletalMeshSet(class USkeletalMesh* OldMesh, class USkeletalMesh* NewMesh);
	void OnRep_ReplicatedNameIndexes();
	void OnRep_NPCSpawner();
	void OnRep_IsPassedOut();
	void OnRep_GrabbedCharacter();
	void OnRep_GenderSet();
	void OnRep_CurrentStatusEffectMaterials();
	void OnRep_CurrentNPCMaterialEffect();
	void OnRep_CurrentMeshMaterial();
	void OnRep_CurrentAnimState();
	void OnGrabbedCharacterUnRagdoll(bool bRagdollOnGround, class ULSCharacterMovementComponent* MovementComp, class ACharacter* UnRagdolledCharacter, struct FRagdollStateChangeSettings& StateChangeSettings);
	void MulticastPlaySound(class USoundBase* SoundEffect, bool AttachedToNPC);
	void MulticastMoveFadeIn();
	bool IsStartled();
	bool IsReactionOnCooldown(const struct FGameplayTag& ReactionTag);
	bool IsNPCPooled();
	bool IsMoodIgnored(enum class EMoods Mood);
	bool IsLookAtBBValue();
	bool IsHumanoid();
	bool IsHeadTurnStateBlocked(enum class EHeadTurning State);
	bool IsCivilian();
	bool IsAnimal();
	bool InIdleState();
	bool InForceMoveTo();
	bool HasRecentlyInteractedWith(class AActor* InteractableActor, float CheckValue);
	bool HasNPCIdentifierTag(const struct FGameplayTag& Tag);
	bool HasLostObject(class AActor* TestAgainst, bool bAlsoCheckArray);
	bool HasLookAtOverride();
	bool HasGrabbedCharacter();
	void GrabCharacter(class AGGCharacter* Character, const class FString& ConstraintAttachSocket, const class FString& AttachBone, const class FString& GrabBone, enum class EGrabbedCharacterAnimationType AnimationType, const struct FRotator& AngularRotationOffset, const struct FVector& RelativeGoatPosition, const struct FVector& RelativeNPCPosition, float PreventUnragdollFor, bool bLockRotation);
	void GrabbedNPCPooledOrMoved(class AGGNPC* NPC, bool bWasPooled);
	void GrabbedCharacterRespawned(class AGGCharacter* OldCharacter, class AGGCharacter* NewCharacter);
	float GetTimeSinceMoodSet();
	struct FGameplayTag GetStartledContext();
	struct FGameplayTag GetProximityReactType();
	float GetNPCStandupDelayOverride();
	class AGGNPCSpawner* GetNPCSpawner();
	struct FNPCPropertyCollection GetNPCPropertyCollection();
	class UGGNPCMovementComponent* GetNPCMoveComponent();
	enum class ENPCAnimationStates GetNPCAnimationState();
	enum class EMoods GetMood();
	class AActor* GetLookAtActor();
	class UMaterialInterface* GetLocalMaterialOverride();
	struct FGameplayTag GetInvestigationType();
	enum class EHeadTurning GetHeadTurnState();
	struct FNPCGrabbedCharacter GetGrabbedCharacterStruct();
	enum class EGrabbedCharacterAnimationType GetGrabbedCharacterAnimationType();
	class AGGCharacter* GetGrabbedCharacter();
	class AGGAIController* GetGGController();
	TArray<struct FGGRandomPlayerSequenceEntry> GetCustomStateAnimSequences();
	enum class ENPCMoveMode GetCurrentWalkMode();
	struct FGameplayTag GetCurrentArea();
	void ForgetAllLostObjects();
	void ForceMoveTo(const struct FVector& TargetLocation, const struct FVector& LookAtLocation, float WaitAtTarget, bool bResetAnimState);
	void EmptyCustomStateAnimSequences();
	void DropCharacter(bool bSetMeshProfile);
	void ClearNPCIdentifierTags(bool bResetBackToDefaults);
	void ClearLookAt();
	void BPResetForPoolOrMove(bool ForPool);
	void BPNPCReturnedFromPool();
	void BPFadeIn();
	void BP_NPCSpawnedIntoTheWorld();
	void AttackedActors(TArray<class AActor*>& AttackedActors);
	void AttackAnimationsLoaded();
	void AnimNotifyTriggered(struct FGameplayTag& NotifyTag);
	void AddVoiceAreas(const struct FGameplayTagContainer& AreaTags);
	void AddVoiceArea(const struct FGameplayTag& AreaTag);
	void AddNPCIdentifierTags(const struct FGameplayTagContainer& NewTags);
	void AddNPCIdentifierTag(const struct FGameplayTag& Tag);
	void AddLostObject(const struct FLostObject& LostObject, bool bInsertAtStart);
};

// 0x68 (0x1090 - 0x1028)
// Class Goat2.GGNPC_Animal
class AGGNPC_Animal : public AGGNPC
{
public:
	class UBehaviorTree*                         DefaultLogicTree;                                  // 0x1028(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAnimalMaterialCollection>     DefaultMaterialVariations;                         // 0x1030(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FAnimalMaterialCollection             SelectedSoftMaterialCollection;                    // 0x1040(0x18)(Protected, NativeAccessSpecifierProtected)
	TArray<struct FMatElement>                   DefaultMaterials;                                  // 0x1058(0x10)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<struct FWeightedElement_AnimMontage>  IdleAnimations;                                    // 0x1068(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        WalkSpeed;                                         // 0x1078(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RunSpeed;                                          // 0x107C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AGGAIController_Animal*                AnimalController;                                  // 0x1080(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsGuardFromGear;                                  // 0x1088(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2269[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGNPC_Animal* GetDefaultObj();

	void StatusEffectMaterialSet(class UMaterialInterface* Material);
	void SoftMaterialsLoaded();
	void SetDefaultMaterials(const TArray<struct FMatElement>& NewDefault);
	void SelectNewBaseMaterialWithOverride(TArray<struct FAnimalMaterialCollection>& OverrideCollections);
	void SelectNewBaseMaterial();
	void PlayerColorMaterialSet(class UMaterialInterface* Material);
	void OnRep_DefaultMaterials();
	void NPCEffectMaterialSet(class UMaterialInterface* Material);
	void MeshMaterialSet(class UMaterialInterface* Material);
	class AGGAIController_Animal* GetAnimalController();
	void DefaultMaterialsSet(TArray<struct FMatElement>& Materials);
};

// 0x248 (0x1270 - 0x1028)
// Class Goat2.GGNPC_Humanoid
class AGGNPC_Humanoid : public AGGNPC
{
public:
	uint8                                        Pad_227E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGNPCAppearanceManager*               AppearanceManager;                                 // 0x1030(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                  Hair;                                              // 0x1038(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USkeletalMeshComponent*                UpperBody;                                         // 0x1040(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USkeletalMeshComponent*                LowerBody;                                         // 0x1048(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bGenerateAppearanceOnSpawn;                        // 0x1050(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_227F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          GenerateAppearanceWith;                            // 0x1054(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2280[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPredeterminedElement>         PredeterminedElements;                             // 0x1060(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bSetAppearanceToSetOnSpawn;                        // 0x1070(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2281[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                SpawnAppearanceSet;                                // 0x1078(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMoods                            CurrentMood;                                       // 0x1088(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2282[0xB];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MoodWhenDamagedDelay;                              // 0x1094(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bScaredWhenKnockedOut;                             // 0x1098(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2283[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FWeightedElement_Mood>         MoodChangeWhenDamaged;                             // 0x10A0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FWeightedElement_Mood>         MoodChangeWhenDamagedAsCivilian;                   // 0x10B0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         InjectMoodTrees;                                   // 0x10C0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2284[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FMoodTree>                     MoodTrees;                                         // 0x10C8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_2286[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnMoodChanged;                                     // 0x10E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AGGEnvironmentalBehaviorContainer*     BehaviorDataContainer;                             // 0x10F8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bKeepClaimedByWhenRoam;                            // 0x1100(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2287[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class ERoamAfterDisturbed>       ValidRoamingSwitchReasons;                         // 0x1108(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class AGGNPCWaypoint*                        CurrentWaypoint;                                   // 0x1118(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FMatElement>                   DefaultHeadMaterials;                              // 0x1120(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FMatElement>                   DefaultHairMaterials;                              // 0x1130(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FMatElement>                   DefaultUpperBodyMaterials;                         // 0x1140(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FMatElement>                   DefaultLowerBodyMaterials;                         // 0x1150(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TMap<class FName, class UMaterialInterface*> SpecificHeadShockMaterial;                         // 0x1160(0x50)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    HairShockMaterial;                                 // 0x11B0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    UpperBodyShockMaterial;                            // 0x11B8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    LowerBodyShockMaterial;                            // 0x11C0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    AccessoriesShockMaterial;                          // 0x11C8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AGGNPCEvent*                           CurrentEvent;                                      // 0x11D0(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ECrowdTypes                       CurrentCrowdType;                                  // 0x11D8(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         CanBeInEvents;                                     // 0x11D9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2288[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGNPCEvent*                           CanOnlyJoinEvent;                                  // 0x11E0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2289[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FMoodSpeedElement>             MoodSpeeds;                                        // 0x11F0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class AActor*                                RightHandAttachmentSlot;                           // 0x1200(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                LeftHandAttachmentSlot;                            // 0x1208(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ECarryItemType                    CarryItemType;                                     // 0x1210(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_228A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  RightHandSocket;                                   // 0x1214(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LeftHandSocket;                                    // 0x121C(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPanicTypes                       CurrentlyPanicType;                                // 0x1224(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_228C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bCanPanic;                                         // 0x122C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_228D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EPanicTypes>               IgnoredPanicTypes;                                 // 0x1230(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bCanCharacterInteract;                             // 0x1240(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_228E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class ENPCInteractions>          ValidInteractionTypes;                             // 0x1248(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<enum class ENPCInteractions>          IgnoredInteractionTypes;                           // 0x1258(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class AGGAIController_Humanoid*              HumanoidController;                                // 0x1268(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AGGNPC_Humanoid* GetDefaultObj();

	void StopPanicking();
	void StartPanicking(enum class EPanicTypes Type, const struct FVector& SourceLocation, class AActor* SourceActor, bool bSkipVehicleCheck);
	void SetInLoveWith(class AActor* Target);
	void SetCurrentCrowdType(enum class ECrowdTypes NewType);
	void SetAngryWithTarget(class AActor* Target, bool SetAsDamagedBy);
	void ReturnFromIdleNPCMode(bool AttemptToResetCollision);
	void ResetNPCInteraction(bool bForOtherToo);
	void ResetConversation(bool bForOtherToo, bool bStopCurrentVO, bool bStopHurt);
	void OnRep_GetCrowdAnimations();
	void OnRep_CurrentWaypoint();
	void OnRep_CurrentMood();
	void OnRep_CurrentEvent();
	void OnAppearanceLoadedAndSet(class AGGNPC_Humanoid* NPC);
	void MoodChange(enum class EMoodChange Direction, int32 ChanceToChange, const TArray<enum class EMoods>& SkipMoods, class AActor* ByActor);
	bool IsPanicking();
	bool IsInEvent();
	bool IsHoldingFoodOrDrink();
	bool IsDisgusted();
	enum class EPanicTypes GetPanicType();
	class AGGAIController_Humanoid* GetHumanoidController();
	class AGGNPCEvent* GetCurrentEvent();
	enum class ECrowdTypes GetCurrentCrowdType();
	class AGGEnvironmentalBehaviorContainer* GetBehaviorDataContainer();
	void FleeFromLocation(const struct FVector& FleeFrom);
	void DetachHandSlot(bool DestroyActor, enum class EAttachmentHandSlot HandSlot, bool TurnOnCollision, bool bForceCannotBecomeLostObject);
	void BPSwitchedToRoaming();
	class AActor* AttachStructToHand(const struct FWeightedElement_ActorAttachment& AttachmentStruct, enum class ESameSocketAttach SameSocketAttachAction);
	class AActor* AttachClassToHand_BP(TSubclassOf<class AActor> ActorClassToAttach, enum class EAttachmentHandSlot HandSlot, bool DropOnRagdoll, bool TakeDamage, const struct FVector& RelativeLocation, const struct FRotator& RelativeRotation, const struct FVector& ActorScale, class UObject* MeshOverride, enum class ECarryItemType CarryType, bool bCanBecomeLostObject, bool bCanDropOnStartle, enum class ESameSocketAttach SameSocketAttachAction);
	class AActor* AttachActorToHand_BP(class AActor* ActorToAttach, enum class EAttachmentHandSlot HandSlot, bool DropOnRagdoll, bool TakeDamage, const struct FVector& RelativeLocation, const struct FRotator& RelativeRotation, const struct FVector& ActorScale, enum class ECarryItemType CarryType, bool bCanBecomeLostObject, bool bCanDropOnStartle, enum class ESameSocketAttach SameSocketAttachAction);
};

// 0x28 (0x400 - 0x3D8)
// Class Goat2.GGNPCAnimInstance
class UGGNPCAnimInstance : public ULSAnimInstance
{
public:
	class AGGNPC*                                OwnerNPC;                                          // 0x3D8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FootIKAlpha;                                       // 0x3E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2292[0x1C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGNPCAnimInstance* GetDefaultObj();

	void OnCharacterOwnerExitedVehicle(class AGGCharacter* Character, class AGGVehicle* Vehicle);
	void OnCharacterOwnerEnteredVehicle(class AGGCharacter* Character, class AGGVehicle* Vehicle);
	void AnimNotifyTriggered(struct FGameplayTag& NotifyTag);
};

// 0xAE0 (0xEE0 - 0x400)
// Class Goat2.GGNPCAnimInstance_Animal
class UGGNPCAnimInstance_Animal : public UGGNPCAnimInstance
{
public:
	struct FGGNPCAnimInstanceAnimalProxy         Proxy;                                             // 0x400(0xAE0)(BlueprintVisible, BlueprintReadOnly, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGNPCAnimInstance_Animal* GetDefaultObj();

};

// 0xB00 (0xF00 - 0x400)
// Class Goat2.GGNPCAnimInstance_Humanoid
class UGGNPCAnimInstance_Humanoid : public UGGNPCAnimInstance
{
public:
	struct FGGNPCAnimInstanceHumanoidProxy       Proxy;                                             // 0x400(0xB00)(BlueprintVisible, BlueprintReadOnly, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGNPCAnimInstance_Humanoid* GetDefaultObj();

};

// 0x140 (0x1F0 - 0xB0)
// Class Goat2.GGNPCAppearanceManager
class UGGNPCAppearanceManager : public UActorComponent
{
public:
	uint8                                        Pad_22C2[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGNPCAppearanceSubsystem*             AppearanceSubsystem;                               // 0xB8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bLockAppearanceByDefault;                          // 0xC0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanRandomlyEquipAccessories;                      // 0xC1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22C3[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                AccessoryChances;                                  // 0xC8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnAppearanceLoadedAndSet;                          // 0xD8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHeadSlotChanged;                                 // 0xE8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_22C4[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAccessoryElement>             Accessories;                                       // 0x118(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class AGGNPC_Humanoid*                       OwnerNPC;                                          // 0x128(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USkeletalMeshComponent*                OwnerMesh;                                         // 0x130(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInterface*                    CurrentSkinMaterial;                               // 0x138(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class FString>                        NPCAppearance;                                     // 0x140(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPrivate)
	TArray<uint32>                               ReplicatedNPCAppearance;                           // 0x150(0x10)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	uint8                                        Pad_22C8[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAppearanceStreamingElement>   AppearanceStreamingElements;                       // 0x180(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_22C9[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGNPCAppearanceManager* GetDefaultObj();

	bool WasAppearanceGeneratedWithTag(const struct FGameplayTag& Tag);
	void UpdateDebugInfo();
	TArray<class FString> SwitchPartInAppearanceArrayRowName(class UObject* WorldContextObject, const TArray<class FString>& NPCAppearanceArray, const struct FBodyPartRowElement& NewElement, bool* bMadeSwitch);
	TArray<class FString> SwitchPartInAppearanceArray(class UObject* WorldContextObject, TArray<class FString>& NPCAppearanceArray, const class FString& NewElement, bool* bMadeSwitch);
	bool ShouldHideUpperBody();
	bool ShouldHideLowerBody();
	bool ShouldHideHair();
	void SetNPCAppearance(const TArray<class FString>& NewNPCAppearance);
	void SetNewAppearanceParts(const TArray<class FString>& NewParts);
	void SetBodyPartToRow(enum class EBodyParts Part, class FName RowName, int32 MaterialIndex);
	void SetBodyPartsToRows(const TArray<struct FBodyPartRowElement>& RowElements);
	void SetAppearanceToSet(const class FString& RowName, class AGGNPCSpawner* FromSpawner);
	void SetAppearanceLocked(bool NewLocked);
	void RemoveAccessoryByType(const struct FGameplayTag& Type);
	void RemoveAccessoryByName(const class FString& RowName);
	void RemoveAccessoriesThatCoverHair(bool bForceRemove);
	void OnRep_ReplicatedNPCAppearance();
	void NPCAppearanceLoaded(bool bNothingStreamed, const struct FAppearanceStreamingElement& StreamingElement);
	bool IsLoadingAppearance();
	bool HasAccessoryWithName(class FName& RowName);
	bool HasAccessoryOfType(const struct FGameplayTag& Type);
	class FString GetRandomUpperBody(enum class EGender Gender, const struct FGameplayTag& AreaTag, bool bForceAreaTag, bool bExcludeCurrent);
	class FString GetRandomLowerBody(enum class EGender Gender, const struct FGameplayTag& AreaTag, bool bForceAreaTag, bool bExcludeCurrent);
	class FString GetRandomHead(enum class EGender Gender, const struct FGameplayTag& AreaTag, bool bForceAreaTag, bool bExcludeCurrent);
	class FString GetRandomHair(enum class EGender Gender, const struct FGameplayTag& AreaTag, bool bForceAreaTag, bool bExcludeCurrent, bool bFindHatFriendly);
	class FString GetRandomAccessory(enum class EGender Gender, const struct FGameplayTag& AccessoryType, const struct FGameplayTag& AreaTag, bool bForceAreaTag, bool bExcludeCurrent);
	TArray<class FString> GetRandomAccessories(enum class EGender Gender, const struct FGameplayTag& AreaTag, int32 AccessoryAmount, bool bForceAreaTag, bool bExcludeCurrent);
	class FName GetPartNameForSlot(enum class EBodyParts Slot);
	TArray<class FString> GetNPCAppearance(TArray<class FString>* TrimmedAccessories, bool bIncludeAccessories);
	bool GetAppearanceLocked();
	struct FGameplayTag GetAppearanceGeneratedWithTag();
	TArray<class FString> GetAppearanceFromSet(class FName& RowName, class AGGNPCSpawner* FromSpawner);
	void GetAndSetRandomPart(enum class EBodyParts Part, enum class EGender Gender, const struct FGameplayTag& AreaTag, bool bForceAreaTag, bool bExcludeCurrent);
	void GetAndSetRandomAccessory(const struct FGameplayTag& AccessoryType, enum class EGender Gender, const struct FGameplayTag& AreaTag, bool bForceAreaTag, bool bExcludeCurrent);
	TArray<class FString> GenerateAndSetNewAppearance(const struct FGameplayTag& AreaTag, const TArray<class FString>& PredeterminedElements, enum class EGender GenderOverride, bool bForceAreaTag);
	void EquipAccessory(const class FString& RowName, int32 MatIndex);
	void EquipAccessories(const TArray<struct FAppearanceRowElement>& RowElements);
	void ClearAccessories();
};

// 0x4B8 (0x518 - 0x60)
// Class Goat2.GGNPCAppearanceSubsystem
class UGGNPCAppearanceSubsystem : public UGGWorldSubsystem
{
public:
	uint8                                        Pad_22EA[0x380];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class UDataTable*                            HeadsTable;                                        // 0x3E0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDataTable*                            HairsTable;                                        // 0x3E8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDataTable*                            UpperBodiesTable;                                  // 0x3F0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDataTable*                            LowerBodiesTable;                                  // 0x3F8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDataTable*                            AccessoriesTable;                                  // 0x400(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDataTable*                            AppearanceSetTable;                                // 0x408(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class FString>                        AdditionalHeadTables;                              // 0x410(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	TArray<class FString>                        AdditionalHairTables;                              // 0x420(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	TArray<class FString>                        AdditionalUpperBodyTables;                         // 0x430(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	TArray<class FString>                        AdditionalLowerBodyTables;                         // 0x440(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	TArray<class FString>                        AdditionalAccessoriesTables;                       // 0x450(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	TArray<class UDataTable*>                    AdditionalDataTables;                              // 0x460(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class FString>                        AdditionalSetTables;                               // 0x470(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	TArray<class UDataTable*>                    AdditionalSetsDataTables;                          // 0x480(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class UDataTable*                            NPCNameDataTable;                                  // 0x490(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class FString>                        AdditionalNameDataTables;                          // 0x498(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	TArray<class UDataTable*>                    AdditionalNameTables;                              // 0x4A8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_22EB[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGNPCAppearanceSubsystem* GetDefaultObj();

	TArray<class UDataTable*> GetSetTables(class UObject* WorldContext);
	class FString GetRandomUpperBody(class UObject* WorldContext, enum class EGender Gender, const struct FGameplayTag& AreaTag, const TArray<class FString>& CurrentAppearance, bool bForceAreaTag, bool bExcludeCurrent);
	class FString GetRandomLowerBody(class UObject* WorldContext, enum class EGender Gender, const struct FGameplayTag& AreaTag, const TArray<class FString>& CurrentAppearance, bool bForceAreaTag, bool bExcludeCurrent);
	class FString GetRandomHead(class UObject* WorldContext, enum class EGender Gender, const struct FGameplayTag& AreaTag, const TArray<class FString>& CurrentAppearance, bool bForceAreaTag, bool bExcludeCurrent);
	class FString GetRandomHair(class UObject* WorldContext, enum class EGender Gender, const struct FGameplayTag& AreaTag, const TArray<class FString>& CurrentAppearance, bool bForceAreaTag, bool bExcludeCurrent, bool bFindHatFriendly);
	class FString GetRandomAccessory(class UObject* WorldContext, enum class EGender Gender, const struct FGameplayTag& AccessoryType, const struct FGameplayTag& AreaTag, TArray<struct FAccessoryElement>& CurrentAccessories, bool bForceAreaTag, bool bExcludeCurrent);
	TArray<class FString> GetRandomAccessories(class UObject* WorldContext, enum class EGender Gender, const struct FGameplayTag& AreaTag, TArray<struct FAccessoryElement>& CurrentAccessories, int32 AccessoryAmount, bool bForceAreaTag, bool bExcludeCurrent);
};

// 0x148 (0x378 - 0x230)
// Class Goat2.GGNPCEvent
class AGGNPCEvent : public AActor
{
public:
	uint8                                        Pad_22F5[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       SceneRoot;                                         // 0x240(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                       QueryLocationComp;                                 // 0x248(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UArrowComponent*                       QueryLocArrowComp;                                 // 0x250(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          GameplayTag;                                       // 0x258(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBehaviorTree*                         EventTree;                                         // 0x260(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanEditEventTree;                                 // 0x268(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EEventType                        EventType;                                         // 0x269(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EEventActivation                  EventActivation;                                   // 0x26A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EEventDeactivation                EventDeactivation;                                 // 0x26B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ChanceToEnable;                                    // 0x26C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          CurrentArea;                                       // 0x270(0x8)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         Enabled;                                           // 0x278(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsInitialized;                                     // 0x279(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_22F6[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxAffectedNPCs;                                   // 0x27C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreNPCsHoldingObjects;                         // 0x280(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAttachmentHandSlot               HandsToCheckIn;                                    // 0x281(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22F7[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RecentNPCCooldown;                                 // 0x284(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HasDuration;                                       // 0x288(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22F8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Duration;                                          // 0x28C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDestroyOnDurationEnd;                             // 0x290(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22F9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ChanceToSetMood;                                   // 0x294(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FWeightedElement_Mood>         PotentialMoodChanges;                              // 0x298(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        EnableMaxDistance;                                 // 0x2A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EnableMinDistance;                                 // 0x2AC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RelevantDistanceMax;                               // 0x2B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22FA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bRemoveScaredNPCs;                                 // 0x2B8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRemoveAngryNPCs;                                  // 0x2B9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRemoveLovingNPCs;                                 // 0x2BA(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRemovePanickedNPCs;                               // 0x2BB(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRemoveRagdolledNPCs;                              // 0x2BC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22FE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AGGNPC*>                        IgnoreForTickRemove;                               // 0x2C0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class AGGNPC*>                        SpecialCaseNPCs;                                   // 0x2D0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class AGGNPC_Humanoid*>               AffectedNPCs;                                      // 0x2E0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<struct FRecentNPC>                    RecentNPCs;                                        // 0x2F0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            OnEventEnabledChanged;                             // 0x300(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UGGNPCEventManager*                    NPCEventManager;                                   // 0x310(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2300[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         ShouldDrawEQS;                                     // 0x330(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECrowdTypes                       EQSToDraw;                                         // 0x331(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2301[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UEnvQuery*                             QueryTemplate;                                     // 0x338(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2302[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EEnvQueryRunMode                  QueryingMode;                                      // 0x344(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DrawLabels;                                        // 0x345(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2303[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAIDynamicParam>               QueryConfig;                                       // 0x348(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	uint8                                        Pad_2304[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGNPCEvent* GetDefaultObj();

	void ToRagdollEvent(class ULSCharacterMovementComponent* MovementComp, class ACharacter* OwnerCharacter, struct FRagdollStateChangeSettings& StateChangeSettings);
	void RemoveAllAffectedNPCs();
	void RemoveAffectedNPC(class AGGNPC_Humanoid* NPC);
	void OnEnabledChanged(bool bNewEnabled);
	enum class EMoods GetMoodFromEvent();
	class UGGCrowdSystemComponent* GetCrowdSystemComp();
	void EnableEvent();
	void DisableEvent();
	void BPSetNeededCSValues();
	void BPInitializeEvent(class UGGNPCEventManager* Manager, class AGGNPC* StartNPC, const struct FVector& StartLocation, class AActor* StartActor);
	void AddAffectedNPC(class AGGNPC_Humanoid* NPC);
};

// 0x60 (0x3D8 - 0x378)
// Class Goat2.GGNPCEvent_AdmireGoat
class AGGNPCEvent_AdmireGoat : public AGGNPCEvent
{
public:
	float                                        SpreadRadiusInitial;                               // 0x378(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpreadRadiusMax;                                   // 0x37C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpreadRadiusIncrease;                              // 0x380(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DurationMax;                                       // 0x384(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DurationIncrease;                                  // 0x388(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ChanceToJoinEvent;                                 // 0x38C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 IgnoredReactions;                                  // 0x390(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        ReactionCooldownWhenLeaving;                       // 0x3B0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDebug;                                            // 0x3B4(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2309[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGGoat*                               TargetGoat;                                        // 0x3B8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_230A[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGNPCEvent_AdmireGoat* GetDefaultObj();

	void SpreadEventInRadius();
	void OnTrickCompleted(class AGGGoat* Goat, const class FString& TrickName);
	void OnGoatEmoteStarted(class AGGGoat* Goat, class UGGGoatEmote* Emote);
	void OnGoatBaa(class AGGGoat* GoatBaaing);
	class AGGGoat* GetAdmireGoat();
};

// 0x10 (0x388 - 0x378)
// Class Goat2.GGNPCEvent_AdmireObject
class AGGNPCEvent_AdmireObject : public AGGNPCEvent
{
public:
	class USphereComponent*                      OverlapSphere;                                     // 0x378(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        ChanceToTrigger;                                   // 0x380(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_230F[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGNPCEvent_AdmireObject* GetDefaultObj();

	void OverlapBegin(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x70 (0x3E8 - 0x378)
// Class Goat2.GGNPCEvent_Ambulance
class AGGNPCEvent_Ambulance : public AGGNPCEvent
{
public:
	float                                        MaxSplineDistance;                                 // 0x378(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SplineAdjustDistance;                              // 0x37C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AllowedSirenTimeWhileStuck;                        // 0x380(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2313[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AGGVehicle>                AmbulanceClass;                                    // 0x388(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AGGNPC>                    MedicClass;                                        // 0x390(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ForceEjectWhenStuckFor;                            // 0x398(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDebug;                                            // 0x39C(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2314[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                PassedOutActor;                                    // 0x3A0(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AGGNPC*                                PassedOutNPC;                                      // 0x3A8(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AGGGoat*                               PassedOutGoat;                                     // 0x3B0(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               PassedOutAtLocation;                               // 0x3B8(0xC)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2315[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGNPC_Humanoid*                       MedicNPC;                                          // 0x3C8(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AGGVehicle*                            AmbulanceVehicle;                                  // 0x3D0(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2316[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGNPCEvent_Ambulance* GetDefaultObj();

	void OnReachedPathTargetLocation(class AGGVehicle* Vehicle, const struct FVector& TargetLocation);
	void OnReachedPathTargetActor(class AGGVehicle* Vehicle, class AActor* TargetActor);
	void MedicExit();
};

// 0x68 (0x3E0 - 0x378)
// Class Goat2.GGNPCEvent_Firetruck
class AGGNPCEvent_Firetruck : public AGGNPCEvent
{
public:
	float                                        MaxSplineDistance;                                 // 0x378(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SplineAdjustDistance;                              // 0x37C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        VehicleHeightSpawnAdjust;                          // 0x380(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2319[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AGGVehicle>                FiretruckClass;                                    // 0x388(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AGGNPC>                    FirefighterClass;                                  // 0x390(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ForceEjectWhenStuckFor;                            // 0x398(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               LargeFireLocation;                                 // 0x39C(0xC)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AllowedSirenTimeWhileStuck;                        // 0x3A8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDebug;                                            // 0x3AC(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_231A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGNPC_Humanoid*                       FirefighterNPC;                                    // 0x3B0(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AGGNPC_Humanoid*                       FirefighterNPCPassenger;                           // 0x3B8(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AGGVehicle_Car_Firetruck*              FiretruckVehicle;                                  // 0x3C0(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_231B[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGNPCEvent_Firetruck* GetDefaultObj();

	void OnReachedPathTargetLocation(class AGGVehicle* Vehicle, const struct FVector& TargetLocation);
	void FirefighterExit();
};

// 0x40 (0x3B8 - 0x378)
// Class Goat2.GGNPCEvent_SocializingPoint
class AGGNPCEvent_SocializingPoint : public AGGNPCEvent
{
public:
	class USphereComponent*                      OverlapSphere;                                     // 0x378(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                       QueueStartLoc;                                     // 0x380(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                       QueueEndLookLoc;                                   // 0x388(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        ChanceToTrigger;                                   // 0x390(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        QueueSpotAmount;                                   // 0x394(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpaceBetweenSpots;                                 // 0x398(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LengthUntilFirstSpot;                              // 0x39C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ESocialQueueDirections            QueueDirection;                                    // 0x3A0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         DrawQueueInGame;                                   // 0x3A1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_231F[0x16];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGNPCEvent_SocializingPoint* GetDefaultObj();

	void OverlapBegin(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void BPEnabledChange();
};

// 0x40 (0x3B8 - 0x378)
// Class Goat2.GGNPCEvent_StreetPerformer
class AGGNPCEvent_StreetPerformer : public AGGNPCEvent
{
public:
	class USphereComponent*                      OverlapSphere;                                     // 0x378(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsPerforming;                                     // 0x380(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2321[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGNPC_Humanoid*                       PerformerNPC;                                      // 0x388(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2322[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGNPCEvent_StreetPerformer* GetDefaultObj();

	void OverlapBegin(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	class AGGNPC* GetPerformerNPC();
};

// 0x38 (0x3B0 - 0x378)
// Class Goat2.GGNPCEvent_StreetStall
class AGGNPCEvent_StreetStall : public AGGNPCEvent
{
public:
	class USphereComponent*                      OverlapSphere;                                     // 0x378(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         DrawQueuePositions;                                // 0x380(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2324[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGNPC_Humanoid*                       VendorCharacter;                                   // 0x388(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGStreetStall*                        StallActor;                                        // 0x390(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         VendorAtStall;                                     // 0x398(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         IsBuyerInLoc;                                      // 0x399(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2325[0x16];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGNPCEvent_StreetStall* GetDefaultObj();

	void OverlapBegin(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	class AGGNPC* GetVendorCharacter();
	class AGGNPC* GetCurrentBuyer();
	void BuyerLeftStall();
};

// 0x18 (0x390 - 0x378)
// Class Goat2.GGNPCEvent_Superstar
class AGGNPCEvent_Superstar : public AGGNPCEvent
{
public:
	int32                                        ChanceToTrigger;                                   // 0x378(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2327[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGNPC*                                SuperstarNPC;                                      // 0x380(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USphereComponent*                      OverlapSphere;                                     // 0x388(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AGGNPCEvent_Superstar* GetDefaultObj();

	void OverlapBegin(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	class AGGNPC* GetSuperstar();
};

// 0xC8 (0x440 - 0x378)
// Class Goat2.GGNPCEvent_WorldInteraction
class AGGNPCEvent_WorldInteraction : public AGGNPCEvent
{
public:
	class USphereComponent*                      OverlapSphere;                                     // 0x378(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGGCrowdSystemComponent*               GGCrowdSystem;                                     // 0x380(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bAutoAddCreatedWaypoints;                          // 0x388(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_232E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ChanceToTrigger;                                   // 0x38C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSkipTakenWaypoint;                                // 0x390(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2330[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class AGGNPCWaypoint>         WaypointA;                                         // 0x398(0x28)(Edit, BlueprintVisible, DisableEditOnTemplate, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FWeightedElement_NPCWaypoint>  WaypointArrayA;                                    // 0x3C0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	bool                                         bCanEditWaypointA;                                 // 0x3D0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanEditWaypointArrayA;                            // 0x3D1(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceEnvironmentalsIntoCivilians;                 // 0x3D2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2331[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AGGNPCWaypoint*>                ClaimedWaypoints;                                  // 0x3D8(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, NativeAccessSpecifierPublic)
	bool                                         bHasQueue;                                         // 0x3E8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2332[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class AActor>                 QueueRotationTargetActor;                          // 0x3F0(0x28)(Edit, BlueprintVisible, DisableEditOnTemplate, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        QueueLength;                                       // 0x418(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpaceBetweenSpots;                                 // 0x41C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LengthUntilFirstSpot;                              // 0x420(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDebugDrawQueue;                                   // 0x424(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2333[0x13];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AGGNPCWaypoint_WorldInteraction> WaypointClass;                                     // 0x438(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AGGNPCEvent_WorldInteraction* GetDefaultObj();

	void OverlapBegin(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void NPCReachedWaypoint(class AGGNPCWaypoint* Waypoint, class AGGNPC_Humanoid* NPC);
	void NewWaypoint();
	void BehaviorCallback(class AGGNPCWaypoint_WorldInteraction* Waypoint, class AGGNPC_Humanoid* NPC, int32 ID, const struct FGameplayTag& Tag);
};

// 0xD0 (0xF8 - 0x28)
// Class Goat2.GGNPCEventManager
class UGGNPCEventManager : public UObject
{
public:
	uint8                                        Pad_2340[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UDataTable*                            EventsDataTable;                                   // 0x58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ForceEventsRelevantFor;                            // 0x60(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2341[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AGGNPCEvent*>                   ActiveEvents;                                      // 0x68(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AGGNPCEvent*>                   ActiveDynamicEvents;                               // 0x78(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2342[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAreaEventSpawners>            AreaEventSpawners;                                 // 0x98(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FEventSpawnElement>            EventSpawnElements;                                // 0xA8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2343[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FEventCooldown>                EventCooldowns;                                    // 0xC8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FEventActorCooldown>           EventActorCooldowns;                               // 0xD8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FStreetStallSpawner>           StallSpawners;                                     // 0xE8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGNPCEventManager* GetDefaultObj();

	void RemoveEvent(class AGGNPCEvent* EventToRemove, bool FromEndPlay);
	void RemoveAllEvents(bool OnlyDynamicEvents);
	void NPCEventLoaded();
	bool IsEventEnabled(const struct FGameplayTag& EventTag);
	class UGGNPCEventManager* GetNPCEventManager(class UObject* WorldContextObject);
	bool GetEventsOfClass(TSubclassOf<class AGGNPCEvent> EventClass, TArray<class AGGNPCEvent*>* Events);
	TArray<class AGGNPCEvent*> GetActiveEvents();
	TArray<class AGGNPCEvent*> GetActiveDynamicEvents();
	bool EventOnCooldown_Tag(const struct FGameplayTag& EventTag, class AActor* CooldownActor);
	bool EventOnCooldown(TSubclassOf<class AGGNPCEvent> EventClass, class AActor* CooldownActor);
};

// 0x28 (0x2F8 - 0x2D0)
// Class Goat2.GGNPCHandcuffs
class AGGNPCHandcuffs : public AGGPhysicsProjectile
{
public:
	TSubclassOf<class UGGHandcuffedComponent>    HandcuffedComponentType;                           // 0x2D0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          PoliceHandcuffPlayerTag;                           // 0x2D8(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          PoliceHandcuffColleagueTag;                        // 0x2E0(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          PoliceOfficerIdentifierTag;                        // 0x2E8(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ScanGoatRadius;                                    // 0x2F0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2345[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGNPCHandcuffs* GetDefaultObj();

};

// 0x140 (0x170 - 0x30)
// Class Goat2.GGNPCInteractDataAsset
class UGGNPCInteractDataAsset : public UDataAsset
{
public:
	int32                                        GeneralChanceToInteract;                           // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2346[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FInteractChanceElement>        InteractChances;                                   // 0x38(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FNPCInteractionCooldown>       InteractionCooldowns;                              // 0x48(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         DisableDiscussions;                                // 0x58(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2347[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FMoodCombination>              DiscussionChances;                                 // 0x60(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        ChanceToChangeMood;                                // 0x70(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2348[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FDiscussMoodChange>            DiscussMoodChanges;                                // 0x78(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         DisableAngryRant;                                  // 0x88(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2349[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FMoodCombination>              AngryRantChances;                                  // 0x90(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         DisableMovingWave;                                 // 0xA0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_234A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FMoodCombination>              MovingWaveChances;                                 // 0xA8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         DisableGoatInteractions;                           // 0xB8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_234B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EMoods>                    ExludeFromNotice;                                  // 0xC0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        MovingWaveTimeSinceStartledBy;                     // 0xD0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_234C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGoatInteractions>             GoatMovingWave;                                    // 0xD8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        AttackTimeSinceStartledBy;                         // 0xE8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_234D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGoatInteractions>             AttackingGoat;                                     // 0xF0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        CloseGreetTimeSinceStartledBy;                     // 0x100(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_234F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGoatInteractions>             GoatCloseGreet;                                    // 0x108(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        NoticeGoatTimeSinceStartledBy;                     // 0x118(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2350[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGoatInteractions>             NoticeGoat;                                        // 0x120(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGoatInteractions>             MovingNoticeGoat;                                  // 0x130(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        PettingGoatTimeSinceStartledBy;                    // 0x140(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2351[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGoatInteractions>             PettingGoat;                                       // 0x148(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        PointingAtGoatTimeSinceStartledBy;                 // 0x158(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2352[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGoatInteractions>             PointingAtGoat;                                    // 0x160(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGNPCInteractDataAsset* GetDefaultObj();

};

// 0x2E8 (0x310 - 0x28)
// Class Goat2.GGNPCManager
class UGGNPCManager : public UObject
{
public:
	uint8                                        Pad_2368[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         LogSpawnerGathering;                               // 0x58(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2369[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        ManagedLevels;                                     // 0x60(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	float                                        ManageInterval;                                    // 0x70(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImpulseRelevantTime;                               // 0x74(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ForceRelevantFor;                                  // 0x78(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HighVelocityThreshold;                             // 0x7C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HighVelocityMultiplier;                            // 0x80(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxCiviliansPerUpdate;                             // 0x84(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxEnvironmentalsPerUpdate;                        // 0x88(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxImportantEnvironmentalsPerUpdate;               // 0x8C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxProfessionalsPerUpdate;                         // 0x90(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxAnimalsPerUpdate;                               // 0x94(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxImportantAnimalsPerUpdate;                      // 0x98(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_236B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGNPCManagerConfigAsset*              CurrentConfigAsset;                                // 0xA0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_236C[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGNPCManagerConfigAsset*              ConfigAsset;                                       // 0xF0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGNPCManagerConfigAsset*              MobileConfigAsset;                                 // 0xF8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_236D[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AGGPlayerController*>           PlayerControllers;                                 // 0x110(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_236E[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AGGNPC*>                        IrrelevantCivNPCs;                                 // 0x140(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AGGNPC*>                        IrrelevantNonRagdollCivNPCs;                       // 0x150(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AGGNPC*>                        IrrelevantEnvNPCs;                                 // 0x160(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AGGNPC*>                        IrrelevantProfNPCs;                                // 0x170(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AGGNPC*>                        IrrelevantAnimNPCs;                                // 0x180(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AGGNPC*>                        IrrelevantSpecNPCs;                                // 0x190(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2370[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAreaData>                     Areas;                                             // 0x1C8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FActiveNPCAreaContainer>       ActiveNPCAreaContainers;                           // 0x1D8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FAreaSpawners>                 AreaSpawners;                                      // 0x1E8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AGGNPC*>                        AllNPCs;                                           // 0x1F8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AGGNPC*>                        ActiveCivilianNPCs;                                // 0x208(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AGGNPC*>                        ActiveDriverCivsNPCs;                              // 0x218(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AGGNPC*>                        PooledCivilianNPCs;                                // 0x228(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TSubclassOf<class AGGNPC>                    CivilianClass;                                     // 0x238(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AGGNPC*>                        ActiveEnvironmentalNPCs;                           // 0x240(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AGGNPC*>                        PooledEnvironmentalNPCs;                           // 0x250(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TSubclassOf<class AGGNPC>                    EnvironmentalClass;                                // 0x260(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AGGNPC*>                        ActiveProfessionalNPCs;                            // 0x268(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AGGNPC*>                        PooledProfessionalNPCs;                            // 0x278(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AGGNPC*>                        ActiveSpecialNPCs;                                 // 0x288(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AGGNPC*>                        PooledSpecialNPCs;                                 // 0x298(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AGGNPC*>                        ActiveAnimalNPCs;                                  // 0x2A8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AGGNPC*>                        PooledAnimalNPCs;                                  // 0x2B8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FVector                               PoolLocation;                                      // 0x2C8(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2375[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FWeightedElement_Professional> ProfessionalNPCSpawnPool;                          // 0x2D8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class AGGPaperboyDropOffPoint*>       PaperboyDropOffPoints;                             // 0x2E8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2376[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGVehicleManager*                     VehicleManager;                                    // 0x308(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGGNPCManager* GetDefaultObj();

	void RemoveProfessionalFromSpawnPool(TSubclassOf<class AGGNPC_Humanoid> ProfessionalClass);
	void PoolNPC(class AGGNPC* NPC, enum class EPoolReason Reason);
	bool LocationOverlappingVehicle(const struct FVector& Location, float Radius);
	bool GetShouldNPCManage();
	TArray<class AGGNPC*> GetPooledSpecialNPCs();
	TArray<class AGGNPC*> GetPooledProfessionalNPCs();
	class AGGNPC* GetPooledNPC(enum class ENPCType Type, TSubclassOf<class AGGNPC> SpecialNPCClass, TSubclassOf<class AGGNPC> ProfessionalClass, TSubclassOf<class AGGNPC_Animal> AnimalClass, bool bRemoveFromArray);
	TArray<class AGGNPC*> GetPooledEnvironmentalNPCs();
	TArray<class AGGNPC*> GetPooledCivilianNPCs();
	TArray<class AGGNPC*> GetPooledAnimalNPCs();
	TArray<class AGGNPC*> GetNPCsInRadius_BP(const struct FVector& Location, float Radius, const TArray<TSubclassOf<class AGGNPC>>& SpecificClasses, const TArray<class AGGNPC*>& IgnoredNPCs);
	bool GetNPCsDisabled();
	class UGGNPCManager* GetNPCManager(class UObject* WorldContextObject);
	class UGGNPCManagerConfigAsset* GetCurrentConfigAsset();
	TArray<class AGGNPC*> GetAllNPCs();
	TArray<class AGGNPC*> GetAllActiveNPCs(bool bIncludeAnimals);
	TArray<class AGGNPC*> GetActiveSpecialNPCs();
	TArray<class AGGNPC*> GetActiveProfessionalNPCs();
	TArray<class AGGNPC*> GetActiveEnvironmentalNPCs();
	TArray<class AGGNPC*> GetActiveDriverCivsNPCs();
	TArray<class AGGNPC*> GetActiveCivilianNPCs();
	TArray<class AGGNPC*> GetActiveAnimalNPCs();
	void AddProfessionalToSpawnPool(TSubclassOf<class AGGNPC_Humanoid> ProfessionalClass, int32 Weight, enum class EMoods StartMood);
	void AddNPCToAll(class AGGNPC* NPC);
	void AddActiveNPC(class AGGNPC* NPC);
	bool ActorHiddenForPlayers(const TArray<class AGGPlayerController*>& Controllers, class AActor* Actor);
	bool ActorBlockedForPlayers(const TArray<class AGGPlayerController*>& Controllers, class AActor* Actor);
	bool ActorBlockedForPlayer(class AGGPlayerController* Controller, class AActor* Actor);
	bool ActorBehindPlayers(const TArray<class AGGPlayerController*>& Controllers, class AActor* Actor);
	bool ActorBehindPlayer(class AGGPlayerController* Controller, class AActor* Actor);
};

// 0xB0 (0xE0 - 0x30)
// Class Goat2.GGNPCManagerConfigAsset
class UGGNPCManagerConfigAsset : public UDataAsset
{
public:
	int32                                        InitialCivilianPool;                               // 0x30(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CivilianPoolMax;                                   // 0x34(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CivilianActiveNumMax;                              // 0x38(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ReservedForVehicles;                               // 0x3C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InitialEnvironmentalPool;                          // 0x40(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EnvironmentalPoolMax;                              // 0x44(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EnvironmentalActiveNumMax;                         // 0x48(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ProfessionalActiveNumMax;                          // 0x4C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ProfessionalPoolMax;                               // 0x50(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SpecialNPCsPoolMax;                                // 0x54(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AnimalActiveNumMax;                                // 0x58(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AnimalPoolMax;                                     // 0x5C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        VehicleActiveNumMax;                               // 0x60(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        VehiclesPoolMax;                                   // 0x64(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpawnerRelevantDistance;                           // 0x68(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpawnerMinDistance;                                // 0x6C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LoSSpawnAtDist;                                    // 0x70(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NPCRelevantDistance;                               // 0x74(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NPCMaxRelevantDist;                                // 0x78(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpawnerCooldown;                                   // 0x7C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImportantSpawnerRelevantDistance;                  // 0x80(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseMinDistance;                                   // 0x84(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2379[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ImportantSpawnerMinDistance;                       // 0x88(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpawnerPlayerDistanceCheck;                        // 0x8C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PreventRespawnUntilDistanceAwayFromPlayers;        // 0x90(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleSpawnerRelevantDistance;                    // 0x94(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleSpawnerMinDistance;                         // 0x98(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleLoSSpawnAtDist;                             // 0x9C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleRelevantDistance;                           // 0xA0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleMaxRelevantDist;                            // 0xA4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleSpawnerCooldown;                            // 0xA8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleImportantSpawnerRelevantDistance;           // 0xAC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bVehicleUseMinDistance;                            // 0xB0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_237B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        VehicleImportantSpawnerMinDistance;                // 0xB4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleSpawnerPlayerDistanceCheck;                 // 0xB8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehPreventRespawnUntilDistanceAwayFromPlayers;     // 0xBC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TargetVehicleAmountPerPlayerBase;                  // 0xC0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RoadVehicleRelevantDistance;                       // 0xC4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SplinePlacementMaxDistance;                        // 0xC8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SplinePlacementMinDistance;                        // 0xCC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAreaData>                     Areas;                                             // 0xD0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGNPCManagerConfigAsset* GetDefaultObj();

};

// 0x20 (0x1110 - 0x10F0)
// Class Goat2.GGNPCMovementComponent
class UGGNPCMovementComponent : public UGGCharacterMovementComponent
{
public:
	float                                        WalkFixedPathBrakingDistance;                      // 0x10F0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RunFixedPathBrakingDistance;                       // 0x10F4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnInPlaceRotationSpeed;                          // 0x10F8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NetworkSimulatedSmoothLocationTimeRunning;         // 0x10FC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2385[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGNPC*                                OwnerNPC;                                          // 0x1108(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGNPCMovementComponent* GetDefaultObj();

	void SetProjectNavMeshWalking(bool bNewShouldProject);
	bool GetUseFixedBrakingDistanceForPaths();
	float GetFixedPathBrakingDistance();
};

// 0x30 (0x60 - 0x30)
// Class Goat2.GGNPCNameDataAsset
class UGGNPCNameDataAsset : public UDataAsset
{
public:
	TArray<class FText>                          MasculineFirstNames;                               // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class FText>                          FeminineFirstNames;                                // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class FText>                          LastNames;                                         // 0x50(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGNPCNameDataAsset* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGNPCNotifyStatics
class UGGNPCNotifyStatics : public UObject
{
public:

	static class UClass* StaticClass();
	static class UGGNPCNotifyStatics* GetDefaultObj();

	void StartleNPC_BP(class AGGNPC* NPC, const struct FVector& Location, enum class EStartleVariations Type, class AActor* NotifyAboutActor, enum class ELineOfSightSetting LineOfSightSetting, const struct FStartleParameters& StartleParams, const struct FNotifyParameters& NotifyParams);
	void ProximityStartle_BP(class UObject* WorldContextObject, const struct FVector& Location, float Radius, enum class EStartleVariations Type, class AActor* NotifyAboutActor, enum class ELineOfSightSetting LineOfSightSetting, const struct FStartleParameters& StartleParams, const struct FNotifyParameters& NotifyParams);
	void ProximitySetNPCMood_BP(class UObject* WorldContextObject, const struct FVector& Location, float Radius, enum class EMoods Mood, const TArray<enum class EMoods>& SkipMoods, const TArray<class AGGNPC*>& IgnoredNPCs, class AActor* NotifyAboutActor, const struct FVector& NotifyAboutLocation, bool bSkipNoneMoods);
	void ProximityNotify_BP(class UObject* WorldContextObject, const struct FVector& Location, float Radius, const struct FGameplayTag& Type, class AActor* NotifyAbout, const TArray<enum class EMoods>& SkipMoods, const TArray<class AGGNPC*>& IgnoredNPCs, bool SkipRagdolls, bool SkipPanicking, bool SkipCannotChangeMood, bool SkipMatchingReactType, enum class ELineOfSightSetting LineOfSightSetting, bool bNonStartleCanBypassStartle, int32 ChanceToNotify, float PutOnCooldownFor, bool bSkipStumbling);
	void ProximityMoodChangeStruct(class UObject* WorldContextObject, const struct FVector& Location, const struct FMoodChangeAreaElement& MoodChangeElement, const TArray<class AGGNPC*>& IgnoredNPCs, class AActor* NotifyAboutActor);
	void ProximityMoodChange(class UObject* WorldContextObject, const struct FVector& Location, float Radius, enum class EMoodChange Direction, int32 ChanceToChange, const TArray<enum class EMoods>& SkipMoods, const TArray<class AGGNPC*>& IgnoredNPCs, class AActor* NotifyAboutActor, bool bSkipRagdolls);
	void NotifyNPC_BP(class AGGNPC* NPC, const struct FGameplayTag& Type, class AActor* NotifyAbout, const struct FVector& Location, const TArray<enum class EMoods>& SkipMoods, bool SkipRagdolls, bool SkipPanicking, bool SkipCannotChangeMood, bool SkipMatchingReactType, enum class ELineOfSightSetting LineOfSightSetting, bool bNonStartleCanBypassStartle, int32 ChanceToNotify, float PutOnCooldownFor, bool bSkipStumbling);
};

// 0x28 (0x2E0 - 0x2B8)
// Class Goat2.GGNPCPreviewAnimInstance
class UGGNPCPreviewAnimInstance : public UAnimInstance
{
public:
	class AGGNPCSpawner_Environment*             CachedSpawner;                                     // 0x2B8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                CachedSkelMesh;                                    // 0x2C0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasValidRandomSequences;                          // 0x2C8(0x1)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23A2[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGGRandomPlayerSequenceEntry>  ValidRandomSequences;                              // 0x2D0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGNPCPreviewAnimInstance* GetDefaultObj();

};

// 0xE0 (0x310 - 0x230)
// Class Goat2.GGNPCSpawner
class AGGNPCSpawner : public AActor
{
public:
	class USceneComponent*                       RootComp;                                          // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCapsuleComponent*                     SizeIndicatorCapsule;                              // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         Enabled;                                           // 0x240(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShouldSpawnAtGameStart;                            // 0x241(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanBeRagdolledThroughImpact;                      // 0x242(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanEditRagdolledThroughImpact;                    // 0x243(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanPassOut;                                       // 0x244(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanEditPassedOut;                                 // 0x245(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPassOutOnRagdoll;                                 // 0x246(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanEditPassOutOnRagdoll;                          // 0x247(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SpawnerArea;                                       // 0x248(0x8)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 NPCIdentifierTags;                                 // 0x250(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<struct FWeightedElement_ActorAttachment> InitialActorAttachments;                           // 0x270(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         ShowSpawnerCapsuleInGame;                          // 0x280(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ENPCType                          NPCType;                                           // 0x281(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23A7[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LastUsedTimestamp;                                 // 0x284(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                    DefaultPActorAttachmentClass;                      // 0x288(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSetForcedNPCName;                                 // 0x290(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23A8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  ForcedNPCName;                                     // 0x298(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                         bOverrideNameDataTableRows;                        // 0x2B0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23A9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDataTable*                            NPCNameDataTable;                                  // 0x2B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FDataTableRowHandle>           FeminineFirstNames;                                // 0x2C0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FDataTableRowHandle>           MasculineFirstNames;                               // 0x2D0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FDataTableRowHandle>           LastNames;                                         // 0x2E0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class UGGDialogueDataAsset*                  Dialogue;                                          // 0x2F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNPCSpawned;                                      // 0x2F8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bAnimalSpawner;                                    // 0x308(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_23AA[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGNPCSpawner* GetDefaultObj();

	class AGGNPC* SpawnNPC();
	void SpawnAndAttachDialogueActor(class AGGNPCSpawner* ThisSpawner, class AGGNPC* NPC);
	void OnAppearanceLoadedAndSet(class AGGNPC_Humanoid* NPC);
	bool InitializeResetNPC(class AGGNPC* NPC);
};

// 0xB8 (0x3C8 - 0x310)
// Class Goat2.GGNPCSpawner_Animal
class AGGNPCSpawner_Animal : public AGGNPCSpawner
{
public:
	TArray<struct FWeightedElement_Animal>       AnimalClasses;                                     // 0x310(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGGRandomPlayerSequenceEntry>  Animations;                                        // 0x320(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FAnimalMaterialCollection>     MaterialVariationOverrides;                        // 0x330(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bCanProximityReact;                                // 0x340(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23AD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AnimStartWait;                                     // 0x344(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AnimStartWaitDeviation;                            // 0x348(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsImportantSpawner;                               // 0x34C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23AE[0x17];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bPreventSpawnUntilNextLoad;                        // 0x364(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23AF[0x13];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UBehaviorTree*                         BehaviorOverride;                                  // 0x378(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class AActor>                 ActorA;                                            // 0x380(0x28)(Edit, BlueprintVisible, DisableEditOnTemplate, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RoamRadius;                                        // 0x3A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawPreviewRadius;                                // 0x3AC(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23B0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Duration;                                          // 0x3B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DurationDeviation;                                 // 0x3B4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanEditActorA;                                    // 0x3B8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanEditRadius;                                    // 0x3B9(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanEditDuration;                                  // 0x3BA(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_23B1[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGNPC*                                ClaimedBy;                                         // 0x3C0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AGGNPCSpawner_Animal* GetDefaultObj();

	class AGGNPC* SpawnNPCElement(const struct FWeightedElement_Animal& Element);
	class AGGNPC* GetClaimedBy(bool bEvenIfNotInitialized);
};

// 0x60 (0x370 - 0x310)
// Class Goat2.GGNPCSpawner_Civilian
class AGGNPCSpawner_Civilian : public AGGNPCSpawner
{
public:
	TSubclassOf<class AGGNPC>                    NPCClass;                                          // 0x310(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AGGNPCEvent*                           StartEvent;                                        // 0x318(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AGGEventSpawner*                       StartEventSpawner;                                 // 0x320(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRequireEnabledStartEvent;                         // 0x328(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23B2[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        AppearanceSetsToUse;                               // 0x330(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGameplayTag                          AppearanceAreaTag;                                 // 0x340(0x8)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FWeightedElement_GameplayTag>  AppearanceAreaTags;                                // 0x348(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FWeightedElement_Mood>         StartMoods;                                        // 0x358(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bCanEditAreaTags;                                  // 0x368(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_23B4[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGNPCSpawner_Civilian* GetDefaultObj();

	bool StartEventEnabled();
};

// 0x2E8 (0x5F8 - 0x310)
// Class Goat2.GGNPCSpawner_Environment
class AGGNPCSpawner_Environment : public AGGNPCSpawner
{
public:
	class USkeletalMeshComponent*                PreviewSkeletalMeshComponent;                      // 0x310(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  HairMeshComponent;                                 // 0x318(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                UpperBodyMeshComponent;                            // 0x320(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                LowerBodyMeshComponent;                            // 0x328(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FGGRandomPlayerSequenceEntry>  Animations;                                        // 0x330(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bCanEditAnimations;                                // 0x340(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOnlyPickOneAnimation;                             // 0x341(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23C1[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AnimStartWait;                                     // 0x344(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AnimStartWaitDeviation;                            // 0x348(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         PlayPreviewAnimation;                              // 0x34C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRandomizeAppearance;                              // 0x34D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLockAppearanceAfterGeneration;                    // 0x34E(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGender                           RandomizeWithGender;                               // 0x34F(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPrioritizeAreaParts;                              // 0x350(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23C3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          AppearanceAreaTag;                                 // 0x354(0x8)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23C4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FWeightedElement_GameplayTag>  AppearanceAreaTags;                                // 0x360(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FPredeterminedElement>         PredeterminedElements;                             // 0x370(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        AppearanceSetsToUse;                               // 0x380(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bHasLockedAppearance;                              // 0x390(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_23C5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          LockedAreaTag;                                     // 0x394(0x8)(Edit, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_23C6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        LockedAppearance;                                  // 0x3A0(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	enum class EGender                           LockedGender;                                      // 0x3B0(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_23C7[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  LockedName;                                        // 0x3B8(0x18)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          LockedVoiceIdentity;                               // 0x3D0(0x8)(Edit, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               NPCScale;                                          // 0x3D8(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23C8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FWeightedElement_Mood>         StartMoods;                                        // 0x3E8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGameplayTag>                  VOIDsToChooseFrom;                                 // 0x3F8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TSubclassOf<class AGGNPC>                    NPCClass;                                          // 0x408(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         RoamAfterDisturbed;                                // 0x410(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23C9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class ERoamAfterDisturbed>       ValidRoamingSwitchReasons;                         // 0x418(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         CanChangeMood;                                     // 0x428(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bKeepClaimedByWhenRoam;                            // 0x429(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanStumble;                                       // 0x42A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanProximityReact;                                 // 0x42B(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUpperBodyReactionsWhenStationary;                 // 0x42C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanPanic;                                         // 0x42D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUpperBodyPanicWhenStationary;                     // 0x42E(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideValidReactions;                           // 0x42F(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 ValidReactTypes;                                   // 0x430(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                         bOverrideIgnoredReactions;                         // 0x450(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23CB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 IgnoredReactTypes;                                 // 0x458(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                         bOverrideIgnoredStartleContexts;                   // 0x478(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23CC[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 IgnoredStartleContexts;                            // 0x480(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                         bCanBeAnnoyedByGoat;                               // 0x4A0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideCanPlayAnnoyanceAnimations;               // 0x4A1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanPlayAnnoyanceAnimations;                       // 0x4A2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideChanceToBecomeAngry;                      // 0x4A3(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ChanceToBecomeAngry;                               // 0x4A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AnnoyanceDistanceOverride;                         // 0x4A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CloseDistanceOverride;                             // 0x4AC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MildlyAnnoyanceThresholdTimeOverride;              // 0x4B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SeriouslyAnnoyanceThresholdTimeOverride;           // 0x4B4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class AActor>                 LookAtActorOverride;                               // 0x4B8(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanRandomlyLookAtNPC;                             // 0x4E0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23CE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ChanceToLookAtNPC;                                 // 0x4E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanRandomlyLookAtGoat;                            // 0x4E8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23CF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ChanceToLookAtGoat;                                // 0x4EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOnlyRelevantWhenPActorIsUnmoved;                  // 0x4F0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23D1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PActorUnmovedLocDelta;                             // 0x4F4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PActorUnmovedRotDelta;                             // 0x4F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSetPActorsDefaultToNoSimulation;                  // 0x4FC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23D2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSoftObjectPtr<class AGGPhysicsActor_Base>> PhysSimStartIgnoredByPActors;                      // 0x500(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                         bIsImportantSpawner;                               // 0x510(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23D4[0x17];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bPreventSpawnUntilNextLoad;                        // 0x528(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23D5[0x17];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UBehaviorTree*                         StationaryTree;                                    // 0x540(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBehaviorTree*                         BehaviorOverride;                                  // 0x548(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Notes;                                             // 0x550(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldDefaultToIdleNPC;                           // 0x558(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23D6[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class AActor>                 ActorA;                                            // 0x560(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class AActor>                 ActorB;                                            // 0x588(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FWeightedElement_BehaviorActor> ActorArrayA;                                       // 0x5B0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FWeightedElement_SoftActor>    ActorArrayB;                                       // 0x5C0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        Radius;                                            // 0x5D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawPreviewRadius;                                // 0x5D4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23D8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Duration;                                          // 0x5D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DurationDeviation;                                 // 0x5DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInOrder;                                          // 0x5E0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSkipTakenWaypoint;                                // 0x5E1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanEditSets;                                      // 0x5E2(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCanEditBehaviorOverride;                          // 0x5E3(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bManuallySetEditRules;                             // 0x5E4(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCanEditShouldDefaultIdleNPC;                      // 0x5E5(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCanEditActorA;                                    // 0x5E6(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCanEditActorB;                                    // 0x5E7(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCanEditActorArrayA;                               // 0x5E8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCanEditActorArrayB;                               // 0x5E9(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCanEditRadius;                                    // 0x5EA(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCanEditDuration;                                  // 0x5EB(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCanEditDurationDeviation;                         // 0x5EC(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCanEditInOrder;                                   // 0x5ED(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCanEditSkipTaken;                                 // 0x5EE(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_23DA[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGNPC*                                ClaimedBy;                                         // 0x5F0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AGGNPCSpawner_Environment* GetDefaultObj();

	void ResetLockedAppearance();
	bool IsPActorsUnmoved();
	bool IsClaimedByNPCAtSpawner(float DistanceCheck, bool CheckCustomAnimMode);
	struct FAppearanceSetRow GetSetRow(const class FString& RowName, bool* FoundRow);
	class USkeletalMeshComponent* GetPreviewMeshComp();
	class AGGNPC* GetClaimedBy(bool bEvenIfNotInitialized);
};

// 0x18 (0x328 - 0x310)
// Class Goat2.GGNPCSpawner_Professional
class AGGNPCSpawner_Professional : public AGGNPCSpawner
{
public:
	TArray<struct FWeightedElement_Professional> ProfessionalNPCs;                                  // 0x310(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bCanUseProfessionalSpawnPool;                      // 0x320(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23DD[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGNPCSpawner_Professional* GetDefaultObj();

	class AGGNPC* SpawnNPCElement(const struct FWeightedElement_Professional& Element);
};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGNPCSpawnStatics
class UGGNPCSpawnStatics : public UObject
{
public:

	static class UClass* StaticClass();
	static class UGGNPCSpawnStatics* GetDefaultObj();

	class AGGVehicle* SpawnVehicle(class UObject* WorldContextObject, TSubclassOf<class AGGVehicle> InVehicleClass, const struct FVehicleSpawnParameters& SpawnParams);
	class AGGNPC* SpawnSpecial(class UObject* WorldContextObject, TSubclassOf<class AGGNPC> NPCClass, const struct FNPCSpawnParameters& SpawnParameters);
	class AGGVehicle* SpawnRandomVehicle(class UObject* WorldContextObject, const TArray<TSubclassOf<class AGGVehicle>>& ValidVehicleClasses, const struct FVehicleSpawnParameters& SpawnParams);
	class AGGNPC* SpawnProfessional(class UObject* WorldContextObject, TSubclassOf<class AGGNPC> NPCClass, const struct FNPCSpawnParameters& SpawnParameters);
	class AGGNPC_Animal* SpawnDummyAnimal(class UObject* WorldContextObject, TSubclassOf<class AGGNPC_Animal> NPCClass, const struct FNPCSpawnParameters& SpawnParameters, const TArray<struct FAnimalMaterialCollection>& MaterialOverrides);
	class AGGNPC* SpawnDummy(class UObject* WorldContextObject, TSubclassOf<class AGGNPC> DummyClass, const struct FNPCSpawnParameters& SpawnParameters, bool bGenerateAppearance, enum class EGender GenerateWithGender, const struct FGameplayTag& AppearanceArea, const class FString& AppearanceSet, const TArray<class FString>& NPCAppearanceOverride, const TArray<class FString>& PredeterminedElements);
	class AGGNPC* SpawnCivilian(class UObject* WorldContextObject, const struct FNPCSpawnParameters& SpawnParameters, enum class EGender Gender, const struct FGameplayTag& AppearanceArea, const class FString& AppearanceSet, const TArray<class FString>& NPCAppearanceOverride, const TArray<class FString>& PredeterminedElements);
	class AGGNPC_Animal* SpawnAnimal(class UObject* WorldContextObject, TSubclassOf<class AGGNPC_Animal> NPCClass, const struct FNPCSpawnParameters& SpawnParameters, const TArray<struct FAnimalMaterialCollection>& MaterialOverrides);
};

// 0x18 (0x248 - 0x230)
// Class Goat2.GGNPCTargetLocation
class AGGNPCTargetLocation : public AActor
{
public:
	class USceneComponent*                       RootComp;                                          // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          TargetLocationArea;                                // 0x238(0x8)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LocationWeight;                                    // 0x240(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23ED[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGNPCTargetLocation* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGNPCTypes
class UGGNPCTypes : public UObject
{
public:

	static class UClass* StaticClass();
	static class UGGNPCTypes* GetDefaultObj();

};

// 0xA0 (0x2D0 - 0x230)
// Class Goat2.GGNPCVisualizer
class AGGNPCVisualizer : public AActor
{
public:
	int32                                        CurrentHeadRowIndex;                               // 0x230(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentHeadMaterialRowIndex;                       // 0x234(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentUpperBodyRowIndex;                          // 0x238(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentUpperBodyMaterialRowIndex;                  // 0x23C(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentLowerBodyRowIndex;                          // 0x240(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentLowerBodyMaterialRowIndex;                  // 0x244(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentHairRowIndex;                               // 0x248(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentHairMaterialRowIndex;                       // 0x24C(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentAccessoryRowIndex;                          // 0x250(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentAccessoryMaterialRowIndex;                  // 0x254(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  Hair;                                              // 0x258(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                Head;                                              // 0x260(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                UpperBody;                                         // 0x268(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                LowerBody;                                         // 0x270(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMeshComponent*                        AccessoryMesh;                                     // 0x278(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USpringArmComponent*                   CameraSpringArm;                                   // 0x280(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCameraComponent*                      VisualizerCamera;                                  // 0x288(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneCaptureComponent2D*              VisualizerCaptureCompoenent;                       // 0x290(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            HeadsTable;                                        // 0x298(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            HairsTable;                                        // 0x2A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            UpperBodiesTable;                                  // 0x2A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            LowerBodiesTable;                                  // 0x2B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            AccessoriesTable;                                  // 0x2B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        AppearanceArray;                                   // 0x2C0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AGGNPCVisualizer* GetDefaultObj();

	void GoToNextUpperBody(bool bForward);
	void GoToNextLowerBody(bool bForward);
	void GoToNextHead(bool bForward);
	void GoToNextHair(bool bForward);
	void GoToNextAccessory(bool bForward);
	enum class EGender GetVisualizerGender();
	TArray<class FString> GetAppearanceArray();
};

// 0xD8 (0x308 - 0x230)
// Class Goat2.GGNPCWaypoint
class AGGNPCWaypoint : public AActor
{
public:
	class USceneComponent*                       RootComp;                                          // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_23F6[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bEnabled;                                          // 0x240(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23F7[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 WaypointTags;                                      // 0x248(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	enum class ERotationSetting                  RotationSetting;                                   // 0x268(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23F8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WaypointWaitTime;                                  // 0x26C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WaypointWaitDeviation;                             // 0x270(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisplayInGame;                                    // 0x274(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAnimationSetting                 AnimationSettings;                                 // 0x275(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23F9[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          Montage;                                           // 0x278(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StartCallbackID;                                   // 0x280(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CallbackID;                                        // 0x284(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 CallbackTags;                                      // 0x288(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                         bMontageBlocking;                                  // 0x2A8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23FA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGGRandomPlayerSequenceEntry>  Animations;                                        // 0x2B0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMontageElement>               MontageArray;                                      // 0x2C0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        PreAnimationWaitTime;                              // 0x2D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23FB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class AActor>                 LookAtOverride;                                    // 0x2D8(0x28)(Edit, BlueprintVisible, DisableEditOnTemplate, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LookAtDistance;                                    // 0x300(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanEditAnim;                                      // 0x304(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCanEditMontage;                                   // 0x305(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCanEditAnimations;                                // 0x306(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCanEditMontageArray;                              // 0x307(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AGGNPCWaypoint* GetDefaultObj();

	void NPCReachedWaypoint(class AGGNPC_Humanoid* NPC);
	void BehaviorCallback(class AGGNPC_Humanoid* NPC, int32 ID, const struct FGameplayTag& Tag);
};

// 0x0 (0x308 - 0x308)
// Class Goat2.GGNPCWaypoint_Environmental
class AGGNPCWaypoint_Environmental : public AGGNPCWaypoint
{
public:

	static class UClass* StaticClass();
	static class AGGNPCWaypoint_Environmental* GetDefaultObj();

};

// 0x0 (0x308 - 0x308)
// Class Goat2.GGNPCWaypoint_WorldInteraction
class AGGNPCWaypoint_WorldInteraction : public AGGNPCWaypoint
{
public:

	static class UClass* StaticClass();
	static class AGGNPCWaypoint_WorldInteraction* GetDefaultObj();

};

// 0x28 (0x160 - 0x138)
// Class Goat2.GGObjectControlInputComponent
class UGGObjectControlInputComponent : public UInputComponent
{
public:
	class AGGPlayerController*                   OwnerPlayer;                                       // 0x138(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGGoat*                               OwnerPlayerGoat;                                   // 0x140(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UObject*                               ControlledObject;                                  // 0x148(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                ViewTarget;                                        // 0x150(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2401[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGObjectControlInputComponent* GetDefaultObj();

	void ToRagdollEvent(class ULSCharacterMovementComponent* MovementComp, class ACharacter* RagdollingCharacter, struct FRagdollStateChangeSettings& StateChangeSettings);
	void OnCharacterRespawned(class AGGCharacter* OldCharacter, class AGGCharacter* NewCharacter);
	void OnCharacterExitedVehicle(class AGGCharacter* Character, class AGGVehicle* Vehicle);
	void OnCharacterEnteringVehicle(class AGGCharacter* Character, class AGGVehicle* Vehicle);
};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGObjectControlInterface
class IGGObjectControlInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IGGObjectControlInterface* GetDefaultObj();

	bool WalkUp();
	bool WalkDown();
	bool Turn(float Rate);
	bool ToggleSlowMotionUp();
	bool ToggleSlowMotionDown();
	bool ToggleRagdoll();
	bool SprintUp();
	bool SprintDown();
	bool Sprint(float Value);
	bool SpinToggleUp();
	bool SpinToggleDown();
	bool SlowMotion();
	bool ScrollUp();
	bool ScrollDown();
	bool RagdollUp();
	bool RagdollDown();
	bool ObjectControlStarted(class AGGPlayerController* Player);
	bool ObjectControlEnded();
	bool MoveUp(float Value);
	bool MoveRight(float Value);
	bool MoveForward(float Value);
	bool LookUp(float Rate);
	bool LickAbilityUp();
	bool LickAbilityDown();
	bool InteractUp();
	bool InteractDown();
	bool InputKeyReleased(const struct FKey& Key);
	bool InputKeyPressed(const struct FKey& Key);
	bool HeadbuttUp();
	bool HeadbuttDown();
	bool GoatBaaUp();
	bool GoatBaaDown();
	enum class EPostProcessCameraContext GetPostProcessCameraContext();
	bool CharacterStopJumping();
	bool CharacterJump();
	bool AbilityUp();
	bool AbilityDown();
};

// 0xD8 (0x308 - 0x230)
// Class Goat2.GGOdenAbilityBeam
class AGGOdenAbilityBeam : public AActor
{
public:
	class USceneComponent*                       Root;                                              // 0x230(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                         Collider;                                          // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneCaptureComponent2D*              SceneCaptureComponent;                             // 0x240(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetComponent*                      WidgetComp;                                        // 0x248(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>               WidgetClass;                                       // 0x250(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxDistanceToStopBeamConenction;                   // 0x258(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2428[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            BeamSound;                                         // 0x260(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       BeamParticle;                                      // 0x268(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               PActorLocation;                                    // 0x270(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              PActorRotaion;                                     // 0x27C(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        RandomInfo;                                        // 0x288(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    DefaultTextureMaterial;                            // 0x298(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              TextureMaterial;                                   // 0x2A0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                NearestPactor;                                     // 0x2A8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2429[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                CurrentPactor;                                     // 0x2B8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                OwningGoat;                                        // 0x2C0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_242A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        ActorsInCollider;                                  // 0x2D0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class USceneComponent*                       BeamParticleAttachement;                           // 0x2E0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              BeamComponent;                                     // 0x2E8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAudioComponent*                       BeamingAudioComp;                                  // 0x2F0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextureRenderTarget2D*                TextureTarget;                                     // 0x2F8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_242B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGOdenAbilityBeam* GetDefaultObj();

	void OverlapEnd(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnUpdateOdenWidget(class AActor* Target);
	class FString GetTargetName(class AActor* Target);
	class FString GetRandomInformation();
	void BeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x20 (0x48 - 0x28)
// Class Goat2.GGOnlineAssetCache
class UGGOnlineAssetCache : public UObject
{
public:
	int32                                        MaxCacheSizeBytes;                                 // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_242D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGGCachedOnlineImage>          Images;                                            // 0x30(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_242E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGOnlineAssetCache* GetDefaultObj();

	void SetMaxCacheSize(int32 NumBytes);
	int32 GetMaxCacheSize();
	class UTexture* GetImage(const class FString& URL);
	void CacheImage(const class FString& URL, class UTexture* Image);
};

// 0x608 (0x630 - 0x28)
// Class Goat2.GGOnlineConsoleOSSSessionManager
class UGGOnlineConsoleOSSSessionManager : public UObject
{
public:
	uint8                                        Pad_2438[0x1F0];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGLocalPlayer*                        OwningLocalPlayer;                                 // 0x218(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2439[0x410];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGOnlineConsoleOSSSessionManager* GetDefaultObj();

	void OnUpdateLastWorldCollectionLoaded();
	void OnStretchGoalChangedState(class AGGCastleStretchGoal* Goal, enum class EStretchGoalStates State, enum class EStateChangeSource Source);
	void OnSplitScreenStarted();
	void OnSplitScreenEnded();
	void OnNetworkErrorPopupResponse(const class FString& ID, class UObject* Object, const class FString& ButtonID, enum class EPopupResponse Response);
	void OnLeaveSplitScreenForInviteResponse(const class FString& ID, class UObject* Object, const class FString& ButtonID, enum class EPopupResponse Response);
	void OnGoOnlinePopupResponse(const class FString& ID, class UObject* Object, const class FString& ButtonID, enum class EPopupResponse Response);
	void OnGeneralNetworkSettingChange(struct FGGGameSetting* InSetting);
	void HandleDisconnect(class UWorld* InWorld, class UNetDriver* NetDriver);
};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGOnlineFunctionLibrary
class UGGOnlineFunctionLibrary : public UObject
{
public:

	static class UClass* StaticClass();
	static class UGGOnlineFunctionLibrary* GetDefaultObj();

	void UpdateGameSessionSettings(class UObject* WorldContextObject);
	void ToggleRemotePlayerVoiceChat(class UObject* WorldContextObject, const struct FUniqueNetIdRepl& UserUniqueNetId);
	void ToggleLocalPlayerVoiceChat(class UObject* WorldContextObject, FDelegateProperty_ OnToggleLocalPlayerVoiceChatComplete);
	void StartLevelOffline(class UObject* WorldContextObject, const class FString& DestinationLevel, const class FString& Options);
	void ShowProfileUI(class UObject* WorldContextObject, const struct FUniqueNetIdRepl& UserNetId);
	bool ShouldShowEpicUnLinkAccount(class UObject* WorldContextObject);
	bool ShouldShowEpicLinkAccount(class UObject* WorldContextObject);
	void SetUpLocalPlayerVoiceChat(class UObject* WorldContextObject, const class FString& OverrideValue);
	void SetMultiplayerLocked(class UObject* WorldContextObject, bool bNewLocked);
	void SetMainMenuStartingLevel(class UObject* WorldContextObject, bool bIsStarting);
	void SetLobbyPrivacySetting(class UObject* WorldContextObject, enum class ELobbyPrivacySetting NewSetting);
	void SendLobbyInvite(class UObject* WorldContextObject, const struct FUniqueNetIdRepl& UserNetId);
	void SendBeaconChatMessage(class UObject* WorldContextObject, const class FString& ChatMessage);
	void SearchForLobbies(class UObject* WorldContextObject);
	void RejectLobbyInvite(class UObject* WorldContextObject, const class FString& InviteId);
	void RejectAllLobbyInvites(class UObject* WorldContextObject);
	void ReadFriendList(class UObject* WorldContextObject);
	void PromoteMember(class UObject* WorldContextObject, const struct FUniqueNetIdRepl& MemberNetId);
	void PrepareNavigationToFriendsMenu(class UObject* WorldContextObject, FDelegateProperty_ OnFriendsMenuNavigationPreparationComplete);
	void LogoutAndForget(class UObject* WorldContextObject);
	void Logout(class UObject* WorldContextObject);
	void LoginAndConnectAccount(class UObject* WorldContextObject);
	void LobbyStartLevel(class UObject* WorldContextObject, const class FString& DestinationLevel, const class FString& Options);
	void LeaveLobby(class UObject* WorldContextObject);
	void KickMember(class UObject* WorldContextObject, const struct FUniqueNetIdRepl& MemberNetId);
	void JoinLobbyWithJoinCode(class UObject* WorldContextObject, const class FString& JoinCode);
	void JoinLobby_SearchResult(class UObject* WorldContextObject, const class FString& LobbyId);
	void JoinLobby_FindWithId(class UObject* WorldContextObject, const class FString& LobbyId, const struct FUniqueNetIdRepl& FriendNetId, bool bBypassVersionCheck);
	void JoinLobby_CurrentInvite(class UObject* WorldContextObject, const class FString& InviteId);
	bool IsValidLobbyMember(struct FGGLobbyMember& InLobbyMember);
	bool IsValidFriend(struct FGGOnlineFriend& InOnlineFriend);
	bool IsUserOnline(class UObject* WorldContextObject, bool* IsCreatingLobby, bool* IsInSplitScreen);
	bool IsStartingSession(class UObject* WorldContextObject);
	bool IsSearchingForSessions(class UObject* WorldContextObject);
	bool IsRunningOnSteamDeck(class UObject* WorldContextObject);
	bool IsRemotePlayerMuted(class UObject* WorldContextObject, const struct FUniqueNetIdRepl& UserUniqueNetId);
	bool IsReadingFriendList(class UObject* WorldContextObject);
	bool IsPlayingOffline(class UObject* WorldContextObject);
	bool IsPlayerConnectedToInternet(class UObject* WorldContextObject);
	bool IsOnlineManagerBusy(class UObject* WorldContextObject, bool bConsiderLoggingInAsBusy);
	bool IsNetIdMemberOfLobby(class UObject* WorldContextObject, const struct FUniqueNetIdRepl& UserUniqueNetId, struct FGGLobbyMember* FoundMember);
	bool IsNetIdLobbyOwner(class UObject* WorldContextObject, const struct FUniqueNetIdRepl& UserUniqueNetId);
	bool IsMultiplayerLocked(class UObject* WorldContextObject);
	bool IsMainMenuStartingLevel(class UObject* WorldContextObject);
	bool IsLowendMobileDevice(class UObject* WorldContextObject);
	bool IsLoggingIn(class UObject* WorldContextObject);
	bool IsLoggedInMobile(class UObject* WorldContextObject);
	bool IsLoggedIn(class UObject* WorldContextObject);
	bool IsLocalPlayerMuted(class UObject* WorldContextObject);
	bool IsLocalLobbyMember(class UObject* WorldContextObject, const struct FUniqueNetIdRepl& UserUniqueNetId);
	bool IsLocalAccountUser(class UObject* WorldContextObject, struct FUniqueNetIdRepl& UserNetId);
	bool IsInMainMenu(class UObject* WorldContextObject);
	bool IsInLobby(class UObject* WorldContextObject, bool* bIsOwner);
	bool IsHostTimingOut(class UObject* WorldContextObject, float DeltaTimeCheck);
	bool IsHostStartingServer(class UObject* WorldContextObject);
	bool IsForcedAlwaysOnline(class UObject* WorldContextObject);
	bool IsEpicAccountLinked(class UObject* WorldContextObject);
	bool IsEOSHeadlessAccount(class UObject* WorldContextObject);
	bool IsEndingSession(class UObject* WorldContextObject);
	bool IsClientTimingOut(class UObject* WorldContextObject, float DeltaTimeCheck);
	bool HasValidChatBeaconConnection(class UObject* WorldContextObject);
	bool HasLoginTimedOut(class UObject* WorldContextObject);
	bool HasDummyLobby(class UObject* WorldContextObject);
	bool HasDummyFriends(class UObject* WorldContextObject);
	class FString GetUsername(class UObject* WorldContextObject);
	struct FUniqueNetIdRepl GetUniqueNetIDReplFromPlayerState(class AGGPlayerState* PlayerState);
	struct FUniqueNetIdRepl GetUniqueNetIDRepl(class UObject* WorldContextObject, bool bWarnIfNotLoggedIn);
	class AGGPlayerState* GetPlayerStateFromUniqueNetId(class UObject* WorldContextObject, const struct FUniqueNetIdRepl& UserNetId);
	bool GetOnlineFriendWithUsername(class UObject* WorldContextObject, const class FString& UserName, struct FGGOnlineFriend* OutFriend);
	bool GetOnlineFriendFromPlayerState(class APlayerState* PlayerState, struct FGGOnlineFriend* OutFriend);
	bool GetOnlineFriend(class UObject* WorldContextObject, const struct FUniqueNetIdRepl& UserNetId, struct FGGOnlineFriend* OutFriend);
	enum class ELoginState GetLoginState(class UObject* WorldContextObject);
	enum class ELobbyPrivacySetting GetLobbyPrivacySetting(class UObject* WorldContextObject);
	TArray<struct FGGLobbyMember> GetLobbyMembers(class UObject* WorldContextObject);
	bool GetLobbyMemberObjectArray(class UObject* WorldContextObject, TArray<class UGGLobbyMemberObject*>* OutLobbyMembers, class UObject* Owner);
	class FString GetJoinCode(class UObject* WorldContextObject);
	class FString GetGamerPicUri(class UObject* WorldContextObject);
	bool GetFriendObjectArray(class UObject* WorldContextObject, TArray<class UGGOnlineFriendObject*>* OutFriends, class UObject* Owner);
	bool GetFriendListObjects(class UObject* WorldContextObject, const TArray<class UObject*>& OutFriends);
	bool GetFriendList(class UObject* WorldContextObject, TArray<struct FGGOnlineFriend>* OutFriends);
	TArray<struct FGGLobbyInformation> GetFoundLobbies(class UObject* WorldContextObject);
	struct FGGLobbyInformation GetCurrentLobby(class UObject* WorldContextObject);
	enum class EGGCachedNATType GetCachedNat(class UObject* WorldContextObject);
	void GenerateJoinCode(class UObject* WorldContextObject, FDelegateProperty_ OnJoinCodeCreatedDelegate);
	bool DoesEveryoneOwn(class UObject* WorldContextObject, enum class EGoatDLC DLC);
	void CreateLobbyAndStartLevel(class UObject* WorldContextObject, const class FString& Destination, const class FString& Options);
	void CreateLobbyAndInviteUser(class UObject* WorldContextObject, const struct FUniqueNetIdRepl& UserToInvite);
	void CreateLobby(class UObject* WorldContextObject);
	bool CompareUniqueNetIdRepls(struct FUniqueNetIdRepl& Lhs, struct FUniqueNetIdRepl& Rhs);
	bool CompareOnlineFriendObjects(class UGGOnlineFriendObject* Friend, class UGGOnlineFriendObject* Other);
	void ClearCachedFriendList(class UObject* WorldContextObject);
	void CheckPrivilege(class UObject* WorldContextObject, enum class EQueryPrivilege Privilege, FDelegateProperty_ OnPrivilegeChecked);
	void CheckOnlinePlayEnabled(class UObject* WorldContextObject, FDelegateProperty_ OnOnlinePlayEnabledChecked);
	bool CanCreateLobby(class UObject* WorldContextObject);
};

// 0x718 (0x740 - 0x28)
// Class Goat2.GGOnlineManager
class UGGOnlineManager : public UObject
{
public:
	uint8                                        Pad_2503[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            Delegate_OnFailedToStartLevel;                     // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2504[0xF0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            Delegate_OnLoginTimedOut;                          // 0x138(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2505[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnLoginStateChanged;                               // 0x198(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnLoggedInAndCheckedOwnership;                     // 0x1A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnAccountLinkingComplete;                          // 0x1B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UGGOnlineConsoleOSSSessionManager*     ConsoleSessionManager;                             // 0x1C8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2506[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGGLobbyInformation                   CurrentLobby;                                      // 0x1D8(0xC0)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_2507[0xF8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            Delegate_OnCreatedLobby;                           // 0x390(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            Delegate_OnJoinedLobby;                            // 0x3A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            Delegate_OnLeftLobby;                              // 0x3B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2508[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            Delegate_OnLobbySearchFailed;                      // 0x3D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            Delegate_OnUserPromotedToOwner;                    // 0x3E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            Delegate_UnlockNetworkSettings;                    // 0x3F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            Delegate_OnLobbyUpdated;                           // 0x400(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            Delegate_OnReceivedLobbyInvite;                    // 0x410(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            Delegate_OnLobbyMemberJoined;                      // 0x420(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            Delegate_OnLobbyMemberLeft;                        // 0x430(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            Delegate_OnClientStartedTravel;                    // 0x440(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_250A[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bKeepPartyWhenReturningToTitle;                    // 0x480(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_250B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            Delegate_OnSessionDestroyed;                       // 0x488(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_250D[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            Delegate_OnSessionPermissionUpdated;               // 0x4C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_250E[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            Delegate_OnFriendListRead;                         // 0x520(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            Delegate_OnFriendPresenceUpdated;                  // 0x530(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            Delegate_OnFriendListUpdated;                      // 0x540(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_250F[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AOnlineBeaconHost*                     ChatBeaconHost;                                    // 0x578(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGChatBeaconHost*                     ChatBeaconHostObject;                              // 0x580(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGChatBeaconClient*                   ChatBeaconClient;                                  // 0x588(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2510[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnNatTypeUpdated;                                  // 0x598(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2511[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FQueuedOnlinePopups>           QueuedOnlinePopups;                                // 0x5C8(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UGGOnlineAssetCache*                   OnlineAssetCache;                                  // 0x5D8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2512[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGLocalPlayer*                        OwnerLocalPlayer;                                  // 0x5E8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGGameInstance*                       GameInstance;                                      // 0x5F0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2513[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            Delegate_OnPlayerTalkingStateChanged;              // 0x600(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2514[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            Delegate_OnActivityIntentReceived;                 // 0x618(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2515[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGMobileOnlineManager*                MobileOnlineManager;                               // 0x640(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2516[0x98];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnPrivacySettingsChanged;                          // 0x6E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2519[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGSteamFriendsManager*                SteamFriendsManager;                               // 0x700(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_251A[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGOnlineManager* GetDefaultObj();

	void UpdatePresence();
	void UpdateCachedFriendsList();
	void StartClientTravel(const class FString& TravelURL);
	void SetOnlineAssetCacheSize(int32 NumBytes);
	void SessionMemberRemoved(struct FUniqueNetIdRepl& UserId, bool bIsLobbyOwner);
	void SessionMemberAdded(struct FUniqueNetIdRepl& UserId, bool bIsLobbyOwner);
	void SearchForLobbyWithJoinCodeCompleted(bool bSuccess, const TArray<struct FGGLobbyInformation>& InFoundLobbies);
	void SearchForLobbyCompleted_CheckJoinCode(bool bSuccess, const TArray<struct FGGLobbyInformation>& InFoundLobbies);
	void SchedulePresenceUpdate(float NextUpdate);
	void ReadPrivilegePopupResponse(const class FString& ID, class UObject* Object, const class FString& ButtonID, enum class EPopupResponse Response);
	void ReadPopupResponse(const class FString& ID, class UObject* Object, const class FString& ButtonID, enum class EPopupResponse Response);
	void ReadFirstRunPopupResponse(const class FString& ID, class UObject* Object, const class FString& ButtonID, enum class EPopupResponse Response);
	void PreLoadMap(const class FString& MapName);
	void PostLoadMapWithWorld(class UWorld* World);
	void OnTravelFailure(class UWorld* World, enum class ETravelFailure FailureType, const class FString& ErrorMessage);
	void OnSteamSessionInviteAcceptSuccess();
	void OnSteamPrivacyUpdated(enum class ELobbyPrivacySetting Privacy);
	void OnSteamPresenceUpdated(struct FUniqueNetIdRepl& UniqueNetId);
	void OnSteamFriendsUpdated();
	void OnSteamFriendsListRead(bool bSuccess);
	void OnSessionUnlocked();
	void OnSessionMembersInfoUpdate(const TArray<struct FUniqueNetIdRepl>& UserIds);
	void OnSessionMemberPropertyUpdate(struct FUniqueNetIdRepl& UserId, const class FString& PropertyValue);
	void OnSessionLocked();
	void OnSessionInviteProcessed();
	void OnOverlayJoinAccepted(uint64 UIEventId);
	void OnOverlayInviteAccepted(const class FString& InviteId);
	void OnOtherUserPromoted();
	void OnNetworkFailure(class UWorld* World, class UNetDriver* NetDriver, enum class ENetworkFailure FailureType, const class FString& ErrorMessage);
	void OnMemberAttributeUpdate(bool bSuccess);
	void OnLocalUserPromoted();
	void OnLobbyUpdate(enum class EGGLobbyUpdateType LobbyUpdateType);
	void OnLobbyOwnerUpdated(struct FUniqueNetIdRepl& UserId);
	void OnLobbyInviteReceived(const class FString& InviterName, const class FString& LobbyId);
	void OnLobbyFinishedSearching(bool bSuccess);
	void OnLobbyDestroyed();
	void OnLobbyCreated(bool bSuccess);
	void OnLoadingScreenRemoved(class AGGPlayerController* Controller, enum class ELoadingScreenType InType, enum class ERemovalReason RemovalReason);
	void OnLeftLobby(bool bWasKicked);
	void OnLeaveSplitScreenForInviteResponse(const class FString& ID, class UObject* Object, const class FString& ButtonID, enum class EPopupResponse Response);
	void OnJoinedLobby(bool bIsOwner, bool bSuccess, bool bNotAllowed, class FText Error);
	void OnIntroSplashComplete();
	void OnHostLoadingChange(bool bIsHostLoading);
	void OnFriendSessionFound(struct FUniqueNetIdRepl& SessionMemberId, const class FString& SessionIdStr, int32 NumOfPrivateConnections);
	void OnDLCsUpdated();
	void OnCurrentLobbyInviteTimedOut();
	void OnConsoleSessionMemberUpdated(struct FUniqueNetIdRepl& SessionMemberId, const class FString& SessionMessage);
	bool HasClientStartedTravel();
	class UGGOnlineManager* GetOnlineManager(class UObject* WorldContext);
	enum class EActiveOSSFlags GetActiveSubsystemForUI();
	void EndBossActivity();
	class FString CachedNATTypeString();
};

// 0xF8 (0x360 - 0x268)
// Class Goat2.GGPartyMemberSpawnPoint
class AGGPartyMemberSpawnPoint : public APlayerStart
{
public:
	enum class EInviteButtonType                 InviteButtonType;                                  // 0x268(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_251E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGAlternativeGoatDataAsset*           PreviewAltGoat;                                    // 0x270(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSnapToGround;                                     // 0x278(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2520[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TraceDistance;                                     // 0x27C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGGPlayerInviteWidget>     InviteButtonWidgetClass;                           // 0x280(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               StatusWidgetOffset;                                // 0x288(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableSpawnEffects;                              // 0x294(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGGPartyMemberSpawnType           SpawnType;                                         // 0x295(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2521[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               SpawnLocationOffset;                               // 0x298(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRandomizeSpawnRotation;                           // 0x2A4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2522[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              RandomRotationRangeMin;                            // 0x2A8(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              RandomRotationRangeMax;                            // 0x2B4(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, struct FGGSpawnOffset> AlternativeGoatOffset;                             // 0x2C0(0x50)(Edit, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                MeshComponent;                                     // 0x310(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetComponent*                      InviteButtonWidgetComponent;                       // 0x318(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AGGGoat*                               ClaimedBy;                                         // 0x320(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2524[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        UserIndex;                                         // 0x358(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2525[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGPartyMemberSpawnPoint* GetDefaultObj();

	bool IsClaimed();
	struct FVector GetInviteButtonLocation();
};

// 0x8 (0x268 - 0x260)
// Class Goat2.GGPlayerInviteWidget
class UGGPlayerInviteWidget : public UUserWidget
{
public:
	int32                                        UserIndex;                                         // 0x260(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2526[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGPlayerInviteWidget* GetDefaultObj();

};

// 0x30 (0x290 - 0x260)
// Class Goat2.GGGoatStatusWidget
class UGGGoatStatusWidget : public UUserWidget
{
public:
	bool                                         bIsPrimaryGoat;                                    // 0x260(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2527[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        UserIndex;                                         // 0x264(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                      UniqueNetId;                                       // 0x268(0x28)(BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGGoatStatusWidget* GetDefaultObj();

	void UpdateWidget();
};

// 0x120 (0x350 - 0x230)
// Class Goat2.GGOnlinePartyRepresentation
class AGGOnlinePartyRepresentation : public AActor
{
public:
	class UParticleSystem*                       SpawnInParticles;                                  // 0x230(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            SpawnInSound;                                      // 0x238(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       LeaveGroupParticles;                               // 0x240(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            LeaveGroupSound;                                   // 0x248(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AGGGoat>                   GoatClassToSpawn;                                  // 0x250(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class AGGPartyMemberSpawnPoint> PrimaryGoatSpawnPoint;                             // 0x258(0x28)(Edit, DisableEditOnTemplate, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSoftObjectPtr<class AGGPartyMemberSpawnPoint>> SpawnPoints;                                       // 0x280(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TSubclassOf<class UGGGoatStatusWidget>       GoatStatusWidgetClass;                             // 0x290(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                PrimaryGoatStatusLocation;                         // 0x298(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DelayBetweenGoatSpawns;                            // 0x2A0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bStandUpAfterLanding;                              // 0x2A4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_252F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             StandUpDelayRandomRange;                           // 0x2A8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPauseGameAfterSpawn;                              // 0x2B0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2530[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UBillboardComponent*                   BillboardComponent;                                // 0x2B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGGPartyMemberGoat                    PrimaryGoat;                                       // 0x2C0(0x58)(ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FGGPartyMemberGoat>            PartyMemberGoats;                                  // 0x318(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2531[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGOnlinePartyRepresentation* GetDefaultObj();

	void SetCanShowStatusWidgetComponent(bool bInCanShowStatusWidgetComp);
	void OnSplitscreenPlayersUpdated();
	void OnSplitScreenEnded();
	void OnSessionDestroyed(bool bWasSuccessful);
	void OnLobbyUpdated(enum class EGGLobbyUpdateType LobbyUpdateType);
	void OnLobbyMemberLeft(struct FGGLobbyMember& LobbyMember);
	void OnLeftLobby();
	void CreateStatusWidgetComponentForPrimaryPlayer();
};

// 0x10 (0x48 - 0x38)
// Class Goat2.GGOwnershipSettings
class UGGOwnershipSettings : public UDeveloperSettings
{
public:
	TArray<class FName>                          EOSCatalogItemIDs;                                 // 0x38(0x10)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGOwnershipSettings* GetDefaultObj();

};

// 0xC8 (0xF0 - 0x28)
// Class Goat2.GGOnlineFriendObject
class UGGOnlineFriendObject : public UObject
{
public:
	uint8                                        Pad_2536[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGGOnlineFriend                       Friend;                                            // 0x30(0xC0)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGOnlineFriendObject* GetDefaultObj();

};

// 0xA8 (0xD0 - 0x28)
// Class Goat2.GGLobbyMemberObject
class UGGLobbyMemberObject : public UObject
{
public:
	struct FGGLobbyMember                        LobbyMember;                                       // 0x28(0xA8)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGLobbyMemberObject* GetDefaultObj();

};

// 0x100 (0x128 - 0x28)
// Class Goat2.GGOnRepPoolingSystem
class UGGOnRepPoolingSystem : public UObject
{
public:
	uint8                                        Pad_2538[0xB0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSet<class UFunction*>                       PooledFuncs;                                       // 0xD8(0x50)(NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGOnRepPoolingSystem* GetDefaultObj();

	void MulticastSetIsPoolingActive(bool ActivatePooling);
};

// 0x20 (0x250 - 0x230)
// Class Goat2.GGOnRepPoolTestActor
class AGGOnRepPoolTestActor : public AActor
{
public:
	float                                        Delay;                                             // 0x230(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bBoolA;                                            // 0x234(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bBoolB;                                            // 0x235(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_253B[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RandomFloat;                                       // 0x238(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_253C[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGOnRepPoolingSystem*                 PoolingSystem;                                     // 0x248(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AGGOnRepPoolTestActor* GetDefaultObj();

	void OnRep_RandomFloat();
	void OnRep_BoolB();
	void OnRep_BoolA();
};

// 0xA8 (0x3B0 - 0x308)
// Class Goat2.GGOptionContainerUserWidget
class UGGOptionContainerUserWidget : public UGGUserWidget
{
public:
	FMulticastInlineDelegateProperty_            OnOptionFocused;                                   // 0x308(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnOptionHovered;                                   // 0x318(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class UTextBlock*                            SettingsLabel;                                     // 0x328(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USizeBox*                              OptionWidgetContainer;                             // 0x330(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Background;                                        // 0x338(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGGGameSettingOptionUserWidget> BoolOptionWidgetClass;                             // 0x340(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGGGameSettingOptionUserWidget> SliderOptionWidgetClass;                           // 0x348(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGGGameSettingOptionUserWidget> MultipleOptionsOptionWidgetClass;                  // 0x350(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGGGameSettingOptionUserWidget> DropdownOptionWidgetClass;                         // 0x358(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGGGameSettingOptionUserWidget> ButtonOptionWidgetClass;                           // 0x360(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGGOptionInputUserWidget>  InputRebindWidgetClass;                            // 0x368(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_253F[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGGameSettingOptionUserWidget*        OptionWidget;                                      // 0x3A0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGSettingsTabMenuUserWidget*          ParentSettingTab;                                  // 0x3A8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGGOptionContainerUserWidget* GetDefaultObj();

	class FText GetFormattedLabelText();
};

// 0xA8 (0x418 - 0x370)
// Class Goat2.GGOptionInputUserWidget
class UGGOptionInputUserWidget : public UGGGameSettingOptionUserWidget
{
public:
	class UGGButton*                             InputKeySelectorButton;                            // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGRichTextBlock*                      KeyboardInputButtonShower;                         // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGRichTextBlock*                      MouseInputButtonShower;                            // 0x380(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGRichTextBlock*                      GamepadInputButtonShower;                          // 0x388(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGButtonUserWidget*                   ResetButton;                                       // 0x390(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  ButtonInputTemplate;                               // 0x398(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSubclassOf<class UGGKeyRebindPopupUserWidget> PopUpClass;                                        // 0x3B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_254B[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGPopupUserWidget*                    PopupUserWidget;                                   // 0x3F8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_254C[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bHasKeyboardBinding;                               // 0x410(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bHasMouseBinding;                                  // 0x411(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bHasGamepadBinding;                                // 0x412(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_254D[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGOptionInputUserWidget* GetDefaultObj();

	void UpdateInputBindingTypes();
	void UpdateButtonText();
	void OnResetButtonPressed(class UGGUserWidget* Widget, const struct FPointerEvent& PointerEvent, const struct FKeyEvent& KeyEvent);
	void OnKeySelectorButtonPressed();
	void OnGamepadChanged(bool bIsUsingGamepad);
	void KeyRebindPopUpResponds(const class FString& ID, class UObject* Object, const class FString& ButtonID, enum class EPopupResponse Response);
	bool IsPlayerUsingAGamepad();
	bool HasAnyConflictingAction();
	class FText GetKeySymbolForInputChord(struct FInputChord& InputChord);
	class FText GetInputButtonSymbol(const class FString& InputType);
	void ConflictingDefaultBindingPopupRespond(const class FString& ID, class UObject* Object, const class FString& ButtonID, enum class EPopupResponse Response);
};

// 0x68 (0x2C8 - 0x260)
// Class Goat2.GGOverlayLayers
class UGGOverlayLayers : public UUserWidget
{
public:
	TArray<struct FGameplayTag>                  LayerTags;                                         // 0x260(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_254F[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGOverlayLayers* GetDefaultObj();

};

// 0x108 (0x130 - 0x28)
// Class Goat2.GGPactorAssetUserData
class UGGPactorAssetUserData : public UAssetUserData
{
public:
	struct FGGNamedActorInfo                     NameInfo;                                          // 0x28(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FPhysicsActorImpactSettings           ImpactSettings;                                    // 0x50(0xC0)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 PActorIdentifierTags;                              // 0x110(0x20)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGPactorAssetUserData* GetDefaultObj();

};

// 0x8 (0xEF0 - 0xEE8)
// Class Goat2.GGPActorSkeletalMeshComponent
class UGGPActorSkeletalMeshComponent : public USkeletalMeshComponent
{
public:
	float                                        DisableNavMeshThreshold;                           // 0xEE8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2551[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGPActorSkeletalMeshComponent* GetDefaultObj();

};

// 0x48 (0x5D0 - 0x588)
// Class Goat2.GGPActorStaticMeshComponent
class UGGPActorStaticMeshComponent : public UStaticMeshComponent
{
public:
	float                                        DisableNavMeshThreshold;                           // 0x588(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2552[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bHasCachedNavBounds;                               // 0x58E(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2553[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UNavArea>                  CachedNavArea;                                     // 0x590(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FBox>                          CachedNavBounds;                                   // 0x598(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, NativeAccessSpecifierPrivate)
	struct FBoxSphereBounds                      CachedNavBound;                                    // 0x5A8(0x1C)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2554[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGPActorStaticMeshComponent* GetDefaultObj();

};

// 0x28 (0x258 - 0x230)
// Class Goat2.GGPaperboyDropOffPoint
class AGGPaperboyDropOffPoint : public AActor
{
public:
	uint8                                        Pad_255B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       SceneRootComponent;                                // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        PaperboyPointCooldown;                             // 0x240(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_255C[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGPaperboyDropOffPoint* GetDefaultObj();

	void WasUsedByPaperboy(class AGGNPC* UsedByNPC);
	bool Interact(class AActor* SourceActor, float HeldFor);
	bool CanPointBeUsedBy(class AGGNPC* NPC);
	bool CanBeInteractedWith(class AActor* SourceActor);
};

// 0x10 (0x40 - 0x30)
// Class Goat2.GGParticleModuleLocationSMVertex
class UGGParticleModuleLocationSMVertex : public UParticleModuleLocationBase
{
public:
	class FName                                  StaticMeshComponentActorParamName;                 // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESelectionType                    SelectionType;                                     // 0x38(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_255E[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGParticleModuleLocationSMVertex* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class Goat2.GGParticleModuleLocationSpline
class UGGParticleModuleLocationSpline : public UParticleModuleLocationBase
{
public:
	class FName                                  SplineComponentActorParamName;                     // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESplineSpawnType                  SplineSpawnType;                                   // 0x38(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_255F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FollowSplineStep;                                  // 0x3C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGParticleModuleLocationSpline* GetDefaultObj();

};

// 0x28 (0x580 - 0x558)
// Class Goat2.GGParticleSplineComponent
class UGGParticleSplineComponent : public USplineComponent
{
public:
	enum class EValidSectionType                 ValidSectionType;                                  // 0x558(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2563[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FParticleSplineSection>        ValidSplineSections;                               // 0x560(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<struct FWeightedElement_SplineSection> WeightedSplineSections;                            // 0x570(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGGParticleSplineComponent* GetDefaultObj();

	bool IsInputKeyValid(float InputKey);
	bool IsDistanceValid(float InDistance);
	void ClearValidParticleRanges();
	void AddNewValidParticleRange(float StartValue, float EndValue);
};

// 0x0 (0x250 - 0x250)
// Class Goat2.GGPathFollowingComponent
class UGGPathFollowingComponent : public UPathFollowingComponent
{
public:

	static class UClass* StaticClass();
	static class UGGPathFollowingComponent* GetDefaultObj();

};

// 0x8 (0x4F8 - 0x4F0)
// Class Goat2.GGPauseMenu
class UGGPauseMenu : public UGGMenuUserWidget
{
public:
	class AGGGoat*                               OwningGoat;                                        // 0x4F0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGGPauseMenu* GetDefaultObj();

	void OnOwningGoatRespawned(class AGGCharacter* OldCharacter, class AGGCharacter* NewCharacter);
	void OnCharacterTeleported(class AGGCharacter* Character, struct FTransform& OldTransform);
};

// 0x510 (0x538 - 0x28)
// Class Goat2.GGPerformanceTracker
class UGGPerformanceTracker : public UObject
{
public:
	uint8                                        Pad_256A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGTelemetrySubsystem*                 TelemetrySubsystem;                                // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                LastKnownGraphicsSettings;                         // 0x38(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_256B[0x4F0];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGPerformanceTracker* GetDefaultObj();

	void DispatchGraphicsSettingsState();
};

// 0x10 (0x290 - 0x280)
// Class Goat2.GGPerPlatformCullDistanceVolume
class AGGPerPlatformCullDistanceVolume : public ACullDistanceVolume
{
public:
	TArray<struct FCullDistanceSizePair>         MobileCullDistances;                               // 0x280(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AGGPerPlatformCullDistanceVolume* GetDefaultObj();

};

// 0x130 (0x360 - 0x230)
// Class Goat2.GGPersonalHackerBeam
class AGGPersonalHackerBeam : public AActor
{
public:
	class USceneComponent*                       Root;                                              // 0x230(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                         Collider;                                          // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneCaptureComponent2D*              SceneCaptureComponent;                             // 0x240(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetComponent*                      WidgetComp;                                        // 0x248(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>               WidgetClass;                                       // 0x250(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxDistanceToStopBeamConenction;                   // 0x258(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NPCBeamTargetSocketName;                           // 0x25C(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  OtherGoatBeamTargetSocketName;                     // 0x264(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2582[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            BeamSound;                                         // 0x270(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       BeamParticle;                                      // 0x278(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               NewHumanoidLocationFromHead;                       // 0x280(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              NewHumanoidRotationFromHead;                       // 0x28C(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	int32                                        MinAge;                                            // 0x298(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxAge;                                            // 0x29C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FText>                          Ocupations;                                        // 0x2A0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class FText>                          RandomInfo;                                        // 0x2B0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class FText>                          UsernamePrefixes;                                  // 0x2C0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class FText>                          Usernames;                                         // 0x2D0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class FText>                          UsernameSuffixes;                                  // 0x2E0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    DefaultTextureMaterial;                            // 0x2F0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              TextureMaterial;                                   // 0x2F8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                NearestNPC;                                        // 0x300(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2586[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                CurrentNPC;                                        // 0x310(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                OwningGoat;                                        // 0x318(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2588[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        ActorsInCollider;                                  // 0x328(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class USceneComponent*                       BeamParticleAttachement;                           // 0x338(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              BeamComponent;                                     // 0x340(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAudioComponent*                       BeamingAudioComp;                                  // 0x348(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextureRenderTarget2D*                TextureTarget;                                     // 0x350(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2589[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGPersonalHackerBeam* GetDefaultObj();

	void OverlapEnd(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnUpdateHackerWidget(class AActor* Target);
	class FString GetTargetName(class AActor* Target);
	enum class EMoods GetTargetMood(class AActor* Target);
	class FString GetRandomInformation();
	class FString GetNPCUsername();
	class FString GetNPCOccupation(class AActor* Actor);
	int32 GetNPCAge();
	void BeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x0 (0x260 - 0x260)
// Class Goat2.GGPersonalHackerUserWidget
class UGGPersonalHackerUserWidget : public UUserWidget
{
public:

	static class UClass* StaticClass();
	static class UGGPersonalHackerUserWidget* GetDefaultObj();

	void SetCaptureTexture(class UTextureRenderTarget2D* Texture);
	void SetCaptureMaterial(class UMaterialInstanceDynamic* Material);
};

// 0x18 (0x98 - 0x80)
// Class Goat2.GGPhysicalMaterial
class UGGPhysicalMaterial : public UPhysicalMaterial
{
public:
	bool                                         bUseOriginalDensity;                               // 0x80(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHugeObject;                                       // 0x81(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_258D[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HugeObjectAngularImpulseScale;                     // 0x84(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         OverrideLinear;                                    // 0x88(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_258E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LinearDampening;                                   // 0x8C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         OverrideAngular;                                   // 0x90(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2590[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AngularDampening;                                  // 0x94(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGPhysicalMaterial* GetDefaultObj();

};

// 0xA8 (0xA90 - 0x9E8)
// Class Goat2.GGPhysicsActor_AbominanaBanana
class AGGPhysicsActor_AbominanaBanana : public AGGPhysicsActor
{
public:
	float                                        TimeBetweenTransformation;                         // 0x9E8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2591[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UStaticMesh*>                   TransformationMeshes;                              // 0x9F0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FName                                  BananaMeshTopSocket;                               // 0xA00(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  BananaMeshBottomSocket;                            // 0xA08(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          BirthMontage;                                      // 0xA10(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            TransformationSound;                               // 0xA18(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  BananaMeshName;                                    // 0xA20(0x18)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTag                          TransitionPopGameplayCueTag;                       // 0xA38(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AGGNPC>                    AbominanaNPCClass;                                 // 0xA40(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          AbominanaIdentifierTag;                            // 0xA48(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          TransformationGameplayCueTag;                      // 0xA50(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAudioComponent*                       AudioComponent;                                    // 0xA58(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2592[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGPhysicsActor_AbominanaBanana* GetDefaultObj();

};

// 0x158 (0xB40 - 0x9E8)
// Class Goat2.GGPhysicsActor_FishingRod
class AGGPhysicsActor_FishingRod : public AGGPhysicsActor
{
public:
	class UAnimMontage*                          CatchingAnimMontage;                               // 0x9E8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       IdleSurfaceParticle;                               // 0x9F0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       CatchSurfaceParticle;                              // 0x9F8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            SurfaceSound;                                      // 0xA00(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           FishingBobberMesh;                                 // 0xA08(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               FishingBobberScale;                                // 0xA10(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2595[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       FishingLineParticle;                               // 0xA20(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                    BeamEndActorClass;                                 // 0xA28(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    FishingBobberCurve;                                // 0xA30(0x88)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        FishingBobberSpeed;                                // 0xAB8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2596[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       BobberLandParticle;                                // 0xAC0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            BobberLandSound;                                   // 0xAC8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FWeightedElement_StaticMesh>   ValidCatchableMeshes;                              // 0xAD0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UParticleSystem*                       FishedUpCharacterParticle;                         // 0xAE0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            FishedUpCharacterSound;                            // 0xAE8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AGGNPC_Humanoid*                       OwnerNPC;                                          // 0xAF0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               TargetLocation;                                    // 0xAF8(0xC)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bBobberThrown;                                     // 0xB04(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bHasBobberLanded;                                  // 0xB05(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2598[0x12];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystemComponent*              SurfaceParticleComp;                               // 0xB18(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAudioComponent*                       SurfaceAudioComp;                                  // 0xB20(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AStaticMeshActor*                      FishingBobberActor;                                // 0xB28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              FishingLineParticleComp;                           // 0xB30(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                BeamStartActor;                                    // 0xB38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AGGPhysicsActor_FishingRod* GetDefaultObj();

	void OnGGAnimNotifyTrigger(class AGGCharacter* NotifyingNPC, class UGGAnimNotify* AnimNotify, const struct FGameplayTag& NotifyTag);
	void FishUpActorEffects(const struct FVector_NetQuantize& Location);
};

// 0x8 (0x9F0 - 0x9E8)
// Class Goat2.GGPhysicsActor_Gumball
class AGGPhysicsActor_Gumball : public AGGPhysicsActor
{
public:
	uint8                                        Pad_2599[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGPhysicsActor_Gumball* GetDefaultObj();

};

// 0x8 (0x9F0 - 0x9E8)
// Class Goat2.GGPhysicsActor_PropGolf
class AGGPhysicsActor_PropGolf : public AGGPhysicsActor
{
public:
	uint8                                        Pad_259B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGPhysicsActor_PropGolf* GetDefaultObj();

};

// 0x8 (0x9F0 - 0x9E8)
// Class Goat2.GGPhysicsActor_SantaBagGift
class AGGPhysicsActor_SantaBagGift : public AGGPhysicsActor
{
public:
	uint8                                        Pad_259C[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGPhysicsActor_SantaBagGift* GetDefaultObj();

};

// 0x68 (0x870 - 0x808)
// Class Goat2.GGPhysicsActor_Skeletal
class AGGPhysicsActor_Skeletal : public AGGPhysicsActor_Base
{
public:
	class USkeletalMeshComponent*                SkeletalMesh;                                      // 0x808(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  LickBone;                                          // 0x810(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkeletalMassScale;                                 // 0x818(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinTimeBetweenCollisions;                          // 0x81C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize                   RagdollSyncLocation;                               // 0x820(0xC)(Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize                   RagdollSyncVelocity;                               // 0x82C(0xC)(Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SyncBodyMaxDistanceSquared;                        // 0x838(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_259D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTransform>                    BoneTransformArray;                                // 0x840(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_259E[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMesh*                         CurrentSkeletalMesh;                               // 0x860(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_259F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGPhysicsActor_Skeletal* GetDefaultObj();

	void SetNewMesh(class USkeletalMesh* NewSkeletalMesh);
	void OnRep_CurrentSkeletalMesh();
};

// 0x28 (0x2B8 - 0x290)
// Class Goat2.GGPigSlideGameplayCue
class AGGPigSlideGameplayCue : public AGameplayCueNotify_Actor
{
public:
	class USoundBase*                            StartSlideSound;                                   // 0x290(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            SlideLoop;                                         // 0x298(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SlideVolume;                                       // 0x2A0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSetFixSlidePitch;                                 // 0x2A4(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25A0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SlidePitch;                                        // 0x2A8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25A1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAudioComponent*                       SlidingAudioComp;                                  // 0x2B0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AGGPigSlideGameplayCue* GetDefaultObj();

};

// 0x78 (0x2A8 - 0x230)
// Class Goat2.GGPirateOctopusArm
class AGGPirateOctopusArm : public AActor
{
public:
	TSubclassOf<class UDamageType>               DamageTypeClass;                                   // 0x230(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       Root;                                              // 0x238(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGRadialForceComponent*               RadialForce;                                       // 0x240(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                OctopusArm;                                        // 0x248(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UAnimMontage*>                  AttackAnimationMontages;                           // 0x250(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        Damage;                                            // 0x260(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageRadius;                                      // 0x264(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       DestructionParticle;                               // 0x268(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       DestructionWaterParticle;                          // 0x270(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x278(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class USoundBase*                            SpawnSound;                                        // 0x288(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            DestructionInWaterSound;                           // 0x290(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            DestructionSound;                                  // 0x298(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                OwningGoat;                                        // 0x2A0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AGGPirateOctopusArm* GetDefaultObj();

	void Smash();
	class UAnimMontage* GetRandomSmashAnimationMontage();
};

// 0x58 (0x288 - 0x230)
// Class Goat2.GGPlayerCamera
class AGGPlayerCamera : public AActor
{
public:
	class USpringArmComponent*                   CameraBoom;                                        // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCameraComponent*                      FollowCamera;                                      // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGGoat*                               PawnTarget;                                        // 0x240(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_25A2[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AimingZoomDistance;                                // 0x264(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NormalZoomDistance;                                // 0x268(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZoomInterpSpeed;                                   // 0x26C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimSpinInterpSpeed;                                // 0x270(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               CameraOffset;                                      // 0x274(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           DirectionInterpolationStrengthCurve;               // 0x280(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AGGPlayerCamera* GetDefaultObj();

};

// 0x70 (0x28A0 - 0x2830)
// Class Goat2.GGPlayerCameraManager
class AGGPlayerCameraManager : public APlayerCameraManager
{
public:
	FMulticastInlineDelegateProperty_            OnCameraContextChanged;                            // 0x2830(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, struct FPlayerPostProcessValue> PlayerPostProcessComponents;                       // 0x2840(0x50)(ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_25AC[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGPlayerCameraManager* GetDefaultObj();

	bool UpdatePlayerPostProcessComponent(const struct FGameplayTag& EffectIdentifier, const struct FPostProcessSettings& NewSettings);
	void RemovePlayerPostProcessComponent(const struct FGameplayTag& EffectIdentifier);
	void OnPossessedGoatPhysicsVolumeChanged(class APhysicsVolume* NewVolume);
	void OnPawnPossessed(class APawn* NewPawn);
	void OnGoatRespawn(class AGGCharacter* OldCharacter, class AGGCharacter* NewCharacter);
	void OnCameraShakeSettingChanged(struct FGGGameSetting* InSetting);
	enum class EPostProcessCameraContext GetCurrentCameraContext();
	void AddPlayerPostProcessComponent(const struct FGameplayTag& EffectIdentifier, const struct FPostProcessSettings& ComponentSettings, bool bPlayerCamVisible, bool bVehicleCamVisible, bool bWorldCamVisible);
};

// 0x0 (0xB0 - 0xB0)
// Class Goat2.GGPlayerDialogueComponent
class UGGPlayerDialogueComponent : public UActorComponent
{
public:

	static class UClass* StaticClass();
	static class UGGPlayerDialogueComponent* GetDefaultObj();

	void StartDialogueWith(class AActor* WithActor, class UGGDialogueDataAsset* Dialogue);
	void ServerStartDialogueLine(class UGGDialogueInstance* InDialogue, int32 NextLine);
	void ServerStartDialogue(class UGGDialogueInstance* InDialogue);
	void ServerRestartDialogue(class UGGDialogueInstance* InDialogue);
	void ServerCancelDialogue(class UGGDialogueInstance* InDialogue);
	void ServerAdvanceDialogue(class UGGDialogueInstance* InDialogue, class AGGPlayerController* InteractingPlayer);
};

// 0xB0 (0x2E0 - 0x230)
// Class Goat2.GGPlayerGame_Base
class AGGPlayerGame_Base : public AActor
{
public:
	bool                                         bIsRematch;                                        // 0x230(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPlayerGamePhase                  PlayerGamePhase;                                   // 0x231(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWasGameEverInDrawPhase;                           // 0x232(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPlayerGameOutcome                PlayerGameOutcome;                                 // 0x233(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25F2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGPlayerState*                        StartingPlayerIfAny;                               // 0x238(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize                   GameStartingLocation;                              // 0x240(0xC)(BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayAreaRadius;                                    // 0x24C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayAreaHeight;                                    // 0x250(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OutOfBoundsMaxTime;                                // 0x254(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AGGPlayerGameStartingPoint*            PlayerGameStartingPoint;                           // 0x258(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GameInviteTS;                                      // 0x260(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25F4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGPlayerGameDataAsset*                PlayerGameDataAsset;                               // 0x268(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPlayerGamePlayerInfo>         PlayerInfos;                                       // 0x270(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPublic)
	bool                                         bScoreCanBeNegative;                               // 0x280(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25F5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TokenReward;                                       // 0x284(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LockPlayerOnReadyPoints;                           // 0x288(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25F6[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class AGGPlayerState*, bool>            CanGetScoreMap;                                    // 0x290(0x50)(NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AGGPlayerGame_Base* GetDefaultObj();

	bool UpdatePlayerGamePlayerInfo(class AGGPlayerController* PC);
	void ToggleCanGetScoreForPlayer(class AGGPlayerState* PlayerState, bool CanGetScore);
	void SetShowScoresEnabled(bool bEnabled);
	void SetScoreForPlayer(class AGGPlayerState* PlayerState, float NewScore, bool Force);
	void SetPlayerState(class AGGPlayerState* PlayerState, enum class EPlayerGamePlayerState State);
	void OnSetScoreForPlayerBlueprint(class APawn* Player, float NewScore);
	void OnSetScoreForPlayer(class APawn* Player, float NewScore);
	void OnRep_PlayerInfos();
	void OnPlayerStayedOutsideBounds(class AGGPlayerController* PlayerController, enum class EPlayerGamePhase GamePhase, enum class EPlayerGamePlayerState PlayerState);
	void OnPlayerStateChanged(class AGGPlayerController* PlayerController, enum class EPlayerGamePlayerState OldState, enum class EPlayerGamePlayerState NewState);
	void OnPlayerLeftBounds(class AGGPlayerController* PlayerController, enum class EPlayerGamePhase GamePhase, enum class EPlayerGamePlayerState PlayerState);
	void OnPlayerInfosChanged();
	void OnPlayerEnteredBounds(class AGGPlayerController* PlayerController, enum class EPlayerGamePhase GamePhase, enum class EPlayerGamePlayerState PlayerState);
	void OnPhaseTick(enum class EPlayerGamePhase NewPhase, float DeltaSeconds);
	void OnPhaseChangedBlueprint(enum class EPlayerGamePhase NewPhase);
	void OnPhaseChanged(enum class EPlayerGamePhase NewPhase, enum class EPlayerGameOutcome GameOutcome);
	void OnParticipatingPlayerLeft(class AActor* Actor);
	void LeavePlayerGame(struct FPlayerGamePlayerInfo& PlayerLeavingGame);
	bool IsPlayerInCurrentGame(class AGGPlayerState* PlayerState);
	bool IsGamePlaying();
	bool IsActorWithinBounds(class AActor* Actor);
	bool HasPlayArea();
	class AGGPlayerState* GetWinningPlayer();
	float GetScoreForPlayer(class AGGPlayerState* PlayerState);
	int32 GetRequiredMinimumParticipants();
	TArray<struct FPlayerGamePlayerInfo> GetPlayerInfosInState(enum class EPlayerGamePlayerState PlayerState, bool bLocalOnly);
	struct FPlayerGamePlayerInfo GetPlayerInfo(class AGGPlayerState* PlayerState, bool* OutSuccess);
	struct FLinearColor GetPlayerColorFromInfo(const struct FPlayerGamePlayerInfo& PlayerInfo);
	struct FLinearColor GetPlayerColorFromGGPlayerState(class AGGPlayerState* PlayerState);
	TArray<struct FPlayerGameScoreBoardData> GetOrderedScoreBoardData();
	int32 GetNumberOfPlayersNotInState(enum class EPlayerGamePlayerState State);
	int32 GetNumberOfPlayersInState(enum class EPlayerGamePlayerState State);
	int32 GetNumberOfPlayers();
	TArray<struct FPlayerGamePlayerInfo> GetLocalPlayerInfos(bool bIncludeLeavers);
	struct FPlayerGamePlayerInfo GetInfoFromColorIndex(int32 Index, bool* OutSuccess);
	TArray<class AGGGoat*> GetGoatsFromPlayerInfos(const TArray<struct FPlayerGamePlayerInfo>& PlayerGameInfos);
	TArray<class AGGGoat*> GetGoats();
	class AGGPlayerState* GetGGPlayerStateFromPlayerInfo(const struct FPlayerGamePlayerInfo& PlayerInfo);
	class AGGPlayerState* GetFirstPlayerInState(enum class EPlayerGamePlayerState State);
	struct FPlayerGamePlayerInfo GetFirstLocalPlayerInfo(bool bIncludeLeavers, bool* bOutSuccess);
	TArray<class AGGPlayerController*> GetControllersFromPlayerInfos(const TArray<struct FPlayerGamePlayerInfo>& PlayerGameInfos);
	struct FLinearColor GetColorForState(enum class EPlayerGamePlayerState InState);
	TArray<struct FPlayerGamePlayerInfo> GetActivePlayers(bool bAliveOnly, bool bLocalOnly);
	TArray<class AGGPlayerState*> GetActiveGGPlayerStates(bool bAliveOnly, bool bLocalOnly);
	void FinishPlayerGame();
	void EndGame(enum class EPlayerGameOutcome GameOutcome);
	void DecideWinner(enum class EPlayerGameOutcome* OutOutcome);
	bool ClearPlayerGamePlayerInfo();
	void ChangeScoreForPlayer(class AGGPlayerState* PlayerState, float ChangeScoreBy, bool Force);
	void ChangePhase(enum class EPlayerGamePhase NewPhase);
	bool AddOrEditPlayerGamePlayerInfo(class AGGPlayerController* PC);
};

// 0x40 (0x270 - 0x230)
// Class Goat2.GGPlayerGame_CarRace_StartLine
class AGGPlayerGame_CarRace_StartLine : public AActor
{
public:
	class AGGPlayerGame_Race_CheckpointPath*     CheckpointPath;                                    // 0x230(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AGGVehicle>                VehicleClass;                                      // 0x238(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMesh*                         PreviewMeshOverride;                               // 0x240(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EStartPositionSetup               StartPositionSetup;                                // 0x248(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25F8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SpacingBetweenVehicles;                            // 0x24C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumberOfRounds;                                    // 0x250(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TimeLimitPerRound;                                 // 0x254(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class USkeletalMeshComponent*>        PreviewMeshes;                                     // 0x258(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UTextRenderComponent*                  TextRenderComponent;                               // 0x268(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AGGPlayerGame_CarRace_StartLine* GetDefaultObj();

	struct FTransform GetStartLocation(int32 PlayerIndex);
};

// 0x0 (0x28 - 0x28)
// Class Goat2.PlayerGamePlayerInfoFunctionLibrary
class UPlayerGamePlayerInfoFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPlayerGamePlayerInfoFunctionLibrary* GetDefaultObj();

	float GetScore(const struct FPlayerGamePlayerInfo& Info);
	enum class EPlayerGamePlayerState GetPlayerState(const struct FPlayerGamePlayerInfo& Info);
	int32 GetPlayerIndex(const struct FPlayerGamePlayerInfo& Info);
	class AGGPlayerController* GetPlayerController(const struct FPlayerGamePlayerInfo& Info);
	class APawn* GetPawn(const struct FPlayerGamePlayerInfo& Info);
	float GetOutOfBoundsTimestamp(const struct FPlayerGamePlayerInfo& Info);
	enum class EPlayerGamePlayerLobbyState GetLobbyState(const struct FPlayerGamePlayerInfo& Info);
	class AGGGoat* GetGoat(const struct FPlayerGamePlayerInfo& Info);
	class AGGPlayerState* GetGGPlayerState(const struct FPlayerGamePlayerInfo& Info);
};

// 0x10 (0x240 - 0x230)
// Class Goat2.GGPlayerGame_Race_Checkpoint
class AGGPlayerGame_Race_Checkpoint : public AActor
{
public:
	uint8                                        Pad_2602[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystemComponent*              ParticleSystem;                                    // 0x238(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AGGPlayerGame_Race_Checkpoint* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGRaceMinigameCheckpointInterface
class IGGRaceMinigameCheckpointInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IGGRaceMinigameCheckpointInterface* GetDefaultObj();

	void ResetCheckpoint();
	void HideCheckpoint();
	void HandleCheckpointCrossed(class AGGVehicle* Vehicle);
};

// 0x80 (0x2B0 - 0x230)
// Class Goat2.GGPlayerGame_Race_CheckpointPath
class AGGPlayerGame_Race_CheckpointPath : public AActor
{
public:
	FMulticastInlineDelegateProperty_            OnCheckpointCrossed;                               // 0x230(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class USplineComponent*                      Spline;                                            // 0x240(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AActor>                    CheckpointClass;                                   // 0x248(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               CheckpointInstanceModifier;                        // 0x250(0xC)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSnapSplineToGround;                               // 0x25C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2606[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             GroundCheckVerticalOffset;                         // 0x260(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ECollisionChannel                 GroundTestChannel;                                 // 0x268(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2608[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              PreviewRotationOffset;                             // 0x26C(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2609[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        Checkpoints;                                       // 0x280(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UParticleSystemComponent*>      PreviewCheckpoints;                                // 0x290(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UTextRenderComponent*>          PreviewTextRenders;                                // 0x2A0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AGGPlayerGame_Race_CheckpointPath* GetDefaultObj();

	void SpawnCheckpoints();
	void ResetCheckpointOverlaps(class AGGVehicle* Vehicle, bool bUnHideCheckpoints);
	void OnCheckpointBeginOverlap(class AActor* OverlappedCheckpoint, class AActor* OtherActor);
	void MulticastSpawnCheckpoints();
	void MulticastDestroyCheckpoints();
	void DestroyCheckpoints();
};

// 0x28 (0xD8 - 0xB0)
// Class Goat2.GGPlayerGameComp_GoatKart
class UGGPlayerGameComp_GoatKart : public UActorComponent
{
public:
	TArray<struct FGoatKartCircuitResult>        FullCircuit;                                       // 0xB0(0x10)(BlueprintVisible, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	bool                                         ShouldEndGameWhenFirstPlayerFinishes;              // 0xC0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsSprint;                                          // 0xC1(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2614[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxLapsAroundCircuit;                              // 0xC4(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AGGGoat*>                       GoatsThatHaveFinished;                             // 0xC8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGGPlayerGameComp_GoatKart* GetDefaultObj();

	void SetFullCircuit(class USplineComponent* TrackSpline);
	void PlayerPerformedLap(class AGGGoat* Goat, int32 LapsPerformed);
	void PlayerCrossedPoint(class AGGGoat* Goat);
	bool HasPlayerFinishedRace(class AGGGoat* Goat);
	class AGGPlayerGame_Base* GetOwnerPlayerGame();
};

// 0xD8 (0x108 - 0x30)
// Class Goat2.GGPlayerGameDataAsset
class UGGPlayerGameDataAsset : public UPrimaryDataAsset
{
public:
	class FText                                  GameName;                                          // 0x30(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FString                                GameID;                                            // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  GameDescription;                                   // 0x58(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  GameHint;                                          // 0x70(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UTexture2D*                            GameIcon;                                          // 0x88(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            GameIconMedium;                                    // 0x90(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            GameIconSmall;                                     // 0x98(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>             GameScreenShot;                                    // 0xA0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AGGPlayerGame_Base>      PlayerGameClass;                                   // 0xC8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            RadarIcon;                                         // 0xF0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RequiredMinimumParticipants;                       // 0xF8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MatchDuration;                                     // 0xFC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TokensRewardedOnUnlock;                            // 0x100(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2617[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGPlayerGameDataAsset* GetDefaultObj();

	class FString GetUnreadID();
};

// 0x60 (0x290 - 0x230)
// Class Goat2.GGPlayerGameManager
class AGGPlayerGameManager : public AActor
{
public:
	TArray<struct FPlayerGamePlayerInfo>         LobbyPlayerInfos;                                  // 0x230(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPublic)
	float                                        PlayerGameInviteDuration;                          // 0x240(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerInviteTeleportDistance;                      // 0x244(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RematchDelay;                                      // 0x248(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2636[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGPlayerGame_Base*                    CurrentActiveGame;                                 // 0x250(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                          RematchTimerHandle;                                // 0x258(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UGGPlayerGameDataAsset*>        PlayerGameAssets;                                  // 0x260(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<TSoftObjectPtr<class UGGPlayerGameDataAsset>> PlayerGameDataAssets;                              // 0x270(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<class AGGPlayerGameStartingPoint*>    StartingPoints;                                    // 0x280(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AGGPlayerGameManager* GetDefaultObj();

	bool UpdatePlayerGamePlayerInfo(class AGGPlayerController* PC);
	void StartNewPlayerGameFromStartingPoint(class AGGPlayerGameStartingPoint* StartingPoint, class AGGPlayerState* PlayerStartingGameIfAny, bool bForceStart, bool bIsRematch);
	void StartNewPlayerGameFromLocation(class UGGPlayerGameDataAsset* DataAsset, const struct FVector& GameStartingLocation, class AGGPlayerState* PlayerStartingGameIfAny, bool bForceStart, bool bIsRematch);
	void SetLobbyState(class AActor* Player, enum class EPlayerGamePlayerLobbyState State);
	void SetCurrentActiveGame(class AGGPlayerGame_Base* PlayerGame);
	void PlayerAnsweredInvite(class AGGPlayerController* GGPC, bool Accepted);
	void OnStartingPointAdded(class AGGPlayerGameStartingPoint* StartingPoint);
	void OnRep_LobbyPlayerInfos();
	void OnRep_CurrentActiveGame();
	void OnPlayerGamePlayerInfoChanged(class AGGPlayerGame_Base* PlayerGame);
	void OnPlayerAnsweredInvite(class AGGPlayerController* GGPC, bool Accepted);
	void OnLobbyPlayerInfosChanged();
	void OnGameInitializedServer(class AGGPlayerGame_Base* PlayerGame);
	void OnGameFinished(class UGGPlayerGameDataAsset* PlayerGameAsset);
	void OnForceGameStart();
	void LeaveCurrentGame(class AActor* PlayerLeavingGame);
	bool HasEnoughPlayers(class UGGPlayerGameDataAsset* DataAsset);
	TArray<class APawn*> GetPlayers();
	class FString GetPlayerNameFromPlayer(class AActor* Player);
	class FString GetPlayerNameFromInfo(const struct FPlayerGamePlayerInfo& PlayerInfo);
	TArray<class UGGPlayerGameDataAsset*> GetPlayerGameAssets();
	class UGGPlayerGameDataAsset* GetPlayerGameAssetFromId(const class FString& GameID);
	TArray<class AGGPlayerController*> GetPCs();
	int32 GetNumberOfPlayersInLobbyState(enum class EPlayerGamePlayerLobbyState State);
	int32 GetNumberOfPlayersAnsweredInvite();
	enum class EPlayerGamePlayerLobbyState GetLobbyState(class AActor* Player);
	TArray<class AGGGoat*> GetGoats();
	class AGGPlayerState* GetGGPlayerStateFromPlayerInfo(const struct FPlayerGamePlayerInfo& PlayerInfo);
	class UGGPlayerGameDataAsset* GetCurrentGameDataAsset();
	class AGGPlayerGame_Base* GetCurrentActiveGame();
	struct FVector GetAdjustedStartingLocation(const struct FVector& StartLocation, float Radius, class AGGGoat* GoatToTeleport);
	bool AddLobbyPlayerInfo(class AGGPlayerController* PC);
};

// 0x10 (0x240 - 0x230)
// Class Goat2.GGPlayerGameStartingPoint
class AGGPlayerGameStartingPoint : public AActor
{
public:
	uint8                                        Pad_2637[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGPlayerGameDataAsset*                PlayerGameDataAsset;                               // 0x238(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AGGPlayerGameStartingPoint* GetDefaultObj();

};

// 0x70 (0xB8 - 0x48)
// Class Goat2.GGPlayerProgressionSubsystem
class UGGPlayerProgressionSubsystem : public UGGGameInstanceSubsystem
{
public:
	class UGGProgression*                        LocalProgression;                                  // 0x48(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGInventory*                          LocalInventory;                                    // 0x50(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSaveStarted;                                     // 0x58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FTrackedPlaytimeSession               TrackedPlaytimeSession;                            // 0x68(0xC)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        AutoSaveQuestsInterval;                            // 0x74(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_263B[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FQueuedSavePopups>             QueuedSaveCorruptionPopups;                        // 0xA8(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGPlayerProgressionSubsystem* GetDefaultObj();

	void ResetGoatProgression();
	void PreLoadMap(const class FString& MapName);
	void PostLoadMapWithWorld(class UWorld* InWorld);
	void OnIntroSplashComplete();
	bool IsSaving();
};

// 0xC0 (0x170 - 0xB0)
// Class Goat2.GGPlayerSubtitleComponent
class UGGPlayerSubtitleComponent : public UActorComponent
{
public:
	struct FGameplayTag                          SubtitleNotificationTag;                           // 0xB0(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          ClosedCaptionNotificationTag;                      // 0xB8(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AdditionalSubtitleDisplayTime;                     // 0xC0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinClosedCaptionDisplayTime;                       // 0xC4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AudibleSoundThreshold;                             // 0xC8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SubtitlePriorityThreshold;                         // 0xCC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AGGPlayerController*                   OwningController;                                  // 0xD0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_263F[0x98];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGPlayerSubtitleComponent* GetDefaultObj();

	void SetSubtitlePriority(float InPriority);
	void ResetSubtitlePriority();
	void OnSubtitlesSettingChanged(struct FGGGameSetting* InSetting);
};

// 0x88 (0xB8 - 0x30)
// Class Goat2.GGPlayerWorldAreaDataAsset
class UGGPlayerWorldAreaDataAsset : public UDataAsset
{
public:
	TArray<struct FPlayerWorldAreaLocation>      Locations;                                         // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, TSoftObjectPtr<class UTexture2D>> LocationThumbnails;                                // 0x40(0x50)(Edit, BlueprintVisible, UObjectWrapper, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>             DefaultThumbnail;                                  // 0x90(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGPlayerWorldAreaDataAsset* GetDefaultObj();

	TSoftObjectPtr<class UTexture2D> GetThumbnailForArea(const struct FGameplayTag& Tag);
	struct FGameplayTag GetMostRelevantArea(const TArray<struct FGameplayTag>& Tags);
	struct FVector GetAreaLocationFromAreaTag(const struct FGameplayTag& Tag, bool* bOutSuccess);
	class FText GetAreaDisplayNameFromAreaTag(const struct FGameplayTag& Tag);
};

// 0x10 (0x278 - 0x268)
// Class Goat2.GGPlayerWorldAreaVolume
class AGGPlayerWorldAreaVolume : public AVolume
{
public:
	struct FGameplayTag                          PlayerWorldArea;                                   // 0x268(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceUntilExit;                                 // 0x270(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2648[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGPlayerWorldAreaVolume* GetDefaultObj();

	void OverlapBegin(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x68 (0x2C8 - 0x260)
// Class Goat2.GGPlaytestOverlayUserWidget
class UGGPlaytestOverlayUserWidget : public UUserWidget
{
public:
	float                                        MinMoveDelay;                                      // 0x260(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxMoveDelay;                                      // 0x264(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentMoveDelay;                                  // 0x268(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveTimestamp;                                     // 0x26C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastOrderFixTimestamp;                             // 0x270(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UpdateTextTimestamp;                               // 0x274(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UpdateTextInterval;                                // 0x278(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_264B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                OverlayText;                                       // 0x280(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_264C[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGPlaytestOverlayUserWidget* GetDefaultObj();

	void SetNewOverlayText(const class FString& NewText);
	void MoveWidget();
};

// 0x10 (0x38 - 0x28)
// Class Goat2.GGPointOfInterestUserData
class UGGPointOfInterestUserData : public UAssetUserData
{
public:
	struct FLinearColor                          CustomHighlightColor;                              // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGPointOfInterestUserData* GetDefaultObj();

};

// 0x98 (0x2C8 - 0x230)
// Class Goat2.GGPortal
class AGGPortal : public AActor
{
public:
	class USceneComponent*                       Root;                                              // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneCaptureComponent2D*              PortalSceneCapture;                                // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UArrowComponent*                       ForwardDirectionArrow;                             // 0x240(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMeshComponent*                        PortalMesh;                                        // 0x248(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         OverlapBox;                                        // 0x250(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         CollisionBoxBehindPortal;                          // 0x258(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RenderScale;                                       // 0x260(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumRenderMipLevels;                                // 0x264(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ScreenSizeAtHighestMip;                            // 0x268(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ScreenSizeRenderThreshold;                         // 0x26C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AGGPortal*                             ConnectedPortal;                                   // 0x270(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowDebug;                                        // 0x278(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bGenerateMesh;                                     // 0x279(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableTeleportation;                              // 0x27A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableFrameCapture;                               // 0x27B(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               PortalSize;                                        // 0x27C(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    PortalRenderMaterial;                              // 0x288(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              PortalMaterialInstance;                            // 0x290(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UTextureRenderTarget2D*>        TextureTargets;                                    // 0x298(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_265B[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UPrimitiveComponent*>           ComponentsBehindPortal;                            // 0x2B8(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AGGPortal* GetDefaultObj();

	void TeleportActor(class AActor* Actor);
	void OnOverlapBoxEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnOverlapBoxBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnConnectedPortalDestroyed(class AActor* DestroyedPortal);
	void OnCollisionDisableBoxEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnCollisionDisableBoxBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void ConnectToPortal(class AGGPortal* OtherPortal);
	struct FVector ChangeVelocity(struct FVector& Velocity);
	struct FTransform ChangeTransform(struct FTransform& Transform);
	float ChangeScale();
	struct FRotator ChangeRotation(struct FRotator& Rotation);
	struct FVector ChangeLocation(const struct FVector& Location);
	struct FVector ChangeFullScale();
	struct FVector ChangeDirection(const struct FVector& Direction);
};

// 0xD0 (0xF8 - 0x28)
// Class Goat2.GGProgression
class UGGProgression : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnSaveObjectReloaded;                              // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	class UGGSaveGame*                           CachedSaveGame;                                    // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	FMulticastInlineDelegateProperty_            OnWorldColectionsReloaded;                         // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	class UGGWorldCollectionsSave*               CachedWorldCollectionsSave;                        // 0x50(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGGWorldSave*                          CachedWorldSave;                                   // 0x58(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_269C[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bWasInitialized;                                   // 0x61(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_269D[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            TotalChaosChanged;                                 // 0x68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnWorldStatsChanged;                               // 0x78(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnFullResetPlayerSave;                             // 0x88(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_269E[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGProgression* GetDefaultObj();

	void UploadToCloud();
	bool UpdateLastLoadedLevel(int32 SlotIndex, const class FString& LevelDataID);
	bool SetIntroPlayed(int32 SlotIndex, bool bIntroPlayed);
	bool SelectNewWorldCollection(int32 SlotIndex);
	bool RemoveWorldCollection(int32 SlotIndex);
	void PostLoadMapWithWorld(class UWorld* World);
	struct FSavedQuestData LoadQuestProgress(const class FString& QuestID, enum class ESaveGameType SaveGameType);
	bool IsSlotADefaultSlot(int32 SlotIndex);
	bool IsQuestStepCompleted(const class FString& QuestID, const class FString& StepID, enum class ESaveGameType QuestType);
	bool IsEventCompleted(const class FString& EventID);
	bool HasIntroPlayed(int32 SlotIndex);
	bool HasAnyWorldCollections();
	struct FWorldStats GetWorldStatsForWorld(int32 SlotIndex, const class FString& WorldName);
	struct FGuid GetWorldSaveGuid(class AActor* WorldContextActor);
	class UGGWorldSave* GetWorldSave();
	TArray<struct FWorldCollection> GetWorldCollections();
	struct FWorldCollection GetWorldCollection(int32 SlotIndex);
	int32 GetUnlockedStretchGoalNum();
	int32 GetTotalWorldChaosAcquired();
	TArray<int32> GetSlotsClaimedByProvider(enum class ESaveSlotProvider Provider);
	int32 GetSelectedWorldCollectionSlot();
	struct FWorldCollection GetSelectedWorldCollection();
	bool GetProviderClaimingSlot(int32 SlotIndex, enum class ESaveSlotProvider* ClaimedBy);
	bool GetLastLoadedLevel(int32* SlotIndex, class FString* LevelDataID);
	int32 GetFirstEmptyWorldCollectionSlot();
	struct FWorldStats GetCurrentWorldStats();
	struct FTimecode GetCurrentPlaytime(bool bGetSavedPlaytime);
	int32 GetCollectedTrinketNum();
	TArray<class FString> GetCollectedChaosSources();
	void DownloadFromCloud();
	bool DoesWorldCollectionExist(int32 SlotIndex);
	bool CanCreateAdditionalWorldCollection();
	bool AddNewWorldCollection(int32 SlotIndex);
	bool AddAndSelectNewWorldCollection(int32 SlotIndex);
};

// 0x68 (0x118 - 0xB0)
// Class Goat2.GGPropStateManager
class UGGPropStateManager : public UActorComponent
{
public:
	struct FActorDataMap                         Data;                                              // 0xB0(0x58)(Net, NativeAccessSpecifierPrivate)
	uint8                                        Pad_26A2[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGPropStateManager* GetDefaultObj();

};

// 0x8 (0x310 - 0x308)
// Class Goat2.GGQuestEntryUserWidget
class UGGQuestEntryUserWidget : public UGGUserWidget
{
public:
	class AGGQuestBase*                          AssignedQuest;                                     // 0x308(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGQuestEntryUserWidget* GetDefaultObj();

	void OnUpdateQuestEntry(class AGGQuestBase* Quest);
	void OnQuestCompletedBlueprint(class AGGQuestBase* Quest);
	bool IsAssignedQuest(class AGGQuestBase* Quest);
	class AGGQuestBase* GetAssignedQuest();
	void AssignQuest(class AGGQuestBase* Quest);
};

// 0x48 (0x350 - 0x308)
// Class Goat2.GGQuestListUserWidget
class UGGQuestListUserWidget : public UGGListUserWidget
{
public:
	TArray<struct FGameplayTag>                  ActiveSorting;                                     // 0x308(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class UListView*                             QuestList;                                         // 0x318(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnQuestListRebuilt;                                // 0x320(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnQuestListItemSelection;                          // 0x330(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnQuestListItemClicked;                            // 0x340(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGQuestListUserWidget* GetDefaultObj();

	bool ShouldShowQuestInList(class AGGQuestBase* Quest);
	bool RebuildQuestListWithTagSet(TSet<struct FGameplayTag> TagSet);
	void ClearQuestList();
};

// 0x0 (0x350 - 0x350)
// Class Goat2.GGQuestGridUserWidget
class UGGQuestGridUserWidget : public UGGQuestListUserWidget
{
public:

	static class UClass* StaticClass();
	static class UGGQuestGridUserWidget* GetDefaultObj();

};

// 0x318 (0x3C8 - 0xB0)
// Class Goat2.GGQuestManager
class UGGQuestManager : public UActorComponent
{
public:
	struct FNotification                         NewGoatTowerEventNotification;                     // 0xB0(0x60)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCharacterJumpedDelegate;                         // 0x110(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHandlerGoatBaaDelegate;                          // 0x120(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHandlerGoatLickedActorDelegate;                  // 0x130(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHandlerGoatHeadbuttedActorDelegate;              // 0x140(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInstinctTriggeredDelegate;                       // 0x150(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInteractedDelegate;                              // 0x160(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnActorTookDamageDelegate;                         // 0x170(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnQuestInitializedDelegate;                        // 0x180(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnQuestActivatedDelegate;                          // 0x190(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnQuestDeactivatedDelegate;                        // 0x1A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnQuestDiscoveredDelegate;                         // 0x1B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnQuestProgressionLoadedDelegate;                  // 0x1C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInitialQuestProgressionReplicatedDelegate;       // 0x1D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FString                                QuestTemplatesMapName;                             // 0x1E0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        QuestTemplatesStagingMapNames;                     // 0x1F0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class AGGQuestBase>>      QuestTemplates;                                    // 0x200(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TSet<TSubclassOf<class AGGQuestSet>>         GlobalQuestSetClasses;                             // 0x210(0x50)(Edit, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate)
	TSet<class AGGQuestSet*>                     GlobalQuestSets;                                   // 0x260(0x50)(NativeAccessSpecifierPrivate)
	TMap<struct FGameplayTag, int32>             InstinctCategoryOrderMap;                          // 0x2B0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, class UGGInstinctPackDataAsset*> InstinctCategoryPackMap;                           // 0x300(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, class UGGInstinctCategoryDataAsset*> InstinctHeaderCategoryDataMap;                     // 0x350(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FString                                AchievementInstinctID;                             // 0x3A0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AGGQuestBase*>                  AvailableQuests;                                   // 0x3B0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_26C8[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGQuestManager* GetDefaultObj();

	void SortLocalQuests(TArray<class AGGQuestBase*>& QuestsToSort, const TArray<struct FGameplayTag>& SortingPasses);
	void SortLocalQuestObjects(TArray<class UObject*>& QuestObjectsToSort, const TArray<struct FGameplayTag>& SortingPasses);
	void OnNotificationUpdated(const struct FNotification& Notification);
	void OnNotificationShown(const struct FNotification& Notification);
	void OnNotificationCleared(const struct FNotification& Notification);
	void OnInteractedEvent(class AActor* SourceActor, class AActor* TargetActor);
	void OnInstinctTriggered(class AGGGoat* Goat, const struct FGameplayTag& InstinctTag);
	void OnGoatTowerSynchronised(class AGGGoatTower* GoatTower, enum class ETowerSynchronizationEvent SynchronizationEvent);
	void OnGoatLickedActor(class AGGGoat* Goat, class AActor* LickedActor);
	void OnGoatHeadbuttedActor(class AGGGoat* Goat, class AActor* HeadbuttedActor);
	void OnGoatBaa(class AGGGoat* Goat);
	void OnCharacterJumped(class AGGCharacter* Character);
	void OnActorTookDamage(class AActor* SourceActor, class AActor* TargetActor, float DamageAmount, class UDamageType* DamageType);
	bool IsWithinQuestSearchRadius(const struct FVector& Location, class AGGEventBase* Event, float* OutDistance);
	bool IsInstinctsAvailable();
	bool HasCompletedAllInstincts();
	void GetQuestsInCategory(const struct FGameplayTagContainer& QuestCategories, TArray<class AGGQuestBase*>* OutQuests, bool ExactMatch);
	void GetQuestsFromFilter(const TArray<struct FAdvancedRule>& Rulesets, TArray<class AGGQuestBase*>* OutQuests);
	class AGGQuestSet* GetQuestSetFromSetMemberID(const class FString& ID);
	class AGGQuestBase* GetQuestFromID(const class FString& ID);
	void GetNumInstinctsCompleted(int32* OutNumTotal, int32* OutNumCompleted);
	class AGGQuestSet* GetGlobalQuestSet(const struct FGameplayTag& SetCategory, bool* bOutSuccess);
	class AGGQuestBase* GetClosestActiveQuest(struct FVector& Location, float* OutDistance, bool* bOutWithinRadius, class AGGQuestBase* EventToAlwaysConsider);
	TArray<class AGGQuestBase*> GetAvailableQuests();
	bool GetActiveInstincts(TArray<class AGGQuestBase*>* OutQuests, int32 Amount, class AGGPlayerController* PC);
	void FindDuplicateQuestIDs();
};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGQuestNotificationStatics
class UGGQuestNotificationStatics : public UObject
{
public:

	static class UClass* StaticClass();
	static class UGGQuestNotificationStatics* GetDefaultObj();

};

// 0x0 (0x498 - 0x498)
// Class Goat2.GGQuestSet
class AGGQuestSet : public AGGQuestBase
{
public:

	static class UClass* StaticClass();
	static class AGGQuestSet* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGQuestSorting
class UGGQuestSorting : public UObject
{
public:

	static class UClass* StaticClass();
	static class UGGQuestSorting* GetDefaultObj();

};

// 0x8 (0x508 - 0x500)
// Class Goat2.GGQuestTabUserWidget
class UGGQuestTabUserWidget : public UGGMenuTabUserWidget
{
public:
	class UGGQuestListUserWidget*                QuestList;                                         // 0x500(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGQuestTabUserWidget* GetDefaultObj();

};

// 0x40 (0x4A0 - 0x460)
// Class Goat2.GGQuestUserWidget
class UGGQuestUserWidget : public UGGNotificationContainerWidget
{
public:
	TArray<class UGGQuestEntryUserWidget*>       QuestWidgets;                                      // 0x460(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnWidgetShowQuest;                                 // 0x470(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnWidgetClearQuest;                                // 0x480(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UGGQuestManager*                       QuestManager;                                      // 0x490(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AGGQuestBase*                          CurrentQuest;                                      // 0x498(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGGQuestUserWidget* GetDefaultObj();

	bool HasActiveQuest();
};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGRaceTrack
class IGGRaceTrack : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IGGRaceTrack* GetDefaultObj();

	void SpawnCheckpoints();
	void ResetCheckpoints();
	void OnCheckpointCrossed(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	bool IsTrackFullySetup();
	class USplineComponent* GetTrackSpline();
	TArray<struct FVector> GetCheckpointLocations();
	int32 GetCheckpointIndex(class AActor* CheckPoint);
	class AActor* GetCheckpoint(int32 Index);
	TArray<class AActor*> GetAllCheckpoints();
	void GenerateTrack();
	void ClearTrackSpline();
};

// 0x48 (0xF8 - 0xB0)
// Class Goat2.GGRadarComponent
class UGGRadarComponent : public UActorComponent
{
public:
	bool                                         bIsInitialized;                                    // 0xB0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26E1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGRadarSystem*                        RadarSystem;                                       // 0xB8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AGGRadarPointActor>        DefaultNearestEventClass;                          // 0xC0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StylizedDistanceFactor;                            // 0xC8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26E2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  StylizedDistanceTextFormat;                        // 0xD0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, EditConst, Protected, NativeAccessSpecifierProtected)
	int32                                        StylizedDistanceMaxDigits;                         // 0xE8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        StylizedDistanceMinDigits;                         // 0xEC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        StylizedDistanceCutoffDistance;                    // 0xF0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26E4[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGRadarComponent* GetDefaultObj();

	void UpdateRadarData(class AGGQuestBase* Quest);
	void ServerRemoveRadarWaypoint(class AGGPlayerState* PlayerState);
	void ServerRemovePersonalWaypoint(class AGGPlayerState* PlayerState);
	void ServerCreateOrMoveRadarWaypoint(class AGGPlayerState* PlayerState, class AActor* TargetActor);
	void ServerCreateOrMovePersonalWaypoint(class AGGPlayerState* PlayerState, const struct FVector& Location);
	void OnQuestUpdated(class AGGQuestBase* Quest, const struct FGameplayTag& UpdateTag);
	void OnQuestCompleted(class AGGQuestBase* Quest, class AGGPlayerState* OptionalPlayerState);
	void OnGoatTowerSynchronised(class AGGGoatTower* GoatTower, enum class ETowerSynchronizationEvent SynchronizationEvent);
	void OnGoatExitedThroneRoom(class AGGGoat* Goat, class AGGGoatTower* GoatTower);
	void OnGoatEnteredThroneRoom(class AGGGoat* Goat, class AGGGoatTower* GoatTower);
	void InitQuestBindings(class UGGQuestManager* QuestManager);
	int32 GetStylizedDistanceToRadarPoint(class AGGPlayerController* GGPC, const struct FRadarCoordinateData& InData);
	class FText GetStylizedDistanceTextToRadarPoint(class AGGPlayerController* GGPC, const struct FRadarCoordinateData& InData);
	class AGGPlayerController* GetOwningController();
	void AddRadarCoordinateDataActor(class AActor* Actor);
};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGRadarInterface
class IGGRadarInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IGGRadarInterface* GetDefaultObj();

	bool IsRelevantForRadar();
	class UTexture2D* GetRadarIcon();
	class FText GetRadarDisplayName();
	struct FRadarCoordinateData GetRadarData();
	class AGGGoatTower* GetMatchingGoatTower();
	class AActor* GetMatchingAreaContextActor();
	struct FVector GetActorLocationOffset();
	bool CanBeShownOnRadar();
};

// 0x70 (0x2A0 - 0x230)
// Class Goat2.GGRadarPointActor
class AGGRadarPointActor : public ATargetPoint
{
public:
	uint8                                        Pad_26E9[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRadarCoordinateData                  Data;                                              // 0x238(0x58)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	bool                                         bAddRadarPointInBlueprint;                         // 0x290(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26EA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGRadarSystem*                        RadarSystem;                                       // 0x298(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AGGRadarPointActor* GetDefaultObj();

};

// 0x0 (0x2A0 - 0x2A0)
// Class Goat2.GGRadarPointActorCardinal
class AGGRadarPointActorCardinal : public AGGRadarPointActor
{
public:

	static class UClass* StaticClass();
	static class AGGRadarPointActorCardinal* GetDefaultObj();

};

// 0xC0 (0x170 - 0xB0)
// Class Goat2.GGRadarSystem
class UGGRadarSystem : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnRadarPointAddedDelegate;                         // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRadarPointRemovedDelegate;                       // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRadarPointUpdatedDelegate;                       // 0xD0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRadarWaypointDataUpdateDelegate;                 // 0xE0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FRadarWidgetClassData>         AdditionalRadarWidgetClasses;                      // 0xF0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<class AActor*, struct FRadarCoordinateData> RadarData;                                         // 0x100(0x50)(NativeAccessSpecifierPrivate)
	TArray<struct FPlayerWaypointMapping>        PlayerWaypoints;                                   // 0x150(0x10)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	TArray<struct FRadarSystemVisibilityRule>    VisibilityRules;                                   // 0x160(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGRadarSystem* GetDefaultObj();

	void SetRadarActorAsWaypoint(class AActor* WaypointActor, class AGGPlayerState* WaypointOwner);
	void RemoveVisibilityRules(const struct FGameplayTag& Source);
	void RemoveRadarData(class AActor* Owner);
	void OnRep_PlayerWaypoints();
	void OnRadarActorEndedPlay(class AActor* Actor, enum class EEndPlayReason EndPlayReason);
	bool IsWaypointForPlayer(class AActor* WaypointActor, class AGGPlayerState* WaypointOwner);
	bool IsWaypoint(class AActor* WaypointActor);
	bool HasWaypoint(class AGGPlayerState* WaypointOwner);
	void GetWaypointPlayers(class AActor* WaypointActor, TArray<class AGGPlayerState*>* OutPlayers);
	void AddVisibilityRule(struct FRadarSystemVisibilityRule& VisibilityRule);
	void AddRadarData(class AActor* Owner);
};

// 0x68 (0x298 - 0x230)
// Class Goat2.GGRadarWaypointActor
class AGGRadarWaypointActor : public AActor
{
public:
	uint8                                        Pad_26F9[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRadarCoordinateData                  Data;                                              // 0x238(0x58)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class UGGRadarSystem*                        RadarSystem;                                       // 0x290(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AGGRadarWaypointActor* GetDefaultObj();

	void OnWaypointUpdate(class AGGPlayerState* WaypointOwner);
	void OnWaypointDataChanged();
};

// 0x88 (0x290 - 0x208)
// Class Goat2.GGRadialForceComponent
class UGGRadialForceComponent : public USceneComponent
{
public:
	float                                        Radius;                                            // 0x208(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ERadialImpulseFalloff             Falloff;                                           // 0x20C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTriggerCharacterRagdoll;                          // 0x20D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreGoats;                                      // 0x20E(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bClientSideForce;                                  // 0x20F(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawRadius;                                       // 0x210(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26FF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bIgnoreOwningActor : 1;                            // Mask: 0x1, PropSize: 0x10x214(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_19A : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_2700[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bDisallowPActorsFromRagdolling;                    // 0x218(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2701[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DisallowFor;                                       // 0x21C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceFromGear;                                    // 0x220(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bApplyForce;                                       // 0x221(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2702[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CharacterForceStrength;                            // 0x224(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleForceStrength;                              // 0x228(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ForceStrength;                                     // 0x22C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDealDamageToGGMeshComps;                          // 0x230(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanDealForceDamage;                               // 0x231(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2703[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ForceDamageDelay;                                  // 0x234(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ForceDamage;                                       // 0x238(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImpulseStrength;                                   // 0x23C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleImpulseStrengthModifier;                    // 0x240(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bImpulseVelChange : 1;                             // Mask: 0x1, PropSize: 0x10x244(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_19B : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_2704[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ImpulseDamage;                                     // 0x248(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bConeVolume;                                       // 0x24C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2705[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HalfConeAngle;                                     // 0x250(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETypeOfDamage                     DamageType;                                        // 0x254(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETypeOfDamage                     DestructibleDamageType;                            // 0x255(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2706[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               ConeDirection;                                     // 0x258(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2707[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FRecentActor>                  RecentForceDamage;                                 // 0x268(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<enum class EObjectTypeQuery>          ObjectTypesToAffect;                               // 0x278(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2709[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGRadialForceComponent* GetDefaultObj();

	void RemoveObjectTypeToAffect(enum class EObjectTypeQuery ObjectType);
	void FireImpulse();
	class UGGRadialForceComponent* CreateRadialForceComponent_K2(class UObject* OwnerObject, class USceneComponent* ParentComponent, const struct FVector& AttachmentOffset, class FName ComponentName, float ForceRadius, bool bStartEnabled, TArray<enum class ECollisionChannel>& AdditionalCollisonChannels);
	void AddObjectTypeToAffect(enum class EObjectTypeQuery ObjectType);
};

// 0x20 (0x50 - 0x30)
// Class Goat2.GGRadioChannelPrimaryAsset
class UGGRadioChannelPrimaryAsset : public UPrimaryDataAsset
{
public:
	TArray<class USoundWave*>                    Songs;                                             // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class USoundWave*>                    Intermission;                                      // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGRadioChannelPrimaryAsset* GetDefaultObj();

};

// 0x50 (0x100 - 0xB0)
// Class Goat2.GGRadioComponent
class UGGRadioComponent : public UActorComponent
{
public:
	TArray<struct FPrimaryAssetId>               RadioChannels;                                     // 0xB0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        RadioVolume;                                       // 0xC0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FPrimaryAssetId                       ActiveRadioChannel;                                // 0xC4(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CurrentTrack;                                      // 0xD4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        LastPlayedSong;                                    // 0xD8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        LastPlayedIntermission;                            // 0xDC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         PlayingSong;                                       // 0xE0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_270E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAudioComponent*                       AudioComponent;                                    // 0xE8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_270F[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGRadioComponent* GetDefaultObj();

	void OnLoadedRadioChannel();
	void OnDriverExitVehicleOwner(class AGGVehicle* Vehicle, class AGGCharacter* Driver);
	void OnDriverEnterVehicleOwner(class AGGVehicle* Vehicle, class AGGCharacter* Driver);
	void OnAudioFinished();
};

// 0x28 (0xF10 - 0xEE8)
// Class Goat2.GGRagdollableSkeletalMeshComponent
class UGGRagdollableSkeletalMeshComponent : public USkeletalMeshComponent
{
public:
	FMulticastInlineDelegateProperty_            OnSkeletalMeshSet;                                 // 0xEE8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPhysStateChanged;                                // 0xEF8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2710[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGRagdollableSkeletalMeshComponent* GetDefaultObj();

};

// 0x0 (0x4E8 - 0x4E8)
// Class Goat2.GGRecastNavMesh
class AGGRecastNavMesh : public ARecastNavMesh
{
public:

	static class UClass* StaticClass();
	static class AGGRecastNavMesh* GetDefaultObj();

};

// 0x0 (0x4E8 - 0x4E8)
// Class Goat2.GGRecastNavMesh_Default
class AGGRecastNavMesh_Default : public AGGRecastNavMesh
{
public:

	static class UClass* StaticClass();
	static class AGGRecastNavMesh_Default* GetDefaultObj();

};

// 0x0 (0x4E8 - 0x4E8)
// Class Goat2.GGRecastNavMesh_Vehicle
class AGGRecastNavMesh_Vehicle : public AGGRecastNavMesh
{
public:

	static class UClass* StaticClass();
	static class AGGRecastNavMesh_Vehicle* GetDefaultObj();

};

// 0x8 (0x268 - 0x260)
// Class Goat2.GGReplayHUDWidget
class UGGReplayHUDWidget : public UUserWidget
{
public:
	class AGGReplayPlayerController*             OwningReplayPlayerController;                      // 0x260(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGReplayHUDWidget* GetDefaultObj();

	void ToggleReplayUI();
	void OnKeyframesUpdated();
};

// 0x58 (0x5E0 - 0x588)
// Class Goat2.GGReplayPlayerController
class AGGReplayPlayerController : public APlayerController
{
public:
	uint8                                        Pad_2717[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class UUserWidget>             ReplayHUDWidgetClass;                              // 0x590(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGReplayHUDWidget*                    ReplayHUDWidget;                                   // 0x5B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGGReplayKeyframe>             KeyFrames;                                         // 0x5C0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class ACameraActor*                          KeyframeCamera;                                    // 0x5D0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KeyframeTimeTolerance;                             // 0x5D8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2718[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGReplayPlayerController* GetDefaultObj();

	void ToggleReplayUI();
	void TogglePlayState();
	void ToggleGoatCamera();
	void SetCurrentReplayTimeToSeconds(float Seconds);
	void SetCurrentReplayPlayRate(float PlayRate);
	bool SetCurrentReplayPausedState(bool bDoPause);
	void RemoveKeyframe();
	void GoToPreviousKeyframe();
	void GoToNextKeyframe();
	float GetCurrentReplayTotalTimeInSeconds();
	bool GetCurrentReplayPausedState();
	float GetCurrentReplayCurrentTimeInSeconds();
	void AddOrUpdateKeyframe();
};

// 0x10 (0x2A0 - 0x290)
// Class Goat2.GGReplicatedMovementPawn
class AGGReplicatedMovementPawn : public APawn
{
public:
	class UGGReplicatedMovementComponent*        MovementComponent;                                 // 0x290(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bShouldIgnoreNetDistanceCull;                      // 0x298(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_271A[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGReplicatedMovementPawn* GetDefaultObj();

};

// 0x8 (0x590 - 0x588)
// Class Goat2.GGReplicatedStaticMeshComp
class UGGReplicatedStaticMeshComp : public UStaticMeshComponent
{
public:
	uint8                                        Pad_271B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGReplicatedStaticMeshComp* GetDefaultObj();

};

// 0xD8 (0x580 - 0x4A8)
// Class Goat2.GGReplicationGraph
class UGGReplicationGraph : public UReplicationGraph
{
public:
	uint8                                        Pad_271D[0x98];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UReplicationGraphNode_GridSpatialization2D* GridNode;                                          // 0x540(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UReplicationGraphNode_ActorList*       AlwaysRelevantActorsNode;                          // 0x548(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UReplicationGraphNode_DynamicSpatialFrequency* SpatialFrequencyNode;                              // 0x550(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UReplicationGraphNode_ActorListFrequencyBuckets* FrequencyBucketsNode;                              // 0x558(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGGReplicationGraphNode_ConditionalIgnoreDistanceCull* ConditionalIngoreDistanceCullNode;                 // 0x560(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        GridCellSize;                                      // 0x568(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        SpatialBiasX;                                      // 0x56C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        SpatialBiasY;                                      // 0x570(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bDisableSpatialRebuilding;                         // 0x574(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_271E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        PreallocatedListSize;                              // 0x578(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        NumPreallocatedLists;                              // 0x57C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGReplicationGraph* GetDefaultObj();

};

// 0x48 (0x138 - 0xF0)
// Class Goat2.GGReplicationGraphNode_AlwaysRelevant_ForConnection
class UGGReplicationGraphNode_AlwaysRelevant_ForConnection : public UReplicationGraphNode_AlwaysRelevant_ForConnection
{
public:
	uint8                                        Pad_2720[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGVehicle*                            VehicleConnectionIsPassengerIn;                    // 0x100(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AGGGoatTower*                          GoatTowerBeingSynced;                              // 0x108(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2721[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGCastleStretchGoal*                  StretchGoalBeingSynced;                            // 0x120(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2722[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGReplicationGraphNode_AlwaysRelevant_ForConnection* GetDefaultObj();

};

// 0x10 (0x60 - 0x50)
// Class Goat2.GGReplicationGraphNode_ConditionalIgnoreDistanceCull
class UGGReplicationGraphNode_ConditionalIgnoreDistanceCull : public UReplicationGraphNode
{
public:
	uint8                                        Pad_2724[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGReplicationGraphNode_ConditionalIgnoreDistanceCull* GetDefaultObj();

};

// 0x10 (0xC0 - 0xB0)
// Class Goat2.GGRespawnReferenceHandler
class UGGRespawnReferenceHandler : public UActorComponent
{
public:
	uint8                                        Pad_273D[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGRespawnReferenceHandler* GetDefaultObj();

	void RemoveMultipleCharacterRefs(TArray<class AGGCharacter*>& CharacterRefsToRemove);
	bool RemoveCharacterRef(class AGGCharacter*& CharacterRefToRemove);
	void RemoveAllCharacterRefs();
	void OnTrackedCharacterRespawned(class AGGCharacter* OldCharacter, class AGGCharacter* NewCharacter);
	TArray<class AGGCharacter*> GetCharacters();
	void AddMultipleCharacterRefs(TArray<class AGGCharacter*>& CharacterRefsToAdd);
	bool AddCharacterRef(class AGGCharacter*& CharacterRefToAdd);
};

// 0x148 (0x170 - 0x28)
// Class Goat2.GGRichTextBlockInputDecorator
class UGGRichTextBlockInputDecorator : public URichTextBlockDecorator
{
public:
	uint8                                        Pad_273E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           HoldIndicatorBrush;                                // 0x30(0x88)(Edit, NativeAccessSpecifierPublic)
	class UMaterial*                             HoldMaterial;                                      // 0xB8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoldOutlineSize;                                   // 0xC0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoldTimeReduction;                                 // 0xC4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoldMinDuration;                                   // 0xC8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoldAnimationStart;                                // 0xCC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowWarnings;                                     // 0xD0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_273F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStringTable*                          ButtonNameTable;                                   // 0xD8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateFontInfo                        ButtonFont;                                        // 0xE0(0x58)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          ButtonFontColor;                                   // 0x138(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             TextOffset;                                        // 0x148(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFontObjectScaleRelationship>  FontScales;                                        // 0x150(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2740[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGRichTextBlockInputDecorator* GetDefaultObj();

};

// 0x40 (0x68 - 0x28)
// Class Goat2.GGRichTextBlockPlayerNameDecorator
class UGGRichTextBlockPlayerNameDecorator : public URichTextBlockDecorator
{
public:
	class FString                                PlayerColorTag;                                    // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  PlayerColorFormat;                                 // 0x38(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	class FText                                  PlayerNameFormat;                                  // 0x50(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGRichTextBlockPlayerNameDecorator* GetDefaultObj();

};

// 0x78 (0x2A8 - 0x230)
// Class Goat2.GGRoadPathSpline
class AGGRoadPathSpline : public AActor
{
public:
	bool                                         DisplayText;                                       // 0x230(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplayConnectionText;                             // 0x231(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         RefreshText;                                       // 0x232(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2741[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TextSize;                                          // 0x234(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    TextMat;                                           // 0x238(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CreateTextLogErrors;                               // 0x240(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ERoadVehicleType                  RoadVehicleType;                                   // 0x241(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRelevantForRoadSpawnManager;                      // 0x242(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2744[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FWeightedElement_VehicleClass> AdditionalVehicles;                                // 0x248(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bOverrideDefaultVehicles;                          // 0x258(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2745[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          CivilianNPCAppearance;                             // 0x25C(0x8)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2746[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FWeightedElement_ConnectedSpline> CurrentSelectedConSpl;                             // 0x268(0x10)(Edit, BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<class UGGRoadSplineComponent*>        RoadSplines;                                       // 0x278(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UGGRoadSplineComponent*>        RoadSplinesIncludingManager;                       // 0x288(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UTextRenderComponent*>          TextComps;                                         // 0x298(0x10)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, EditConst, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AGGRoadPathSpline* GetDefaultObj();

};

// 0x10 (0x2B8 - 0x2A8)
// Class Goat2.GGRoadPathSpline_1Lane
class AGGRoadPathSpline_1Lane : public AGGRoadPathSpline
{
public:
	class UGGRoadSplineComponent*                SingleLaneSpline;                                  // 0x2A8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBillboardComponent*                   SplineBillboard;                                   // 0x2B0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AGGRoadPathSpline_1Lane* GetDefaultObj();

};

// 0x28 (0x2D0 - 0x2A8)
// Class Goat2.GGRoadPathSpline_2Lanes
class AGGRoadPathSpline_2Lanes : public AGGRoadPathSpline
{
public:
	class UGGRoadSplineComponent*                LaneManagerSpline;                                 // 0x2A8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGGRoadSplineComponent*                RightLaneSpline;                                   // 0x2B0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGGRoadSplineComponent*                LeftLaneSpline;                                    // 0x2B8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBillboardComponent*                   SplineBillboard;                                   // 0x2C0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        DefaultRoadWidth;                                  // 0x2C8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2748[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGRoadPathSpline_2Lanes* GetDefaultObj();

};

// 0x38 (0x590 - 0x558)
// Class Goat2.GGRoadSplineComponent
class UGGRoadSplineComponent : public USplineComponent
{
public:
	enum class ELaneDirection                    LaneDirection;                                     // 0x558(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseForManagerDistanceCheck;                       // 0x559(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2749[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FManagerPoint>                 ManagerPoints;                                     // 0x560(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	bool                                         WasFilled;                                         // 0x570(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         RefillPointData;                                   // 0x571(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_274A[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSplinePointData>              PointData;                                         // 0x578(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	uint8                                        Pad_274B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGRoadSplineComponent* GetDefaultObj();

};

// 0x70 (0x340 - 0x2D0)
// Class Goat2.GGSantaBagGiftProjectile
class AGGSantaBagGiftProjectile : public AGGPhysicsProjectile
{
public:
	TArray<TSubclassOf<class AActor>>            IgnoredSpecialTargets;                             // 0x2D0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TSubclassOf<class AGGPhysicsActor_SantaBagGift> GiftPActorClass;                                   // 0x2E0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             ScaleRange;                                        // 0x2E8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             PropSizeRange;                                     // 0x2F0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DelayBeforePActorSpawn;                            // 0x2F8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_274C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       WrapParticles;                                     // 0x300(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             ParticleScaleRange;                                // 0x308(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             ParticlePropSizeRange;                             // 0x310(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            WrapSound;                                         // 0x318(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_274D[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystemComponent*              SpawnedParticle;                                   // 0x330(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAudioComponent*                       SpawnedSound;                                      // 0x338(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AGGSantaBagGiftProjectile* GetDefaultObj();

	void SpawnWrapEffects(class AActor* OtherActor);
};

// 0xB0 (0xD8 - 0x28)
// Class Goat2.GGSaveGameBase
class UGGSaveGameBase : public USaveGame
{
public:
	TArray<struct FSavedQuestData>               QuestProgression;                                  // 0x28(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TMap<class FString, struct FKeyValueBase>    KeyValueData;                                      // 0x38(0x50)(NativeAccessSpecifierPublic)
	TSet<class FString>                          CompletedEvents;                                   // 0x88(0x50)(NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGSaveGameBase* GetDefaultObj();

};

// 0x2A8 (0x380 - 0xD8)
// Class Goat2.GGSaveGame
class UGGSaveGame : public UGGSaveGameBase
{
public:
	uint32                                       PlayerScore;                                       // 0xD8(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_274E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                PlayerName;                                        // 0xE0(0x10)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Tokens;                                            // 0xF0(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_274F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        UnlockedGoatGear;                                  // 0xF8(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TSet<class FString>                          CachedUnlockedGoatGear;                            // 0x108(0x50)(Transient, NativeAccessSpecifierPublic)
	bool                                         bDidCacheUnlockedGear;                             // 0x158(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2750[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        UnlockedStoreGoatGear;                             // 0x160(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TSet<class FString>                          CachedUnlockedStoreGear;                           // 0x170(0x50)(Transient, NativeAccessSpecifierPublic)
	bool                                         bDidCacheUnlockedStoreGear;                        // 0x1C0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2751[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSavedGearPreset>              GoatGearPresets;                                   // 0x1C8(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<class FString>                        FavoritedGoatGear;                                 // 0x1D8(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	int32                                        LastPlayerColor;                                   // 0x1E8(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FavoritePlayerColor;                               // 0x1EC(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, struct FMiniGameSave>    MiniGameSaveData;                                  // 0x1F0(0x50)(Edit, EditConst, NativeAccessSpecifierPublic)
	TSet<class FString>                          CompletedMicroEvents;                              // 0x240(0x50)(NativeAccessSpecifierPublic)
	TSet<class FString>                          UnreadIDs;                                         // 0x290(0x50)(NativeAccessSpecifierPublic)
	TMap<class FString, bool>                    UnlockedInstinctPacks;                             // 0x2E0(0x50)(NativeAccessSpecifierPublic)
	TMap<int32, struct FPerLocalPlayerSaveData>  PerLocalPlayerSaveData;                            // 0x330(0x50)(NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGSaveGame* GetDefaultObj();

};

// 0x10 (0x890 - 0x880)
// Class Goat2.GGScrollBox
class UGGScrollBox : public UScrollBox
{
public:
	bool                                         bUseGamepadAnalogScrolling;                        // 0x880(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseLeftGamepadAnalogScrolling;                    // 0x881(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2752[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GamepadAnalogScrollMultiplier;                     // 0x884(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseExplicitDPadScrolling;                         // 0x888(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2753[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ExplicitDPadScrollAmount;                          // 0x88C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGScrollBox* GetDefaultObj();

};

// 0x48 (0x278 - 0x230)
// Class Goat2.GGSearchLight
class AGGSearchLight : public AActor
{
public:
	class USceneComponent*                       BaseMeshSocket;                                    // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  BaseMeshComponent;                                 // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       LightMeshSocket;                                   // 0x240(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  SearchLightMeshComponent;                          // 0x248(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USpotLightComponent*                   SpotLightComponent;                                // 0x250(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ECollisionChannel                 GroundCheckCollisionChannel;                       // 0x258(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2754[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GroundCheckDistance;                               // 0x25C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TrackingSpeed;                                     // 0x260(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2755[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                ActorToFollow;                                     // 0x268(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       ComponentToFollow;                                 // 0x270(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AGGSearchLight* GetDefaultObj();

	void SetComponentToFollow(class USceneComponent* Component);
	void SetActorToFollow(class AActor* Actor);
};

// 0x80 (0xB0 - 0x30)
// Class Goat2.GGSeasonalContentSubsystem
class UGGSeasonalContentSubsystem : public UGameInstanceSubsystem
{
public:
	uint8                                        Pad_2763[0x70];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSeasonalTag>                  SeasonalTags;                                      // 0xA0(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGSeasonalContentSubsystem* GetDefaultObj();

	void SetSeasonalGameplayTagEnabled(struct FGameplayTag& SeasonalTag, bool bEnabled);
	void SetSeasonalContentEnabled(const class FString& SeasonalTagName, bool bEnabled);
	void SetSeasonalActorTagEnabled(const class FString& SeasonalTag, bool bEnabled);
	bool IsSeasonalContentEnabled(struct FGameplayTagContainer& GameplayTags);
	bool IsSeasonalActorExcluded(class AActor* Actor);
};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGSettingOptionFactory
class UGGSettingOptionFactory : public UObject
{
public:

	static class UClass* StaticClass();
	static class UGGSettingOptionFactory* GetDefaultObj();

	TArray<struct FGGSettingOption> ConstructOptions();
};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGSettingOptionFactory_EngineScalabilityLevels
class UGGSettingOptionFactory_EngineScalabilityLevels : public UGGSettingOptionFactory
{
public:

	static class UClass* StaticClass();
	static class UGGSettingOptionFactory_EngineScalabilityLevels* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGSettingOptionFactory_EngineScalabilityLevelsWithOff
class UGGSettingOptionFactory_EngineScalabilityLevelsWithOff : public UGGSettingOptionFactory_EngineScalabilityLevels
{
public:

	static class UClass* StaticClass();
	static class UGGSettingOptionFactory_EngineScalabilityLevelsWithOff* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGSettingOptionFactory_BloomQuality
class UGGSettingOptionFactory_BloomQuality : public UGGSettingOptionFactory_EngineScalabilityLevelsWithOff
{
public:

	static class UClass* StaticClass();
	static class UGGSettingOptionFactory_BloomQuality* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGSettingOptionFactory_Subtitles
class UGGSettingOptionFactory_Subtitles : public UGGSettingOptionFactory_EngineScalabilityLevels
{
public:

	static class UClass* StaticClass();
	static class UGGSettingOptionFactory_Subtitles* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGSettingOptionFactory_Resolution
class UGGSettingOptionFactory_Resolution : public UGGSettingOptionFactory
{
public:

	static class UClass* StaticClass();
	static class UGGSettingOptionFactory_Resolution* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Goat2.GGSettingOptionFactory_TextLanguages
class UGGSettingOptionFactory_TextLanguages : public UGGSettingOptionFactory
{
public:
	uint8                                        Pad_2764[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGSettingOptionFactory_TextLanguages* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGSettingOptionFactory_OverallQuality
class UGGSettingOptionFactory_OverallQuality : public UGGSettingOptionFactory
{
public:

	static class UClass* StaticClass();
	static class UGGSettingOptionFactory_OverallQuality* GetDefaultObj();

};

// 0x10 (0x318 - 0x308)
// Class Goat2.GGSettingsTabSectionHeaderUserWidget
class UGGSettingsTabSectionHeaderUserWidget : public UGGUserWidget
{
public:
	class UTextBlock*                            SectionNameTextBlock;                              // 0x308(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SectionName;                                       // 0x310(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGSettingsTabSectionHeaderUserWidget* GetDefaultObj();

	void SetSectionName(class FText InText, class FName InCategoryName);
};

// 0x48 (0xF8 - 0xB0)
// Class Goat2.GGShellEffectComponent
class UGGShellEffectComponent : public UActorComponent
{
public:
	TArray<class UMeshComponent*>                ShellMeshComponents;                               // 0xB0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    ShellMaterial;                                     // 0xC0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    SecondaryShellMaterial;                            // 0xC8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                AffectedActor;                                     // 0xD0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AGGPhysicsActor*                       AffectedPActor;                                    // 0xD8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AGGGoat*                               AffectedGoat;                                      // 0xE0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AGGVehicle*                            AffectedVehicle;                                   // 0xE8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AGGNPC*                                AffectedNPC;                                       // 0xF0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGGShellEffectComponent* GetDefaultObj();

	void SetMaterialOpacity(float NewOpacity);
	void RemakeShellMeshes();
	void OnGearWasUpdated(class AGGGoat* Goat, TArray<class USceneComponent*>& CurrentGoatGear);
	TArray<class UGGShellEffectComponent*> GetShellEffectComponents(class AActor* FromActor, TSubclassOf<class UGGShellEffectComponent> SpecificClass);
	class UGGShellEffectComponent* GetShellEffectComponent(class AActor* FromActor, TSubclassOf<class UGGShellEffectComponent> SpecificClass);
	class UGGShellEffectComponent* CreateNewShellEffect(class AActor* NewAffectedActor, class UMaterialInterface* NewShellMaterial, class UMaterialInterface* NewSecondaryShellMaterial, TSubclassOf<class UGGShellEffectComponent> SpecificClass);
};

// 0x88 (0x358 - 0x2D0)
// Class Goat2.GGShield
class AGGShield : public AGGPhysicsProjectile
{
public:
	TSubclassOf<class UDamageType>               DamageTypeClass;                                   // 0x2D0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bRandomBounce;                                     // 0x2D8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2765[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxBounceAmount;                                   // 0x2DC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        BounceYawAngleMarginal;                            // 0x2E0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        BouncePitchAngleMarginal;                          // 0x2E4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxDistance;                                       // 0x2E8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DistanceToPlayerBeforeDestroyed;                   // 0x2EC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DistanceForPickupSound;                            // 0x2F0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageAmount;                                      // 0x2F4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ImpulseForce;                                      // 0x2F8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RegularSpeed;                                      // 0x2FC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BackToPlayerSpeed;                                 // 0x300(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2766[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMeshComponent*                  VisualShield;                                      // 0x308(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxChainNumber;                                    // 0x310(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2767[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsReturning;                                      // 0x344(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bHasReturned;                                      // 0x345(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2768[0x12];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGShield* GetDefaultObj();

	void BP_OnFire();
};

// 0x0 (0x130 - 0x130)
// Class Goat2.GGSidebarPanelWidget
class UGGSidebarPanelWidget : public UVerticalBox
{
public:

	static class UClass* StaticClass();
	static class UGGSidebarPanelWidget* GetDefaultObj();

	void SetChildActive(class UGGUserWidget* Widget, bool bIsActive, bool bSetOtherInactive);
};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGSignificanceInterface
class IGGSignificanceInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IGGSignificanceInterface* GetDefaultObj();

	void LostSignificance();
	float GetSignificanceRange();
	struct FVector GetSignificanceLocation();
	void GainedSignificance();
};

// 0x60 (0x190 - 0x130)
// Class Goat2.GGSignificanceManager
class UGGSignificanceManager : public USignificanceManager
{
public:
	bool                                         bEnabled;                                          // 0x130(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_276A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AGGPhysicsActor*>               PActorsLoadingResources;                           // 0x138(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bHasBeenInitialized;                               // 0x148(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_276B[0x37];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGGQueuedSignificanceEntry>    QueuedSignificanceRegistrars;                      // 0x180(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGSignificanceManager* GetDefaultObj();

	void SetTickFunctionEnabled(bool bInEnabled);
};

// 0x10 (0x2C8 - 0x2B8)
// Class Goat2.GGSkeletalMeshActor
class AGGSkeletalMeshActor : public ASkeletalMeshActor
{
public:
	uint8                                        Pad_276C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bCanBeOptimized;                                   // 0x2C0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_276D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SignificanceRange;                                 // 0x2C4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AGGSkeletalMeshActor* GetDefaultObj();

	void LostSignificance();
	float GetSignificanceRange();
	struct FVector GetSignificanceLocation();
	void GainedSignificance();
};

// 0x68 (0xF50 - 0xEE8)
// Class Goat2.GGSkeletalMeshComponent
class UGGSkeletalMeshComponent : public USkeletalMeshComponent
{
public:
	uint8                                        Pad_2771[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSkeletalPhysicsActorState            PhysicsActorState;                                 // 0xEF8(0x10)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2772[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bCanBecomePhysicsActor;                            // 0xF09(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanBecomePhysicsActorByActorDamage;               // 0xF0A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2773[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AGGPhysicsActor_Skeletal>  PhysicsActorClassToBecome;                         // 0xF10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanBecomePhysicsActorByDamage;                    // 0xF18(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanBecomePhysicsActorByImpact;                    // 0xF19(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2774[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MomentumThreshold;                                 // 0xF1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxAngularImpulse;                                 // 0xF20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2775[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnTurnedSkelPhysActor;                             // 0xF28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGGSkeletalMeshHeadbutted;                        // 0xF38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2776[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGSkeletalMeshComponent* GetDefaultObj();

	void OnRep_OnPhysicsActorStateUpdate();
	void OnBecamePhysicsActorBlueprint(class AGGPhysicsActor_Skeletal* NewPhysicsActor);
	void ActorTakeDamageWithEvent(float DamageAmount, const struct FVector& InImpulse, struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser);
	void ActorTakeDamage(float DamageAmount, struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser);
	void ActorTakeAnyDamage(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void ActorOnHitDelegate(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, struct FHitResult& Hit);
};

// 0x60 (0x290 - 0x230)
// Class Goat2.GGSkyLightManager
class AGGSkyLightManager : public AActor
{
public:
	class ASkyLight*                             SkyLight;                                          // 0x230(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ADirectionalLight*                     WorldLight;                                        // 0x238(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AExponentialHeightFog*                 HeightFog;                                         // 0x240(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                SkySphere;                                         // 0x248(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGGSkyLightSettings                   OverriddenSkyLightSettings;                        // 0x250(0x1C)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FGGSkyLightSettings                   CachedSkyLightSettings;                            // 0x26C(0x1C)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bSunState;                                         // 0x288(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2777[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGSkyLightManager* GetDefaultObj();

	void TurnOnSun();
	void TurnOffSun();
	void OnTurnedOnSun(const struct FGGSkyLightSettings& Settings);
	void OnTurnedOffSun(const struct FGGSkyLightSettings& Settings);
	void OnRep_SunState();
};

// 0x48 (0x2D8 - 0x290)
// Class Goat2.GGSkyrimIntroPawn
class AGGSkyrimIntroPawn : public APawn
{
public:
	uint8                                        Pad_2778[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            BaaSound;                                          // 0x298(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             ControllerPitchAngleRange;                         // 0x2A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             ControllerYawAngleRange;                           // 0x2A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       Root;                                              // 0x2B0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                MeshComponent;                                     // 0x2B8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGFurComponent*                        GFurComponent;                                     // 0x2C0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCameraComponent*                      CameraComponent;                                   // 0x2C8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AGGPlayerController*                   ControllingPlayer;                                 // 0x2D0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AGGSkyrimIntroPawn* GetDefaultObj();

};

// 0xA0 (0x2D0 - 0x230)
// Class Goat2.GGSlipperyTrail
class AGGSlipperyTrail : public AActor
{
public:
	class UGGParticleSplineComponent*            SplineComponent;                                   // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGGStatusEffectSourceComponent*        StatusSourceComponent;                             // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              FireParticleComponent;                             // 0x240(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAudioComponent*                       FireAudioComponent;                                // 0x248(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bSpreadSlipperyOnOverlap;                          // 0x250(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_277A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AGGStatusEffectBase>       SpecificSlipperyToSpread;                          // 0x258(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanBeSetOnFire;                                   // 0x260(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_277B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SectionLifetime;                                   // 0x264(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SectionToSectionSpreadDelay;                       // 0x268(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDestroyActorAfterFadeout;                         // 0x26C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_277C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RequiredDistanceForSound;                          // 0x270(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_277D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMesh*                           OverlapMesh;                                       // 0x278(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    DecalMaterial;                                     // 0x280(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               DecalSize;                                         // 0x288(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ParticleSpawnPerSection;                           // 0x294(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FSlipperySection>              SlipperySections;                                  // 0x298(0x10)(ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FVector_NetQuantize>           PointLocations;                                    // 0x2A8(0x10)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<struct FSlipperySection>              AlteredSections;                                   // 0x2B8(0x10)(Net, ZeroConstructor, RepNotify, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_277E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGSlipperyTrail* GetDefaultObj();

	void OverlapBegin(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnRep_PointLocations();
	void OnRep_AlteredSections();
	void OnOtherSpreadToComponent(class AActor* OwnerActor, class UGGStatusEffectSourceComponent* SourceComponent, class UPrimitiveComponent* SpreadToComponent);
	void CreateNewSplinePoint(const struct FVector& Location);
};

// 0x178 (0x3A8 - 0x230)
// Class Goat2.GGSnowman
class AGGSnowman : public AActor
{
public:
	uint8                                        Pad_277F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxSnowmanStep;                                    // 0x238(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GrowInterpolationSpeed;                            // 0x23C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UParticleSystem>        GrowStepParticleSystem;                            // 0x240(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class USoundBase>             ScaleIncreaseSound;                                // 0x268(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UParticleSystem>        ScaleIncreaseParticleSystem;                       // 0x290(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ScaleIncreaseAfterFullyGrown;                      // 0x2B8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2780[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UParticleSystem>        DestroyedParticleSystem;                           // 0x2C0(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class USoundBase>             DestroyedSound;                                    // 0x2E8(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxDestroyParticleScale;                           // 0x310(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2781[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UParticleSystem>        DamageReceivedParticleSystem;                      // 0x318(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class USoundBase>             DamageReceivedSound;                               // 0x340(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BaseDamageThreshold;                               // 0x368(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CurrentSnowmanStep;                                // 0x36C(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAudioComponent*                       GrowSoundAudioComponent;                           // 0x370(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2782[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGSnowman* GetDefaultObj();

	void OnSnowmanGrown(int32 CurrentStep);
	void OnRep_CurrentSnowmanStep();
};

// 0x78 (0x2A8 - 0x230)
// Class Goat2.GGSnowmanHead
class AGGSnowmanHead : public AActor
{
public:
	float                                        NPCForcedRagdollDuration;                          // 0x230(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          NPCFreezeDurationSourceTag;                        // 0x234(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2785[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<TSoftObjectPtr<class USkeletalMesh>, float> ScalesForSpecificMeshes;                           // 0x240(0x50)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                         bIsAttachedActorFrozen;                            // 0x290(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2786[0x17];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGSnowmanHead* GetDefaultObj();

	void OnRep_IsAttachedActorFrozen();
	void OnAttachedNPCUnRagdolled(bool bRagdollOnGround, class ULSCharacterMovementComponent* MovementComp, class ACharacter* UnRagdolledCharacter, struct FRagdollStateChangeSettings& StateChangeSettings);
	void OnAttachedNPCPooled(class AGGNPC* NPC, bool WasPooled);
};

// 0x0 (0x230 - 0x230)
// Class Goat2.GGSnowPile
class AGGSnowPile : public AActor
{
public:

	static class UClass* StaticClass();
	static class AGGSnowPile* GetDefaultObj();

};

// 0x10 (0x50 - 0x40)
// Class Goat2.GGSoundAndParticleGameplayCue
class UGGSoundAndParticleGameplayCue : public UGameplayCueNotify_Static
{
public:
	class USoundBase*                            Sound;                                             // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       Particles;                                         // 0x48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGGSoundAndParticleGameplayCue* GetDefaultObj();

	enum class EAttachLocation GetLocationTypeFromParameters(struct FGameplayCueParameters& Parameters);
	enum class EAttachLocation GetLocationTypeFromEffectLevel(int32 GameplayEffectLevel);
};

// 0x10 (0x40 - 0x30)
// Class Goat2.GGSoundCollectionDataAsset
class UGGSoundCollectionDataAsset : public UDataAsset
{
public:
	TArray<struct FSoundCollectionEntry>         SoundCollectionEntries;                            // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGSoundCollectionDataAsset* GetDefaultObj();

	class USoundCue* GetSoundFromName(class FName EntryName);
};

// 0x40 (0x270 - 0x230)
// Class Goat2.GGSplineToolActor
class AGGSplineToolActor : public AActor
{
public:
	class USceneComponent*                       Root;                                              // 0x230(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USplineComponent*                      Spline;                                            // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FGGSpawnerWrapper>             Spawners;                                          // 0x240(0x10)(Edit, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UGGSpawnerModifierInterface*>   Modifiers;                                         // 0x250(0x10)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	bool                                         bShowBoundingBoxes;                                // 0x260(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bReGenerateAfterMove;                              // 0x261(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bReGenerateWhileDragging;                          // 0x262(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_278B[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class AActor>                 OtherSplineToFollow;                               // 0x264(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_278C[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGSplineToolActor* GetDefaultObj();

	void SetupBasicSpawner();
	void ReGenerate();
	struct FBoxSphereBounds GetSplineBounds();
	class USplineComponent* GetSpline();
};

// 0x40 (0x68 - 0x28)
// Class Goat2.GGSpawnerInterface
class UGGSpawnerInterface : public UObject
{
public:
	int32                                        InstancesToSpawn;                                  // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bApplyGlobalModifiers;                             // 0x2C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_278E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              StartRotation;                                     // 0x30(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_278F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UGGSpawnerModifierInterface*>   Modifiers;                                         // 0x40(0x10)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FVector                               Scale;                                             // 0x50(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UniformScale;                                      // 0x5C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseUniformScale;                                  // 0x60(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2790[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGSpawnerInterface* GetDefaultObj();

	void SpawnEntities(TArray<struct FGGSpawnTransform>& InTransforms);
	void InitSpawner();
	TArray<class UGGSpawnerModifierInterface*> GetValidModifiers();
	class AGGSplineToolActor* GetSplineOwner();
	class USplineComponent* GetSplineComponent();
	struct FBoxSphereBounds GetLocalBounds();
	TArray<struct FGGSpawnTransform> GetInitialSpawnTransforms();
	void ClearSpawnedEntities();
	bool CanEditNumberOfSpawnedInstanced();
};

// 0x20 (0x48 - 0x28)
// Class Goat2.GGSpawnerModifierInterface
class UGGSpawnerModifierInterface : public UObject
{
public:
	bool                                         bDisplayDebug;                                     // 0x28(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsModifierEnabled;                                // 0x29(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2796[0x16];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CachedSplineWidth;                                 // 0x40(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2797[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGSpawnerModifierInterface* GetDefaultObj();

	void SetModifierEnabled(bool bShouldBeEnabled);
	void ModifySpawnTransforms(TArray<struct FGGSpawnTransform>* SpawnTransforms, class USplineComponent* Spline);
	void ModifySingleSpawnTransform(struct FGGSpawnTransform* InTransform, class USplineComponent* Spline);
	bool IsModifierEnabled();
	bool IsGlobalModifier();
	void InitModifier();
	float GetSplineWidth();
	class AGGSplineToolActor* GetSplineOwner();
	class UGGSpawnerInterface* GetOwningSpawner_K2();
	void DisplayDebug(class AGGSplineToolActor* WorldContext);
};

// 0x10 (0x5D0 - 0x5C0)
// Class Goat2.GGSpeechBubbleComponent
class UGGSpeechBubbleComponent : public UWidgetComponent
{
public:
	class UGGDialogueInstance*                   DialogueInstance;                                  // 0x5C0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_279B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGSpeechBubbleComponent* GetDefaultObj();

	void DialogueStarted(class UGGDialogueInstance* InDialogueInstance);
	void DialogueLineStarted(struct FGGDialogueLine& DialogueLine);
	void DialogueEnded(class UGGDialogueInstance* InDialogueInstance);
};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGSpeechBubble
class IGGSpeechBubble : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IGGSpeechBubble* GetDefaultObj();

	void ShowSpeechBubble();
	void SetSpeechBubbleText(class FText& InText);
	void HideSpeechBubble();
};

// 0x0 (0x460 - 0x460)
// Class Goat2.GGSplashUserWidget
class UGGSplashUserWidget : public UGGNotificationContainerWidget
{
public:

	static class UClass* StaticClass();
	static class UGGSplashUserWidget* GetDefaultObj();

};

// 0x20 (0x88 - 0x68)
// Class Goat2.GGSpline_SplineMeshSpawner
class UGGSpline_SplineMeshSpawner : public UGGSpawnerInterface
{
public:
	class UStaticMesh*                           Mesh;                                              // 0x68(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESplineMeshAxis                   MeshForwardAxis;                                   // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGGSplineMeshSpawnMode            SpawnMode;                                         // 0x71(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_279F[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class USplineMeshComponent*>          SplineMeshComponents;                              // 0x78(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGSpline_SplineMeshSpawner* GetDefaultObj();

};

// 0x30 (0x98 - 0x68)
// Class Goat2.GGSplineBlueprintSpawner
class UGGSplineBlueprintSpawner : public UGGSpawnerInterface
{
public:
	TSubclassOf<class AActor>                    ClassToSpawn;                                      // 0x68(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOnlyUseCollidingComponentsForBoundsCalculation;   // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27A1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                OwnerOverride;                                     // 0x78(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNoOwnerForSpawnedActors;                          // 0x80(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27A2[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        SpawnedInstances;                                  // 0x88(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGGSplineBlueprintSpawner* GetDefaultObj();

};

// 0x40 (0xF0 - 0xB0)
// Class Goat2.GGSplineFollowComponent
class UGGSplineFollowComponent : public UActorComponent
{
public:
	enum class EFollowMode                       FollowMode;                                        // 0xB0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27A7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SpeedFactorForSplineCheckDistance;                 // 0xB4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MovementSpeed;                                     // 0xB8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAlignYawWithSpline;                               // 0xBC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAlignPitchWithSpline;                             // 0xBD(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bContinueFollowSpline;                             // 0xBE(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTeleportToSplineStart;                            // 0xBF(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TraceDistanceToFindGround;                         // 0xC0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ECollisionChannel                 FallbackTraceChannel;                              // 0xC4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27AA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                ActorWithSpline;                                   // 0xC8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USplineComponent*                      SplineToFollow;                                    // 0xD0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bReachedSplineEnd;                                 // 0xD8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27AC[0x17];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGSplineFollowComponent* GetDefaultObj();

	class UGGSplineFollowComponent* StartFollowingSpline(class AActor* ParentActor, class USplineComponent* SplineToFollow, enum class EFollowMode FollowMode, bool bTeleportToSplineStart);
	void SetSplineToFollow_Actor(class AActor* ActorWithSplineComponent);
	void SetSplineToFollow(class USplineComponent* Spline);
};

// 0x10 (0x58 - 0x48)
// Class Goat2.GGSplineSpawnerModifier_Fence
class UGGSplineSpawnerModifier_Fence : public UGGSpawnerModifierInterface
{
public:
	enum class EGGFenceSpacing                   Spacing;                                           // 0x48(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAxis                             MeshForwardAxis;                                   // 0x49(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGGSplineAlignment                RotationType;                                      // 0x4A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27AE[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SideOffset;                                        // 0x4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartOffset;                                       // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27AF[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGSplineSpawnerModifier_Fence* GetDefaultObj();

};

// 0x20 (0x68 - 0x48)
// Class Goat2.GGSplineSpawnerModifier_Grid
class UGGSplineSpawnerModifier_Grid : public UGGSpawnerModifierInterface
{
public:
	int32                                        NumberOfRows;                                      // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             SpacingBetweenMeshes;                              // 0x4C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAxis                             MeshForwardAxis;                                   // 0x54(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAxis                             MeshRightAxis;                                     // 0x55(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27B1[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SideOffset;                                        // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartOffset;                                       // 0x5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGGSplineAlignment                RotationType;                                      // 0x60(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27B2[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGSplineSpawnerModifier_Grid* GetDefaultObj();

};

// 0x20 (0x68 - 0x48)
// Class Goat2.GGSplineSpawnerModifier_PreventOverlap
class UGGSplineSpawnerModifier_PreventOverlap : public UGGSpawnerModifierInterface
{
public:
	int32                                        Iterations;                                        // 0x48(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoundsOffset;                                      // 0x4C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRemoveOverlapsAtTheEnd;                           // 0x50(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27B4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BoundsOffsetForRemovingOverlaps;                   // 0x54(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27B5[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGSplineSpawnerModifier_PreventOverlap* GetDefaultObj();

};

// 0x20 (0x68 - 0x48)
// Class Goat2.GGSplineSpawnerModifier_RandomRotation
class UGGSplineSpawnerModifier_RandomRotation : public UGGSpawnerModifierInterface
{
public:
	enum class ERotationPreset                   Preset;                                            // 0x48(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27B6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             RollRange;                                         // 0x4C(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             PitchRange;                                        // 0x54(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             YawRange;                                          // 0x5C(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27B8[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGSplineSpawnerModifier_RandomRotation* GetDefaultObj();

};

// 0x90 (0xD8 - 0x48)
// Class Goat2.GGSplineSpawnerModifier_ScatterAlongSpline
class UGGSplineSpawnerModifier_ScatterAlongSpline : public UGGSpawnerModifierInterface
{
public:
	struct FRuntimeFloatCurve                    DistributionCurve;                                 // 0x48(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	bool                                         bUseDistributionCurve;                             // 0xD0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27B9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumDistributionAttempts;                           // 0xD4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGGSplineSpawnerModifier_ScatterAlongSpline* GetDefaultObj();

};

// 0x10 (0x58 - 0x48)
// Class Goat2.GGSplineSpawnerModifier_SnapToGround
class UGGSplineSpawnerModifier_SnapToGround : public UGGSpawnerModifierInterface
{
public:
	float                                        TraceDistance;                                     // 0x48(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECollisionChannel                 TraceChannel;                                      // 0x4C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27BB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Offset;                                            // 0x50(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGGSnapMode                       SnapMode;                                          // 0x54(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27BC[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGSplineSpawnerModifier_SnapToGround* GetDefaultObj();

};

// 0x10 (0x78 - 0x68)
// Class Goat2.GGSplineStaticMeshSpawner
class UGGSplineStaticMeshSpawner : public UGGSpawnerInterface
{
public:
	class UStaticMesh*                           Mesh;                                              // 0x68(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInstancedStaticMeshComponent*         InstancedStaticMeshComponent;                      // 0x70(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGGSplineStaticMeshSpawner* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGSplineToolFunctionLibrary
class UGGSplineToolFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UGGSplineToolFunctionLibrary* GetDefaultObj();

	void TranslateBy(struct FGGSpawnTransform* InTransform, struct FVector& Translation);
	struct FBoxSphereBounds GetBounds(struct FGGSpawnTransform& InTransform);
};

// 0x20 (0x48 - 0x28)
// Class Goat2.SplitScreenPlayerObject
class USplitScreenPlayerObject : public UObject
{
public:
	struct FSplitScreenPlayerData                SplitScreenPlayer;                                 // 0x28(0x20)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USplitScreenPlayerObject* GetDefaultObj();

	bool IsPrimaryPlayer();
};

// 0x140 (0x170 - 0x30)
// Class Goat2.GGSplitScreenSubsystem
class UGGSplitScreenSubsystem : public UGameInstanceSubsystem
{
public:
	uint8                                        Pad_27D5[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PlayerInputHeldDuration;                           // 0x38(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27D6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int32, struct FSavedGearData>           DefaultFurs;                                       // 0x40(0x50)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_27D7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnSplitscreenPlayersUpdated;                       // 0x98(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSplitScreenStarted;                              // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSplitScreenEnded;                                // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            DelayedOnSplitScreenUpdated;                       // 0xC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGamepadConnectionsUpdated;                       // 0xD8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayerLayerPainted;                              // 0xE8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_27D8[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ULocalPlayer*>                  PlayersWaitingForScreenPaint;                      // 0x108(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_27D9[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGamepad>                      Gamepads;                                          // 0x148(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FInputUser>                    InputUsers;                                        // 0x158(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_27DA[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGSplitScreenSubsystem* GetDefaultObj();

	void StopSplitScreen();
	bool SplitscreenControllerIDExists(int32 ControlledID);
	bool SlateControllerIdExists(int32 SlateUserIndex);
	void SetShouldListenForLeaving(bool bShouldListen);
	void SetShouldListenForJoining(bool bShouldListen);
	void RemoveOnePlayerById(int32 ControllerId);
	void RemoveOnePlayer(class APlayerController* PlayerController);
	void PostLoadMapWithWorld(class UWorld* World);
	void OnUserRegistered(int32 UserIndex);
	void OnSessionDestroyed(bool bSuccess);
	void OnControllerPairingChange(int32 ControllerIndex, int32 NewUserPlatformId, int32 OldUserPlatformId);
	void OnControllerConnectionChange(bool bConnected, int32 UserId, int32 ControllerId);
	float IsUserLeaving();
	bool IsUserJoining();
	bool IsSplitScreenActive();
	bool IsGamepadConnected(int32 GamepadIndex);
	bool IsGamepadClaimed(int32 GamepadIndex);
	bool IsGamepadAvailableForPlayerIndex(int32 PlayerIndex);
	bool IsAwaitingSplitScreen();
	bool IsAnyGamepadConnected();
	bool HasMouseAndKeyboardAvailable();
	float GetUserHeldLeavingDuration(int32 UserIndex);
	float GetUserHeldJoiningDuration(int32 UserIndex);
	TArray<class USplitScreenPlayerObject*> GetSplitScreenPlayerObjects(class UObject* Owner);
	int32 GetSplitScreenPlayerNum();
	TArray<struct FSplitScreenPlayerData> GetSplitScreenPlayerData();
	int32 GetNumOpenSplitScreenSlots();
	int32 GetNumberOfConnectedGamepads();
	int32 GetNextSplitScreenIndex();
	TArray<class UGGLocalPlayer*> GetGGLocalPlayers();
	class UGGLocalPlayer* GetGGLocalPlayer(int32 ControllerId);
	TArray<struct FGamepad> GetGamepads();
	int32 GetGamepadClaimedByUser(int32 UserIndex);
	enum class ECanStartSplitScreenResult CanStartSplitScreen(bool bCanLogAndPrint);
	bool CanListenForLeaving();
	bool CanListenForJoining();
	class UGGLocalPlayer* AddOnePlayer(int32 UserIndex, bool bSpawnPawn, int32 ClaimGamepadIndex);
};

// 0x18 (0x248 - 0x230)
// Class Goat2.GGSpookyGearEffectsActor
class AGGSpookyGearEffectsActor : public AActor
{
public:
	class AActor*                                FollowedActor;                                     // 0x230(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              AmbientParticle;                                   // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UExponentialHeightFogComponent*        FogComponent;                                      // 0x240(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AGGSpookyGearEffectsActor* GetDefaultObj();

};

// 0x40 (0x68 - 0x28)
// Class Goat2.GGStaticImpactAssetUserData
class UGGStaticImpactAssetUserData : public UAssetUserData
{
public:
	struct FGameplayTagContainer                 ValidSources;                                      // 0x28(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FVector2D                             ImpactSizeRange;                                   // 0x48(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             ImpactSound;                                       // 0x50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             SoundVolumeRange;                                  // 0x58(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       ImpactParticle;                                    // 0x60(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGStaticImpactAssetUserData* GetDefaultObj();

};

// 0x68 (0x90 - 0x28)
// Class Goat2.GGStaticImpactEffectLoader
class UGGStaticImpactEffectLoader : public UObject
{
public:
	TSoftObjectPtr<class UParticleSystem>        CurrentlyLoadingParticle;                          // 0x28(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USoundCue>              CurrentlyLoadingSound;                             // 0x50(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27DD[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGStaticImpactEffectLoader* GetDefaultObj();

	void LoadImpactEffects(TSoftObjectPtr<class UParticleSystem> Particle, TSoftObjectPtr<class USoundCue> Sound, const struct FVector& Location, const struct FRotator& Rotation);
	void ImpactEffectsLoaded();
};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGStaticImpactEffectStatics
class UGGStaticImpactEffectStatics : public UObject
{
public:

	static class UClass* StaticClass();
	static class UGGStaticImpactEffectStatics* GetDefaultObj();

	bool PlayImpactEffect_UserData(class UObject* WorldContextObject, class UGGStaticImpactAssetUserData* UserData, const struct FGameplayTag& SourceTag, const struct FVector& Location, const struct FRotator& Rotation, float Volume);
	bool PlayImpactEffect_MeshActor(class UObject* WorldContextObject, class AStaticMeshActor* MeshActor, const struct FGameplayTag& SourceTag, const struct FVector& Location, const struct FRotator& Rotation, float Volume);
	bool PlayImpactEffect_Mesh(class UObject* WorldContextObject, class UStaticMesh* Mesh, const struct FGameplayTag& SourceTag, const struct FVector& Location, const struct FRotator& Rotation, float Volume);
	bool IsThisValidSource_MeshActor(class AStaticMeshActor* MeshActor, const struct FGameplayTag& SourceTag);
	bool IsThisValidSource_Mesh(class UStaticMesh* Mesh, const struct FGameplayTag& SourceTag);
	bool HasUserData_MeshActor(class AStaticMeshActor* MeshActor);
	bool HasUserData_Mesh(class UStaticMesh* Mesh);
	class UGGStaticImpactAssetUserData* GetImpactEffectUserData_MeshActor(class AStaticMeshActor* MeshActor);
	class UGGStaticImpactAssetUserData* GetImpactEffectUserData_Mesh(class UStaticMesh* Mesh);
};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGStaticLibrary
class UGGStaticLibrary : public UObject
{
public:

	static class UClass* StaticClass();
	static class UGGStaticLibrary* GetDefaultObj();

	void SetFocusedSplitscreenPlayerIndex(class UObject* WorldContextObject, int32 PlayerIndex);
	class FText RemoveTextFormatting(class FText& InText);
	class FText RemoveLinebreaks(class FText& InText, bool bReplaceWithSpace);
	int32 GetNetPlayerIndex(class APlayerController* PlayerController);
	int32 GetFocusedSplitscreenPlayerIndex(class UObject* WorldContextObject);
	float GetActorsMass(class AActor* InActor, bool bGetPhysicsAssetsMass);
};

// 0x18 (0x258 - 0x240)
// Class Goat2.GGStaticMeshActor
class AGGStaticMeshActor : public AStaticMeshActor
{
public:
	TArray<struct FPerMaterialCustomPrimitiveData> PerMaterialCustomPrimitiveData;                    // 0x240(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UGGStaticMeshComponent*                GGStaticMeshComponent;                             // 0x250(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AGGStaticMeshActor* GetDefaultObj();

};

// 0x178 (0x700 - 0x588)
// Class Goat2.GGStaticMeshComponent
class UGGStaticMeshComponent : public UStaticMeshComponent
{
public:
	uint8                                        Pad_281F[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPhysicsActorState                    PhysicsActorState;                                 // 0x5A8(0xC)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bCanBeLicked;                                      // 0x5B4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2820[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bCanBecomePhysicsActor;                            // 0x5B6(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2821[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMesh*                           OverriddenPActorMesh;                              // 0x5B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRetainMaterialsAsPActor;                          // 0x5C0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2822[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AGGPhysicsActor>           PhysicsActorClassToBecome;                         // 0x5C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanBecomePhysicsActorByDamage;                    // 0x5D0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanBecomePhysicsActorByActorDamage;               // 0x5D1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanBecomePhysicsActorByImpact;                    // 0x5D2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanBecomePhysicsActorByGoatRagdoll;               // 0x5D3(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanBecomePhysicsActorByActorImpact;               // 0x5D4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2823[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MomentumThreshold;                                 // 0x5D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanGetStatusEffects;                              // 0x5DC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2824[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxAngularImpulse;                                 // 0x5E0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2825[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnTurnedPhysActor;                                 // 0x5E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            GGStaticTakeDamage;                                // 0x5F8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGGStaticMeshHeadbutted;                          // 0x608(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGGStaticMeshLicked;                              // 0x618(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGGStaticMeshLickDropped;                         // 0x628(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnActorLicked;                                     // 0x638(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnActorLickDropped;                                // 0x648(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGGActorName                          CurrentActorName;                                  // 0x658(0x40)(Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGGNamedActorInfo                     DefaultActorNameInfo;                              // 0x698(0x28)(Protected, NativeAccessSpecifierProtected)
	class UDataTable*                            NameModifierTable;                                 // 0x6C0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bOverrideMeshNameInfo;                             // 0x6C8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2826[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGGNamedActorInfo                     ActorNameInfo;                                     // 0x6D0(0x28)(Edit, NativeAccessSpecifierPublic)
	uint8                                        Pad_2827[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGStaticMeshComponent* GetDefaultObj();

	bool ShouldDisplayNameOnRepel();
	bool SetGoatSimName(class FText& NewName);
	bool RemoveGoatSimNameModifier(const struct FGameplayTag& ModifierTag);
	bool PrepareForLick();
	void OnRep_OnPhysicsActorStateUpdate();
	void OnRep_CurrentActorName();
	void OnBecamePhysicsActorBlueprint(class AGGPhysicsActor* NewPhysicsActor);
	void ObjectWasHeadbutted(class AGGGoat* HeadbuttingGoat);
	bool HasBecomePhysicsActor();
	struct FVector GetLickInfo(const struct FVector& LickLocation, class FName* BoneName, struct FRotator* MeshLickRotation, struct FVector* RelativeLickLocation);
	class UMeshComponent* GetLickableActorMeshComponent();
	bool GetHasActorName();
	class FText GetGoatSimName(bool WithStyling);
	class FText GetFullGoatSimName(bool WithStyling);
	void ComponentTakeDamage(float DamageAmount, struct FImpulseDamageEvent& ImpulseDamageEvent, class AController* EventInstigator, class AActor* DamageCauser);
	bool CanBeLicked();
	bool CanBeHeadbutted(class AGGGoat* HeadbuttingGoat);
	bool CanBecomePActorByGoatRagdoll();
	class AGGPhysicsActor_Base* BecomePhysicsActor(const struct FVector& Impulse);
	bool AddGoatSimNameModifier(const struct FGameplayTag& ModifierTag, class FText& OverrideText);
	void ActorWasLicked(class AGGGoat* LickingGoat);
	void ActorTakeDamageWithEvent(float DamageAmount, const struct FVector& InImpulse, struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser);
	void ActorTakeAnyDamage(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void ActorStoppedBeingLicked(class AGGGoat* LickingGoat);
	void ActorOnHitDelegate(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, struct FHitResult& Hit);
};

// 0x1E8 (0x418 - 0x230)
// Class Goat2.GGStatusEffectBase
class AGGStatusEffectBase : public AActor
{
public:
	class USceneComponent*                       SceneRoot;                                         // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	FMulticastInlineDelegateProperty_            OnStatusEffectMoved;                               // 0x238(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	enum class EStatusEffectTypes                StatusEffectType;                                  // 0x248(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_282F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class AActor>>            ValidAffectedActorClasses;                         // 0x250(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	enum class EApplicationMethod                AppliedThrough;                                    // 0x260(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2830[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGStatusEffectManager*                OwningManager;                                     // 0x268(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                AffectedActor;                                     // 0x270(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AGGVehicle*                            AffectedVehicle;                                   // 0x278(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AGGPhysicsActor_Base*                  AffectedPActor;                                    // 0x280(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AGGCharacter*                          AffectedCharacter;                                 // 0x288(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AGGNPC*                                AffectedNPC;                                       // 0x290(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AGGGoat*                               AffectedGoat;                                      // 0x298(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         CreateOverlapShapes;                               // 0x2A0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bForceDefaultShape;                                // 0x2A1(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPActorUseSphereShape;                             // 0x2A2(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2831[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               ShapeScale;                                        // 0x2A4(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShouldClampSphereRadius;                          // 0x2B0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2832[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             ClampedSphereRadiusRange;                          // 0x2B4(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowShapesInGame;                                 // 0x2BC(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         RecheckOverlaps;                                   // 0x2BD(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2833[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RecheckDelayMax;                                   // 0x2C0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2834[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UShapeComponent*>               OverlapShapeComps;                                 // 0x2C8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FStatusShapeData                      DefaultOverlapShape;                               // 0x2D8(0x30)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                         HasDuration;                                       // 0x308(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bResetDurationOnActorMove;                         // 0x309(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2835[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Duration;                                          // 0x30C(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DurationMax;                                       // 0x310(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InitialSpreadDelayMax;                             // 0x314(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bChangesMaterial;                                  // 0x318(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2836[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FMatElement>                   GoatMaterial;                                      // 0x320(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FMatElement>                   VehicleMaterial;                                   // 0x330(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FMatElement>                   NPCMaterial;                                       // 0x340(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FMatElement>                   PActorMaterial;                                    // 0x350(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                         ChangesPhysMat;                                    // 0x360(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2837[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        PhysMatPriority;                                   // 0x364(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPhysicalMaterial*                     StatusEffectPhysMat;                               // 0x368(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         CanSpread;                                         // 0x370(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2838[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentSpreadCountMax;                             // 0x374(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CurrentSpreadCount;                                // 0x378(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EStatusEffectTypes                SpreadStatusEffectType;                            // 0x37C(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2839[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AGGStatusEffectBase>       SpreadStatusEffectClass;                           // 0x380(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         CreateParticleSystems;                             // 0x388(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_283A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FStatusParticleData                   DefaultParticleSystem;                             // 0x390(0x40)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<class UParticleSystemComponent*>      SpawnedParticleSystems;                            // 0x3D0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	float                                        ParticleDrawDistance;                              // 0x3E0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         SpawnParticleSystems;                              // 0x3E4(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_283B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          StatusEffectNameModifierTag;                       // 0x3E8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_283C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SignificanceDistance;                              // 0x3F4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_283D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsPooled;                                         // 0x3FC(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_283E[0x1B];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGStatusEffectBase* GetDefaultObj();

	void SpreadStatusEffect(class AActor* TargetActor, enum class EApplicationMethod ApplicationMethod, bool SkipInitalSpreadDelay, class UPrimitiveComponent* SpreadToComponent);
	void SetHasDuration(bool bShouldHaveDuration);
	void SetCurrentDuration(float NewDuration);
	void OverlapEnd(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OverlapBegin(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnRep_SpawnParticleSystems();
	void OnRep_IsPooled();
	bool IsSignificant();
	bool IsPooled();
	class UGGStatusEffectManager* GetOwningManager();
	bool GetHasDuration();
	float GetDuration();
	bool GetCanSpread();
	class AActor* GetAffectedActor();
	bool CanAffectClass(class UClass* TestClass);
	void BPReturnedFromPool();
	void BPResetForPool();
	void BPOwnerCollided(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void BPInitializeStatus(class UGGStatusEffectManager* Manager, enum class EApplicationMethod ApplicationMethod, class AActor* SpreadFrom, bool bMovedBetweenActors);
	void BPClientInitializeStatus(class UGGStatusEffectManager* Manager);
	void BPClientAttachmentUpdate(class AActor* AttachParent, class UActorComponent* AttachComponent);
	void ActorEndOverlap(class AActor* OverlappedActor, class AActor* OtherActor);
	void ActorBeginOverlap(class AActor* OverlappedActor, class AActor* OtherActor);
};

// 0xD8 (0x4F0 - 0x418)
// Class Goat2.GGStatusEffectBouncy
class AGGStatusEffectBouncy : public AGGStatusEffectBase
{
public:
	class UParticleSystem*                       StartParticle;                                     // 0x418(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            StartBouncySplatSound;                             // 0x420(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            StopBouncySound;                                   // 0x428(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GoatJumpHeightMultiplier;                          // 0x430(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bOpaqueMaterialVersion;                            // 0x434(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2841[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInterface*                    SecondaryShellEffectMaterial;                      // 0x438(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    GoatShellEffectMaterial;                           // 0x440(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    NPCShellEffectMaterial;                            // 0x448(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    VehicleShellEffectMaterial;                        // 0x450(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    PActorShellEffectMaterial;                         // 0x458(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             ShellEffectOpacityRange;                           // 0x460(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGShellEffectComponent*               ShellEffectComp;                                   // 0x468(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FadeToInactiveDuration;                            // 0x470(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ActivePercentage;                                  // 0x474(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2842[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  NPCBounceBone;                                     // 0x484(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CharacterMeshAngularDampening;                     // 0x48C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InitialSelfImpulseForce;                           // 0x490(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ImpulseForce;                                      // 0x494(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        VehicleImpulseForce;                               // 0x498(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        NPCImpulseForce;                                   // 0x49C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ImpulseMinForRelevant;                             // 0x4A0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BounceMinDelay;                                    // 0x4A4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        VehicleBounceMinDelay;                             // 0x4A8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2843[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UMaterialInterface*>            ImpactDecals;                                      // 0x4C0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FVector                               DecalSize;                                         // 0x4D0(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DecalLifespan;                                     // 0x4DC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EffectDelay;                                       // 0x4E0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2844[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            ImpactSound;                                       // 0x4E8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AGGStatusEffectBouncy* GetDefaultObj();

	void OnTakeAnyDamage(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void OnRep_ActivePercentage();
	void OnHitMesh(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	bool IsFadedOut();
	void ActorBounced();
};

// 0xF0 (0x508 - 0x418)
// Class Goat2.GGStatusEffectBurning
class AGGStatusEffectBurning : public AGGStatusEffectBase
{
public:
	float                                        SlipperyDurationIncrease;                          // 0x418(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlipperyParticleScaleMultiplier;                   // 0x41C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NPCVehicleSpeedIncrease;                           // 0x420(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               VehicleShapeScale;                                 // 0x424(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ExtinguishInstinctTag;                             // 0x430(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MatBurnDuration;                                   // 0x438(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         SetBurntMaterial;                                  // 0x43C(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_284E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BurntSecondsBeforeEnd;                             // 0x440(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2850[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInterface*                    BurntMaterial;                                     // 0x448(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2851[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         CanDealDamage;                                     // 0x451(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2853[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DamgeInterval;                                     // 0x454(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        Damage;                                            // 0x458(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         CanDamageNormalActors;                             // 0x45C(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         CanDamagePhysicsActors;                            // 0x45D(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         CanDamageVehicles;                                 // 0x45E(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         CanDamageCharacters;                               // 0x45F(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2855[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AGGFireballProjectile>     FireballProjectileClass;                           // 0x468(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ShootPitchAngle;                                   // 0x470(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ForwardSpawnOffset;                                // 0x474(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UpwardSpawnOffset;                                 // 0x478(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SteveShootPitchAngle;                              // 0x47C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ForwardSteveSpawnOffset;                           // 0x480(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UpwardSteveSpawnOffset;                            // 0x484(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGAlternativeGoatDataAsset*           SteveAltGoat;                                      // 0x488(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       StartParticle;                                     // 0x490(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       VehicleFireTrail;                                  // 0x498(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnlargeParticlesWhenSlippery;                     // 0x4A0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2858[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UParticleSystemComponent*>      VehicleFireTrails;                                 // 0x4A8(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	float                                        SizzlingDuration;                                  // 0x4B8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2859[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       SizzleParticle;                                    // 0x4C0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SizzlingParticleScale;                             // 0x4C8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_285B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            SizzleSound;                                       // 0x4D0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            ExtinguishedByWaterSound;                          // 0x4D8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FRecentActor>                  SizzlingActors;                                    // 0x4E0(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FDelayedSpreadActorEffect>     SizzlingActorEffects;                              // 0x4F0(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_285C[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGStatusEffectBurning* GetDefaultObj();

	void OnGoatKickedActor(class AGGGoat* Goat, class AActor* KickedActor);
	void OnGoatHeadbutting(class AGGGoat* Goat, bool bHitSomething, TArray<class AActor*>& HeadbuttedActors, bool bIsChargeHeadbutt);
	void MulticastPlayFireInWaterEffect(const struct FVector& Location);
	bool IsSizzling(class AActor* Actor);
	void GoatHeadbuttedActor(class AGGGoat* Goat, class AActor* HeadbuttedActor);
	void GoatHeadbutted(class AGGGoat* Goat);
};

// 0x10 (0x40 - 0x30)
// Class Goat2.GGStatusEffectDataAsset
class UGGStatusEffectDataAsset : public UDataAsset
{
public:
	enum class EStatusEffectTypes                StatusEffectType;                                  // 0x30(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_285F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AGGStatusEffectBase>       DefaultClass;                                      // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGStatusEffectDataAsset* GetDefaultObj();

};

// 0x58 (0x470 - 0x418)
// Class Goat2.GGStatusEffectDisgusting
class AGGStatusEffectDisgusting : public AGGStatusEffectBase
{
public:
	float                                        OverlapShapesScale;                                // 0x418(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GoatOverlapShapesScale;                            // 0x41C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PukeThrusterStrength;                              // 0x420(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2869[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            BurstSound;                                        // 0x428(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            BurpSound;                                         // 0x430(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            CleanedByWaterSound;                               // 0x438(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       BurstParticle;                                     // 0x440(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       EndBurstParticle;                                  // 0x448(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FWeightedElement_ActorClass>   DisgustingObjects;                                 // 0x450(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	float                                        DisgustingObjectNotifyRadius;                      // 0x460(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DisgustingObjectSpawnCooldown;                     // 0x464(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_286B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGStatusEffectDisgusting* GetDefaultObj();

	void SpawnBaaObject(class AGGGoat* OwnerGoat);
	void OnGoatBaa(class AGGGoat* GoatBaaing);
	void MulticastPlayDisgustingInWaterEffect(const struct FVector& Location);
	void MulticastPlayBurst(bool ForEnd);
};

// 0x198 (0x5B0 - 0x418)
// Class Goat2.GGStatusEffectElectric
class AGGStatusEffectElectric : public AGGStatusEffectBase
{
public:
	float                                        MatShockDuration;                                  // 0x418(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2881[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 NPCSourceEffects;                                  // 0x420(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 GoatSourceEffects;                                 // 0x440(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTag                          NPCElectrocuteVO;                                  // 0x460(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShouldNPCsDropHeldItems;                          // 0x468(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2883[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FWeightedElement_String>       ElectrocutedReactionWeights;                       // 0x470(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        ImpulseForce;                                      // 0x480(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CharacterImpulseForce;                             // 0x484(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ShockDamage;                                       // 0x488(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         CanTriggerExplosions;                              // 0x48C(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2885[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       ShockBurstParticle;                                // 0x490(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RangedShockRange;                                  // 0x498(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RangedShockSphereRadius;                           // 0x49C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RangedShockDistanceInfront;                        // 0x4A0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxRangedShockPerHeadbutt;                         // 0x4A4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDebugDrawSphereTrace;                             // 0x4A8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2887[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        InstinctElectricityChain;                          // 0x4AC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          ChainInstinctTag;                                  // 0x4B0(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AGGGoat*                               LastGoatSpreader;                                  // 0x4B8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AGGNPC*>                        ElectrocutedNPCs;                                  // 0x4C0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	float                                        PlayerGoatDuration;                                // 0x4D0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleDuration;                                   // 0x4D4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NPCDuration;                                       // 0x4D8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               VehicleShapeScale;                                 // 0x4DC(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       ElectricBeamParticle;                              // 0x4E8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GeneralVehicleSpeedIncrease;                       // 0x4F0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleBoostPower;                                 // 0x4F4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleBoostMaxSpeed;                              // 0x4F8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleBoostDuration;                              // 0x4FC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerVehicleBoostDuration;                        // 0x500(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_288C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       VehicleElectricTrail;                              // 0x508(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       VehicleVertexParticle;                             // 0x510(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_288E[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bShouldBoost;                                      // 0x524(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bDrawInWaterRadius;                                // 0x525(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_288F[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        InWaterShockRadius;                                // 0x528(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2891[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          NPCElectrifiedMontage;                             // 0x548(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2892[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UParticleSystemComponent*>      VehicleTrails;                                     // 0x568(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              VertexParticle;                                    // 0x578(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AActor*>                        PreviousActors;                                    // 0x580(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AActor*>                        AlreadySpreadToActors;                             // 0x590(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FElectrocutionState                   ElectrocutingCharacter;                            // 0x5A0(0x2)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2894[0xE];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGStatusEffectElectric* GetDefaultObj();

	void UnpauseNPC();
	void StopElectrocuting();
	void SelfInitialShock_BP(class AActor* ShockedActor);
	void SelfElectricShock_BP(class AActor* ShockedActor);
	void SelfElectricShock();
	void RemoveSourceEffects();
	void OnRep_ElectrocutingCharacter();
	void OnGoatBackKicked(class AGGGoat* Goat, bool bHitSomething, TArray<class AActor*>& KickedActors);
	void NPCSpreadToNearest();
	void MulticastSelfElectricShockEffect();
	void MulticastElectricBeam(class AActor* ShockedActor, bool bNewChain);
	void GoatHeadbutted(class AGGGoat* Goat, bool bHitSomething, TArray<class AActor*>& HeadbuttedActors, bool bIsChargeHeadbutt);
	void ElectrocutionChanged_BP(bool bIsElectrocuting, bool bElectrocutingGoat);
	void ElectricBeam_BP(class AActor* ShockedActor, bool bNewChain);
};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGStatusEffectInterface
class IGGStatusEffectInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IGGStatusEffectInterface* GetDefaultObj();

	bool RemoveStatusEffect(enum class EStatusEffectTypes TypeToRemove);
	bool HasStatusEffectByType(enum class EStatusEffectTypes TypeToCheck);
	bool HasStatusEffectByClass(TSubclassOf<class AGGStatusEffectBase> StatusEffectClass);
	class UGGStatusEffectManager* GetStatusEffectManager();
	bool ClearStatusEffects();
	class AGGStatusEffectBase* ApplyStatusEffect(enum class EStatusEffectTypes TypeToApply, enum class EApplicationMethod ApplicationMethod, class AActor* SpreadFrom, TSubclassOf<class AGGStatusEffectBase> StatusEffectClass, class AGGStatusEffectBase* SpreadFromStatus);
};

// 0x138 (0x1E8 - 0xB0)
// Class Goat2.GGStatusEffectManager
class UGGStatusEffectManager : public UActorComponent
{
public:
	bool                                         bCanGetStatusEffects;                              // 0xB0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEvenIfTooSmall;                                   // 0xB1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPreventStatusWhenAttachedToNPC;                   // 0xB2(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPreventStatusWhenAttachedToVehicle;               // 0xB3(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         CanTakeStatusEffectDamage;                         // 0xB4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         ShowAllShapes;                                     // 0xB5(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanEditStatusEffectOverrides;                     // 0xB6(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28D8[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DefaultShapeSizeMulti;                             // 0xB8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ParticleScale;                                     // 0xBC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<enum class EStatusEffectTypes>        StartingStatusEffects;                             // 0xC0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<enum class EStatusEffectTypes>        CanBeAffectedBy;                                   // 0xD0(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                               RelativeStatusLocation;                            // 0xE0(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  BoneAttachName;                                    // 0xEC(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_28DB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FStatusBlockRule>              BlockRules;                                        // 0xF8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FStatusEffectOverride>         StatusEffectOverrides;                             // 0x108(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_28DC[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnActorGotNewStatusEffect;                         // 0x178(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnActorLostStatusEffect;                           // 0x188(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class AGGStatusEffectBase*>           MaterialChangingEffects;                           // 0x198(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, Protected, NativeAccessSpecifierProtected)
	class AGGStatusEffectBase*                   CurrentMatChangeEffect;                            // 0x1A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanGetBurnt;                                      // 0x1B0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28DE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInterface*                    BurntMaterialOverride;                             // 0x1B8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SizzlingDurationOverride;                          // 0x1C0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasBeenBurnt;                                     // 0x1C4(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28DF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SprayedWithWaterTimestamp;                         // 0x1C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28E0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGCharacter*                          OwnerCharacter;                                    // 0x1D0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_28E1[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGStatusEffectManager* GetDefaultObj();

	void SetCanTakeStatusEffectDamage(bool bNewCanTakeDamage);
	void SetCanGetStatusEffects(bool bNewCanGetSE);
	void RemoveStatusEffect(enum class EStatusEffectTypes TypeToRemove);
	bool RemoveParticlularStatusEffect(class AGGStatusEffectBase* StatusEffectToRemove);
	void NotifyCollision(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	class AGGStatusEffectBase* NewStatusEffect(enum class EStatusEffectTypes TypeToCreate, enum class EApplicationMethod ApplicationMethod, class AActor* SpreadFrom, TSubclassOf<class AGGStatusEffectBase> StatusEffectClass, class AGGStatusEffectBase* SpreadFromStatus);
	bool HasStatusEffectByType(enum class EStatusEffectTypes TypeToCheck);
	bool HasStatusEffectByClass(TSubclassOf<class AGGStatusEffectBase> StatusEffectClass);
	bool HasInitManager();
	TArray<class AGGStatusEffectBase*> GetStatusEffects();
	TArray<struct FStatusEffectOverride> GetStatusEffectOverrides();
	float GetParticleScale();
	struct FStatusShapeData GetGeneratedSphereOverlapShape();
	struct FStatusShapeData GetGeneratedOverlapShape();
	bool GetCanTakeStatusEffectDamage();
	TArray<enum class EStatusEffectTypes> GetCanBeAffectedBy();
	class FName GetBoneAttachName();
	void ClearStatusEffects();
	bool CanGetStatusEffects();
};

// 0xA8 (0xD0 - 0x28)
// Class Goat2.GGStatusEffectPoolManager
class UGGStatusEffectPoolManager : public UObject
{
public:
	uint8                                        Pad_28EE[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinRadiusForSE;                                    // 0x58(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxPoolSize;                                       // 0x5C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UGGStatusEffectDataAsset>> SoftStatusEffectDefaultClassesDataAssets;          // 0x60(0x10)(ZeroConstructor, Config, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class UGGStatusEffectDataAsset*>      StatusEffectDefaultClassesDataAssets;              // 0x70(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class AGGStatusEffectBase*>           ActiveStatusEffects;                               // 0x80(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AGGStatusEffectBase*>           PooledStatusEffects;                               // 0x90(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	int32                                        RequiredBurningEffects;                            // 0xA0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FireGroupRadius;                                   // 0xA4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_28F0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FiretruckCheckInterval;                            // 0xAC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_28F1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GroupedBurningDuration;                            // 0xB4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinDistanceBetweenEventSpawns;                     // 0xB8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FireGroupLocationDuration;                         // 0xBC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_28F2[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGStatusEffectPoolManager* GetDefaultObj();

	void PoolAllStatusEffects();
	void MoveStatusEffectBetweenActors(class AGGStatusEffectBase* StatusEffect, class AActor* NewActor);
	TArray<class AGGStatusEffectBase*> GetStatusEffectPool();
	TSubclassOf<class AGGStatusEffectBase> GetDefaultClassFor(enum class EStatusEffectTypes Type);
	TArray<class AGGStatusEffectBase*> GetActiveStatusEffects();
	void DestroyAllPooledStatusEffects();
};

// 0xB0 (0x4C8 - 0x418)
// Class Goat2.GGStatusEffectSlippery
class AGGStatusEffectSlippery : public AGGStatusEffectBase
{
public:
	bool                                         bSetToBurningDuration;                             // 0x418(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_28F7[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       SlipperyTrailParticle;                             // 0x420(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       SlipperyTrailParticleFast;                         // 0x428(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       InAirTrailParticle;                                // 0x430(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       StartTransitionParticle;                           // 0x438(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       SlipperyGroundTrailParticle;                       // 0x440(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       GoatSlipperyGroundTrailParticle;                   // 0x448(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       VehicleSlipperyGroundTrailParticle;                // 0x450(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       StartParticle;                                     // 0x458(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FastSlipperyThreshold;                             // 0x460(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_28F9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            StartSoundGoat;                                    // 0x468(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            StartSoundNPCAndProps;                             // 0x470(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*              SlipperyTrail;                                     // 0x478(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              SlipperyTrailFast;                                 // 0x480(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              InAirTrail;                                        // 0x488(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              SlipperyGroundTrail;                               // 0x490(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UParticleSystemComponent*>      VehicleSlipperyGroundTrails;                       // 0x498(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class AGGSlipperyTrail*                      SlipperyTrailActor;                                // 0x4A8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSpawnSlipperyGroundTrail;                         // 0x4B0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_28FB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AGGSlipperyTrail>          SlipperyTailActorClass;                            // 0x4B8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DistanceNeededForPoint;                            // 0x4C0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_28FC[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGStatusEffectSlippery* GetDefaultObj();

	class AGGSlipperyTrail* GetSlipperyTrailActor();
};

// 0x0 (0x4C8 - 0x4C8)
// Class Goat2.GGStatusEffectSlippery_Greasy
class AGGStatusEffectSlippery_Greasy : public AGGStatusEffectSlippery
{
public:

	static class UClass* StaticClass();
	static class AGGStatusEffectSlippery_Greasy* GetDefaultObj();

};

// 0x1A0 (0x250 - 0xB0)
// Class Goat2.GGStatusEffectSourceComponent
class UGGStatusEffectSourceComponent : public UActorComponent
{
public:
	float                                        ParticleComponentMaxCullDistance;                  // 0xB0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_292D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnStatusSourceActivated;                           // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStatusSourceDeactivated;                         // 0xC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStatusSourceActiveChange;                        // 0xD8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnOtherSpreadToComponent;                          // 0xE8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bStartActive;                                      // 0xF8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bActivateFromContactWithStatus;                    // 0xF9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EStatusEffectTypes                TypeToActivateFrom;                                // 0xFA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanActivateFromOtherSourceComp;                   // 0xFB(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bActivateFromWaterVolume;                          // 0xFC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bActivateFromDamage;                               // 0xFD(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2930[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DamageNeeded;                                      // 0x100(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2931[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bDeactivateWithTime;                               // 0x108(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2932[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DeactivateAfter;                                   // 0x118(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2933[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSourceActiveState                    SourceActiveState;                                 // 0x120(0x10)(Edit, Net, DisableEditOnTemplate, EditConst, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bSpreadOnOverlap;                                  // 0x130(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSpreadOnHit;                                      // 0x131(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUpdateOverlapsInReCheck;                          // 0x132(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EStatusEffectTypes                StatusEffectToSpread;                              // 0x133(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2934[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AGGStatusEffectBase>       StatusEffectClass;                                 // 0x138(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bRemoveSpreadTypeFromOwnerManager;                 // 0x140(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bContinuallyRecheckOverlaps;                       // 0x141(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2935[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RecheckInterval;                                   // 0x144(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2936[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ActorSpreadCooldown;                               // 0x150(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2937[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FRecentActor>                  RecentlySpreadToActors;                            // 0x158(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, Protected, NativeAccessSpecifierProtected)
	bool                                         bSizzleInsteadOfInstantSpread;                     // 0x168(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2938[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SizzlingDuration;                                  // 0x16C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       SizzleParticle;                                    // 0x170(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SizzlingParticleScale;                             // 0x178(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2939[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            SizzleSound;                                       // 0x180(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FRecentActor>                  SizzlingActors;                                    // 0x188(0x10)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<struct FDelayedSpreadActorEffect>     SizzlingActorEffects;                              // 0x198(0x10)(ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	bool                                         bNotifyNPCsInstead;                                // 0x1A8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_293A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EMoods>                    SkipMoods;                                         // 0x1B0(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTag                          NotifyReactionType;                                // 0x1C0(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FComponentReference>           OverlapComponents;                                 // 0x1C8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FComponentReference>           HitComponents;                                     // 0x1D8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FComponentReference>           ParticleComponents;                                // 0x1E8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FComponentReference>           AudioComponents;                                   // 0x1F8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<class UPrimitiveComponent*>           RegisteredOverlapComponents;                       // 0x208(0x10)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UPrimitiveComponent*>           RegisteredHitComponents;                           // 0x218(0x10)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UParticleSystemComponent*>      RegisteredParticleComponents;                      // 0x228(0x10)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UAudioComponent*>               RegisteredAudioComponents;                         // 0x238(0x10)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_293B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGStatusEffectSourceComponent* GetDefaultObj();

	void UnregisterParticleComponent(class UParticleSystemComponent* ParticleComponent);
	void UnregisterComponentForOverlap(class UPrimitiveComponent* Component);
	void UnregisterComponentForHit(class UPrimitiveComponent* Component);
	void UnregisterAudioComponent(class UAudioComponent* AudioComponent);
	void StatusWasSpread(class AActor* SpreadTo, enum class EApplicationMethod ApplicationMethod, bool SpreadToSource);
	void SpreadStatusEffect(class AActor* SpreadTo, enum class EApplicationMethod ApplicationMethod, class UPrimitiveComponent* SpreadToComponent);
	void SourceDeactivated();
	void SourceActivated(class AActor* Activator);
	void SetUpdateOverlapsInReCheck(bool bShouldUpdate);
	void SetStatusEffectToSpread(enum class EStatusEffectTypes Type, TSubclassOf<class AGGStatusEffectBase> Class);
	void SetStartActive(bool bShouldStartActive);
	void SetSpreadOnOverlap(bool bShouldSpread);
	void SetSpreadOnHit(bool bShouldSpread);
	void SetDeactivateWithTime(bool bShouldDeactivate);
	void SetCanActivateFromOtherSourceComp(bool bActivateFromOtherSourceComp);
	void RegisterParticleComponent(class UParticleSystemComponent* ParticleComponent);
	void RegisterComponentForOverlap(class UPrimitiveComponent* Component);
	void RegisterComponentForHit(class UPrimitiveComponent* Component);
	void RegisterAudioComponent(class UAudioComponent* AudioComponent);
	void RecheckOverlaps();
	void PhysicsVolumeChanged(class APhysicsVolume* NewVolume);
	void OwnerTookDamage(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void OverlapEnd(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OverlapBegin(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnRep_SourceActiveState();
	void OnRep_SizzlingActors();
	void OnHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	bool IsSourceActive();
	bool IsSizzling(class AActor* Actor);
	bool IsActorOnCooldown(class AActor* CheckActor);
	bool HasStatusEffectSourceComp(class AActor* FromActor, TSubclassOf<class UGGStatusEffectSourceComponent> SpecificClass);
	enum class EStatusEffectTypes GetStatusEffectToSpread();
	class UGGStatusEffectSourceComponent* GetStatusEffectSourceComp(class AActor* FromActor, TSubclassOf<class UGGStatusEffectSourceComponent> SpecificClass);
	bool GetCanActivateFromOtherSourceComp();
	bool GetActivateFromContactWithStatus();
	class AActor* GetActivatedBy();
	void DeactivateSource();
	void ActivateSource(class AActor* Activator);
};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGStatusEffectTypes
class UGGStatusEffectTypes : public UObject
{
public:

	static class UClass* StaticClass();
	static class UGGStatusEffectTypes* GetDefaultObj();

	bool HasStatusInterfaceOrIsSource(class AActor* Actor);
	bool CanBeAffectedByStatusEffects(class AActor* Actor, enum class EStatusEffectTypes TypeToCheck);
};

// 0x10 (0x240 - 0x230)
// Class Goat2.GGStatusSourceStatic_Base
class AGGStatusSourceStatic_Base : public AActor
{
public:
	bool                                         bUsePropState;                                     // 0x230(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2941[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class UStaticMeshComponent>   MeshToHide;                                        // 0x234(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2942[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGStatusSourceStatic_Base* GetDefaultObj();

	void OnBecamePhysActor();
};

// 0xC8 (0xF0 - 0x28)
// Class Goat2.GGSteamFriendsManager
class UGGSteamFriendsManager : public UObject
{
public:
	uint8                                        Pad_2943[0x58];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            Delegate_OnFriendListUpdated;                      // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            Delegate_OnFriendListRead;                         // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            Delegate_OnPresenceUpdated;                        // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2944[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGSteamFriendsManager* GetDefaultObj();

	class UGGSteamFriendsManager* GetSteamFriendsManager(class UObject* WorldContext);
};

// 0xD0 (0x180 - 0xB0)
// Class Goat2.GGStiffBonesComponent
class UGGStiffBonesComponent : public UActorComponent
{
public:
	TMap<enum class EStiffBodypart, struct FGGStiffBodyPartBoneArray> StiffBodyPartToBonesMap;                           // 0xB0(0x50)(Edit, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                          CurrentStiffBones;                                 // 0x100(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<enum class EStiffBodypart>            StiffBodyParts;                                    // 0x110(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2948[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGStiffBonesComponent* GetDefaultObj();

	void RemoveCurrentStiffBone(class FName& Bone);
	void OnNPCOwnerPooled(class AGGNPC* NPC, bool bWasPooled);
	void OnAltGoatChanged(class AGGGoat* Goat, class UGGAlternativeGoatDataAsset* NewAltGoat);
	void AddCurrentStiffBone(class FName& Bone);
};

// 0x58 (0x288 - 0x230)
// Class Goat2.GGStreetStall
class AGGStreetStall : public AActor
{
public:
	uint8                                        Pad_2958[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       RootComp;                                          // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                       VendorLocationComp;                                // 0x240(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                       BuyerLocationComp;                                 // 0x248(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         CanTakeDamage;                                     // 0x250(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_295C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Health;                                            // 0x254(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FWeightedElement_ActorAttachment> SellItems;                                         // 0x258(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         IsStallDestroyed;                                  // 0x268(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_295D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGStatusEffectManager*                StatusEffectManager;                               // 0x270(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGNPCEvent_StreetStall*               OwningEvent;                                       // 0x278(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_295E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGStreetStall* GetDefaultObj();

	void StallDestroyed();
	bool RemoveStatusEffect(enum class EStatusEffectTypes TypeToRemove);
	void OnRep_IsStallDestroyed();
	bool HasStatusEffectByType(enum class EStatusEffectTypes TypeToCheck);
	bool HasStatusEffectByClass(TSubclassOf<class AGGStatusEffectBase> StatusEffectClass);
	class UGGStatusEffectManager* GetStatusEffectManager();
	struct FWeightedElement_ActorAttachment GetRandomStallItem(bool* Successful);
	TArray<struct FVector> GenerateQueuePositions(int32 PositionAmount, enum class EQueueDirections Direction, float SpaceBetween, float SpaceFromBuyLoc);
	bool ClearStatusEffects();
	class AGGStatusEffectBase* ApplyStatusEffect(enum class EStatusEffectTypes TypeToApply, enum class EApplicationMethod ApplicationMethod, class AActor* SpreadFrom, TSubclassOf<class AGGStatusEffectBase> StatusEffectClass, class AGGStatusEffectBase* SpreadFromStatus);
};

// 0x8 (0x38 - 0x30)
// Class Goat2.GGStretchGoalGroup
class UGGStretchGoalGroup : public UDataAsset
{
public:
	int32                                        GroupSize;                                         // 0x30(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2960[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGStretchGoalGroup* GetDefaultObj();

};

// 0x10 (0x240 - 0x230)
// Class Goat2.GGStretchGoalTrigger
class AGGStretchGoalTrigger : public AActor
{
public:
	uint8                                        Pad_2961[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StretchGoalHoldDuration;                           // 0x238(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2962[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGStretchGoalTrigger* GetDefaultObj();

};

// 0x48 (0x468 - 0x420)
// Class Goat2.GGSubtitleNotificationUserWidget
class UGGSubtitleNotificationUserWidget : public UGGNotificationUserWidget
{
public:
	class UVerticalBox*                          SubtitlesVerticalBox;                              // 0x420(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                        ClosedCaptionsHorizontalBox;                       // 0x428(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               SubtitleRowWidgetClass;                            // 0x430(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxNumberOfSubtitles;                              // 0x438(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxNumberOfClosedCaptions;                         // 0x43C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2963[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGGActiveSubtitleWidget>       ActiveDialogueWidgets;                             // 0x448(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FGGActiveSubtitleWidget>       ActiveCloseCaptionWidgets;                         // 0x458(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGSubtitleNotificationUserWidget* GetDefaultObj();

};

// 0x8 (0x310 - 0x308)
// Class Goat2.GGSynchronizeActionUserWidget
class UGGSynchronizeActionUserWidget : public UGGUserWidget
{
public:
	enum class ESynchronizeActionState           CurrentSynchronizeState;                           // 0x308(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_296A[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGSynchronizeActionUserWidget* GetDefaultObj();

	void UpdateSynchronizeState(enum class ESynchronizeActionState NewState);
	void OnSynchronizeStateChanged(enum class ESynchronizeActionState NewState);
};

// 0x80 (0x350 - 0x2D0)
// Class Goat2.GGSyringe
class AGGSyringe : public AGGPhysicsProjectile
{
public:
	TArray<class UStaticMesh*>                   ListOfSyringeMeshes;                               // 0x2D0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        NPCEffectDuration;                                 // 0x2E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        NPCFloatingForce;                                  // 0x2E4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        NPCAddPitch;                                       // 0x2E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumSyringesRequiredForFloating;                    // 0x2EC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PlayerEffectDuration;                              // 0x2F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PlayerFloatingForce;                               // 0x2F4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          GoatHeliumInstinctTag;                             // 0x2F8(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GoatMultiplierThreshold;                           // 0x300(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PlayerAddPitch;                                    // 0x304(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PActorGravity;                                     // 0x308(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PActorMaxVelocity;                                 // 0x30C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PActorAddGravityMultiplier;                        // 0x310(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PActorEffectDuration;                              // 0x314(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        VehicleGravity;                                    // 0x318(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        VehicleMaxVelocity;                                // 0x31C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        VehicleAddGravityMultiplier;                       // 0x320(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        VehicleEffectDuration;                             // 0x324(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BigVehicleMultiplierThreshold;                     // 0x328(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SmallVehicleMultiplierThreshold;                   // 0x32C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        AmountOfCarsToFloat;                               // 0x330(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          CarHeliumInstinctTag;                              // 0x334(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCountHeliumCars;                                  // 0x33C(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2971[0x13];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGSyringe* GetDefaultObj();

	void OnHitCharacterMulticast(class AGGCharacter* Character, class FName HitBone, const struct FVector& RelativeLocation);
};

// 0x18 (0xC8 - 0xB0)
// Class Goat2.GGSyringeEffectComponent
class UGGSyringeEffectComponent : public UActorComponent
{
public:
	uint8                                        Pad_297A[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGSyringeEffectComponent* GetDefaultObj();

	void OnOwnerUnRagdoll(bool bRagdollOnGround, class ULSCharacterMovementComponent* MovementComp, class ACharacter* UnRagdolledCharacter, struct FRagdollStateChangeSettings& StateChangeSettings);
};

// 0x48 (0x278 - 0x230)
// Class Goat2.GGTantGearProjectile
class AGGTantGearProjectile : public AActor
{
public:
	class UGGStaticMeshComponent*                ProjectilMesh;                                     // 0x230(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProjectileMovementComponent*          ProjectileComp;                                    // 0x238(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageAmount;                                      // 0x240(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ImpulseForce;                                      // 0x244(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanTripOnIt;                                      // 0x248(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanChangeMood;                                    // 0x249(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanTriggerRagdoll;                                // 0x24A(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2983[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ImpulseForceFromGround;                            // 0x24C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMaterialInterface*>            ProjectileMaterials;                               // 0x250(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FString                                AchievementID;                                     // 0x260(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2984[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGTantGearProjectile* GetDefaultObj();

	void OnHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit);
};

// 0x0 (0x230 - 0x230)
// Class Goat2.GGTantTurrent
class AGGTantTurrent : public AActor
{
public:

	static class UClass* StaticClass();
	static class AGGTantTurrent* GetDefaultObj();

};

// 0x48 (0x78 - 0x30)
// Class Goat2.GGTelemetrySubsystem
class UGGTelemetrySubsystem : public UGameInstanceSubsystem
{
public:
	bool                                         bIsSessionRunning;                                 // 0x30(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_299E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGPerformanceTracker*                 PerformanceTracker;                                // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGuid                                 CurrentGameId;                                     // 0x40(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGuid                                 CurrentGameWorldId;                                // 0x50(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                CurrentModeString;                                 // 0x60(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_299F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGTelemetrySubsystem* GetDefaultObj();

	void UpdateGameModeState(class AGGGameState* GameState);
	void SubmitString(enum class ETelemetryEvent EventID, const class FString& StringKey, const class FString& StringData);
	bool SubmitJSONObject(enum class ETelemetryEvent EventID, class UObject* JsonObject);
	void SubmitInt(enum class ETelemetryEvent EventID, const class FString& IntKey, int32& IntData);
	void SetStateString(enum class ETelemetryState StateId, const class FString& StringData);
	bool SetStateJSONObject(enum class ETelemetryState StateId, class UObject* JsonObject);
	void SetStateInt(enum class ETelemetryState StateId, int32& IntData);
	void NotifyGameWorldStop(class AGGGameState* GameState);
	void NotifyGameWorldStart(const struct FGuid& WorldId, class AGGGameState* GameState);
};

// 0x60 (0x90 - 0x30)
// Class Goat2.GGTeleportAreaDataAsset
class UGGTeleportAreaDataAsset : public UDataAsset
{
public:
	enum class ETeleportAreaLoadingType          AreaLoadingType;                                   // 0x30(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRequireAllPlayerParticipation;                    // 0x31(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUnloadLightingLevels;                             // 0x32(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_29A6[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LevelStreamDelay;                                  // 0x34(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowAdjustingTeleportIn;                         // 0x38(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowAdjustingTeleportOut;                        // 0x39(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_29A8[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AdjustDistance;                                    // 0x3C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               AreaBoundingBox;                                   // 0x40(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          PlayerWorldArea;                                   // 0x4C(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMovementMode                     TransitionMoveMode;                                // 0x54(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldCreateInstancedArea;                        // 0x55(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAssignEnteringPlayerAsLogicOwner;                 // 0x56(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_29A9[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSoftObjectPtr<class UWorld>>         AreaStreamingLevels;                               // 0x58(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UWorld>                 AreaLevelToInstance;                               // 0x68(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGTeleportAreaDataAsset* GetDefaultObj();

};

// 0x80 (0x2B0 - 0x230)
// Class Goat2.GGTeleportAreaEntrance
class AGGTeleportAreaEntrance : public AActor
{
public:
	uint8                                        Pad_29BE[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       SceneRoot;                                         // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UArrowComponent*                       ExitLocation;                                      // 0x240(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         OverlapBox;                                        // 0x248(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextRenderComponent*                  EditorNameDisplayText;                             // 0x250(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGTeleportAreaDataAsset*              AreaAsset;                                         // 0x258(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAreaEntranceType                 EntranceType;                                      // 0x260(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMainAreaEntryPoint;                               // 0x261(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEntranceStartActive;                              // 0x262(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTravelByOverlap;                                  // 0x263(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerLaunchForce;                                 // 0x264(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerSpawnDistanceAway;                           // 0x268(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldGatherGoats;                                // 0x26C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_29C0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                GatherID;                                          // 0x270(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceConsideredReached;                         // 0x280(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InviteDuration;                                    // 0x284(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowGoatCounterNotification;                      // 0x288(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRemoveAutomatically;                              // 0x289(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bManuallySetReachedTarget;                         // 0x28A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsEntranceActive;                                 // 0x28B(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_29C2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FRecentActor>                  RecentlyTraveled;                                  // 0x290(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class AGGPlayerState*>                PlayersInOverlapBox;                               // 0x2A0(0x10)(Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AGGTeleportAreaEntrance* GetDefaultObj();

	void SetAreaEntranceActive(bool bNewActive);
	void OnRep_bIsEntranceActive();
	void OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnAllGoatsGathered_BP();
	void OnAllGoatsGathered(const class FString& DoneGatherID);
	void MakePlayerStartTravel(class AGGPlayerController* Player);
	void MakePlayersStartTravel(const TArray<class AGGPlayerController*>& Players);
	bool IsAreaEntranceActive();
	void IsActiveChanged();
	bool HasPlayerRecentlyTraveled(class AGGPlayerController* Player);
	class FText GetInviteTitle(class AGGPlayerState* Player);
	class FText GetInviteBody(class AGGPlayerState* Player);
	class FText GetGoatCountTitle(class AGGPlayerState* Player);
	class FText GetGoatCountBody(class AGGPlayerState* Player);
	struct FTransform GetExitTransform();
	bool AreAllPlayersInOverlap();
};

// 0xA0 (0x2D0 - 0x230)
// Class Goat2.GGTeleportAreaLogic
class AGGTeleportAreaLogic : public AActor
{
public:
	class USceneComponent*                       SceneRoot;                                         // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class AActor>>         RuntimeSpawnedActors;                              // 0x238(0x10)(ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	bool                                         bUseCheckpoints;                                   // 0x248(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_29EA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAreaCheckpoint>               Checkpoints;                                       // 0x250(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bCanEverGoBackwards;                               // 0x260(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_29EB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAreaCheckpoint                       CurrentCheckpoint;                                 // 0x268(0x20)(Net, Protected, NativeAccessSpecifierProtected)
	TArray<class AGGPlayerController*>           PlayersInArea;                                     // 0x288(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class AGGPlayerState*>                PlayerStatesInArea;                                // 0x298(0x10)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<class AGGPlayerState*>                BroadcastedPlayers;                                // 0x2A8(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UGGTeleportAreaDataAsset*              CurrentAreaAsset;                                  // 0x2B8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_29EC[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGTeleportAreaEntrance*               DefaultMainEntrance;                               // 0x2C8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AGGTeleportAreaLogic* GetDefaultObj();

	void SetCurrentCheckpoint_Name(const class FString& CheckpointName);
	void SetCurrentCheckpoint_Index(int32 Index);
	void OnVehiclePooledOrMoved(class AGGVehicle* Vehicle, bool bWasPooled);
	void OnRep_PlayerStatesInArea();
	void OnNPCPooledOrMoved(class AGGNPC* NPC, bool bWasPooled);
	void OnActorEndPlay(class AActor* Actor, enum class EEndPlayReason EndPlayReason);
	void MulticastAllAreaLevelsLoaded(class UGGTeleportAreaDataAsset* AreaAsset, int32 Slot);
	bool IsAllPlayersInArea();
	bool HasReachedACheckpoint();
	TArray<class AGGPlayerState*> GetPlayerStatesInArea();
	TArray<class AGGPlayerController*> GetPlayersInArea();
	struct FAreaCheckpoint GetCurrentCheckpoint();
	int32 GetAreaSlot();
	class UGGTeleportAreaDataAsset* GetAreaAsset();
	void ClearCurrentCheckpoint();
	void BP_PlayerRespawnedInArea(class AGGPlayerState* Player, class AGGGoat* Goat);
	void BP_PlayerExitedArea(class AGGPlayerState* Player, bool bLocalPlayerExited);
	void BP_PlayerEnteredArea(class AGGPlayerState* Player, bool bLocalPlayerEntered);
	void BP_AreaAboutToClose();
	void BP_AllAreaLevelsLoaded(class UGGTeleportAreaDataAsset* AreaAsset, int32 Slot);
	void AddRuntimeSpawnedActor(class AActor* Actor);
};

// 0x8 (0x270 - 0x268)
// Class Goat2.GGTeleportAreaPlayerStart
class AGGTeleportAreaPlayerStart : public APlayerStart
{
public:
	bool                                         bUsedByCheckpoint;                                 // 0x268(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_29ED[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGTeleportAreaPlayerStart* GetDefaultObj();

};

// 0x168 (0x1C8 - 0x60)
// Class Goat2.GGTeleportAreaSubsystem
class UGGTeleportAreaSubsystem : public UGGWorldSubsystem
{
public:
	uint8                                        Pad_2A30[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int32, struct FAreaSlotData>            AreaSlots;                                         // 0xB0(0x50)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A31[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPendingAreaEnter>             PendingAreaEnters;                                 // 0x110(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FPendingAreaExit>              PendingAreaExits;                                  // 0x120(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TMap<class UGGTeleportAreaDataAsset*, class AGGTeleportAreaEntrance*> AreaEntrances;                                     // 0x130(0x50)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A32[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnTeleportAreaOpening;                             // 0x1A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTeleportAreaClosing;                             // 0x1B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FTimerHandle                          DelayedLightingStreamTH;                           // 0x1C0(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGGTeleportAreaSubsystem* GetDefaultObj();

	void TeleportStateUpdate(class AGGPlayerController* Controller, class AGGGoat* Goat, enum class ELoadingScreenStage CurrentStage);
	void OnLevelUnloaded(class ULevelStreaming* LevelStream);
	void OnLevelShown(class ULevelStreaming* LevelStream);
	void OnLevelHidden(class ULevelStreaming* LevelStream);
	bool IsSlotOccupied(int32 Slot);
	bool IsPlayerExitingATPArea(class AGGPlayerController* Player);
	bool IsPlayerEnteringATPArea(class AGGPlayerController* Player);
	bool IsLocationInsideAnyArea(const struct FVector& Location);
	bool IsAreaUnloading(int32 Slot);
	bool IsAreaAssetBeingUsedOnSlot(class UGGTeleportAreaDataAsset* AreaAsset, int32 Slot, bool bAlsoCheckForReserved);
	bool IsAreaAssetBeingUsed(class UGGTeleportAreaDataAsset* AreaAsset, bool bAlsoCheckForReserved);
	bool HasAreaThatRequiresFullParticipation();
	bool HasAreaFinishedLoading(int32 Slot);
	int32 GetSlotOccupiedByAreaAsset(class UGGTeleportAreaDataAsset* AreaAsset);
	TArray<class APlayerStart*> GetRespawnPlayerStarts(int32 Slot);
	struct FAreaAssetOnSlot GetAreaThatRequiresFullParticipation();
	struct FVector GetAreaSlotLocation(int32 Slot);
	int32 GetAreaSlotForLocation(const struct FVector& Location);
	TArray<class APlayerStart*> FindPlayerStartsInArea(int32 Slot);
	class AGGTeleportAreaEntrance* FindMainEntranceInArea(int32 Slot);
	class AGGTeleportAreaEntrance* FindEntranceForArea(class UGGTeleportAreaDataAsset* AreaAsset);
	class AGGTeleportAreaLogic* FindAreaLogic(int32 Slot);
	bool ExitTeleportAreaTogether(const TArray<class AGGPlayerController*>& Players);
	bool ExitTeleportArea(class AGGPlayerController* Player);
	bool EnterTeleportAreaTogether(class UGGTeleportAreaDataAsset* AreaAsset, const struct FAreaEnterParameters& EnterParameters);
	bool EnterTeleportArea(class AGGPlayerController* Player, class UGGTeleportAreaDataAsset* AreaAsset, const struct FAreaEnterParameters& EnterParameters);
	void CloseTeleportArea(int32 Slot);
	bool CancelAreaTravel(class AGGPlayerController* Player);
	void AreaFinishedUnloading(int32 Slot);
	void AreaFinishedLoading(int32 Slot);
};

// 0xC8 (0x178 - 0xB0)
// Class Goat2.GGTeleportAreaUser
class UGGTeleportAreaUser : public UActorComponent
{
public:
	bool                                         bTeleportAsSoonAsReady;                            // 0xB0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A39[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnEnteredTeleportArea;                             // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnLeftTeleportArea;                                // 0xC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStartingToEnterArea;                             // 0xD8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStartingToLeaveArea;                             // 0xE8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FInAreaState                          InAreaState;                                       // 0xF8(0x10)(Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bIsInsideAreaBounds;                               // 0x108(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A3B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGTeleportAreaDataAsset*              CachedInArea;                                      // 0x110(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGTeleportAreaDataAsset*              TravelingIntoArea;                                 // 0x118(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGTeleportAreaDataAsset*              TravelingFromArea;                                 // 0x120(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A3C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGTeleportAreaDataAsset*              LoadingLevelsForAsset;                             // 0x130(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ULevelStreaming*>               LevelsToLoad;                                      // 0x138(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class AGGPlayerState*                        OwningPlayerState;                                 // 0x148(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AGGPlayerController*                   OwningPlayer;                                      // 0x150(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A3D[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGTeleportAreaUser* GetDefaultObj();

	void ServerTeleportPlayer(bool bTeleportInto);
	void ServerExitTeleportArea();
	void OnStateGoatUpdated(class AGGGoat* NewGoat);
	void OnRep_InAreaState();
	void OnGoatReplaced(class AGGGoat* OldGoat, class AGGGoat* NewGoat);
	bool IsPlayerInATPArea();
	bool IsGoatInsideAreaBounds();
	bool IsAreaLoadedAndReadyToEnter();
	bool InTransition();
	class UGGTeleportAreaUser* GetTeleportAreaUserComponent(class AGGPlayerController* Player);
	int32 GetCurrentAreaSlot();
	class UGGTeleportAreaDataAsset* GetCurrentArea();
	void ExitTeleportArea();
};

// 0x1A0 (0x250 - 0xB0)
// Class Goat2.GGTeleportationComponent
class UGGTeleportationComponent : public UActorComponent
{
public:
	struct FGameplayTagContainer                 EffectSourcesDuringTeleport;                       // 0xB0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FCurrentTeleport                      CurrentTeleport;                                   // 0xD0(0xF0)(Net, RepNotify, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2A52[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AGGPlayerController*>           VehiclePartners;                                   // 0x1D8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2A54[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGPlayerController*                   OwnerPlayer;                                       // 0x1F0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGGoat*                               OwnerPlayerGoat;                                   // 0x1F8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGGLoadingScreenComponent*             LoadingScreenComp;                                 // 0x200(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2A57[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class UUserWidget>             TeleportNotAllowedWarningWidgetClass;              // 0x220(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           TeleportNotAllowedWarningWidgetInstance;           // 0x248(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGTeleportationComponent* GetDefaultObj();

	void TeleportPlayer_WithCallbacks(class APlayerController* PlayerController, const struct FVector& Location, const struct FRotator& Rotation, const struct FTeleportParameters& TeleportParameters, const struct FLoadingScreenParameters& LoadingScreenParameters, FDelegateProperty_ OnTeleportStageUpdate, class UGGTeleportSettingsDataAsset* SettingsAsset);
	void TeleportPlayer_LookAt_WithCallbacks(class APlayerController* PlayerController, const struct FVector& Location, const struct FVector& LookAtLocation, const struct FTeleportParameters& TeleportParameters, const struct FLoadingScreenParameters& LoadingScreenParameters, FDelegateProperty_ OnTeleportStageUpdate, class UGGTeleportSettingsDataAsset* SettingsAsset);
	void TeleportPlayer_LookAt(class APlayerController* PlayerController, const struct FVector& Location, const struct FVector& LookAtLocation, const struct FTeleportParameters& TeleportParameters, const struct FLoadingScreenParameters& LoadingScreenParameters, class UGGTeleportSettingsDataAsset* SettingsAsset);
	void TeleportPlayer(class APlayerController* PlayerController, const struct FVector& Location, const struct FRotator& Rotation, const struct FTeleportParameters& TeleportParameters, const struct FLoadingScreenParameters& LoadingScreenParameters, class UGGTeleportSettingsDataAsset* SettingsAsset);
	void ShowTeleportWarning();
	bool ShouldTeleportWithVehicle(class APlayerController* PlayerController);
	void ServerTeleportPlayer(const struct FVector_NetQuantize& Location, const struct FRotator& Rotation, const struct FTeleportParameters& TeleportParameters, const struct FLoadingScreenParameters& LoadingScreenParameters, bool bUseLookAt, const struct FVector& LookAtLocation);
	void ServerMoveThePlayer();
	void ServerCancelPlayerTeleport();
	void PlayerMoved();
	void OnRep_CurrentTeleport();
	void OnLoadingScreenRemoved(class AGGPlayerController* Player, enum class ELoadingScreenType LoadingScreenType, enum class ERemovalReason RemovalReason);
	bool IsTeleporting(class APlayerController* PlayerController);
	bool IsAllowedToTeleport(class APlayerController* PlayerController);
	void HideTeleportWarning();
	class UGGTeleportationComponent* GetTeleportComponent(class APlayerController* PlayerController);
	void CancelPlayerTeleport(class APlayerController* PlayerController);
};

// 0x0 (0x518 - 0x518)
// Class Goat2.GGTeleportLoadingScreen
class UGGTeleportLoadingScreen : public UGGLoadingScreen
{
public:

	static class UClass* StaticClass();
	static class UGGTeleportLoadingScreen* GetDefaultObj();

	void InitializeLoadingScreen(TArray<struct FLoadingWidgetParameter>& WidgetParameters);
};

// 0xA0 (0xD0 - 0x30)
// Class Goat2.GGTeleportSettingsDataAsset
class UGGTeleportSettingsDataAsset : public UDataAsset
{
public:
	struct FTeleportParameters                   TeleportParameters;                                // 0x30(0x58)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FLoadingScreenParameters              LoadingScreenParameters;                           // 0x88(0x48)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGTeleportSettingsDataAsset* GetDefaultObj();

	struct FTeleportParameters MakeTeleportParameters(const struct FTeleportParameters& BaseParameters, int32 Priority, class AGGVehicle* TeleportIntoVehicle, class AActor* LocationRelativeToActor);
	struct FTeleportParameters GetTeleportParameters();
	struct FTeleportParameters GetTeleportAssetParameters(class UGGTeleportSettingsDataAsset* SettingAsset, int32 Priority, class AGGVehicle* TeleportIntoVehicle, class AActor* LocationRelativeToActor, const struct FSpecialLocationAdjust& SpecialAdjust, struct FLoadingScreenParameters* LoadingScreenParams);
	struct FLoadingScreenParameters GetLoadingScreenParameters();
};

// 0x98 (0x340 - 0x2A8)
// Class Goat2.GGTextBlock
class UGGTextBlock : public UTextBlock
{
public:
	struct FLinearColor                          HighlightColor;                                    // 0x2A8(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                           HighlightShape;                                    // 0x2B8(0x88)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGTextBlock* GetDefaultObj();

	void SetHighlightText(class FText HighlightText);
};

// 0x0 (0x260 - 0x260)
// Class Goat2.GGThirdEyeUserWidget
class UGGThirdEyeUserWidget : public UUserWidget
{
public:

	static class UClass* StaticClass();
	static class UGGThirdEyeUserWidget* GetDefaultObj();

	void SetCaptureTexture(class UTextureRenderTarget2D* Texture);
	void SetCaptureMaterial(class UMaterialInstanceDynamic* Material);
};

// 0x60 (0x290 - 0x230)
// Class Goat2.GGThirdEyeWidgetSpawner
class AGGThirdEyeWidgetSpawner : public AActor
{
public:
	class USceneComponent*                       Root;                                              // 0x230(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneCaptureComponent2D*              SceneCaptureComponent;                             // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetComponent*                      ThirdEyeWidgetComp;                                // 0x240(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>               ThirdEyeWidgetClass;                               // 0x248(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FText>                          RandomInfo;                                        // 0x250(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    DefaultTextureMaterial;                            // 0x260(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              TextureMaterial;                                   // 0x268(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                CurrentPactor;                                     // 0x270(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A79[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTextureRenderTarget2D*                TextureTarget;                                     // 0x280(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                OwningGoat;                                        // 0x288(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AGGThirdEyeWidgetSpawner* GetDefaultObj();

	void OnUpdateThirdEyeWidget(class AActor* Target);
	class FString GetTargetName(class AActor* Target);
	class FString GetRandomInformation();
};

// 0x0 (0x230 - 0x230)
// Class Goat2.GGThroneRoomScanner
class AGGThroneRoomScanner : public AActor
{
public:

	static class UClass* StaticClass();
	static class AGGThroneRoomScanner* GetDefaultObj();

};

// 0x78 (0x2D8 - 0x260)
// Class Goat2.GGTiledMinimapWidget
class UGGTiledMinimapWidget : public UUserWidget
{
public:
	class UUniformGridPanel*                     GridPanel;                                         // 0x260(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUniformGridPanel*                     LOD0GridPanel;                                     // 0x268(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Canvas;                                            // 0x270(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGMinimapDataAsset*                   PreviewMap;                                        // 0x278(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        PreviewLOD;                                        // 0x280(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A7E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGGTiledMinimapDebugWidget> DebugWidgetClass;                                  // 0x288(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A80[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UTexture2D*>                    CurrentlyDisplayedTextures;                        // 0x2A0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2A81[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGMinimapSubsystem*                   MinimapSubsystem;                                  // 0x2C8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGGTiledMinimapDebugWidget*            DebugWidget;                                       // 0x2D0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGTiledMinimapWidget* GetDefaultObj();

};

// 0x10 (0x270 - 0x260)
// Class Goat2.GGTiledMinimapDebugWidget
class UGGTiledMinimapDebugWidget : public UUserWidget
{
public:
	class UGGTiledMinimapWidget*                 MinimapWidget;                                     // 0x260(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USlateBrushAsset*                      SlateBrush;                                        // 0x268(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGTiledMinimapDebugWidget* GetDefaultObj();

};

// 0x508 (0x890 - 0x388)
// Class Goat2.GGTileView
class UGGTileView : public UTileView
{
public:
	bool                                         bWrapVerticalNavigation;                           // 0x388(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowScrolling;                                   // 0x389(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHandleGamepadAnalogScrolling;                     // 0x38A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bGamepadSelectFromVisibleWidgets;                  // 0x38B(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A86[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            BP_OnTileViewEmpty;                                // 0x390(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScrollBarStyle                       ScrollBarStyle;                                    // 0x3A0(0x4D0)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	enum class EOrientation                      ScrollBarOrientation;                              // 0x870(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESlateVisibility                  ScrollBarVisibility;                               // 0x871(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A87[0x1E];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGTileView* GetDefaultObj();

};

// 0x70 (0xA0 - 0x30)
// Class Goat2.GGTimeSlicerSubsystem
class UGGTimeSlicerSubsystem : public UWorldSubsystem
{
public:
	uint8                                        Pad_2A8E[0x70];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGTimeSlicerSubsystem* GetDefaultObj();

	void K2_TryCallFunction(class UObject* WorldContextObject, FDelegateProperty_ Delegate, class FName& Name, enum class ECallMode CallMode);
};

// 0x0 (0x460 - 0x460)
// Class Goat2.GGTokenUserWidget
class UGGTokenUserWidget : public UGGInventoryUserWidget
{
public:

	static class UClass* StaticClass();
	static class UGGTokenUserWidget* GetDefaultObj();

};

// 0x30 (0x350 - 0x320)
// Class Goat2.GGTopBarNavigationUserWidget
class UGGTopBarNavigationUserWidget : public UGGMenuComponentUserWidget
{
public:
	TArray<class UGGMenuDataAsset*>              MenuData;                                          // 0x320(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UGGUserWidget*>                 ButtonInstances;                                   // 0x330(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AA5[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGTopBarNavigationUserWidget* GetDefaultObj();

	void ToggleTabButtonVisible(class UGGMenuDataAsset* InMenuData, bool bInVisible);
	void ToggleTabButtonEnabled(class UGGMenuDataAsset* InMenuData, bool bInEnabled);
	enum class ETopBarButtonVisibility ShouldCreateMenuItem(class UGGMenuDataAsset* InMenuData);
	void SetOwningMenu(class UGGMenuUserWidget* InOwningMenu);
	void OnToggledTabButtonVisible(class UGGMenuDataAsset* InMenuData, bool bInVisible);
	void OnToggledTabButtonEnabled(class UGGMenuDataAsset* InMenuData, bool bInEnabled);
	void OnMenuEntered(const struct FGameplayTag& InTag, const struct FMenuNavigationContext& Context);
	void NavigateDirection(int32 Direction);
	void CreateMenuItems();
	void BindShouldCreateMenuItem(FDelegateProperty_ Event);
};

// 0xD8 (0x308 - 0x230)
// Class Goat2.GGTowCableActor
class AGGTowCableActor : public AActor
{
public:
	class USceneComponent*                       SceneRoot;                                         // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCableComponent*                       TowCable;                                          // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPhysicsHandleComponent*               TowPhysHandle;                                     // 0x240(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class AActor>                    HookClass;                                         // 0x248(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2ABB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RetractSpeed;                                      // 0x254(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceBehindVehicle;                             // 0x258(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CableLength;                                       // 0x25C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeBeforeRetract;                                 // 0x260(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CharacterInterpSpeed;                              // 0x264(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleTargetLocUp;                                // 0x268(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxHookDistance;                                   // 0x26C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    CableMaterial;                                     // 0x270(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHookedActor;                                     // 0x278(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHookedActorDrop;                                 // 0x288(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FHookElement                          HookElement;                                       // 0x298(0x38)(Net, RepNotify, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class AGGVehicle*                            OwnerVehicle;                                      // 0x2D0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                AttachedToActor;                                   // 0x2D8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGCharacter*                          AttachedToCharacter;                               // 0x2E0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGVehicle*                            AttachedToVehicle;                                 // 0x2E8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2ABF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMeshComponent*                        TowAttachmentMeshComp;                             // 0x2F8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMeshComponent*                        HookMeshComp;                                      // 0x300(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AGGTowCableActor* GetDefaultObj();

	void OverlapBegin(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnRep_HookElement();
	void OnHookHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void HookedVehiclePooledOrMoved(class AGGVehicle* Vehicle, bool bWasPooled);
	void HookedNPCPooledOrMoved(class AGGNPC* NPC, bool bWasPooled);
	void HookedCharacterRespawned(class AGGCharacter* Character);
};

// 0x20 (0x430 - 0x410)
// Class Goat2.GGTrackerMarkerUserWidget
class UGGTrackerMarkerUserWidget : public UGGRadarPointUserWidgetBase
{
public:
	class UImage*                                ObjectiveIcon;                                     // 0x410(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AC4[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGTrackerMarkerUserWidget* GetDefaultObj();

};

// 0x10 (0x388 - 0x378)
// Class Goat2.GGTrackerUserWidget
class UGGTrackerUserWidget : public UGGRadarUserWidgetBase
{
public:
	TArray<struct FTrackerMarkerOffsetScale>     OffsetScales;                                      // 0x378(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGTrackerUserWidget* GetDefaultObj();

	struct FVector GetOffsetScaleForTag(const struct FGameplayTag& InTag);
};

// 0xC8 (0x560 - 0x498)
// Class Goat2.GGTrinket
class AGGTrinket : public AGGQuestBase
{
public:
	struct FRadarCoordinateData                  TrinketRadarDataFound;                             // 0x498(0x58)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FRadarCoordinateData                  TrinketRadarDataNotFound;                          // 0x4F0(0x58)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                  PickupSocketName;                                  // 0x548(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       PickupPraticle;                                    // 0x550(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              KarmaParticleComp;                                 // 0x558(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AGGTrinket* GetDefaultObj();

	void PlayEffectsOnGoat(class AGGGoat* Goat);
};

// 0x168 (0x438 - 0x2D0)
// Class Goat2.GGTShirt
class AGGTShirt : public AGGPhysicsProjectile
{
public:
	class USphereComponent*                      SphereCollider;                                    // 0x2D0(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                           TShirtMesh;                                        // 0x2D8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  NPCNeck;                                           // 0x2E0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  NPCSpine;                                          // 0x2E8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  NPCHips;                                           // 0x2F0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  PlayerHead;                                        // 0x2F8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bChangePlayerAfterHit;                             // 0x300(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2AD1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UGGGoatGearInfoDataAsset*>      HeadGearAsset;                                     // 0x308(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<class UGGGoatGearInfoDataAsset*>      BodyGearAsset;                                     // 0x318(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTag                          FirefighterInstinctTag;                            // 0x328(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          BigFootInstinctTag;                                // 0x330(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          PoliceInstinctTag;                                 // 0x338(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AActor>                    BigFootRightShoe;                                  // 0x340(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AActor>                    BigFootLeftShoe;                                   // 0x348(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  LeftBigFoot;                                       // 0x350(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  RightBigFoot;                                      // 0x358(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                AchievementID;                                     // 0x360(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGNPCAppearanceManager*               AppearenceManager;                                 // 0x370(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGGStaticMeshComponent*                MeshComp;                                          // 0x378(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USkinnedMeshComponent*                 SkinnedMeshComp;                                   // 0x380(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGGGoatGearInfoDataAsset*              RandomGear;                                        // 0x388(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2AD2[0xA0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGGoat*                               CachedGoat;                                        // 0x430(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AGGTShirt* GetDefaultObj();

	void HandleOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIdex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x90 (0x2C0 - 0x230)
// Class Goat2.GGTutorial
class AGGTutorial : public AActor
{
public:
	class FString                                TutorialID;                                        // 0x230(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bActiveByDefault;                                  // 0x240(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AF8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UObject*                               TutorialObject;                                    // 0x248(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTutorialData                         TutorialData;                                      // 0x250(0x30)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTutorialCompleted;                               // 0x280(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTutorialRemoved;                                 // 0x290(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AGGPlayerController*                   OwningController;                                  // 0x2A0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FNotification>                 CreatedNotificationIDs;                            // 0x2A8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2AFA[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGTutorial* GetDefaultObj();

	void UpdateTutorial();
	bool ShouldShowTutorialActionInputStatic(class AGGPlayerController* PC, const struct FTutorialActionInputStruct& ActionInput);
	bool ShouldShowTutorial(class UGGTutorialComponent* TutorialComponent, class UObject* InTutorialObject);
	bool ShouldCompleteTutorial();
	void RemoveTutorial();
	void OnTutorialActivated(class AGGPlayerController* PC, class AGGGoat* Goat);
	void OnPlayerControllerDestroyed(class AActor* Actor);
	void OnGoatReplaced(class AGGGoat* OldGoat, class AGGGoat* NewGoat);
	void OnGamepadChanged(bool bInActive);
	bool IsTutorialShown();
	bool IsActive();
	class FString GetTutorialID(class UObject* InTutorialObject);
	class UGGTutorialComponent* GetTutorialComponent();
	TArray<class FText> GetStepOverrideDescriptionArray();
	TArray<bool> GetStepCompletionArray();
	class AGGPlayerController* GetOwningPlayer();
	class AGGGoat* GetControlledGoat();
	bool GetCompletionTutorialStep(const class FString& InID);
	TArray<class AGGPlayerController*> GetAllOwningPlayers();
	TArray<class AGGGoat*> GetAllControlledGoats();
	void CreateTutorialNotification(const struct FNotification& Notification);
	void CompleteTutorial();
	bool ActivateTutorial();
};

// 0x60 (0x110 - 0xB0)
// Class Goat2.GGTutorialComponent
class UGGTutorialComponent : public UActorComponent
{
public:
	class UDataTable*                            TutorialDataTable;                                 // 0xB0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTutorialCompleted;                               // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTutorialRemoved;                                 // 0xC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B1E[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AGGTutorial*>                   SpawnedTutorials;                                  // 0xE8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B1F[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGTutorialComponent* GetDefaultObj();

	void SpawnVehicleTutorials(class AGGCharacter* Character, class AGGVehicle* Vehicle, bool bForcePassenger);
	void OnSlowMotionToggled(bool bEnabled);
	void OnRepDriverChanged(class AGGCharacter* NewDriver);
	void OnRepAttachmentReplication(struct FRepAttachment& Attachment);
	void OnQuestCompleted(class AGGQuestBase* Quest, class AGGPlayerState* OptionalPlayerState);
	void OnMovementModeChanged(enum class EMovementMode CurrentMovement, uint8 CustomMovement, enum class EMovementMode PrevMovement, uint8 PrevCustomMovement);
	void OnMiniGameUnlocked(class UGGPlayerGameDataAsset* UnlockedGame);
	void OnInventoryUnlockedStore(class UDataAsset* Asset, const struct FGameplayTag& Context, class AGGPlayerController* OptionalPC);
	void OnInventoryUnlocked(class UDataAsset* Asset, const struct FGameplayTag& Context, class AGGPlayerController* OptionalPC);
	void OnGearUnequipped(class AGGGoat* Goat, TArray<TSubclassOf<class USceneComponent>>& GearUnequipped);
	void OnGearEquipped(class AGGGoat* Goat, TArray<TSubclassOf<class USceneComponent>>& GearEquipped);
	void OnGamepadChanged(bool bUsingGamepad);
	void OnCharacterRespawned(class AGGCharacter* OldCharacter, class AGGCharacter* NewCharacter);
	void OnCharacterExitedVehicle(class AGGCharacter* Character, class AGGVehicle* Vehicle);
	void OnCharacterEnteredVehicle(class AGGCharacter* Character, class AGGVehicle* Vehicle);
	class AGGTutorial* GetSpawnedTutorialFromID(const class FString& TutorialID, class UObject* TutorialObject);
	void BindInventory(class UGGInventory* Inventory);
	void BindGoat(class AGGGoat* Goat);
};

// 0x10 (0x2D0 - 0x2C0)
// Class Goat2.GGTutorialGearAbility
class AGGTutorialGearAbility : public AGGTutorial
{
public:
	float                                        TimeUntilAutomaticCompletion;                      // 0x2C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B20[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGTutorialGearAbility* GetDefaultObj();

	void OnGoatAbilityActivated(class AGGGoat* Goat, const struct FGameplayTagContainer& AbilityTags, class UGGGearAbility* AbilityInstance);
	void OnAbilityDown();
	void CompleteAutomatically();
};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGTutorialInterface
class IGGTutorialInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IGGTutorialInterface* GetDefaultObj();

	class FText GetTutorialText();
	class FString GetTutorialObjectID();
};

// 0x20 (0x50 - 0x30)
// Class Goat2.GGUIAudioSubsystem
class UGGUIAudioSubsystem : public UGameInstanceSubsystem
{
public:
	TArray<class UDataTable*>                    CachedDataTables;                                  // 0x30(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<TSoftObjectPtr<class UDataTable>>     UISoundDataTables;                                 // 0x40(0x10)(ZeroConstructor, Config, UObjectWrapper, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGUIAudioSubsystem* GetDefaultObj();

	void PlayUISound(class UObject* WorldContextObject, const struct FGameplayTag& SoundTag, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundConcurrency* ConcurrencySettings, class AActor* OwningActor);
	class USoundBase* GetSoundFromTag(class UObject* WorldContextObject, const struct FGameplayTag& SoundTag);
};

// 0x10 (0x70 - 0x60)
// Class Goat2.GGUnragdollSubsystem
class UGGUnragdollSubsystem : public UGGWorldSubsystem
{
public:
	TArray<struct FGGAwaitingStandup>            AwaitingStandups;                                  // 0x60(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGUnragdollSubsystem* GetDefaultObj();

};

// 0x430 (0x478 - 0x48)
// Class Goat2.GGUpdateNotifierSubsystem
class UGGUpdateNotifierSubsystem : public UGGGameInstanceSubsystem
{
public:
	uint8                                        Pad_2B23[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FUpdateNotificationData               CachedUpdateNotificationData;                      // 0x50(0xD0)(NativeAccessSpecifierPrivate)
	class FName                                  CachedUpdatePrefName;                              // 0x120(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2B24[0x350];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGUpdateNotifierSubsystem* GetDefaultObj();

	void PostLoadMapWithWorld(class UWorld* World);
	void OnLevelStartLoadingScreenRemoved();
	void OnIntroSplashComplete();
	void NotificationPopupResponse(const class FString& ID, class UObject* Object, const class FString& ButtonID, enum class EPopupResponse Response);
	class FString GetCurrentUpdateTutorialName();
	class FName GetCurrentUpdatePrefName();
};

// 0xB40 (0xDD0 - 0x290)
// Class Goat2.GGVehicle
class AGGVehicle : public APawn
{
public:
	uint8                                        Pad_2B3F[0x98];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponent*                VehicleMesh;                                       // 0x328(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         VehicleOverlapBox;                                 // 0x330(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USpringArmComponent*                   CameraSpringArm;                                   // 0x338(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               DefaultSprintArmOffset;                            // 0x340(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B40[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCameraComponent*                      Camera;                                            // 0x350(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGCameraFovController*                CameraFovController;                               // 0x358(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAbilitySystemComponent*               AbilitySystem;                                     // 0x360(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGVehicleAttributeSet*                VehicleAttributeSet;                               // 0x368(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGWaterFloatingComponent*             FloatingComp;                                      // 0x370(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGVehicleAppearanceManager*           AppearanceManager;                                 // 0x378(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UArrowComponent*                       MiddleFeeler;                                      // 0x380(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UArrowComponent*                       LeftFeeler;                                        // 0x388(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UArrowComponent*                       RightFeeler;                                       // 0x390(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UArrowComponent*                       LeftBackFeeler;                                    // 0x398(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UArrowComponent*                       RightBackFeeler;                                   // 0x3A0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*              ScrapeEffectComp;                                  // 0x3A8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAudioComponent*                       EngineAudio;                                       // 0x3B0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAudioComponent*                       CrashAudio;                                        // 0x3B8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAudioComponent*                       BrakeAudio;                                        // 0x3C0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAudioComponent*                       HornAudio;                                         // 0x3C8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAudioComponent*                       ScrapeAudio;                                       // 0x3D0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGVehicleEngineSoundController*       EngineSoundController;                             // 0x3D8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  VehicleDisplayName;                                // 0x3E0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	enum class EVehicleType                      VehicleType;                                       // 0x3F8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnorePlacementWithoutSpawnerWarning;             // 0x3F9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B41[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          CurrentArea;                                       // 0x3FC(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EVehicleState                     CurrentState;                                      // 0x404(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         EngineOn;                                          // 0x405(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanBeEntered;                                     // 0x406(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B42[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGCharacter*                          Driver;                                            // 0x408(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         FlippedOver;                                       // 0x410(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B43[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SpeedKPH;                                          // 0x414(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bVehicleInputDisabled;                             // 0x418(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B44[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EValidDrivers>             ValidDriverTypes;                                  // 0x420(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         StartAsGhostEditorPlaced;                          // 0x430(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B45[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bGenerateAppearanceEditorPlaced;                   // 0x432(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B46[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  GenerateWithRow;                                   // 0x434(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanRoamRandomly;                                   // 0x43C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ReturnToGhostAfterExit;                            // 0x43D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B47[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FHardStartRoadSpline                  StartingRoadSpline;                                // 0x440(0x10)(Edit, DisableEditOnTemplate, NoDestructor, NativeAccessSpecifierPublic)
	class UBehaviorTree*                         BehaviorTree;                                      // 0x450(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               CollisionCheckBoundsOffset;                        // 0x458(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MiddleFeelerTraceBox;                              // 0x464(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinBroadcastCrashSpeed;                            // 0x470(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StopForAfterHeadbutt;                              // 0x474(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B48[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnReachedPathTargetActor;                          // 0x480(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnReachedPathTargetLocation;                       // 0x490(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FText                                  CrashTextFormat;                                   // 0x4A0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  RanOverTextFormat;                                 // 0x4B8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  RunOverByTextFormat;                               // 0x4D0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FStartleDetailsSettings               NPCEjectStartleSettings;                           // 0x4E8(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FStartleDetailsSettings               VehicleHitStartleSettings;                         // 0x538(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UStaticMesh*                           ShellMesh;                                         // 0x588(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B49[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SpawnAppearanceRowName;                            // 0x5AC(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B4A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGameplayEffect>           SplineSpeedGameplayEffect;                         // 0x5B8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>           VehicleSpeedGameplayEffect;                        // 0x5C0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>           NPCVehSpeedGameplayEffect;                         // 0x5C8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>           SlowDownMultiplierGameplayEffect;                  // 0x5D0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bImportantVehicle;                                 // 0x5D8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B4B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnVehiclePooledOrMoved;                            // 0x5E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class AGGNPC>                    OverrideNPCDriver;                                 // 0x5F0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceManagerRelevant;                             // 0x5F8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B4C[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundCue*                             EnterSound;                                        // 0x608(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             ExitSound;                                         // 0x610(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             IgnitionSound;                                     // 0x618(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BrakeSoundThreshold;                               // 0x620(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDrifting;                                        // 0x624(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B4D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        NonBrakeSideVelocity;                              // 0x628(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BrakeVelocity;                                     // 0x62C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanExplode;                                       // 0x630(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasExploded;                                      // 0x631(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B4E[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Health;                                            // 0x634(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HealthMax;                                         // 0x638(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerDamageReduction;                             // 0x63C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             ImpactInputRange;                                  // 0x640(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             DamageOutputRange;                                 // 0x648(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SelfLaunchPower;                                   // 0x650(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplosionRadius;                                   // 0x654(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CharacterImpulseStrength;                          // 0x658(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImpulseStrength;                                   // 0x65C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<enum class ETypeOfDamage>             ValidDamageTypes;                                  // 0x660(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UParticleSystem*                       ExplosionParticle;                                 // 0x670(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            ExplosionSound;                                    // 0x678(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AGGPhysicsActor>           WreckedVehicleClass;                               // 0x680(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           WreckedVehicleMesh;                                // 0x688(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       SmokeParticle;                                     // 0x690(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       FireParticle;                                      // 0x698(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnVehicleExploded;                                 // 0x6A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        ExplosionNotifyRadius;                             // 0x6B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ExplosionChanceToPanic;                            // 0x6B4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPanicTypes                       ExplosionPanicType;                                // 0x6B8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B4F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FStartleDetailsSettings               ExplosionStartleSettings;                          // 0x6C0(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	enum class EHealthParticleState              HPState;                                           // 0x710(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B50[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystemComponent*              LowHealthSmokeComp;                                // 0x718(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*              LowHealthFireComp;                                 // 0x720(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UCameraShakeBase>          ExplosionCameraShake;                              // 0x728(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int8                                         DesiredColorMaterialIndex;                         // 0x730(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B51[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FMatElement>                   CurrentStatusEffectMaterials;                      // 0x738(0x10)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<struct FMatElement>                   CurrentOverrideMaterials;                          // 0x748(0x10)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<struct FMatElement>                   DefaultMaterials;                                  // 0x758(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FMeshDefaultMaterials>         AdditionalMeshesDefaultMaterials;                  // 0x768(0x10)(ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	float                                        CameraBlendDuration;                               // 0x778(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraArmLengthMin;                                // 0x77C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraArmLengthMax;                                // 0x780(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefaultCameraArmPitch;                             // 0x784(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    GamepadCameraInterpSpeed;                          // 0x788(0x88)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                        MinVelocityForGamepadCamera;                       // 0x810(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostDeltaFOV;                                     // 0x814(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EEasingFunc                       FovEaseFunc;                                       // 0x818(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B52[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FovEaseBlendExp;                                   // 0x81C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxFovStepSize;                                    // 0x820(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B53[0x2C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ImpactDamage;                                      // 0x850(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImpactDestructibleImpulseMultiplier;               // 0x854(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinSpeedForDamage;                                 // 0x858(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinSpeedForCharacterRagdoll;                       // 0x85C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CharacterOverlapPower;                             // 0x860(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DestructibleOverlapPower;                          // 0x864(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SelfSpinPower;                                     // 0x868(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImpulseMultiplier;                                 // 0x86C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinVelocityForDestructibleDamageApply;             // 0x870(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinimumPActorSizeForImpact;                        // 0x874(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnVehicleHit;                                      // 0x878(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class UCameraShakeBase>          VehicleDestructibleOverlapShake;                   // 0x888(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DestructibleOverlapShakeKphMax;                    // 0x890(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DestructibleOverlapShakeScalarMin;                 // 0x894(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinImpactVelocity;                                 // 0x898(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImpactTriggerMinInterval;                          // 0x89C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FImpactParticleRange>          ImpactParticleRanges;                              // 0x8A0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FVehicleCrashSound>            VehicleCrashSounds;                                // 0x8B0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        CrashSoundInterval;                                // 0x8C0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B54[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPActorImpactSettings>         PActorImpactParticleRanges;                        // 0x8C8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class UParticleSystem*                       LandingImpactParticleEffect;                       // 0x8D8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UCameraShakeBase>          LandingImpactCameraShake;                          // 0x8E0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LandingImpactEffectMinInterval;                    // 0x8E8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxAngleForLandingImpact;                          // 0x8EC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinZForceForLandingImpact;                         // 0x8F0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B55[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGGVehicleAbility>         AbilitySlot1;                                      // 0x8F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B56[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGGVehicleAbility>         AbilitySlot2;                                      // 0x908(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B57[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGGVehicleAbility>         VehicleAbility;                                    // 0x918(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B58[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UClass*>                        AlwaysLoadedGameplayCues;                          // 0x928(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FGameplayTag>                  PreloadCues;                                       // 0x938(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UClass*>                        PreloadedGameplayCueClasses;                       // 0x948(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            OnVehicleAbilityActivated;                         // 0x958(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bCarHornOn;                                        // 0x968(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2B59[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnDriverEnterVehicle;                              // 0x970(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDriverExitVehicle;                               // 0x980(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        RagdollEjectVelocityThreshold;                     // 0x990(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EjectionForce;                                     // 0x994(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RandomSpinForce;                                   // 0x998(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B5A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGCharacter*                          RightfulOwner;                                     // 0x9A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        PassengerSlots;                                    // 0x9A8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B5B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AGGCharacter*>                  Passengers;                                        // 0x9B0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, RepNotify, Protected, NativeAccessSpecifierProtected)
	bool                                         bVehicleAirBorne;                                  // 0x9C0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B5C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LastAirBorneTimeStamp;                             // 0x9C4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnVehicleAirBorneChanged;                          // 0x9C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRepDriverChanged;                                // 0x9D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B5D[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsReversing;                                      // 0x9E9(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsHandBraking;                                    // 0x9EA(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AutoInteractAtDuration;                            // 0x9EB(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EnterAsPassengerTime;                              // 0x9EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGStatusEffectManager*                StatusEffectManager;                               // 0x9F0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AGGGoat*>                       LickedBy;                                          // 0x9F8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnActorLicked;                                     // 0xA08(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnActorLickDropped;                                // 0xA18(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGGActorName                          CurrentActorName;                                  // 0xA28(0x40)(Net, Protected, NativeAccessSpecifierProtected)
	class UDataTable*                            NameModifierTable;                                 // 0xA68(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AGGCharacter*                          WaitingForDriverName;                              // 0xA70(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                DriverName;                                        // 0xA78(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  VehicleDisplayNameOverride;                        // 0xA88(0x18)(NativeAccessSpecifierPublic)
	struct FLatestInstigator                     LatestInstigator;                                  // 0xAA0(0x18)(Net, NoDestructor, NativeAccessSpecifierPrivate)
	FMulticastInlineDelegateProperty_            OnVehiclePreCatched;                               // 0xAB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            OnVehicleCatched;                                  // 0xAC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            OnVehicleReleased;                                 // 0xAD8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            ForceReleaseCatchedActors;                         // 0xAE8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class AActor*                                OurCatcher;                                        // 0xAF8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                SoonToBeCatcher;                                   // 0xB00(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B5E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FadeInMultiplier;                                  // 0xB10(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B5F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInterface*                    FadeInMasterMaterial;                              // 0xB18(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanDoFadeIn;                                      // 0xB20(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B60[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UMaterialInstanceDynamic*>      FadeInDynamicMatInstances;                         // 0xB28(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	bool                                         bInvokerActive;                                    // 0xB38(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B61[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TileGenerationRadius;                              // 0xB3C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TileRemovalRadius;                                 // 0xB40(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B62[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bActivateInterpolation;                            // 0xB4C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B63[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FClientInterpolationSettings          ClientInterpolationSettings;                       // 0xB50(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	class UWheeledVehicleMovementComponent*      WheeledMoveComp;                                   // 0xB70(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AGGVehicleAIController*                VehicleController;                                 // 0xB78(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class APlayerController*                     PlayerController;                                  // 0xB80(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2B64[0xA0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bCanBeLicked;                                      // 0xC28(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsSimulatingPhysics;                              // 0xC29(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         CurrentPawnCollisionEnabled;                       // 0xC2A(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsVehicleCollisionEnabled;                        // 0xC2B(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         IsPooled;                                          // 0xC2C(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2B65[0x163];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGVehicleSpawner*                     VehicleSpawner;                                    // 0xD90(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPhysicalMaterial*                     OriginalOverridePhysMat;                           // 0xD98(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FRecentPrimComponent>          RecentlyHitComponents;                             // 0xDA0(0x10)(ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UPhysicalMaterial*                     CurrentOverridePhysMat;                            // 0xDB0(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  TutorialText;                                      // 0xDB8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AGGVehicle* GetDefaultObj();

	bool WasHeadbuttedRecently();
	void VehicleDisturbed();
	void UpdateLatestInstigator();
	void Turn(float Value);
	bool StartHold();
	void StartGhostControl();
	void StartFollowingSpline(class UGGRoadSplineComponent* SplineComp, int32 StartIndex);
	void SlowDownVehicle(float SpeedMultiplier, float Duration);
	void SetVehicleSlowDownMultiplier(float Value);
	void SetVehicleSimulatePhysics(bool NewSimulate);
	void SetVehicleInputDisabled(bool bNewDisabled);
	void SetVehicleEnabled(bool bEnable);
	void SetVehicleCollisionEnabled(bool bEnable);
	void SetVehicleAirBorne(bool bNewAirBorne);
	void SetVehicleAbilityActiveState(bool bNewActive);
	void SetSplineSpeed(float SplineSpeed);
	void SetSimulatePhysics(bool bActive);
	void SetPhysMatOverride(class UPhysicalMaterial* NewOverride);
	void SetPawnCollisionEnabled(bool Enabled);
	void SetPathTargetActor(class AActor* NewTargetActor);
	void SetPathTarget(const struct FVector& NewLocation);
	void SetOverrideMaterial(class UMaterialInterface* Material);
	void SetNavAreaOn(bool bNewOn);
	void SetLatestInstigator(class APawn* InInstigator, const struct FGameplayTag& Interaction, float ClearAfter, bool bUnragdollReset);
	void SetInvokerActive(bool bNewActive);
	void SetForceNPCBrake(bool bNewBrake);
	void SetEngineOn(bool NewOn);
	void SetDesiredColorMaterialIndex(int32 DesiredIndex);
	void SetCanBeLicked(bool NewCanBeLicked);
	void SetBackToDefaultMats();
	void ServerSetReverse(bool NewReverse);
	void ServerSetIsHandBraking(bool NewBraking);
	void ServerRequestExitVehicle(enum class EExitReason ExitReason);
	void ServerOnOverlappedCharacterRagdolled(class ACharacter* RagdollingCharacter);
	void Scroll(bool Up);
	bool RoomForPassenger();
	void Respawn();
	void ResetVehicleSlowDown();
	void ResetVehicle(bool WasDisturbed, bool CanReturnToGhost, bool ClearBB);
	void ResetOverrideMaterial();
	void ResetHealth();
	void ResetDesiredColorMaterialIndex();
	bool RemoveStatusEffect(enum class EStatusEffectTypes TypeToRemove);
	void RecreatePhysicsState();
	bool PrepareForLick();
	void PoolVehicle();
	void PlayCrashSoundEffect(class AActor* Actor, float ImpactSize);
	void PhysicsVolumeChanged(class APhysicsVolume* NewVolume);
	void PassengerExit(class AGGCharacter* Character);
	void OverlapBegin(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnRep_VehicleSpawner();
	void OnRep_UpdatePhysMat();
	void OnRep_Passengers();
	void OnRep_IsVehicleCollisionEnabled();
	void OnRep_IsSimulatingPhysics();
	void OnRep_IsPooled();
	void OnRep_HPState();
	void OnRep_EngineOn();
	void OnRep_Driver();
	void OnRep_DesiredColorMaterialIndex();
	void OnRep_CurrentStatusEffectMaterials();
	void OnRep_CurrentPawnCollisionEnabled();
	void OnRep_CurrentOverrideMaterials();
	void OnRep_CarHornOn();
	void OnOccupantCountChanged();
	void OnHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void OnAppearanceChanged(class AGGVehicle* Vehicle, const class FString& RowName, const class FString& AppearanceString);
	void ObjectWasHeadbutted(class AGGGoat* HeadbuttingGoat);
	void MulticastVehicleImpulse(const struct FVector_NetQuantize& LinearImpulse, const struct FVector_NetQuantize& AngularImpulse);
	void MulticastVehicleAbilityActivated(const struct FGameplayTagContainer& AbilityTags);
	void MulticastTeleport(const struct FVector& Location, const struct FRotator& Rotation);
	void MulticastMoveFadeIn();
	void MulticastIgnitionSound();
	void MulticastHandleCharacterExitingVehicle(class AGGCharacter* Character, const struct FVector& Location, bool bWasDriver, bool bEjectingWithForce);
	void MulticastExplodeVehicle();
	void MulticastEnterVehicle(class AGGCharacter* Character, bool bIsDriver, class FName Socket, bool bBlendCamera);
	void MulticastCrashSound(class AActor* Actor, float ImpactSize);
	void LiftVehicleAbility();
	void LiftAbility2();
	void LiftAbility1();
	bool IsWheelInAir(int32 WheelIndex);
	bool IsVehiclePooled();
	bool IsVehicleInputDisabled();
	bool IsVehicleInAir(bool DoDownTrace, float TraceLength);
	bool IsNavAreaOn();
	bool IsLicked();
	bool IsInvokerActive();
	bool IsGoatInVehicle(class AGGGoat* Goat);
	bool IsFlippedOver();
	bool IsEngineOn();
	bool IsCharacterAPassenger(class AGGCharacter* Character);
	bool InWater();
	bool Interact(class AActor* SourceActor, float HeldFor);
	bool HasStatusEffectByType(enum class EStatusEffectTypes TypeToCheck);
	bool HasStatusEffectByClass(TSubclassOf<class AGGStatusEffectBase> StatusEffectClass);
	bool HasOccupants();
	bool HasGoatPassenger();
	bool HasGoatDriver();
	class AGGVehicleSpawner* GetVehicleSpawner();
	class UPawnMovementComponent* GetVehicleMovement();
	class UGGStatusEffectManager* GetStatusEffectManager();
	int32 GetSpeedKPH();
	float GetRequiredHoldDuration();
	TArray<class AGGPlayerController*> GetPlayersInVehicle();
	class UPhysicalMaterial* GetPhysMatOverride();
	class APhysicsVolume* GetPhysicsVolume();
	TArray<class AGGCharacter*> GetPassangers();
	float GetNPCRecentInteractDelay();
	int32 GetNPCInteractionChance();
	float GetMass();
	TArray<struct FVector> GetLocalExitPointsForCharacter(class AGGCharacter* Character, int32 PointSeparation);
	struct FVector GetLickInfo(const struct FVector& LickLocation, class FName* BoneName, struct FRotator* MeshLickRotation, struct FVector* RelativeLickLocation);
	class UMeshComponent* GetLickableActorMeshComponent();
	struct FLatestInstigator GetLatestInstigatorStruct();
	class APawn* GetLatestInstigator(struct FGameplayTag* OutInteractionType);
	class FText GetInteractTextTitle(class AGGPlayerController* InteractingPlayerController);
	class FText GetInteractTextBody(class AGGPlayerController* InteractingPlayerController);
	struct FVector GetExitLocation_K2(class AGGCharacter* Character, bool* bOutFoundFreeLocation);
	int32 GetDesiredColorMaterialIndex();
	enum class EVehicleState GetCurrentState();
	struct FGameplayTag GetCurrentArea();
	bool GetCollisionCheckBounds(struct FVector* Bounds, struct FVector* LocationOffset);
	bool GetAutoInteractPastDuration();
	TArray<class AGGGoat*> GetAllGoatsInVehicle();
	void GameplayCuesLoaded();
	void Forward(float Value);
	void ForceLickDrop();
	void ExplodeVehicle();
	void ExitVehicleAsPassenger(class AGGCharacter* Character, enum class EExitReason ExitReason);
	void ExitVehicle(enum class EExitReason ExitReason);
	void EngineUpdate(bool IsOn);
	bool EndHold(float HeldFor);
	void EjectCharacter(bool bWasStolen, bool bEjectWithForce);
	void EjectAllPassengers();
	void DoAbilityFor(float Duration, int32 Ability);
	void DelayExplodeVehicle(float Duration);
	int32 CurrentPassengerAmount();
	void ClientBroadcastCrash(class AGGGoat* Goat, class AActor* OtherActor);
	bool ClearStatusEffects();
	void CharacterExit(class AGGCharacter* Character, bool WasEjected, bool WasStolen);
	void CharacterEnter(class AGGCharacter* Character, bool AsPassanger, bool PlacedFromManager);
	bool CanEnterVehicle(enum class EValidDrivers DriverType);
	void CancelAbilities();
	bool CanBeLicked();
	bool CanBeInteractedWith(class AActor* SourceActor);
	bool CanBeHeadbutted(class AGGGoat* HeadbuttingGoat);
	void BrakeUp();
	void BrakeDown();
	void BPResetForPoolOrMove(bool ForPool);
	void BPCharacterSentFlying(class AGGCharacter* Character);
	class AGGStatusEffectBase* ApplyStatusEffect(enum class EStatusEffectTypes TypeToApply, enum class EApplicationMethod ApplicationMethod, class AActor* SpreadFrom, TSubclassOf<class AGGStatusEffectBase> StatusEffectClass, class AGGStatusEffectBase* SpreadFromStatus);
	void AddValueToVehicleSpeed(float Value);
	void AddValueToNPCVehSpeed(float Value);
	void ActorWasLicked(class AGGGoat* LickingGoat);
	void ActorStoppedBeingLicked(class AGGGoat* LickingGoat);
};

// 0x90 (0xE60 - 0xDD0)
// Class Goat2.GGVehicle_Bike
class AGGVehicle_Bike : public AGGVehicle
{
public:
	class USimpleWheeledVehicleMovementComponent* VehicleMovementComponent;                          // 0xDD0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        AirPitchControlScalar;                             // 0xDD8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        DriveTorqueScalar;                                 // 0xDDC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LeanForceScalar;                                   // 0xDE0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        InAirLeanForceScalar;                              // 0xDE4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bKillRollMomentumOnOpposingLeanInput;              // 0xDE8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2B67[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        JumpZImpulse;                                      // 0xDEC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        JumpCooldown;                                      // 0xDF0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        SteerMaxAngle;                                     // 0xDF4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        SteerAngleReduction;                               // 0xDF8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        SteerAngleInterpSpeed;                             // 0xDFC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        PedallingSpeedCap;                                 // 0xE00(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2B68[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            JumpSound;                                         // 0xE08(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        TimeToBike;                                        // 0xE10(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          RideBikeInstinctTag;                               // 0xE14(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2B69[0x44];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGVehicle_Bike* GetDefaultObj();

	void TriggerInstinct(class AGGGoat* Goat);
	void ServerPlayJumpSound();
	void ServerMove(const struct FVector_NetQuantize100& ClientLoc, const struct FRotator& ClientRot, const struct FVector_NetQuantize100& ClientVelocity, const struct FVector_NetQuantize100& ClientAngularVelocity, uint8 DriveTorque, int8 SteerAngle);
	void MulticastPlayJumpSound();
	float GetPedalRotation();
};

// 0x60 (0xE30 - 0xDD0)
// Class Goat2.GGVehicle_Boat
class AGGVehicle_Boat : public AGGVehicle
{
public:
	class UGGBoatVehicleMovementComponent*       BoatVehicleMovement;                               // 0xDD0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*              SurfaceWaterIdleEffect;                            // 0xDD8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*              SurfaceWaterMovingEffect;                          // 0xDE0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*              ThrusterWaterEffect;                               // 0xDE8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAudioComponent*                       WaterFloatingAudio;                                // 0xDF0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B6A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RequireTimeSinceSpawned;                           // 0xDFC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RequireTimeSinceDamageTaken;                       // 0xE00(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RequireMaxVelocity;                                // 0xE04(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FloatingACNewSpeed;                                // 0xE08(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2B6B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AboveCOMTraceStart;                                // 0xE10(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BelowCOMTraceEnd;                                  // 0xE14(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MovingSurfaceThreshold;                            // 0xE18(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B6C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGWaterPhysicsVolume*                 WaterPhysVolume;                                   // 0xE20(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B6D[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGVehicle_Boat* GetDefaultObj();

	class UGGBoatVehicleMovementComponent* GetBoatVehicleMovementComponent();
	void DeactivateWaterEffects();
};

// 0x70 (0xE40 - 0xDD0)
// Class Goat2.GGVehicle_Car
class AGGVehicle_Car : public AGGVehicle
{
public:
	class UGGWheeledVehicleMovementComp4W*       GGVehicleMovementComponent;                        // 0xDD0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              ExhaustParticle;                                   // 0xDD8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              BackRightDriftParticle;                            // 0xDE0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              BackLeftDriftParticle;                             // 0xDE8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBoxComponent*                         AntiPActorBox;                                     // 0xDF0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         DebugDrawLines;                                    // 0xDF8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B6E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundCue*                             BoostStartSound;                                   // 0xE00(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             BoostLoopSound;                                    // 0xE08(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             BoostEndSound;                                     // 0xE10(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAdjustCOMBasedOnSpeed;                            // 0xE18(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B6F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        VelocityConsideredFast;                            // 0xE1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        COMZOffset;                                        // 0xE20(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B70[0x1C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGVehicle_Car* GetDefaultObj();

	class UGGWheeledVehicleMovementComp4W* GetWheeledVehicleMovement();
};

// 0x10 (0xE50 - 0xE40)
// Class Goat2.GGVehicle_Car_Ambulance
class AGGVehicle_Car_Ambulance : public AGGVehicle_Car
{
public:
	class UStaticMeshComponent*                  RoofLights;                                        // 0xE40(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAudioComponent*                       SirenAudio;                                        // 0xE48(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AGGVehicle_Car_Ambulance* GetDefaultObj();

};

// 0x10 (0xE50 - 0xE40)
// Class Goat2.GGVehicle_Car_Firetruck
class AGGVehicle_Car_Firetruck : public AGGVehicle_Car
{
public:
	class UStaticMeshComponent*                  RoofLights;                                        // 0xE40(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAudioComponent*                       SirenAudio;                                        // 0xE48(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AGGVehicle_Car_Firetruck* GetDefaultObj();

};

// 0xB0 (0xEF0 - 0xE40)
// Class Goat2.GGVehicle_Car_Harvester
class AGGVehicle_Car_Harvester : public AGGVehicle_Car
{
public:
	class UStaticMeshComponent*                  HarvesterFront;                                    // 0xE40(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                  HarvesterSpinner;                                  // 0xE48(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                  HarvesterBack;                                     // 0xE50(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class URotatingMovementComponent*            SpinnerRotatingComponent;                          // 0xE58(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAudioComponent*                       SpinnerAudioComponent;                             // 0xE60(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBoxComponent*                         HarvestBox;                                        // 0xE68(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBoxComponent*                         FrontOverlapBox;                                   // 0xE70(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              ShredsSprayParticleComp;                           // 0xE78(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bFrontPartsShownFromStart;                         // 0xE80(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B72[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       ShredParticle;                                     // 0xE88(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            ShredSound;                                        // 0xE90(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPhysicsAsset*                         GoatPhysAssetOverride;                             // 0xE98(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        VehiclePower;                                      // 0xEA0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SprayOnFor;                                        // 0xEA4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsOn;                                             // 0xEA8(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsSprayOn;                                        // 0xEA9(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFrontPartsHidden;                                 // 0xEAA(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B73[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FRecentlyOverlapped>           RecentlyHarvested;                                 // 0xEB0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2B74[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FRecentlyOverlapped>           RecentlyLaunched;                                  // 0xED0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2B75[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGVehicle_Car_Harvester* GetDefaultObj();

	void TurnOffSpray();
	void SetHarvesterActive(bool NewOn);
	void OnRep_IsSprayOn();
	void OnRep_IsOn();
	void OnRep_FrontPartsHidden();
	void MulticastPlayShredEffect(const struct FVector_NetQuantize& Location);
	void HideFrontParts(bool bShouldHideParts);
	void HarvestOverlapBegin(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x20 (0xE60 - 0xE40)
// Class Goat2.GGVehicle_Car_PoliceCar
class AGGVehicle_Car_PoliceCar : public AGGVehicle_Car
{
public:
	TSubclassOf<class AGGNPC>                    PoliceClass;                                       // 0xE40(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B76[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                CurrentTargetActor;                                // 0xE58(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AGGVehicle_Car_PoliceCar* GetDefaultObj();

	void EjectPassenger();
	void EjectDriver();
};

// 0x8 (0x3B8 - 0x3B0)
// Class Goat2.GGVehicleAbility
class UGGVehicleAbility : public UGameplayAbility
{
public:
	uint8                                        Pad_2B78[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGVehicleAbility* GetDefaultObj();

	void TickAbility(float DeltaTime, class AGGVehicle* Goat);
};

// 0x48 (0x400 - 0x3B8)
// Class Goat2.GGVehicleAbility_Cannon
class UGGVehicleAbility_Cannon : public UGGVehicleAbility
{
public:
	TSubclassOf<class AGGPhysicsActor_Base>      ObjectTypeToSpawn;                                 // 0x3B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UObject*                               MeshOverride;                                      // 0x3C0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  MeshComponentTag;                                  // 0x3C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               SpawnOffsetLocation;                               // 0x3D0(0xC)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                              SpawnOffsetRotation;                               // 0x3DC(0xC)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	class FName                                  SpawnSocketName;                                   // 0x3E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          SpawnGameplayCue;                                  // 0x3F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        AppliedImpulse;                                    // 0x3F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2B79[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGVehicleAbility_Cannon* GetDefaultObj();

};

// 0x18 (0x3D0 - 0x3B8)
// Class Goat2.GGVehicleAbility_CarHorn
class UGGVehicleAbility_CarHorn : public UGGVehicleAbility
{
public:
	float                                        NotifyRadius;                                      // 0x3B8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NotifyChance;                                      // 0x3BC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ReactionCooldown;                                  // 0x3C0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          CarHornCueTag;                                     // 0x3C4(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2B7A[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGVehicleAbility_CarHorn* GetDefaultObj();

};

// 0x0 (0x3B8 - 0x3B8)
// Class Goat2.GGVehicleAbility_Harvest
class UGGVehicleAbility_Harvest : public UGGVehicleAbility
{
public:

	static class UClass* StaticClass();
	static class UGGVehicleAbility_Harvest* GetDefaultObj();

};

// 0x8 (0x3C0 - 0x3B8)
// Class Goat2.GGVehicleAbility_Siren
class UGGVehicleAbility_Siren : public UGGVehicleAbility
{
public:
	struct FGameplayTag                          SirenCueTag;                                       // 0x3B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGVehicleAbility_Siren* GetDefaultObj();

};

// 0x10 (0x3C8 - 0x3B8)
// Class Goat2.GGVehicleAbility_SpeedBoost
class UGGVehicleAbility_SpeedBoost : public UGGVehicleAbility
{
public:
	float                                        Acceleration;                                      // 0x3B8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSpeed;                                          // 0x3BC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGWheeledVehicleMovementComp4W*       MoveComp;                                          // 0x3C0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGVehicleAbility_SpeedBoost* GetDefaultObj();

};

// 0x18 (0x3D0 - 0x3B8)
// Class Goat2.GGVehicleAbility_TowCable
class UGGVehicleAbility_TowCable : public UGGVehicleAbility
{
public:
	TSubclassOf<class AGGTowCableActor>          TowCableActorClass;                                // 0x3B8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HookImpulsePower;                                  // 0x3C0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B7B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGTowCableActor*                      TowCableActor;                                     // 0x3C8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGVehicleAbility_TowCable* GetDefaultObj();

};

// 0x18 (0x350 - 0x338)
// Class Goat2.GGVehicleAIController
class AGGVehicleAIController : public AAIController
{
public:
	class UBehaviorTreeComponent*                BehaviorTreeComp;                                  // 0x338(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBlackboardComponent*                  BlackboardComp;                                    // 0x340(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGVehicle*                            ControlledVehicle;                                 // 0x348(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AGGVehicleAIController* GetDefaultObj();

	void StopBehavior(bool ClearBB);
	void StartBehavior();
};

// 0x70 (0x120 - 0xB0)
// Class Goat2.GGVehicleAppearanceManager
class UGGVehicleAppearanceManager : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnVehicleAppearanceChanged;                        // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UDataTable*                            AppearanceTable;                                   // 0xC0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AGGVehicle*                            OwnerVehicle;                                      // 0xC8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USkeletalMeshComponent*                OwnerMesh;                                         // 0xD0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                VehicleAppearance;                                 // 0xD8(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FAppearanceRepElement                 ReplicatedVehicleAppearance;                       // 0xE8(0x20)(Net, RepNotify, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2B7E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAttachmentElement>            CurrentAttachments;                                // 0x110(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGVehicleAppearanceManager* GetDefaultObj();

	void VehicleAppearanceLoaded();
	void OnRep_ReplicatedVehicleAppearance();
	class FString GetCurrentApperance();
	bool GenerateAndSetNewAppearance(bool bExcludeCurrent, const class FString& RowName);
};

// 0x40 (0x70 - 0x30)
// Class Goat2.GGVehicleAttributeSet
class UGGVehicleAttributeSet : public UAttributeSet
{
public:
	struct FGameplayAttributeData                SplineSpeedMultiplier;                             // 0x30(0x10)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                VehicleSpeedMultiplier;                            // 0x40(0x10)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                NPCVehSpeedMultiplier;                             // 0x50(0x10)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                VehicleSlowDownMultiplier;                         // 0x60(0x10)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGVehicleAttributeSet* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Goat2.GGVehicleAutoFlipComponent
class UGGVehicleAutoFlipComponent : public UActorComponent
{
public:

	static class UClass* StaticClass();
	static class UGGVehicleAutoFlipComponent* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class Goat2.GGVehicleEngineSoundController
class UGGVehicleEngineSoundController : public UActorComponent
{
public:
	class AGGVehicle*                            OwningVehicle;                                     // 0xB0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPawnMovementComponent*                OwningVehicleMovementComp;                         // 0xB8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGWheeledVehicleMovementComp4W*       OwningVehicleWheeledMovementComp;                  // 0xC0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGGBoatVehicleMovementComponent*       OwningVehicleBoatMovementComp;                     // 0xC8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B7F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGVehicleEngineSoundController* GetDefaultObj();

	void OnGearChanged(int32 PreviousGear, int32 NewGear);
	bool IsDebugging();
	struct FEngineAudioRPMOutput CalculateAudioRPM_Internal(struct FEngineAudioRPMInput& Input);
};

// 0x218 (0x240 - 0x28)
// Class Goat2.GGVehicleManager
class UGGVehicleManager : public UObject
{
public:
	uint8                                        Pad_2B88[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               VehiclePoolLocation;                               // 0x58(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ManageInterval;                                    // 0x64(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ForceRelevantFor;                                  // 0x68(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B89[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FWeightedElement_VehicleClass> DefaultVehicles;                                   // 0x70(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        LocationCooldownDelay;                             // 0x80(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LocationCooldownRadius;                            // 0x84(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InitialVelocity;                                   // 0x88(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VelocityConsideredFast;                            // 0x8C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DrivingFastMultiplier;                             // 0x90(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StartSkippingAfter;                                // 0x94(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HighVelocityThreshold;                             // 0x98(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HighVelocityMultiplier;                            // 0x9C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxIdleVehiclesPerUpdate;                          // 0xA0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxImportantIdleVehiclesPerUpdate;                 // 0xA4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxDrivenVehiclesPerUpdate;                        // 0xA8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B8A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGNPCManagerConfigAsset*              CurrentConfigAsset;                                // 0xB0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2B8B[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AGGVehicle*>                    IrrelevantVehicles;                                // 0xE0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2B8C[0x70];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSpawnLocationCooldown>        SpawnLocationCooldowns;                            // 0x160(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2B8D[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AGGVehicle*>                    AllVehicles;                                       // 0x190(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AGGVehicle*>                    ActiveVehicles;                                    // 0x1A0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AGGVehicle*>                    SplineSpawnedVehicles;                             // 0x1B0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AGGVehicle*>                    PooledVehicles;                                    // 0x1C0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FActiveVehicleAreaContainer>   ActiveVehicleAreaContainers;                       // 0x1D0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AGGRoadPathSpline*>             RegisteredRoads;                                   // 0x1E0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AGGRoadPathSpline*>             ActiveRoads;                                       // 0x1F0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FVehicleAreaSpawners>          AreaSpawners;                                      // 0x200(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FWeightedElement_VehicleClass> DrivenVehicleSpawnPool;                            // 0x210(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FWeightedElement_VehicleClass> ParkedVehicleSpawnPool;                            // 0x220(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UGGNPCManager*                         NPCManager;                                        // 0x230(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2B8E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGVehicleManager* GetDefaultObj();

	void RemoveVehicleFromSpawnPool(enum class EVehicleSpawnPool RemoveFrom, TSubclassOf<class AGGVehicle> VehicleClass);
	void PoolVehicle(class AGGVehicle* Vehicle, enum class EPoolReason Reason);
	bool GetVehiclesDisabled();
	class UGGVehicleManager* GetVehicleManager(class UObject* WorldContextObject);
	TArray<class AGGVehicle*> GetSplineSpawnedVehicles();
	TArray<class AGGVehicle*> GetPooledVehicles();
	class AGGVehicle* GetPooledVehicle(TSubclassOf<class AGGVehicle> VehicleClass);
	class UGGRoadSplineComponent* GetClosestSpline_K2(struct FVector& TestLocation, struct FVector* ClosestPointOnSpline, int32* NextPoint, bool bSkipSplinesWithEndNearest, TArray<class UGGRoadSplineComponent*>& IgnoredSplines, enum class ERoadVehicleType RoadVehicleType);
	struct FRoadPathQueryResult GetClosestRoadPath_K2(struct FVector& TestLocation, bool bSkipSplinesWithEndNearest, TArray<class UGGRoadSplineComponent*>& IgnoredSplines, TArray<class AGGRoadPathSpline*>& IgnoredRoads, enum class ERoadVehicleType RoadVehicleType);
	TArray<class AGGVehicle*> GetAllVehicles();
	TArray<class AGGVehicle*> GetActiveVehicles();
	void AddVehicleToSpawnPool(enum class EVehicleSpawnPool AddTo, TSubclassOf<class AGGVehicle> VehicleClass, int32 Weight);
};

// 0x0 (0x498 - 0x498)
// Class Goat2.GGVehicleRamp
class AGGVehicleRamp : public AGGQuestBase
{
public:

	static class UClass* StaticClass();
	static class AGGVehicleRamp* GetDefaultObj();

};

// 0xE8 (0x318 - 0x230)
// Class Goat2.GGVehicleSpawner
class AGGVehicleSpawner : public AActor
{
public:
	class USceneComponent*                       RootComp;                                          // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         Enabled;                                           // 0x238(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B91[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  AppearanceRowName;                                 // 0x23C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B92[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FWeightedElement_VehicleClass> PotentialVehicles;                                 // 0x248(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bCanUseVehicleSpawnPool;                           // 0x258(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanEditVehicleSpawnPool;                          // 0x259(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B93[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          SpawnerArea;                                       // 0x25C(0x8)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B94[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EValidDrivers>             ValidDriverTypes;                                  // 0x268(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bCanEditDriverTypes;                               // 0x278(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanBeEntered;                                     // 0x279(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanExplode;                                       // 0x27A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanRoamRandomly;                                   // 0x27B(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B95[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSoftObjectPtr<class AActor>>         CollisionIgnoredActors;                            // 0x280(0x10)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                         ShouldSpawnAtGameStart;                            // 0x290(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Driven;                                            // 0x291(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         SpawnAsGhost;                                      // 0x292(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B96[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FStartRoadSpline                      StartingRoadSpline;                                // 0x298(0x30)(Edit, NativeAccessSpecifierPublic)
	float                                        LastUsedTimestamp;                                 // 0x2C8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B97[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnVehicleSpawned;                                  // 0x2D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bIsImportantSpawner;                               // 0x2E0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B98[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGGVehicle*                            ClaimedBy;                                         // 0x2E8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B99[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGVehicleSpawner* GetDefaultObj();

	class AGGVehicle* SpawnVehicle(TSubclassOf<class AGGVehicle> SpecificVehicleClass);
	bool InitializeResetVehicle(class AGGVehicle* Vehicle);
	class AGGVehicle* GetClaimedBy(bool bEvenIfNotInitialized);
};

// 0x0 (0x318 - 0x318)
// Class Goat2.GGVehicleSpawner_Bike
class AGGVehicleSpawner_Bike : public AGGVehicleSpawner
{
public:

	static class UClass* StaticClass();
	static class AGGVehicleSpawner_Bike* GetDefaultObj();

};

// 0x0 (0x318 - 0x318)
// Class Goat2.GGVehicleSpawner_Boat
class AGGVehicleSpawner_Boat : public AGGVehicleSpawner
{
public:

	static class UClass* StaticClass();
	static class AGGVehicleSpawner_Boat* GetDefaultObj();

};

// 0x0 (0x318 - 0x318)
// Class Goat2.GGVehicleSpawner_Car
class AGGVehicleSpawner_Car : public AGGVehicleSpawner
{
public:

	static class UClass* StaticClass();
	static class AGGVehicleSpawner_Car* GetDefaultObj();

};

// 0x98 (0x1A0 - 0x108)
// Class Goat2.GGVirtualJoystickWidget
class UGGVirtualJoystickWidget : public UWidget
{
public:
	struct FTouchInputControl                    JoystickControls;                                  // 0x108(0x68)(Edit, NativeAccessSpecifierPublic)
	float                                        ActiveOpacity;                                     // 0x170(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InactiveOpacity;                                   // 0x174(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeUntilDeactive;                                 // 0x178(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeUntilReset;                                    // 0x17C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ActivationDelay;                                   // 0x180(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPreventRecenter;                                  // 0x184(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B9A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StartupDelay;                                      // 0x188(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B9B[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGVirtualJoystickWidget* GetDefaultObj();

};

// 0x50 (0x470 - 0x420)
// Class Goat2.GGVoiceChatWidget
class UGGVoiceChatWidget : public UGGNotificationUserWidget
{
public:
	TMap<int32, bool>                            TalkingState;                                      // 0x420(0x50)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGGVoiceChatWidget* GetDefaultObj();

	void Setup(int32 PlayerId, const class FString& PlayerName, const struct FLinearColor& PlayerColor, const class FString& GamerPicURL);
	void SetTalking(int32 PlayerId, bool bIsTalking);
};

// 0xF8 (0x1A8 - 0xB0)
// Class Goat2.GGVoiceOverComponent
class UGGVoiceOverComponent : public UActorComponent
{
public:
	class UAudioComponent*                       VoiceAudioComponent;                               // 0xB0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                 ValidRandomizedIdentities;                         // 0xB8(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnVoiceLineFinished;                               // 0xD8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGameplayTag                          NPCVoiceIdentity;                                  // 0xE8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGNPC_Humanoid*                       OwnerHumanoid;                                     // 0xF0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2B9F[0xA0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundAttenuation*                     VoiceAttenuation;                                  // 0x198(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USoundClass*                           VoiceSoundClassOverride;                           // 0x1A0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGVoiceOverComponent* GetDefaultObj();

	void StopCurrentVoiceline();
	void SetVoiceIdentity_BP(const struct FGameplayTag& VoiceIdentity);
	void RandomizeVoiceIdentity_BP(const TArray<struct FGameplayTag>& OverrideVoiceIdentities);
	bool PlayVoiceOver(const struct FGameplayTag& VoiceOverType, bool bReplicate, bool bCanInterruptCurrentLine, bool bCanBeStoppedByDamage);
	void OnAudioFinished();
	void MulticastPlayVoiceOver(const struct FGameplayTag& VoiceOverType, bool bCanInterruptCurrentLine, bool bCanBeStoppedByDamage);
};

// 0x138 (0x168 - 0x30)
// Class Goat2.GGVoiceOverSubSystem
class UGGVoiceOverSubSystem : public UGameInstanceSubsystem
{
public:
	TArray<TSoftObjectPtr<class UDataTable>>     VoiceLineTableAssets;                              // 0x30(0x10)(ZeroConstructor, Config, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<class UDataTable*>                    VoiceLineTables;                                   // 0x40(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<TSoftObjectPtr<class UDataTable>>     VoiceIdentityTableAssets;                          // 0x50(0x10)(ZeroConstructor, Config, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<class UDataTable*>                    NpcVoiceIdentityTables;                            // 0x60(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2BA7[0xF0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bDidCacheTable;                                    // 0x160(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2BA8[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGVoiceOverSubSystem* GetDefaultObj();

	struct FVoiceLine PickRandomWeightedCandidate(const TArray<struct FDataTableRowHandle>& Candidates);
	struct FVoiceLine GetVoiceLineBlueprint(bool* bOutSuccess, const struct FGameplayTag& LineTag, const struct FGameplayTag& Identity, TSet<struct FGameplayTag> MoodsToConsider, const struct FAreasToConsider& AreasToConsider, bool bIgnoreWeights);
	struct FVoiceLine GetVoiceLine(const struct FGameplayTag& LineTag, const struct FGameplayTag& Identity, TSet<struct FGameplayTag> MoodsToConsider, const struct FAreasToConsider& AreasToConsider, bool bIgnoreWeights);
	enum class EGender GetVoiceGender(const struct FGameplayTag& IdentityTag);
	struct FGameplayTag GetRandomVoiceIdentityTag();
	TSet<struct FGameplayTag> GetAllVoiceIdentityTags();
	bool DoesVoiceIdentityExist(const struct FGameplayTag& IdentityTag);
	bool CanVoiceBeRandomlySelected(const struct FGameplayTag& IdentityTag);
	void CacheVoiceLineTable();
};

// 0x30 (0x60 - 0x30)
// Class Goat2.GGWallrunModifierDataAsset
class UGGWallrunModifierDataAsset : public UDataAsset
{
public:
	bool                                         bZeroGravity;                                      // 0x30(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BA9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AccelerationMultiplier;                            // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSpeedMultiplier;                                // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BAA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       WallrunContinuousParticle;                         // 0x40(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       WallrunImpactParticle;                             // 0x48(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            WallrunContinuousSound;                            // 0x50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            WallrunImpactSound;                                // 0x58(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGWallrunModifierDataAsset* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Goat2.GGWallrunModifierAssetUserData
class UGGWallrunModifierAssetUserData : public UAssetUserData
{
public:
	class UGGWallrunModifierDataAsset*           DataAsset;                                         // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGWallrunModifierAssetUserData* GetDefaultObj();

};

// 0x40 (0x270 - 0x230)
// Class Goat2.GGWaterCurrentSpline
class AGGWaterCurrentSpline : public AActor
{
public:
	class USplineComponent*                      CurrentSpline;                                     // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBillboardComponent*                   SplineBillboard;                                   // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCurrentEnabled;                                   // 0x240(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BAC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CurrentSize;                                       // 0x244(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Force_Character;                                   // 0x248(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Force_CharacterRagdoll;                            // 0x24C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Force_PActor;                                      // 0x250(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Force_Vehicle;                                     // 0x254(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPullInwards;                                      // 0x258(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BAD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PullInwardsIfOutside;                              // 0x25C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InwardsForce_Character;                            // 0x260(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InwardsForce_CharacterRagdoll;                     // 0x264(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InwardsForce_PActor;                               // 0x268(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InwardsForce_Vehicle;                              // 0x26C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AGGWaterCurrentSpline* GetDefaultObj();

	bool IsLocationInsideCurrent(const struct FVector& Location);
	class USplineComponent* GetSpline();
};

// 0x90 (0x140 - 0xB0)
// Class Goat2.GGWaterFloatingComponent
class UGGWaterFloatingComponent : public UActorComponent
{
public:
	class FName                                  DefaultFloatBoneName;                              // 0xB0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FloatForce;                                        // 0xB8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FloatSpeedMultiplier;                              // 0xBC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SinkDampening;                                     // 0xC0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WaterLineCheckDist;                                // 0xC4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseCenterOfMass;                                  // 0xC8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayedEnterWaterEffect;                           // 0xC9(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BAE[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FloatingACNewSpeed;                                // 0xCC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2BAF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystemComponent*              FloatingParticleComp;                              // 0xD8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              FloatingMovingParticleComp;                        // 0xE0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              FloatingMovingFastParticleComp;                    // 0xE8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAudioComponent*                       FloatingAudioComp;                                 // 0xF0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPrimitiveComponent*                   OwnerPrimComp;                                     // 0xF8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGCharacter*                          OwnerCharacter;                                    // 0x100(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGGoat*                               OwnerGoat;                                         // 0x108(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGPhysicsActor*                       OwnerPhysActor;                                    // 0x110(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGPhysicsActor_Skeletal*              OwnerPhysActorSkel;                                // 0x118(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGVehicle*                            OwnerVehicle;                                      // 0x120(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ULSCharacterMovementComponent*         OwnerMovementComp;                                 // 0x128(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGGWaterPhysicsVolume*                 WaterPhysVolume;                                   // 0x130(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2BB0[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGWaterFloatingComponent* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGWaterInterface
class IGGWaterInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IGGWaterInterface* GetDefaultObj();

	bool InWater();
	class APhysicsVolume* GetPhysicsVolume();
};

// 0x60 (0x2D8 - 0x278)
// Class Goat2.GGWaterPhysicsVolume
class AGGWaterPhysicsVolume : public APhysicsVolume
{
public:
	uint8                                        Pad_2BB1[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bCircularWaterVolume;                              // 0x280(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCreateWaterMeshes;                                // 0x281(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableEnterExitEffects;                          // 0x282(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableFloatingEffects;                           // 0x283(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UseDataAssetFriction;                              // 0x284(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BB2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AGGWaterCurrentSpline*>         CurrentSplines;                                    // 0x288(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	bool                                         bAffectNavMesh;                                    // 0x298(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BB3[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UNavArea>                  AreaClass;                                         // 0x2A0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BB4[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGGWaterVolumeEffects*                 WaterEffects;                                      // 0x2B8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AStaticMeshActor*                      WaterPlane;                                        // 0x2C0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FRecentSplash>                 RecentSplashes;                                    // 0x2C8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AGGWaterPhysicsVolume* GetDefaultObj();

	void UpdateWaterVolume();
	class UGGWaterVolumeEffects* GetWaterVolumeEffects();
};

// 0x0 (0x2D8 - 0x2D8)
// Class Goat2.GGWaterPhysicsVolume_Replicated
class AGGWaterPhysicsVolume_Replicated : public AGGWaterPhysicsVolume
{
public:

	static class UClass* StaticClass();
	static class AGGWaterPhysicsVolume_Replicated* GetDefaultObj();

};

// 0x180 (0x1B0 - 0x30)
// Class Goat2.GGWaterVolumeEffects
class UGGWaterVolumeEffects : public UDataAsset
{
public:
	float                                        FluidFriction;                                     // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SplashDelay;                                       // 0x34(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinimumVelocityIn;                                 // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinimumVelocityOut;                                // 0x3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            EnterSplashSoundEffect;                            // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class EFloatSoundClassTypes, class USoundBase*> EnterSplashSoundEffectOverrides;                   // 0x48(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class USoundBase*                            ExitSplashSoundEffect;                             // 0x98(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class EFloatSoundClassTypes, class USoundBase*> ExitSplashSoundEffectOverrides;                    // 0xA0(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UParticleSystem*                       EnterSplashParticleSys;                            // 0xF0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnterSplashFollowActor;                            // 0xF8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BB5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       ExitSplashParticleSys;                             // 0x100(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ExitSplashFollowActor;                             // 0x108(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BB6[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            FloatingSoundEffect;                               // 0x110(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class EFloatSoundClassTypes, class USoundBase*> FloatingSoundEffectOverrides;                      // 0x118(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UParticleSystem*                       FloatingParticleSys;                               // 0x168(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       FloatingMovingParticleSys;                         // 0x170(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       FloatingMovingFastParticleSys;                     // 0x178(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinMovingFloatingVelocity;                         // 0x180(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinMovingFastFloatingVelocity;                     // 0x184(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           RectangularWaterPlane;                             // 0x188(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           CircularWaterPlane;                                // 0x190(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    WaterMaterial;                                     // 0x198(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    SecondWaterMaterial;                               // 0x1A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            BilboardTexture;                                   // 0x1A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGGWaterVolumeEffects* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGWeightedElement
class UGGWeightedElement : public UObject
{
public:

	static class UClass* StaticClass();
	static class UGGWeightedElement* GetDefaultObj();

};

// 0x1C8 (0x5D8 - 0x410)
// Class Goat2.GGWheeledVehicleMovementComp4W
class UGGWheeledVehicleMovementComp4W : public UWheeledVehicleMovementComponent4W
{
public:
	class AGGVehicle*                            OwningVehicle;                                     // 0x410(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NPCDragCoefficient;                                // 0x418(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NPCMaxRPM;                                         // 0x41C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    NPCTorqueCurve;                                    // 0x420(0x88)(Edit, NativeAccessSpecifierPublic)
	float                                        AirRollControlScalar;                              // 0x4A8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AirPitchControlScalar;                             // 0x4AC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAirControlEnabled;                                // 0x4B0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BB9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SlipperyLatStiffValue;                             // 0x4B4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlipperyLatStiffMaxLoad;                           // 0x4B8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlipperyLongStiffValue;                            // 0x4BC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTireConfig*                           SlipperyTireConfig;                                // 0x4C0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlipperyCheckInterval;                             // 0x4C8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVehicleHandling                      CurrentHandlingSettings;                           // 0x4CC(0x8)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BBA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class APlayerController*                     CurrentPC;                                         // 0x4D8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class APlayerCameraManager*                  CurrentCameraManager;                              // 0x4E0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2BBB[0xF0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGWheeledVehicleMovementComp4W* GetDefaultObj();

	void SetWheelStiffnessAndFriciton(int32 WheelIndex, class UTireConfig* TireConfig, float LatStiffValue, float LatStiffMaxLoad, float LongStiffValue);
	void SetIdleBrakeInput(float IdleBrake);
	void ResetToInitalWheelValues(int32 WheelIndex);
	void OnRep_HandlingSettings();
	float GetRawThrottleInput();
	float GetRawSteeringInput();
};

// 0x50 (0x320 - 0x2D0)
// Class Goat2.GGWheelerDealerProjectile
class AGGWheelerDealerProjectile : public AGGPhysicsProjectile
{
public:
	TArray<TSubclassOf<class AGGVehicle>>        VehicleClasses;                                    // 0x2D0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                        MinYawRotation;                                    // 0x2E0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxYawRotation;                                    // 0x2E4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImpulseForce;                                      // 0x2E8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageAmount;                                      // 0x2EC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageRadius;                                      // 0x2F0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BBC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       SuccessParticles;                                  // 0x2F8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       FailParticles;                                     // 0x300(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            SuccessSound;                                      // 0x308(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            FailSound;                                         // 0x310(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                OwningGoat;                                        // 0x318(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AGGWheelerDealerProjectile* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.GGWidgetBlueprintLibrary
class UGGWidgetBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UGGWidgetBlueprintLibrary* GetDefaultObj();

	void ToggleGearAsFavorite(class UGGGoatGearInfoDataAsset* DataAsset, class AGGPlayerController* PC, bool* bOutNewFavorite);
	class FText TimecodeToPlaytimeText(struct FTimecode& Timecode);
	void SortListElementsObject(class UObject* Target, TArray<class UObject*>& ElementsToSort, const TArray<struct FGameplayTag>& SortingPasses, bool bStable);
	void SortListElementsList(class UObject* Target, TArray<class UObject*>& ElementsToSort, const TArray<struct FGameplayTag>& SortingPasses, bool bStable);
	void SetupListNavigation(class UPanelWidget* List, FDelegateProperty_ InCustomDelegate);
	void SetGearAsFavorite(class UGGGoatGearInfoDataAsset* DataAsset, class AGGPlayerController* PC, bool bFavorite);
	void RemoveRadarCoordinateDataActor(class AActor* Actor);
	bool RemovePopup(class APlayerController* PC, const class FString& ID, enum class EPopupResponse Response);
	void RemoveNotification(class APlayerController* PC, const struct FGameplayTag& Tag, const class FString& ID, const struct FGameplayTag& ContentTag, enum class ENotificationCommand Command);
	bool RemoveMenuContext(class AGGPlayerController* PC, const struct FGameplayTag& MenuTag, const struct FMenuNavigationContext& Context);
	void RemoveHUDEffectSources(class AGGPlayerController* PC, const struct FGameplayTag& SourceTag, const struct FGameplayTagContainer& EffectTags, const struct FGameplayTagContainer& Targets);
	bool RemoveHUDEffectSource(class AGGPlayerController* PC, const struct FGameplayTag& SourceTag, const struct FGameplayTag& EffectTag, const struct FGameplayTagContainer& Targets);
	void RemoveAllHUDEffectsFromSource(class AGGPlayerController* PC, const struct FGameplayTag& SourceTag);
	class UWidget* NavigateList(class UPanelWidget* List, enum class EUINavigation Navigation, bool bWrap, bool bSkipDisabledEntries);
	struct FVector2D MeasureFont(class FText& Text, struct FSlateFontInfo& InFontInfo, float FontScale);
	struct FPopupDataRow MakePopupDataRow(class FText Title, class FText Body, enum class EPopupButtonLayout ButtonLayout, const TArray<struct FPopupButton>& OverrideButtonLayout, TSoftClassPtr<class UGGPopupUserWidget> OverrideClass);
	struct FMenuNavigationContext MakeMenuNavigationContextStruct(const class FString& ID, class UObject* Asset, const struct FGameplayTag& Tag);
	struct FEffectSourceTargetsStruct MakeEffectSourceTargetStruct(const struct FGameplayTagContainer& Source, const struct FGameplayTagContainer& Targets);
	struct FActionHintStruct MakeActionHintStruct(class FName ActionName, class FText ActionDescription, class FText ActionOverride, enum class EActionHintPosition Position, enum class EActionHintVisibility Visibility, bool Interactable, bool Enabled);
	bool IsWhitespace(const class FString& Char);
	bool IsWaypoint(const struct FRadarCoordinateData& Data);
	bool IsMenuNavContextValid(const struct FMenuNavigationContext& Context);
	bool IsKeyFromAction(class APlayerController* PC, struct FKey& InKey, class FName InAction);
	bool IsKeyEventFromAction(class APlayerController* PC, struct FKeyEvent& InKeyEvent, class FName InAction);
	bool IsGearFavorite(class UGGGoatGearInfoDataAsset* DataAsset, class AGGPlayerController* PC);
	void InvalidateGameWindow(class UGGGameViewportClient* GameViewportClient);
	void InvalidateAllWidgets(bool bClearResourcesImmediately);
	bool HasHUDEffectSource(class AGGPlayerController* PC, const struct FGameplayTag& EffectTag);
	int32 GetUserIndexFromFocusEvent(const struct FFocusEvent& FocusEvent);
	class FText GetPrimaryDisplayNameForAction(class APlayerController* PC, class FName Action);
	float GetPlayerScreenDPIScale(class APlayerController* PC, float* OutAspectRatio);
	class FText GetPlayerNameWithColor(class AGGPlayerState* PlayerState);
	class UGGGoatGearInfoDataAsset* GetNextSortedGearFromFilters(class AGGPlayerController* PC, const TArray<struct FGameplayTag>& SortingPasses, const TArray<struct FGameplayTag>& FilterPasses);
	int32 GetNestedRangeIndex(int32 RangeSize, int32 NestedRangeSize, int32 NestedRangePadding, int32 ValueIndex, int32 PrevRangeOffset, int32* OutNestedRangeStartOffset);
	struct FKey GetKeyFromKeyEvent(struct FKeyEvent& Event);
	class FName GetKeyFName(const struct FKey& Key);
	int32 GetHashFromString(const class FString& InString);
	class UGGGameViewportClient* GetGGGameViewportClient(class UObject* WorldContextObject);
	class UGGUserWidget* GetFocusedChild(class UPanelWidget* Container, int32* OutIndex);
	class FText GetDisplayNameForKey(const struct FKey& Key);
	struct FLinearColor GetColorFromStringHash(const class FString& InString, const struct FLinearColor& ReferenceColor, bool bUseFullRGB);
	TArray<class FString> GetCharArrayFromText(class FText InText);
	enum class EFocusCause GetCauseFromFocusEvent(const struct FFocusEvent& FocusEvent);
	TArray<class FName> GetActionsForKey(class APlayerController* PC, struct FKey& Key, bool bIncludeInverse);
	class FText GetAbbreviatedTextFromWidth(class FText InText, const struct FSlateFontInfo& Font, int32 Width, class FText Format);
	class FText GetAbbreviatedText(class FText InText, int32 Limit, class FText Format);
	void FilterListElementsObject(class UObject* Target, TArray<class UObject*>& ElementsToFilter, const TArray<struct FGameplayTag>& FilterPasses);
	void FilterListElementsList(class UObject* Target, TArray<class UObject*>& ElementsToFilter, const TArray<struct FGameplayTag>& FilterPasses);
	bool DoWidgetsIntersect(class UWidget* WidgetA, class UWidget* WidgetB, bool bUseLayoutRect);
	void DelayNotifications(class APlayerController* PC, const struct FGameplayTag& Tag, float Delay);
	bool CreatePopupCustom(class APlayerController* PC, const class FString& ID, const struct FPopupDataRow& Data, FDelegateProperty_ Event, class UGGPopupUserWidget** OutWidget);
	bool CreatePopup(class APlayerController* PC, const class FString& ID, FDelegateProperty_ Event, class UGGPopupUserWidget** OutWidget);
	void CreateNotificationExplicitBlueprintLocal(class UObject* WorldContextObject, const struct FNotification& Notification);
	void CreateNotificationBlueprintLocal(class UObject* WorldContextObject, const struct FGameplayTag& Tag, class FText Title, class FText Body, const class FString& ID, const struct FNotificationProperties& Properties);
	class FText AsTimeWithFormat_DateTime(struct FDateTime& In, enum class EDateTimeStyleBP Format);
	class FText AsDateWithFormat_DateTime(struct FDateTime& InDateTime, enum class EDateTimeStyleBP Format);
	void AddRadarCoordinateDataActor(class AActor* Actor);
	void AddMenuContext(class AGGPlayerController* PC, const struct FGameplayTag& MenuTag, const struct FMenuNavigationContext& Context, int32 Priority, float Duration, bool bHold);
	void AddHUDEffectSources(class AGGPlayerController* PC, const struct FGameplayTag& SourceTag, const struct FGameplayTagContainer& EffectTags, const struct FGameplayTagContainer& Targets);
	void AddHUDEffectSource(class AGGPlayerController* PC, const struct FGameplayTag& SourceTag, const struct FGameplayTag& EffectTag, const struct FGameplayTagContainer& Targets);
};

// 0x10 (0x278 - 0x268)
// Class Goat2.GGWorldAreaVolume
class AGGWorldAreaVolume : public AVolume
{
public:
	struct FGameplayTag                          WorldArea;                                         // 0x268(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LogOverlaps;                                       // 0x270(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BE3[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGWorldAreaVolume* GetDefaultObj();

	void OverlapEnd(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OverlapBegin(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x30 (0x58 - 0x28)
// Class Goat2.GGWorldCollectionsSave
class UGGWorldCollectionsSave : public USaveGame
{
public:
	int32                                        SelectedWorldCollectionSlotIndex;                  // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2BE4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FWorldCollection>              WorldCollections;                                  // 0x30(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	int32                                        LastWorldCollectionSlotIndex;                      // 0x40(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2BE5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                LastLevelDataLoaded;                               // 0x48(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGGWorldCollectionsSave* GetDefaultObj();

};

// 0x60 (0x138 - 0xD8)
// Class Goat2.GGWorldSave
class UGGWorldSave : public UGGSaveGameBase
{
public:
	uint32                                       ChaosTokensCollected;                              // 0xD8(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BE8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        ChaosCollectedSourceIDs;                           // 0xE0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	struct FVector                               GameStartLocation;                                 // 0xF0(0xC)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BE9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                LastEnteredGoatTower;                              // 0x100(0x10)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        SyncedGoatTowers;                                  // 0x110(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	int32                                        UnlockedCastleStretchgoals;                        // 0x120(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                 WorldIdentifier;                                   // 0x124(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2BEA[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGGWorldSave* GetDefaultObj();

	struct FGuid GetWorldIdentifier();
	TArray<class FString> GetCollectedSourceIDs();
	bool AddChaosToTotal(uint32 ChaosToAdd, const class FString& AcquisitionID, bool bAllowRecurring);
};

// 0x100 (0x4B0 - 0x3B0)
// Class Goat2.GGWorldSettings
class AGGWorldSettings : public AWorldSettings
{
public:
	bool                                         bUsePActorManager;                                 // 0x3B0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowTutorialsInEditorPlay;                        // 0x3B1(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseRadarComponent;                                // 0x3B2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAutoEquipSavedGoatGear;                           // 0x3B3(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowRestart;                                     // 0x3B4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseNPCAndVehicleManager;                          // 0x3B5(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsMenuLevel;                                      // 0x3B6(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BEB[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class ACameraActor>           MapCameraActor;                                    // 0x3B8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             GlobalMapOffset;                                   // 0x3E0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGGPlayerWorldAreaDataAsset*           PlayerWorldDataAsset;                              // 0x3E8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             GlobalMapLimitsScaled;                             // 0x3F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class AGGIntro>               DefaultIntro;                                      // 0x3F8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class AGGIntro>               PostBossIntro;                                     // 0x420(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class AGGSkyLightManager>     SkyLightManager;                                   // 0x448(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIntroIgnorePIE;                                   // 0x470(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIntroIgnoreSaveFile;                              // 0x471(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableSoundTrack;                                // 0x472(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BEC[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundMix*                             MasterSoundMix;                                    // 0x478(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundClass*                           MasterSoundClass;                                  // 0x480(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundClass*                           SFXSoundClass;                                     // 0x488(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundClass*                           UISoundClass;                                      // 0x490(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundClass*                           VoiceSoundClass;                                   // 0x498(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundClass*                           MusicSoundClass;                                   // 0x4A0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSaveGameStartLocation;                            // 0x4A8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BED[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGWorldSettings* GetDefaultObj();

};

// 0x0 (0x230 - 0x230)
// Class Goat2.GGWreckableActor
class AGGWreckableActor : public AActor
{
public:

	static class UClass* StaticClass();
	static class AGGWreckableActor* GetDefaultObj();

};

// 0x0 (0x240 - 0x240)
// Class Goat2.GGWreckableStaticActor
class AGGWreckableStaticActor : public AStaticMeshActor
{
public:

	static class UClass* StaticClass();
	static class AGGWreckableStaticActor* GetDefaultObj();

	void HandleOnTurnedPhys(class AActor* OwningActor, class UGGStaticMeshComponent* GGMeshComponent, class AGGPhysicsActor_Base* PhysActor);
};

// 0xA8 (0xD8 - 0x30)
// Class Goat2.LSAnimationCollection
class ULSAnimationCollection : public UDataAsset
{
public:
	class USkeleton*                             SkeletalMeshFilter;                                // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         LadderClimbing;                                    // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         Riding;                                            // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         BikeDriving;                                       // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         VehicleDriving;                                    // 0x50(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         VehicleDrivingAsPassenger;                         // 0x58(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         Wallrunning;                                       // 0x60(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpace1D*                         Grinding;                                          // 0x68(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         GrindBrake;                                        // 0x70(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         JumpStart;                                         // 0x78(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         Landing;                                           // 0x80(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpace1D*                         Falling;                                           // 0x88(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpace*                           Flying;                                            // 0x90(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         TrickRotation;                                     // 0x98(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         PerfectJump;                                       // 0xA0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpace*                           Swimming;                                          // 0xA8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         StartHeadbuttCharge;                               // 0xB0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpace*                           HeadbuttChargeWalking;                             // 0xB8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAimOffsetBlendSpace*                  AirLeaning;                                        // 0xC0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         IdlePose;                                          // 0xC8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAimOffsetBlendSpace*                  AimOffset;                                         // 0xD0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ULSAnimationCollection* GetDefaultObj();

};

// 0x8B8 (0xB70 - 0x2B8)
// Class Goat2.LSAnimInstance_MovementStates
class ULSAnimInstance_MovementStates : public UAnimInstance
{
public:
	class ULSAnimationCollection*                MovementStatesAnimation;                           // 0x2B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseConstantInterpSpeedForUnderWater;              // 0x2C0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2BEF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        UnderWaterPitchRotationSpeed;                      // 0x2C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UnderWaterToHorizontalRotationSpeed;               // 0x2C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLSAnimationSpeeds                    AnimSpeeds;                                        // 0x2CC(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        MaxPlayRate;                                       // 0x2DC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               VisualDebugStringOffset;                           // 0x2E0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FColor                                VisualDebugStringColor;                            // 0x2EC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLSAnimInstanceProxy_MovementStates   Proxy;                                             // 0x2F0(0x870)(BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2BF0[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ULSAnimInstance_MovementStates* GetDefaultObj();

	void OnMovementSpeedsChanged(class ULSCharacterMovementComponent* MovementComp);
	void OnMovementModeChanged(enum class EMovementMode NewMode, enum class EMovementMode PrevMode, uint8 NewCustomMode, uint8 PrevCustomMode, class ULSCharacterMovementComponent* MovementComp);
	void OnExitingVehicle(class AGGCharacter* Character, class AGGVehicle* Vehicle);
	void OnEnteringVehicle(class AGGCharacter* Character, class AGGVehicle* Vehicle);
	class UBlendSpace* GetFlyingBlendSpace();
};

// 0xA8 (0x360 - 0x2B8)
// Class Goat2.LSAnimInstance_PostProcess
class ULSAnimInstance_PostProcess : public UAnimInstance
{
public:
	class ULSAnimationCollection*                Animations;                                        // 0x2B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AimOffsetDeadAngle;                                // 0x2C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RagdollBlendOutTime;                               // 0x2C4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RagdollBlendOutTimeWhileFlying;                    // 0x2C8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2BF2[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AirLeanAlpha;                                      // 0x2E8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               MoveDirection;                                     // 0x2EC(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             AimOffset;                                         // 0x2F8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AimOffsetAlpha;                                    // 0x300(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsRagdoll;                                        // 0x304(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2BF3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RootBoneAdjustmentAlpha;                           // 0x308(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               RootBoneTargetLocation;                            // 0x30C(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              RootBoneTargetRotation;                            // 0x318(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2BF4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPoseSnapshot                         PoseSnapshot;                                      // 0x328(0x38)(BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ULSAnimInstance_PostProcess* GetDefaultObj();

	void OnUnRagdoll(bool bRagdollOnGround, class ULSCharacterMovementComponent* MovementComp, class ACharacter* UnRagdolledCharacter, struct FRagdollStateChangeSettings& StateChangeSettings);
	void OnRagdolling(class ULSCharacterMovementComponent* MovementComp, class ACharacter* RagdollingCharacter, struct FRagdollStateChangeSettings& StateChangeSettings);
	void OnFinishStandingUp(class ULSCharacterMovementComponent* MovementComp, class ACharacter* Character);
	float GetUnRagdollBlendTime();
};

// 0x7E8 (0xAA0 - 0x2B8)
// Class Goat2.LSAnimInstanceDirectionBlending
class ULSAnimInstanceDirectionBlending : public UAnimInstance
{
public:
	uint8                                        Pad_2BF6[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDirectionBlendingProxy               Proxy;                                             // 0x2C0(0x7E0)(BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ULSAnimInstanceDirectionBlending* GetDefaultObj();

	class FString GetDirectionWeightAsString(bool bCompact);
	struct FLSDirectionBlend CalculateDirectionWeights(struct FRotator& CharacterRotation, struct FVector& CharacterVelocity);
};

// 0xC8 (0x380 - 0x2B8)
// Class Goat2.LSAnimInstanceLayerBlending
class ULSAnimInstanceLayerBlending : public UAnimInstance
{
public:
	struct FLayerCurves                          LayerCurves;                                       // 0x2B8(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FBasePoseAdditiveAlphaCurves          AdditiveBaseLayerCurves;                           // 0x2E8(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        LegsLayerAlpha;                                    // 0x338(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PelvisLayerAlpha;                                  // 0x33C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpineLayerAlpha;                                   // 0x340(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HeadLayerAlpha;                                    // 0x344(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ArmLeftLayerAlpha;                                 // 0x348(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ArmRightLayerAlpha;                                // 0x34C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpineAdditiveAlpha;                                // 0x350(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HeadAdditiveAlpha;                                 // 0x354(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ArmRightAdditiveAlpha;                             // 0x358(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ArmLeftAdditiveAlpha;                              // 0x35C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ArmRightMeshSpaceAlpha;                            // 0x360(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ArmRightLocalSpaceAlpha;                           // 0x364(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ArmLeftMeshSpaceAlpha;                             // 0x368(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ArmLeftLocalSpaceAlpha;                            // 0x36C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HandLeftAlpha;                                     // 0x370(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HandRightAlpha;                                    // 0x374(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2BF7[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ULSAnimInstanceLayerBlending* GetDefaultObj();

};

// 0x30 (0x60 - 0x30)
// Class Goat2.LSDebugParameters
class ULSDebugParameters : public UDataAsset
{
public:
	struct FColor                                StateColor;                                        // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                DebugSectionColor;                                 // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                MovementSpeedsColor;                               // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                DebugKeysColor;                                    // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                ControlRotationArrowColor;                         // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                TargetRotationArrowColor;                          // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                CharacterRotationArrowColor;                       // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                MovementInputArrowColor;                           // 0x4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                LastMovementInputArrowColor;                       // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                VelocityArrowColor;                                // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                LastVelocityArrowColor;                            // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BF8[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ULSDebugParameters* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Goat2.RagdollStateChangeSettingsLibrary
class URagdollStateChangeSettingsLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class URagdollStateChangeSettingsLibrary* GetDefaultObj();

	struct FRagdollStateChangeSettings GetPreset_IgnoreTime();
	struct FRagdollStateChangeSettings GetPreset_IgnoreMaxVelocity();
	struct FRagdollStateChangeSettings GetPreset_ForceChange();
	struct FRagdollStateChangeSettings GetPreset_Default();
};

// 0x18 (0x48 - 0x30)
// Class Goat2.LSRagdollSyncParameters
class ULSRagdollSyncParameters : public UDataAsset
{
public:
	float                                        TeleportThresholdDistance;                         // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LowVelocityThreshold;                              // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LowVelocitySyncMultiplier;                         // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinSyncVelocity;                                   // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SyncAcceptanceDistance;                            // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BF9[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ULSRagdollSyncParameters* GetDefaultObj();

};

// 0x8 (0x4D0 - 0x4C8)
// Class Goat2.LSTestCharacter
class ALSTestCharacter : public ACharacter
{
public:
	uint8                                        Pad_2BFA[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ALSTestCharacter* GetDefaultObj();

};

// 0x30 (0x60 - 0x30)
// Class Goat2.LSTurnInPlaceNotify
class ULSTurnInPlaceNotify : public UAnimNotifyState
{
public:
	bool                                         bIsRightTurn;                                      // 0x30(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BFB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  RotationAngleCurve;                                // 0x34(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RotationRateScaleCurve;                            // 0x3C(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BFC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           RotationCurveAsset;                                // 0x48(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStopMontageWhenMoving;                            // 0x50(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BFD[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ULSTurnInPlaceNotify* GetDefaultObj();

};

// 0xF0 (0x118 - 0x28)
// Class Goat2.PrefsStore
class UPrefsStore : public USaveGame
{
public:
	TMap<class FName, bool>                      BoolMap;                                           // 0x28(0x50)(NativeAccessSpecifierPublic)
	TMap<class FName, float>                     NumberMap;                                         // 0x78(0x50)(NativeAccessSpecifierPublic)
	TMap<class FName, class FString>             StringMap;                                         // 0xC8(0x50)(NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPrefsStore* GetDefaultObj();

};

// 0x40 (0x68 - 0x28)
// Class Goat2.PrefsEvents
class UPrefsEvents : public UObject
{
public:
	FMulticastInlineDelegateProperty_            BoolChanged;                                       // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            FloatChanged;                                      // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            StringChanged;                                     // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            ValueChanged;                                      // 0x58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPrefsEvents* GetDefaultObj();

	void PrefValueChanged__DelegateSignature(class FName Name);
	void PrefStringChanged__DelegateSignature(class FName Name);
	void Prefs(const class FString& Cmd);
	void PrefFloatChanged__DelegateSignature(class FName Name);
	void PrefBoolChanged__DelegateSignature(class FName Name);
	void Pref(const class FString& Cmd);
};

// 0x0 (0x28 - 0x28)
// Class Goat2.Prefs
class UPrefs : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPrefs* GetDefaultObj();

	void SetString(class FName Key, const class FString& Value);
	void SetInt(class FName Key, int32 Value);
	void SetFloat(class FName Key, float Value);
	void SetBool(class FName Key, bool Value);
	TMap<class FName, class FString> GetStringMap();
	class FString GetString(class FName Key, const class FString& Default);
	TMap<class FName, float> GetNumberMap();
	int32 GetInt(class FName Key, int32 Default);
	float GetFloat(class FName Key, float Default);
	class UPrefsEvents* GetEvents();
	TMap<class FName, bool> GetBoolMap();
	bool GetBool(class FName Key, bool Default);
	void Del(class FName Key);
};

// 0x0 (0x30 - 0x30)
// Class Goat2.GGSaveGameSubsystem
class UGGSaveGameSubsystem : public UEngineSubsystem
{
public:

	static class UClass* StaticClass();
	static class UGGSaveGameSubsystem* GetDefaultObj();

};

// 0x48 (0xB8 - 0x70)
// Class Goat2.UBTService_GGAnnoyingActors
class UUBTService_GGAnnoyingActors : public UBTService
{
public:
	TSubclassOf<class AActor>                    ClassToLookFor;                                    // 0x70(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AnnoyanceDistance;                                 // 0x78(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CloseDistance;                                     // 0x7C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRequireLineOfSight;                               // 0x80(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C00[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MildlyAnnoyanceThresholdTime;                      // 0x84(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          MildlyAnnoyanceVoiceOver;                          // 0x88(0x8)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SeriouslyAnnoyanceThresholdTime;                   // 0x90(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          AgitatedVoiceOver;                                 // 0x94(0x8)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanPlayAnnoyanceAnimations;                       // 0x9C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C01[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ChanceToBecomeAngry;                               // 0xA0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C02[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGGAnnoyingActor>              AnnoyingActors;                                    // 0xA8(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UUBTService_GGAnnoyingActors* GetDefaultObj();

};

// 0x20 (0x250 - 0x230)
// Class Goat2.GGMissingActor
class AGGMissingActor : public AActor
{
public:
	class UBoxComponent*                         BoxComponent;                                      // 0x230(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C03[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGGMissingActor* GetDefaultObj();

};

// 0xE0 (0x150 - 0x70)
// Class Goat2.UBTService_GGDefendArea
class UUBTService_GGDefendArea : public UBTService
{
public:
	enum class ENoticeBehaviour                  NoticeBehaviour;                                   // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2C04[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SurroundingAreaDistance;                           // 0x74(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CloseEnoughDistance;                               // 0x78(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ChaseDistanceFromGuardedArea;                      // 0x7C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bNoticeChangesWhenAway;                            // 0x80(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2C05[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                LostObjectKey;                                     // 0x88(0x28)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                CorrectLocationKey;                                // 0xB0(0x28)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                TargetGoatKey;                                     // 0xD8(0x28)(Edit, Protected, NativeAccessSpecifierProtected)
	TArray<class AActor*>                        ProtectedPActors;                                  // 0x100(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2C06[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGGStolenActor>                StolenActors;                                      // 0x118(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class AGGMissingActor*>               MissingActors;                                     // 0x128(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class AGGAIController_Humanoid*              AIOwner;                                           // 0x138(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBlackboardComponent*                  BlackboardComponent;                               // 0x140(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2C07[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UUBTService_GGDefendArea* GetDefaultObj();

	void OnStolenActorDestroyed(class AActor* DestroyedActor);
	void OnProtectedActorLicked(class AActor* LickedActor, class AGGGoat* LickingGoat);
	void OnProtectedActorHeadbutted(class UObject* HeadbuttedObject, class AGGGoat* HeadbuttingGoat);
};

}


